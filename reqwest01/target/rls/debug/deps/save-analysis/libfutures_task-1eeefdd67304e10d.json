{"config":{"output_file":null,"full_docs":false,"pub_only":true,"reachable_only":true,"distro_crate":false,"signatures":false,"borrow_data":false},"version":"0.19.1","compilation":{"directory":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-task-0.3.21","program":"C:\\Users\\admin\\.rustup\\toolchains\\stable-x86_64-pc-windows-msvc\\bin\\rls.exe","arguments":["--crate-name","futures_task","--edition=2018","C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-task-0.3.21\\src\\lib.rs","--json=diagnostic-rendered-ansi,artifacts,future-incompat","--crate-type","lib","--emit=dep-info,metadata","-C","embed-bitcode=no","-C","debuginfo=2","-C","metadata=1eeefdd67304e10d","-C","extra-filename=-1eeefdd67304e10d","--out-dir","f:\\sea-orm-demo\\reqwest01\\target\\rls\\debug\\deps","-L","dependency=f:\\sea-orm-demo\\reqwest01\\target\\rls\\debug\\deps","--cap-lints","allow","--error-format=json","--sysroot","C:\\Users\\admin\\.rustup/toolchains/stable-x86_64-pc-windows-msvc"],"output":"f:\\sea-orm-demo\\reqwest01\\target\\rls\\debug\\deps\\libfutures_task-1eeefdd67304e10d.rmeta"},"prelude":{"crate_id":{"name":"futures_task","disambiguator":[1969084734240650573,0]},"crate_root":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-task-0.3.21\\src","external_crates":[{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-task-0.3.21\\src\\lib.rs","num":1,"id":{"name":"core","disambiguator":[1507510987272037120,0]}},{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-task-0.3.21\\src\\lib.rs","num":2,"id":{"name":"compiler_builtins","disambiguator":[3803325750332457499,0]}},{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-task-0.3.21\\src\\lib.rs","num":3,"id":{"name":"rustc_std_workspace_core","disambiguator":[4223354511651166533,0]}}],"span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-task-0.3.21\\src\\lib.rs","byte_start":0,"byte_end":1427,"line_start":1,"line_end":50,"column_start":1,"column_end":70}},"imports":[{"kind":"Use","ref_id":{"krate":0,"index":18},"span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-task-0.3.21\\src\\lib.rs","byte_start":597,"byte_end":607,"line_start":19,"line_end":19,"column_start":24,"column_end":34},"alias_span":null,"name":"LocalSpawn","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":15},"span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-task-0.3.21\\src\\lib.rs","byte_start":609,"byte_end":614,"line_start":19,"line_end":19,"column_start":36,"column_end":41},"alias_span":null,"name":"Spawn","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":21},"span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-task-0.3.21\\src\\lib.rs","byte_start":616,"byte_end":626,"line_start":19,"line_end":19,"column_start":43,"column_end":53},"alias_span":null,"name":"SpawnError","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":114},"span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-task-0.3.21\\src\\lib.rs","byte_start":1195,"byte_end":1204,"line_start":43,"line_end":43,"column_start":29,"column_end":38},"alias_span":null,"name":"FutureObj","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":80},"span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-task-0.3.21\\src\\lib.rs","byte_start":1206,"byte_end":1220,"line_start":43,"line_end":43,"column_start":40,"column_end":54},"alias_span":null,"name":"LocalFutureObj","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":135},"span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-task-0.3.21\\src\\lib.rs","byte_start":1222,"byte_end":1237,"line_start":43,"line_end":43,"column_start":56,"column_end":71},"alias_span":null,"name":"UnsafeFutureObj","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":190},"span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-task-0.3.21\\src\\lib.rs","byte_start":1284,"byte_end":1294,"line_start":46,"line_end":46,"column_start":28,"column_end":38},"alias_span":null,"name":"noop_waker","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":191},"span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-task-0.3.21\\src\\lib.rs","byte_start":1323,"byte_end":1337,"line_start":47,"line_end":47,"column_start":28,"column_end":42},"alias_span":null,"name":"noop_waker_ref","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":1,"index":13400},"span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-task-0.3.21\\src\\lib.rs","byte_start":1379,"byte_end":1386,"line_start":50,"line_end":50,"column_start":22,"column_end":29},"alias_span":null,"name":"Context","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":1,"index":49132},"span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-task-0.3.21\\src\\lib.rs","byte_start":1388,"byte_end":1392,"line_start":50,"line_end":50,"column_start":31,"column_end":35},"alias_span":null,"name":"Poll","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":1,"index":49168},"span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-task-0.3.21\\src\\lib.rs","byte_start":1394,"byte_end":1402,"line_start":50,"line_end":50,"column_start":37,"column_end":45},"alias_span":null,"name":"RawWaker","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":1,"index":49177},"span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-task-0.3.21\\src\\lib.rs","byte_start":1404,"byte_end":1418,"line_start":50,"line_end":50,"column_start":47,"column_end":61},"alias_span":null,"name":"RawWakerVTable","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":1,"index":13410},"span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-task-0.3.21\\src\\lib.rs","byte_start":1420,"byte_end":1425,"line_start":50,"line_end":50,"column_start":63,"column_end":68},"alias_span":null,"name":"Waker","value":"","parent":{"krate":0,"index":0}}],"defs":[{"kind":"Mod","id":{"krate":0,"index":0},"span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-task-0.3.21\\src\\lib.rs","byte_start":0,"byte_end":1427,"line_start":1,"line_end":50,"column_start":1,"column_end":70},"name":"","qualname":"::","value":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-task-0.3.21\\src\\lib.rs","parent":null,"children":[{"krate":0,"index":1},{"krate":0,"index":2},{"krate":0,"index":3},{"krate":0,"index":4},{"krate":0,"index":46},{"krate":0,"index":47},{"krate":0,"index":50},{"krate":0,"index":53},{"krate":0,"index":56},{"krate":0,"index":162},{"krate":0,"index":163},{"krate":0,"index":166},{"krate":0,"index":169},{"krate":0,"index":172},{"krate":0,"index":197},{"krate":0,"index":200},{"krate":0,"index":203},{"krate":0,"index":204},{"krate":0,"index":207},{"krate":0,"index":210},{"krate":0,"index":213},{"krate":0,"index":216}],"decl_id":null,"docs":" Tools for working with tasks.\n","sig":null,"attributes":[{"value":"/ Tools for working with tasks.","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-task-0.3.21\\src\\lib.rs","byte_start":0,"byte_end":33,"line_start":1,"line_end":1,"column_start":1,"column_end":34}},{"value":"no_std","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-task-0.3.21\\src\\lib.rs","byte_start":69,"byte_end":75,"line_start":3,"line_end":3,"column_start":35,"column_end":41}},{"value":"warn(missing_debug_implementations, missing_docs, rust_2018_idioms,\nunreachable_pub)","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-task-0.3.21\\src\\lib.rs","byte_start":78,"byte_end":166,"line_start":4,"line_end":4,"column_start":1,"column_end":89}}]},{"kind":"Trait","id":{"krate":0,"index":15},"span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-task-0.3.21\\src\\spawn.rs","byte_start":1599,"byte_end":1604,"line_start":6,"line_end":6,"column_start":11,"column_end":16},"name":"Spawn","qualname":"::spawn::Spawn","value":"Spawn","parent":null,"children":[{"krate":0,"index":16},{"krate":0,"index":17}],"decl_id":null,"docs":" The `Spawn` trait allows for pushing futures onto an executor that will\n run them to completion.\n","sig":null,"attributes":[{"value":"/ The `Spawn` trait allows for pushing futures onto an executor that will","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-task-0.3.21\\src\\spawn.rs","byte_start":1485,"byte_end":1560,"line_start":4,"line_end":4,"column_start":1,"column_end":76}},{"value":"/ run them to completion.","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-task-0.3.21\\src\\spawn.rs","byte_start":1561,"byte_end":1588,"line_start":5,"line_end":5,"column_start":1,"column_end":28}}]},{"kind":"Method","id":{"krate":0,"index":16},"span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-task-0.3.21\\src\\spawn.rs","byte_start":1924,"byte_end":1933,"line_start":15,"line_end":15,"column_start":8,"column_end":17},"name":"spawn_obj","qualname":"::spawn::Spawn::spawn_obj","value":"pub fn spawn_obj(&Self, FutureObj) -> Result<(), SpawnError>","parent":{"krate":0,"index":15},"children":[],"decl_id":null,"docs":" Spawns a future that will be run to completion.","sig":null,"attributes":[{"value":"/ Spawns a future that will be run to completion.","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-task-0.3.21\\src\\spawn.rs","byte_start":1611,"byte_end":1662,"line_start":7,"line_end":7,"column_start":5,"column_end":56}},{"value":"/","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-task-0.3.21\\src\\spawn.rs","byte_start":1667,"byte_end":1670,"line_start":8,"line_end":8,"column_start":5,"column_end":8}},{"value":"/ # Errors","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-task-0.3.21\\src\\spawn.rs","byte_start":1675,"byte_end":1687,"line_start":9,"line_end":9,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-task-0.3.21\\src\\spawn.rs","byte_start":1692,"byte_end":1695,"line_start":10,"line_end":10,"column_start":5,"column_end":8}},{"value":"/ The executor may be unable to spawn tasks. Spawn errors should","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-task-0.3.21\\src\\spawn.rs","byte_start":1700,"byte_end":1766,"line_start":11,"line_end":11,"column_start":5,"column_end":71}},{"value":"/ represent relatively rare scenarios, such as the executor","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-task-0.3.21\\src\\spawn.rs","byte_start":1771,"byte_end":1832,"line_start":12,"line_end":12,"column_start":5,"column_end":66}},{"value":"/ having been shut down so that it is no longer able to accept","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-task-0.3.21\\src\\spawn.rs","byte_start":1837,"byte_end":1901,"line_start":13,"line_end":13,"column_start":5,"column_end":69}},{"value":"/ tasks.","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-task-0.3.21\\src\\spawn.rs","byte_start":1906,"byte_end":1916,"line_start":14,"line_end":14,"column_start":5,"column_end":15}}]},{"kind":"Method","id":{"krate":0,"index":17},"span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-task-0.3.21\\src\\spawn.rs","byte_start":2343,"byte_end":2349,"line_start":24,"line_end":24,"column_start":8,"column_end":14},"name":"status","qualname":"::spawn::Spawn::status","value":"pub fn status(&Self) -> Result<(), SpawnError>","parent":{"krate":0,"index":15},"children":[],"decl_id":null,"docs":" Determines whether the executor is able to spawn new tasks.","sig":null,"attributes":[{"value":"/ Determines whether the executor is able to spawn new tasks.","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-task-0.3.21\\src\\spawn.rs","byte_start":2005,"byte_end":2068,"line_start":17,"line_end":17,"column_start":5,"column_end":68}},{"value":"/","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-task-0.3.21\\src\\spawn.rs","byte_start":2073,"byte_end":2076,"line_start":18,"line_end":18,"column_start":5,"column_end":8}},{"value":"/ This method will return `Ok` when the executor is *likely*","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-task-0.3.21\\src\\spawn.rs","byte_start":2081,"byte_end":2143,"line_start":19,"line_end":19,"column_start":5,"column_end":67}},{"value":"/ (but not guaranteed) to accept a subsequent spawn attempt.","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-task-0.3.21\\src\\spawn.rs","byte_start":2148,"byte_end":2210,"line_start":20,"line_end":20,"column_start":5,"column_end":67}},{"value":"/ Likewise, an `Err` return means that `spawn` is likely, but","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-task-0.3.21\\src\\spawn.rs","byte_start":2215,"byte_end":2278,"line_start":21,"line_end":21,"column_start":5,"column_end":68}},{"value":"/ not guaranteed, to yield an error.","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-task-0.3.21\\src\\spawn.rs","byte_start":2283,"byte_end":2321,"line_start":22,"line_end":22,"column_start":5,"column_end":43}},{"value":"inline","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-task-0.3.21\\src\\spawn.rs","byte_start":2326,"byte_end":2335,"line_start":23,"line_end":23,"column_start":5,"column_end":14}}]},{"kind":"Trait","id":{"krate":0,"index":18},"span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-task-0.3.21\\src\\spawn.rs","byte_start":2526,"byte_end":2536,"line_start":31,"line_end":31,"column_start":11,"column_end":21},"name":"LocalSpawn","qualname":"::spawn::LocalSpawn","value":"LocalSpawn","parent":null,"children":[{"krate":0,"index":19},{"krate":0,"index":20}],"decl_id":null,"docs":" The `LocalSpawn` is similar to [`Spawn`], but allows spawning futures\n that don't implement `Send`.\n","sig":null,"attributes":[{"value":"/ The `LocalSpawn` is similar to [`Spawn`], but allows spawning futures","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-task-0.3.21\\src\\spawn.rs","byte_start":2409,"byte_end":2482,"line_start":29,"line_end":29,"column_start":1,"column_end":74}},{"value":"/ that don't implement `Send`.","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-task-0.3.21\\src\\spawn.rs","byte_start":2483,"byte_end":2515,"line_start":30,"line_end":30,"column_start":1,"column_end":33}}]},{"kind":"Method","id":{"krate":0,"index":19},"span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-task-0.3.21\\src\\spawn.rs","byte_start":2856,"byte_end":2871,"line_start":40,"line_end":40,"column_start":8,"column_end":23},"name":"spawn_local_obj","qualname":"::spawn::LocalSpawn::spawn_local_obj","value":"pub fn spawn_local_obj(&Self, LocalFutureObj) -> Result<(), SpawnError>","parent":{"krate":0,"index":18},"children":[],"decl_id":null,"docs":" Spawns a future that will be run to completion.","sig":null,"attributes":[{"value":"/ Spawns a future that will be run to completion.","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-task-0.3.21\\src\\spawn.rs","byte_start":2543,"byte_end":2594,"line_start":32,"line_end":32,"column_start":5,"column_end":56}},{"value":"/","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-task-0.3.21\\src\\spawn.rs","byte_start":2599,"byte_end":2602,"line_start":33,"line_end":33,"column_start":5,"column_end":8}},{"value":"/ # Errors","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-task-0.3.21\\src\\spawn.rs","byte_start":2607,"byte_end":2619,"line_start":34,"line_end":34,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-task-0.3.21\\src\\spawn.rs","byte_start":2624,"byte_end":2627,"line_start":35,"line_end":35,"column_start":5,"column_end":8}},{"value":"/ The executor may be unable to spawn tasks. Spawn errors should","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-task-0.3.21\\src\\spawn.rs","byte_start":2632,"byte_end":2698,"line_start":36,"line_end":36,"column_start":5,"column_end":71}},{"value":"/ represent relatively rare scenarios, such as the executor","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-task-0.3.21\\src\\spawn.rs","byte_start":2703,"byte_end":2764,"line_start":37,"line_end":37,"column_start":5,"column_end":66}},{"value":"/ having been shut down so that it is no longer able to accept","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-task-0.3.21\\src\\spawn.rs","byte_start":2769,"byte_end":2833,"line_start":38,"line_end":38,"column_start":5,"column_end":69}},{"value":"/ tasks.","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-task-0.3.21\\src\\spawn.rs","byte_start":2838,"byte_end":2848,"line_start":39,"line_end":39,"column_start":5,"column_end":15}}]},{"kind":"Method","id":{"krate":0,"index":20},"span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-task-0.3.21\\src\\spawn.rs","byte_start":3286,"byte_end":3298,"line_start":49,"line_end":49,"column_start":8,"column_end":20},"name":"status_local","qualname":"::spawn::LocalSpawn::status_local","value":"pub fn status_local(&Self) -> Result<(), SpawnError>","parent":{"krate":0,"index":18},"children":[],"decl_id":null,"docs":" Determines whether the executor is able to spawn new tasks.","sig":null,"attributes":[{"value":"/ Determines whether the executor is able to spawn new tasks.","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-task-0.3.21\\src\\spawn.rs","byte_start":2948,"byte_end":3011,"line_start":42,"line_end":42,"column_start":5,"column_end":68}},{"value":"/","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-task-0.3.21\\src\\spawn.rs","byte_start":3016,"byte_end":3019,"line_start":43,"line_end":43,"column_start":5,"column_end":8}},{"value":"/ This method will return `Ok` when the executor is *likely*","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-task-0.3.21\\src\\spawn.rs","byte_start":3024,"byte_end":3086,"line_start":44,"line_end":44,"column_start":5,"column_end":67}},{"value":"/ (but not guaranteed) to accept a subsequent spawn attempt.","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-task-0.3.21\\src\\spawn.rs","byte_start":3091,"byte_end":3153,"line_start":45,"line_end":45,"column_start":5,"column_end":67}},{"value":"/ Likewise, an `Err` return means that `spawn` is likely, but","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-task-0.3.21\\src\\spawn.rs","byte_start":3158,"byte_end":3221,"line_start":46,"line_end":46,"column_start":5,"column_end":68}},{"value":"/ not guaranteed, to yield an error.","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-task-0.3.21\\src\\spawn.rs","byte_start":3226,"byte_end":3264,"line_start":47,"line_end":47,"column_start":5,"column_end":43}},{"value":"inline","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-task-0.3.21\\src\\spawn.rs","byte_start":3269,"byte_end":3278,"line_start":48,"line_end":48,"column_start":5,"column_end":14}}]},{"kind":"Struct","id":{"krate":0,"index":21},"span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-task-0.3.21\\src\\spawn.rs","byte_start":3413,"byte_end":3423,"line_start":55,"line_end":55,"column_start":12,"column_end":22},"name":"SpawnError","qualname":"::spawn::SpawnError","value":"SpawnError {  }","parent":null,"children":[{"krate":0,"index":22}],"decl_id":null,"docs":" An error that occurred during spawning.\n","sig":null,"attributes":[{"value":"/ An error that occurred during spawning.","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-task-0.3.21\\src\\spawn.rs","byte_start":3358,"byte_end":3401,"line_start":54,"line_end":54,"column_start":1,"column_end":44}}]},{"kind":"Method","id":{"krate":0,"index":28},"span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-task-0.3.21\\src\\spawn.rs","byte_start":3922,"byte_end":3930,"line_start":76,"line_end":76,"column_start":12,"column_end":20},"name":"shutdown","qualname":"<SpawnError>::shutdown","value":"pub fn shutdown() -> Self","parent":null,"children":[],"decl_id":null,"docs":" Spawning failed because the executor has been shut down.\n","sig":null,"attributes":[{"value":"/ Spawning failed because the executor has been shut down.","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-task-0.3.21\\src\\spawn.rs","byte_start":3850,"byte_end":3910,"line_start":75,"line_end":75,"column_start":5,"column_end":65}}]},{"kind":"Method","id":{"krate":0,"index":29},"span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-task-0.3.21\\src\\spawn.rs","byte_start":4059,"byte_end":4070,"line_start":81,"line_end":81,"column_start":12,"column_end":23},"name":"is_shutdown","qualname":"<SpawnError>::is_shutdown","value":"pub fn is_shutdown(&Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Check whether spawning failed to the executor being shut down.\n","sig":null,"attributes":[{"value":"/ Check whether spawning failed to the executor being shut down.","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-task-0.3.21\\src\\spawn.rs","byte_start":3981,"byte_end":4047,"line_start":80,"line_end":80,"column_start":5,"column_end":71}}]},{"kind":"Struct","id":{"krate":0,"index":80},"span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-task-0.3.21\\src\\future_obj.rs","byte_start":7649,"byte_end":7663,"line_start":16,"line_end":16,"column_start":12,"column_end":26},"name":"LocalFutureObj","qualname":"::future_obj::LocalFutureObj","value":"LocalFutureObj {  }","parent":null,"children":[{"krate":0,"index":83},{"krate":0,"index":84},{"krate":0,"index":85}],"decl_id":null,"docs":" A custom trait object for polling futures, roughly akin to\n `Box<dyn Future<Output = T> + 'a>`.","sig":null,"attributes":[{"value":"/ A custom trait object for polling futures, roughly akin to","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-task-0.3.21\\src\\future_obj.rs","byte_start":7360,"byte_end":7422,"line_start":10,"line_end":10,"column_start":1,"column_end":63}},{"value":"/ `Box<dyn Future<Output = T> + 'a>`.","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-task-0.3.21\\src\\future_obj.rs","byte_start":7423,"byte_end":7462,"line_start":11,"line_end":11,"column_start":1,"column_end":40}},{"value":"/","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-task-0.3.21\\src\\future_obj.rs","byte_start":7463,"byte_end":7466,"line_start":12,"line_end":12,"column_start":1,"column_end":4}},{"value":"/ This custom trait object was introduced as currently it is not possible to","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-task-0.3.21\\src\\future_obj.rs","byte_start":7467,"byte_end":7545,"line_start":13,"line_end":13,"column_start":1,"column_end":79}},{"value":"/ take `dyn Trait` by value and `Box<dyn Trait>` is not available in no_std","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-task-0.3.21\\src\\future_obj.rs","byte_start":7546,"byte_end":7623,"line_start":14,"line_end":14,"column_start":1,"column_end":78}},{"value":"/ contexts.","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-task-0.3.21\\src\\future_obj.rs","byte_start":7624,"byte_end":7637,"line_start":15,"line_end":15,"column_start":1,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":97},"span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-task-0.3.21\\src\\future_obj.rs","byte_start":8671,"byte_end":8674,"line_start":45,"line_end":45,"column_start":12,"column_end":15},"name":"new","qualname":"<LocalFutureObj>::new","value":"pub fn new<F: UnsafeFutureObj + 'a>(F) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Create a `LocalFutureObj` from a custom trait object representation.\n","sig":null,"attributes":[{"value":"/ Create a `LocalFutureObj` from a custom trait object representation.","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-task-0.3.21\\src\\future_obj.rs","byte_start":8573,"byte_end":8645,"line_start":43,"line_end":43,"column_start":5,"column_end":77}},{"value":"inline","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-task-0.3.21\\src\\future_obj.rs","byte_start":8650,"byte_end":8659,"line_start":44,"line_end":44,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":99},"span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-task-0.3.21\\src\\future_obj.rs","byte_start":9223,"byte_end":9238,"line_start":61,"line_end":61,"column_start":19,"column_end":34},"name":"into_future_obj","qualname":"<LocalFutureObj>::into_future_obj","value":"pub unsafe fn into_future_obj(Self) -> FutureObj","parent":null,"children":[],"decl_id":null,"docs":" Converts the `LocalFutureObj` into a `FutureObj`.","sig":null,"attributes":[{"value":"/ Converts the `LocalFutureObj` into a `FutureObj`.","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-task-0.3.21\\src\\future_obj.rs","byte_start":8925,"byte_end":8978,"line_start":53,"line_end":53,"column_start":5,"column_end":58}},{"value":"/","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-task-0.3.21\\src\\future_obj.rs","byte_start":8983,"byte_end":8986,"line_start":54,"line_end":54,"column_start":5,"column_end":8}},{"value":"/ # Safety","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-task-0.3.21\\src\\future_obj.rs","byte_start":8991,"byte_end":9003,"line_start":55,"line_end":55,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-task-0.3.21\\src\\future_obj.rs","byte_start":9008,"byte_end":9011,"line_start":56,"line_end":56,"column_start":5,"column_end":8}},{"value":"/ To make this operation safe one has to ensure that the `UnsafeFutureObj`","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-task-0.3.21\\src\\future_obj.rs","byte_start":9016,"byte_end":9092,"line_start":57,"line_end":57,"column_start":5,"column_end":81}},{"value":"/ instance from which this `LocalFutureObj` was created actually","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-task-0.3.21\\src\\future_obj.rs","byte_start":9097,"byte_end":9163,"line_start":58,"line_end":58,"column_start":5,"column_end":71}},{"value":"/ implements `Send`.","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-task-0.3.21\\src\\future_obj.rs","byte_start":9168,"byte_end":9190,"line_start":59,"line_end":59,"column_start":5,"column_end":27}},{"value":"inline","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-task-0.3.21\\src\\future_obj.rs","byte_start":9195,"byte_end":9204,"line_start":60,"line_end":60,"column_start":5,"column_end":14}}]},{"kind":"Struct","id":{"krate":0,"index":114},"span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-task-0.3.21\\src\\future_obj.rs","byte_start":10400,"byte_end":10409,"line_start":103,"line_end":103,"column_start":12,"column_end":21},"name":"FutureObj","qualname":"::future_obj::FutureObj","value":"","parent":null,"children":[],"decl_id":null,"docs":" A custom trait object for polling futures, roughly akin to\n `Box<dyn Future<Output = T> + Send + 'a>`.","sig":null,"attributes":[{"value":"/ A custom trait object for polling futures, roughly akin to","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-task-0.3.21\\src\\future_obj.rs","byte_start":9959,"byte_end":10021,"line_start":94,"line_end":94,"column_start":1,"column_end":63}},{"value":"/ `Box<dyn Future<Output = T> + Send + 'a>`.","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-task-0.3.21\\src\\future_obj.rs","byte_start":10022,"byte_end":10068,"line_start":95,"line_end":95,"column_start":1,"column_end":47}},{"value":"/","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-task-0.3.21\\src\\future_obj.rs","byte_start":10069,"byte_end":10072,"line_start":96,"line_end":96,"column_start":1,"column_end":4}},{"value":"/ This custom trait object was introduced as currently it is not possible to","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-task-0.3.21\\src\\future_obj.rs","byte_start":10073,"byte_end":10151,"line_start":97,"line_end":97,"column_start":1,"column_end":79}},{"value":"/ take `dyn Trait` by value and `Box<dyn Trait>` is not available in no_std","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-task-0.3.21\\src\\future_obj.rs","byte_start":10152,"byte_end":10229,"line_start":98,"line_end":98,"column_start":1,"column_end":78}},{"value":"/ contexts.","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-task-0.3.21\\src\\future_obj.rs","byte_start":10230,"byte_end":10243,"line_start":99,"line_end":99,"column_start":1,"column_end":14}},{"value":"/","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-task-0.3.21\\src\\future_obj.rs","byte_start":10244,"byte_end":10247,"line_start":100,"line_end":100,"column_start":1,"column_end":4}},{"value":"/ You should generally not need to use this type outside of `no_std` or when","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-task-0.3.21\\src\\future_obj.rs","byte_start":10248,"byte_end":10326,"line_start":101,"line_end":101,"column_start":1,"column_end":79}},{"value":"/ implementing `Spawn`, consider using `BoxFuture` instead.","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-task-0.3.21\\src\\future_obj.rs","byte_start":10327,"byte_end":10388,"line_start":102,"line_end":102,"column_start":1,"column_end":62}}]},{"kind":"Method","id":{"krate":0,"index":126},"span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-task-0.3.21\\src\\future_obj.rs","byte_start":10653,"byte_end":10656,"line_start":111,"line_end":111,"column_start":12,"column_end":15},"name":"new","qualname":"<FutureObj>::new","value":"pub fn new<F: UnsafeFutureObj + Send>(F) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Create a `FutureObj` from a custom trait object representation.\n","sig":null,"attributes":[{"value":"/ Create a `FutureObj` from a custom trait object representation.","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-task-0.3.21\\src\\future_obj.rs","byte_start":10560,"byte_end":10627,"line_start":109,"line_end":109,"column_start":5,"column_end":72}},{"value":"inline","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-task-0.3.21\\src\\future_obj.rs","byte_start":10632,"byte_end":10641,"line_start":110,"line_end":110,"column_start":5,"column_end":14}}]},{"kind":"Trait","id":{"krate":0,"index":135},"span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-task-0.3.21\\src\\future_obj.rs","byte_start":11504,"byte_end":11519,"line_start":141,"line_end":141,"column_start":18,"column_end":33},"name":"UnsafeFutureObj","qualname":"::future_obj::UnsafeFutureObj","value":"UnsafeFutureObj<'a, T>: 'a","parent":null,"children":[{"krate":0,"index":138},{"krate":0,"index":139}],"decl_id":null,"docs":" A custom implementation of a future trait object for `FutureObj`, providing\n a vtable with drop support.","sig":null,"attributes":[{"value":"/ A custom implementation of a future trait object for `FutureObj`, providing","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-task-0.3.21\\src\\future_obj.rs","byte_start":11107,"byte_end":11186,"line_start":131,"line_end":131,"column_start":1,"column_end":80}},{"value":"/ a vtable with drop support.","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-task-0.3.21\\src\\future_obj.rs","byte_start":11187,"byte_end":11218,"line_start":132,"line_end":132,"column_start":1,"column_end":32}},{"value":"/","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-task-0.3.21\\src\\future_obj.rs","byte_start":11219,"byte_end":11222,"line_start":133,"line_end":133,"column_start":1,"column_end":4}},{"value":"/ This custom representation is typically used only in `no_std` contexts,","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-task-0.3.21\\src\\future_obj.rs","byte_start":11223,"byte_end":11298,"line_start":134,"line_end":134,"column_start":1,"column_end":76}},{"value":"/ where the default `Box`-based implementation is not available.","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-task-0.3.21\\src\\future_obj.rs","byte_start":11299,"byte_end":11365,"line_start":135,"line_end":135,"column_start":1,"column_end":67}},{"value":"/","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-task-0.3.21\\src\\future_obj.rs","byte_start":11366,"byte_end":11369,"line_start":136,"line_end":136,"column_start":1,"column_end":4}},{"value":"/ # Safety","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-task-0.3.21\\src\\future_obj.rs","byte_start":11370,"byte_end":11382,"line_start":137,"line_end":137,"column_start":1,"column_end":13}},{"value":"/","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-task-0.3.21\\src\\future_obj.rs","byte_start":11383,"byte_end":11386,"line_start":138,"line_end":138,"column_start":1,"column_end":4}},{"value":"/ See the safety notes on individual methods for what guarantees an","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-task-0.3.21\\src\\future_obj.rs","byte_start":11387,"byte_end":11456,"line_start":139,"line_end":139,"column_start":1,"column_end":70}},{"value":"/ implementor must provide.","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-task-0.3.21\\src\\future_obj.rs","byte_start":11457,"byte_end":11486,"line_start":140,"line_end":140,"column_start":1,"column_end":30}}]},{"kind":"Method","id":{"krate":0,"index":138},"span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-task-0.3.21\\src\\future_obj.rs","byte_start":11964,"byte_end":11972,"line_start":152,"line_end":152,"column_start":8,"column_end":16},"name":"into_raw","qualname":"::future_obj::UnsafeFutureObj::into_raw","value":"pub fn into_raw(Self) -> *mut dyn Future<Output = T> + 'a","parent":{"krate":0,"index":135},"children":[],"decl_id":null,"docs":" Convert an owned instance into a (conceptually owned) fat pointer.","sig":null,"attributes":[{"value":"/ Convert an owned instance into a (conceptually owned) fat pointer.","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-task-0.3.21\\src\\future_obj.rs","byte_start":11537,"byte_end":11607,"line_start":142,"line_end":142,"column_start":5,"column_end":75}},{"value":"/","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-task-0.3.21\\src\\future_obj.rs","byte_start":11612,"byte_end":11615,"line_start":143,"line_end":143,"column_start":5,"column_end":8}},{"value":"/ # Safety","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-task-0.3.21\\src\\future_obj.rs","byte_start":11620,"byte_end":11632,"line_start":144,"line_end":144,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-task-0.3.21\\src\\future_obj.rs","byte_start":11637,"byte_end":11640,"line_start":145,"line_end":145,"column_start":5,"column_end":8}},{"value":"/ ## Implementor","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-task-0.3.21\\src\\future_obj.rs","byte_start":11645,"byte_end":11663,"line_start":146,"line_end":146,"column_start":5,"column_end":23}},{"value":"/","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-task-0.3.21\\src\\future_obj.rs","byte_start":11668,"byte_end":11671,"line_start":147,"line_end":147,"column_start":5,"column_end":8}},{"value":"/ The trait implementor must guarantee that it is safe to convert the","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-task-0.3.21\\src\\future_obj.rs","byte_start":11676,"byte_end":11747,"line_start":148,"line_end":148,"column_start":5,"column_end":76}},{"value":"/ provided `*mut (dyn Future<Output = T> + 'a)` into a `Pin<&mut (dyn","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-task-0.3.21\\src\\future_obj.rs","byte_start":11752,"byte_end":11823,"line_start":149,"line_end":149,"column_start":5,"column_end":76}},{"value":"/ Future<Output = T> + 'a)>` and call methods on it, non-reentrantly,","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-task-0.3.21\\src\\future_obj.rs","byte_start":11828,"byte_end":11899,"line_start":150,"line_end":150,"column_start":5,"column_end":76}},{"value":"/ until `UnsafeFutureObj::drop` is called with it.","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-task-0.3.21\\src\\future_obj.rs","byte_start":11904,"byte_end":11956,"line_start":151,"line_end":151,"column_start":5,"column_end":57}}]},{"kind":"Method","id":{"krate":0,"index":139},"span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-task-0.3.21\\src\\future_obj.rs","byte_start":12650,"byte_end":12654,"line_start":172,"line_end":172,"column_start":15,"column_end":19},"name":"drop","qualname":"::future_obj::UnsafeFutureObj::drop","value":"pub unsafe fn drop(*mut dyn Future<Output = T> + 'a)","parent":{"krate":0,"index":135},"children":[],"decl_id":null,"docs":" Drops the future represented by the given fat pointer.","sig":null,"attributes":[{"value":"/ Drops the future represented by the given fat pointer.","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-task-0.3.21\\src\\future_obj.rs","byte_start":12023,"byte_end":12081,"line_start":154,"line_end":154,"column_start":5,"column_end":63}},{"value":"/","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-task-0.3.21\\src\\future_obj.rs","byte_start":12086,"byte_end":12089,"line_start":155,"line_end":155,"column_start":5,"column_end":8}},{"value":"/ # Safety","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-task-0.3.21\\src\\future_obj.rs","byte_start":12094,"byte_end":12106,"line_start":156,"line_end":156,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-task-0.3.21\\src\\future_obj.rs","byte_start":12111,"byte_end":12114,"line_start":157,"line_end":157,"column_start":5,"column_end":8}},{"value":"/ ## Implementor","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-task-0.3.21\\src\\future_obj.rs","byte_start":12119,"byte_end":12137,"line_start":158,"line_end":158,"column_start":5,"column_end":23}},{"value":"/","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-task-0.3.21\\src\\future_obj.rs","byte_start":12142,"byte_end":12145,"line_start":159,"line_end":159,"column_start":5,"column_end":8}},{"value":"/ The trait implementor must guarantee that it is safe to call this","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-task-0.3.21\\src\\future_obj.rs","byte_start":12150,"byte_end":12219,"line_start":160,"line_end":160,"column_start":5,"column_end":74}},{"value":"/ function once per `into_raw` invocation.","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-task-0.3.21\\src\\future_obj.rs","byte_start":12224,"byte_end":12268,"line_start":161,"line_end":161,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-task-0.3.21\\src\\future_obj.rs","byte_start":12273,"byte_end":12276,"line_start":162,"line_end":162,"column_start":5,"column_end":8}},{"value":"/ ## Caller","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-task-0.3.21\\src\\future_obj.rs","byte_start":12281,"byte_end":12294,"line_start":163,"line_end":163,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-task-0.3.21\\src\\future_obj.rs","byte_start":12299,"byte_end":12302,"line_start":164,"line_end":164,"column_start":5,"column_end":8}},{"value":"/ The caller must ensure:","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-task-0.3.21\\src\\future_obj.rs","byte_start":12307,"byte_end":12334,"line_start":165,"line_end":165,"column_start":5,"column_end":32}},{"value":"/","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-task-0.3.21\\src\\future_obj.rs","byte_start":12339,"byte_end":12342,"line_start":166,"line_end":166,"column_start":5,"column_end":8}},{"value":"/  * the pointer passed was obtained from an `into_raw` invocation from","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-task-0.3.21\\src\\future_obj.rs","byte_start":12347,"byte_end":12420,"line_start":167,"line_end":167,"column_start":5,"column_end":78}},{"value":"/    this same trait object","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-task-0.3.21\\src\\future_obj.rs","byte_start":12425,"byte_end":12454,"line_start":168,"line_end":168,"column_start":5,"column_end":34}},{"value":"/  * the pointer is not currently in use as a `Pin<&mut (dyn Future<Output","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-task-0.3.21\\src\\future_obj.rs","byte_start":12459,"byte_end":12535,"line_start":169,"line_end":169,"column_start":5,"column_end":81}},{"value":"/    = T> + 'a)>`","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-task-0.3.21\\src\\future_obj.rs","byte_start":12540,"byte_end":12559,"line_start":170,"line_end":170,"column_start":5,"column_end":24}},{"value":"/  * the pointer must not be used again after this function is called","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-task-0.3.21\\src\\future_obj.rs","byte_start":12564,"byte_end":12635,"line_start":171,"line_end":171,"column_start":5,"column_end":76}}]},{"kind":"Function","id":{"krate":0,"index":190},"span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-task-0.3.21\\src\\noop_waker.rs","byte_start":18460,"byte_end":18470,"line_start":29,"line_end":29,"column_start":8,"column_end":18},"name":"noop_waker","qualname":"::noop_waker::noop_waker","value":"pub fn noop_waker() -> Waker","parent":null,"children":[],"decl_id":null,"docs":" Create a new [`Waker`] which does\n nothing when `wake()` is called on it.","sig":null,"attributes":[{"value":"/ Create a new [`Waker`] which does","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-task-0.3.21\\src\\noop_waker.rs","byte_start":18240,"byte_end":18277,"line_start":18,"line_end":18,"column_start":1,"column_end":38}},{"value":"/ nothing when `wake()` is called on it.","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-task-0.3.21\\src\\noop_waker.rs","byte_start":18278,"byte_end":18320,"line_start":19,"line_end":19,"column_start":1,"column_end":43}},{"value":"/","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-task-0.3.21\\src\\noop_waker.rs","byte_start":18321,"byte_end":18324,"line_start":20,"line_end":20,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-task-0.3.21\\src\\noop_waker.rs","byte_start":18325,"byte_end":18339,"line_start":21,"line_end":21,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-task-0.3.21\\src\\noop_waker.rs","byte_start":18340,"byte_end":18343,"line_start":22,"line_end":22,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-task-0.3.21\\src\\noop_waker.rs","byte_start":18344,"byte_end":18351,"line_start":23,"line_end":23,"column_start":1,"column_end":8}},{"value":"/ use futures::task::noop_waker;","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-task-0.3.21\\src\\noop_waker.rs","byte_start":18352,"byte_end":18386,"line_start":24,"line_end":24,"column_start":1,"column_end":35}},{"value":"/ let waker = noop_waker();","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-task-0.3.21\\src\\noop_waker.rs","byte_start":18387,"byte_end":18416,"line_start":25,"line_end":25,"column_start":1,"column_end":30}},{"value":"/ waker.wake();","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-task-0.3.21\\src\\noop_waker.rs","byte_start":18417,"byte_end":18434,"line_start":26,"line_end":26,"column_start":1,"column_end":18}},{"value":"/ ```","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-task-0.3.21\\src\\noop_waker.rs","byte_start":18435,"byte_end":18442,"line_start":27,"line_end":27,"column_start":1,"column_end":8}},{"value":"inline","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-task-0.3.21\\src\\noop_waker.rs","byte_start":18443,"byte_end":18452,"line_start":28,"line_end":28,"column_start":1,"column_end":10}}]},{"kind":"Function","id":{"krate":0,"index":191},"span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-task-0.3.21\\src\\noop_waker.rs","byte_start":18881,"byte_end":18895,"line_start":45,"line_end":45,"column_start":8,"column_end":22},"name":"noop_waker_ref","qualname":"::noop_waker::noop_waker_ref","value":"pub fn noop_waker_ref() -> &'static Waker","parent":null,"children":[],"decl_id":null,"docs":" Get a static reference to a [`Waker`] which\n does nothing when `wake()` is called on it.","sig":null,"attributes":[{"value":"/ Get a static reference to a [`Waker`] which","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-task-0.3.21\\src\\noop_waker.rs","byte_start":18631,"byte_end":18678,"line_start":34,"line_end":34,"column_start":1,"column_end":48}},{"value":"/ does nothing when `wake()` is called on it.","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-task-0.3.21\\src\\noop_waker.rs","byte_start":18679,"byte_end":18726,"line_start":35,"line_end":35,"column_start":1,"column_end":48}},{"value":"/","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-task-0.3.21\\src\\noop_waker.rs","byte_start":18727,"byte_end":18730,"line_start":36,"line_end":36,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-task-0.3.21\\src\\noop_waker.rs","byte_start":18731,"byte_end":18745,"line_start":37,"line_end":37,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-task-0.3.21\\src\\noop_waker.rs","byte_start":18746,"byte_end":18749,"line_start":38,"line_end":38,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-task-0.3.21\\src\\noop_waker.rs","byte_start":18750,"byte_end":18757,"line_start":39,"line_end":39,"column_start":1,"column_end":8}},{"value":"/ use futures::task::noop_waker_ref;","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-task-0.3.21\\src\\noop_waker.rs","byte_start":18758,"byte_end":18796,"line_start":40,"line_end":40,"column_start":1,"column_end":39}},{"value":"/ let waker = noop_waker_ref();","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-task-0.3.21\\src\\noop_waker.rs","byte_start":18797,"byte_end":18830,"line_start":41,"line_end":41,"column_start":1,"column_end":34}},{"value":"/ waker.wake_by_ref();","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-task-0.3.21\\src\\noop_waker.rs","byte_start":18831,"byte_end":18855,"line_start":42,"line_end":42,"column_start":1,"column_end":25}},{"value":"/ ```","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-task-0.3.21\\src\\noop_waker.rs","byte_start":18856,"byte_end":18863,"line_start":43,"line_end":43,"column_start":1,"column_end":8}},{"value":"inline","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-task-0.3.21\\src\\noop_waker.rs","byte_start":18864,"byte_end":18873,"line_start":44,"line_end":44,"column_start":1,"column_end":10}}]}],"impls":[{"id":0,"kind":"Direct","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-task-0.3.21\\src\\spawn.rs","byte_start":3464,"byte_end":3474,"line_start":59,"line_end":59,"column_start":21,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":24}],"docs":"","sig":null,"attributes":[]},{"id":1,"kind":"Direct","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-task-0.3.21\\src\\spawn.rs","byte_start":3635,"byte_end":3645,"line_start":65,"line_end":65,"column_start":23,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":26}],"docs":"","sig":null,"attributes":[]},{"id":2,"kind":"Inherent","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-task-0.3.21\\src\\spawn.rs","byte_start":3833,"byte_end":3843,"line_start":74,"line_end":74,"column_start":6,"column_end":16},"value":"","parent":null,"children":[{"krate":0,"index":28},{"krate":0,"index":29}],"docs":"","sig":null,"attributes":[]},{"id":3,"kind":"Direct","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-task-0.3.21\\src\\future_obj.rs","byte_start":8066,"byte_end":8080,"line_start":25,"line_end":25,"column_start":19,"column_end":33},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":4,"kind":"Inherent","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-task-0.3.21\\src\\future_obj.rs","byte_start":8545,"byte_end":8559,"line_start":42,"line_end":42,"column_start":13,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":97},{"krate":0,"index":99}],"docs":"","sig":null,"attributes":[]},{"id":5,"kind":"Direct","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-task-0.3.21\\src\\future_obj.rs","byte_start":9323,"byte_end":9337,"line_start":66,"line_end":66,"column_start":24,"column_end":38},"value":"","parent":null,"children":[{"krate":0,"index":102}],"docs":"","sig":null,"attributes":[]},{"id":6,"kind":"Direct","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-task-0.3.21\\src\\future_obj.rs","byte_start":9508,"byte_end":9522,"line_start":72,"line_end":72,"column_start":40,"column_end":54},"value":"","parent":null,"children":[{"krate":0,"index":106}],"docs":"","sig":null,"attributes":[]},{"id":7,"kind":"Direct","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-task-0.3.21\\src\\future_obj.rs","byte_start":9629,"byte_end":9643,"line_start":79,"line_end":79,"column_start":20,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":109},{"krate":0,"index":110}],"docs":"","sig":null,"attributes":[]},{"id":8,"kind":"Direct","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-task-0.3.21\\src\\future_obj.rs","byte_start":9854,"byte_end":9868,"line_start":88,"line_end":88,"column_start":18,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":113}],"docs":"","sig":null,"attributes":[]},{"id":9,"kind":"Direct","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-task-0.3.21\\src\\future_obj.rs","byte_start":10460,"byte_end":10469,"line_start":105,"line_end":105,"column_start":19,"column_end":28},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":10,"kind":"Direct","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-task-0.3.21\\src\\future_obj.rs","byte_start":10504,"byte_end":10513,"line_start":106,"line_end":106,"column_start":25,"column_end":34},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":11,"kind":"Inherent","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-task-0.3.21\\src\\future_obj.rs","byte_start":10537,"byte_end":10546,"line_start":108,"line_end":108,"column_start":13,"column_end":22},"value":"","parent":null,"children":[{"krate":0,"index":126}],"docs":"","sig":null,"attributes":[]},{"id":12,"kind":"Direct","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-task-0.3.21\\src\\future_obj.rs","byte_start":10776,"byte_end":10785,"line_start":116,"line_end":116,"column_start":24,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":130}],"docs":"","sig":null,"attributes":[]},{"id":13,"kind":"Direct","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-task-0.3.21\\src\\future_obj.rs","byte_start":10931,"byte_end":10940,"line_start":122,"line_end":122,"column_start":20,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":133},{"krate":0,"index":134}],"docs":"","sig":null,"attributes":[]},{"id":14,"kind":"Direct","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-task-0.3.21\\src\\future_obj.rs","byte_start":13310,"byte_end":13313,"line_start":194,"line_end":194,"column_start":50,"column_end":53},"value":"","parent":null,"children":[{"krate":0,"index":155},{"krate":0,"index":156}],"docs":"","sig":null,"attributes":[]},{"id":15,"kind":"Direct","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-task-0.3.21\\src\\future_obj.rs","byte_start":13622,"byte_end":13625,"line_start":205,"line_end":205,"column_start":47,"column_end":50},"value":"","parent":null,"children":[{"krate":0,"index":160},{"krate":0,"index":161}],"docs":"","sig":null,"attributes":[]},{"id":16,"kind":"Direct","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-task-0.3.21\\src\\noop_waker.rs","byte_start":18978,"byte_end":18990,"line_start":47,"line_end":47,"column_start":26,"column_end":38},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]}],"refs":[],"macro_refs":[],"relations":[{"span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-task-0.3.21\\src\\spawn.rs","byte_start":3464,"byte_end":3474,"line_start":59,"line_end":59,"column_start":21,"column_end":31},"kind":{"Impl":{"id":0}},"from":{"krate":0,"index":21},"to":{"krate":1,"index":9685}},{"span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-task-0.3.21\\src\\spawn.rs","byte_start":3635,"byte_end":3645,"line_start":65,"line_end":65,"column_start":23,"column_end":33},"kind":{"Impl":{"id":1}},"from":{"krate":0,"index":21},"to":{"krate":1,"index":9692}},{"span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-task-0.3.21\\src\\spawn.rs","byte_start":3833,"byte_end":3843,"line_start":74,"line_end":74,"column_start":6,"column_end":16},"kind":{"Impl":{"id":2}},"from":{"krate":0,"index":21},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-task-0.3.21\\src\\future_obj.rs","byte_start":8066,"byte_end":8080,"line_start":25,"line_end":25,"column_start":19,"column_end":33},"kind":{"Impl":{"id":3}},"from":{"krate":0,"index":80},"to":{"krate":1,"index":3098}},{"span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-task-0.3.21\\src\\future_obj.rs","byte_start":8545,"byte_end":8559,"line_start":42,"line_end":42,"column_start":13,"column_end":27},"kind":{"Impl":{"id":4}},"from":{"krate":0,"index":80},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-task-0.3.21\\src\\future_obj.rs","byte_start":9323,"byte_end":9337,"line_start":66,"line_end":66,"column_start":24,"column_end":38},"kind":{"Impl":{"id":5}},"from":{"krate":0,"index":80},"to":{"krate":1,"index":9685}},{"span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-task-0.3.21\\src\\future_obj.rs","byte_start":9508,"byte_end":9522,"line_start":72,"line_end":72,"column_start":40,"column_end":54},"kind":{"Impl":{"id":6}},"from":{"krate":0,"index":80},"to":{"krate":1,"index":2963}},{"span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-task-0.3.21\\src\\future_obj.rs","byte_start":9629,"byte_end":9643,"line_start":79,"line_end":79,"column_start":20,"column_end":34},"kind":{"Impl":{"id":7}},"from":{"krate":0,"index":80},"to":{"krate":1,"index":13098}},{"span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-task-0.3.21\\src\\future_obj.rs","byte_start":9854,"byte_end":9868,"line_start":88,"line_end":88,"column_start":18,"column_end":32},"kind":{"Impl":{"id":8}},"from":{"krate":0,"index":80},"to":{"krate":1,"index":3300}},{"span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-task-0.3.21\\src\\future_obj.rs","byte_start":10460,"byte_end":10469,"line_start":105,"line_end":105,"column_start":19,"column_end":28},"kind":{"Impl":{"id":9}},"from":{"krate":0,"index":114},"to":{"krate":1,"index":3098}},{"span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-task-0.3.21\\src\\future_obj.rs","byte_start":10504,"byte_end":10513,"line_start":106,"line_end":106,"column_start":25,"column_end":34},"kind":{"Impl":{"id":10}},"from":{"krate":0,"index":114},"to":{"krate":1,"index":3057}},{"span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-task-0.3.21\\src\\future_obj.rs","byte_start":10537,"byte_end":10546,"line_start":108,"line_end":108,"column_start":13,"column_end":22},"kind":{"Impl":{"id":11}},"from":{"krate":0,"index":114},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-task-0.3.21\\src\\future_obj.rs","byte_start":10776,"byte_end":10785,"line_start":116,"line_end":116,"column_start":24,"column_end":33},"kind":{"Impl":{"id":12}},"from":{"krate":0,"index":114},"to":{"krate":1,"index":9685}},{"span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-task-0.3.21\\src\\future_obj.rs","byte_start":10931,"byte_end":10940,"line_start":122,"line_end":122,"column_start":20,"column_end":29},"kind":{"Impl":{"id":13}},"from":{"krate":0,"index":114},"to":{"krate":1,"index":13098}},{"span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-task-0.3.21\\src\\future_obj.rs","byte_start":13310,"byte_end":13313,"line_start":194,"line_end":194,"column_start":50,"column_end":53},"kind":{"Impl":{"id":14}},"from":{"krate":1,"index":46402},"to":{"krate":0,"index":135}},{"span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-task-0.3.21\\src\\future_obj.rs","byte_start":13622,"byte_end":13625,"line_start":205,"line_end":205,"column_start":47,"column_end":50},"kind":{"Impl":{"id":15}},"from":{"krate":1,"index":46402},"to":{"krate":0,"index":135}},{"span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-task-0.3.21\\src\\noop_waker.rs","byte_start":18978,"byte_end":18990,"line_start":47,"line_end":47,"column_start":26,"column_end":38},"kind":{"Impl":{"id":16}},"from":{"krate":0,"index":192},"to":{"krate":1,"index":3069}}]}