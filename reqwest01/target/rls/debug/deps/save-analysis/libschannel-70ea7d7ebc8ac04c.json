{"config":{"output_file":null,"full_docs":false,"pub_only":true,"reachable_only":true,"distro_crate":false,"signatures":false,"borrow_data":false},"version":"0.19.1","compilation":{"directory":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\schannel-0.1.20","program":"C:\\Users\\admin\\.rustup\\toolchains\\stable-x86_64-pc-windows-msvc\\bin\\rls.exe","arguments":["--crate-name","schannel","--edition=2018","C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\schannel-0.1.20\\src\\lib.rs","--json=diagnostic-rendered-ansi,artifacts,future-incompat","--crate-type","lib","--emit=dep-info,metadata","-C","embed-bitcode=no","-C","debuginfo=2","-C","metadata=70ea7d7ebc8ac04c","-C","extra-filename=-70ea7d7ebc8ac04c","--out-dir","f:\\sea-orm-demo\\reqwest01\\target\\rls\\debug\\deps","-L","dependency=f:\\sea-orm-demo\\reqwest01\\target\\rls\\debug\\deps","--extern","lazy_static=f:\\sea-orm-demo\\reqwest01\\target\\rls\\debug\\deps\\liblazy_static-80710ed0e1bbe8ad.rmeta","--extern","windows_sys=f:\\sea-orm-demo\\reqwest01\\target\\rls\\debug\\deps\\libwindows_sys-f8e5cf8abebb42ef.rmeta","--cap-lints","allow","-L","native=C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\windows_x86_64_msvc-0.36.1\\lib","--error-format=json","--sysroot","C:\\Users\\admin\\.rustup/toolchains/stable-x86_64-pc-windows-msvc"],"output":"f:\\sea-orm-demo\\reqwest01\\target\\rls\\debug\\deps\\libschannel-70ea7d7ebc8ac04c.rmeta"},"prelude":{"crate_id":{"name":"schannel","disambiguator":[4248174428751980073,0]},"crate_root":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\schannel-0.1.20\\src","external_crates":[{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\schannel-0.1.20\\src\\lib.rs","num":1,"id":{"name":"std","disambiguator":[13015713666403456114,0]}},{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\schannel-0.1.20\\src\\lib.rs","num":2,"id":{"name":"core","disambiguator":[1507510987272037120,0]}},{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\schannel-0.1.20\\src\\lib.rs","num":3,"id":{"name":"compiler_builtins","disambiguator":[3803325750332457499,0]}},{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\schannel-0.1.20\\src\\lib.rs","num":4,"id":{"name":"rustc_std_workspace_core","disambiguator":[4223354511651166533,0]}},{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\schannel-0.1.20\\src\\lib.rs","num":5,"id":{"name":"alloc","disambiguator":[15700094508901508366,0]}},{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\schannel-0.1.20\\src\\lib.rs","num":6,"id":{"name":"libc","disambiguator":[12632183332710247155,0]}},{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\schannel-0.1.20\\src\\lib.rs","num":7,"id":{"name":"unwind","disambiguator":[18262169243471273054,0]}},{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\schannel-0.1.20\\src\\lib.rs","num":8,"id":{"name":"cfg_if","disambiguator":[15664785966706829415,0]}},{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\schannel-0.1.20\\src\\lib.rs","num":9,"id":{"name":"miniz_oxide","disambiguator":[3895343934390880989,0]}},{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\schannel-0.1.20\\src\\lib.rs","num":10,"id":{"name":"rustc_std_workspace_alloc","disambiguator":[1841993658411810574,0]}},{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\schannel-0.1.20\\src\\lib.rs","num":11,"id":{"name":"adler","disambiguator":[1117248029108287081,0]}},{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\schannel-0.1.20\\src\\lib.rs","num":12,"id":{"name":"hashbrown","disambiguator":[14646112292732085519,0]}},{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\schannel-0.1.20\\src\\lib.rs","num":13,"id":{"name":"std_detect","disambiguator":[11979428506951486581,0]}},{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\schannel-0.1.20\\src\\lib.rs","num":14,"id":{"name":"rustc_demangle","disambiguator":[2104796995944127881,0]}},{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\schannel-0.1.20\\src\\lib.rs","num":15,"id":{"name":"panic_unwind","disambiguator":[4084207378877276393,0]}},{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\schannel-0.1.20\\src\\lib.rs","num":16,"id":{"name":"lazy_static","disambiguator":[17608421772039054989,0]}},{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\schannel-0.1.20\\src\\lib.rs","num":17,"id":{"name":"windows_sys","disambiguator":[7517967937015650826,0]}}],"span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\schannel-0.1.20\\src\\lib.rs","byte_start":0,"byte_end":3085,"line_start":1,"line_end":117,"column_start":1,"column_end":2}},"imports":[{"kind":"Use","ref_id":{"krate":0,"index":171},"span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\schannel-0.1.20\\src\\key_handle.rs","byte_start":66685,"byte_end":66695,"line_start":3,"line_end":3,"column_start":30,"column_end":40},"alias_span":null,"name":"KeyHandle","value":"","parent":{"krate":0,"index":424}}],"defs":[{"kind":"Mod","id":{"krate":0,"index":0},"span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\schannel-0.1.20\\src\\lib.rs","byte_start":0,"byte_end":3085,"line_start":1,"line_end":117,"column_start":1,"column_end":2},"name":"","qualname":"::","value":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\schannel-0.1.20\\src\\lib.rs","parent":null,"children":[{"krate":0,"index":1},{"krate":0,"index":2},{"krate":0,"index":3},{"krate":0,"index":4},{"krate":0,"index":7},{"krate":0,"index":10},{"krate":0,"index":13},{"krate":0,"index":14},{"krate":0,"index":17},{"krate":0,"index":72},{"krate":0,"index":208},{"krate":0,"index":307},{"krate":0,"index":316},{"krate":0,"index":382},{"krate":0,"index":424},{"krate":0,"index":428},{"krate":0,"index":437},{"krate":0,"index":490},{"krate":0,"index":704},{"krate":0,"index":734},{"krate":0,"index":752},{"krate":0,"index":818},{"krate":0,"index":819},{"krate":0,"index":820},{"krate":0,"index":825},{"krate":0,"index":826}],"decl_id":null,"docs":" Bindings to the Windows SChannel APIs.\n","sig":null,"attributes":[{"value":"/ Bindings to the Windows SChannel APIs.","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\schannel-0.1.20\\src\\lib.rs","byte_start":0,"byte_end":42,"line_start":1,"line_end":1,"column_start":1,"column_end":43}},{"value":"cfg(windows)","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\schannel-0.1.20\\src\\lib.rs","byte_start":43,"byte_end":59,"line_start":2,"line_end":2,"column_start":1,"column_end":17}},{"value":"warn(missing_docs)","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\schannel-0.1.20\\src\\lib.rs","byte_start":60,"byte_end":82,"line_start":3,"line_end":3,"column_start":1,"column_end":23}},{"value":"allow(non_upper_case_globals)","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\schannel-0.1.20\\src\\lib.rs","byte_start":83,"byte_end":116,"line_start":4,"line_end":4,"column_start":1,"column_end":34}}]},{"kind":"Trait","id":{"krate":0,"index":14},"span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\schannel-0.1.20\\src\\lib.rs","byte_start":1143,"byte_end":1153,"line_start":46,"line_end":46,"column_start":11,"column_end":21},"name":"RawPointer","qualname":"::RawPointer","value":"RawPointer","parent":null,"children":[{"krate":0,"index":15},{"krate":0,"index":16}],"decl_id":null,"docs":" Allows access to the underlying schannel API representation of a wrapped data type","sig":null,"attributes":[{"value":"/ Allows access to the underlying schannel API representation of a wrapped data type","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\schannel-0.1.20\\src\\lib.rs","byte_start":905,"byte_end":991,"line_start":42,"line_end":42,"column_start":1,"column_end":87}},{"value":"/","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\schannel-0.1.20\\src\\lib.rs","byte_start":992,"byte_end":995,"line_start":43,"line_end":43,"column_start":1,"column_end":4}},{"value":"/ Performing actions with internal handles might lead to the violation of internal assumptions","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\schannel-0.1.20\\src\\lib.rs","byte_start":996,"byte_end":1092,"line_start":44,"line_end":44,"column_start":1,"column_end":97}},{"value":"/ and therefore is inherently unsafe.","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\schannel-0.1.20\\src\\lib.rs","byte_start":1093,"byte_end":1132,"line_start":45,"line_end":45,"column_start":1,"column_end":40}}]},{"kind":"Method","id":{"krate":0,"index":15},"span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\schannel-0.1.20\\src\\lib.rs","byte_start":1290,"byte_end":1298,"line_start":50,"line_end":50,"column_start":15,"column_end":23},"name":"from_ptr","qualname":"::RawPointer::from_ptr","value":"pub unsafe fn from_ptr(*mut ::std::os::raw::c_void) -> Self","parent":{"krate":0,"index":14},"children":[],"decl_id":null,"docs":" Constructs an instance of this type from its handle / pointer.\n # Safety\n This function is unsafe\n","sig":null,"attributes":[{"value":"/ Constructs an instance of this type from its handle / pointer.","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\schannel-0.1.20\\src\\lib.rs","byte_start":1160,"byte_end":1226,"line_start":47,"line_end":47,"column_start":5,"column_end":71}},{"value":"/ # Safety","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\schannel-0.1.20\\src\\lib.rs","byte_start":1231,"byte_end":1243,"line_start":48,"line_end":48,"column_start":5,"column_end":17}},{"value":"/ This function is unsafe","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\schannel-0.1.20\\src\\lib.rs","byte_start":1248,"byte_end":1275,"line_start":49,"line_end":49,"column_start":5,"column_end":32}}]},{"kind":"Method","id":{"krate":0,"index":16},"span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\schannel-0.1.20\\src\\lib.rs","byte_start":1468,"byte_end":1474,"line_start":55,"line_end":55,"column_start":15,"column_end":21},"name":"as_ptr","qualname":"::RawPointer::as_ptr","value":"pub unsafe fn as_ptr(&Self) -> *mut ::std::os::raw::c_void","parent":{"krate":0,"index":14},"children":[],"decl_id":null,"docs":" Get a raw pointer from the underlying handle / pointer.\n # Safety\n This function is unsafe\n","sig":null,"attributes":[{"value":"/ Get a raw pointer from the underlying handle / pointer.","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\schannel-0.1.20\\src\\lib.rs","byte_start":1345,"byte_end":1404,"line_start":52,"line_end":52,"column_start":5,"column_end":64}},{"value":"/ # Safety","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\schannel-0.1.20\\src\\lib.rs","byte_start":1409,"byte_end":1421,"line_start":53,"line_end":53,"column_start":5,"column_end":17}},{"value":"/ This function is unsafe","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\schannel-0.1.20\\src\\lib.rs","byte_start":1426,"byte_end":1453,"line_start":54,"line_end":54,"column_start":5,"column_end":32}}]},{"kind":"Mod","id":{"krate":0,"index":17},"span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\schannel-0.1.20\\src\\cert_chain.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"cert_chain","qualname":"::cert_chain","value":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\schannel-0.1.20\\src\\cert_chain.rs","parent":null,"children":[{"krate":0,"index":18},{"krate":0,"index":21},{"krate":0,"index":24},{"krate":0,"index":27},{"krate":0,"index":30},{"krate":0,"index":33},{"krate":0,"index":827},{"krate":0,"index":831},{"krate":0,"index":36},{"krate":0,"index":37},{"krate":0,"index":38},{"krate":0,"index":40},{"krate":0,"index":42},{"krate":0,"index":46},{"krate":0,"index":50},{"krate":0,"index":56},{"krate":0,"index":60},{"krate":0,"index":64},{"krate":0,"index":68}],"decl_id":null,"docs":" Bindings to winapi's certificate-chain related APIs.\n","sig":null,"attributes":[{"value":"/ Bindings to winapi's certificate-chain related APIs.","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\schannel-0.1.20\\src\\cert_chain.rs","byte_start":3087,"byte_end":3143,"line_start":1,"line_end":1,"column_start":1,"column_end":57}}]},{"kind":"Struct","id":{"krate":0,"index":33},"span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\schannel-0.1.20\\src\\cert_chain.rs","byte_start":3357,"byte_end":3373,"line_start":12,"line_end":12,"column_start":12,"column_end":28},"name":"CertChainContext","qualname":"::cert_chain::CertChainContext","value":"","parent":null,"children":[],"decl_id":null,"docs":" A certificate chain context (consisting of multiple chains)\n","sig":null,"attributes":[{"value":"/ A certificate chain context (consisting of multiple chains)","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\schannel-0.1.20\\src\\cert_chain.rs","byte_start":3282,"byte_end":3345,"line_start":11,"line_end":11,"column_start":1,"column_end":64}}]},{"kind":"Method","id":{"krate":0,"index":43},"span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\schannel-0.1.20\\src\\cert_chain.rs","byte_start":4188,"byte_end":4199,"line_start":38,"line_end":38,"column_start":12,"column_end":23},"name":"final_chain","qualname":"<CertChainContext>::final_chain","value":"pub fn final_chain(&Self) -> Option<CertChain>","parent":null,"children":[],"decl_id":null,"docs":" Get the final (for a successful verification this means successful) certificate chain","sig":null,"attributes":[{"value":"/ Get the final (for a successful verification this means successful) certificate chain","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\schannel-0.1.20\\src\\cert_chain.rs","byte_start":3943,"byte_end":4032,"line_start":34,"line_end":34,"column_start":5,"column_end":94}},{"value":"/","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\schannel-0.1.20\\src\\cert_chain.rs","byte_start":4037,"byte_end":4040,"line_start":35,"line_end":35,"column_start":5,"column_end":8}},{"value":"/ https://msdn.microsoft.com/de-de/library/windows/desktop/aa377182(v=vs.85).aspx","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\schannel-0.1.20\\src\\cert_chain.rs","byte_start":4045,"byte_end":4128,"line_start":36,"line_end":36,"column_start":5,"column_end":88}},{"value":"/ rgpChain[cChain - 1] is the final chain","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\schannel-0.1.20\\src\\cert_chain.rs","byte_start":4133,"byte_end":4176,"line_start":37,"line_end":37,"column_start":5,"column_end":48}}]},{"kind":"Method","id":{"krate":0,"index":44},"span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\schannel-0.1.20\\src\\cert_chain.rs","byte_start":4438,"byte_end":4447,"line_start":46,"line_end":46,"column_start":12,"column_end":21},"name":"get_chain","qualname":"<CertChainContext>::get_chain","value":"pub fn get_chain(&Self, usize) -> Option<CertChain>","parent":null,"children":[],"decl_id":null,"docs":" Retrieves the specified chain from the context.\n","sig":null,"attributes":[{"value":"/ Retrieves the specified chain from the context.","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\schannel-0.1.20\\src\\cert_chain.rs","byte_start":4375,"byte_end":4426,"line_start":45,"line_end":45,"column_start":5,"column_end":56}}]},{"kind":"Method","id":{"krate":0,"index":45},"span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\schannel-0.1.20\\src\\cert_chain.rs","byte_start":4984,"byte_end":4990,"line_start":61,"line_end":61,"column_start":12,"column_end":18},"name":"chains","qualname":"<CertChainContext>::chains","value":"pub fn chains(&Self) -> CertificateChains","parent":null,"children":[],"decl_id":null,"docs":" Return an iterator over all certificate chains in this context\n","sig":null,"attributes":[{"value":"/ Return an iterator over all certificate chains in this context","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\schannel-0.1.20\\src\\cert_chain.rs","byte_start":4906,"byte_end":4972,"line_start":60,"line_end":60,"column_start":5,"column_end":71}}]},{"kind":"Struct","id":{"krate":0,"index":46},"span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\schannel-0.1.20\\src\\cert_chain.rs","byte_start":5159,"byte_end":5168,"line_start":70,"line_end":70,"column_start":12,"column_end":21},"name":"CertChain","qualname":"::cert_chain::CertChain","value":"","parent":null,"children":[],"decl_id":null,"docs":" A (simple) certificate chain\n","sig":null,"attributes":[{"value":"/ A (simple) certificate chain","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\schannel-0.1.20\\src\\cert_chain.rs","byte_start":5115,"byte_end":5147,"line_start":69,"line_end":69,"column_start":1,"column_end":33}}]},{"kind":"Method","id":{"krate":0,"index":51},"span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\schannel-0.1.20\\src\\cert_chain.rs","byte_start":5311,"byte_end":5314,"line_start":74,"line_end":74,"column_start":12,"column_end":15},"name":"len","qualname":"<CertChain>::len","value":"pub fn len(&Self) -> usize","parent":null,"children":[],"decl_id":null,"docs":" Returns the number of certificates in the chain\n","sig":null,"attributes":[{"value":"/ Returns the number of certificates in the chain","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\schannel-0.1.20\\src\\cert_chain.rs","byte_start":5248,"byte_end":5299,"line_start":73,"line_end":73,"column_start":5,"column_end":56}}]},{"kind":"Method","id":{"krate":0,"index":52},"span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\schannel-0.1.20\\src\\cert_chain.rs","byte_start":5461,"byte_end":5469,"line_start":79,"line_end":79,"column_start":12,"column_end":20},"name":"is_empty","qualname":"<CertChain>::is_empty","value":"pub fn is_empty(&Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Returns true if there are no certificates in the chain\n","sig":null,"attributes":[{"value":"/ Returns true if there are no certificates in the chain","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\schannel-0.1.20\\src\\cert_chain.rs","byte_start":5391,"byte_end":5449,"line_start":78,"line_end":78,"column_start":5,"column_end":63}}]},{"kind":"Method","id":{"krate":0,"index":53},"span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\schannel-0.1.20\\src\\cert_chain.rs","byte_start":5604,"byte_end":5607,"line_start":84,"line_end":84,"column_start":12,"column_end":15},"name":"get","qualname":"<CertChain>::get","value":"pub fn get(&Self, usize) -> Option<CertContext>","parent":null,"children":[],"decl_id":null,"docs":" Get the n-th certificate from the current chain\n","sig":null,"attributes":[{"value":"/ Get the n-th certificate from the current chain","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\schannel-0.1.20\\src\\cert_chain.rs","byte_start":5541,"byte_end":5592,"line_start":83,"line_end":83,"column_start":5,"column_end":56}}]},{"kind":"Method","id":{"krate":0,"index":55},"span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\schannel-0.1.20\\src\\cert_chain.rs","byte_start":6209,"byte_end":6221,"line_start":101,"line_end":101,"column_start":12,"column_end":24},"name":"certificates","qualname":"<CertChain>::certificates","value":"pub fn certificates(&Self) -> Certificates","parent":null,"children":[],"decl_id":null,"docs":" Return an iterator over all certificates in this chain\n","sig":null,"attributes":[{"value":"/ Return an iterator over all certificates in this chain","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\schannel-0.1.20\\src\\cert_chain.rs","byte_start":6139,"byte_end":6197,"line_start":100,"line_end":100,"column_start":5,"column_end":63}}]},{"kind":"Struct","id":{"krate":0,"index":56},"span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\schannel-0.1.20\\src\\cert_chain.rs","byte_start":6404,"byte_end":6421,"line_start":110,"line_end":110,"column_start":12,"column_end":29},"name":"CertificateChains","qualname":"::cert_chain::CertificateChains","value":"CertificateChains {  }","parent":null,"children":[{"krate":0,"index":58},{"krate":0,"index":59}],"decl_id":null,"docs":" An iterator that iterates over all chains in a context\n","sig":null,"attributes":[{"value":"/ An iterator that iterates over all chains in a context","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\schannel-0.1.20\\src\\cert_chain.rs","byte_start":6334,"byte_end":6392,"line_start":109,"line_end":109,"column_start":1,"column_end":59}}]},{"kind":"Struct","id":{"krate":0,"index":64},"span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\schannel-0.1.20\\src\\cert_chain.rs","byte_start":6772,"byte_end":6784,"line_start":126,"line_end":126,"column_start":12,"column_end":24},"name":"Certificates","qualname":"::cert_chain::Certificates","value":"Certificates {  }","parent":null,"children":[{"krate":0,"index":66},{"krate":0,"index":67}],"decl_id":null,"docs":" An iterator that iterates over all certificates in a chain\n","sig":null,"attributes":[{"value":"/ An iterator that iterates over all certificates in a chain","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\schannel-0.1.20\\src\\cert_chain.rs","byte_start":6698,"byte_end":6760,"line_start":125,"line_end":125,"column_start":1,"column_end":63}}]},{"kind":"Mod","id":{"krate":0,"index":72},"span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\schannel-0.1.20\\src\\cert_context.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"cert_context","qualname":"::cert_context","value":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\schannel-0.1.20\\src\\cert_context.rs","parent":null,"children":[{"krate":0,"index":73},{"krate":0,"index":74},{"krate":0,"index":77},{"krate":0,"index":80},{"krate":0,"index":83},{"krate":0,"index":86},{"krate":0,"index":89},{"krate":0,"index":90},{"krate":0,"index":93},{"krate":0,"index":96},{"krate":0,"index":99},{"krate":0,"index":102},{"krate":0,"index":105},{"krate":0,"index":106},{"krate":0,"index":109},{"krate":0,"index":112},{"krate":0,"index":115},{"krate":0,"index":118},{"krate":0,"index":122},{"krate":0,"index":834},{"krate":0,"index":837},{"krate":0,"index":128},{"krate":0,"index":129},{"krate":0,"index":130},{"krate":0,"index":132},{"krate":0,"index":839},{"krate":0,"index":843},{"krate":0,"index":134},{"krate":0,"index":159},{"krate":0,"index":161},{"krate":0,"index":165},{"krate":0,"index":171},{"krate":0,"index":178},{"krate":0,"index":186},{"krate":0,"index":846},{"krate":0,"index":849},{"krate":0,"index":850},{"krate":0,"index":199},{"krate":0,"index":202}],"decl_id":null,"docs":" Bindings to Windows `PCCERT_CONTEXT` APIs.\n","sig":null,"attributes":[{"value":"/ Bindings to Windows `PCCERT_CONTEXT` APIs.","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\schannel-0.1.20\\src\\cert_context.rs","byte_start":7043,"byte_end":7089,"line_start":1,"line_end":1,"column_start":1,"column_end":47}}]},{"kind":"Struct","id":{"krate":0,"index":118},"span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\schannel-0.1.20\\src\\cert_context.rs","byte_start":7490,"byte_end":7503,"line_start":19,"line_end":19,"column_start":12,"column_end":25},"name":"HashAlgorithm","qualname":"::cert_context::HashAlgorithm","value":"","parent":null,"children":[],"decl_id":null,"docs":" A supported hashing algorithm\n","sig":null,"attributes":[{"value":"/ A supported hashing algorithm","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\schannel-0.1.20\\src\\cert_context.rs","byte_start":7445,"byte_end":7478,"line_start":18,"line_end":18,"column_start":1,"column_end":34}}]},{"kind":"Method","id":{"krate":0,"index":123},"span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\schannel-0.1.20\\src\\cert_context.rs","byte_start":7573,"byte_end":7576,"line_start":23,"line_end":23,"column_start":12,"column_end":15},"name":"md5","qualname":"<HashAlgorithm>::md5","value":"pub fn md5() -> HashAlgorithm","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":124},"span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\schannel-0.1.20\\src\\cert_context.rs","byte_start":7764,"byte_end":7768,"line_start":30,"line_end":30,"column_start":12,"column_end":16},"name":"sha1","qualname":"<HashAlgorithm>::sha1","value":"pub fn sha1() -> HashAlgorithm","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":125},"span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\schannel-0.1.20\\src\\cert_context.rs","byte_start":7957,"byte_end":7963,"line_start":37,"line_end":37,"column_start":12,"column_end":18},"name":"sha256","qualname":"<HashAlgorithm>::sha256","value":"pub fn sha256() -> HashAlgorithm","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":126},"span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\schannel-0.1.20\\src\\cert_context.rs","byte_start":8187,"byte_end":8193,"line_start":46,"line_end":46,"column_start":12,"column_end":18},"name":"sha384","qualname":"<HashAlgorithm>::sha384","value":"pub fn sha384() -> HashAlgorithm","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":127},"span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\schannel-0.1.20\\src\\cert_context.rs","byte_start":8417,"byte_end":8423,"line_start":55,"line_end":55,"column_start":12,"column_end":18},"name":"sha512","qualname":"<HashAlgorithm>::sha512","value":"pub fn sha512() -> HashAlgorithm","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":834},"span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\schannel-0.1.20\\src\\cert_context.rs","byte_start":8726,"byte_end":8737,"line_start":67,"line_end":67,"column_start":12,"column_end":23},"name":"CertContext","qualname":"::cert_context::CertContext","value":"","parent":null,"children":[],"decl_id":null,"docs":" Wrapper of a winapi certificate, or a `PCCERT_CONTEXT`.\n","sig":null,"attributes":[{"value":"/ Wrapper of a winapi certificate, or a `PCCERT_CONTEXT`.","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\schannel-0.1.20\\src\\cert_context.rs","byte_start":8638,"byte_end":8697,"line_start":65,"line_end":65,"column_start":1,"column_end":60}}]},{"kind":"Method","id":{"krate":0,"index":135},"span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\schannel-0.1.20\\src\\cert_context.rs","byte_start":9297,"byte_end":9300,"line_start":90,"line_end":90,"column_start":12,"column_end":15},"name":"new","qualname":"<CertContext>::new","value":"pub fn new(&[u8]) -> io::Result<CertContext>","parent":null,"children":[],"decl_id":null,"docs":" Decodes a DER-formatted X509 certificate.\n","sig":null,"attributes":[{"value":"/ Decodes a DER-formatted X509 certificate.","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\schannel-0.1.20\\src\\cert_context.rs","byte_start":9240,"byte_end":9285,"line_start":89,"line_end":89,"column_start":5,"column_end":50}}]},{"kind":"Method","id":{"krate":0,"index":136},"span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\schannel-0.1.20\\src\\cert_context.rs","byte_start":9794,"byte_end":9800,"line_start":106,"line_end":106,"column_start":12,"column_end":18},"name":"to_der","qualname":"<CertContext>::to_der","value":"pub fn to_der(&Self) -> &[u8]","parent":null,"children":[],"decl_id":null,"docs":" Get certificate in binary DER form\n","sig":null,"attributes":[{"value":"/ Get certificate in binary DER form","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\schannel-0.1.20\\src\\cert_context.rs","byte_start":9744,"byte_end":9782,"line_start":105,"line_end":105,"column_start":5,"column_end":43}}]},{"kind":"Method","id":{"krate":0,"index":137},"span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\schannel-0.1.20\\src\\cert_context.rs","byte_start":9914,"byte_end":9941,"line_start":111,"line_end":111,"column_start":12,"column_end":39},"name":"subject_public_key_info_der","qualname":"<CertContext>::subject_public_key_info_der","value":"pub fn subject_public_key_info_der(&Self) -> io::Result<Vec<u8>>","parent":null,"children":[],"decl_id":null,"docs":" Certificate subject public key info\n","sig":null,"attributes":[{"value":"/ Certificate subject public key info","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\schannel-0.1.20\\src\\cert_context.rs","byte_start":9863,"byte_end":9902,"line_start":110,"line_end":110,"column_start":5,"column_end":44}}]},{"kind":"Method","id":{"krate":0,"index":138},"span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\schannel-0.1.20\\src\\cert_context.rs","byte_start":11518,"byte_end":11526,"line_start":149,"line_end":149,"column_start":12,"column_end":20},"name":"from_pem","qualname":"<CertContext>::from_pem","value":"pub fn from_pem(&str) -> io::Result<CertContext>","parent":null,"children":[],"decl_id":null,"docs":" Decodes a PEM-formatted X509 certificate.\n","sig":null,"attributes":[{"value":"/ Decodes a PEM-formatted X509 certificate.","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\schannel-0.1.20\\src\\cert_context.rs","byte_start":11461,"byte_end":11506,"line_start":148,"line_end":148,"column_start":5,"column_end":50}}]},{"kind":"Method","id":{"krate":0,"index":139},"span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\schannel-0.1.20\\src\\cert_context.rs","byte_start":12675,"byte_end":12681,"line_start":186,"line_end":186,"column_start":12,"column_end":18},"name":"to_pem","qualname":"<CertContext>::to_pem","value":"pub fn to_pem(&Self) -> io::Result<String>","parent":null,"children":[],"decl_id":null,"docs":" Get certificate as PEM-formatted X509 certificate.\n","sig":null,"attributes":[{"value":"/ Get certificate as PEM-formatted X509 certificate.","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\schannel-0.1.20\\src\\cert_context.rs","byte_start":12609,"byte_end":12663,"line_start":185,"line_end":185,"column_start":5,"column_end":59}}]},{"kind":"Method","id":{"krate":0,"index":140},"span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\schannel-0.1.20\\src\\cert_context.rs","byte_start":13734,"byte_end":13745,"line_start":219,"line_end":219,"column_start":12,"column_end":23},"name":"fingerprint","qualname":"<CertContext>::fingerprint","value":"pub fn fingerprint(&Self, HashAlgorithm) -> io::Result<Vec<u8>>","parent":null,"children":[],"decl_id":null,"docs":" Returns a hash of this certificate\n","sig":null,"attributes":[{"value":"/ Returns a hash of this certificate","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\schannel-0.1.20\\src\\cert_context.rs","byte_start":13684,"byte_end":13722,"line_start":218,"line_end":218,"column_start":5,"column_end":43}}]},{"kind":"Method","id":{"krate":0,"index":141},"span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\schannel-0.1.20\\src\\cert_context.rs","byte_start":14579,"byte_end":14583,"line_start":246,"line_end":246,"column_start":12,"column_end":16},"name":"sha1","qualname":"<CertContext>::sha1","value":"pub fn sha1(&Self) -> io::Result<[u8; ]>","parent":null,"children":[],"decl_id":null,"docs":" Returns the sha1 hash of this certificate","sig":null,"attributes":[{"value":"/ Returns the sha1 hash of this certificate","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\schannel-0.1.20\\src\\cert_context.rs","byte_start":14359,"byte_end":14404,"line_start":241,"line_end":241,"column_start":5,"column_end":50}},{"value":"/","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\schannel-0.1.20\\src\\cert_context.rs","byte_start":14409,"byte_end":14412,"line_start":242,"line_end":242,"column_start":5,"column_end":8}},{"value":"/ The sha1 is returned as a 20-byte array representing the bits of the","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\schannel-0.1.20\\src\\cert_context.rs","byte_start":14417,"byte_end":14489,"line_start":243,"line_end":243,"column_start":5,"column_end":77}},{"value":"/ sha1 hash.","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\schannel-0.1.20\\src\\cert_context.rs","byte_start":14494,"byte_end":14508,"line_start":244,"line_end":244,"column_start":5,"column_end":19}},{"value":"deprecated(note = \"please use fingerprint instead\")","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\schannel-0.1.20\\src\\cert_context.rs","byte_start":14513,"byte_end":14567,"line_start":245,"line_end":245,"column_start":5,"column_end":59}}]},{"kind":"Method","id":{"krate":0,"index":144},"span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\schannel-0.1.20\\src\\cert_context.rs","byte_start":15109,"byte_end":15129,"line_start":263,"line_end":263,"column_start":12,"column_end":32},"name":"sign_hash_algorithms","qualname":"<CertContext>::sign_hash_algorithms","value":"pub fn sign_hash_algorithms(&Self) -> io::Result<String>","parent":null,"children":[],"decl_id":null,"docs":" Returns the `<SIGNATURE>/<HASH>` string representing the certificate\n signature.","sig":null,"attributes":[{"value":"/ Returns the `<SIGNATURE>/<HASH>` string representing the certificate","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\schannel-0.1.20\\src\\cert_context.rs","byte_start":14749,"byte_end":14821,"line_start":252,"line_end":252,"column_start":5,"column_end":77}},{"value":"/ signature.","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\schannel-0.1.20\\src\\cert_context.rs","byte_start":14826,"byte_end":14840,"line_start":253,"line_end":253,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\schannel-0.1.20\\src\\cert_context.rs","byte_start":14845,"byte_end":14848,"line_start":254,"line_end":254,"column_start":5,"column_end":8}},{"value":"/ The `<SIGNATURE>` value identifies the CNG public key","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\schannel-0.1.20\\src\\cert_context.rs","byte_start":14853,"byte_end":14910,"line_start":255,"line_end":255,"column_start":5,"column_end":62}},{"value":"/ algorithm. The `<HASH>` value identifies the CNG hash algorithm.","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\schannel-0.1.20\\src\\cert_context.rs","byte_start":14915,"byte_end":14983,"line_start":256,"line_end":256,"column_start":5,"column_end":73}},{"value":"/","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\schannel-0.1.20\\src\\cert_context.rs","byte_start":14988,"byte_end":14991,"line_start":257,"line_end":257,"column_start":5,"column_end":8}},{"value":"/ Common examples are:","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\schannel-0.1.20\\src\\cert_context.rs","byte_start":14996,"byte_end":15020,"line_start":258,"line_end":258,"column_start":5,"column_end":29}},{"value":"/","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\schannel-0.1.20\\src\\cert_context.rs","byte_start":15025,"byte_end":15028,"line_start":259,"line_end":259,"column_start":5,"column_end":8}},{"value":"/ * `RSA/SHA1`","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\schannel-0.1.20\\src\\cert_context.rs","byte_start":15033,"byte_end":15049,"line_start":260,"line_end":260,"column_start":5,"column_end":21}},{"value":"/ * `RSA/SHA256`","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\schannel-0.1.20\\src\\cert_context.rs","byte_start":15054,"byte_end":15072,"line_start":261,"line_end":261,"column_start":5,"column_end":23}},{"value":"/ * `ECDSA/SHA256`","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\schannel-0.1.20\\src\\cert_context.rs","byte_start":15077,"byte_end":15097,"line_start":262,"line_end":262,"column_start":5,"column_end":25}}]},{"kind":"Method","id":{"krate":0,"index":145},"span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\schannel-0.1.20\\src\\cert_context.rs","byte_start":15285,"byte_end":15299,"line_start":268,"line_end":268,"column_start":12,"column_end":26},"name":"signature_hash","qualname":"<CertContext>::signature_hash","value":"pub fn signature_hash(&Self) -> io::Result<Vec<u8>>","parent":null,"children":[],"decl_id":null,"docs":" Returns the signature hash.\n","sig":null,"attributes":[{"value":"/ Returns the signature hash.","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\schannel-0.1.20\\src\\cert_context.rs","byte_start":15242,"byte_end":15273,"line_start":267,"line_end":267,"column_start":5,"column_end":36}}]},{"kind":"Method","id":{"krate":0,"index":146},"span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\schannel-0.1.20\\src\\cert_context.rs","byte_start":15551,"byte_end":15562,"line_start":274,"line_end":274,"column_start":12,"column_end":23},"name":"description","qualname":"<CertContext>::description","value":"pub fn description(&Self) -> io::Result<Vec<u8>>","parent":null,"children":[],"decl_id":null,"docs":" Returns the property displayed by the certificate UI. This property\n allows the user to describe the certificate's use.\n","sig":null,"attributes":[{"value":"/ Returns the property displayed by the certificate UI. This property","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\schannel-0.1.20\\src\\cert_context.rs","byte_start":15409,"byte_end":15480,"line_start":272,"line_end":272,"column_start":5,"column_end":76}},{"value":"/ allows the user to describe the certificate's use.","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\schannel-0.1.20\\src\\cert_context.rs","byte_start":15485,"byte_end":15539,"line_start":273,"line_end":273,"column_start":5,"column_end":59}}]},{"kind":"Method","id":{"krate":0,"index":147},"span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\schannel-0.1.20\\src\\cert_context.rs","byte_start":15753,"byte_end":15766,"line_start":279,"line_end":279,"column_start":12,"column_end":25},"name":"friendly_name","qualname":"<CertContext>::friendly_name","value":"pub fn friendly_name(&Self) -> io::Result<String>","parent":null,"children":[],"decl_id":null,"docs":" Returns a string that contains the display name for the certificate.\n","sig":null,"attributes":[{"value":"/ Returns a string that contains the display name for the certificate.","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\schannel-0.1.20\\src\\cert_context.rs","byte_start":15669,"byte_end":15741,"line_start":278,"line_end":278,"column_start":5,"column_end":77}}]},{"kind":"Method","id":{"krate":0,"index":148},"span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\schannel-0.1.20\\src\\cert_context.rs","byte_start":15973,"byte_end":15990,"line_start":285,"line_end":285,"column_start":12,"column_end":29},"name":"set_friendly_name","qualname":"<CertContext>::set_friendly_name","value":"pub fn set_friendly_name(&Self, &str) -> io::Result<()>","parent":null,"children":[],"decl_id":null,"docs":" Configures the string that contains the display name for this\n certificate.\n","sig":null,"attributes":[{"value":"/ Configures the string that contains the display name for this","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\schannel-0.1.20\\src\\cert_context.rs","byte_start":15875,"byte_end":15940,"line_start":283,"line_end":283,"column_start":5,"column_end":70}},{"value":"/ certificate.","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\schannel-0.1.20\\src\\cert_context.rs","byte_start":15945,"byte_end":15961,"line_start":284,"line_end":284,"column_start":5,"column_end":21}}]},{"kind":"Method","id":{"krate":0,"index":149},"span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\schannel-0.1.20\\src\\cert_context.rs","byte_start":16222,"byte_end":16235,"line_start":291,"line_end":291,"column_start":12,"column_end":25},"name":"is_time_valid","qualname":"<CertContext>::is_time_valid","value":"pub fn is_time_valid(&Self) -> io::Result<bool>","parent":null,"children":[],"decl_id":null,"docs":" Verifies the time validity of this certificate relative to the system's\n current time.\n","sig":null,"attributes":[{"value":"/ Verifies the time validity of this certificate relative to the system's","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\schannel-0.1.20\\src\\cert_context.rs","byte_start":16113,"byte_end":16188,"line_start":289,"line_end":289,"column_start":5,"column_end":80}},{"value":"/ current time.","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\schannel-0.1.20\\src\\cert_context.rs","byte_start":16193,"byte_end":16210,"line_start":290,"line_end":290,"column_start":5,"column_end":22}}]},{"kind":"Method","id":{"krate":0,"index":150},"span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\schannel-0.1.20\\src\\cert_context.rs","byte_start":16514,"byte_end":16525,"line_start":298,"line_end":298,"column_start":12,"column_end":23},"name":"private_key","qualname":"<CertContext>::private_key","value":"pub fn private_key(&Self) -> AcquirePrivateKeyOptions","parent":null,"children":[],"decl_id":null,"docs":" Returns a builder used to acquire the private key corresponding to this certificate.\n","sig":null,"attributes":[{"value":"/ Returns a builder used to acquire the private key corresponding to this certificate.","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\schannel-0.1.20\\src\\cert_context.rs","byte_start":16414,"byte_end":16502,"line_start":297,"line_end":297,"column_start":5,"column_end":93}}]},{"kind":"Method","id":{"krate":0,"index":151},"span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\schannel-0.1.20\\src\\cert_context.rs","byte_start":16733,"byte_end":16739,"line_start":306,"line_end":306,"column_start":12,"column_end":18},"name":"delete","qualname":"<CertContext>::delete","value":"pub fn delete(Self) -> io::Result<()>","parent":null,"children":[],"decl_id":null,"docs":" Deletes this certificate from its certificate store.\n","sig":null,"attributes":[{"value":"/ Deletes this certificate from its certificate store.","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\schannel-0.1.20\\src\\cert_context.rs","byte_start":16665,"byte_end":16721,"line_start":305,"line_end":305,"column_start":5,"column_end":61}}]},{"kind":"Method","id":{"krate":0,"index":152},"span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\schannel-0.1.20\\src\\cert_context.rs","byte_start":17138,"byte_end":17155,"line_start":319,"line_end":319,"column_start":12,"column_end":29},"name":"set_key_prov_info","qualname":"<CertContext>::set_key_prov_info","value":"pub fn set_key_prov_info(&Self) -> SetKeyProvInfo","parent":null,"children":[],"decl_id":null,"docs":" Returns a builder used to set the private key associated with this certificate.\n","sig":null,"attributes":[{"value":"/ Returns a builder used to set the private key associated with this certificate.","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\schannel-0.1.20\\src\\cert_context.rs","byte_start":17043,"byte_end":17126,"line_start":318,"line_end":318,"column_start":5,"column_end":88}}]},{"kind":"Method","id":{"krate":0,"index":153},"span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\schannel-0.1.20\\src\\cert_context.rs","byte_start":17438,"byte_end":17448,"line_start":331,"line_end":331,"column_start":12,"column_end":22},"name":"valid_uses","qualname":"<CertContext>::valid_uses","value":"pub fn valid_uses(&Self) -> io::Result<ValidUses>","parent":null,"children":[],"decl_id":null,"docs":" Returns the valid uses for this certificate\n","sig":null,"attributes":[{"value":"/ Returns the valid uses for this certificate","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\schannel-0.1.20\\src\\cert_context.rs","byte_start":17379,"byte_end":17426,"line_start":330,"line_end":330,"column_start":5,"column_end":52}}]},{"kind":"Method","id":{"krate":0,"index":154},"span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\schannel-0.1.20\\src\\cert_context.rs","byte_start":19144,"byte_end":19154,"line_start":375,"line_end":375,"column_start":12,"column_end":22},"name":"cert_store","qualname":"<CertContext>::cert_store","value":"pub fn cert_store(&Self) -> Option<CertStore>","parent":null,"children":[],"decl_id":null,"docs":" For a remote certificate, returns a certificate store containing any intermediate\n certificates provided by the remote sender.\n","sig":null,"attributes":[{"value":"/ For a remote certificate, returns a certificate store containing any intermediate","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\schannel-0.1.20\\src\\cert_context.rs","byte_start":18995,"byte_end":19080,"line_start":373,"line_end":373,"column_start":5,"column_end":90}},{"value":"/ certificates provided by the remote sender.","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\schannel-0.1.20\\src\\cert_context.rs","byte_start":19085,"byte_end":19132,"line_start":374,"line_end":374,"column_start":5,"column_end":52}}]},{"kind":"Struct","id":{"krate":0,"index":161},"span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\schannel-0.1.20\\src\\cert_context.rs","byte_start":22408,"byte_end":22432,"line_start":483,"line_end":483,"column_start":12,"column_end":36},"name":"AcquirePrivateKeyOptions","qualname":"::cert_context::AcquirePrivateKeyOptions","value":"AcquirePrivateKeyOptions {  }","parent":null,"children":[{"krate":0,"index":163},{"krate":0,"index":164}],"decl_id":null,"docs":" A builder type for certificate private key lookup.\n","sig":null,"attributes":[{"value":"/ A builder type for certificate private key lookup.","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\schannel-0.1.20\\src\\cert_context.rs","byte_start":22342,"byte_end":22396,"line_start":482,"line_end":482,"column_start":1,"column_end":55}}]},{"kind":"Method","id":{"krate":0,"index":167},"span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\schannel-0.1.20\\src\\cert_context.rs","byte_start":22646,"byte_end":22657,"line_start":491,"line_end":491,"column_start":12,"column_end":23},"name":"compare_key","qualname":"<AcquirePrivateKeyOptions>::compare_key","value":"pub fn compare_key(&mut Self, bool) -> &mut AcquirePrivateKeyOptions","parent":null,"children":[],"decl_id":null,"docs":" If set, the certificate's public key will be compared with the private key to ensure a\n match.\n","sig":null,"attributes":[{"value":"/ If set, the certificate's public key will be compared with the private key to ensure a","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\schannel-0.1.20\\src\\cert_context.rs","byte_start":22529,"byte_end":22619,"line_start":489,"line_end":489,"column_start":5,"column_end":95}},{"value":"/ match.","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\schannel-0.1.20\\src\\cert_context.rs","byte_start":22624,"byte_end":22634,"line_start":490,"line_end":490,"column_start":5,"column_end":15}}]},{"kind":"Method","id":{"krate":0,"index":168},"span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\schannel-0.1.20\\src\\cert_context.rs","byte_start":22934,"byte_end":22940,"line_start":497,"line_end":497,"column_start":12,"column_end":18},"name":"silent","qualname":"<AcquirePrivateKeyOptions>::silent","value":"pub fn silent(&mut Self, bool) -> &mut AcquirePrivateKeyOptions","parent":null,"children":[],"decl_id":null,"docs":" If set, the lookup will not display any user interface, even if that causes the lookup to\n fail.\n","sig":null,"attributes":[{"value":"/ If set, the lookup will not display any user interface, even if that causes the lookup to","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\schannel-0.1.20\\src\\cert_context.rs","byte_start":22815,"byte_end":22908,"line_start":495,"line_end":495,"column_start":5,"column_end":98}},{"value":"/ fail.","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\schannel-0.1.20\\src\\cert_context.rs","byte_start":22913,"byte_end":22922,"line_start":496,"line_end":496,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":170},"span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\schannel-0.1.20\\src\\cert_context.rs","byte_start":23344,"byte_end":23351,"line_start":511,"line_end":511,"column_start":12,"column_end":19},"name":"acquire","qualname":"<AcquirePrivateKeyOptions>::acquire","value":"pub fn acquire(&Self) -> io::Result<PrivateKey>","parent":null,"children":[],"decl_id":null,"docs":" Acquires the private key handle.\n","sig":null,"attributes":[{"value":"/ Acquires the private key handle.","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\schannel-0.1.20\\src\\cert_context.rs","byte_start":23296,"byte_end":23332,"line_start":510,"line_end":510,"column_start":5,"column_end":41}}]},{"kind":"TupleVariant","id":{"krate":0,"index":172},"span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\schannel-0.1.20\\src\\cert_context.rs","byte_start":24464,"byte_end":24473,"line_start":541,"line_end":541,"column_start":5,"column_end":14},"name":"CryptProv","qualname":"::cert_context::PrivateKey::CryptProv","value":"PrivateKey::CryptProv(CryptProv)","parent":{"krate":0,"index":171},"children":[],"decl_id":null,"docs":" A CryptoAPI provider.\n","sig":null,"attributes":[{"value":"/ A CryptoAPI provider.","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\schannel-0.1.20\\src\\cert_context.rs","byte_start":24434,"byte_end":24459,"line_start":540,"line_end":540,"column_start":5,"column_end":30}}]},{"kind":"TupleVariant","id":{"krate":0,"index":175},"span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\schannel-0.1.20\\src\\cert_context.rs","byte_start":24514,"byte_end":24523,"line_start":543,"line_end":543,"column_start":5,"column_end":14},"name":"NcryptKey","qualname":"::cert_context::PrivateKey::NcryptKey","value":"PrivateKey::NcryptKey(NcryptKey)","parent":{"krate":0,"index":171},"children":[],"decl_id":null,"docs":" A CNG provider.\n","sig":null,"attributes":[{"value":"/ A CNG provider.","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\schannel-0.1.20\\src\\cert_context.rs","byte_start":24490,"byte_end":24509,"line_start":542,"line_end":542,"column_start":5,"column_end":24}}]},{"kind":"Enum","id":{"krate":0,"index":171},"span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\schannel-0.1.20\\src\\cert_context.rs","byte_start":24417,"byte_end":24427,"line_start":539,"line_end":539,"column_start":10,"column_end":20},"name":"PrivateKey","qualname":"::cert_context::PrivateKey","value":"pub enum PrivateKey { CryptProv(CryptProv), NcryptKey(NcryptKey), }","parent":null,"children":[{"krate":0,"index":172},{"krate":0,"index":175}],"decl_id":null,"docs":" The private key associated with a certificate context.\n","sig":null,"attributes":[{"value":"/ The private key associated with a certificate context.","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\schannel-0.1.20\\src\\cert_context.rs","byte_start":24349,"byte_end":24407,"line_start":538,"line_end":538,"column_start":1,"column_end":59}}]},{"kind":"Struct","id":{"krate":0,"index":178},"span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\schannel-0.1.20\\src\\cert_context.rs","byte_start":24623,"byte_end":24637,"line_start":547,"line_end":547,"column_start":12,"column_end":26},"name":"SetKeyProvInfo","qualname":"::cert_context::SetKeyProvInfo","value":"SetKeyProvInfo {  }","parent":null,"children":[{"krate":0,"index":180},{"krate":0,"index":181},{"krate":0,"index":182},{"krate":0,"index":183},{"krate":0,"index":184},{"krate":0,"index":185}],"decl_id":null,"docs":" A builder used to set the private key associated with a certificate.\n","sig":null,"attributes":[{"value":"/ A builder used to set the private key associated with a certificate.","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\schannel-0.1.20\\src\\cert_context.rs","byte_start":24539,"byte_end":24611,"line_start":546,"line_end":546,"column_start":1,"column_end":73}}]},{"kind":"Method","id":{"krate":0,"index":188},"span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\schannel-0.1.20\\src\\cert_context.rs","byte_start":24995,"byte_end":25004,"line_start":561,"line_end":561,"column_start":12,"column_end":21},"name":"container","qualname":"<SetKeyProvInfo>::container","value":"pub fn container(&mut Self, &str) -> &mut SetKeyProvInfo","parent":null,"children":[],"decl_id":null,"docs":" The name of the key container.","sig":null,"attributes":[{"value":"/ The name of the key container.","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\schannel-0.1.20\\src\\cert_context.rs","byte_start":24824,"byte_end":24858,"line_start":557,"line_end":557,"column_start":5,"column_end":39}},{"value":"/","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\schannel-0.1.20\\src\\cert_context.rs","byte_start":24863,"byte_end":24866,"line_start":558,"line_end":558,"column_start":5,"column_end":8}},{"value":"/ If `type_` is not provided, this specifies the name of the key withing","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\schannel-0.1.20\\src\\cert_context.rs","byte_start":24871,"byte_end":24945,"line_start":559,"line_end":559,"column_start":5,"column_end":79}},{"value":"/ the CNG key storage provider.","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\schannel-0.1.20\\src\\cert_context.rs","byte_start":24950,"byte_end":24983,"line_start":560,"line_end":560,"column_start":5,"column_end":38}}]},{"kind":"Method","id":{"krate":0,"index":189},"span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\schannel-0.1.20\\src\\cert_context.rs","byte_start":25312,"byte_end":25320,"line_start":570,"line_end":570,"column_start":12,"column_end":20},"name":"provider","qualname":"<SetKeyProvInfo>::provider","value":"pub fn provider(&mut Self, &str) -> &mut SetKeyProvInfo","parent":null,"children":[],"decl_id":null,"docs":" The name of the CSP.","sig":null,"attributes":[{"value":"/ The name of the CSP.","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\schannel-0.1.20\\src\\cert_context.rs","byte_start":25168,"byte_end":25192,"line_start":566,"line_end":566,"column_start":5,"column_end":29}},{"value":"/","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\schannel-0.1.20\\src\\cert_context.rs","byte_start":25197,"byte_end":25200,"line_start":567,"line_end":567,"column_start":5,"column_end":8}},{"value":"/ If `type_` is not provided, this contains the name of the CNG key","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\schannel-0.1.20\\src\\cert_context.rs","byte_start":25205,"byte_end":25274,"line_start":568,"line_end":568,"column_start":5,"column_end":74}},{"value":"/ storage provider.","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\schannel-0.1.20\\src\\cert_context.rs","byte_start":25279,"byte_end":25300,"line_start":569,"line_end":569,"column_start":5,"column_end":26}}]},{"kind":"Method","id":{"krate":0,"index":190},"span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\schannel-0.1.20\\src\\cert_context.rs","byte_start":25615,"byte_end":25620,"line_start":579,"line_end":579,"column_start":12,"column_end":17},"name":"type_","qualname":"<SetKeyProvInfo>::type_","value":"pub fn type_(&mut Self, ProviderType) -> &mut SetKeyProvInfo","parent":null,"children":[],"decl_id":null,"docs":" Sets the CSP type.","sig":null,"attributes":[{"value":"/ Sets the CSP type.","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\schannel-0.1.20\\src\\cert_context.rs","byte_start":25481,"byte_end":25503,"line_start":575,"line_end":575,"column_start":5,"column_end":27}},{"value":"/","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\schannel-0.1.20\\src\\cert_context.rs","byte_start":25508,"byte_end":25511,"line_start":576,"line_end":576,"column_start":5,"column_end":8}},{"value":"/ If not provided, the key container is one of the CNG key storage","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\schannel-0.1.20\\src\\cert_context.rs","byte_start":25516,"byte_end":25584,"line_start":577,"line_end":577,"column_start":5,"column_end":73}},{"value":"/ providers.","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\schannel-0.1.20\\src\\cert_context.rs","byte_start":25589,"byte_end":25603,"line_start":578,"line_end":578,"column_start":5,"column_end":19}}]},{"kind":"Method","id":{"krate":0,"index":191},"span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\schannel-0.1.20\\src\\cert_context.rs","byte_start":25871,"byte_end":25880,"line_start":586,"line_end":586,"column_start":12,"column_end":21},"name":"keep_open","qualname":"<SetKeyProvInfo>::keep_open","value":"pub fn keep_open(&mut Self, bool) -> &mut SetKeyProvInfo","parent":null,"children":[],"decl_id":null,"docs":" If set, the handle to the key provider can be kept open for subsequent\n calls to cryptographic functions.\n","sig":null,"attributes":[{"value":"/ If set, the handle to the key provider can be kept open for subsequent","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\schannel-0.1.20\\src\\cert_context.rs","byte_start":25743,"byte_end":25817,"line_start":584,"line_end":584,"column_start":5,"column_end":79}},{"value":"/ calls to cryptographic functions.","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\schannel-0.1.20\\src\\cert_context.rs","byte_start":25822,"byte_end":25859,"line_start":585,"line_end":585,"column_start":5,"column_end":42}}]},{"kind":"Method","id":{"krate":0,"index":192},"span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\schannel-0.1.20\\src\\cert_context.rs","byte_start":26090,"byte_end":26104,"line_start":591,"line_end":591,"column_start":12,"column_end":26},"name":"machine_keyset","qualname":"<SetKeyProvInfo>::machine_keyset","value":"pub fn machine_keyset(&mut Self, bool) -> &mut SetKeyProvInfo","parent":null,"children":[],"decl_id":null,"docs":" If set, the key container contains machine keys.\n","sig":null,"attributes":[{"value":"/ If set, the key container contains machine keys.","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\schannel-0.1.20\\src\\cert_context.rs","byte_start":26026,"byte_end":26078,"line_start":590,"line_end":590,"column_start":5,"column_end":57}}]},{"kind":"Method","id":{"krate":0,"index":193},"span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\schannel-0.1.20\\src\\cert_context.rs","byte_start":26359,"byte_end":26365,"line_start":597,"line_end":597,"column_start":12,"column_end":18},"name":"silent","qualname":"<SetKeyProvInfo>::silent","value":"pub fn silent(&mut Self, bool) -> &mut SetKeyProvInfo","parent":null,"children":[],"decl_id":null,"docs":" If set, the key container will attempt to open keys without any user\n interface prompts.\n","sig":null,"attributes":[{"value":"/ If set, the key container will attempt to open keys without any user","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\schannel-0.1.20\\src\\cert_context.rs","byte_start":26248,"byte_end":26320,"line_start":595,"line_end":595,"column_start":5,"column_end":77}},{"value":"/ interface prompts.","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\schannel-0.1.20\\src\\cert_context.rs","byte_start":26325,"byte_end":26347,"line_start":596,"line_end":596,"column_start":5,"column_end":27}}]},{"kind":"Method","id":{"krate":0,"index":195},"span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\schannel-0.1.20\\src\\cert_context.rs","byte_start":26751,"byte_end":26759,"line_start":611,"line_end":611,"column_start":12,"column_end":20},"name":"key_spec","qualname":"<SetKeyProvInfo>::key_spec","value":"pub fn key_spec(&mut Self, KeySpec) -> &mut SetKeyProvInfo","parent":null,"children":[],"decl_id":null,"docs":" The specification of the private key to retrieve.\n","sig":null,"attributes":[{"value":"/ The specification of the private key to retrieve.","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\schannel-0.1.20\\src\\cert_context.rs","byte_start":26686,"byte_end":26739,"line_start":610,"line_end":610,"column_start":5,"column_end":58}}]},{"kind":"Method","id":{"krate":0,"index":196},"span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\schannel-0.1.20\\src\\cert_context.rs","byte_start":26937,"byte_end":26940,"line_start":617,"line_end":617,"column_start":12,"column_end":15},"name":"set","qualname":"<SetKeyProvInfo>::set","value":"pub fn set(&mut Self) -> io::Result<()>","parent":null,"children":[],"decl_id":null,"docs":" Sets the private key for this certificate.\n","sig":null,"attributes":[{"value":"/ Sets the private key for this certificate.","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\schannel-0.1.20\\src\\cert_context.rs","byte_start":26879,"byte_end":26925,"line_start":616,"line_end":616,"column_start":5,"column_end":51}}]},{"kind":"Struct","id":{"krate":0,"index":846},"span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\schannel-0.1.20\\src\\cert_context.rs","byte_start":28157,"byte_end":28164,"line_start":657,"line_end":657,"column_start":12,"column_end":19},"name":"KeySpec","qualname":"::cert_context::KeySpec","value":"","parent":null,"children":[],"decl_id":null,"docs":" The specification of a private key.\n","sig":null,"attributes":[{"value":"/ The specification of a private key.","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\schannel-0.1.20\\src\\cert_context.rs","byte_start":28083,"byte_end":28122,"line_start":655,"line_end":655,"column_start":1,"column_end":40}}]},{"kind":"Method","id":{"krate":0,"index":200},"span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\schannel-0.1.20\\src\\cert_context.rs","byte_start":28250,"byte_end":28262,"line_start":661,"line_end":661,"column_start":12,"column_end":24},"name":"key_exchange","qualname":"<KeySpec>::key_exchange","value":"pub fn key_exchange() -> KeySpec","parent":null,"children":[],"decl_id":null,"docs":" A key used to encrypt/decrypt session keys.\n","sig":null,"attributes":[{"value":"/ A key used to encrypt/decrypt session keys.","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\schannel-0.1.20\\src\\cert_context.rs","byte_start":28191,"byte_end":28238,"line_start":660,"line_end":660,"column_start":5,"column_end":52}}]},{"kind":"Method","id":{"krate":0,"index":201},"span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\schannel-0.1.20\\src\\cert_context.rs","byte_start":28402,"byte_end":28411,"line_start":666,"line_end":666,"column_start":12,"column_end":21},"name":"signature","qualname":"<KeySpec>::signature","value":"pub fn signature() -> KeySpec","parent":null,"children":[],"decl_id":null,"docs":" A key used to create and verify digital signatures.\n","sig":null,"attributes":[{"value":"/ A key used to create and verify digital signatures.","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\schannel-0.1.20\\src\\cert_context.rs","byte_start":28335,"byte_end":28390,"line_start":665,"line_end":665,"column_start":5,"column_end":60}}]},{"kind":"TupleVariant","id":{"krate":0,"index":203},"span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\schannel-0.1.20\\src\\cert_context.rs","byte_start":28603,"byte_end":28606,"line_start":674,"line_end":674,"column_start":5,"column_end":8},"name":"All","qualname":"::cert_context::ValidUses::All","value":"ValidUses::All","parent":{"krate":0,"index":202},"children":[],"decl_id":null,"docs":" Certificate is valid for all uses\n","sig":null,"attributes":[{"value":"/ Certificate is valid for all uses","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\schannel-0.1.20\\src\\cert_context.rs","byte_start":28561,"byte_end":28598,"line_start":673,"line_end":673,"column_start":5,"column_end":42}}]},{"kind":"TupleVariant","id":{"krate":0,"index":205},"span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\schannel-0.1.20\\src\\cert_context.rs","byte_start":28727,"byte_end":28731,"line_start":678,"line_end":678,"column_start":5,"column_end":9},"name":"Oids","qualname":"::cert_context::ValidUses::Oids","value":"ValidUses::Oids(Vec<String>)","parent":{"krate":0,"index":202},"children":[],"decl_id":null,"docs":" Certificate is valid for uses specified. No entries means that the certificate\n has no valid uses.\n","sig":null,"attributes":[{"value":"/ Certificate is valid for uses specified. No entries means that the certificate","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\schannel-0.1.20\\src\\cert_context.rs","byte_start":28613,"byte_end":28695,"line_start":676,"line_end":676,"column_start":5,"column_end":87}},{"value":"/ has no valid uses.","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\schannel-0.1.20\\src\\cert_context.rs","byte_start":28700,"byte_end":28722,"line_start":677,"line_end":677,"column_start":5,"column_end":27}}]},{"kind":"Enum","id":{"krate":0,"index":202},"span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\schannel-0.1.20\\src\\cert_context.rs","byte_start":28545,"byte_end":28554,"line_start":672,"line_end":672,"column_start":10,"column_end":19},"name":"ValidUses","qualname":"::cert_context::ValidUses","value":"pub enum ValidUses { All, Oids(Vec<String>), }","parent":null,"children":[{"krate":0,"index":203},{"krate":0,"index":205}],"decl_id":null,"docs":" Valid uses of a Certificate - All, or specific OIDs\n","sig":null,"attributes":[{"value":"/ Valid uses of a Certificate - All, or specific OIDs","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\schannel-0.1.20\\src\\cert_context.rs","byte_start":28480,"byte_end":28535,"line_start":671,"line_end":671,"column_start":1,"column_end":56}}]},{"kind":"Mod","id":{"krate":0,"index":208},"span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\schannel-0.1.20\\src\\cert_store.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"cert_store","qualname":"::cert_store","value":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\schannel-0.1.20\\src\\cert_store.rs","parent":null,"children":[{"krate":0,"index":209},{"krate":0,"index":212},{"krate":0,"index":215},{"krate":0,"index":218},{"krate":0,"index":221},{"krate":0,"index":224},{"krate":0,"index":225},{"krate":0,"index":228},{"krate":0,"index":231},{"krate":0,"index":234},{"krate":0,"index":237},{"krate":0,"index":240},{"krate":0,"index":243},{"krate":0,"index":244},{"krate":0,"index":245},{"krate":0,"index":247},{"krate":0,"index":249},{"krate":0,"index":852},{"krate":0,"index":856},{"krate":0,"index":251},{"krate":0,"index":273},{"krate":0,"index":282},{"krate":0,"index":286},{"krate":0,"index":859},{"krate":0,"index":862},{"krate":0,"index":291},{"krate":0,"index":299},{"krate":0,"index":302}],"decl_id":null,"docs":" Bindings to winapi's certificate-store related APIs.\n","sig":null,"attributes":[{"value":"/ Bindings to winapi's certificate-store related APIs.","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\schannel-0.1.20\\src\\cert_store.rs","byte_start":30742,"byte_end":30798,"line_start":1,"line_end":1,"column_start":1,"column_end":57}}]},{"kind":"Struct","id":{"krate":0,"index":240},"span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\schannel-0.1.20\\src\\cert_store.rs","byte_start":31155,"byte_end":31164,"line_start":18,"line_end":18,"column_start":12,"column_end":21},"name":"CertStore","qualname":"::cert_store::CertStore","value":"","parent":null,"children":[],"decl_id":null,"docs":" Representation of certificate store on Windows, wrapping a `HCERTSTORE`.\n","sig":null,"attributes":[{"value":"/ Representation of certificate store on Windows, wrapping a `HCERTSTORE`.","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\schannel-0.1.20\\src\\cert_store.rs","byte_start":31067,"byte_end":31143,"line_start":17,"line_end":17,"column_start":1,"column_end":77}}]},{"kind":"TupleVariant","id":{"krate":0,"index":252},"span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\schannel-0.1.20\\src\\cert_store.rs","byte_start":32081,"byte_end":32087,"line_start":51,"line_end":51,"column_start":5,"column_end":11},"name":"Always","qualname":"::cert_store::CertAdd::Always","value":"CertAdd::Always","parent":{"krate":0,"index":251},"children":[],"decl_id":null,"docs":" The function makes no check for an existing matching certificate or link\n to a matching certificate. A new certificate is always added to the\n store. This can lead to duplicates in a store.\n","sig":null,"attributes":[{"value":"/ The function makes no check for an existing matching certificate or link","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\schannel-0.1.20\\src\\cert_store.rs","byte_start":31869,"byte_end":31945,"line_start":48,"line_end":48,"column_start":5,"column_end":81}},{"value":"/ to a matching certificate. A new certificate is always added to the","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\schannel-0.1.20\\src\\cert_store.rs","byte_start":31950,"byte_end":32021,"line_start":49,"line_end":49,"column_start":5,"column_end":76}},{"value":"/ store. This can lead to duplicates in a store.","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\schannel-0.1.20\\src\\cert_store.rs","byte_start":32026,"byte_end":32076,"line_start":50,"line_end":50,"column_start":5,"column_end":55}}]},{"kind":"TupleVariant","id":{"krate":0,"index":255},"span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\schannel-0.1.20\\src\\cert_store.rs","byte_start":32248,"byte_end":32251,"line_start":55,"line_end":55,"column_start":5,"column_end":8},"name":"New","qualname":"::cert_store::CertAdd::New","value":"CertAdd::New","parent":{"krate":0,"index":251},"children":[],"decl_id":null,"docs":" If a matching certificate or a link to a matching certificate exists,\n the operation fails.\n","sig":null,"attributes":[{"value":"/ If a matching certificate or a link to a matching certificate exists,","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\schannel-0.1.20\\src\\cert_store.rs","byte_start":32141,"byte_end":32214,"line_start":53,"line_end":53,"column_start":5,"column_end":78}},{"value":"/ the operation fails.","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\schannel-0.1.20\\src\\cert_store.rs","byte_start":32219,"byte_end":32243,"line_start":54,"line_end":54,"column_start":5,"column_end":29}}]},{"kind":"TupleVariant","id":{"krate":0,"index":258},"span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\schannel-0.1.20\\src\\cert_store.rs","byte_start":32900,"byte_end":32905,"line_start":66,"line_end":66,"column_start":5,"column_end":10},"name":"Newer","qualname":"::cert_store::CertAdd::Newer","value":"CertAdd::Newer","parent":{"krate":0,"index":251},"children":[],"decl_id":null,"docs":" If a matching certificate or a link to a matching certificate exists and\n the NotBefore time of the existing context is equal to or greater than\n the NotBefore time of the new context being added, the operation fails.","sig":null,"attributes":[{"value":"/ If a matching certificate or a link to a matching certificate exists and","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\schannel-0.1.20\\src\\cert_store.rs","byte_start":32302,"byte_end":32378,"line_start":57,"line_end":57,"column_start":5,"column_end":81}},{"value":"/ the NotBefore time of the existing context is equal to or greater than","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\schannel-0.1.20\\src\\cert_store.rs","byte_start":32383,"byte_end":32457,"line_start":58,"line_end":58,"column_start":5,"column_end":79}},{"value":"/ the NotBefore time of the new context being added, the operation fails.","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\schannel-0.1.20\\src\\cert_store.rs","byte_start":32462,"byte_end":32537,"line_start":59,"line_end":59,"column_start":5,"column_end":80}},{"value":"/","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\schannel-0.1.20\\src\\cert_store.rs","byte_start":32542,"byte_end":32545,"line_start":60,"line_end":60,"column_start":5,"column_end":8}},{"value":"/ If the NotBefore time of the existing context is less than the NotBefore","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\schannel-0.1.20\\src\\cert_store.rs","byte_start":32550,"byte_end":32626,"line_start":61,"line_end":61,"column_start":5,"column_end":81}},{"value":"/ time of the new context being added, the existing certificate or link is","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\schannel-0.1.20\\src\\cert_store.rs","byte_start":32631,"byte_end":32707,"line_start":62,"line_end":62,"column_start":5,"column_end":81}},{"value":"/ deleted and a new certificate is created and added to the store. If a","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\schannel-0.1.20\\src\\cert_store.rs","byte_start":32712,"byte_end":32785,"line_start":63,"line_end":63,"column_start":5,"column_end":78}},{"value":"/ matching certificate or a link to a matching certificate does not exist,","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\schannel-0.1.20\\src\\cert_store.rs","byte_start":32790,"byte_end":32866,"line_start":64,"line_end":64,"column_start":5,"column_end":81}},{"value":"/ a new link is added.","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\schannel-0.1.20\\src\\cert_store.rs","byte_start":32871,"byte_end":32895,"line_start":65,"line_end":65,"column_start":5,"column_end":29}}]},{"kind":"TupleVariant","id":{"krate":0,"index":261},"span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\schannel-0.1.20\\src\\cert_store.rs","byte_start":33497,"byte_end":33519,"line_start":76,"line_end":76,"column_start":5,"column_end":27},"name":"NewerInheritProperties","qualname":"::cert_store::CertAdd::NewerInheritProperties","value":"CertAdd::NewerInheritProperties","parent":{"krate":0,"index":251},"children":[],"decl_id":null,"docs":" If a matching certificate or a link to a matching certificate exists and\n the NotBefore time of the existing context is equal to or greater than\n the NotBefore time of the new context being added, the operation fails.","sig":null,"attributes":[{"value":"/ If a matching certificate or a link to a matching certificate exists and","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\schannel-0.1.20\\src\\cert_store.rs","byte_start":32958,"byte_end":33034,"line_start":68,"line_end":68,"column_start":5,"column_end":81}},{"value":"/ the NotBefore time of the existing context is equal to or greater than","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\schannel-0.1.20\\src\\cert_store.rs","byte_start":33039,"byte_end":33113,"line_start":69,"line_end":69,"column_start":5,"column_end":79}},{"value":"/ the NotBefore time of the new context being added, the operation fails.","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\schannel-0.1.20\\src\\cert_store.rs","byte_start":33118,"byte_end":33193,"line_start":70,"line_end":70,"column_start":5,"column_end":80}},{"value":"/","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\schannel-0.1.20\\src\\cert_store.rs","byte_start":33198,"byte_end":33201,"line_start":71,"line_end":71,"column_start":5,"column_end":8}},{"value":"/ If the NotBefore time of the existing context is less than the NotBefore","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\schannel-0.1.20\\src\\cert_store.rs","byte_start":33206,"byte_end":33282,"line_start":72,"line_end":72,"column_start":5,"column_end":81}},{"value":"/ time of the new context being added, the existing context is deleted","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\schannel-0.1.20\\src\\cert_store.rs","byte_start":33287,"byte_end":33359,"line_start":73,"line_end":73,"column_start":5,"column_end":77}},{"value":"/ before creating and adding the new context. The new added context","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\schannel-0.1.20\\src\\cert_store.rs","byte_start":33364,"byte_end":33433,"line_start":74,"line_end":74,"column_start":5,"column_end":74}},{"value":"/ inherits properties from the existing certificate.","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\schannel-0.1.20\\src\\cert_store.rs","byte_start":33438,"byte_end":33492,"line_start":75,"line_end":75,"column_start":5,"column_end":59}}]},{"kind":"TupleVariant","id":{"krate":0,"index":264},"span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\schannel-0.1.20\\src\\cert_store.rs","byte_start":33868,"byte_end":33883,"line_start":82,"line_end":82,"column_start":5,"column_end":20},"name":"ReplaceExisting","qualname":"::cert_store::CertAdd::ReplaceExisting","value":"CertAdd::ReplaceExisting","parent":{"krate":0,"index":251},"children":[],"decl_id":null,"docs":" If a link to a matching certificate exists, that existing certificate or\n link is deleted and a new certificate is created and added to the store.\n If a matching certificate or a link to a matching certificate does not\n exist, a new link is added.\n","sig":null,"attributes":[{"value":"/ If a link to a matching certificate exists, that existing certificate or","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\schannel-0.1.20\\src\\cert_store.rs","byte_start":33591,"byte_end":33667,"line_start":78,"line_end":78,"column_start":5,"column_end":81}},{"value":"/ link is deleted and a new certificate is created and added to the store.","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\schannel-0.1.20\\src\\cert_store.rs","byte_start":33672,"byte_end":33748,"line_start":79,"line_end":79,"column_start":5,"column_end":81}},{"value":"/ If a matching certificate or a link to a matching certificate does not","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\schannel-0.1.20\\src\\cert_store.rs","byte_start":33753,"byte_end":33827,"line_start":80,"line_end":80,"column_start":5,"column_end":79}},{"value":"/ exist, a new link is added.","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\schannel-0.1.20\\src\\cert_store.rs","byte_start":33832,"byte_end":33863,"line_start":81,"line_end":81,"column_start":5,"column_end":36}}]},{"kind":"TupleVariant","id":{"krate":0,"index":267},"span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\schannel-0.1.20\\src\\cert_store.rs","byte_start":34123,"byte_end":34155,"line_start":87,"line_end":87,"column_start":5,"column_end":37},"name":"ReplaceExistingInheritProperties","qualname":"::cert_store::CertAdd::ReplaceExistingInheritProperties","value":"CertAdd::ReplaceExistingInheritProperties","parent":{"krate":0,"index":251},"children":[],"decl_id":null,"docs":" If a matching certificate exists in the store, the existing context is\n not replaced. The existing context inherits properties from the new\n certificate.\n","sig":null,"attributes":[{"value":"/ If a matching certificate exists in the store, the existing context is","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\schannel-0.1.20\\src\\cert_store.rs","byte_start":33947,"byte_end":34021,"line_start":84,"line_end":84,"column_start":5,"column_end":79}},{"value":"/ not replaced. The existing context inherits properties from the new","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\schannel-0.1.20\\src\\cert_store.rs","byte_start":34026,"byte_end":34097,"line_start":85,"line_end":85,"column_start":5,"column_end":76}},{"value":"/ certificate.","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\schannel-0.1.20\\src\\cert_store.rs","byte_start":34102,"byte_end":34118,"line_start":86,"line_end":86,"column_start":5,"column_end":21}}]},{"kind":"TupleVariant","id":{"krate":0,"index":270},"span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\schannel-0.1.20\\src\\cert_store.rs","byte_start":34683,"byte_end":34694,"line_start":97,"line_end":97,"column_start":5,"column_end":16},"name":"UseExisting","qualname":"::cert_store::CertAdd::UseExisting","value":"CertAdd::UseExisting","parent":{"krate":0,"index":251},"children":[],"decl_id":null,"docs":" If a matching certificate or a link to a matching certificate exists,\n that existing certificate or link is used and properties from the\n new certificate are added. The function does not fail, but it does\n not add a new context. The existing context is duplicated and returned.","sig":null,"attributes":[{"value":"/ If a matching certificate or a link to a matching certificate exists,","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\schannel-0.1.20\\src\\cert_store.rs","byte_start":34246,"byte_end":34319,"line_start":90,"line_end":90,"column_start":5,"column_end":78}},{"value":"/ that existing certificate or link is used and properties from the","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\schannel-0.1.20\\src\\cert_store.rs","byte_start":34324,"byte_end":34393,"line_start":91,"line_end":91,"column_start":5,"column_end":74}},{"value":"/ new certificate are added. The function does not fail, but it does","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\schannel-0.1.20\\src\\cert_store.rs","byte_start":34398,"byte_end":34468,"line_start":92,"line_end":92,"column_start":5,"column_end":75}},{"value":"/ not add a new context. The existing context is duplicated and returned.","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\schannel-0.1.20\\src\\cert_store.rs","byte_start":34473,"byte_end":34548,"line_start":93,"line_end":93,"column_start":5,"column_end":80}},{"value":"/","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\schannel-0.1.20\\src\\cert_store.rs","byte_start":34553,"byte_end":34556,"line_start":94,"line_end":94,"column_start":5,"column_end":8}},{"value":"/ If a matching certificate or a link to a matching certificate does","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\schannel-0.1.20\\src\\cert_store.rs","byte_start":34561,"byte_end":34631,"line_start":95,"line_end":95,"column_start":5,"column_end":75}},{"value":"/ not exist, a new certificate is added.","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\schannel-0.1.20\\src\\cert_store.rs","byte_start":34636,"byte_end":34678,"line_start":96,"line_end":96,"column_start":5,"column_end":47}}]},{"kind":"Enum","id":{"krate":0,"index":251},"span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\schannel-0.1.20\\src\\cert_store.rs","byte_start":31855,"byte_end":31862,"line_start":47,"line_end":47,"column_start":10,"column_end":17},"name":"CertAdd","qualname":"::cert_store::CertAdd","value":"pub enum CertAdd {\n    Always = ,\n    New = ,\n    Newer = ,\n    NewerInheritProperties = ,\n    ReplaceExisting = ,\n    ReplaceExistingInheritProperties = ,\n    UseExisting = ,\n}","parent":null,"children":[{"krate":0,"index":252},{"krate":0,"index":255},{"krate":0,"index":258},{"krate":0,"index":261},{"krate":0,"index":264},{"krate":0,"index":267},{"krate":0,"index":270}],"decl_id":null,"docs":" Argument to the `add_cert` function indicating how a certificate should be\n added to a `CertStore`.\n","sig":null,"attributes":[{"value":"/ Argument to the `add_cert` function indicating how a certificate should be","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\schannel-0.1.20\\src\\cert_store.rs","byte_start":31739,"byte_end":31817,"line_start":45,"line_end":45,"column_start":1,"column_end":79}},{"value":"/ added to a `CertStore`.","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\schannel-0.1.20\\src\\cert_store.rs","byte_start":31818,"byte_end":31845,"line_start":46,"line_end":46,"column_start":1,"column_end":28}}]},{"kind":"Method","id":{"krate":0,"index":274},"span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\schannel-0.1.20\\src\\cert_store.rs","byte_start":35064,"byte_end":35081,"line_start":105,"line_end":105,"column_start":12,"column_end":29},"name":"open_current_user","qualname":"<CertStore>::open_current_user","value":"pub fn open_current_user(&str) -> io::Result<CertStore>","parent":null,"children":[],"decl_id":null,"docs":" Opens up the specified key store within the context of the current user.","sig":null,"attributes":[{"value":"/ Opens up the specified key store within the context of the current user.","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\schannel-0.1.20\\src\\cert_store.rs","byte_start":34773,"byte_end":34849,"line_start":101,"line_end":101,"column_start":5,"column_end":81}},{"value":"/","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\schannel-0.1.20\\src\\cert_store.rs","byte_start":34854,"byte_end":34857,"line_start":102,"line_end":102,"column_start":5,"column_end":8}},{"value":"/ Common valid values for `which` are \"My\", \"Root\", \"Trust\", \"CA\".","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\schannel-0.1.20\\src\\cert_store.rs","byte_start":34862,"byte_end":34930,"line_start":103,"line_end":103,"column_start":5,"column_end":73}},{"value":"/ Additonal MSDN docs https://docs.microsoft.com/en-us/windows/win32/api/wincrypt/nf-wincrypt-certopenstore#remarks","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\schannel-0.1.20\\src\\cert_store.rs","byte_start":34935,"byte_end":35052,"line_start":104,"line_end":104,"column_start":5,"column_end":122}}]},{"kind":"Method","id":{"krate":0,"index":275},"span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\schannel-0.1.20\\src\\cert_store.rs","byte_start":36175,"byte_end":36193,"line_start":131,"line_end":131,"column_start":12,"column_end":30},"name":"open_local_machine","qualname":"<CertStore>::open_local_machine","value":"pub fn open_local_machine(&str) -> io::Result<CertStore>","parent":null,"children":[],"decl_id":null,"docs":" Opens up the specified key store within the context of the local machine.","sig":null,"attributes":[{"value":"/ Opens up the specified key store within the context of the local machine.","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\schannel-0.1.20\\src\\cert_store.rs","byte_start":35883,"byte_end":35960,"line_start":127,"line_end":127,"column_start":5,"column_end":82}},{"value":"/","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\schannel-0.1.20\\src\\cert_store.rs","byte_start":35965,"byte_end":35968,"line_start":128,"line_end":128,"column_start":5,"column_end":8}},{"value":"/ Common valid values for `which` are \"My\", \"Root\", \"Trust\", \"CA\".","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\schannel-0.1.20\\src\\cert_store.rs","byte_start":35973,"byte_end":36041,"line_start":129,"line_end":129,"column_start":5,"column_end":73}},{"value":"/ Additonal MSDN docs https://docs.microsoft.com/en-us/windows/win32/api/wincrypt/nf-wincrypt-certopenstore#remarks","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\schannel-0.1.20\\src\\cert_store.rs","byte_start":36046,"byte_end":36163,"line_start":130,"line_end":130,"column_start":5,"column_end":122}}]},{"kind":"Method","id":{"krate":0,"index":276},"span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\schannel-0.1.20\\src\\cert_store.rs","byte_start":37183,"byte_end":37196,"line_start":157,"line_end":157,"column_start":12,"column_end":25},"name":"import_pkcs12","qualname":"<CertStore>::import_pkcs12","value":"pub fn import_pkcs12(&[u8], Option<&str>) -> io::Result<CertStore>","parent":null,"children":[],"decl_id":null,"docs":" Imports a PKCS#12-encoded key/certificate pair, returned as a\n `CertStore` instance.","sig":null,"attributes":[{"value":"/ Imports a PKCS#12-encoded key/certificate pair, returned as a","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\schannel-0.1.20\\src\\cert_store.rs","byte_start":36996,"byte_end":37061,"line_start":153,"line_end":153,"column_start":5,"column_end":70}},{"value":"/ `CertStore` instance.","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\schannel-0.1.20\\src\\cert_store.rs","byte_start":37066,"byte_end":37091,"line_start":154,"line_end":154,"column_start":5,"column_end":30}},{"value":"/","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\schannel-0.1.20\\src\\cert_store.rs","byte_start":37096,"byte_end":37099,"line_start":155,"line_end":155,"column_start":5,"column_end":8}},{"value":"/ The password must also be provided to decrypt the encoded data.","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\schannel-0.1.20\\src\\cert_store.rs","byte_start":37104,"byte_end":37171,"line_start":156,"line_end":156,"column_start":5,"column_end":72}}]},{"kind":"Method","id":{"krate":0,"index":279},"span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\schannel-0.1.20\\src\\cert_store.rs","byte_start":38203,"byte_end":38208,"line_start":185,"line_end":185,"column_start":12,"column_end":17},"name":"certs","qualname":"<CertStore>::certs","value":"pub fn certs(&Self) -> Certs","parent":null,"children":[],"decl_id":null,"docs":" Returns an iterator over the certificates in this certificate store.\n","sig":null,"attributes":[{"value":"/ Returns an iterator over the certificates in this certificate store.","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\schannel-0.1.20\\src\\cert_store.rs","byte_start":38119,"byte_end":38191,"line_start":184,"line_end":184,"column_start":5,"column_end":77}}]},{"kind":"Method","id":{"krate":0,"index":280},"span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\schannel-0.1.20\\src\\cert_store.rs","byte_start":38510,"byte_end":38518,"line_start":196,"line_end":196,"column_start":12,"column_end":20},"name":"add_cert","qualname":"<CertStore>::add_cert","value":"pub fn add_cert(&mut Self, &CertContext, CertAdd) -> io::Result<CertContext>","parent":null,"children":[],"decl_id":null,"docs":" Adds a certificate context to this store.","sig":null,"attributes":[{"value":"/ Adds a certificate context to this store.","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\schannel-0.1.20\\src\\cert_store.rs","byte_start":38312,"byte_end":38357,"line_start":192,"line_end":192,"column_start":5,"column_end":50}},{"value":"/","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\schannel-0.1.20\\src\\cert_store.rs","byte_start":38362,"byte_end":38365,"line_start":193,"line_end":193,"column_start":5,"column_end":8}},{"value":"/ This function will add the certificate specified in `cx` to this store.","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\schannel-0.1.20\\src\\cert_store.rs","byte_start":38370,"byte_end":38445,"line_start":194,"line_end":194,"column_start":5,"column_end":80}},{"value":"/ A copy of the added certificate is returned.","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\schannel-0.1.20\\src\\cert_store.rs","byte_start":38450,"byte_end":38498,"line_start":195,"line_end":195,"column_start":5,"column_end":53}}]},{"kind":"Method","id":{"krate":0,"index":281},"span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\schannel-0.1.20\\src\\cert_store.rs","byte_start":39226,"byte_end":39239,"line_start":218,"line_end":218,"column_start":12,"column_end":25},"name":"export_pkcs12","qualname":"<CertStore>::export_pkcs12","value":"pub fn export_pkcs12(&Self, &str) -> io::Result<Vec<u8>>","parent":null,"children":[],"decl_id":null,"docs":" Exports this certificate store as a PKCS#12-encoded blob.","sig":null,"attributes":[{"value":"/ Exports this certificate store as a PKCS#12-encoded blob.","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\schannel-0.1.20\\src\\cert_store.rs","byte_start":39051,"byte_end":39112,"line_start":214,"line_end":214,"column_start":5,"column_end":66}},{"value":"/","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\schannel-0.1.20\\src\\cert_store.rs","byte_start":39117,"byte_end":39120,"line_start":215,"line_end":215,"column_start":5,"column_end":8}},{"value":"/ The password specified will be the password used to unlock the returned","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\schannel-0.1.20\\src\\cert_store.rs","byte_start":39125,"byte_end":39200,"line_start":216,"line_end":216,"column_start":5,"column_end":80}},{"value":"/ data.","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\schannel-0.1.20\\src\\cert_store.rs","byte_start":39205,"byte_end":39214,"line_start":217,"line_end":217,"column_start":5,"column_end":14}}]},{"kind":"Struct","id":{"krate":0,"index":282},"span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\schannel-0.1.20\\src\\cert_store.rs","byte_start":40351,"byte_end":40356,"line_start":250,"line_end":250,"column_start":12,"column_end":17},"name":"Certs","qualname":"::cert_store::Certs","value":"Certs {  }","parent":null,"children":[{"krate":0,"index":284},{"krate":0,"index":285}],"decl_id":null,"docs":" An iterator over the certificates contained in a `CertStore`, returned by\n `CertStore::iter`\n","sig":null,"attributes":[{"value":"/ An iterator over the certificates contained in a `CertStore`, returned by","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\schannel-0.1.20\\src\\cert_store.rs","byte_start":40240,"byte_end":40317,"line_start":248,"line_end":248,"column_start":1,"column_end":78}},{"value":"/ `CertStore::iter`","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\schannel-0.1.20\\src\\cert_store.rs","byte_start":40318,"byte_end":40339,"line_start":249,"line_end":249,"column_start":1,"column_end":22}}]},{"kind":"Struct","id":{"krate":0,"index":859},"span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\schannel-0.1.20\\src\\cert_store.rs","byte_start":41202,"byte_end":41218,"line_start":282,"line_end":282,"column_start":12,"column_end":28},"name":"PfxImportOptions","qualname":"::cert_store::PfxImportOptions","value":"PfxImportOptions {  }","parent":null,"children":[{"krate":0,"index":860},{"krate":0,"index":861}],"decl_id":null,"docs":" A builder type for imports of PKCS #12 archives.\n","sig":null,"attributes":[{"value":"/ A builder type for imports of PKCS #12 archives.","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\schannel-0.1.20\\src\\cert_store.rs","byte_start":41119,"byte_end":41171,"line_start":280,"line_end":280,"column_start":1,"column_end":53}}]},{"kind":"Method","id":{"krate":0,"index":292},"span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\schannel-0.1.20\\src\\cert_store.rs","byte_start":41371,"byte_end":41374,"line_start":289,"line_end":289,"column_start":12,"column_end":15},"name":"new","qualname":"<PfxImportOptions>::new","value":"pub fn new() -> PfxImportOptions","parent":null,"children":[],"decl_id":null,"docs":" Returns a new `PfxImportOptions` with default settings.\n","sig":null,"attributes":[{"value":"/ Returns a new `PfxImportOptions` with default settings.","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\schannel-0.1.20\\src\\cert_store.rs","byte_start":41300,"byte_end":41359,"line_start":288,"line_end":288,"column_start":5,"column_end":64}}]},{"kind":"Method","id":{"krate":0,"index":293},"span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\schannel-0.1.20\\src\\cert_store.rs","byte_start":41514,"byte_end":41522,"line_start":294,"line_end":294,"column_start":12,"column_end":20},"name":"password","qualname":"<PfxImportOptions>::password","value":"pub fn password(&mut Self, &str) -> &mut PfxImportOptions","parent":null,"children":[],"decl_id":null,"docs":" Sets the password to be used to decrypt the archive.\n","sig":null,"attributes":[{"value":"/ Sets the password to be used to decrypt the archive.","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\schannel-0.1.20\\src\\cert_store.rs","byte_start":41446,"byte_end":41502,"line_start":293,"line_end":293,"column_start":5,"column_end":61}}]},{"kind":"Method","id":{"krate":0,"index":294},"span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\schannel-0.1.20\\src\\cert_store.rs","byte_start":41851,"byte_end":41865,"line_start":302,"line_end":302,"column_start":12,"column_end":26},"name":"no_persist_key","qualname":"<PfxImportOptions>::no_persist_key","value":"pub fn no_persist_key(&mut Self, bool) -> &mut PfxImportOptions","parent":null,"children":[],"decl_id":null,"docs":" If set, the private key in the archive will not be persisted.","sig":null,"attributes":[{"value":"/ If set, the private key in the archive will not be persisted.","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\schannel-0.1.20\\src\\cert_store.rs","byte_start":41681,"byte_end":41746,"line_start":299,"line_end":299,"column_start":5,"column_end":70}},{"value":"/","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\schannel-0.1.20\\src\\cert_store.rs","byte_start":41751,"byte_end":41754,"line_start":300,"line_end":300,"column_start":5,"column_end":8}},{"value":"/ If not set, private keys are persisted on disk and must be manually deleted.","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\schannel-0.1.20\\src\\cert_store.rs","byte_start":41759,"byte_end":41839,"line_start":301,"line_end":301,"column_start":5,"column_end":85}}]},{"kind":"Method","id":{"krate":0,"index":295},"span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\schannel-0.1.20\\src\\cert_store.rs","byte_start":42092,"byte_end":42119,"line_start":307,"line_end":307,"column_start":12,"column_end":39},"name":"include_extended_properties","qualname":"<PfxImportOptions>::include_extended_properties","value":"pub fn include_extended_properties(&mut Self, bool) -> &mut PfxImportOptions","parent":null,"children":[],"decl_id":null,"docs":" If set, all extended properties of the certificate will be imported.\n","sig":null,"attributes":[{"value":"/ If set, all extended properties of the certificate will be imported.","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\schannel-0.1.20\\src\\cert_store.rs","byte_start":42008,"byte_end":42080,"line_start":306,"line_end":306,"column_start":5,"column_end":77}}]},{"kind":"Method","id":{"krate":0,"index":297},"span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\schannel-0.1.20\\src\\cert_store.rs","byte_start":42662,"byte_end":42668,"line_start":327,"line_end":327,"column_start":12,"column_end":18},"name":"import","qualname":"<PfxImportOptions>::import","value":"pub fn import(&Self, &[u8]) -> io::Result<CertStore>","parent":null,"children":[],"decl_id":null,"docs":" Imports certificates from a PKCS #12 archive, returning a `CertStore` containing them.\n","sig":null,"attributes":[{"value":"/ Imports certificates from a PKCS #12 archive, returning a `CertStore` containing them.","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\schannel-0.1.20\\src\\cert_store.rs","byte_start":42560,"byte_end":42650,"line_start":326,"line_end":326,"column_start":5,"column_end":95}}]},{"kind":"Struct","id":{"krate":0,"index":299},"span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\schannel-0.1.20\\src\\cert_store.rs","byte_start":43428,"byte_end":43434,"line_start":348,"line_end":348,"column_start":12,"column_end":18},"name":"Memory","qualname":"::cert_store::Memory","value":"","parent":null,"children":[],"decl_id":null,"docs":" Representation of an in-memory certificate store.","sig":null,"attributes":[{"value":"/ Representation of an in-memory certificate store.","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\schannel-0.1.20\\src\\cert_store.rs","byte_start":43279,"byte_end":43332,"line_start":345,"line_end":345,"column_start":1,"column_end":54}},{"value":"/","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\schannel-0.1.20\\src\\cert_store.rs","byte_start":43333,"byte_end":43336,"line_start":346,"line_end":346,"column_start":1,"column_end":4}},{"value":"/ Internally this contains a `CertStore` which this type can be converted to.","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\schannel-0.1.20\\src\\cert_store.rs","byte_start":43337,"byte_end":43416,"line_start":347,"line_end":347,"column_start":1,"column_end":80}}]},{"kind":"Method","id":{"krate":0,"index":303},"span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\schannel-0.1.20\\src\\cert_store.rs","byte_start":43659,"byte_end":43662,"line_start":355,"line_end":355,"column_start":12,"column_end":15},"name":"new","qualname":"<Memory>::new","value":"pub fn new() -> io::Result<Memory>","parent":null,"children":[],"decl_id":null,"docs":" Creates a new in-memory certificate store which certificates and CTLs\n can be added to.","sig":null,"attributes":[{"value":"/ Creates a new in-memory certificate store which certificates and CTLs","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\schannel-0.1.20\\src\\cert_store.rs","byte_start":43466,"byte_end":43539,"line_start":351,"line_end":351,"column_start":5,"column_end":78}},{"value":"/ can be added to.","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\schannel-0.1.20\\src\\cert_store.rs","byte_start":43544,"byte_end":43564,"line_start":352,"line_end":352,"column_start":5,"column_end":25}},{"value":"/","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\schannel-0.1.20\\src\\cert_store.rs","byte_start":43569,"byte_end":43572,"line_start":353,"line_end":353,"column_start":5,"column_end":8}},{"value":"/ Initially the returned certificate store contains no certificates.","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\schannel-0.1.20\\src\\cert_store.rs","byte_start":43577,"byte_end":43647,"line_start":354,"line_end":354,"column_start":5,"column_end":75}}]},{"kind":"Method","id":{"krate":0,"index":304},"span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\schannel-0.1.20\\src\\cert_store.rs","byte_start":44369,"byte_end":44392,"line_start":375,"line_end":375,"column_start":12,"column_end":35},"name":"add_encoded_certificate","qualname":"<Memory>::add_encoded_certificate","value":"pub fn add_encoded_certificate(&mut Self, &[u8]) -> io::Result<CertContext>","parent":null,"children":[],"decl_id":null,"docs":" Adds a new certificate to this memory store.","sig":null,"attributes":[{"value":"/ Adds a new certificate to this memory store.","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\schannel-0.1.20\\src\\cert_store.rs","byte_start":44235,"byte_end":44283,"line_start":372,"line_end":372,"column_start":5,"column_end":53}},{"value":"/","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\schannel-0.1.20\\src\\cert_store.rs","byte_start":44288,"byte_end":44291,"line_start":373,"line_end":373,"column_start":5,"column_end":8}},{"value":"/ For example the bytes could be a DER-encoded certificate.","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\schannel-0.1.20\\src\\cert_store.rs","byte_start":44296,"byte_end":44357,"line_start":374,"line_end":374,"column_start":5,"column_end":66}}]},{"kind":"Method","id":{"krate":0,"index":305},"span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\schannel-0.1.20\\src\\cert_store.rs","byte_start":45206,"byte_end":45221,"line_start":398,"line_end":398,"column_start":12,"column_end":27},"name":"add_encoded_ctl","qualname":"<Memory>::add_encoded_ctl","value":"pub fn add_encoded_ctl(&mut Self, &[u8]) -> io::Result<CtlContext>","parent":null,"children":[],"decl_id":null,"docs":" Adds a new CTL to this memory store, in its encoded form.","sig":null,"attributes":[{"value":"/ Adds a new CTL to this memory store, in its encoded form.","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\schannel-0.1.20\\src\\cert_store.rs","byte_start":45056,"byte_end":45117,"line_start":395,"line_end":395,"column_start":5,"column_end":66}},{"value":"/","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\schannel-0.1.20\\src\\cert_store.rs","byte_start":45122,"byte_end":45125,"line_start":396,"line_end":396,"column_start":5,"column_end":8}},{"value":"/ This can be created through the `ctl_context::Builder` type.","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\schannel-0.1.20\\src\\cert_store.rs","byte_start":45130,"byte_end":45194,"line_start":397,"line_end":397,"column_start":5,"column_end":69}}]},{"kind":"Method","id":{"krate":0,"index":306},"span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\schannel-0.1.20\\src\\cert_store.rs","byte_start":45950,"byte_end":45960,"line_start":419,"line_end":419,"column_start":12,"column_end":22},"name":"into_store","qualname":"<Memory>::into_store","value":"pub fn into_store(Self) -> CertStore","parent":null,"children":[],"decl_id":null,"docs":" Consumes this memory store, returning the underlying `CertStore`.\n","sig":null,"attributes":[{"value":"/ Consumes this memory store, returning the underlying `CertStore`.","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\schannel-0.1.20\\src\\cert_store.rs","byte_start":45869,"byte_end":45938,"line_start":418,"line_end":418,"column_start":5,"column_end":74}}]},{"kind":"Mod","id":{"krate":0,"index":307},"span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\schannel-0.1.20\\src\\crypt_key.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"crypt_key","qualname":"::crypt_key","value":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\schannel-0.1.20\\src\\crypt_key.rs","parent":null,"children":[{"krate":0,"index":308},{"krate":0,"index":311},{"krate":0,"index":314},{"krate":0,"index":864},{"krate":0,"index":868}],"decl_id":null,"docs":" CryptoAPI private keys.\n","sig":null,"attributes":[{"value":"/ CryptoAPI private keys.","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\schannel-0.1.20\\src\\crypt_key.rs","byte_start":47292,"byte_end":47319,"line_start":1,"line_end":1,"column_start":1,"column_end":28}}]},{"kind":"Struct","id":{"krate":0,"index":311},"span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\schannel-0.1.20\\src\\crypt_key.rs","byte_start":47404,"byte_end":47412,"line_start":6,"line_end":6,"column_start":12,"column_end":20},"name":"CryptKey","qualname":"::crypt_key::CryptKey","value":"","parent":null,"children":[],"decl_id":null,"docs":" A handle to a key.\n","sig":null,"attributes":[{"value":"/ A handle to a key.","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\schannel-0.1.20\\src\\crypt_key.rs","byte_start":47370,"byte_end":47392,"line_start":5,"line_end":5,"column_start":1,"column_end":23}}]},{"kind":"Mod","id":{"krate":0,"index":316},"span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\schannel-0.1.20\\src\\crypt_prov.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"crypt_prov","qualname":"::crypt_prov","value":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\schannel-0.1.20\\src\\crypt_prov.rs","parent":null,"children":[{"krate":0,"index":317},{"krate":0,"index":320},{"krate":0,"index":323},{"krate":0,"index":326},{"krate":0,"index":329},{"krate":0,"index":332},{"krate":0,"index":335},{"krate":0,"index":338},{"krate":0,"index":341},{"krate":0,"index":344},{"krate":0,"index":871},{"krate":0,"index":875},{"krate":0,"index":346},{"krate":0,"index":878},{"krate":0,"index":882},{"krate":0,"index":348},{"krate":0,"index":884},{"krate":0,"index":887},{"krate":0,"index":888},{"krate":0,"index":360},{"krate":0,"index":372},{"krate":0,"index":376}],"decl_id":null,"docs":" CryptoAPI key providers.\n","sig":null,"attributes":[{"value":"/ CryptoAPI key providers.","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\schannel-0.1.20\\src\\crypt_prov.rs","byte_start":47585,"byte_end":47613,"line_start":1,"line_end":1,"column_start":1,"column_end":29}}]},{"kind":"Struct","id":{"krate":0,"index":341},"span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\schannel-0.1.20\\src\\crypt_prov.rs","byte_start":47878,"byte_end":47887,"line_start":14,"line_end":14,"column_start":12,"column_end":21},"name":"CryptProv","qualname":"::crypt_prov::CryptProv","value":"","parent":null,"children":[],"decl_id":null,"docs":" A CryptoAPI handle to a provider of a key.\n","sig":null,"attributes":[{"value":"/ A CryptoAPI handle to a provider of a key.","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\schannel-0.1.20\\src\\crypt_prov.rs","byte_start":47820,"byte_end":47866,"line_start":13,"line_end":13,"column_start":1,"column_end":47}}]},{"kind":"Method","id":{"krate":0,"index":347},"span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\schannel-0.1.20\\src\\crypt_prov.rs","byte_start":48219,"byte_end":48225,"line_start":28,"line_end":28,"column_start":12,"column_end":18},"name":"import","qualname":"<CryptProv>::import","value":"pub fn import(&mut Self) -> ImportOptions","parent":null,"children":[],"decl_id":null,"docs":" Imports a key into this provider.\n","sig":null,"attributes":[{"value":"/ Imports a key into this provider.","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\schannel-0.1.20\\src\\crypt_prov.rs","byte_start":48170,"byte_end":48207,"line_start":27,"line_end":27,"column_start":5,"column_end":42}}]},{"kind":"Struct","id":{"krate":0,"index":878},"span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\schannel-0.1.20\\src\\crypt_prov.rs","byte_start":48407,"byte_end":48421,"line_start":38,"line_end":38,"column_start":12,"column_end":26},"name":"AcquireOptions","qualname":"::crypt_prov::AcquireOptions","value":"AcquireOptions {  }","parent":null,"children":[{"krate":0,"index":879},{"krate":0,"index":880},{"krate":0,"index":881}],"decl_id":null,"docs":" A builder for `CryptProv`s.\n","sig":null,"attributes":[{"value":"/ A builder for `CryptProv`s.","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\schannel-0.1.20\\src\\crypt_prov.rs","byte_start":48345,"byte_end":48376,"line_start":36,"line_end":36,"column_start":1,"column_end":32}}]},{"kind":"Method","id":{"krate":0,"index":349},"span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\schannel-0.1.20\\src\\crypt_prov.rs","byte_start":48594,"byte_end":48597,"line_start":46,"line_end":46,"column_start":12,"column_end":15},"name":"new","qualname":"<AcquireOptions>::new","value":"pub fn new() -> AcquireOptions","parent":null,"children":[],"decl_id":null,"docs":" Returns a new builder with default settings.\n","sig":null,"attributes":[{"value":"/ Returns a new builder with default settings.","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\schannel-0.1.20\\src\\crypt_prov.rs","byte_start":48534,"byte_end":48582,"line_start":45,"line_end":45,"column_start":5,"column_end":53}}]},{"kind":"Method","id":{"krate":0,"index":350},"span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\schannel-0.1.20\\src\\crypt_prov.rs","byte_start":48785,"byte_end":48794,"line_start":53,"line_end":53,"column_start":12,"column_end":21},"name":"container","qualname":"<AcquireOptions>::container","value":"pub fn container(&mut Self, &str) -> &mut AcquireOptions","parent":null,"children":[],"decl_id":null,"docs":" Sets the name for this key container.","sig":null,"attributes":[{"value":"/ Sets the name for this key container.","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\schannel-0.1.20\\src\\crypt_prov.rs","byte_start":48665,"byte_end":48706,"line_start":50,"line_end":50,"column_start":5,"column_end":46}},{"value":"/","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\schannel-0.1.20\\src\\crypt_prov.rs","byte_start":48711,"byte_end":48714,"line_start":51,"line_end":51,"column_start":5,"column_end":8}},{"value":"/ This should not be set if `verify_context` is set.","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\schannel-0.1.20\\src\\crypt_prov.rs","byte_start":48719,"byte_end":48773,"line_start":52,"line_end":52,"column_start":5,"column_end":59}}]},{"kind":"Method","id":{"krate":0,"index":351},"span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\schannel-0.1.20\\src\\crypt_prov.rs","byte_start":49006,"byte_end":49014,"line_start":59,"line_end":59,"column_start":12,"column_end":20},"name":"provider","qualname":"<AcquireOptions>::provider","value":"pub fn provider(&mut Self, &str) -> &mut AcquireOptions","parent":null,"children":[],"decl_id":null,"docs":" Sets the name of the CSP to be used.\n","sig":null,"attributes":[{"value":"/ Sets the name of the CSP to be used.","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\schannel-0.1.20\\src\\crypt_prov.rs","byte_start":48954,"byte_end":48994,"line_start":58,"line_end":58,"column_start":5,"column_end":45}}]},{"kind":"Method","id":{"krate":0,"index":352},"span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\schannel-0.1.20\\src\\crypt_prov.rs","byte_start":49244,"byte_end":49258,"line_start":65,"line_end":65,"column_start":12,"column_end":26},"name":"verify_context","qualname":"<AcquireOptions>::verify_context","value":"pub fn verify_context(&mut Self, bool) -> &mut AcquireOptions","parent":null,"children":[],"decl_id":null,"docs":" If set, private keys will not be accessible or persisted.\n","sig":null,"attributes":[{"value":"/ If set, private keys will not be accessible or persisted.","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\schannel-0.1.20\\src\\crypt_prov.rs","byte_start":49171,"byte_end":49232,"line_start":64,"line_end":64,"column_start":5,"column_end":66}}]},{"kind":"Method","id":{"krate":0,"index":353},"span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\schannel-0.1.20\\src\\crypt_prov.rs","byte_start":49451,"byte_end":49461,"line_start":70,"line_end":70,"column_start":12,"column_end":22},"name":"new_keyset","qualname":"<AcquireOptions>::new_keyset","value":"pub fn new_keyset(&mut Self, bool) -> &mut AcquireOptions","parent":null,"children":[],"decl_id":null,"docs":" If set, the container will be created.\n","sig":null,"attributes":[{"value":"/ If set, the container will be created.","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\schannel-0.1.20\\src\\crypt_prov.rs","byte_start":49397,"byte_end":49439,"line_start":69,"line_end":69,"column_start":5,"column_end":47}}]},{"kind":"Method","id":{"krate":0,"index":354},"span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\schannel-0.1.20\\src\\crypt_prov.rs","byte_start":49676,"byte_end":49690,"line_start":75,"line_end":75,"column_start":12,"column_end":26},"name":"machine_keyset","qualname":"<AcquireOptions>::machine_keyset","value":"pub fn machine_keyset(&mut Self, bool) -> &mut AcquireOptions","parent":null,"children":[],"decl_id":null,"docs":" If set, the container will be stored as a machine rather than user keys.\n","sig":null,"attributes":[{"value":"/ If set, the container will be stored as a machine rather than user keys.","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\schannel-0.1.20\\src\\crypt_prov.rs","byte_start":49588,"byte_end":49664,"line_start":74,"line_end":74,"column_start":5,"column_end":81}}]},{"kind":"Method","id":{"krate":0,"index":355},"span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\schannel-0.1.20\\src\\crypt_prov.rs","byte_start":49953,"byte_end":49959,"line_start":81,"line_end":81,"column_start":12,"column_end":18},"name":"silent","qualname":"<AcquireOptions>::silent","value":"pub fn silent(&mut Self, bool) -> &mut AcquireOptions","parent":null,"children":[],"decl_id":null,"docs":" If set, an error will be returned if user intervention is required\n rather than displaying a dialog.\n","sig":null,"attributes":[{"value":"/ If set, an error will be returned if user intervention is required","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\schannel-0.1.20\\src\\crypt_prov.rs","byte_start":49830,"byte_end":49900,"line_start":79,"line_end":79,"column_start":5,"column_end":75}},{"value":"/ rather than displaying a dialog.","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\schannel-0.1.20\\src\\crypt_prov.rs","byte_start":49905,"byte_end":49941,"line_start":80,"line_end":80,"column_start":5,"column_end":41}}]},{"kind":"Method","id":{"krate":0,"index":357},"span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\schannel-0.1.20\\src\\crypt_prov.rs","byte_start":50310,"byte_end":50317,"line_start":96,"line_end":96,"column_start":12,"column_end":19},"name":"acquire","qualname":"<AcquireOptions>::acquire","value":"pub fn acquire(&Self, ProviderType) -> io::Result<CryptProv>","parent":null,"children":[],"decl_id":null,"docs":" Acquires a container.\n","sig":null,"attributes":[{"value":"/ Acquires a container.","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\schannel-0.1.20\\src\\crypt_prov.rs","byte_start":50273,"byte_end":50298,"line_start":95,"line_end":95,"column_start":5,"column_end":30}}]},{"kind":"Struct","id":{"krate":0,"index":884},"span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\schannel-0.1.20\\src\\crypt_prov.rs","byte_start":51259,"byte_end":51271,"line_start":129,"line_end":129,"column_start":12,"column_end":24},"name":"ProviderType","qualname":"::crypt_prov::ProviderType","value":"","parent":null,"children":[],"decl_id":null,"docs":" An identifier of the type of cryptography provider to be used with a\n container.\n","sig":null,"attributes":[{"value":"/ An identifier of the type of cryptography provider to be used with a","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\schannel-0.1.20\\src\\crypt_prov.rs","byte_start":51137,"byte_end":51209,"line_start":126,"line_end":126,"column_start":1,"column_end":73}},{"value":"/ container.","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\schannel-0.1.20\\src\\crypt_prov.rs","byte_start":51210,"byte_end":51224,"line_start":127,"line_end":127,"column_start":1,"column_end":15}}]},{"kind":"Method","id":{"krate":0,"index":361},"span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\schannel-0.1.20\\src\\crypt_prov.rs","byte_start":51333,"byte_end":51341,"line_start":133,"line_end":133,"column_start":12,"column_end":20},"name":"rsa_full","qualname":"<ProviderType>::rsa_full","value":"pub fn rsa_full() -> ProviderType","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":362},"span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\schannel-0.1.20\\src\\crypt_prov.rs","byte_start":51430,"byte_end":51437,"line_start":137,"line_end":137,"column_start":12,"column_end":19},"name":"rsa_aes","qualname":"<ProviderType>::rsa_aes","value":"pub fn rsa_aes() -> ProviderType","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":363},"span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\schannel-0.1.20\\src\\crypt_prov.rs","byte_start":51525,"byte_end":51532,"line_start":141,"line_end":141,"column_start":12,"column_end":19},"name":"rsa_sig","qualname":"<ProviderType>::rsa_sig","value":"pub fn rsa_sig() -> ProviderType","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":364},"span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\schannel-0.1.20\\src\\crypt_prov.rs","byte_start":51620,"byte_end":51632,"line_start":145,"line_end":145,"column_start":12,"column_end":24},"name":"rsa_schannel","qualname":"<ProviderType>::rsa_schannel","value":"pub fn rsa_schannel() -> ProviderType","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":365},"span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\schannel-0.1.20\\src\\crypt_prov.rs","byte_start":51725,"byte_end":51728,"line_start":149,"line_end":149,"column_start":12,"column_end":15},"name":"dss","qualname":"<ProviderType>::dss","value":"pub fn dss() -> ProviderType","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":366},"span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\schannel-0.1.20\\src\\crypt_prov.rs","byte_start":51812,"byte_end":51818,"line_start":153,"line_end":153,"column_start":12,"column_end":18},"name":"dss_dh","qualname":"<ProviderType>::dss_dh","value":"pub fn dss_dh() -> ProviderType","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":367},"span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\schannel-0.1.20\\src\\crypt_prov.rs","byte_start":51905,"byte_end":51916,"line_start":157,"line_end":157,"column_start":12,"column_end":23},"name":"dh_schannel","qualname":"<ProviderType>::dh_schannel","value":"pub fn dh_schannel() -> ProviderType","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":368},"span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\schannel-0.1.20\\src\\crypt_prov.rs","byte_start":52008,"byte_end":52016,"line_start":161,"line_end":161,"column_start":12,"column_end":20},"name":"fortezza","qualname":"<ProviderType>::fortezza","value":"pub fn fortezza() -> ProviderType","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":369},"span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\schannel-0.1.20\\src\\crypt_prov.rs","byte_start":52105,"byte_end":52116,"line_start":165,"line_end":165,"column_start":12,"column_end":23},"name":"ms_exchange","qualname":"<ProviderType>::ms_exchange","value":"pub fn ms_exchange() -> ProviderType","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":370},"span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\schannel-0.1.20\\src\\crypt_prov.rs","byte_start":52208,"byte_end":52211,"line_start":169,"line_end":169,"column_start":12,"column_end":15},"name":"ssl","qualname":"<ProviderType>::ssl","value":"pub fn ssl() -> ProviderType","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":371},"span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\schannel-0.1.20\\src\\crypt_prov.rs","byte_start":52295,"byte_end":52301,"line_start":173,"line_end":173,"column_start":12,"column_end":18},"name":"as_raw","qualname":"<ProviderType>::as_raw","value":"pub fn as_raw(&Self) -> u32","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":372},"span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\schannel-0.1.20\\src\\crypt_prov.rs","byte_start":52384,"byte_end":52397,"line_start":179,"line_end":179,"column_start":12,"column_end":25},"name":"ImportOptions","qualname":"::crypt_prov::ImportOptions","value":"ImportOptions {  }","parent":null,"children":[{"krate":0,"index":374},{"krate":0,"index":375}],"decl_id":null,"docs":" A builder for key imports.\n","sig":null,"attributes":[{"value":"/ A builder for key imports.","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\schannel-0.1.20\\src\\crypt_prov.rs","byte_start":52342,"byte_end":52372,"line_start":178,"line_end":178,"column_start":1,"column_end":31}}]},{"kind":"Method","id":{"krate":0,"index":378},"span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\schannel-0.1.20\\src\\crypt_prov.rs","byte_start":52541,"byte_end":52547,"line_start":186,"line_end":186,"column_start":12,"column_end":18},"name":"import","qualname":"<ImportOptions>::import","value":"pub fn import(&mut Self, &[u8]) -> io::Result<CryptKey>","parent":null,"children":[],"decl_id":null,"docs":" Imports a DER-encoded PKCS1 private key.\n","sig":null,"attributes":[{"value":"/ Imports a DER-encoded PKCS1 private key.","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\schannel-0.1.20\\src\\crypt_prov.rs","byte_start":52485,"byte_end":52529,"line_start":185,"line_end":185,"column_start":5,"column_end":49}}]},{"kind":"Method","id":{"krate":0,"index":379},"span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\schannel-0.1.20\\src\\crypt_prov.rs","byte_start":53689,"byte_end":53701,"line_start":218,"line_end":218,"column_start":12,"column_end":24},"name":"import_pkcs8","qualname":"<ImportOptions>::import_pkcs8","value":"pub fn import_pkcs8(&mut Self, &[u8]) -> io::Result<CryptKey>","parent":null,"children":[],"decl_id":null,"docs":" Imports a DER-encoded PKCS8 private key.\n","sig":null,"attributes":[{"value":"/ Imports a DER-encoded PKCS8 private key.","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\schannel-0.1.20\\src\\crypt_prov.rs","byte_start":53633,"byte_end":53677,"line_start":217,"line_end":217,"column_start":5,"column_end":49}}]},{"kind":"Method","id":{"krate":0,"index":380},"span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\schannel-0.1.20\\src\\crypt_prov.rs","byte_start":55053,"byte_end":55069,"line_start":251,"line_end":251,"column_start":12,"column_end":28},"name":"import_pkcs8_pem","qualname":"<ImportOptions>::import_pkcs8_pem","value":"pub fn import_pkcs8_pem(&mut Self, &[u8]) -> io::Result<CryptKey>","parent":null,"children":[],"decl_id":null,"docs":" Imports a PEM-encoded PKCS8 private key.\n This functions decodes PEM blocks with or without \"-----BEGIN PRIVATE KEY-----\"\n and \"-----END PRIVATE KEY-----\" headers, but if PEM guards are present they must be exactly\n these.\n","sig":null,"attributes":[{"value":"/ Imports a PEM-encoded PKCS8 private key.","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\schannel-0.1.20\\src\\crypt_prov.rs","byte_start":54794,"byte_end":54838,"line_start":247,"line_end":247,"column_start":5,"column_end":49}},{"value":"/ This functions decodes PEM blocks with or without \"-----BEGIN PRIVATE KEY-----\"","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\schannel-0.1.20\\src\\crypt_prov.rs","byte_start":54843,"byte_end":54926,"line_start":248,"line_end":248,"column_start":5,"column_end":88}},{"value":"/ and \"-----END PRIVATE KEY-----\" headers, but if PEM guards are present they must be exactly","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\schannel-0.1.20\\src\\crypt_prov.rs","byte_start":54931,"byte_end":55026,"line_start":249,"line_end":249,"column_start":5,"column_end":100}},{"value":"/ these.","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\schannel-0.1.20\\src\\crypt_prov.rs","byte_start":55031,"byte_end":55041,"line_start":250,"line_end":250,"column_start":5,"column_end":15}}]},{"kind":"Struct","id":{"krate":0,"index":401},"span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\schannel-0.1.20\\src\\ctl_context.rs","byte_start":61130,"byte_end":61140,"line_start":23,"line_end":23,"column_start":12,"column_end":22},"name":"CtlContext","qualname":"::ctl_context::CtlContext","value":"","parent":null,"children":[],"decl_id":null,"docs":" Wrapped `PCCTL_CONTEXT` which represents a certificate trust list to\n Windows.\n","sig":null,"attributes":[{"value":"/ Wrapped `PCCTL_CONTEXT` which represents a certificate trust list to","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\schannel-0.1.20\\src\\ctl_context.rs","byte_start":61033,"byte_end":61105,"line_start":21,"line_end":21,"column_start":1,"column_end":73}},{"value":"/ Windows.","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\schannel-0.1.20\\src\\ctl_context.rs","byte_start":61106,"byte_end":61118,"line_start":22,"line_end":22,"column_start":1,"column_end":13}}]},{"kind":"Method","id":{"krate":0,"index":413},"span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\schannel-0.1.20\\src\\ctl_context.rs","byte_start":61837,"byte_end":61844,"line_start":52,"line_end":52,"column_start":12,"column_end":19},"name":"builder","qualname":"<CtlContext>::builder","value":"pub fn builder() -> Builder","parent":null,"children":[],"decl_id":null,"docs":" Returns a builder reader to create an encoded `CtlContext`.\n","sig":null,"attributes":[{"value":"/ Returns a builder reader to create an encoded `CtlContext`.","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\schannel-0.1.20\\src\\ctl_context.rs","byte_start":61762,"byte_end":61825,"line_start":51,"line_end":51,"column_start":5,"column_end":68}}]},{"kind":"Struct","id":{"krate":0,"index":414},"span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\schannel-0.1.20\\src\\ctl_context.rs","byte_start":62092,"byte_end":62099,"line_start":62,"line_end":62,"column_start":12,"column_end":19},"name":"Builder","qualname":"::ctl_context::Builder","value":"Builder {  }","parent":null,"children":[{"krate":0,"index":415},{"krate":0,"index":416}],"decl_id":null,"docs":" Used to build an encoded `CtlContext` which can be added to a `Memory` store\n to get back the actual `CtlContext`.\n","sig":null,"attributes":[{"value":"/ Used to build an encoded `CtlContext` which can be added to a `Memory` store","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\schannel-0.1.20\\src\\ctl_context.rs","byte_start":61959,"byte_end":62039,"line_start":60,"line_end":60,"column_start":1,"column_end":81}},{"value":"/ to get back the actual `CtlContext`.","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\schannel-0.1.20\\src\\ctl_context.rs","byte_start":62040,"byte_end":62080,"line_start":61,"line_end":61,"column_start":1,"column_end":41}}]},{"kind":"Method","id":{"krate":0,"index":418},"span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\schannel-0.1.20\\src\\ctl_context.rs","byte_start":62273,"byte_end":62284,"line_start":69,"line_end":69,"column_start":12,"column_end":23},"name":"certificate","qualname":"<Builder>::certificate","value":"pub fn certificate(&mut Self, CertContext) -> &mut Builder","parent":null,"children":[],"decl_id":null,"docs":" Adds a certificate to be passed to `CryptMsgEncodeAndSignCTL` later on.\n","sig":null,"attributes":[{"value":"/ Adds a certificate to be passed to `CryptMsgEncodeAndSignCTL` later on.","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\schannel-0.1.20\\src\\ctl_context.rs","byte_start":62186,"byte_end":62261,"line_start":68,"line_end":68,"column_start":5,"column_end":80}}]},{"kind":"Method","id":{"krate":0,"index":419},"span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\schannel-0.1.20\\src\\ctl_context.rs","byte_start":62519,"byte_end":62524,"line_start":76,"line_end":76,"column_start":12,"column_end":17},"name":"usage","qualname":"<Builder>::usage","value":"pub fn usage(&mut Self, &str) -> &mut Builder","parent":null,"children":[],"decl_id":null,"docs":" Adds a usage string to be passed in the `SubjectUsage` field to\n `CryptMsgEncodeAndSignCTL` later on.\n","sig":null,"attributes":[{"value":"/ Adds a usage string to be passed in the `SubjectUsage` field to","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\schannel-0.1.20\\src\\ctl_context.rs","byte_start":62395,"byte_end":62462,"line_start":74,"line_end":74,"column_start":5,"column_end":72}},{"value":"/ `CryptMsgEncodeAndSignCTL` later on.","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\schannel-0.1.20\\src\\ctl_context.rs","byte_start":62467,"byte_end":62507,"line_start":75,"line_end":75,"column_start":5,"column_end":45}}]},{"kind":"Method","id":{"krate":0,"index":420},"span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\schannel-0.1.20\\src\\ctl_context.rs","byte_start":62875,"byte_end":62890,"line_start":87,"line_end":87,"column_start":12,"column_end":27},"name":"encode_and_sign","qualname":"<Builder>::encode_and_sign","value":"pub fn encode_and_sign(&Self) -> io::Result<Vec<u8>>","parent":null,"children":[],"decl_id":null,"docs":" Calls `CryptMsgEncodeAndSignCTL` to encode this list of certificates\n into a CTL.","sig":null,"attributes":[{"value":"/ Calls `CryptMsgEncodeAndSignCTL` to encode this list of certificates","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\schannel-0.1.20\\src\\ctl_context.rs","byte_start":62700,"byte_end":62772,"line_start":83,"line_end":83,"column_start":5,"column_end":77}},{"value":"/ into a CTL.","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\schannel-0.1.20\\src\\ctl_context.rs","byte_start":62777,"byte_end":62792,"line_start":84,"line_end":84,"column_start":5,"column_end":20}},{"value":"/","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\schannel-0.1.20\\src\\ctl_context.rs","byte_start":62797,"byte_end":62800,"line_start":85,"line_end":85,"column_start":5,"column_end":8}},{"value":"/ This can later be passed to `Memory::add_encoded_ctl`.","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\schannel-0.1.20\\src\\ctl_context.rs","byte_start":62805,"byte_end":62863,"line_start":86,"line_end":86,"column_start":5,"column_end":63}}]},{"kind":"Mod","id":{"krate":0,"index":424},"span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\schannel-0.1.20\\src\\key_handle.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"key_handle","qualname":"::key_handle","value":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\schannel-0.1.20\\src\\key_handle.rs","parent":null,"children":[{"krate":0,"index":425}],"decl_id":null,"docs":" Deprecated.\n","sig":null,"attributes":[{"value":"/ Deprecated.","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\schannel-0.1.20\\src\\key_handle.rs","byte_start":66570,"byte_end":66585,"line_start":1,"line_end":1,"column_start":1,"column_end":16}}]},{"kind":"Mod","id":{"krate":0,"index":428},"span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\schannel-0.1.20\\src\\ncrypt_key.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"ncrypt_key","qualname":"::ncrypt_key","value":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\schannel-0.1.20\\src\\ncrypt_key.rs","parent":null,"children":[{"krate":0,"index":429},{"krate":0,"index":432},{"krate":0,"index":435},{"krate":0,"index":901},{"krate":0,"index":905}],"decl_id":null,"docs":" CNG private keys.\n","sig":null,"attributes":[{"value":"/ CNG private keys.","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\schannel-0.1.20\\src\\ncrypt_key.rs","byte_start":66714,"byte_end":66735,"line_start":1,"line_end":1,"column_start":1,"column_end":22}}]},{"kind":"Struct","id":{"krate":0,"index":432},"span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\schannel-0.1.20\\src\\ncrypt_key.rs","byte_start":66824,"byte_end":66833,"line_start":6,"line_end":6,"column_start":12,"column_end":21},"name":"NcryptKey","qualname":"::ncrypt_key::NcryptKey","value":"","parent":null,"children":[],"decl_id":null,"docs":" A CNG handle to a key.\n","sig":null,"attributes":[{"value":"/ A CNG handle to a key.","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\schannel-0.1.20\\src\\ncrypt_key.rs","byte_start":66786,"byte_end":66812,"line_start":5,"line_end":5,"column_start":1,"column_end":27}}]},{"kind":"Mod","id":{"krate":0,"index":437},"span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\schannel-0.1.20\\src\\schannel_cred.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"schannel_cred","qualname":"::schannel_cred","value":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\schannel-0.1.20\\src\\schannel_cred.rs","parent":null,"children":[{"krate":0,"index":438},{"krate":0,"index":441},{"krate":0,"index":444},{"krate":0,"index":445},{"krate":0,"index":448},{"krate":0,"index":451},{"krate":0,"index":454},{"krate":0,"index":457},{"krate":0,"index":458},{"krate":0,"index":461},{"krate":0,"index":464},{"krate":0,"index":467},{"krate":0,"index":908},{"krate":0,"index":910},{"krate":0,"index":911},{"krate":0,"index":916},{"krate":0,"index":919},{"krate":0,"index":924},{"krate":0,"index":925},{"krate":0,"index":927},{"krate":0,"index":929},{"krate":0,"index":930},{"krate":0,"index":932},{"krate":0,"index":933},{"krate":0,"index":935},{"krate":0,"index":1035},{"krate":0,"index":1037},{"krate":0,"index":1038},{"krate":0,"index":1040},{"krate":0,"index":1051},{"krate":0,"index":1053},{"krate":0,"index":1054},{"krate":0,"index":470},{"krate":0,"index":1056},{"krate":0,"index":1060},{"krate":0,"index":1062},{"krate":0,"index":472},{"krate":0,"index":1064},{"krate":0,"index":1067},{"krate":0,"index":481},{"krate":0,"index":484},{"krate":0,"index":486}],"decl_id":null,"docs":" Schannel credentials.\n","sig":null,"attributes":[{"value":"/ Schannel credentials.","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\schannel-0.1.20\\src\\schannel_cred.rs","byte_start":67061,"byte_end":67086,"line_start":1,"line_end":1,"column_start":1,"column_end":26}}]},{"kind":"TupleVariant","id":{"krate":0,"index":920},"span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\schannel-0.1.20\\src\\schannel_cred.rs","byte_start":67650,"byte_end":67657,"line_start":21,"line_end":21,"column_start":5,"column_end":12},"name":"Inbound","qualname":"::schannel_cred::Direction::Inbound","value":"Direction::Inbound","parent":{"krate":0,"index":919},"children":[],"decl_id":null,"docs":" Server-side, inbound connections.\n","sig":null,"attributes":[{"value":"/ Server-side, inbound connections.","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\schannel-0.1.20\\src\\schannel_cred.rs","byte_start":67608,"byte_end":67645,"line_start":20,"line_end":20,"column_start":5,"column_end":42}}]},{"kind":"TupleVariant","id":{"krate":0,"index":922},"span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\schannel-0.1.20\\src\\schannel_cred.rs","byte_start":67706,"byte_end":67714,"line_start":23,"line_end":23,"column_start":5,"column_end":13},"name":"Outbound","qualname":"::schannel_cred::Direction::Outbound","value":"Direction::Outbound","parent":{"krate":0,"index":919},"children":[],"decl_id":null,"docs":" Client-side, outbound connections.\n","sig":null,"attributes":[{"value":"/ Client-side, outbound connections.","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\schannel-0.1.20\\src\\schannel_cred.rs","byte_start":67663,"byte_end":67701,"line_start":22,"line_end":22,"column_start":5,"column_end":43}}]},{"kind":"Enum","id":{"krate":0,"index":919},"span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\schannel-0.1.20\\src\\schannel_cred.rs","byte_start":67592,"byte_end":67601,"line_start":19,"line_end":19,"column_start":10,"column_end":19},"name":"Direction","qualname":"::schannel_cred::Direction","value":"pub enum Direction { Inbound, Outbound, }","parent":null,"children":[{"krate":0,"index":920},{"krate":0,"index":922}],"decl_id":null,"docs":" The communication direction that an `SchannelCred` will support.\n","sig":null,"attributes":[{"value":"/ The communication direction that an `SchannelCred` will support.","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\schannel-0.1.20\\src\\schannel_cred.rs","byte_start":67469,"byte_end":67537,"line_start":17,"line_end":17,"column_start":1,"column_end":69}}]},{"kind":"TupleVariant","id":{"krate":0,"index":936},"span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\schannel-0.1.20\\src\\schannel_cred.rs","byte_start":67970,"byte_end":67973,"line_start":33,"line_end":33,"column_start":5,"column_end":8},"name":"Aes","qualname":"::schannel_cred::Algorithm::Aes","value":"Algorithm::Aes","parent":{"krate":0,"index":935},"children":[],"decl_id":null,"docs":" Advanced Encryption Standard (AES).\n","sig":null,"attributes":[{"value":"/ Advanced Encryption Standard (AES).","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\schannel-0.1.20\\src\\schannel_cred.rs","byte_start":67926,"byte_end":67965,"line_start":32,"line_end":32,"column_start":5,"column_end":44}}]},{"kind":"TupleVariant","id":{"krate":0,"index":939},"span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\schannel-0.1.20\\src\\schannel_cred.rs","byte_start":68114,"byte_end":68120,"line_start":37,"line_end":37,"column_start":5,"column_end":11},"name":"Aes128","qualname":"::schannel_cred::Algorithm::Aes128","value":"Algorithm::Aes128","parent":{"krate":0,"index":935},"children":[],"decl_id":null,"docs":" 128 bit AES.\n","sig":null,"attributes":[{"value":"/ 128 bit AES.","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\schannel-0.1.20\\src\\schannel_cred.rs","byte_start":68093,"byte_end":68109,"line_start":36,"line_end":36,"column_start":5,"column_end":21}}]},{"kind":"TupleVariant","id":{"krate":0,"index":942},"span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\schannel-0.1.20\\src\\schannel_cred.rs","byte_start":68265,"byte_end":68271,"line_start":41,"line_end":41,"column_start":5,"column_end":11},"name":"Aes192","qualname":"::schannel_cred::Algorithm::Aes192","value":"Algorithm::Aes192","parent":{"krate":0,"index":935},"children":[],"decl_id":null,"docs":" 192 bit AES.\n","sig":null,"attributes":[{"value":"/ 192 bit AES.","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\schannel-0.1.20\\src\\schannel_cred.rs","byte_start":68244,"byte_end":68260,"line_start":40,"line_end":40,"column_start":5,"column_end":21}}]},{"kind":"TupleVariant","id":{"krate":0,"index":945},"span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\schannel-0.1.20\\src\\schannel_cred.rs","byte_start":68416,"byte_end":68422,"line_start":45,"line_end":45,"column_start":5,"column_end":11},"name":"Aes256","qualname":"::schannel_cred::Algorithm::Aes256","value":"Algorithm::Aes256","parent":{"krate":0,"index":935},"children":[],"decl_id":null,"docs":" 256 bit AES.\n","sig":null,"attributes":[{"value":"/ 256 bit AES.","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\schannel-0.1.20\\src\\schannel_cred.rs","byte_start":68395,"byte_end":68411,"line_start":44,"line_end":44,"column_start":5,"column_end":21}}]},{"kind":"TupleVariant","id":{"krate":0,"index":948},"span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\schannel-0.1.20\\src\\schannel_cred.rs","byte_start":68630,"byte_end":68642,"line_start":49,"line_end":49,"column_start":5,"column_end":17},"name":"AgreedkeyAny","qualname":"::schannel_cred::Algorithm::AgreedkeyAny","value":"Algorithm::AgreedkeyAny","parent":{"krate":0,"index":935},"children":[],"decl_id":null,"docs":" Temporary algorithm identifier for handles of Diffie-Hellman–agreed keys.\n","sig":null,"attributes":[{"value":"/ Temporary algorithm identifier for handles of Diffie-Hellman–agreed keys.","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\schannel-0.1.20\\src\\schannel_cred.rs","byte_start":68546,"byte_end":68625,"line_start":48,"line_end":48,"column_start":5,"column_end":82}}]},{"kind":"TupleVariant","id":{"krate":0,"index":951},"span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\schannel-0.1.20\\src\\schannel_cred.rs","byte_start":68899,"byte_end":68908,"line_start":54,"line_end":54,"column_start":5,"column_end":14},"name":"CylinkMek","qualname":"::schannel_cred::Algorithm::CylinkMek","value":"Algorithm::CylinkMek","parent":{"krate":0,"index":935},"children":[],"decl_id":null,"docs":" An algorithm to create a 40-bit DES key that has parity bits and zeroed key bits to make\n its key length 64 bits.\n","sig":null,"attributes":[{"value":"/ An algorithm to create a 40-bit DES key that has parity bits and zeroed key bits to make","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\schannel-0.1.20\\src\\schannel_cred.rs","byte_start":68770,"byte_end":68862,"line_start":52,"line_end":52,"column_start":5,"column_end":97}},{"value":"/ its key length 64 bits.","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\schannel-0.1.20\\src\\schannel_cred.rs","byte_start":68867,"byte_end":68894,"line_start":53,"line_end":53,"column_start":5,"column_end":32}}]},{"kind":"TupleVariant","id":{"krate":0,"index":954},"span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\schannel-0.1.20\\src\\schannel_cred.rs","byte_start":69069,"byte_end":69072,"line_start":58,"line_end":58,"column_start":5,"column_end":8},"name":"Des","qualname":"::schannel_cred::Algorithm::Des","value":"Algorithm::Des","parent":{"krate":0,"index":935},"children":[],"decl_id":null,"docs":" DES encryption algorithm.\n","sig":null,"attributes":[{"value":"/ DES encryption algorithm.","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\schannel-0.1.20\\src\\schannel_cred.rs","byte_start":69035,"byte_end":69064,"line_start":57,"line_end":57,"column_start":5,"column_end":34}}]},{"kind":"TupleVariant","id":{"krate":0,"index":957},"span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\schannel-0.1.20\\src\\schannel_cred.rs","byte_start":69227,"byte_end":69231,"line_start":62,"line_end":62,"column_start":5,"column_end":9},"name":"Desx","qualname":"::schannel_cred::Algorithm::Desx","value":"Algorithm::Desx","parent":{"krate":0,"index":935},"children":[],"decl_id":null,"docs":" DESX encryption algorithm.\n","sig":null,"attributes":[{"value":"/ DESX encryption algorithm.","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\schannel-0.1.20\\src\\schannel_cred.rs","byte_start":69192,"byte_end":69222,"line_start":61,"line_end":61,"column_start":5,"column_end":35}}]},{"kind":"TupleVariant","id":{"krate":0,"index":960},"span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\schannel-0.1.20\\src\\schannel_cred.rs","byte_start":69409,"byte_end":69416,"line_start":66,"line_end":66,"column_start":5,"column_end":12},"name":"DhEphem","qualname":"::schannel_cred::Algorithm::DhEphem","value":"Algorithm::DhEphem","parent":{"krate":0,"index":935},"children":[],"decl_id":null,"docs":" Diffie-Hellman ephemeral key exchange algorithm.\n","sig":null,"attributes":[{"value":"/ Diffie-Hellman ephemeral key exchange algorithm.","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\schannel-0.1.20\\src\\schannel_cred.rs","byte_start":69352,"byte_end":69404,"line_start":65,"line_end":65,"column_start":5,"column_end":57}}]},{"kind":"TupleVariant","id":{"krate":0,"index":963},"span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\schannel-0.1.20\\src\\schannel_cred.rs","byte_start":69603,"byte_end":69607,"line_start":70,"line_end":70,"column_start":5,"column_end":9},"name":"DhSf","qualname":"::schannel_cred::Algorithm::DhSf","value":"Algorithm::DhSf","parent":{"krate":0,"index":935},"children":[],"decl_id":null,"docs":" Diffie-Hellman store and forward key exchange algorithm.\n","sig":null,"attributes":[{"value":"/ Diffie-Hellman store and forward key exchange algorithm.","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\schannel-0.1.20\\src\\schannel_cred.rs","byte_start":69538,"byte_end":69598,"line_start":69,"line_end":69,"column_start":5,"column_end":65}}]},{"kind":"TupleVariant","id":{"krate":0,"index":966},"span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\schannel-0.1.20\\src\\schannel_cred.rs","byte_start":69773,"byte_end":69780,"line_start":74,"line_end":74,"column_start":5,"column_end":12},"name":"DssSign","qualname":"::schannel_cred::Algorithm::DssSign","value":"Algorithm::DssSign","parent":{"krate":0,"index":935},"children":[],"decl_id":null,"docs":" DSA public key signature algorithm.\n","sig":null,"attributes":[{"value":"/ DSA public key signature algorithm.","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\schannel-0.1.20\\src\\schannel_cred.rs","byte_start":69729,"byte_end":69768,"line_start":73,"line_end":73,"column_start":5,"column_end":44}}]},{"kind":"TupleVariant","id":{"krate":0,"index":969},"span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\schannel-0.1.20\\src\\schannel_cred.rs","byte_start":69961,"byte_end":69965,"line_start":78,"line_end":78,"column_start":5,"column_end":9},"name":"Ecdh","qualname":"::schannel_cred::Algorithm::Ecdh","value":"Algorithm::Ecdh","parent":{"krate":0,"index":935},"children":[],"decl_id":null,"docs":" Elliptic curve Diffie-Hellman key exchange algorithm.\n","sig":null,"attributes":[{"value":"/ Elliptic curve Diffie-Hellman key exchange algorithm.","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\schannel-0.1.20\\src\\schannel_cred.rs","byte_start":69899,"byte_end":69956,"line_start":77,"line_end":77,"column_start":5,"column_end":62}}]},{"kind":"TupleVariant","id":{"krate":0,"index":972},"span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\schannel-0.1.20\\src\\schannel_cred.rs","byte_start":70155,"byte_end":70164,"line_start":82,"line_end":82,"column_start":5,"column_end":14},"name":"EcdhEphem","qualname":"::schannel_cred::Algorithm::EcdhEphem","value":"Algorithm::EcdhEphem","parent":{"krate":0,"index":935},"children":[],"decl_id":null,"docs":" Ephemeral elliptic curve Diffie-Hellman key exchange algorithm.\n","sig":null,"attributes":[{"value":"/ Ephemeral elliptic curve Diffie-Hellman key exchange algorithm.","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\schannel-0.1.20\\src\\schannel_cred.rs","byte_start":70083,"byte_end":70150,"line_start":81,"line_end":81,"column_start":5,"column_end":72}}]},{"kind":"TupleVariant","id":{"krate":0,"index":975},"span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\schannel-0.1.20\\src\\schannel_cred.rs","byte_start":70342,"byte_end":70347,"line_start":86,"line_end":86,"column_start":5,"column_end":10},"name":"Ecdsa","qualname":"::schannel_cred::Algorithm::Ecdsa","value":"Algorithm::Ecdsa","parent":{"krate":0,"index":935},"children":[],"decl_id":null,"docs":" Elliptic curve digital signature algorithm.\n","sig":null,"attributes":[{"value":"/ Elliptic curve digital signature algorithm.","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\schannel-0.1.20\\src\\schannel_cred.rs","byte_start":70290,"byte_end":70337,"line_start":85,"line_end":85,"column_start":5,"column_end":52}}]},{"kind":"TupleVariant","id":{"krate":0,"index":978},"span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\schannel-0.1.20\\src\\schannel_cred.rs","byte_start":70508,"byte_end":70522,"line_start":90,"line_end":90,"column_start":5,"column_end":19},"name":"HashReplaceOwf","qualname":"::schannel_cred::Algorithm::HashReplaceOwf","value":"Algorithm::HashReplaceOwf","parent":{"krate":0,"index":935},"children":[],"decl_id":null,"docs":" One way function hashing algorithm.\n","sig":null,"attributes":[{"value":"/ One way function hashing algorithm.","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\schannel-0.1.20\\src\\schannel_cred.rs","byte_start":70464,"byte_end":70503,"line_start":89,"line_end":89,"column_start":5,"column_end":44}}]},{"kind":"TupleVariant","id":{"krate":0,"index":981},"span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\schannel-0.1.20\\src\\schannel_cred.rs","byte_start":70683,"byte_end":70692,"line_start":94,"line_end":94,"column_start":5,"column_end":14},"name":"HughesMd5","qualname":"::schannel_cred::Algorithm::HughesMd5","value":"Algorithm::HughesMd5","parent":{"krate":0,"index":935},"children":[],"decl_id":null,"docs":" Hughes MD5 hashing algorithm.\n","sig":null,"attributes":[{"value":"/ Hughes MD5 hashing algorithm.","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\schannel-0.1.20\\src\\schannel_cred.rs","byte_start":70645,"byte_end":70678,"line_start":93,"line_end":93,"column_start":5,"column_end":38}}]},{"kind":"TupleVariant","id":{"krate":0,"index":984},"span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\schannel-0.1.20\\src\\schannel_cred.rs","byte_start":70845,"byte_end":70849,"line_start":98,"line_end":98,"column_start":5,"column_end":9},"name":"Hmac","qualname":"::schannel_cred::Algorithm::Hmac","value":"Algorithm::Hmac","parent":{"krate":0,"index":935},"children":[],"decl_id":null,"docs":" HMAC keyed hash algorithm.\n","sig":null,"attributes":[{"value":"/ HMAC keyed hash algorithm.","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\schannel-0.1.20\\src\\schannel_cred.rs","byte_start":70810,"byte_end":70840,"line_start":97,"line_end":97,"column_start":5,"column_end":35}}]},{"kind":"TupleVariant","id":{"krate":0,"index":987},"span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\schannel-0.1.20\\src\\schannel_cred.rs","byte_start":70978,"byte_end":70981,"line_start":100,"line_end":100,"column_start":5,"column_end":8},"name":"Mac","qualname":"::schannel_cred::Algorithm::Mac","value":"Algorithm::Mac","parent":{"krate":0,"index":935},"children":[],"decl_id":null,"docs":" MAC keyed hash algorithm.\n","sig":null,"attributes":[{"value":"/ MAC keyed hash algorithm.","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\schannel-0.1.20\\src\\schannel_cred.rs","byte_start":70944,"byte_end":70973,"line_start":99,"line_end":99,"column_start":5,"column_end":34}}]},{"kind":"TupleVariant","id":{"krate":0,"index":990},"span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\schannel-0.1.20\\src\\schannel_cred.rs","byte_start":71106,"byte_end":71109,"line_start":102,"line_end":102,"column_start":5,"column_end":8},"name":"Md2","qualname":"::schannel_cred::Algorithm::Md2","value":"Algorithm::Md2","parent":{"krate":0,"index":935},"children":[],"decl_id":null,"docs":" MD2 hashing algorithm.\n","sig":null,"attributes":[{"value":"/ MD2 hashing algorithm.","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\schannel-0.1.20\\src\\schannel_cred.rs","byte_start":71075,"byte_end":71101,"line_start":101,"line_end":101,"column_start":5,"column_end":31}}]},{"kind":"TupleVariant","id":{"krate":0,"index":993},"span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\schannel-0.1.20\\src\\schannel_cred.rs","byte_start":71234,"byte_end":71237,"line_start":104,"line_end":104,"column_start":5,"column_end":8},"name":"Md4","qualname":"::schannel_cred::Algorithm::Md4","value":"Algorithm::Md4","parent":{"krate":0,"index":935},"children":[],"decl_id":null,"docs":" MD4 hashing algorithm.\n","sig":null,"attributes":[{"value":"/ MD4 hashing algorithm.","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\schannel-0.1.20\\src\\schannel_cred.rs","byte_start":71203,"byte_end":71229,"line_start":103,"line_end":103,"column_start":5,"column_end":31}}]},{"kind":"TupleVariant","id":{"krate":0,"index":996},"span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\schannel-0.1.20\\src\\schannel_cred.rs","byte_start":71362,"byte_end":71365,"line_start":106,"line_end":106,"column_start":5,"column_end":8},"name":"Md5","qualname":"::schannel_cred::Algorithm::Md5","value":"Algorithm::Md5","parent":{"krate":0,"index":935},"children":[],"decl_id":null,"docs":" MD5 hashing algorithm.\n","sig":null,"attributes":[{"value":"/ MD5 hashing algorithm.","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\schannel-0.1.20\\src\\schannel_cred.rs","byte_start":71331,"byte_end":71357,"line_start":105,"line_end":105,"column_start":5,"column_end":31}}]},{"kind":"TupleVariant","id":{"krate":0,"index":999},"span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\schannel-0.1.20\\src\\schannel_cred.rs","byte_start":71492,"byte_end":71498,"line_start":108,"line_end":108,"column_start":5,"column_end":11},"name":"NoSign","qualname":"::schannel_cred::Algorithm::NoSign","value":"Algorithm::NoSign","parent":{"krate":0,"index":935},"children":[],"decl_id":null,"docs":" No signature algorithm..\n","sig":null,"attributes":[{"value":"/ No signature algorithm..","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\schannel-0.1.20\\src\\schannel_cred.rs","byte_start":71459,"byte_end":71487,"line_start":107,"line_end":107,"column_start":5,"column_end":33}}]},{"kind":"TupleVariant","id":{"krate":0,"index":1002},"span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\schannel-0.1.20\\src\\schannel_cred.rs","byte_start":71645,"byte_end":71648,"line_start":111,"line_end":111,"column_start":5,"column_end":8},"name":"Rc2","qualname":"::schannel_cred::Algorithm::Rc2","value":"Algorithm::Rc2","parent":{"krate":0,"index":935},"children":[],"decl_id":null,"docs":" RC2 block encryption algorithm.\n","sig":null,"attributes":[{"value":"/ RC2 block encryption algorithm.","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\schannel-0.1.20\\src\\schannel_cred.rs","byte_start":71605,"byte_end":71640,"line_start":110,"line_end":110,"column_start":5,"column_end":40}}]},{"kind":"TupleVariant","id":{"krate":0,"index":1005},"span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\schannel-0.1.20\\src\\schannel_cred.rs","byte_start":71809,"byte_end":71812,"line_start":115,"line_end":115,"column_start":5,"column_end":8},"name":"Rc4","qualname":"::schannel_cred::Algorithm::Rc4","value":"Algorithm::Rc4","parent":{"krate":0,"index":935},"children":[],"decl_id":null,"docs":" RC4 stream encryption algorithm.\n","sig":null,"attributes":[{"value":"/ RC4 stream encryption algorithm.","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\schannel-0.1.20\\src\\schannel_cred.rs","byte_start":71768,"byte_end":71804,"line_start":114,"line_end":114,"column_start":5,"column_end":41}}]},{"kind":"TupleVariant","id":{"krate":0,"index":1008},"span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\schannel-0.1.20\\src\\schannel_cred.rs","byte_start":71973,"byte_end":71976,"line_start":119,"line_end":119,"column_start":5,"column_end":8},"name":"Rc5","qualname":"::schannel_cred::Algorithm::Rc5","value":"Algorithm::Rc5","parent":{"krate":0,"index":935},"children":[],"decl_id":null,"docs":" RC5 block encryption algorithm.\n","sig":null,"attributes":[{"value":"/ RC5 block encryption algorithm.","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\schannel-0.1.20\\src\\schannel_cred.rs","byte_start":71933,"byte_end":71968,"line_start":118,"line_end":118,"column_start":5,"column_end":40}}]},{"kind":"TupleVariant","id":{"krate":0,"index":1011},"span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\schannel-0.1.20\\src\\schannel_cred.rs","byte_start":72139,"byte_end":72146,"line_start":123,"line_end":123,"column_start":5,"column_end":12},"name":"RsaKeyx","qualname":"::schannel_cred::Algorithm::RsaKeyx","value":"Algorithm::RsaKeyx","parent":{"krate":0,"index":935},"children":[],"decl_id":null,"docs":" RSA public key exchange algorithm.\n","sig":null,"attributes":[{"value":"/ RSA public key exchange algorithm.","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\schannel-0.1.20\\src\\schannel_cred.rs","byte_start":72096,"byte_end":72134,"line_start":122,"line_end":122,"column_start":5,"column_end":43}}]},{"kind":"TupleVariant","id":{"krate":0,"index":1014},"span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\schannel-0.1.20\\src\\schannel_cred.rs","byte_start":72312,"byte_end":72319,"line_start":127,"line_end":127,"column_start":5,"column_end":12},"name":"RsaSign","qualname":"::schannel_cred::Algorithm::RsaSign","value":"Algorithm::RsaSign","parent":{"krate":0,"index":935},"children":[],"decl_id":null,"docs":" RSA public key signature algorithm.\n","sig":null,"attributes":[{"value":"/ RSA public key signature algorithm.","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\schannel-0.1.20\\src\\schannel_cred.rs","byte_start":72268,"byte_end":72307,"line_start":126,"line_end":126,"column_start":5,"column_end":44}}]},{"kind":"TupleVariant","id":{"krate":0,"index":1017},"span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\schannel-0.1.20\\src\\schannel_cred.rs","byte_start":72469,"byte_end":72473,"line_start":131,"line_end":131,"column_start":5,"column_end":9},"name":"Sha1","qualname":"::schannel_cred::Algorithm::Sha1","value":"Algorithm::Sha1","parent":{"krate":0,"index":935},"children":[],"decl_id":null,"docs":" SHA hashing algorithm.\n","sig":null,"attributes":[{"value":"/ SHA hashing algorithm.","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\schannel-0.1.20\\src\\schannel_cred.rs","byte_start":72438,"byte_end":72464,"line_start":130,"line_end":130,"column_start":5,"column_end":31}}]},{"kind":"TupleVariant","id":{"krate":0,"index":1020},"span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\schannel-0.1.20\\src\\schannel_cred.rs","byte_start":72607,"byte_end":72613,"line_start":133,"line_end":133,"column_start":5,"column_end":11},"name":"Sha256","qualname":"::schannel_cred::Algorithm::Sha256","value":"Algorithm::Sha256","parent":{"krate":0,"index":935},"children":[],"decl_id":null,"docs":" 256 bit SHA hashing algorithm.\n","sig":null,"attributes":[{"value":"/ 256 bit SHA hashing algorithm.","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\schannel-0.1.20\\src\\schannel_cred.rs","byte_start":72568,"byte_end":72602,"line_start":132,"line_end":132,"column_start":5,"column_end":39}}]},{"kind":"TupleVariant","id":{"krate":0,"index":1023},"span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\schannel-0.1.20\\src\\schannel_cred.rs","byte_start":72758,"byte_end":72764,"line_start":136,"line_end":136,"column_start":5,"column_end":11},"name":"Sha384","qualname":"::schannel_cred::Algorithm::Sha384","value":"Algorithm::Sha384","parent":{"krate":0,"index":935},"children":[],"decl_id":null,"docs":" 384 bit SHA hashing algorithm.\n","sig":null,"attributes":[{"value":"/ 384 bit SHA hashing algorithm.","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\schannel-0.1.20\\src\\schannel_cred.rs","byte_start":72719,"byte_end":72753,"line_start":135,"line_end":135,"column_start":5,"column_end":39}}]},{"kind":"TupleVariant","id":{"krate":0,"index":1026},"span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\schannel-0.1.20\\src\\schannel_cred.rs","byte_start":72909,"byte_end":72915,"line_start":139,"line_end":139,"column_start":5,"column_end":11},"name":"Sha512","qualname":"::schannel_cred::Algorithm::Sha512","value":"Algorithm::Sha512","parent":{"krate":0,"index":935},"children":[],"decl_id":null,"docs":" 512 bit SHA hashing algorithm.\n","sig":null,"attributes":[{"value":"/ 512 bit SHA hashing algorithm.","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\schannel-0.1.20\\src\\schannel_cred.rs","byte_start":72870,"byte_end":72904,"line_start":138,"line_end":138,"column_start":5,"column_end":39}}]},{"kind":"TupleVariant","id":{"krate":0,"index":1029},"span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\schannel-0.1.20\\src\\schannel_cred.rs","byte_start":73062,"byte_end":73071,"line_start":142,"line_end":142,"column_start":5,"column_end":14},"name":"TripleDes","qualname":"::schannel_cred::Algorithm::TripleDes","value":"Algorithm::TripleDes","parent":{"krate":0,"index":935},"children":[],"decl_id":null,"docs":" Triple DES encryption algorithm.\n","sig":null,"attributes":[{"value":"/ Triple DES encryption algorithm.","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\schannel-0.1.20\\src\\schannel_cred.rs","byte_start":73021,"byte_end":73057,"line_start":141,"line_end":141,"column_start":5,"column_end":41}}]},{"kind":"TupleVariant","id":{"krate":0,"index":1032},"span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\schannel-0.1.20\\src\\schannel_cred.rs","byte_start":73275,"byte_end":73287,"line_start":146,"line_end":146,"column_start":5,"column_end":17},"name":"TripleDes112","qualname":"::schannel_cred::Algorithm::TripleDes112","value":"Algorithm::TripleDes112","parent":{"krate":0,"index":935},"children":[],"decl_id":null,"docs":" Two-key triple DES encryption with effective key length equal to 112 bits.\n","sig":null,"attributes":[{"value":"/ Two-key triple DES encryption with effective key length equal to 112 bits.","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\schannel-0.1.20\\src\\schannel_cred.rs","byte_start":73192,"byte_end":73270,"line_start":145,"line_end":145,"column_start":5,"column_end":83}}]},{"kind":"Enum","id":{"krate":0,"index":935},"span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\schannel-0.1.20\\src\\schannel_cred.rs","byte_start":67910,"byte_end":67919,"line_start":31,"line_end":31,"column_start":10,"column_end":19},"name":"Algorithm","qualname":"::schannel_cred::Algorithm","value":"pub enum Algorithm {\n    Aes = ,\n    Aes128 = ,\n    Aes192 = ,\n    Aes256 = ,\n    AgreedkeyAny = ,\n    CylinkMek = ,\n    Des = ,\n    Desx = ,\n    DhEphem = ,\n    DhSf = ,\n    DssSign = ,\n    Ecdh = ,\n    EcdhEphem = ,\n    Ecdsa = ,\n    HashReplaceOwf = ,\n    HughesMd5 = ,\n    Hmac = ,\n    Mac = ,\n    Md2 = ,\n    Md4 = ,\n    Md5 = ,\n    NoSign = ,\n    Rc2 = ,\n    Rc4 = ,\n    Rc5 = ,\n    RsaKeyx = ,\n    RsaSign = ,\n    Sha1 = ,\n    Sha256 = ,\n    Sha384 = ,\n    Sha512 = ,\n    TripleDes = ,\n    TripleDes112 = ,\n}","parent":null,"children":[{"krate":0,"index":936},{"krate":0,"index":939},{"krate":0,"index":942},{"krate":0,"index":945},{"krate":0,"index":948},{"krate":0,"index":951},{"krate":0,"index":954},{"krate":0,"index":957},{"krate":0,"index":960},{"krate":0,"index":963},{"krate":0,"index":966},{"krate":0,"index":969},{"krate":0,"index":972},{"krate":0,"index":975},{"krate":0,"index":978},{"krate":0,"index":981},{"krate":0,"index":984},{"krate":0,"index":987},{"krate":0,"index":990},{"krate":0,"index":993},{"krate":0,"index":996},{"krate":0,"index":999},{"krate":0,"index":1002},{"krate":0,"index":1005},{"krate":0,"index":1008},{"krate":0,"index":1011},{"krate":0,"index":1014},{"krate":0,"index":1017},{"krate":0,"index":1020},{"krate":0,"index":1023},{"krate":0,"index":1026},{"krate":0,"index":1029},{"krate":0,"index":1032}],"decl_id":null,"docs":" Algorithms supported by Schannel.\n","sig":null,"attributes":[{"value":"/ Algorithms supported by Schannel.","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\schannel-0.1.20\\src\\schannel_cred.rs","byte_start":67719,"byte_end":67756,"line_start":26,"line_end":26,"column_start":1,"column_end":38}},{"value":"repr(u32)","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\schannel-0.1.20\\src\\schannel_cred.rs","byte_start":67870,"byte_end":67882,"line_start":29,"line_end":29,"column_start":1,"column_end":13}},{"value":"non_exhaustive","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\schannel-0.1.20\\src\\schannel_cred.rs","byte_start":67883,"byte_end":67900,"line_start":30,"line_end":30,"column_start":1,"column_end":18}}]},{"kind":"TupleVariant","id":{"krate":0,"index":1041},"span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\schannel-0.1.20\\src\\schannel_cred.rs","byte_start":73553,"byte_end":73557,"line_start":156,"line_end":156,"column_start":5,"column_end":9},"name":"Ssl3","qualname":"::schannel_cred::Protocol::Ssl3","value":"Protocol::Ssl3","parent":{"krate":0,"index":1040},"children":[],"decl_id":null,"docs":" Secure Sockets Layer 3.0\n","sig":null,"attributes":[{"value":"/ Secure Sockets Layer 3.0","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\schannel-0.1.20\\src\\schannel_cred.rs","byte_start":73520,"byte_end":73548,"line_start":155,"line_end":155,"column_start":5,"column_end":33}}]},{"kind":"TupleVariant","id":{"krate":0,"index":1043},"span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\schannel-0.1.20\\src\\schannel_cred.rs","byte_start":73600,"byte_end":73605,"line_start":158,"line_end":158,"column_start":5,"column_end":10},"name":"Tls10","qualname":"::schannel_cred::Protocol::Tls10","value":"Protocol::Tls10","parent":{"krate":0,"index":1040},"children":[],"decl_id":null,"docs":" Transport Layer Security 1.0\n","sig":null,"attributes":[{"value":"/ Transport Layer Security 1.0","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\schannel-0.1.20\\src\\schannel_cred.rs","byte_start":73563,"byte_end":73595,"line_start":157,"line_end":157,"column_start":5,"column_end":37}}]},{"kind":"TupleVariant","id":{"krate":0,"index":1045},"span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\schannel-0.1.20\\src\\schannel_cred.rs","byte_start":73648,"byte_end":73653,"line_start":160,"line_end":160,"column_start":5,"column_end":10},"name":"Tls11","qualname":"::schannel_cred::Protocol::Tls11","value":"Protocol::Tls11","parent":{"krate":0,"index":1040},"children":[],"decl_id":null,"docs":" Transport Layer Security 1.1\n","sig":null,"attributes":[{"value":"/ Transport Layer Security 1.1","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\schannel-0.1.20\\src\\schannel_cred.rs","byte_start":73611,"byte_end":73643,"line_start":159,"line_end":159,"column_start":5,"column_end":37}}]},{"kind":"TupleVariant","id":{"krate":0,"index":1047},"span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\schannel-0.1.20\\src\\schannel_cred.rs","byte_start":73696,"byte_end":73701,"line_start":162,"line_end":162,"column_start":5,"column_end":10},"name":"Tls12","qualname":"::schannel_cred::Protocol::Tls12","value":"Protocol::Tls12","parent":{"krate":0,"index":1040},"children":[],"decl_id":null,"docs":" Transport Layer Security 1.2\n","sig":null,"attributes":[{"value":"/ Transport Layer Security 1.2","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\schannel-0.1.20\\src\\schannel_cred.rs","byte_start":73659,"byte_end":73691,"line_start":161,"line_end":161,"column_start":5,"column_end":37}}]},{"kind":"TupleVariant","id":{"krate":0,"index":1049},"span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\schannel-0.1.20\\src\\schannel_cred.rs","byte_start":73744,"byte_end":73749,"line_start":164,"line_end":164,"column_start":5,"column_end":10},"name":"Tls13","qualname":"::schannel_cred::Protocol::Tls13","value":"Protocol::Tls13","parent":{"krate":0,"index":1040},"children":[],"decl_id":null,"docs":" Transport Layer Security 1.3\n","sig":null,"attributes":[{"value":"/ Transport Layer Security 1.3","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\schannel-0.1.20\\src\\schannel_cred.rs","byte_start":73707,"byte_end":73739,"line_start":163,"line_end":163,"column_start":5,"column_end":37}}]},{"kind":"Enum","id":{"krate":0,"index":1040},"span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\schannel-0.1.20\\src\\schannel_cred.rs","byte_start":73505,"byte_end":73513,"line_start":154,"line_end":154,"column_start":10,"column_end":18},"name":"Protocol","qualname":"::schannel_cred::Protocol","value":"pub enum Protocol { Ssl3, Tls10, Tls11, Tls12, Tls13, }","parent":null,"children":[{"krate":0,"index":1041},{"krate":0,"index":1043},{"krate":0,"index":1045},{"krate":0,"index":1047},{"krate":0,"index":1049}],"decl_id":null,"docs":" Protocols supported by Schannel.\n","sig":null,"attributes":[{"value":"/ Protocols supported by Schannel.","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\schannel-0.1.20\\src\\schannel_cred.rs","byte_start":73411,"byte_end":73447,"line_start":151,"line_end":151,"column_start":1,"column_end":37}},{"value":"non_exhaustive","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\schannel-0.1.20\\src\\schannel_cred.rs","byte_start":73478,"byte_end":73495,"line_start":153,"line_end":153,"column_start":1,"column_end":18}}]},{"kind":"Struct","id":{"krate":0,"index":1056},"span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\schannel-0.1.20\\src\\schannel_cred.rs","byte_start":74809,"byte_end":74816,"line_start":186,"line_end":186,"column_start":12,"column_end":19},"name":"Builder","qualname":"::schannel_cred::Builder","value":"Builder {  }","parent":null,"children":[{"krate":0,"index":1057},{"krate":0,"index":1058},{"krate":0,"index":1059}],"decl_id":null,"docs":" A builder type for `SchannelCred`s.\n","sig":null,"attributes":[{"value":"/ A builder type for `SchannelCred`s.","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\schannel-0.1.20\\src\\schannel_cred.rs","byte_start":74732,"byte_end":74771,"line_start":184,"line_end":184,"column_start":1,"column_end":40}}]},{"kind":"Method","id":{"krate":0,"index":473},"span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\schannel-0.1.20\\src\\schannel_cred.rs","byte_start":75006,"byte_end":75009,"line_start":194,"line_end":194,"column_start":12,"column_end":15},"name":"new","qualname":"<Builder>::new","value":"pub fn new() -> Builder","parent":null,"children":[],"decl_id":null,"docs":" Returns a new `Builder`.\n","sig":null,"attributes":[{"value":"/ Returns a new `Builder`.","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\schannel-0.1.20\\src\\schannel_cred.rs","byte_start":74966,"byte_end":74994,"line_start":193,"line_end":193,"column_start":5,"column_end":33}}]},{"kind":"Method","id":{"krate":0,"index":474},"span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\schannel-0.1.20\\src\\schannel_cred.rs","byte_start":75151,"byte_end":75171,"line_start":199,"line_end":199,"column_start":12,"column_end":32},"name":"supported_algorithms","qualname":"<Builder>::supported_algorithms","value":"pub fn supported_algorithms(&mut Self, &[Algorithm]) -> &mut Builder","parent":null,"children":[],"decl_id":null,"docs":" Sets the algorithms supported for credentials created from this builder.\n","sig":null,"attributes":[{"value":"/ Sets the algorithms supported for credentials created from this builder.","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\schannel-0.1.20\\src\\schannel_cred.rs","byte_start":75063,"byte_end":75139,"line_start":198,"line_end":198,"column_start":5,"column_end":81}}]},{"kind":"Method","id":{"krate":0,"index":475},"span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\schannel-0.1.20\\src\\schannel_cred.rs","byte_start":75421,"byte_end":75438,"line_start":205,"line_end":205,"column_start":12,"column_end":29},"name":"enabled_protocols","qualname":"<Builder>::enabled_protocols","value":"pub fn enabled_protocols(&mut Self, &[Protocol]) -> &mut Builder","parent":null,"children":[],"decl_id":null,"docs":" Sets the protocols enabled for credentials created from this builder.\n","sig":null,"attributes":[{"value":"/ Sets the protocols enabled for credentials created from this builder.","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\schannel-0.1.20\\src\\schannel_cred.rs","byte_start":75336,"byte_end":75409,"line_start":204,"line_end":204,"column_start":5,"column_end":78}}]},{"kind":"Method","id":{"krate":0,"index":476},"span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\schannel-0.1.20\\src\\schannel_cred.rs","byte_start":76097,"byte_end":76101,"line_start":219,"line_end":219,"column_start":12,"column_end":16},"name":"cert","qualname":"<Builder>::cert","value":"pub fn cert(&mut Self, CertContext) -> &mut Builder","parent":null,"children":[],"decl_id":null,"docs":" Add a certificate to get passed down when the credentials are acquired.","sig":null,"attributes":[{"value":"/ Add a certificate to get passed down when the credentials are acquired.","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\schannel-0.1.20\\src\\schannel_cred.rs","byte_start":75593,"byte_end":75668,"line_start":210,"line_end":210,"column_start":5,"column_end":80}},{"value":"/","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\schannel-0.1.20\\src\\schannel_cred.rs","byte_start":75673,"byte_end":75676,"line_start":211,"line_end":211,"column_start":5,"column_end":8}},{"value":"/ Certificates passed here may specify a certificate that contains a","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\schannel-0.1.20\\src\\schannel_cred.rs","byte_start":75681,"byte_end":75751,"line_start":212,"line_end":212,"column_start":5,"column_end":75}},{"value":"/ private key to be used in authenticating the application. Typically,","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\schannel-0.1.20\\src\\schannel_cred.rs","byte_start":75756,"byte_end":75828,"line_start":213,"line_end":213,"column_start":5,"column_end":77}},{"value":"/ this is called once for each key exchange method supported by","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\schannel-0.1.20\\src\\schannel_cred.rs","byte_start":75833,"byte_end":75898,"line_start":214,"line_end":214,"column_start":5,"column_end":70}},{"value":"/ servers.","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\schannel-0.1.20\\src\\schannel_cred.rs","byte_start":75903,"byte_end":75915,"line_start":215,"line_end":215,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\schannel-0.1.20\\src\\schannel_cred.rs","byte_start":75920,"byte_end":75923,"line_start":216,"line_end":216,"column_start":5,"column_end":8}},{"value":"/ Clients often do not call this function and either depend on Schannel to","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\schannel-0.1.20\\src\\schannel_cred.rs","byte_start":75928,"byte_end":76004,"line_start":217,"line_end":217,"column_start":5,"column_end":81}},{"value":"/ find an appropriate certificate or create a certificate later if needed.","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\schannel-0.1.20\\src\\schannel_cred.rs","byte_start":76009,"byte_end":76085,"line_start":218,"line_end":218,"column_start":5,"column_end":81}}]},{"kind":"Method","id":{"krate":0,"index":477},"span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\schannel-0.1.20\\src\\schannel_cred.rs","byte_start":76246,"byte_end":76253,"line_start":225,"line_end":225,"column_start":12,"column_end":19},"name":"acquire","qualname":"<Builder>::acquire","value":"pub fn acquire(&Self, Direction) -> io::Result<SchannelCred>","parent":null,"children":[],"decl_id":null,"docs":" Creates a new `SchannelCred`.\n","sig":null,"attributes":[{"value":"/ Creates a new `SchannelCred`.","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\schannel-0.1.20\\src\\schannel_cred.rs","byte_start":76201,"byte_end":76234,"line_start":224,"line_end":224,"column_start":5,"column_end":38}}]},{"kind":"Struct","id":{"krate":0,"index":1064},"span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\schannel-0.1.20\\src\\schannel_cred.rs","byte_start":78195,"byte_end":78207,"line_start":271,"line_end":271,"column_start":12,"column_end":24},"name":"SchannelCred","qualname":"::schannel_cred::SchannelCred","value":"","parent":null,"children":[],"decl_id":null,"docs":" An SChannel credential.\n","sig":null,"attributes":[{"value":"/ An SChannel credential.","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\schannel-0.1.20\\src\\schannel_cred.rs","byte_start":78139,"byte_end":78166,"line_start":269,"line_end":269,"column_start":1,"column_end":28}}]},{"kind":"Method","id":{"krate":0,"index":487},"span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\schannel-0.1.20\\src\\schannel_cred.rs","byte_start":78480,"byte_end":78487,"line_start":285,"line_end":285,"column_start":12,"column_end":19},"name":"builder","qualname":"<SchannelCred>::builder","value":"pub fn builder() -> Builder","parent":null,"children":[],"decl_id":null,"docs":" Returns a builder.\n","sig":null,"attributes":[{"value":"/ Returns a builder.","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\schannel-0.1.20\\src\\schannel_cred.rs","byte_start":78446,"byte_end":78468,"line_start":284,"line_end":284,"column_start":5,"column_end":27}}]},{"kind":"Mod","id":{"krate":0,"index":490},"span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\schannel-0.1.20\\src\\tls_stream.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"tls_stream","qualname":"::tls_stream","value":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\schannel-0.1.20\\src\\tls_stream.rs","parent":null,"children":[{"krate":0,"index":491},{"krate":0,"index":494},{"krate":0,"index":497},{"krate":0,"index":500},{"krate":0,"index":503},{"krate":0,"index":504},{"krate":0,"index":507},{"krate":0,"index":510},{"krate":0,"index":513},{"krate":0,"index":516},{"krate":0,"index":519},{"krate":0,"index":522},{"krate":0,"index":525},{"krate":0,"index":528},{"krate":0,"index":531},{"krate":0,"index":534},{"krate":0,"index":537},{"krate":0,"index":540},{"krate":0,"index":543},{"krate":0,"index":544},{"krate":0,"index":547},{"krate":0,"index":548},{"krate":0,"index":550},{"krate":0,"index":553},{"krate":0,"index":554},{"krate":0,"index":557},{"krate":0,"index":560},{"krate":0,"index":561},{"krate":0,"index":563},{"krate":0,"index":566},{"krate":0,"index":569},{"krate":0,"index":570},{"krate":0,"index":573},{"krate":0,"index":576},{"krate":0,"index":579},{"krate":0,"index":582},{"krate":0,"index":1069},{"krate":0,"index":1071},{"krate":0,"index":1072},{"krate":0,"index":1077},{"krate":0,"index":1080},{"krate":0,"index":1082},{"krate":0,"index":1083},{"krate":0,"index":1088},{"krate":0,"index":1091},{"krate":0,"index":1093},{"krate":0,"index":1094},{"krate":0,"index":1099},{"krate":0,"index":585},{"krate":0,"index":592},{"krate":0,"index":594},{"krate":0,"index":611},{"krate":0,"index":621},{"krate":0,"index":640},{"krate":0,"index":1102},{"krate":0,"index":1110},{"krate":0,"index":643},{"krate":0,"index":648},{"krate":0,"index":652},{"krate":0,"index":655},{"krate":0,"index":1113},{"krate":0,"index":1116},{"krate":0,"index":658},{"krate":0,"index":661},{"krate":0,"index":666},{"krate":0,"index":686},{"krate":0,"index":690},{"krate":0,"index":693},{"krate":0,"index":697},{"krate":0,"index":700}],"decl_id":null,"docs":" Schannel TLS streams.\n","sig":null,"attributes":[{"value":"/ Schannel TLS streams.","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\schannel-0.1.20\\src\\tls_stream.rs","byte_start":78764,"byte_end":78789,"line_start":1,"line_end":1,"column_start":1,"column_end":26}}]},{"kind":"Struct","id":{"krate":0,"index":585},"span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\schannel-0.1.20\\src\\tls_stream.rs","byte_start":80003,"byte_end":80010,"line_start":41,"line_end":41,"column_start":12,"column_end":19},"name":"Builder","qualname":"::tls_stream::Builder","value":"Builder {  }","parent":null,"children":[{"krate":0,"index":586},{"krate":0,"index":587},{"krate":0,"index":588},{"krate":0,"index":589},{"krate":0,"index":590},{"krate":0,"index":591}],"decl_id":null,"docs":" A builder type for `TlsStream`s.\n","sig":null,"attributes":[{"value":"/ A builder type for `TlsStream`s.","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\schannel-0.1.20\\src\\tls_stream.rs","byte_start":79955,"byte_end":79991,"line_start":40,"line_end":40,"column_start":1,"column_end":37}}]},{"kind":"Method","id":{"krate":0,"index":595},"span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\schannel-0.1.20\\src\\tls_stream.rs","byte_start":80658,"byte_end":80661,"line_start":65,"line_end":65,"column_start":12,"column_end":15},"name":"new","qualname":"<Builder>::new","value":"pub fn new() -> Builder","parent":null,"children":[],"decl_id":null,"docs":" Returns a new `Builder`.\n","sig":null,"attributes":[{"value":"/ Returns a new `Builder`.","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\schannel-0.1.20\\src\\tls_stream.rs","byte_start":80618,"byte_end":80646,"line_start":64,"line_end":64,"column_start":5,"column_end":33}}]},{"kind":"Method","id":{"krate":0,"index":596},"span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\schannel-0.1.20\\src\\tls_stream.rs","byte_start":80913,"byte_end":80919,"line_start":73,"line_end":73,"column_start":12,"column_end":18},"name":"domain","qualname":"<Builder>::domain","value":"pub fn domain(&mut Self, &str) -> &mut Builder","parent":null,"children":[],"decl_id":null,"docs":" Sets the domain associated with connections created with this `Builder`.","sig":null,"attributes":[{"value":"/ Sets the domain associated with connections created with this `Builder`.","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\schannel-0.1.20\\src\\tls_stream.rs","byte_start":80715,"byte_end":80791,"line_start":69,"line_end":69,"column_start":5,"column_end":81}},{"value":"/","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\schannel-0.1.20\\src\\tls_stream.rs","byte_start":80796,"byte_end":80799,"line_start":70,"line_end":70,"column_start":5,"column_end":8}},{"value":"/ The domain will be used for Server Name Indication as well as","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\schannel-0.1.20\\src\\tls_stream.rs","byte_start":80804,"byte_end":80869,"line_start":71,"line_end":71,"column_start":5,"column_end":70}},{"value":"/ certificate validation.","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\schannel-0.1.20\\src\\tls_stream.rs","byte_start":80874,"byte_end":80901,"line_start":72,"line_end":72,"column_start":5,"column_end":32}}]},{"kind":"Method","id":{"krate":0,"index":597},"span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\schannel-0.1.20\\src\\tls_stream.rs","byte_start":81171,"byte_end":81178,"line_start":81,"line_end":81,"column_start":12,"column_end":19},"name":"use_sni","qualname":"<Builder>::use_sni","value":"pub fn use_sni(&mut Self, bool) -> &mut Builder","parent":null,"children":[],"decl_id":null,"docs":" Determines if Server Name Indication (SNI) will be used.","sig":null,"attributes":[{"value":"/ Determines if Server Name Indication (SNI) will be used.","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\schannel-0.1.20\\src\\tls_stream.rs","byte_start":81063,"byte_end":81123,"line_start":78,"line_end":78,"column_start":5,"column_end":65}},{"value":"/","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\schannel-0.1.20\\src\\tls_stream.rs","byte_start":81128,"byte_end":81131,"line_start":79,"line_end":79,"column_start":5,"column_end":8}},{"value":"/ Defaults to `true`.","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\schannel-0.1.20\\src\\tls_stream.rs","byte_start":81136,"byte_end":81159,"line_start":80,"line_end":80,"column_start":5,"column_end":28}}]},{"kind":"Method","id":{"krate":0,"index":598},"span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\schannel-0.1.20\\src\\tls_stream.rs","byte_start":81416,"byte_end":81440,"line_start":89,"line_end":89,"column_start":12,"column_end":36},"name":"accept_invalid_hostnames","qualname":"<Builder>::accept_invalid_hostnames","value":"pub fn accept_invalid_hostnames(&mut Self, bool) -> &mut Builder","parent":null,"children":[],"decl_id":null,"docs":" Determines if the server's hostname will be checked during certificate verification.","sig":null,"attributes":[{"value":"/ Determines if the server's hostname will be checked during certificate verification.","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\schannel-0.1.20\\src\\tls_stream.rs","byte_start":81279,"byte_end":81367,"line_start":86,"line_end":86,"column_start":5,"column_end":93}},{"value":"/","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\schannel-0.1.20\\src\\tls_stream.rs","byte_start":81372,"byte_end":81375,"line_start":87,"line_end":87,"column_start":5,"column_end":8}},{"value":"/ Defaults to `false`.","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\schannel-0.1.20\\src\\tls_stream.rs","byte_start":81380,"byte_end":81404,"line_start":88,"line_end":88,"column_start":5,"column_end":29}}]},{"kind":"Method","id":{"krate":0,"index":599},"span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\schannel-0.1.20\\src\\tls_stream.rs","byte_start":82057,"byte_end":82072,"line_start":100,"line_end":100,"column_start":12,"column_end":27},"name":"verify_callback","qualname":"<Builder>::verify_callback","value":"pub fn verify_callback<F>(&mut Self, F) -> &mut Builder where\nF: Fn(CertValidationResult) -> io::Result<()> + 'static + Sync + Send","parent":null,"children":[],"decl_id":null,"docs":" Set a verification callback to be used for connections created with this `Builder`.","sig":null,"attributes":[{"value":"/ Set a verification callback to be used for connections created with this `Builder`.","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\schannel-0.1.20\\src\\tls_stream.rs","byte_start":81592,"byte_end":81679,"line_start":94,"line_end":94,"column_start":5,"column_end":92}},{"value":"/","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\schannel-0.1.20\\src\\tls_stream.rs","byte_start":81684,"byte_end":81687,"line_start":95,"line_end":95,"column_start":5,"column_end":8}},{"value":"/ The callback is provided with an io::Result indicating if the (pre)validation was","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\schannel-0.1.20\\src\\tls_stream.rs","byte_start":81692,"byte_end":81777,"line_start":96,"line_end":96,"column_start":5,"column_end":90}},{"value":"/ successful. The Ok() variant indicates a successful validation while the Err() variant","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\schannel-0.1.20\\src\\tls_stream.rs","byte_start":81782,"byte_end":81872,"line_start":97,"line_end":97,"column_start":5,"column_end":95}},{"value":"/ contains the errorcode returned from the internal verification process.","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\schannel-0.1.20\\src\\tls_stream.rs","byte_start":81877,"byte_end":81952,"line_start":98,"line_end":98,"column_start":5,"column_end":80}},{"value":"/ The validated certificate, is accessible through the second argument of the closure.","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\schannel-0.1.20\\src\\tls_stream.rs","byte_start":81957,"byte_end":82045,"line_start":99,"line_end":99,"column_start":5,"column_end":93}}]},{"kind":"Method","id":{"krate":0,"index":601},"span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\schannel-0.1.20\\src\\tls_stream.rs","byte_start":82691,"byte_end":82701,"line_start":117,"line_end":117,"column_start":12,"column_end":22},"name":"cert_store","qualname":"<Builder>::cert_store","value":"pub fn cert_store(&mut Self, CertStore) -> &mut Builder","parent":null,"children":[],"decl_id":null,"docs":" Specifies a custom certificate store which is later used when validating\n a server's certificate.","sig":null,"attributes":[{"value":"/ Specifies a custom certificate store which is later used when validating","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\schannel-0.1.20\\src\\tls_stream.rs","byte_start":82292,"byte_end":82368,"line_start":108,"line_end":108,"column_start":5,"column_end":81}},{"value":"/ a server's certificate.","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\schannel-0.1.20\\src\\tls_stream.rs","byte_start":82373,"byte_end":82400,"line_start":109,"line_end":109,"column_start":5,"column_end":32}},{"value":"/","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\schannel-0.1.20\\src\\tls_stream.rs","byte_start":82405,"byte_end":82408,"line_start":110,"line_end":110,"column_start":5,"column_end":8}},{"value":"/ This option is only used for client connections and is used to construct","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\schannel-0.1.20\\src\\tls_stream.rs","byte_start":82413,"byte_end":82489,"line_start":111,"line_end":111,"column_start":5,"column_end":81}},{"value":"/ the certificate chain which the server's certificate is validated","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\schannel-0.1.20\\src\\tls_stream.rs","byte_start":82494,"byte_end":82563,"line_start":112,"line_end":112,"column_start":5,"column_end":74}},{"value":"/ against.","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\schannel-0.1.20\\src\\tls_stream.rs","byte_start":82568,"byte_end":82580,"line_start":113,"line_end":113,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\schannel-0.1.20\\src\\tls_stream.rs","byte_start":82585,"byte_end":82588,"line_start":114,"line_end":114,"column_start":5,"column_end":8}},{"value":"/ Note that adding certificates here means that they are","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\schannel-0.1.20\\src\\tls_stream.rs","byte_start":82593,"byte_end":82651,"line_start":115,"line_end":115,"column_start":5,"column_end":63}},{"value":"/ implicitly trusted.","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\schannel-0.1.20\\src\\tls_stream.rs","byte_start":82656,"byte_end":82679,"line_start":116,"line_end":116,"column_start":5,"column_end":28}}]},{"kind":"Method","id":{"krate":0,"index":602},"span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\schannel-0.1.20\\src\\tls_stream.rs","byte_start":82895,"byte_end":82924,"line_start":123,"line_end":123,"column_start":12,"column_end":41},"name":"request_application_protocols","qualname":"<Builder>::request_application_protocols","value":"pub fn request_application_protocols(&mut Self, &[&[u8]]) -> &mut Builder","parent":null,"children":[],"decl_id":null,"docs":" Requests one of a set of application protocols using alpn\n","sig":null,"attributes":[{"value":"/ Requests one of a set of application protocols using alpn","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\schannel-0.1.20\\src\\tls_stream.rs","byte_start":82822,"byte_end":82883,"line_start":122,"line_end":122,"column_start":5,"column_end":66}}]},{"kind":"Method","id":{"krate":0,"index":604},"span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\schannel-0.1.20\\src\\tls_stream.rs","byte_start":83605,"byte_end":83612,"line_start":137,"line_end":137,"column_start":12,"column_end":19},"name":"connect","qualname":"<Builder>::connect","value":"pub fn connect<S>(&mut Self, SchannelCred, S)\n-> Result<TlsStream<S>, HandshakeError<S>> where S: Read + Write","parent":null,"children":[],"decl_id":null,"docs":" Initialize a new TLS session where the stream provided will be\n connecting to a remote TLS server.","sig":null,"attributes":[{"value":"/ Initialize a new TLS session where the stream provided will be","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\schannel-0.1.20\\src\\tls_stream.rs","byte_start":83122,"byte_end":83188,"line_start":129,"line_end":129,"column_start":5,"column_end":71}},{"value":"/ connecting to a remote TLS server.","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\schannel-0.1.20\\src\\tls_stream.rs","byte_start":83193,"byte_end":83231,"line_start":130,"line_end":130,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\schannel-0.1.20\\src\\tls_stream.rs","byte_start":83236,"byte_end":83239,"line_start":131,"line_end":131,"column_start":5,"column_end":8}},{"value":"/ If the stream provided is a blocking stream then the entire handshake","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\schannel-0.1.20\\src\\tls_stream.rs","byte_start":83244,"byte_end":83317,"line_start":132,"line_end":132,"column_start":5,"column_end":78}},{"value":"/ will be performed if possible, but if the stream is in nonblocking mode","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\schannel-0.1.20\\src\\tls_stream.rs","byte_start":83322,"byte_end":83397,"line_start":133,"line_end":133,"column_start":5,"column_end":80}},{"value":"/ then a `HandshakeError::Interrupted` variant may be returned. This","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\schannel-0.1.20\\src\\tls_stream.rs","byte_start":83402,"byte_end":83472,"line_start":134,"line_end":134,"column_start":5,"column_end":75}},{"value":"/ type can then be extracted to later call","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\schannel-0.1.20\\src\\tls_stream.rs","byte_start":83477,"byte_end":83521,"line_start":135,"line_end":135,"column_start":5,"column_end":49}},{"value":"/ `MidHandshakeTlsStream::handshake` when data becomes available.","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\schannel-0.1.20\\src\\tls_stream.rs","byte_start":83526,"byte_end":83593,"line_start":136,"line_end":136,"column_start":5,"column_end":72}}]},{"kind":"Method","id":{"krate":0,"index":606},"span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\schannel-0.1.20\\src\\tls_stream.rs","byte_start":84461,"byte_end":84467,"line_start":159,"line_end":159,"column_start":12,"column_end":18},"name":"accept","qualname":"<Builder>::accept","value":"pub fn accept<S>(&mut Self, SchannelCred, S)\n-> Result<TlsStream<S>, HandshakeError<S>> where S: Read + Write","parent":null,"children":[],"decl_id":null,"docs":" Initialize a new TLS session where the stream provided will be\n accepting a connection.","sig":null,"attributes":[{"value":"/ Initialize a new TLS session where the stream provided will be","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\schannel-0.1.20\\src\\tls_stream.rs","byte_start":83829,"byte_end":83895,"line_start":148,"line_end":148,"column_start":5,"column_end":71}},{"value":"/ accepting a connection.","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\schannel-0.1.20\\src\\tls_stream.rs","byte_start":83900,"byte_end":83927,"line_start":149,"line_end":149,"column_start":5,"column_end":32}},{"value":"/","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\schannel-0.1.20\\src\\tls_stream.rs","byte_start":83932,"byte_end":83935,"line_start":150,"line_end":150,"column_start":5,"column_end":8}},{"value":"/ This method will tweak the protocol for \"who talks first\" and also","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\schannel-0.1.20\\src\\tls_stream.rs","byte_start":83940,"byte_end":84010,"line_start":151,"line_end":151,"column_start":5,"column_end":75}},{"value":"/ currently disables validation of the client that's connecting to us.","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\schannel-0.1.20\\src\\tls_stream.rs","byte_start":84015,"byte_end":84087,"line_start":152,"line_end":152,"column_start":5,"column_end":77}},{"value":"/","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\schannel-0.1.20\\src\\tls_stream.rs","byte_start":84092,"byte_end":84095,"line_start":153,"line_end":153,"column_start":5,"column_end":8}},{"value":"/ If the stream provided is a blocking stream then the entire handshake","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\schannel-0.1.20\\src\\tls_stream.rs","byte_start":84100,"byte_end":84173,"line_start":154,"line_end":154,"column_start":5,"column_end":78}},{"value":"/ will be performed if possible, but if the stream is in nonblocking mode","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\schannel-0.1.20\\src\\tls_stream.rs","byte_start":84178,"byte_end":84253,"line_start":155,"line_end":155,"column_start":5,"column_end":80}},{"value":"/ then a `HandshakeError::Interrupted` variant may be returned. This","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\schannel-0.1.20\\src\\tls_stream.rs","byte_start":84258,"byte_end":84328,"line_start":156,"line_end":156,"column_start":5,"column_end":75}},{"value":"/ type can then be extracted to later call","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\schannel-0.1.20\\src\\tls_stream.rs","byte_start":84333,"byte_end":84377,"line_start":157,"line_end":157,"column_start":5,"column_end":49}},{"value":"/ `MidHandshakeTlsStream::handshake` when data becomes available.","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\schannel-0.1.20\\src\\tls_stream.rs","byte_start":84382,"byte_end":84449,"line_start":158,"line_end":158,"column_start":5,"column_end":72}}]},{"kind":"Struct","id":{"krate":0,"index":621},"span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\schannel-0.1.20\\src\\tls_stream.rs","byte_start":86600,"byte_end":86609,"line_start":236,"line_end":236,"column_start":12,"column_end":21},"name":"TlsStream","qualname":"::tls_stream::TlsStream","value":"TlsStream {  }","parent":null,"children":[{"krate":0,"index":623},{"krate":0,"index":624},{"krate":0,"index":625},{"krate":0,"index":626},{"krate":0,"index":627},{"krate":0,"index":628},{"krate":0,"index":629},{"krate":0,"index":630},{"krate":0,"index":631},{"krate":0,"index":632},{"krate":0,"index":633},{"krate":0,"index":634},{"krate":0,"index":635},{"krate":0,"index":636},{"krate":0,"index":637},{"krate":0,"index":638},{"krate":0,"index":639}],"decl_id":null,"docs":" An Schannel TLS stream.\n","sig":null,"attributes":[{"value":"/ An Schannel TLS stream.","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\schannel-0.1.20\\src\\tls_stream.rs","byte_start":86561,"byte_end":86588,"line_start":235,"line_end":235,"column_start":1,"column_end":28}}]},{"kind":"TupleVariant","id":{"krate":0,"index":1104},"span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\schannel-0.1.20\\src\\tls_stream.rs","byte_start":87722,"byte_end":87729,"line_start":271,"line_end":271,"column_start":5,"column_end":12},"name":"Failure","qualname":"::tls_stream::HandshakeError::Failure","value":"HandshakeError::Failure(io::Error)","parent":{"krate":0,"index":1102},"children":[],"decl_id":null,"docs":" A fatal I/O error occurred\n","sig":null,"attributes":[{"value":"/ A fatal I/O error occurred","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\schannel-0.1.20\\src\\tls_stream.rs","byte_start":87687,"byte_end":87717,"line_start":270,"line_end":270,"column_start":5,"column_end":35}}]},{"kind":"TupleVariant","id":{"krate":0,"index":1107},"span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\schannel-0.1.20\\src\\tls_stream.rs","byte_start":87840,"byte_end":87851,"line_start":274,"line_end":274,"column_start":5,"column_end":16},"name":"Interrupted","qualname":"::tls_stream::HandshakeError::Interrupted","value":"HandshakeError::Interrupted(MidHandshakeTlsStream<S>)","parent":{"krate":0,"index":1102},"children":[],"decl_id":null,"docs":" The stream connection is in progress, but the handshake is not completed\n yet.\n","sig":null,"attributes":[{"value":"/ The stream connection is in progress, but the handshake is not completed","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\schannel-0.1.20\\src\\tls_stream.rs","byte_start":87746,"byte_end":87822,"line_start":272,"line_end":272,"column_start":5,"column_end":81}},{"value":"/ yet.","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\schannel-0.1.20\\src\\tls_stream.rs","byte_start":87827,"byte_end":87835,"line_start":273,"line_end":273,"column_start":5,"column_end":13}}]},{"kind":"Enum","id":{"krate":0,"index":1102},"span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\schannel-0.1.20\\src\\tls_stream.rs","byte_start":87663,"byte_end":87677,"line_start":269,"line_end":269,"column_start":10,"column_end":24},"name":"HandshakeError","qualname":"::tls_stream::HandshakeError","value":"pub enum HandshakeError<S> {\n    Failure(io::Error),\n    Interrupted(MidHandshakeTlsStream<S>),\n}","parent":null,"children":[{"krate":0,"index":1104},{"krate":0,"index":1107}],"decl_id":null,"docs":" A failure which can happen during the `Builder::initialize` phase, either an\n I/O error or an intermediate stream which has not completed its handshake.\n","sig":null,"attributes":[{"value":"/ A failure which can happen during the `Builder::initialize` phase, either an","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\schannel-0.1.20\\src\\tls_stream.rs","byte_start":87477,"byte_end":87557,"line_start":266,"line_end":266,"column_start":1,"column_end":81}},{"value":"/ I/O error or an intermediate stream which has not completed its handshake.","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\schannel-0.1.20\\src\\tls_stream.rs","byte_start":87558,"byte_end":87636,"line_start":267,"line_end":267,"column_start":1,"column_end":79}}]},{"kind":"Struct","id":{"krate":0,"index":643},"span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\schannel-0.1.20\\src\\tls_stream.rs","byte_start":87982,"byte_end":88002,"line_start":278,"line_end":278,"column_start":12,"column_end":32},"name":"CertValidationResult","qualname":"::tls_stream::CertValidationResult","value":"CertValidationResult {  }","parent":null,"children":[{"krate":0,"index":644},{"krate":0,"index":645},{"krate":0,"index":646},{"krate":0,"index":647}],"decl_id":null,"docs":" A struct used to wrap various cert chain validation results for callback processing.\n","sig":null,"attributes":[{"value":"/ A struct used to wrap various cert chain validation results for callback processing.","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\schannel-0.1.20\\src\\tls_stream.rs","byte_start":87882,"byte_end":87970,"line_start":277,"line_end":277,"column_start":1,"column_end":89}}]},{"kind":"Method","id":{"krate":0,"index":649},"span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\schannel-0.1.20\\src\\tls_stream.rs","byte_start":88205,"byte_end":88223,"line_start":287,"line_end":287,"column_start":12,"column_end":30},"name":"failed_certificate","qualname":"<CertValidationResult>::failed_certificate","value":"pub fn failed_certificate(&Self) -> Option<CertContext>","parent":null,"children":[],"decl_id":null,"docs":" Returns the certificate that failed validation if applicable\n","sig":null,"attributes":[{"value":"/ Returns the certificate that failed validation if applicable","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\schannel-0.1.20\\src\\tls_stream.rs","byte_start":88129,"byte_end":88193,"line_start":286,"line_end":286,"column_start":5,"column_end":69}}]},{"kind":"Method","id":{"krate":0,"index":650},"span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\schannel-0.1.20\\src\\tls_stream.rs","byte_start":88530,"byte_end":88535,"line_start":295,"line_end":295,"column_start":12,"column_end":17},"name":"chain","qualname":"<CertValidationResult>::chain","value":"pub fn chain(&Self) -> Option<CertChain>","parent":null,"children":[],"decl_id":null,"docs":" Returns the final certificate chain in the certificate context if applicable\n","sig":null,"attributes":[{"value":"/ Returns the final certificate chain in the certificate context if applicable","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\schannel-0.1.20\\src\\tls_stream.rs","byte_start":88438,"byte_end":88518,"line_start":294,"line_end":294,"column_start":5,"column_end":85}}]},{"kind":"Method","id":{"krate":0,"index":651},"span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\schannel-0.1.20\\src\\tls_stream.rs","byte_start":88694,"byte_end":88700,"line_start":300,"line_end":300,"column_start":12,"column_end":18},"name":"result","qualname":"<CertValidationResult>::result","value":"pub fn result(&Self) -> io::Result<()>","parent":null,"children":[],"decl_id":null,"docs":" Returns the result of the built-in certificate verification process.\n","sig":null,"attributes":[{"value":"/ Returns the result of the built-in certificate verification process.","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\schannel-0.1.20\\src\\tls_stream.rs","byte_start":88610,"byte_end":88682,"line_start":299,"line_end":299,"column_start":5,"column_end":77}}]},{"kind":"Struct","id":{"krate":0,"index":1113},"span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\schannel-0.1.20\\src\\tls_stream.rs","byte_start":89705,"byte_end":89726,"line_start":334,"line_end":334,"column_start":12,"column_end":33},"name":"MidHandshakeTlsStream","qualname":"::tls_stream::MidHandshakeTlsStream","value":"MidHandshakeTlsStream {  }","parent":null,"children":[{"krate":0,"index":1115}],"decl_id":null,"docs":" A stream which has not yet completed its handshake.\n","sig":null,"attributes":[{"value":"/ A stream which has not yet completed its handshake.","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\schannel-0.1.20\\src\\tls_stream.rs","byte_start":89621,"byte_end":89676,"line_start":332,"line_end":332,"column_start":1,"column_end":56}}]},{"kind":"Method","id":{"krate":0,"index":663},"span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\schannel-0.1.20\\src\\tls_stream.rs","byte_start":90081,"byte_end":90088,"line_start":351,"line_end":351,"column_start":12,"column_end":19},"name":"get_ref","qualname":"<TlsStream<S>>::get_ref","value":"pub fn get_ref(&Self) -> &S","parent":null,"children":[],"decl_id":null,"docs":" Returns a reference to the wrapped stream.\n","sig":null,"attributes":[{"value":"/ Returns a reference to the wrapped stream.","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\schannel-0.1.20\\src\\tls_stream.rs","byte_start":90023,"byte_end":90069,"line_start":350,"line_end":350,"column_start":5,"column_end":51}}]},{"kind":"Method","id":{"krate":0,"index":664},"span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\schannel-0.1.20\\src\\tls_stream.rs","byte_start":90202,"byte_end":90209,"line_start":356,"line_end":356,"column_start":12,"column_end":19},"name":"get_mut","qualname":"<TlsStream<S>>::get_mut","value":"pub fn get_mut(&mut Self) -> &mut S","parent":null,"children":[],"decl_id":null,"docs":" Returns a mutable reference to the wrapped stream.\n","sig":null,"attributes":[{"value":"/ Returns a mutable reference to the wrapped stream.","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\schannel-0.1.20\\src\\tls_stream.rs","byte_start":90136,"byte_end":90190,"line_start":355,"line_end":355,"column_start":5,"column_end":59}}]},{"kind":"Method","id":{"krate":0,"index":665},"span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\schannel-0.1.20\\src\\tls_stream.rs","byte_start":90357,"byte_end":90366,"line_start":361,"line_end":361,"column_start":12,"column_end":21},"name":"is_server","qualname":"<TlsStream<S>>::is_server","value":"pub fn is_server(&Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Indicates if this stream is the server- or client-side of a TLS session.\n","sig":null,"attributes":[{"value":"/ Indicates if this stream is the server- or client-side of a TLS session.","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\schannel-0.1.20\\src\\tls_stream.rs","byte_start":90269,"byte_end":90345,"line_start":360,"line_end":360,"column_start":5,"column_end":81}}]},{"kind":"Method","id":{"krate":0,"index":668},"span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\schannel-0.1.20\\src\\tls_stream.rs","byte_start":90668,"byte_end":90679,"line_start":374,"line_end":374,"column_start":12,"column_end":23},"name":"certificate","qualname":"<TlsStream<S>>::certificate","value":"pub fn certificate(&Self) -> io::Result<CertContext>","parent":null,"children":[],"decl_id":null,"docs":" Returns the certificate used to identify this side of the TLS session.","sig":null,"attributes":[{"value":"/ Returns the certificate used to identify this side of the TLS session.","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\schannel-0.1.20\\src\\tls_stream.rs","byte_start":90467,"byte_end":90541,"line_start":370,"line_end":370,"column_start":5,"column_end":79}},{"value":"/","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\schannel-0.1.20\\src\\tls_stream.rs","byte_start":90546,"byte_end":90549,"line_start":371,"line_end":371,"column_start":5,"column_end":8}},{"value":"/ Its associated cert store contains any intermediate certificates sent","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\schannel-0.1.20\\src\\tls_stream.rs","byte_start":90554,"byte_end":90627,"line_start":372,"line_end":372,"column_start":5,"column_end":78}},{"value":"/ along with the leaf.","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\schannel-0.1.20\\src\\tls_stream.rs","byte_start":90632,"byte_end":90656,"line_start":373,"line_end":373,"column_start":5,"column_end":29}}]},{"kind":"Method","id":{"krate":0,"index":669},"span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\schannel-0.1.20\\src\\tls_stream.rs","byte_start":90931,"byte_end":90947,"line_start":382,"line_end":382,"column_start":12,"column_end":28},"name":"peer_certificate","qualname":"<TlsStream<S>>::peer_certificate","value":"pub fn peer_certificate(&Self) -> io::Result<CertContext>","parent":null,"children":[],"decl_id":null,"docs":" Returns the peer's certificate, if available.","sig":null,"attributes":[{"value":"/ Returns the peer's certificate, if available.","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\schannel-0.1.20\\src\\tls_stream.rs","byte_start":90761,"byte_end":90810,"line_start":378,"line_end":378,"column_start":5,"column_end":54}},{"value":"/","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\schannel-0.1.20\\src\\tls_stream.rs","byte_start":90815,"byte_end":90818,"line_start":379,"line_end":379,"column_start":5,"column_end":8}},{"value":"/ Its associated cert store contains any intermediate certificates sent","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\schannel-0.1.20\\src\\tls_stream.rs","byte_start":90823,"byte_end":90896,"line_start":380,"line_end":380,"column_start":5,"column_end":78}},{"value":"/ by the server.","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\schannel-0.1.20\\src\\tls_stream.rs","byte_start":90901,"byte_end":90919,"line_start":381,"line_end":381,"column_start":5,"column_end":23}}]},{"kind":"Method","id":{"krate":0,"index":670},"span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\schannel-0.1.20\\src\\tls_stream.rs","byte_start":91124,"byte_end":91155,"line_start":387,"line_end":387,"column_start":12,"column_end":43},"name":"negotiated_application_protocol","qualname":"<TlsStream<S>>::negotiated_application_protocol","value":"pub fn negotiated_application_protocol(&Self) -> io::Result<Option<Vec<u8>>>","parent":null,"children":[],"decl_id":null,"docs":" Returns the negotiated application protocol for this tls stream, if one exists\n","sig":null,"attributes":[{"value":"/ Returns the negotiated application protocol for this tls stream, if one exists","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\schannel-0.1.20\\src\\tls_stream.rs","byte_start":91030,"byte_end":91112,"line_start":386,"line_end":386,"column_start":5,"column_end":87}}]},{"kind":"Method","id":{"krate":0,"index":671},"span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\schannel-0.1.20\\src\\tls_stream.rs","byte_start":91695,"byte_end":91710,"line_start":400,"line_end":400,"column_start":12,"column_end":27},"name":"session_resumed","qualname":"<TlsStream<S>>::session_resumed","value":"pub fn session_resumed(&Self) -> io::Result<bool>","parent":null,"children":[],"decl_id":null,"docs":" Returns whether or not the session was resumed.\n","sig":null,"attributes":[{"value":"/ Returns whether or not the session was resumed.","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\schannel-0.1.20\\src\\tls_stream.rs","byte_start":91632,"byte_end":91683,"line_start":399,"line_end":399,"column_start":5,"column_end":56}}]},{"kind":"Method","id":{"krate":0,"index":672},"span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\schannel-0.1.20\\src\\tls_stream.rs","byte_start":92118,"byte_end":92125,"line_start":410,"line_end":410,"column_start":12,"column_end":19},"name":"get_buf","qualname":"<TlsStream<S>>::get_buf","value":"pub fn get_buf(&Self) -> &[u8]","parent":null,"children":[],"decl_id":null,"docs":" Returns a reference to the buffer of pending data.","sig":null,"attributes":[{"value":"/ Returns a reference to the buffer of pending data.","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\schannel-0.1.20\\src\\tls_stream.rs","byte_start":91879,"byte_end":91933,"line_start":405,"line_end":405,"column_start":5,"column_end":59}},{"value":"/","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\schannel-0.1.20\\src\\tls_stream.rs","byte_start":91938,"byte_end":91941,"line_start":406,"line_end":406,"column_start":5,"column_end":8}},{"value":"/ Like `BufRead::fill_buf` except that it will return an empty slice","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\schannel-0.1.20\\src\\tls_stream.rs","byte_start":91946,"byte_end":92016,"line_start":407,"line_end":407,"column_start":5,"column_end":75}},{"value":"/ rather than reading from the wrapped stream if there is no buffered","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\schannel-0.1.20\\src\\tls_stream.rs","byte_start":92021,"byte_end":92092,"line_start":408,"line_end":408,"column_start":5,"column_end":76}},{"value":"/ data.","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\schannel-0.1.20\\src\\tls_stream.rs","byte_start":92097,"byte_end":92106,"line_start":409,"line_end":409,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":673},"span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\schannel-0.1.20\\src\\tls_stream.rs","byte_start":92264,"byte_end":92272,"line_start":415,"line_end":415,"column_start":12,"column_end":20},"name":"shutdown","qualname":"<TlsStream<S>>::shutdown","value":"pub fn shutdown(&mut Self) -> io::Result<()>","parent":null,"children":[],"decl_id":null,"docs":" Shuts the TLS session down.\n","sig":null,"attributes":[{"value":"/ Shuts the TLS session down.","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\schannel-0.1.20\\src\\tls_stream.rs","byte_start":92221,"byte_end":92252,"line_start":414,"line_end":414,"column_start":5,"column_end":36}}]},{"kind":"Method","id":{"krate":0,"index":688},"span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\schannel-0.1.20\\src\\tls_stream.rs","byte_start":113419,"byte_end":113426,"line_start":956,"line_end":956,"column_start":12,"column_end":19},"name":"get_ref","qualname":"<MidHandshakeTlsStream<S>>::get_ref","value":"pub fn get_ref(&Self) -> &S","parent":null,"children":[],"decl_id":null,"docs":" Returns a shared reference to the inner stream.\n","sig":null,"attributes":[{"value":"/ Returns a shared reference to the inner stream.","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\schannel-0.1.20\\src\\tls_stream.rs","byte_start":113356,"byte_end":113407,"line_start":955,"line_end":955,"column_start":5,"column_end":56}}]},{"kind":"Method","id":{"krate":0,"index":689},"span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\schannel-0.1.20\\src\\tls_stream.rs","byte_start":113546,"byte_end":113553,"line_start":961,"line_end":961,"column_start":12,"column_end":19},"name":"get_mut","qualname":"<MidHandshakeTlsStream<S>>::get_mut","value":"pub fn get_mut(&mut Self) -> &mut S","parent":null,"children":[],"decl_id":null,"docs":" Returns a mutable reference to the inner stream.\n","sig":null,"attributes":[{"value":"/ Returns a mutable reference to the inner stream.","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\schannel-0.1.20\\src\\tls_stream.rs","byte_start":113482,"byte_end":113534,"line_start":960,"line_end":960,"column_start":5,"column_end":57}}]},{"kind":"Method","id":{"krate":0,"index":692},"span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\schannel-0.1.20\\src\\tls_stream.rs","byte_start":113728,"byte_end":113737,"line_start":971,"line_end":971,"column_start":12,"column_end":21},"name":"handshake","qualname":"<MidHandshakeTlsStream<S>>::handshake","value":"pub fn handshake(Self) -> Result<TlsStream<S>, HandshakeError<S>>","parent":null,"children":[],"decl_id":null,"docs":" Restarts the handshake process.\n","sig":null,"attributes":[{"value":"/ Restarts the handshake process.","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\schannel-0.1.20\\src\\tls_stream.rs","byte_start":113681,"byte_end":113716,"line_start":970,"line_end":970,"column_start":5,"column_end":40}}]}],"impls":[{"id":2,"kind":"Direct","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\schannel-0.1.20\\src\\cert_chain.rs","byte_start":3512,"byte_end":3528,"line_start":15,"line_end":15,"column_start":22,"column_end":38},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":3,"kind":"Direct","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\schannel-0.1.20\\src\\cert_chain.rs","byte_start":3553,"byte_end":3569,"line_start":16,"line_end":16,"column_start":22,"column_end":38},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":4,"kind":"Direct","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\schannel-0.1.20\\src\\cert_chain.rs","byte_start":3589,"byte_end":3605,"line_start":18,"line_end":18,"column_start":16,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":39}],"docs":"","sig":null,"attributes":[]},{"id":5,"kind":"Direct","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\schannel-0.1.20\\src\\cert_chain.rs","byte_start":3775,"byte_end":3791,"line_start":25,"line_end":25,"column_start":15,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":41}],"docs":"","sig":null,"attributes":[]},{"id":6,"kind":"Inherent","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\schannel-0.1.20\\src\\cert_chain.rs","byte_start":3920,"byte_end":3936,"line_start":33,"line_end":33,"column_start":6,"column_end":22},"value":"","parent":null,"children":[{"krate":0,"index":43},{"krate":0,"index":44},{"krate":0,"index":45}],"docs":"","sig":null,"attributes":[]},{"id":7,"kind":"Inherent","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\schannel-0.1.20\\src\\cert_chain.rs","byte_start":5232,"byte_end":5241,"line_start":72,"line_end":72,"column_start":6,"column_end":15},"value":"","parent":null,"children":[{"krate":0,"index":51},{"krate":0,"index":52},{"krate":0,"index":53},{"krate":0,"index":55}],"docs":"","sig":null,"attributes":[]},{"id":8,"kind":"Direct","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\schannel-0.1.20\\src\\cert_chain.rs","byte_start":6504,"byte_end":6521,"line_start":115,"line_end":115,"column_start":23,"column_end":40},"value":"","parent":null,"children":[{"krate":0,"index":62},{"krate":0,"index":63}],"docs":"","sig":null,"attributes":[]},{"id":9,"kind":"Direct","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\schannel-0.1.20\\src\\cert_chain.rs","byte_start":6858,"byte_end":6870,"line_start":131,"line_end":131,"column_start":23,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":70},{"krate":0,"index":71}],"docs":"","sig":null,"attributes":[]},{"id":10,"kind":"Inherent","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\schannel-0.1.20\\src\\cert_context.rs","byte_start":7546,"byte_end":7559,"line_start":22,"line_end":22,"column_start":6,"column_end":19},"value":"","parent":null,"children":[{"krate":0,"index":123},{"krate":0,"index":124},{"krate":0,"index":125},{"krate":0,"index":126},{"krate":0,"index":127}],"docs":"","sig":null,"attributes":[]},{"id":11,"kind":"Direct","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\schannel-0.1.20\\src\\cert_context.rs","byte_start":8796,"byte_end":8807,"line_start":69,"line_end":69,"column_start":22,"column_end":33},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":12,"kind":"Direct","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\schannel-0.1.20\\src\\cert_context.rs","byte_start":8832,"byte_end":8843,"line_start":70,"line_end":70,"column_start":22,"column_end":33},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":13,"kind":"Direct","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\schannel-0.1.20\\src\\cert_context.rs","byte_start":8862,"byte_end":8873,"line_start":72,"line_end":72,"column_start":15,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":131}],"docs":"","sig":null,"attributes":[]},{"id":14,"kind":"Direct","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\schannel-0.1.20\\src\\cert_context.rs","byte_start":9014,"byte_end":9025,"line_start":80,"line_end":80,"column_start":16,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":133}],"docs":"","sig":null,"attributes":[]},{"id":17,"kind":"Inherent","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\schannel-0.1.20\\src\\cert_context.rs","byte_start":9222,"byte_end":9233,"line_start":88,"line_end":88,"column_start":6,"column_end":17},"value":"","parent":null,"children":[{"krate":0,"index":135},{"krate":0,"index":136},{"krate":0,"index":137},{"krate":0,"index":138},{"krate":0,"index":139},{"krate":0,"index":140},{"krate":0,"index":141},{"krate":0,"index":144},{"krate":0,"index":145},{"krate":0,"index":146},{"krate":0,"index":147},{"krate":0,"index":148},{"krate":0,"index":149},{"krate":0,"index":150},{"krate":0,"index":151},{"krate":0,"index":152},{"krate":0,"index":153},{"krate":0,"index":154},{"krate":0,"index":155},{"krate":0,"index":156},{"krate":0,"index":157},{"krate":0,"index":158}],"docs":"","sig":null,"attributes":[]},{"id":18,"kind":"Direct","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\schannel-0.1.20\\src\\cert_context.rs","byte_start":22209,"byte_end":22220,"line_start":476,"line_end":476,"column_start":20,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":160}],"docs":"","sig":null,"attributes":[]},{"id":19,"kind":"Inherent","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\schannel-0.1.20\\src\\cert_context.rs","byte_start":22494,"byte_end":22518,"line_start":488,"line_end":488,"column_start":10,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":167},{"krate":0,"index":168},{"krate":0,"index":169},{"krate":0,"index":170}],"docs":"","sig":null,"attributes":[]},{"id":20,"kind":"Inherent","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\schannel-0.1.20\\src\\cert_context.rs","byte_start":24799,"byte_end":24813,"line_start":556,"line_end":556,"column_start":10,"column_end":24},"value":"","parent":null,"children":[{"krate":0,"index":188},{"krate":0,"index":189},{"krate":0,"index":190},{"krate":0,"index":191},{"krate":0,"index":192},{"krate":0,"index":193},{"krate":0,"index":194},{"krate":0,"index":195},{"krate":0,"index":196}],"docs":"","sig":null,"attributes":[]},{"id":21,"kind":"Inherent","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\schannel-0.1.20\\src\\cert_context.rs","byte_start":28177,"byte_end":28184,"line_start":659,"line_end":659,"column_start":6,"column_end":13},"value":"","parent":null,"children":[{"krate":0,"index":200},{"krate":0,"index":201}],"docs":"","sig":null,"attributes":[]},{"id":22,"kind":"Direct","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\schannel-0.1.20\\src\\cert_store.rs","byte_start":31214,"byte_end":31223,"line_start":20,"line_end":20,"column_start":22,"column_end":31},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":23,"kind":"Direct","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\schannel-0.1.20\\src\\cert_store.rs","byte_start":31248,"byte_end":31257,"line_start":21,"line_end":21,"column_start":22,"column_end":31},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":24,"kind":"Direct","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\schannel-0.1.20\\src\\cert_store.rs","byte_start":31282,"byte_end":31291,"line_start":23,"line_end":23,"column_start":21,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":246}],"docs":"","sig":null,"attributes":[]},{"id":25,"kind":"Direct","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\schannel-0.1.20\\src\\cert_store.rs","byte_start":31425,"byte_end":31434,"line_start":29,"line_end":29,"column_start":15,"column_end":24},"value":"","parent":null,"children":[{"krate":0,"index":248}],"docs":"","sig":null,"attributes":[]},{"id":26,"kind":"Direct","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\schannel-0.1.20\\src\\cert_store.rs","byte_start":31566,"byte_end":31575,"line_start":37,"line_end":37,"column_start":16,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":250}],"docs":"","sig":null,"attributes":[]},{"id":29,"kind":"Inherent","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\schannel-0.1.20\\src\\cert_store.rs","byte_start":34757,"byte_end":34766,"line_start":100,"line_end":100,"column_start":6,"column_end":15},"value":"","parent":null,"children":[{"krate":0,"index":274},{"krate":0,"index":275},{"krate":0,"index":276},{"krate":0,"index":279},{"krate":0,"index":280},{"krate":0,"index":281}],"docs":"","sig":null,"attributes":[]},{"id":30,"kind":"Direct","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\schannel-0.1.20\\src\\cert_store.rs","byte_start":40444,"byte_end":40449,"line_start":255,"line_end":255,"column_start":23,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":288},{"krate":0,"index":289}],"docs":"","sig":null,"attributes":[]},{"id":31,"kind":"Inherent","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\schannel-0.1.20\\src\\cert_store.rs","byte_start":41277,"byte_end":41293,"line_start":287,"line_end":287,"column_start":6,"column_end":22},"value":"","parent":null,"children":[{"krate":0,"index":292},{"krate":0,"index":293},{"krate":0,"index":294},{"krate":0,"index":295},{"krate":0,"index":296},{"krate":0,"index":297}],"docs":"","sig":null,"attributes":[]},{"id":32,"kind":"Inherent","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\schannel-0.1.20\\src\\cert_store.rs","byte_start":43453,"byte_end":43459,"line_start":350,"line_end":350,"column_start":6,"column_end":12},"value":"","parent":null,"children":[{"krate":0,"index":303},{"krate":0,"index":304},{"krate":0,"index":305},{"krate":0,"index":306}],"docs":"","sig":null,"attributes":[]},{"id":33,"kind":"Direct","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\schannel-0.1.20\\src\\crypt_key.rs","byte_start":47436,"byte_end":47444,"line_start":8,"line_end":8,"column_start":15,"column_end":23},"value":"","parent":null,"children":[{"krate":0,"index":315}],"docs":"","sig":null,"attributes":[]},{"id":36,"kind":"Direct","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\schannel-0.1.20\\src\\crypt_prov.rs","byte_start":47951,"byte_end":47960,"line_start":16,"line_end":16,"column_start":15,"column_end":24},"value":"","parent":null,"children":[{"krate":0,"index":345}],"docs":"","sig":null,"attributes":[]},{"id":39,"kind":"Inherent","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\schannel-0.1.20\\src\\crypt_prov.rs","byte_start":48154,"byte_end":48163,"line_start":26,"line_end":26,"column_start":6,"column_end":15},"value":"","parent":null,"children":[{"krate":0,"index":347}],"docs":"","sig":null,"attributes":[]},{"id":40,"kind":"Inherent","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\schannel-0.1.20\\src\\crypt_prov.rs","byte_start":48513,"byte_end":48527,"line_start":44,"line_end":44,"column_start":6,"column_end":20},"value":"","parent":null,"children":[{"krate":0,"index":349},{"krate":0,"index":350},{"krate":0,"index":351},{"krate":0,"index":352},{"krate":0,"index":353},{"krate":0,"index":354},{"krate":0,"index":355},{"krate":0,"index":356},{"krate":0,"index":357}],"docs":"","sig":null,"attributes":[]},{"id":41,"kind":"Inherent","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\schannel-0.1.20\\src\\crypt_prov.rs","byte_start":51307,"byte_end":51319,"line_start":132,"line_end":132,"column_start":6,"column_end":18},"value":"","parent":null,"children":[{"krate":0,"index":361},{"krate":0,"index":362},{"krate":0,"index":363},{"krate":0,"index":364},{"krate":0,"index":365},{"krate":0,"index":366},{"krate":0,"index":367},{"krate":0,"index":368},{"krate":0,"index":369},{"krate":0,"index":370},{"krate":0,"index":371}],"docs":"","sig":null,"attributes":[]},{"id":42,"kind":"Inherent","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\schannel-0.1.20\\src\\crypt_prov.rs","byte_start":52461,"byte_end":52474,"line_start":184,"line_end":184,"column_start":10,"column_end":23},"value":"","parent":null,"children":[{"krate":0,"index":378},{"krate":0,"index":379},{"krate":0,"index":380}],"docs":"","sig":null,"attributes":[]},{"id":43,"kind":"Direct","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\schannel-0.1.20\\src\\ctl_context.rs","byte_start":61198,"byte_end":61208,"line_start":25,"line_end":25,"column_start":22,"column_end":32},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":44,"kind":"Direct","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\schannel-0.1.20\\src\\ctl_context.rs","byte_start":61233,"byte_end":61243,"line_start":26,"line_end":26,"column_start":22,"column_end":32},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":45,"kind":"Direct","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\schannel-0.1.20\\src\\ctl_context.rs","byte_start":61262,"byte_end":61272,"line_start":28,"line_end":28,"column_start":15,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":407}],"docs":"","sig":null,"attributes":[]},{"id":46,"kind":"Direct","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\schannel-0.1.20\\src\\ctl_context.rs","byte_start":61439,"byte_end":61449,"line_start":36,"line_end":36,"column_start":50,"column_end":60},"value":"","parent":null,"children":[{"krate":0,"index":409},{"krate":0,"index":410},{"krate":0,"index":411}],"docs":"","sig":null,"attributes":[]},{"id":47,"kind":"Inherent","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\schannel-0.1.20\\src\\ctl_context.rs","byte_start":61745,"byte_end":61755,"line_start":50,"line_end":50,"column_start":6,"column_end":16},"value":"","parent":null,"children":[{"krate":0,"index":413}],"docs":"","sig":null,"attributes":[]},{"id":48,"kind":"Inherent","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\schannel-0.1.20\\src\\ctl_context.rs","byte_start":62172,"byte_end":62179,"line_start":67,"line_end":67,"column_start":6,"column_end":13},"value":"","parent":null,"children":[{"krate":0,"index":418},{"krate":0,"index":419},{"krate":0,"index":420}],"docs":"","sig":null,"attributes":[]},{"id":49,"kind":"Direct","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\schannel-0.1.20\\src\\ncrypt_key.rs","byte_start":66883,"byte_end":66892,"line_start":8,"line_end":8,"column_start":15,"column_end":24},"value":"","parent":null,"children":[{"krate":0,"index":436}],"docs":"","sig":null,"attributes":[]},{"id":52,"kind":"Inherent","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\schannel-0.1.20\\src\\schannel_cred.rs","byte_start":73759,"byte_end":73767,"line_start":167,"line_end":167,"column_start":6,"column_end":14},"value":"","parent":null,"children":[{"krate":0,"index":471}],"docs":"","sig":null,"attributes":[]},{"id":53,"kind":"Inherent","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\schannel-0.1.20\\src\\schannel_cred.rs","byte_start":74952,"byte_end":74959,"line_start":192,"line_end":192,"column_start":6,"column_end":13},"value":"","parent":null,"children":[{"krate":0,"index":473},{"krate":0,"index":474},{"krate":0,"index":475},{"krate":0,"index":476},{"krate":0,"index":477}],"docs":"","sig":null,"attributes":[]},{"id":54,"kind":"Direct","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\schannel-0.1.20\\src\\schannel_cred.rs","byte_start":78291,"byte_end":78304,"line_start":275,"line_end":275,"column_start":15,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":485}],"docs":"","sig":null,"attributes":[]},{"id":55,"kind":"Inherent","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\schannel-0.1.20\\src\\schannel_cred.rs","byte_start":78427,"byte_end":78439,"line_start":283,"line_end":283,"column_start":6,"column_end":18},"value":"","parent":null,"children":[{"krate":0,"index":487},{"krate":0,"index":488},{"krate":0,"index":489}],"docs":"","sig":null,"attributes":[]},{"id":56,"kind":"Direct","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\schannel-0.1.20\\src\\tls_stream.rs","byte_start":80308,"byte_end":80315,"line_start":50,"line_end":50,"column_start":18,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":593}],"docs":"","sig":null,"attributes":[]},{"id":57,"kind":"Inherent","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\schannel-0.1.20\\src\\tls_stream.rs","byte_start":80604,"byte_end":80611,"line_start":63,"line_end":63,"column_start":6,"column_end":13},"value":"","parent":null,"children":[{"krate":0,"index":595},{"krate":0,"index":596},{"krate":0,"index":597},{"krate":0,"index":598},{"krate":0,"index":599},{"krate":0,"index":601},{"krate":0,"index":602},{"krate":0,"index":604},{"krate":0,"index":606},{"krate":0,"index":608}],"docs":"","sig":null,"attributes":[]},{"id":58,"kind":"Inherent","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\schannel-0.1.20\\src\\tls_stream.rs","byte_start":88102,"byte_end":88122,"line_start":285,"line_end":285,"column_start":6,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":649},{"krate":0,"index":650},{"krate":0,"index":651}],"docs":"","sig":null,"attributes":[]},{"id":59,"kind":"Direct","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\schannel-0.1.20\\src\\tls_stream.rs","byte_start":88933,"byte_end":88947,"line_start":309,"line_end":309,"column_start":37,"column_end":51},"value":"","parent":null,"children":[{"krate":0,"index":654}],"docs":"","sig":null,"attributes":[]},{"id":60,"kind":"Direct","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\schannel-0.1.20\\src\\tls_stream.rs","byte_start":89201,"byte_end":89215,"line_start":318,"line_end":318,"column_start":44,"column_end":58},"value":"","parent":null,"children":[{"krate":0,"index":657}],"docs":"","sig":null,"attributes":[]},{"id":61,"kind":"Direct","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\schannel-0.1.20\\src\\tls_stream.rs","byte_start":89783,"byte_end":89792,"line_start":338,"line_end":338,"column_start":24,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":660}],"docs":"","sig":null,"attributes":[]},{"id":62,"kind":"Inherent","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\schannel-0.1.20\\src\\tls_stream.rs","byte_start":90004,"byte_end":90013,"line_start":349,"line_end":349,"column_start":9,"column_end":18},"value":"","parent":null,"children":[{"krate":0,"index":663},{"krate":0,"index":664},{"krate":0,"index":665}],"docs":"","sig":null,"attributes":[]},{"id":63,"kind":"Inherent","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\schannel-0.1.20\\src\\tls_stream.rs","byte_start":90421,"byte_end":90430,"line_start":366,"line_end":366,"column_start":9,"column_end":18},"value":"","parent":null,"children":[{"krate":0,"index":668},{"krate":0,"index":669},{"krate":0,"index":670},{"krate":0,"index":671},{"krate":0,"index":672},{"krate":0,"index":673},{"krate":0,"index":675},{"krate":0,"index":677},{"krate":0,"index":678},{"krate":0,"index":681},{"krate":0,"index":682},{"krate":0,"index":683},{"krate":0,"index":684},{"krate":0,"index":685}],"docs":"","sig":null,"attributes":[]},{"id":64,"kind":"Inherent","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\schannel-0.1.20\\src\\tls_stream.rs","byte_start":113325,"byte_end":113346,"line_start":954,"line_end":954,"column_start":9,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":688},{"krate":0,"index":689}],"docs":"","sig":null,"attributes":[]},{"id":65,"kind":"Inherent","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\schannel-0.1.20\\src\\tls_stream.rs","byte_start":113623,"byte_end":113644,"line_start":966,"line_end":966,"column_start":9,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":692}],"docs":"","sig":null,"attributes":[]},{"id":66,"kind":"Direct","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\schannel-0.1.20\\src\\tls_stream.rs","byte_start":114100,"byte_end":114109,"line_start":982,"line_end":982,"column_start":19,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":695},{"krate":0,"index":696}],"docs":"","sig":null,"attributes":[]},{"id":67,"kind":"Direct","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\schannel-0.1.20\\src\\tls_stream.rs","byte_start":115290,"byte_end":115299,"line_start":1018,"line_end":1018,"column_start":18,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":699}],"docs":"","sig":null,"attributes":[]},{"id":68,"kind":"Direct","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\schannel-0.1.20\\src\\tls_stream.rs","byte_start":115689,"byte_end":115698,"line_start":1034,"line_end":1034,"column_start":21,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":702},{"krate":0,"index":703}],"docs":"","sig":null,"attributes":[]},{"id":69,"kind":"Direct","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\schannel-0.1.20\\src\\alpn_list.rs","byte_start":117210,"byte_end":117218,"line_start":22,"line_end":22,"column_start":15,"column_end":23},"value":"","parent":null,"children":[{"krate":0,"index":726}],"docs":"","sig":null,"attributes":[]},{"id":70,"kind":"Inherent","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\schannel-0.1.20\\src\\alpn_list.rs","byte_start":117437,"byte_end":117445,"line_start":31,"line_end":31,"column_start":6,"column_end":14},"value":"","parent":null,"children":[{"krate":0,"index":728}],"docs":"","sig":null,"attributes":[]},{"id":71,"kind":"Direct","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\schannel-0.1.20\\src\\alpn_list.rs","byte_start":119284,"byte_end":119292,"line_start":75,"line_end":75,"column_start":26,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":730},{"krate":0,"index":731}],"docs":"","sig":null,"attributes":[]},{"id":72,"kind":"Direct","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\schannel-0.1.20\\src\\alpn_list.rs","byte_start":119568,"byte_end":119576,"line_start":86,"line_end":86,"column_start":29,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":733}],"docs":"","sig":null,"attributes":[]},{"id":73,"kind":"Direct","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\schannel-0.1.20\\src\\context_buffer.rs","byte_start":119980,"byte_end":119993,"line_start":8,"line_end":8,"column_start":15,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":748}],"docs":"","sig":null,"attributes":[]},{"id":74,"kind":"Direct","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\schannel-0.1.20\\src\\context_buffer.rs","byte_start":120130,"byte_end":120143,"line_start":16,"line_end":16,"column_start":16,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":750},{"krate":0,"index":751}],"docs":"","sig":null,"attributes":[]},{"id":75,"kind":"Direct","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\schannel-0.1.20\\src\\security_context.rs","byte_start":120769,"byte_end":120784,"line_start":17,"line_end":17,"column_start":15,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":800}],"docs":"","sig":null,"attributes":[]},{"id":76,"kind":"Direct","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\schannel-0.1.20\\src\\security_context.rs","byte_start":120941,"byte_end":120956,"line_start":25,"line_end":25,"column_start":40,"column_end":55},"value":"","parent":null,"children":[{"krate":0,"index":802},{"krate":0,"index":803},{"krate":0,"index":804}],"docs":"","sig":null,"attributes":[]},{"id":77,"kind":"Inherent","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\schannel-0.1.20\\src\\security_context.rs","byte_start":121240,"byte_end":121255,"line_start":39,"line_end":39,"column_start":6,"column_end":21},"value":"","parent":null,"children":[{"krate":0,"index":806},{"krate":0,"index":809},{"krate":0,"index":811},{"krate":0,"index":812},{"krate":0,"index":813},{"krate":0,"index":814},{"krate":0,"index":816}],"docs":"","sig":null,"attributes":[]}],"refs":[{"kind":"Mod","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\schannel-0.1.20\\src\\lib.rs","byte_start":1525,"byte_end":1535,"line_start":58,"line_end":58,"column_start":9,"column_end":19},"ref_id":{"krate":0,"index":17}},{"kind":"Mod","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\schannel-0.1.20\\src\\lib.rs","byte_start":1545,"byte_end":1557,"line_start":59,"line_end":59,"column_start":9,"column_end":21},"ref_id":{"krate":0,"index":72}},{"kind":"Mod","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\schannel-0.1.20\\src\\lib.rs","byte_start":1567,"byte_end":1577,"line_start":60,"line_end":60,"column_start":9,"column_end":19},"ref_id":{"krate":0,"index":208}},{"kind":"Mod","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\schannel-0.1.20\\src\\lib.rs","byte_start":1587,"byte_end":1596,"line_start":61,"line_end":61,"column_start":9,"column_end":18},"ref_id":{"krate":0,"index":307}},{"kind":"Mod","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\schannel-0.1.20\\src\\lib.rs","byte_start":1606,"byte_end":1616,"line_start":62,"line_end":62,"column_start":9,"column_end":19},"ref_id":{"krate":0,"index":316}},{"kind":"Mod","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\schannel-0.1.20\\src\\lib.rs","byte_start":1653,"byte_end":1663,"line_start":64,"line_end":64,"column_start":9,"column_end":19},"ref_id":{"krate":0,"index":424}},{"kind":"Mod","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\schannel-0.1.20\\src\\lib.rs","byte_start":1673,"byte_end":1683,"line_start":65,"line_end":65,"column_start":9,"column_end":19},"ref_id":{"krate":0,"index":428}},{"kind":"Mod","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\schannel-0.1.20\\src\\lib.rs","byte_start":1693,"byte_end":1706,"line_start":66,"line_end":66,"column_start":9,"column_end":22},"ref_id":{"krate":0,"index":437}},{"kind":"Mod","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\schannel-0.1.20\\src\\lib.rs","byte_start":1716,"byte_end":1726,"line_start":67,"line_end":67,"column_start":9,"column_end":19},"ref_id":{"krate":0,"index":490}}],"macro_refs":[],"relations":[{"span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\schannel-0.1.20\\src\\cert_chain.rs","byte_start":3512,"byte_end":3528,"line_start":15,"line_end":15,"column_start":22,"column_end":38},"kind":{"Impl":{"id":2}},"from":{"krate":0,"index":33},"to":{"krate":2,"index":3069}},{"span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\schannel-0.1.20\\src\\cert_chain.rs","byte_start":3553,"byte_end":3569,"line_start":16,"line_end":16,"column_start":22,"column_end":38},"kind":{"Impl":{"id":3}},"from":{"krate":0,"index":33},"to":{"krate":2,"index":3057}},{"span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\schannel-0.1.20\\src\\cert_chain.rs","byte_start":3589,"byte_end":3605,"line_start":18,"line_end":18,"column_start":16,"column_end":32},"kind":{"Impl":{"id":4}},"from":{"krate":0,"index":33},"to":{"krate":2,"index":2679}},{"span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\schannel-0.1.20\\src\\cert_chain.rs","byte_start":3775,"byte_end":3791,"line_start":25,"line_end":25,"column_start":15,"column_end":31},"kind":{"Impl":{"id":5}},"from":{"krate":0,"index":33},"to":{"krate":2,"index":3300}},{"span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\schannel-0.1.20\\src\\cert_chain.rs","byte_start":3920,"byte_end":3936,"line_start":33,"line_end":33,"column_start":6,"column_end":22},"kind":{"Impl":{"id":6}},"from":{"krate":0,"index":33},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\schannel-0.1.20\\src\\cert_chain.rs","byte_start":5232,"byte_end":5241,"line_start":72,"line_end":72,"column_start":6,"column_end":15},"kind":{"Impl":{"id":7}},"from":{"krate":0,"index":46},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\schannel-0.1.20\\src\\cert_chain.rs","byte_start":6504,"byte_end":6521,"line_start":115,"line_end":115,"column_start":23,"column_end":40},"kind":{"Impl":{"id":8}},"from":{"krate":0,"index":56},"to":{"krate":2,"index":7985}},{"span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\schannel-0.1.20\\src\\cert_chain.rs","byte_start":6858,"byte_end":6870,"line_start":131,"line_end":131,"column_start":23,"column_end":35},"kind":{"Impl":{"id":9}},"from":{"krate":0,"index":64},"to":{"krate":2,"index":7985}},{"span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\schannel-0.1.20\\src\\cert_context.rs","byte_start":7546,"byte_end":7559,"line_start":22,"line_end":22,"column_start":6,"column_end":19},"kind":{"Impl":{"id":10}},"from":{"krate":0,"index":118},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\schannel-0.1.20\\src\\cert_context.rs","byte_start":8796,"byte_end":8807,"line_start":69,"line_end":69,"column_start":22,"column_end":33},"kind":{"Impl":{"id":11}},"from":{"krate":0,"index":834},"to":{"krate":2,"index":3069}},{"span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\schannel-0.1.20\\src\\cert_context.rs","byte_start":8832,"byte_end":8843,"line_start":70,"line_end":70,"column_start":22,"column_end":33},"kind":{"Impl":{"id":12}},"from":{"krate":0,"index":834},"to":{"krate":2,"index":3057}},{"span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\schannel-0.1.20\\src\\cert_context.rs","byte_start":8862,"byte_end":8873,"line_start":72,"line_end":72,"column_start":15,"column_end":26},"kind":{"Impl":{"id":13}},"from":{"krate":0,"index":834},"to":{"krate":2,"index":3300}},{"span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\schannel-0.1.20\\src\\cert_context.rs","byte_start":9014,"byte_end":9025,"line_start":80,"line_end":80,"column_start":16,"column_end":27},"kind":{"Impl":{"id":14}},"from":{"krate":0,"index":834},"to":{"krate":2,"index":2679}},{"span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\schannel-0.1.20\\src\\cert_context.rs","byte_start":9222,"byte_end":9233,"line_start":88,"line_end":88,"column_start":6,"column_end":17},"kind":{"Impl":{"id":17}},"from":{"krate":0,"index":834},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\schannel-0.1.20\\src\\cert_context.rs","byte_start":22209,"byte_end":22220,"line_start":476,"line_end":476,"column_start":20,"column_end":31},"kind":{"Impl":{"id":18}},"from":{"krate":0,"index":834},"to":{"krate":2,"index":2709}},{"span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\schannel-0.1.20\\src\\cert_context.rs","byte_start":22494,"byte_end":22518,"line_start":488,"line_end":488,"column_start":10,"column_end":34},"kind":{"Impl":{"id":19}},"from":{"krate":0,"index":161},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\schannel-0.1.20\\src\\cert_context.rs","byte_start":24799,"byte_end":24813,"line_start":556,"line_end":556,"column_start":10,"column_end":24},"kind":{"Impl":{"id":20}},"from":{"krate":0,"index":178},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\schannel-0.1.20\\src\\cert_context.rs","byte_start":28177,"byte_end":28184,"line_start":659,"line_end":659,"column_start":6,"column_end":13},"kind":{"Impl":{"id":21}},"from":{"krate":0,"index":846},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\schannel-0.1.20\\src\\cert_store.rs","byte_start":31214,"byte_end":31223,"line_start":20,"line_end":20,"column_start":22,"column_end":31},"kind":{"Impl":{"id":22}},"from":{"krate":0,"index":240},"to":{"krate":2,"index":3069}},{"span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\schannel-0.1.20\\src\\cert_store.rs","byte_start":31248,"byte_end":31257,"line_start":21,"line_end":21,"column_start":22,"column_end":31},"kind":{"Impl":{"id":23}},"from":{"krate":0,"index":240},"to":{"krate":2,"index":3057}},{"span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\schannel-0.1.20\\src\\cert_store.rs","byte_start":31282,"byte_end":31291,"line_start":23,"line_end":23,"column_start":21,"column_end":30},"kind":{"Impl":{"id":24}},"from":{"krate":0,"index":240},"to":{"krate":2,"index":9685}},{"span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\schannel-0.1.20\\src\\cert_store.rs","byte_start":31425,"byte_end":31434,"line_start":29,"line_end":29,"column_start":15,"column_end":24},"kind":{"Impl":{"id":25}},"from":{"krate":0,"index":240},"to":{"krate":2,"index":3300}},{"span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\schannel-0.1.20\\src\\cert_store.rs","byte_start":31566,"byte_end":31575,"line_start":37,"line_end":37,"column_start":16,"column_end":25},"kind":{"Impl":{"id":26}},"from":{"krate":0,"index":240},"to":{"krate":2,"index":2679}},{"span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\schannel-0.1.20\\src\\cert_store.rs","byte_start":34757,"byte_end":34766,"line_start":100,"line_end":100,"column_start":6,"column_end":15},"kind":{"Impl":{"id":29}},"from":{"krate":0,"index":240},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\schannel-0.1.20\\src\\cert_store.rs","byte_start":40444,"byte_end":40449,"line_start":255,"line_end":255,"column_start":23,"column_end":28},"kind":{"Impl":{"id":30}},"from":{"krate":0,"index":282},"to":{"krate":2,"index":7985}},{"span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\schannel-0.1.20\\src\\cert_store.rs","byte_start":41277,"byte_end":41293,"line_start":287,"line_end":287,"column_start":6,"column_end":22},"kind":{"Impl":{"id":31}},"from":{"krate":0,"index":859},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\schannel-0.1.20\\src\\cert_store.rs","byte_start":43453,"byte_end":43459,"line_start":350,"line_end":350,"column_start":6,"column_end":12},"kind":{"Impl":{"id":32}},"from":{"krate":0,"index":299},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\schannel-0.1.20\\src\\crypt_key.rs","byte_start":47436,"byte_end":47444,"line_start":8,"line_end":8,"column_start":15,"column_end":23},"kind":{"Impl":{"id":33}},"from":{"krate":0,"index":311},"to":{"krate":2,"index":3300}},{"span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\schannel-0.1.20\\src\\crypt_prov.rs","byte_start":47951,"byte_end":47960,"line_start":16,"line_end":16,"column_start":15,"column_end":24},"kind":{"Impl":{"id":36}},"from":{"krate":0,"index":341},"to":{"krate":2,"index":3300}},{"span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\schannel-0.1.20\\src\\crypt_prov.rs","byte_start":48154,"byte_end":48163,"line_start":26,"line_end":26,"column_start":6,"column_end":15},"kind":{"Impl":{"id":39}},"from":{"krate":0,"index":341},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\schannel-0.1.20\\src\\crypt_prov.rs","byte_start":48513,"byte_end":48527,"line_start":44,"line_end":44,"column_start":6,"column_end":20},"kind":{"Impl":{"id":40}},"from":{"krate":0,"index":878},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\schannel-0.1.20\\src\\crypt_prov.rs","byte_start":51307,"byte_end":51319,"line_start":132,"line_end":132,"column_start":6,"column_end":18},"kind":{"Impl":{"id":41}},"from":{"krate":0,"index":884},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\schannel-0.1.20\\src\\crypt_prov.rs","byte_start":52461,"byte_end":52474,"line_start":184,"line_end":184,"column_start":10,"column_end":23},"kind":{"Impl":{"id":42}},"from":{"krate":0,"index":372},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\schannel-0.1.20\\src\\ctl_context.rs","byte_start":61198,"byte_end":61208,"line_start":25,"line_end":25,"column_start":22,"column_end":32},"kind":{"Impl":{"id":43}},"from":{"krate":0,"index":401},"to":{"krate":2,"index":3057}},{"span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\schannel-0.1.20\\src\\ctl_context.rs","byte_start":61233,"byte_end":61243,"line_start":26,"line_end":26,"column_start":22,"column_end":32},"kind":{"Impl":{"id":44}},"from":{"krate":0,"index":401},"to":{"krate":2,"index":3069}},{"span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\schannel-0.1.20\\src\\ctl_context.rs","byte_start":61262,"byte_end":61272,"line_start":28,"line_end":28,"column_start":15,"column_end":25},"kind":{"Impl":{"id":45}},"from":{"krate":0,"index":401},"to":{"krate":2,"index":3300}},{"span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\schannel-0.1.20\\src\\ctl_context.rs","byte_start":61439,"byte_end":61449,"line_start":36,"line_end":36,"column_start":50,"column_end":60},"kind":{"Impl":{"id":46}},"from":{"krate":0,"index":401},"to":{"krate":0,"index":820}},{"span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\schannel-0.1.20\\src\\ctl_context.rs","byte_start":61745,"byte_end":61755,"line_start":50,"line_end":50,"column_start":6,"column_end":16},"kind":{"Impl":{"id":47}},"from":{"krate":0,"index":401},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\schannel-0.1.20\\src\\ctl_context.rs","byte_start":62172,"byte_end":62179,"line_start":67,"line_end":67,"column_start":6,"column_end":13},"kind":{"Impl":{"id":48}},"from":{"krate":0,"index":414},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\schannel-0.1.20\\src\\ncrypt_key.rs","byte_start":66883,"byte_end":66892,"line_start":8,"line_end":8,"column_start":15,"column_end":24},"kind":{"Impl":{"id":49}},"from":{"krate":0,"index":432},"to":{"krate":2,"index":3300}},{"span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\schannel-0.1.20\\src\\schannel_cred.rs","byte_start":73759,"byte_end":73767,"line_start":167,"line_end":167,"column_start":6,"column_end":14},"kind":{"Impl":{"id":52}},"from":{"krate":0,"index":1040},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\schannel-0.1.20\\src\\schannel_cred.rs","byte_start":74952,"byte_end":74959,"line_start":192,"line_end":192,"column_start":6,"column_end":13},"kind":{"Impl":{"id":53}},"from":{"krate":0,"index":1056},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\schannel-0.1.20\\src\\schannel_cred.rs","byte_start":78291,"byte_end":78304,"line_start":275,"line_end":275,"column_start":15,"column_end":28},"kind":{"Impl":{"id":54}},"from":{"krate":0,"index":481},"to":{"krate":2,"index":3300}},{"span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\schannel-0.1.20\\src\\schannel_cred.rs","byte_start":78427,"byte_end":78439,"line_start":283,"line_end":283,"column_start":6,"column_end":18},"kind":{"Impl":{"id":55}},"from":{"krate":0,"index":1064},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\schannel-0.1.20\\src\\tls_stream.rs","byte_start":80308,"byte_end":80315,"line_start":50,"line_end":50,"column_start":18,"column_end":25},"kind":{"Impl":{"id":56}},"from":{"krate":0,"index":585},"to":{"krate":2,"index":3035}},{"span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\schannel-0.1.20\\src\\tls_stream.rs","byte_start":80604,"byte_end":80611,"line_start":63,"line_end":63,"column_start":6,"column_end":13},"kind":{"Impl":{"id":57}},"from":{"krate":0,"index":585},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\schannel-0.1.20\\src\\tls_stream.rs","byte_start":88102,"byte_end":88122,"line_start":285,"line_end":285,"column_start":6,"column_end":26},"kind":{"Impl":{"id":58}},"from":{"krate":0,"index":643},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\schannel-0.1.20\\src\\tls_stream.rs","byte_start":88933,"byte_end":88947,"line_start":309,"line_end":309,"column_start":37,"column_end":51},"kind":{"Impl":{"id":59}},"from":{"krate":0,"index":1102},"to":{"krate":1,"index":2546}},{"span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\schannel-0.1.20\\src\\tls_stream.rs","byte_start":89201,"byte_end":89215,"line_start":318,"line_end":318,"column_start":44,"column_end":58},"kind":{"Impl":{"id":60}},"from":{"krate":0,"index":1102},"to":{"krate":2,"index":9692}},{"span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\schannel-0.1.20\\src\\tls_stream.rs","byte_start":89783,"byte_end":89792,"line_start":338,"line_end":338,"column_start":24,"column_end":33},"kind":{"Impl":{"id":61}},"from":{"krate":0,"index":621},"to":{"krate":2,"index":9685}},{"span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\schannel-0.1.20\\src\\tls_stream.rs","byte_start":90004,"byte_end":90013,"line_start":349,"line_end":349,"column_start":9,"column_end":18},"kind":{"Impl":{"id":62}},"from":{"krate":0,"index":621},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\schannel-0.1.20\\src\\tls_stream.rs","byte_start":90421,"byte_end":90430,"line_start":366,"line_end":366,"column_start":9,"column_end":18},"kind":{"Impl":{"id":63}},"from":{"krate":0,"index":621},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\schannel-0.1.20\\src\\tls_stream.rs","byte_start":113325,"byte_end":113346,"line_start":954,"line_end":954,"column_start":9,"column_end":30},"kind":{"Impl":{"id":64}},"from":{"krate":0,"index":1113},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\schannel-0.1.20\\src\\tls_stream.rs","byte_start":113623,"byte_end":113644,"line_start":966,"line_end":966,"column_start":9,"column_end":30},"kind":{"Impl":{"id":65}},"from":{"krate":0,"index":1113},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\schannel-0.1.20\\src\\tls_stream.rs","byte_start":114100,"byte_end":114109,"line_start":982,"line_end":982,"column_start":19,"column_end":28},"kind":{"Impl":{"id":66}},"from":{"krate":0,"index":621},"to":{"krate":1,"index":4780}},{"span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\schannel-0.1.20\\src\\tls_stream.rs","byte_start":115290,"byte_end":115299,"line_start":1018,"line_end":1018,"column_start":18,"column_end":27},"kind":{"Impl":{"id":67}},"from":{"krate":0,"index":621},"to":{"krate":1,"index":4723}},{"span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\schannel-0.1.20\\src\\tls_stream.rs","byte_start":115689,"byte_end":115698,"line_start":1034,"line_end":1034,"column_start":21,"column_end":30},"kind":{"Impl":{"id":68}},"from":{"krate":0,"index":621},"to":{"krate":1,"index":4805}},{"span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\schannel-0.1.20\\src\\alpn_list.rs","byte_start":117210,"byte_end":117218,"line_start":22,"line_end":22,"column_start":15,"column_end":23},"kind":{"Impl":{"id":69}},"from":{"krate":0,"index":722},"to":{"krate":2,"index":3300}},{"span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\schannel-0.1.20\\src\\alpn_list.rs","byte_start":117437,"byte_end":117445,"line_start":31,"line_end":31,"column_start":6,"column_end":14},"kind":{"Impl":{"id":70}},"from":{"krate":0,"index":722},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\schannel-0.1.20\\src\\alpn_list.rs","byte_start":119284,"byte_end":119292,"line_start":75,"line_end":75,"column_start":26,"column_end":34},"kind":{"Impl":{"id":71}},"from":{"krate":0,"index":722},"to":{"krate":2,"index":3276}},{"span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\schannel-0.1.20\\src\\alpn_list.rs","byte_start":119568,"byte_end":119576,"line_start":86,"line_end":86,"column_start":29,"column_end":37},"kind":{"Impl":{"id":72}},"from":{"krate":0,"index":722},"to":{"krate":2,"index":3289}},{"span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\schannel-0.1.20\\src\\context_buffer.rs","byte_start":119980,"byte_end":119993,"line_start":8,"line_end":8,"column_start":15,"column_end":28},"kind":{"Impl":{"id":73}},"from":{"krate":0,"index":744},"to":{"krate":2,"index":3300}},{"span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\schannel-0.1.20\\src\\context_buffer.rs","byte_start":120130,"byte_end":120143,"line_start":16,"line_end":16,"column_start":16,"column_end":29},"kind":{"Impl":{"id":74}},"from":{"krate":0,"index":744},"to":{"krate":2,"index":3276}},{"span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\schannel-0.1.20\\src\\security_context.rs","byte_start":120769,"byte_end":120784,"line_start":17,"line_end":17,"column_start":15,"column_end":30},"kind":{"Impl":{"id":75}},"from":{"krate":0,"index":796},"to":{"krate":2,"index":3300}},{"span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\schannel-0.1.20\\src\\security_context.rs","byte_start":120941,"byte_end":120956,"line_start":25,"line_end":25,"column_start":40,"column_end":55},"kind":{"Impl":{"id":76}},"from":{"krate":0,"index":796},"to":{"krate":0,"index":820}},{"span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\schannel-0.1.20\\src\\security_context.rs","byte_start":121240,"byte_end":121255,"line_start":39,"line_end":39,"column_start":6,"column_end":21},"kind":{"Impl":{"id":77}},"from":{"krate":0,"index":796},"to":{"krate":4294967295,"index":4294967295}}]}