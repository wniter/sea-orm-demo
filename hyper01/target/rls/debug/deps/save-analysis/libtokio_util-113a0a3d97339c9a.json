{"config":{"output_file":null,"full_docs":false,"pub_only":true,"reachable_only":true,"distro_crate":false,"signatures":false,"borrow_data":false},"version":"0.19.1","compilation":{"directory":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3","program":"C:\\Users\\admin\\.rustup\\toolchains\\stable-x86_64-pc-windows-msvc\\bin\\rls.exe","arguments":["--crate-name","tokio_util","--edition=2018","C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\lib.rs","--json=diagnostic-rendered-ansi,artifacts,future-incompat","--crate-type","lib","--emit=dep-info,metadata","-C","embed-bitcode=no","-C","debuginfo=2","--cfg","feature=\"codec\"","--cfg","feature=\"default\"","--cfg","feature=\"tracing\"","-C","metadata=113a0a3d97339c9a","-C","extra-filename=-113a0a3d97339c9a","--out-dir","f:\\sea-orm-demo\\hyper01\\target\\rls\\debug\\deps","-L","dependency=f:\\sea-orm-demo\\hyper01\\target\\rls\\debug\\deps","--extern","bytes=f:\\sea-orm-demo\\hyper01\\target\\rls\\debug\\deps\\libbytes-44f7044162212a87.rmeta","--extern","futures_core=f:\\sea-orm-demo\\hyper01\\target\\rls\\debug\\deps\\libfutures_core-e34f210f395a45b5.rmeta","--extern","futures_sink=f:\\sea-orm-demo\\hyper01\\target\\rls\\debug\\deps\\libfutures_sink-8c29533238f7a4d0.rmeta","--extern","pin_project_lite=f:\\sea-orm-demo\\hyper01\\target\\rls\\debug\\deps\\libpin_project_lite-e22eb2e62c630ccc.rmeta","--extern","tokio=f:\\sea-orm-demo\\hyper01\\target\\rls\\debug\\deps\\libtokio-13f4dedcd0c05724.rmeta","--extern","tracing=f:\\sea-orm-demo\\hyper01\\target\\rls\\debug\\deps\\libtracing-489349a46f2802ab.rmeta","--cap-lints","allow","-L","native=C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\windows_x86_64_msvc-0.36.1\\lib","--error-format=json","--sysroot","C:\\Users\\admin\\.rustup/toolchains/stable-x86_64-pc-windows-msvc"],"output":"f:\\sea-orm-demo\\hyper01\\target\\rls\\debug\\deps\\libtokio_util-113a0a3d97339c9a.rmeta"},"prelude":{"crate_id":{"name":"tokio_util","disambiguator":[16630780943814857613,0]},"crate_root":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src","external_crates":[{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\lib.rs","num":1,"id":{"name":"std","disambiguator":[13015713666403456114,0]}},{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\sync\\cancellation_token.rs","num":2,"id":{"name":"core","disambiguator":[1507510987272037120,0]}},{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\lib.rs","num":3,"id":{"name":"compiler_builtins","disambiguator":[3803325750332457499,0]}},{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\lib.rs","num":4,"id":{"name":"rustc_std_workspace_core","disambiguator":[4223354511651166533,0]}},{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\lib.rs","num":5,"id":{"name":"alloc","disambiguator":[15700094508901508366,0]}},{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\lib.rs","num":6,"id":{"name":"libc","disambiguator":[12632183332710247155,0]}},{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\lib.rs","num":7,"id":{"name":"unwind","disambiguator":[18262169243471273054,0]}},{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\lib.rs","num":8,"id":{"name":"cfg_if","disambiguator":[15664785966706829415,0]}},{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\lib.rs","num":9,"id":{"name":"miniz_oxide","disambiguator":[3895343934390880989,0]}},{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\lib.rs","num":10,"id":{"name":"rustc_std_workspace_alloc","disambiguator":[1841993658411810574,0]}},{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\lib.rs","num":11,"id":{"name":"adler","disambiguator":[1117248029108287081,0]}},{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\lib.rs","num":12,"id":{"name":"hashbrown","disambiguator":[14646112292732085519,0]}},{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\lib.rs","num":13,"id":{"name":"std_detect","disambiguator":[11979428506951486581,0]}},{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\lib.rs","num":14,"id":{"name":"rustc_demangle","disambiguator":[2104796995944127881,0]}},{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\lib.rs","num":15,"id":{"name":"panic_unwind","disambiguator":[4084207378877276393,0]}},{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\sync\\cancellation_token.rs","num":16,"id":{"name":"pin_project_lite","disambiguator":[11650812661830545456,0]}},{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\sync\\mpsc.rs","num":17,"id":{"name":"futures_sink","disambiguator":[1247065067350179424,0]}},{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\sync\\mpsc.rs","num":18,"id":{"name":"tokio","disambiguator":[11470239558877605623,0]}},{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\sync\\mpsc.rs","num":19,"id":{"name":"parking_lot","disambiguator":[2849541633823578966,0]}},{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\sync\\mpsc.rs","num":20,"id":{"name":"lock_api","disambiguator":[2157842252132152726,0]}},{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\sync\\mpsc.rs","num":21,"id":{"name":"scopeguard","disambiguator":[14791793103096291185,0]}},{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\sync\\mpsc.rs","num":22,"id":{"name":"parking_lot_core","disambiguator":[1665014641825464585,0]}},{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\sync\\mpsc.rs","num":23,"id":{"name":"smallvec","disambiguator":[9808925325785394637,0]}},{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\sync\\mpsc.rs","num":24,"id":{"name":"cfg_if","disambiguator":[17941200006019888196,0]}},{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\sync\\mpsc.rs","num":25,"id":{"name":"windows_sys","disambiguator":[7517967937015650826,0]}},{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\sync\\mpsc.rs","num":26,"id":{"name":"winapi","disambiguator":[14664184026216859600,0]}},{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\sync\\mpsc.rs","num":27,"id":{"name":"mio","disambiguator":[15995696725004905343,0]}},{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\sync\\mpsc.rs","num":28,"id":{"name":"log","disambiguator":[500290388089087630,0]}},{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\lib.rs","num":29,"id":{"name":"bytes","disambiguator":[16352016917553093522,0]}},{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\sync\\mpsc.rs","num":30,"id":{"name":"once_cell","disambiguator":[14722822818971705044,0]}},{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\sync\\mpsc.rs","num":31,"id":{"name":"tokio_macros","disambiguator":[13794876772247320193,0]}},{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\sync\\mpsc.rs","num":32,"id":{"name":"memchr","disambiguator":[11795001318777741512,0]}},{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\sync\\mpsc.rs","num":33,"id":{"name":"socket2","disambiguator":[3478330484725280577,0]}},{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\sync\\mpsc.rs","num":34,"id":{"name":"num_cpus","disambiguator":[9680463424726089930,0]}},{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\sync\\poll_semaphore.rs","num":35,"id":{"name":"futures_core","disambiguator":[11080074677927752119,0]}},{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\framed_impl.rs","num":36,"id":{"name":"tracing","disambiguator":[17335740008300427123,0]}},{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\framed_impl.rs","num":37,"id":{"name":"tracing_core","disambiguator":[9316411496141191649,0]}}],"span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\lib.rs","byte_start":0,"byte_end":5507,"line_start":1,"line_end":204,"column_start":1,"column_end":2}},"imports":[{"kind":"Use","ref_id":{"krate":0,"index":1165},"span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\mod.rs","byte_start":17225814,"byte_end":17225824,"line_start":262,"line_end":262,"column_start":28,"column_end":38},"alias_span":null,"name":"BytesCodec","value":"","parent":{"krate":0,"index":458}},{"kind":"Use","ref_id":{"krate":0,"index":511},"span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\mod.rs","byte_start":17225863,"byte_end":17225870,"line_start":265,"line_end":265,"column_start":24,"column_end":31},"alias_span":null,"name":"Decoder","value":"","parent":{"krate":0,"index":458}},{"kind":"Use","ref_id":{"krate":0,"index":528},"span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\mod.rs","byte_start":17225909,"byte_end":17225916,"line_start":268,"line_end":268,"column_start":24,"column_end":31},"alias_span":null,"name":"Encoder","value":"","parent":{"krate":0,"index":458}},{"kind":"Use","ref_id":{"krate":0,"index":1475},"span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\mod.rs","byte_start":17226078,"byte_end":17226084,"line_start":275,"line_end":275,"column_start":24,"column_end":30},"alias_span":null,"name":"Framed","value":"","parent":{"krate":0,"index":458}},{"kind":"Use","ref_id":{"krate":0,"index":1201},"span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\mod.rs","byte_start":17226086,"byte_end":17226097,"line_start":275,"line_end":275,"column_start":32,"column_end":43},"alias_span":null,"name":"FramedParts","value":"","parent":{"krate":0,"index":458}},{"kind":"Use","ref_id":{"krate":0,"index":1434},"span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\mod.rs","byte_start":17226145,"byte_end":17226155,"line_start":278,"line_end":278,"column_start":28,"column_end":38},"alias_span":null,"name":"FramedRead","value":"","parent":{"krate":0,"index":458}},{"kind":"Use","ref_id":{"krate":0,"index":1393},"span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\mod.rs","byte_start":17226204,"byte_end":17226215,"line_start":281,"line_end":281,"column_start":29,"column_end":40},"alias_span":null,"name":"FramedWrite","value":"","parent":{"krate":0,"index":458}},{"kind":"Use","ref_id":{"krate":0,"index":1225},"span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\mod.rs","byte_start":17226277,"byte_end":17226297,"line_start":284,"line_end":284,"column_start":34,"column_end":54},"alias_span":null,"name":"LengthDelimitedCodec","value":"","parent":{"krate":0,"index":458}},{"kind":"Use","ref_id":{"krate":0,"index":973},"span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\mod.rs","byte_start":17226299,"byte_end":17226324,"line_start":284,"line_end":284,"column_start":56,"column_end":81},"alias_span":null,"name":"LengthDelimitedCodecError","value":"","parent":{"krate":0,"index":458}},{"kind":"Use","ref_id":{"krate":0,"index":1243},"span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\mod.rs","byte_start":17226373,"byte_end":17226383,"line_start":287,"line_end":287,"column_start":29,"column_end":39},"alias_span":null,"name":"LinesCodec","value":"","parent":{"krate":0,"index":458}},{"kind":"Use","ref_id":{"krate":0,"index":1265},"span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\mod.rs","byte_start":17226385,"byte_end":17226400,"line_start":287,"line_end":287,"column_start":41,"column_end":56},"alias_span":null,"name":"LinesCodecError","value":"","parent":{"krate":0,"index":458}},{"kind":"Use","ref_id":{"krate":0,"index":1273},"span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\mod.rs","byte_start":17226465,"byte_end":17226482,"line_start":290,"line_end":290,"column_start":37,"column_end":54},"alias_span":null,"name":"AnyDelimiterCodec","value":"","parent":{"krate":0,"index":458}},{"kind":"Use","ref_id":{"krate":0,"index":1297},"span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\mod.rs","byte_start":17226484,"byte_end":17226506,"line_start":290,"line_end":290,"column_start":56,"column_end":78},"alias_span":null,"name":"AnyDelimiterCodecError","value":"","parent":{"krate":0,"index":458}},{"kind":"Use","ref_id":{"krate":0,"index":1305},"span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\sync\\mod.rs","byte_start":7099,"byte_end":7108,"line_start":4,"line_end":4,"column_start":37,"column_end":46},"alias_span":null,"name":"DropGuard","value":"","parent":{"krate":0,"index":14}},{"kind":"Use","ref_id":{"krate":0,"index":81},"span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\sync\\mod.rs","byte_start":7110,"byte_end":7127,"line_start":4,"line_end":4,"column_start":48,"column_end":65},"alias_span":null,"name":"CancellationToken","value":"","parent":{"krate":0,"index":14}},{"kind":"Use","ref_id":{"krate":0,"index":1309},"span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\sync\\mod.rs","byte_start":7129,"byte_end":7154,"line_start":4,"line_end":4,"column_start":67,"column_end":92},"alias_span":null,"name":"WaitForCancellationFuture","value":"","parent":{"krate":0,"index":14}},{"kind":"Use","ref_id":{"krate":0,"index":1346},"span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\sync\\mod.rs","byte_start":7183,"byte_end":7196,"line_start":7,"line_end":7,"column_start":16,"column_end":29},"alias_span":null,"name":"PollSendError","value":"","parent":{"krate":0,"index":14}},{"kind":"Use","ref_id":{"krate":0,"index":1368},"span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\sync\\mod.rs","byte_start":7198,"byte_end":7208,"line_start":7,"line_end":7,"column_start":31,"column_end":41},"alias_span":null,"name":"PollSender","value":"","parent":{"krate":0,"index":14}},{"kind":"Use","ref_id":{"krate":0,"index":226},"span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\sync\\mod.rs","byte_start":7256,"byte_end":7269,"line_start":10,"line_end":10,"column_start":25,"column_end":38},"alias_span":null,"name":"PollSemaphore","value":"","parent":{"krate":0,"index":14}},{"kind":"Use","ref_id":{"krate":0,"index":282},"span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\sync\\mod.rs","byte_start":7312,"byte_end":7329,"line_start":13,"line_end":13,"column_start":23,"column_end":40},"alias_span":null,"name":"ReusableBoxFuture","value":"","parent":{"krate":0,"index":14}}],"defs":[{"kind":"Mod","id":{"krate":0,"index":0},"span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\lib.rs","byte_start":0,"byte_end":5507,"line_start":1,"line_end":204,"column_start":1,"column_end":2},"name":"","qualname":"::","value":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\lib.rs","parent":null,"children":[{"krate":0,"index":1},{"krate":0,"index":2},{"krate":0,"index":3},{"krate":0,"index":10},{"krate":0,"index":458},{"krate":0,"index":14},{"krate":0,"index":340},{"krate":0,"index":409}],"decl_id":null,"docs":" Utilities for working with Tokio.","sig":null,"attributes":[{"value":"allow(clippy :: needless_doctest_main)","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\lib.rs","byte_start":0,"byte_end":40,"line_start":1,"line_end":1,"column_start":1,"column_end":41}},{"value":"warn(missing_debug_implementations, missing_docs, rust_2018_idioms,\nunreachable_pub)","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\lib.rs","byte_start":41,"byte_end":147,"line_start":2,"line_end":7,"column_start":1,"column_end":3}},{"value":"/ Utilities for working with Tokio.","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\lib.rs","byte_start":305,"byte_end":342,"line_start":14,"line_end":14,"column_start":1,"column_end":38}},{"value":"/","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\lib.rs","byte_start":343,"byte_end":346,"line_start":15,"line_end":15,"column_start":1,"column_end":4}},{"value":"/ This crate is not versioned in lockstep with the core","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\lib.rs","byte_start":347,"byte_end":404,"line_start":16,"line_end":16,"column_start":1,"column_end":58}},{"value":"/ [`tokio`] crate. However, `tokio-util` _will_ respect Rust's","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\lib.rs","byte_start":405,"byte_end":469,"line_start":17,"line_end":17,"column_start":1,"column_end":65}},{"value":"/ semantic versioning policy, especially with regard to breaking changes.","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\lib.rs","byte_start":470,"byte_end":545,"line_start":18,"line_end":18,"column_start":1,"column_end":76}},{"value":"/","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\lib.rs","byte_start":546,"byte_end":549,"line_start":19,"line_end":19,"column_start":1,"column_end":4}},{"value":"/ [`tokio`]: https://docs.rs/tokio","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\lib.rs","byte_start":550,"byte_end":586,"line_start":20,"line_end":20,"column_start":1,"column_end":37}}]},{"kind":"Mod","id":{"krate":0,"index":458},"span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\mod.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"codec","qualname":"::codec","value":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\mod.rs","parent":null,"children":[{"krate":0,"index":459},{"krate":0,"index":491},{"krate":0,"index":494},{"krate":0,"index":518},{"krate":0,"index":521},{"krate":0,"index":532},{"krate":0,"index":535},{"krate":0,"index":632},{"krate":0,"index":633},{"krate":0,"index":636},{"krate":0,"index":639},{"krate":0,"index":642},{"krate":0,"index":645},{"krate":0,"index":747},{"krate":0,"index":748},{"krate":0,"index":751},{"krate":0,"index":754},{"krate":0,"index":831},{"krate":0,"index":834},{"krate":0,"index":913},{"krate":0,"index":916},{"krate":0,"index":1027},{"krate":0,"index":1028},{"krate":0,"index":1031},{"krate":0,"index":1034},{"krate":0,"index":1091},{"krate":0,"index":1092},{"krate":0,"index":1095},{"krate":0,"index":1098},{"krate":0,"index":1158},{"krate":0,"index":1159},{"krate":0,"index":1162}],"decl_id":null,"docs":" Adaptors from AsyncRead/AsyncWrite to Stream/Sink","sig":null,"attributes":[{"value":"cfg(feature = \"codec\")","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\cfg.rs","byte_start":5583,"byte_end":5608,"line_start":4,"line_end":4,"column_start":13,"column_end":38}},{"value":"/ Adaptors from AsyncRead/AsyncWrite to Stream/Sink","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\mod.rs","byte_start":17215542,"byte_end":17215595,"line_start":1,"line_end":1,"column_start":1,"column_end":54}},{"value":"/","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\mod.rs","byte_start":17215596,"byte_end":17215599,"line_start":2,"line_end":2,"column_start":1,"column_end":4}},{"value":"/ Raw I/O objects work with byte sequences, but higher-level code usually","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\mod.rs","byte_start":17215600,"byte_end":17215675,"line_start":3,"line_end":3,"column_start":1,"column_end":76}},{"value":"/ wants to batch these into meaningful chunks, called \"frames\".","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\mod.rs","byte_start":17215676,"byte_end":17215741,"line_start":4,"line_end":4,"column_start":1,"column_end":66}},{"value":"/","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\mod.rs","byte_start":17215742,"byte_end":17215745,"line_start":5,"line_end":5,"column_start":1,"column_end":4}},{"value":"/ This module contains adapters to go from streams of bytes, [`AsyncRead`] and","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\mod.rs","byte_start":17215746,"byte_end":17215826,"line_start":6,"line_end":6,"column_start":1,"column_end":81}},{"value":"/ [`AsyncWrite`], to framed streams implementing [`Sink`] and [`Stream`].","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\mod.rs","byte_start":17215827,"byte_end":17215902,"line_start":7,"line_end":7,"column_start":1,"column_end":76}},{"value":"/ Framed streams are also known as transports.","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\mod.rs","byte_start":17215903,"byte_end":17215951,"line_start":8,"line_end":8,"column_start":1,"column_end":49}},{"value":"/","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\mod.rs","byte_start":17215952,"byte_end":17215955,"line_start":9,"line_end":9,"column_start":1,"column_end":4}},{"value":"/ # The Decoder trait","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\mod.rs","byte_start":17215956,"byte_end":17215979,"line_start":10,"line_end":10,"column_start":1,"column_end":24}},{"value":"/","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\mod.rs","byte_start":17215980,"byte_end":17215983,"line_start":11,"line_end":11,"column_start":1,"column_end":4}},{"value":"/ A [`Decoder`] is used together with [`FramedRead`] or [`Framed`] to turn an","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\mod.rs","byte_start":17215984,"byte_end":17216063,"line_start":12,"line_end":12,"column_start":1,"column_end":80}},{"value":"/ [`AsyncRead`] into a [`Stream`]. The job of the decoder trait is to specify","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\mod.rs","byte_start":17216064,"byte_end":17216143,"line_start":13,"line_end":13,"column_start":1,"column_end":80}},{"value":"/ how sequences of bytes are turned into a sequence of frames, and to","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\mod.rs","byte_start":17216144,"byte_end":17216215,"line_start":14,"line_end":14,"column_start":1,"column_end":72}},{"value":"/ determine where the boundaries between frames are.  The job of the","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\mod.rs","byte_start":17216216,"byte_end":17216286,"line_start":15,"line_end":15,"column_start":1,"column_end":71}},{"value":"/ `FramedRead` is to repeatedly switch between reading more data from the IO","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\mod.rs","byte_start":17216287,"byte_end":17216365,"line_start":16,"line_end":16,"column_start":1,"column_end":79}},{"value":"/ resource, and asking the decoder whether we have received enough data to","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\mod.rs","byte_start":17216366,"byte_end":17216442,"line_start":17,"line_end":17,"column_start":1,"column_end":77}},{"value":"/ decode another frame of data.","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\mod.rs","byte_start":17216443,"byte_end":17216476,"line_start":18,"line_end":18,"column_start":1,"column_end":34}},{"value":"/","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\mod.rs","byte_start":17216477,"byte_end":17216480,"line_start":19,"line_end":19,"column_start":1,"column_end":4}},{"value":"/ The main method on the `Decoder` trait is the [`decode`] method. This method","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\mod.rs","byte_start":17216481,"byte_end":17216561,"line_start":20,"line_end":20,"column_start":1,"column_end":81}},{"value":"/ takes as argument the data that has been read so far, and when it is called,","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\mod.rs","byte_start":17216562,"byte_end":17216642,"line_start":21,"line_end":21,"column_start":1,"column_end":81}},{"value":"/ it will be in one of the following situations:","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\mod.rs","byte_start":17216643,"byte_end":17216693,"line_start":22,"line_end":22,"column_start":1,"column_end":51}},{"value":"/","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\mod.rs","byte_start":17216694,"byte_end":17216697,"line_start":23,"line_end":23,"column_start":1,"column_end":4}},{"value":"/  1. The buffer contains less than a full frame.","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\mod.rs","byte_start":17216698,"byte_end":17216749,"line_start":24,"line_end":24,"column_start":1,"column_end":52}},{"value":"/  2. The buffer contains exactly a full frame.","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\mod.rs","byte_start":17216750,"byte_end":17216799,"line_start":25,"line_end":25,"column_start":1,"column_end":50}},{"value":"/  3. The buffer contains more than a full frame.","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\mod.rs","byte_start":17216800,"byte_end":17216851,"line_start":26,"line_end":26,"column_start":1,"column_end":52}},{"value":"/","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\mod.rs","byte_start":17216852,"byte_end":17216855,"line_start":27,"line_end":27,"column_start":1,"column_end":4}},{"value":"/ In the first situation, the decoder should return `Ok(None)`.","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\mod.rs","byte_start":17216856,"byte_end":17216921,"line_start":28,"line_end":28,"column_start":1,"column_end":66}},{"value":"/","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\mod.rs","byte_start":17216922,"byte_end":17216925,"line_start":29,"line_end":29,"column_start":1,"column_end":4}},{"value":"/ In the second situation, the decoder should clear the provided buffer and","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\mod.rs","byte_start":17216926,"byte_end":17217003,"line_start":30,"line_end":30,"column_start":1,"column_end":78}},{"value":"/ return `Ok(Some(the_decoded_frame))`.","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\mod.rs","byte_start":17217004,"byte_end":17217045,"line_start":31,"line_end":31,"column_start":1,"column_end":42}},{"value":"/","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\mod.rs","byte_start":17217046,"byte_end":17217049,"line_start":32,"line_end":32,"column_start":1,"column_end":4}},{"value":"/ In the third situation, the decoder should use a method such as [`split_to`]","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\mod.rs","byte_start":17217050,"byte_end":17217130,"line_start":33,"line_end":33,"column_start":1,"column_end":81}},{"value":"/ or [`advance`] to modify the buffer such that the frame is removed from the","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\mod.rs","byte_start":17217131,"byte_end":17217210,"line_start":34,"line_end":34,"column_start":1,"column_end":80}},{"value":"/ buffer, but any data in the buffer after that frame should still remain in","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\mod.rs","byte_start":17217211,"byte_end":17217289,"line_start":35,"line_end":35,"column_start":1,"column_end":79}},{"value":"/ the buffer. The decoder should also return `Ok(Some(the_decoded_frame))` in","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\mod.rs","byte_start":17217290,"byte_end":17217369,"line_start":36,"line_end":36,"column_start":1,"column_end":80}},{"value":"/ this case.","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\mod.rs","byte_start":17217370,"byte_end":17217384,"line_start":37,"line_end":37,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\mod.rs","byte_start":17217385,"byte_end":17217388,"line_start":38,"line_end":38,"column_start":1,"column_end":4}},{"value":"/ Finally the decoder may return an error if the data is invalid in some way.","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\mod.rs","byte_start":17217389,"byte_end":17217468,"line_start":39,"line_end":39,"column_start":1,"column_end":80}},{"value":"/ The decoder should _not_ return an error just because it has yet to receive","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\mod.rs","byte_start":17217469,"byte_end":17217548,"line_start":40,"line_end":40,"column_start":1,"column_end":80}},{"value":"/ a full frame.","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\mod.rs","byte_start":17217549,"byte_end":17217566,"line_start":41,"line_end":41,"column_start":1,"column_end":18}},{"value":"/","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\mod.rs","byte_start":17217567,"byte_end":17217570,"line_start":42,"line_end":42,"column_start":1,"column_end":4}},{"value":"/ It is guaranteed that, from one call to `decode` to another, the provided","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\mod.rs","byte_start":17217571,"byte_end":17217648,"line_start":43,"line_end":43,"column_start":1,"column_end":78}},{"value":"/ buffer will contain the exact same data as before, except that if more data","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\mod.rs","byte_start":17217649,"byte_end":17217728,"line_start":44,"line_end":44,"column_start":1,"column_end":80}},{"value":"/ has arrived through the IO resource, that data will have been appended to","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\mod.rs","byte_start":17217729,"byte_end":17217806,"line_start":45,"line_end":45,"column_start":1,"column_end":78}},{"value":"/ the buffer.  This means that reading frames from a `FramedRead` is","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\mod.rs","byte_start":17217807,"byte_end":17217877,"line_start":46,"line_end":46,"column_start":1,"column_end":71}},{"value":"/ essentially equivalent to the following loop:","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\mod.rs","byte_start":17217878,"byte_end":17217927,"line_start":47,"line_end":47,"column_start":1,"column_end":50}},{"value":"/","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\mod.rs","byte_start":17217928,"byte_end":17217931,"line_start":48,"line_end":48,"column_start":1,"column_end":4}},{"value":"/ ```no_run","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\mod.rs","byte_start":17217932,"byte_end":17217945,"line_start":49,"line_end":49,"column_start":1,"column_end":14}},{"value":"/ use tokio::io::AsyncReadExt;","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\mod.rs","byte_start":17217946,"byte_end":17217978,"line_start":50,"line_end":50,"column_start":1,"column_end":33}},{"value":"/ # // This uses async_stream to create an example that compiles.","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\mod.rs","byte_start":17217979,"byte_end":17218046,"line_start":51,"line_end":51,"column_start":1,"column_end":68}},{"value":"/ # fn foo() -> impl futures_core::Stream<Item = std::io::Result<bytes::BytesMut>> { async_stream::try_stream! {","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\mod.rs","byte_start":17218047,"byte_end":17218161,"line_start":52,"line_end":52,"column_start":1,"column_end":115}},{"value":"/ # use tokio_util::codec::Decoder;","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\mod.rs","byte_start":17218162,"byte_end":17218199,"line_start":53,"line_end":53,"column_start":1,"column_end":38}},{"value":"/ # let mut decoder = tokio_util::codec::BytesCodec::new();","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\mod.rs","byte_start":17218200,"byte_end":17218261,"line_start":54,"line_end":54,"column_start":1,"column_end":62}},{"value":"/ # let io_resource = &mut &[0u8, 1, 2, 3][..];","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\mod.rs","byte_start":17218262,"byte_end":17218311,"line_start":55,"line_end":55,"column_start":1,"column_end":50}},{"value":"/","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\mod.rs","byte_start":17218312,"byte_end":17218315,"line_start":56,"line_end":56,"column_start":1,"column_end":4}},{"value":"/ let mut buf = bytes::BytesMut::new();","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\mod.rs","byte_start":17218316,"byte_end":17218357,"line_start":57,"line_end":57,"column_start":1,"column_end":42}},{"value":"/ loop {","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\mod.rs","byte_start":17218358,"byte_end":17218368,"line_start":58,"line_end":58,"column_start":1,"column_end":11}},{"value":"/     // The read_buf call will append to buf rather than overwrite existing data.","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\mod.rs","byte_start":17218369,"byte_end":17218453,"line_start":59,"line_end":59,"column_start":1,"column_end":85}},{"value":"/     let len = io_resource.read_buf(&mut buf).await?;","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\mod.rs","byte_start":17218454,"byte_end":17218510,"line_start":60,"line_end":60,"column_start":1,"column_end":57}},{"value":"/","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\mod.rs","byte_start":17218511,"byte_end":17218514,"line_start":61,"line_end":61,"column_start":1,"column_end":4}},{"value":"/     if len == 0 {","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\mod.rs","byte_start":17218515,"byte_end":17218536,"line_start":62,"line_end":62,"column_start":1,"column_end":22}},{"value":"/         while let Some(frame) = decoder.decode_eof(&mut buf)? {","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\mod.rs","byte_start":17218537,"byte_end":17218604,"line_start":63,"line_end":63,"column_start":1,"column_end":68}},{"value":"/             yield frame;","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\mod.rs","byte_start":17218605,"byte_end":17218633,"line_start":64,"line_end":64,"column_start":1,"column_end":29}},{"value":"/         }","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\mod.rs","byte_start":17218634,"byte_end":17218647,"line_start":65,"line_end":65,"column_start":1,"column_end":14}},{"value":"/         break;","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\mod.rs","byte_start":17218648,"byte_end":17218666,"line_start":66,"line_end":66,"column_start":1,"column_end":19}},{"value":"/     }","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\mod.rs","byte_start":17218667,"byte_end":17218676,"line_start":67,"line_end":67,"column_start":1,"column_end":10}},{"value":"/","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\mod.rs","byte_start":17218677,"byte_end":17218680,"line_start":68,"line_end":68,"column_start":1,"column_end":4}},{"value":"/     while let Some(frame) = decoder.decode(&mut buf)? {","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\mod.rs","byte_start":17218681,"byte_end":17218740,"line_start":69,"line_end":69,"column_start":1,"column_end":60}},{"value":"/         yield frame;","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\mod.rs","byte_start":17218741,"byte_end":17218765,"line_start":70,"line_end":70,"column_start":1,"column_end":25}},{"value":"/     }","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\mod.rs","byte_start":17218766,"byte_end":17218775,"line_start":71,"line_end":71,"column_start":1,"column_end":10}},{"value":"/ }","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\mod.rs","byte_start":17218776,"byte_end":17218781,"line_start":72,"line_end":72,"column_start":1,"column_end":6}},{"value":"/ # }}","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\mod.rs","byte_start":17218782,"byte_end":17218790,"line_start":73,"line_end":73,"column_start":1,"column_end":9}},{"value":"/ ```","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\mod.rs","byte_start":17218791,"byte_end":17218798,"line_start":74,"line_end":74,"column_start":1,"column_end":8}},{"value":"/ The example above uses `yield` whenever the `Stream` produces an item.","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\mod.rs","byte_start":17218799,"byte_end":17218873,"line_start":75,"line_end":75,"column_start":1,"column_end":75}},{"value":"/","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\mod.rs","byte_start":17218874,"byte_end":17218877,"line_start":76,"line_end":76,"column_start":1,"column_end":4}},{"value":"/ ## Example decoder","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\mod.rs","byte_start":17218878,"byte_end":17218900,"line_start":77,"line_end":77,"column_start":1,"column_end":23}},{"value":"/","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\mod.rs","byte_start":17218901,"byte_end":17218904,"line_start":78,"line_end":78,"column_start":1,"column_end":4}},{"value":"/ As an example, consider a protocol that can be used to send strings where","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\mod.rs","byte_start":17218905,"byte_end":17218982,"line_start":79,"line_end":79,"column_start":1,"column_end":78}},{"value":"/ each frame is a four byte integer that contains the length of the frame,","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\mod.rs","byte_start":17218983,"byte_end":17219059,"line_start":80,"line_end":80,"column_start":1,"column_end":77}},{"value":"/ followed by that many bytes of string data. The decoder fails with an error","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\mod.rs","byte_start":17219060,"byte_end":17219139,"line_start":81,"line_end":81,"column_start":1,"column_end":80}},{"value":"/ if the string data is not valid utf-8 or too long.","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\mod.rs","byte_start":17219140,"byte_end":17219194,"line_start":82,"line_end":82,"column_start":1,"column_end":55}},{"value":"/","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\mod.rs","byte_start":17219195,"byte_end":17219198,"line_start":83,"line_end":83,"column_start":1,"column_end":4}},{"value":"/ Such a decoder can be written like this:","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\mod.rs","byte_start":17219199,"byte_end":17219243,"line_start":84,"line_end":84,"column_start":1,"column_end":45}},{"value":"/ ```","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\mod.rs","byte_start":17219244,"byte_end":17219251,"line_start":85,"line_end":85,"column_start":1,"column_end":8}},{"value":"/ use tokio_util::codec::Decoder;","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\mod.rs","byte_start":17219252,"byte_end":17219287,"line_start":86,"line_end":86,"column_start":1,"column_end":36}},{"value":"/ use bytes::{BytesMut, Buf};","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\mod.rs","byte_start":17219288,"byte_end":17219319,"line_start":87,"line_end":87,"column_start":1,"column_end":32}},{"value":"/","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\mod.rs","byte_start":17219320,"byte_end":17219323,"line_start":88,"line_end":88,"column_start":1,"column_end":4}},{"value":"/ struct MyStringDecoder {}","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\mod.rs","byte_start":17219324,"byte_end":17219353,"line_start":89,"line_end":89,"column_start":1,"column_end":30}},{"value":"/","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\mod.rs","byte_start":17219354,"byte_end":17219357,"line_start":90,"line_end":90,"column_start":1,"column_end":4}},{"value":"/ const MAX: usize = 8 * 1024 * 1024;","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\mod.rs","byte_start":17219358,"byte_end":17219397,"line_start":91,"line_end":91,"column_start":1,"column_end":40}},{"value":"/","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\mod.rs","byte_start":17219398,"byte_end":17219401,"line_start":92,"line_end":92,"column_start":1,"column_end":4}},{"value":"/ impl Decoder for MyStringDecoder {","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\mod.rs","byte_start":17219402,"byte_end":17219440,"line_start":93,"line_end":93,"column_start":1,"column_end":39}},{"value":"/     type Item = String;","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\mod.rs","byte_start":17219441,"byte_end":17219468,"line_start":94,"line_end":94,"column_start":1,"column_end":28}},{"value":"/     type Error = std::io::Error;","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\mod.rs","byte_start":17219469,"byte_end":17219505,"line_start":95,"line_end":95,"column_start":1,"column_end":37}},{"value":"/","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\mod.rs","byte_start":17219506,"byte_end":17219509,"line_start":96,"line_end":96,"column_start":1,"column_end":4}},{"value":"/     fn decode(","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\mod.rs","byte_start":17219510,"byte_end":17219528,"line_start":97,"line_end":97,"column_start":1,"column_end":19}},{"value":"/         &mut self,","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\mod.rs","byte_start":17219529,"byte_end":17219551,"line_start":98,"line_end":98,"column_start":1,"column_end":23}},{"value":"/         src: &mut BytesMut","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\mod.rs","byte_start":17219552,"byte_end":17219582,"line_start":99,"line_end":99,"column_start":1,"column_end":31}},{"value":"/     ) -> Result<Option<Self::Item>, Self::Error> {","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\mod.rs","byte_start":17219583,"byte_end":17219637,"line_start":100,"line_end":100,"column_start":1,"column_end":55}},{"value":"/         if src.len() < 4 {","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\mod.rs","byte_start":17219638,"byte_end":17219668,"line_start":101,"line_end":101,"column_start":1,"column_end":31}},{"value":"/             // Not enough data to read length marker.","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\mod.rs","byte_start":17219669,"byte_end":17219726,"line_start":102,"line_end":102,"column_start":1,"column_end":58}},{"value":"/             return Ok(None);","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\mod.rs","byte_start":17219727,"byte_end":17219759,"line_start":103,"line_end":103,"column_start":1,"column_end":33}},{"value":"/         }","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\mod.rs","byte_start":17219760,"byte_end":17219773,"line_start":104,"line_end":104,"column_start":1,"column_end":14}},{"value":"/","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\mod.rs","byte_start":17219774,"byte_end":17219777,"line_start":105,"line_end":105,"column_start":1,"column_end":4}},{"value":"/         // Read length marker.","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\mod.rs","byte_start":17219778,"byte_end":17219812,"line_start":106,"line_end":106,"column_start":1,"column_end":35}},{"value":"/         let mut length_bytes = [0u8; 4];","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\mod.rs","byte_start":17219813,"byte_end":17219857,"line_start":107,"line_end":107,"column_start":1,"column_end":45}},{"value":"/         length_bytes.copy_from_slice(&src[..4]);","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\mod.rs","byte_start":17219858,"byte_end":17219910,"line_start":108,"line_end":108,"column_start":1,"column_end":53}},{"value":"/         let length = u32::from_le_bytes(length_bytes) as usize;","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\mod.rs","byte_start":17219911,"byte_end":17219978,"line_start":109,"line_end":109,"column_start":1,"column_end":68}},{"value":"/","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\mod.rs","byte_start":17219979,"byte_end":17219982,"line_start":110,"line_end":110,"column_start":1,"column_end":4}},{"value":"/         // Check that the length is not too large to avoid a denial of","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\mod.rs","byte_start":17219983,"byte_end":17220057,"line_start":111,"line_end":111,"column_start":1,"column_end":75}},{"value":"/         // service attack where the server runs out of memory.","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\mod.rs","byte_start":17220058,"byte_end":17220124,"line_start":112,"line_end":112,"column_start":1,"column_end":67}},{"value":"/         if length > MAX {","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\mod.rs","byte_start":17220125,"byte_end":17220154,"line_start":113,"line_end":113,"column_start":1,"column_end":30}},{"value":"/             return Err(std::io::Error::new(","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\mod.rs","byte_start":17220155,"byte_end":17220202,"line_start":114,"line_end":114,"column_start":1,"column_end":48}},{"value":"/                 std::io::ErrorKind::InvalidData,","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\mod.rs","byte_start":17220203,"byte_end":17220255,"line_start":115,"line_end":115,"column_start":1,"column_end":53}},{"value":"/                 format!(\"Frame of length {} is too large.\", length)","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\mod.rs","byte_start":17220256,"byte_end":17220327,"line_start":116,"line_end":116,"column_start":1,"column_end":72}},{"value":"/             ));","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\mod.rs","byte_start":17220328,"byte_end":17220347,"line_start":117,"line_end":117,"column_start":1,"column_end":20}},{"value":"/         }","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\mod.rs","byte_start":17220348,"byte_end":17220361,"line_start":118,"line_end":118,"column_start":1,"column_end":14}},{"value":"/","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\mod.rs","byte_start":17220362,"byte_end":17220365,"line_start":119,"line_end":119,"column_start":1,"column_end":4}},{"value":"/         if src.len() < 4 + length {","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\mod.rs","byte_start":17220366,"byte_end":17220405,"line_start":120,"line_end":120,"column_start":1,"column_end":40}},{"value":"/             // The full string has not yet arrived.","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\mod.rs","byte_start":17220406,"byte_end":17220461,"line_start":121,"line_end":121,"column_start":1,"column_end":56}},{"value":"/             //","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\mod.rs","byte_start":17220462,"byte_end":17220480,"line_start":122,"line_end":122,"column_start":1,"column_end":19}},{"value":"/             // We reserve more space in the buffer. This is not strictly","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\mod.rs","byte_start":17220481,"byte_end":17220557,"line_start":123,"line_end":123,"column_start":1,"column_end":77}},{"value":"/             // necessary, but is a good idea performance-wise.","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\mod.rs","byte_start":17220558,"byte_end":17220624,"line_start":124,"line_end":124,"column_start":1,"column_end":67}},{"value":"/             src.reserve(4 + length - src.len());","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\mod.rs","byte_start":17220625,"byte_end":17220677,"line_start":125,"line_end":125,"column_start":1,"column_end":53}},{"value":"/","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\mod.rs","byte_start":17220678,"byte_end":17220681,"line_start":126,"line_end":126,"column_start":1,"column_end":4}},{"value":"/             // We inform the Framed that we need more bytes to form the next","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\mod.rs","byte_start":17220682,"byte_end":17220762,"line_start":127,"line_end":127,"column_start":1,"column_end":81}},{"value":"/             // frame.","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\mod.rs","byte_start":17220763,"byte_end":17220788,"line_start":128,"line_end":128,"column_start":1,"column_end":26}},{"value":"/             return Ok(None);","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\mod.rs","byte_start":17220789,"byte_end":17220821,"line_start":129,"line_end":129,"column_start":1,"column_end":33}},{"value":"/         }","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\mod.rs","byte_start":17220822,"byte_end":17220835,"line_start":130,"line_end":130,"column_start":1,"column_end":14}},{"value":"/","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\mod.rs","byte_start":17220836,"byte_end":17220839,"line_start":131,"line_end":131,"column_start":1,"column_end":4}},{"value":"/         // Use advance to modify src such that it no longer contains","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\mod.rs","byte_start":17220840,"byte_end":17220912,"line_start":132,"line_end":132,"column_start":1,"column_end":73}},{"value":"/         // this frame.","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\mod.rs","byte_start":17220913,"byte_end":17220939,"line_start":133,"line_end":133,"column_start":1,"column_end":27}},{"value":"/         let data = src[4..4 + length].to_vec();","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\mod.rs","byte_start":17220940,"byte_end":17220991,"line_start":134,"line_end":134,"column_start":1,"column_end":52}},{"value":"/         src.advance(4 + length);","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\mod.rs","byte_start":17220992,"byte_end":17221028,"line_start":135,"line_end":135,"column_start":1,"column_end":37}},{"value":"/","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\mod.rs","byte_start":17221029,"byte_end":17221032,"line_start":136,"line_end":136,"column_start":1,"column_end":4}},{"value":"/         // Convert the data to a string, or fail if it is not valid utf-8.","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\mod.rs","byte_start":17221033,"byte_end":17221111,"line_start":137,"line_end":137,"column_start":1,"column_end":79}},{"value":"/         match String::from_utf8(data) {","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\mod.rs","byte_start":17221112,"byte_end":17221155,"line_start":138,"line_end":138,"column_start":1,"column_end":44}},{"value":"/             Ok(string) => Ok(Some(string)),","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\mod.rs","byte_start":17221156,"byte_end":17221203,"line_start":139,"line_end":139,"column_start":1,"column_end":48}},{"value":"/             Err(utf8_error) => {","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\mod.rs","byte_start":17221204,"byte_end":17221240,"line_start":140,"line_end":140,"column_start":1,"column_end":37}},{"value":"/                 Err(std::io::Error::new(","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\mod.rs","byte_start":17221241,"byte_end":17221285,"line_start":141,"line_end":141,"column_start":1,"column_end":45}},{"value":"/                     std::io::ErrorKind::InvalidData,","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\mod.rs","byte_start":17221286,"byte_end":17221342,"line_start":142,"line_end":142,"column_start":1,"column_end":57}},{"value":"/                     utf8_error.utf8_error(),","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\mod.rs","byte_start":17221343,"byte_end":17221391,"line_start":143,"line_end":143,"column_start":1,"column_end":49}},{"value":"/                 ))","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\mod.rs","byte_start":17221392,"byte_end":17221414,"line_start":144,"line_end":144,"column_start":1,"column_end":23}},{"value":"/             },","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\mod.rs","byte_start":17221415,"byte_end":17221433,"line_start":145,"line_end":145,"column_start":1,"column_end":19}},{"value":"/         }","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\mod.rs","byte_start":17221434,"byte_end":17221447,"line_start":146,"line_end":146,"column_start":1,"column_end":14}},{"value":"/     }","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\mod.rs","byte_start":17221448,"byte_end":17221457,"line_start":147,"line_end":147,"column_start":1,"column_end":10}},{"value":"/ }","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\mod.rs","byte_start":17221458,"byte_end":17221463,"line_start":148,"line_end":148,"column_start":1,"column_end":6}},{"value":"/ ```","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\mod.rs","byte_start":17221464,"byte_end":17221471,"line_start":149,"line_end":149,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\mod.rs","byte_start":17221472,"byte_end":17221475,"line_start":150,"line_end":150,"column_start":1,"column_end":4}},{"value":"/ # The Encoder trait","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\mod.rs","byte_start":17221476,"byte_end":17221499,"line_start":151,"line_end":151,"column_start":1,"column_end":24}},{"value":"/","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\mod.rs","byte_start":17221500,"byte_end":17221503,"line_start":152,"line_end":152,"column_start":1,"column_end":4}},{"value":"/ An [`Encoder`] is used together with [`FramedWrite`] or [`Framed`] to turn","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\mod.rs","byte_start":17221504,"byte_end":17221582,"line_start":153,"line_end":153,"column_start":1,"column_end":79}},{"value":"/ an [`AsyncWrite`] into a [`Sink`]. The job of the encoder trait is to","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\mod.rs","byte_start":17221583,"byte_end":17221656,"line_start":154,"line_end":154,"column_start":1,"column_end":74}},{"value":"/ specify how frames are turned into a sequences of bytes.  The job of the","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\mod.rs","byte_start":17221657,"byte_end":17221733,"line_start":155,"line_end":155,"column_start":1,"column_end":77}},{"value":"/ `FramedWrite` is to take the resulting sequence of bytes and write it to the","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\mod.rs","byte_start":17221734,"byte_end":17221814,"line_start":156,"line_end":156,"column_start":1,"column_end":81}},{"value":"/ IO resource.","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\mod.rs","byte_start":17221815,"byte_end":17221831,"line_start":157,"line_end":157,"column_start":1,"column_end":17}},{"value":"/","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\mod.rs","byte_start":17221832,"byte_end":17221835,"line_start":158,"line_end":158,"column_start":1,"column_end":4}},{"value":"/ The main method on the `Encoder` trait is the [`encode`] method. This method","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\mod.rs","byte_start":17221836,"byte_end":17221916,"line_start":159,"line_end":159,"column_start":1,"column_end":81}},{"value":"/ takes an item that is being written, and a buffer to write the item to. The","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\mod.rs","byte_start":17221917,"byte_end":17221996,"line_start":160,"line_end":160,"column_start":1,"column_end":80}},{"value":"/ buffer may already contain data, and in this case, the encoder should append","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\mod.rs","byte_start":17221997,"byte_end":17222077,"line_start":161,"line_end":161,"column_start":1,"column_end":81}},{"value":"/ the new frame the to buffer rather than overwrite the existing data.","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\mod.rs","byte_start":17222078,"byte_end":17222150,"line_start":162,"line_end":162,"column_start":1,"column_end":73}},{"value":"/","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\mod.rs","byte_start":17222151,"byte_end":17222154,"line_start":163,"line_end":163,"column_start":1,"column_end":4}},{"value":"/ It is guaranteed that, from one call to `encode` to another, the provided","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\mod.rs","byte_start":17222155,"byte_end":17222232,"line_start":164,"line_end":164,"column_start":1,"column_end":78}},{"value":"/ buffer will contain the exact same data as before, except that some of the","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\mod.rs","byte_start":17222233,"byte_end":17222311,"line_start":165,"line_end":165,"column_start":1,"column_end":79}},{"value":"/ data may have been removed from the front of the buffer. Writing to a","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\mod.rs","byte_start":17222312,"byte_end":17222385,"line_start":166,"line_end":166,"column_start":1,"column_end":74}},{"value":"/ `FramedWrite` is essentially equivalent to the following loop:","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\mod.rs","byte_start":17222386,"byte_end":17222452,"line_start":167,"line_end":167,"column_start":1,"column_end":67}},{"value":"/","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\mod.rs","byte_start":17222453,"byte_end":17222456,"line_start":168,"line_end":168,"column_start":1,"column_end":4}},{"value":"/ ```no_run","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\mod.rs","byte_start":17222457,"byte_end":17222470,"line_start":169,"line_end":169,"column_start":1,"column_end":14}},{"value":"/ use tokio::io::AsyncWriteExt;","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\mod.rs","byte_start":17222471,"byte_end":17222504,"line_start":170,"line_end":170,"column_start":1,"column_end":34}},{"value":"/ use bytes::Buf; // for advance","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\mod.rs","byte_start":17222505,"byte_end":17222539,"line_start":171,"line_end":171,"column_start":1,"column_end":35}},{"value":"/ # use tokio_util::codec::Encoder;","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\mod.rs","byte_start":17222540,"byte_end":17222577,"line_start":172,"line_end":172,"column_start":1,"column_end":38}},{"value":"/ # async fn next_frame() -> bytes::Bytes { bytes::Bytes::new() }","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\mod.rs","byte_start":17222578,"byte_end":17222645,"line_start":173,"line_end":173,"column_start":1,"column_end":68}},{"value":"/ # async fn no_more_frames() { }","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\mod.rs","byte_start":17222646,"byte_end":17222681,"line_start":174,"line_end":174,"column_start":1,"column_end":36}},{"value":"/ # #[tokio::main] async fn main() -> std::io::Result<()> {","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\mod.rs","byte_start":17222682,"byte_end":17222743,"line_start":175,"line_end":175,"column_start":1,"column_end":62}},{"value":"/ # let mut io_resource = tokio::io::sink();","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\mod.rs","byte_start":17222744,"byte_end":17222790,"line_start":176,"line_end":176,"column_start":1,"column_end":47}},{"value":"/ # let mut encoder = tokio_util::codec::BytesCodec::new();","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\mod.rs","byte_start":17222791,"byte_end":17222852,"line_start":177,"line_end":177,"column_start":1,"column_end":62}},{"value":"/","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\mod.rs","byte_start":17222853,"byte_end":17222856,"line_start":178,"line_end":178,"column_start":1,"column_end":4}},{"value":"/ const MAX: usize = 8192;","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\mod.rs","byte_start":17222857,"byte_end":17222885,"line_start":179,"line_end":179,"column_start":1,"column_end":29}},{"value":"/","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\mod.rs","byte_start":17222886,"byte_end":17222889,"line_start":180,"line_end":180,"column_start":1,"column_end":4}},{"value":"/ let mut buf = bytes::BytesMut::new();","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\mod.rs","byte_start":17222890,"byte_end":17222931,"line_start":181,"line_end":181,"column_start":1,"column_end":42}},{"value":"/ loop {","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\mod.rs","byte_start":17222932,"byte_end":17222942,"line_start":182,"line_end":182,"column_start":1,"column_end":11}},{"value":"/     tokio::select! {","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\mod.rs","byte_start":17222943,"byte_end":17222967,"line_start":183,"line_end":183,"column_start":1,"column_end":25}},{"value":"/         num_written = io_resource.write(&buf), if !buf.is_empty() => {","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\mod.rs","byte_start":17222968,"byte_end":17223042,"line_start":184,"line_end":184,"column_start":1,"column_end":75}},{"value":"/             buf.advance(num_written?);","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\mod.rs","byte_start":17223043,"byte_end":17223085,"line_start":185,"line_end":185,"column_start":1,"column_end":43}},{"value":"/         },","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\mod.rs","byte_start":17223086,"byte_end":17223100,"line_start":186,"line_end":186,"column_start":1,"column_end":15}},{"value":"/         frame = next_frame(), if buf.len() < MAX => {","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\mod.rs","byte_start":17223101,"byte_end":17223158,"line_start":187,"line_end":187,"column_start":1,"column_end":58}},{"value":"/             encoder.encode(frame, &mut buf)?;","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\mod.rs","byte_start":17223159,"byte_end":17223208,"line_start":188,"line_end":188,"column_start":1,"column_end":50}},{"value":"/         },","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\mod.rs","byte_start":17223209,"byte_end":17223223,"line_start":189,"line_end":189,"column_start":1,"column_end":15}},{"value":"/         _ = no_more_frames() => {","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\mod.rs","byte_start":17223224,"byte_end":17223261,"line_start":190,"line_end":190,"column_start":1,"column_end":38}},{"value":"/             io_resource.write_all(&buf).await?;","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\mod.rs","byte_start":17223262,"byte_end":17223313,"line_start":191,"line_end":191,"column_start":1,"column_end":52}},{"value":"/             io_resource.shutdown().await?;","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\mod.rs","byte_start":17223314,"byte_end":17223360,"line_start":192,"line_end":192,"column_start":1,"column_end":47}},{"value":"/             return Ok(());","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\mod.rs","byte_start":17223361,"byte_end":17223391,"line_start":193,"line_end":193,"column_start":1,"column_end":31}},{"value":"/         },","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\mod.rs","byte_start":17223392,"byte_end":17223406,"line_start":194,"line_end":194,"column_start":1,"column_end":15}},{"value":"/     }","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\mod.rs","byte_start":17223407,"byte_end":17223416,"line_start":195,"line_end":195,"column_start":1,"column_end":10}},{"value":"/ }","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\mod.rs","byte_start":17223417,"byte_end":17223422,"line_start":196,"line_end":196,"column_start":1,"column_end":6}},{"value":"/ # }","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\mod.rs","byte_start":17223423,"byte_end":17223430,"line_start":197,"line_end":197,"column_start":1,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\mod.rs","byte_start":17223431,"byte_end":17223438,"line_start":198,"line_end":198,"column_start":1,"column_end":8}},{"value":"/ Here the `next_frame` method corresponds to any frames you write to the","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\mod.rs","byte_start":17223439,"byte_end":17223514,"line_start":199,"line_end":199,"column_start":1,"column_end":76}},{"value":"/ `FramedWrite`. The `no_more_frames` method corresponds to closing the","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\mod.rs","byte_start":17223515,"byte_end":17223588,"line_start":200,"line_end":200,"column_start":1,"column_end":74}},{"value":"/ `FramedWrite` with [`SinkExt::close`].","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\mod.rs","byte_start":17223589,"byte_end":17223631,"line_start":201,"line_end":201,"column_start":1,"column_end":43}},{"value":"/","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\mod.rs","byte_start":17223632,"byte_end":17223635,"line_start":202,"line_end":202,"column_start":1,"column_end":4}},{"value":"/ ## Example encoder","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\mod.rs","byte_start":17223636,"byte_end":17223658,"line_start":203,"line_end":203,"column_start":1,"column_end":23}},{"value":"/","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\mod.rs","byte_start":17223659,"byte_end":17223662,"line_start":204,"line_end":204,"column_start":1,"column_end":4}},{"value":"/ As an example, consider a protocol that can be used to send strings where","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\mod.rs","byte_start":17223663,"byte_end":17223740,"line_start":205,"line_end":205,"column_start":1,"column_end":78}},{"value":"/ each frame is a four byte integer that contains the length of the frame,","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\mod.rs","byte_start":17223741,"byte_end":17223817,"line_start":206,"line_end":206,"column_start":1,"column_end":77}},{"value":"/ followed by that many bytes of string data. The encoder will fail if the","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\mod.rs","byte_start":17223818,"byte_end":17223894,"line_start":207,"line_end":207,"column_start":1,"column_end":77}},{"value":"/ string is too long.","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\mod.rs","byte_start":17223895,"byte_end":17223918,"line_start":208,"line_end":208,"column_start":1,"column_end":24}},{"value":"/","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\mod.rs","byte_start":17223919,"byte_end":17223922,"line_start":209,"line_end":209,"column_start":1,"column_end":4}},{"value":"/ Such an encoder can be written like this:","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\mod.rs","byte_start":17223923,"byte_end":17223968,"line_start":210,"line_end":210,"column_start":1,"column_end":46}},{"value":"/ ```","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\mod.rs","byte_start":17223969,"byte_end":17223976,"line_start":211,"line_end":211,"column_start":1,"column_end":8}},{"value":"/ use tokio_util::codec::Encoder;","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\mod.rs","byte_start":17223977,"byte_end":17224012,"line_start":212,"line_end":212,"column_start":1,"column_end":36}},{"value":"/ use bytes::BytesMut;","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\mod.rs","byte_start":17224013,"byte_end":17224037,"line_start":213,"line_end":213,"column_start":1,"column_end":25}},{"value":"/","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\mod.rs","byte_start":17224038,"byte_end":17224041,"line_start":214,"line_end":214,"column_start":1,"column_end":4}},{"value":"/ struct MyStringEncoder {}","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\mod.rs","byte_start":17224042,"byte_end":17224071,"line_start":215,"line_end":215,"column_start":1,"column_end":30}},{"value":"/","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\mod.rs","byte_start":17224072,"byte_end":17224075,"line_start":216,"line_end":216,"column_start":1,"column_end":4}},{"value":"/ const MAX: usize = 8 * 1024 * 1024;","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\mod.rs","byte_start":17224076,"byte_end":17224115,"line_start":217,"line_end":217,"column_start":1,"column_end":40}},{"value":"/","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\mod.rs","byte_start":17224116,"byte_end":17224119,"line_start":218,"line_end":218,"column_start":1,"column_end":4}},{"value":"/ impl Encoder<String> for MyStringEncoder {","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\mod.rs","byte_start":17224120,"byte_end":17224166,"line_start":219,"line_end":219,"column_start":1,"column_end":47}},{"value":"/     type Error = std::io::Error;","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\mod.rs","byte_start":17224167,"byte_end":17224203,"line_start":220,"line_end":220,"column_start":1,"column_end":37}},{"value":"/","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\mod.rs","byte_start":17224204,"byte_end":17224207,"line_start":221,"line_end":221,"column_start":1,"column_end":4}},{"value":"/     fn encode(&mut self, item: String, dst: &mut BytesMut) -> Result<(), Self::Error> {","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\mod.rs","byte_start":17224208,"byte_end":17224299,"line_start":222,"line_end":222,"column_start":1,"column_end":92}},{"value":"/         // Don't send a string if it is longer than the other end will","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\mod.rs","byte_start":17224300,"byte_end":17224374,"line_start":223,"line_end":223,"column_start":1,"column_end":75}},{"value":"/         // accept.","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\mod.rs","byte_start":17224375,"byte_end":17224397,"line_start":224,"line_end":224,"column_start":1,"column_end":23}},{"value":"/         if item.len() > MAX {","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\mod.rs","byte_start":17224398,"byte_end":17224431,"line_start":225,"line_end":225,"column_start":1,"column_end":34}},{"value":"/             return Err(std::io::Error::new(","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\mod.rs","byte_start":17224432,"byte_end":17224479,"line_start":226,"line_end":226,"column_start":1,"column_end":48}},{"value":"/                 std::io::ErrorKind::InvalidData,","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\mod.rs","byte_start":17224480,"byte_end":17224532,"line_start":227,"line_end":227,"column_start":1,"column_end":53}},{"value":"/                 format!(\"Frame of length {} is too large.\", item.len())","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\mod.rs","byte_start":17224533,"byte_end":17224608,"line_start":228,"line_end":228,"column_start":1,"column_end":76}},{"value":"/             ));","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\mod.rs","byte_start":17224609,"byte_end":17224628,"line_start":229,"line_end":229,"column_start":1,"column_end":20}},{"value":"/         }","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\mod.rs","byte_start":17224629,"byte_end":17224642,"line_start":230,"line_end":230,"column_start":1,"column_end":14}},{"value":"/","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\mod.rs","byte_start":17224643,"byte_end":17224646,"line_start":231,"line_end":231,"column_start":1,"column_end":4}},{"value":"/         // Convert the length into a byte array.","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\mod.rs","byte_start":17224647,"byte_end":17224699,"line_start":232,"line_end":232,"column_start":1,"column_end":53}},{"value":"/         // The cast to u32 cannot overflow due to the length check above.","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\mod.rs","byte_start":17224700,"byte_end":17224777,"line_start":233,"line_end":233,"column_start":1,"column_end":78}},{"value":"/         let len_slice = u32::to_le_bytes(item.len() as u32);","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\mod.rs","byte_start":17224778,"byte_end":17224842,"line_start":234,"line_end":234,"column_start":1,"column_end":65}},{"value":"/","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\mod.rs","byte_start":17224843,"byte_end":17224846,"line_start":235,"line_end":235,"column_start":1,"column_end":4}},{"value":"/         // Reserve space in the buffer.","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\mod.rs","byte_start":17224847,"byte_end":17224890,"line_start":236,"line_end":236,"column_start":1,"column_end":44}},{"value":"/         dst.reserve(4 + item.len());","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\mod.rs","byte_start":17224891,"byte_end":17224931,"line_start":237,"line_end":237,"column_start":1,"column_end":41}},{"value":"/","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\mod.rs","byte_start":17224932,"byte_end":17224935,"line_start":238,"line_end":238,"column_start":1,"column_end":4}},{"value":"/         // Write the length and string to the buffer.","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\mod.rs","byte_start":17224936,"byte_end":17224993,"line_start":239,"line_end":239,"column_start":1,"column_end":58}},{"value":"/         dst.extend_from_slice(&len_slice);","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\mod.rs","byte_start":17224994,"byte_end":17225040,"line_start":240,"line_end":240,"column_start":1,"column_end":47}},{"value":"/         dst.extend_from_slice(item.as_bytes());","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\mod.rs","byte_start":17225041,"byte_end":17225092,"line_start":241,"line_end":241,"column_start":1,"column_end":52}},{"value":"/         Ok(())","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\mod.rs","byte_start":17225093,"byte_end":17225111,"line_start":242,"line_end":242,"column_start":1,"column_end":19}},{"value":"/     }","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\mod.rs","byte_start":17225112,"byte_end":17225121,"line_start":243,"line_end":243,"column_start":1,"column_end":10}},{"value":"/ }","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\mod.rs","byte_start":17225122,"byte_end":17225127,"line_start":244,"line_end":244,"column_start":1,"column_end":6}},{"value":"/ ```","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\mod.rs","byte_start":17225128,"byte_end":17225135,"line_start":245,"line_end":245,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\mod.rs","byte_start":17225136,"byte_end":17225139,"line_start":246,"line_end":246,"column_start":1,"column_end":4}},{"value":"/ [`AsyncRead`]: tokio::io::AsyncRead","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\mod.rs","byte_start":17225140,"byte_end":17225179,"line_start":247,"line_end":247,"column_start":1,"column_end":40}},{"value":"/ [`AsyncWrite`]: tokio::io::AsyncWrite","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\mod.rs","byte_start":17225180,"byte_end":17225221,"line_start":248,"line_end":248,"column_start":1,"column_end":42}},{"value":"/ [`Stream`]: futures_core::Stream","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\mod.rs","byte_start":17225222,"byte_end":17225258,"line_start":249,"line_end":249,"column_start":1,"column_end":37}},{"value":"/ [`Sink`]: futures_sink::Sink","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\mod.rs","byte_start":17225259,"byte_end":17225291,"line_start":250,"line_end":250,"column_start":1,"column_end":33}},{"value":"/ [`SinkExt::close`]: https://docs.rs/futures/0.3/futures/sink/trait.SinkExt.html#method.close","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\mod.rs","byte_start":17225292,"byte_end":17225388,"line_start":251,"line_end":251,"column_start":1,"column_end":97}},{"value":"/ [`FramedRead`]: struct@crate::codec::FramedRead","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\mod.rs","byte_start":17225389,"byte_end":17225440,"line_start":252,"line_end":252,"column_start":1,"column_end":52}},{"value":"/ [`FramedWrite`]: struct@crate::codec::FramedWrite","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\mod.rs","byte_start":17225441,"byte_end":17225494,"line_start":253,"line_end":253,"column_start":1,"column_end":54}},{"value":"/ [`Framed`]: struct@crate::codec::Framed","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\mod.rs","byte_start":17225495,"byte_end":17225538,"line_start":254,"line_end":254,"column_start":1,"column_end":44}},{"value":"/ [`Decoder`]: trait@crate::codec::Decoder","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\mod.rs","byte_start":17225539,"byte_end":17225583,"line_start":255,"line_end":255,"column_start":1,"column_end":45}},{"value":"/ [`decode`]: fn@crate::codec::Decoder::decode","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\mod.rs","byte_start":17225584,"byte_end":17225632,"line_start":256,"line_end":256,"column_start":1,"column_end":49}},{"value":"/ [`encode`]: fn@crate::codec::Encoder::encode","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\mod.rs","byte_start":17225633,"byte_end":17225681,"line_start":257,"line_end":257,"column_start":1,"column_end":49}},{"value":"/ [`split_to`]: fn@bytes::BytesMut::split_to","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\mod.rs","byte_start":17225682,"byte_end":17225728,"line_start":258,"line_end":258,"column_start":1,"column_end":47}},{"value":"/ [`advance`]: fn@bytes::Buf::advance","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\mod.rs","byte_start":17225729,"byte_end":17225768,"line_start":259,"line_end":259,"column_start":1,"column_end":40}}]},{"kind":"Struct","id":{"krate":0,"index":1165},"span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\bytes_codec.rs","byte_start":17227792,"byte_end":17227802,"line_start":45,"line_end":45,"column_start":12,"column_end":22},"name":"BytesCodec","qualname":"::codec::bytes_codec::BytesCodec","value":"","parent":null,"children":[],"decl_id":null,"docs":" A simple [`Decoder`] and [`Encoder`] implementation that just ships bytes around.","sig":null,"attributes":[{"value":"/ A simple [`Decoder`] and [`Encoder`] implementation that just ships bytes around.","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\bytes_codec.rs","byte_start":17226635,"byte_end":17226720,"line_start":7,"line_end":7,"column_start":1,"column_end":86}},{"value":"/","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\bytes_codec.rs","byte_start":17226721,"byte_end":17226724,"line_start":8,"line_end":8,"column_start":1,"column_end":4}},{"value":"/ [`Decoder`]: crate::codec::Decoder","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\bytes_codec.rs","byte_start":17226725,"byte_end":17226763,"line_start":9,"line_end":9,"column_start":1,"column_end":39}},{"value":"/ [`Encoder`]: crate::codec::Encoder","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\bytes_codec.rs","byte_start":17226764,"byte_end":17226802,"line_start":10,"line_end":10,"column_start":1,"column_end":39}},{"value":"/","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\bytes_codec.rs","byte_start":17226803,"byte_end":17226806,"line_start":11,"line_end":11,"column_start":1,"column_end":4}},{"value":"/ # Example","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\bytes_codec.rs","byte_start":17226807,"byte_end":17226820,"line_start":12,"line_end":12,"column_start":1,"column_end":14}},{"value":"/","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\bytes_codec.rs","byte_start":17226821,"byte_end":17226824,"line_start":13,"line_end":13,"column_start":1,"column_end":4}},{"value":"/ Turn an [`AsyncRead`] into a stream of `Result<`[`BytesMut`]`, `[`Error`]`>`.","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\bytes_codec.rs","byte_start":17226825,"byte_end":17226906,"line_start":14,"line_end":14,"column_start":1,"column_end":82}},{"value":"/","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\bytes_codec.rs","byte_start":17226907,"byte_end":17226910,"line_start":15,"line_end":15,"column_start":1,"column_end":4}},{"value":"/ [`AsyncRead`]: tokio::io::AsyncRead","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\bytes_codec.rs","byte_start":17226911,"byte_end":17226950,"line_start":16,"line_end":16,"column_start":1,"column_end":40}},{"value":"/ [`BytesMut`]: bytes::BytesMut","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\bytes_codec.rs","byte_start":17226951,"byte_end":17226984,"line_start":17,"line_end":17,"column_start":1,"column_end":34}},{"value":"/ [`Error`]: std::io::Error","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\bytes_codec.rs","byte_start":17226985,"byte_end":17227014,"line_start":18,"line_end":18,"column_start":1,"column_end":30}},{"value":"/","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\bytes_codec.rs","byte_start":17227015,"byte_end":17227018,"line_start":19,"line_end":19,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\bytes_codec.rs","byte_start":17227019,"byte_end":17227026,"line_start":20,"line_end":20,"column_start":1,"column_end":8}},{"value":"/ # mod hidden {","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\bytes_codec.rs","byte_start":17227027,"byte_end":17227045,"line_start":21,"line_end":21,"column_start":1,"column_end":19}},{"value":"/ # #[allow(unused_imports)]","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\bytes_codec.rs","byte_start":17227046,"byte_end":17227076,"line_start":22,"line_end":22,"column_start":1,"column_end":31}},{"value":"/ use tokio::fs::File;","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\bytes_codec.rs","byte_start":17227077,"byte_end":17227101,"line_start":23,"line_end":23,"column_start":1,"column_end":25}},{"value":"/ # }","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\bytes_codec.rs","byte_start":17227102,"byte_end":17227109,"line_start":24,"line_end":24,"column_start":1,"column_end":8}},{"value":"/ use tokio::io::AsyncRead;","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\bytes_codec.rs","byte_start":17227110,"byte_end":17227139,"line_start":25,"line_end":25,"column_start":1,"column_end":30}},{"value":"/ use tokio_util::codec::{FramedRead, BytesCodec};","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\bytes_codec.rs","byte_start":17227140,"byte_end":17227192,"line_start":26,"line_end":26,"column_start":1,"column_end":53}},{"value":"/","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\bytes_codec.rs","byte_start":17227193,"byte_end":17227196,"line_start":27,"line_end":27,"column_start":1,"column_end":4}},{"value":"/ # enum File {}","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\bytes_codec.rs","byte_start":17227197,"byte_end":17227215,"line_start":28,"line_end":28,"column_start":1,"column_end":19}},{"value":"/ # impl File {","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\bytes_codec.rs","byte_start":17227216,"byte_end":17227233,"line_start":29,"line_end":29,"column_start":1,"column_end":18}},{"value":"/ #     async fn open(_name: &str) -> Result<impl AsyncRead, std::io::Error> {","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\bytes_codec.rs","byte_start":17227234,"byte_end":17227314,"line_start":30,"line_end":30,"column_start":1,"column_end":81}},{"value":"/ #         use std::io::Cursor;","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\bytes_codec.rs","byte_start":17227315,"byte_end":17227349,"line_start":31,"line_end":31,"column_start":1,"column_end":35}},{"value":"/ #         Ok(Cursor::new(vec![0, 1, 2, 3, 4, 5]))","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\bytes_codec.rs","byte_start":17227350,"byte_end":17227403,"line_start":32,"line_end":32,"column_start":1,"column_end":54}},{"value":"/ #     }","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\bytes_codec.rs","byte_start":17227404,"byte_end":17227415,"line_start":33,"line_end":33,"column_start":1,"column_end":12}},{"value":"/ # }","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\bytes_codec.rs","byte_start":17227416,"byte_end":17227423,"line_start":34,"line_end":34,"column_start":1,"column_end":8}},{"value":"/ #","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\bytes_codec.rs","byte_start":17227424,"byte_end":17227429,"line_start":35,"line_end":35,"column_start":1,"column_end":6}},{"value":"/ # #[tokio::main(flavor = \"current_thread\")]","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\bytes_codec.rs","byte_start":17227430,"byte_end":17227477,"line_start":36,"line_end":36,"column_start":1,"column_end":48}},{"value":"/ # async fn main() -> Result<(), std::io::Error> {","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\bytes_codec.rs","byte_start":17227478,"byte_end":17227531,"line_start":37,"line_end":37,"column_start":1,"column_end":54}},{"value":"/ let my_async_read = File::open(\"filename.txt\").await?;","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\bytes_codec.rs","byte_start":17227532,"byte_end":17227590,"line_start":38,"line_end":38,"column_start":1,"column_end":59}},{"value":"/ let my_stream_of_bytes = FramedRead::new(my_async_read, BytesCodec::new());","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\bytes_codec.rs","byte_start":17227591,"byte_end":17227670,"line_start":39,"line_end":39,"column_start":1,"column_end":80}},{"value":"/ # Ok(())","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\bytes_codec.rs","byte_start":17227671,"byte_end":17227683,"line_start":40,"line_end":40,"column_start":1,"column_end":13}},{"value":"/ # }","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\bytes_codec.rs","byte_start":17227684,"byte_end":17227691,"line_start":41,"line_end":41,"column_start":1,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\bytes_codec.rs","byte_start":17227692,"byte_end":17227699,"line_start":42,"line_end":42,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\bytes_codec.rs","byte_start":17227700,"byte_end":17227703,"line_start":43,"line_end":43,"column_start":1,"column_end":4}}]},{"kind":"Method","id":{"krate":0,"index":480},"span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\bytes_codec.rs","byte_start":17227904,"byte_end":17227907,"line_start":49,"line_end":49,"column_start":12,"column_end":15},"name":"new","qualname":"<BytesCodec>::new","value":"pub fn new() -> BytesCodec","parent":null,"children":[],"decl_id":null,"docs":" Creates a new `BytesCodec` for shipping around raw bytes.\n","sig":null,"attributes":[{"value":"/ Creates a new `BytesCodec` for shipping around raw bytes.","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\bytes_codec.rs","byte_start":17227831,"byte_end":17227892,"line_start":48,"line_end":48,"column_start":5,"column_end":66}}]},{"kind":"Trait","id":{"krate":0,"index":511},"span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\decoder.rs","byte_start":17230145,"byte_end":17230152,"line_start":35,"line_end":35,"column_start":11,"column_end":18},"name":"Decoder","qualname":"::codec::decoder::Decoder","value":"Decoder","parent":null,"children":[{"krate":0,"index":512},{"krate":0,"index":513},{"krate":0,"index":514},{"krate":0,"index":515},{"krate":0,"index":516}],"decl_id":null,"docs":" Decoding of frames via buffers.","sig":null,"attributes":[{"value":"/ Decoding of frames via buffers.","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\decoder.rs","byte_start":17228859,"byte_end":17228894,"line_start":8,"line_end":8,"column_start":1,"column_end":36}},{"value":"/","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\decoder.rs","byte_start":17228895,"byte_end":17228898,"line_start":9,"line_end":9,"column_start":1,"column_end":4}},{"value":"/ This trait is used when constructing an instance of [`Framed`] or","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\decoder.rs","byte_start":17228899,"byte_end":17228968,"line_start":10,"line_end":10,"column_start":1,"column_end":70}},{"value":"/ [`FramedRead`]. An implementation of `Decoder` takes a byte stream that has","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\decoder.rs","byte_start":17228969,"byte_end":17229048,"line_start":11,"line_end":11,"column_start":1,"column_end":80}},{"value":"/ already been buffered in `src` and decodes the data into a stream of","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\decoder.rs","byte_start":17229049,"byte_end":17229121,"line_start":12,"line_end":12,"column_start":1,"column_end":73}},{"value":"/ `Self::Item` frames.","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\decoder.rs","byte_start":17229122,"byte_end":17229146,"line_start":13,"line_end":13,"column_start":1,"column_end":25}},{"value":"/","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\decoder.rs","byte_start":17229147,"byte_end":17229150,"line_start":14,"line_end":14,"column_start":1,"column_end":4}},{"value":"/ Implementations are able to track state on `self`, which enables","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\decoder.rs","byte_start":17229151,"byte_end":17229219,"line_start":15,"line_end":15,"column_start":1,"column_end":69}},{"value":"/ implementing stateful streaming parsers. In many cases, though, this type","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\decoder.rs","byte_start":17229220,"byte_end":17229297,"line_start":16,"line_end":16,"column_start":1,"column_end":78}},{"value":"/ will simply be a unit struct (e.g. `struct HttpDecoder`).","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\decoder.rs","byte_start":17229298,"byte_end":17229359,"line_start":17,"line_end":17,"column_start":1,"column_end":62}},{"value":"/","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\decoder.rs","byte_start":17229360,"byte_end":17229363,"line_start":18,"line_end":18,"column_start":1,"column_end":4}},{"value":"/ For some underlying data-sources, namely files and FIFOs,","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\decoder.rs","byte_start":17229364,"byte_end":17229425,"line_start":19,"line_end":19,"column_start":1,"column_end":62}},{"value":"/ it's possible to temporarily read 0 bytes by reaching EOF.","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\decoder.rs","byte_start":17229426,"byte_end":17229488,"line_start":20,"line_end":20,"column_start":1,"column_end":63}},{"value":"/","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\decoder.rs","byte_start":17229489,"byte_end":17229492,"line_start":21,"line_end":21,"column_start":1,"column_end":4}},{"value":"/ In these cases `decode_eof` will be called until it signals","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\decoder.rs","byte_start":17229493,"byte_end":17229556,"line_start":22,"line_end":22,"column_start":1,"column_end":64}},{"value":"/ fullfillment of all closing frames by returning `Ok(None)`.","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\decoder.rs","byte_start":17229557,"byte_end":17229620,"line_start":23,"line_end":23,"column_start":1,"column_end":64}},{"value":"/ After that, repeated attempts to read from the [`Framed`] or [`FramedRead`]","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\decoder.rs","byte_start":17229621,"byte_end":17229700,"line_start":24,"line_end":24,"column_start":1,"column_end":80}},{"value":"/ will not invoke `decode` or `decode_eof` again, until data can be read","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\decoder.rs","byte_start":17229701,"byte_end":17229775,"line_start":25,"line_end":25,"column_start":1,"column_end":75}},{"value":"/ during a retry.","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\decoder.rs","byte_start":17229776,"byte_end":17229795,"line_start":26,"line_end":26,"column_start":1,"column_end":20}},{"value":"/","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\decoder.rs","byte_start":17229796,"byte_end":17229799,"line_start":27,"line_end":27,"column_start":1,"column_end":4}},{"value":"/ It is up to the Decoder to keep track of a restart after an EOF,","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\decoder.rs","byte_start":17229800,"byte_end":17229868,"line_start":28,"line_end":28,"column_start":1,"column_end":69}},{"value":"/ and to decide how to handle such an event by, for example,","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\decoder.rs","byte_start":17229869,"byte_end":17229931,"line_start":29,"line_end":29,"column_start":1,"column_end":63}},{"value":"/ allowing frames to cross EOF boundaries, re-emitting opening frames, or","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\decoder.rs","byte_start":17229932,"byte_end":17230007,"line_start":30,"line_end":30,"column_start":1,"column_end":76}},{"value":"/ resetting the entire internal state.","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\decoder.rs","byte_start":17230008,"byte_end":17230048,"line_start":31,"line_end":31,"column_start":1,"column_end":41}},{"value":"/","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\decoder.rs","byte_start":17230049,"byte_end":17230052,"line_start":32,"line_end":32,"column_start":1,"column_end":4}},{"value":"/ [`Framed`]: crate::codec::Framed","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\decoder.rs","byte_start":17230053,"byte_end":17230089,"line_start":33,"line_end":33,"column_start":1,"column_end":37}},{"value":"/ [`FramedRead`]: crate::codec::FramedRead","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\decoder.rs","byte_start":17230090,"byte_end":17230134,"line_start":34,"line_end":34,"column_start":1,"column_end":45}}]},{"kind":"Type","id":{"krate":0,"index":512},"span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\decoder.rs","byte_start":17230200,"byte_end":17230204,"line_start":37,"line_end":37,"column_start":10,"column_end":14},"name":"Item","qualname":"::codec::decoder::Decoder::Item","value":"type Item;","parent":{"krate":0,"index":511},"children":[],"decl_id":null,"docs":" The type of decoded frames.\n","sig":null,"attributes":[{"value":"/ The type of decoded frames.","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\decoder.rs","byte_start":17230159,"byte_end":17230190,"line_start":36,"line_end":36,"column_start":5,"column_end":36}}]},{"kind":"Type","id":{"krate":0,"index":513},"span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\decoder.rs","byte_start":17230970,"byte_end":17230975,"line_start":54,"line_end":54,"column_start":10,"column_end":15},"name":"Error","qualname":"::codec::decoder::Decoder::Error","value":"type Error: From<io::Error>;","parent":{"krate":0,"index":511},"children":[],"decl_id":null,"docs":" The type of unrecoverable frame decoding errors.","sig":null,"attributes":[{"value":"/ The type of unrecoverable frame decoding errors.","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\decoder.rs","byte_start":17230211,"byte_end":17230263,"line_start":39,"line_end":39,"column_start":5,"column_end":57}},{"value":"/","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\decoder.rs","byte_start":17230268,"byte_end":17230271,"line_start":40,"line_end":40,"column_start":5,"column_end":8}},{"value":"/ If an individual message is ill-formed but can be ignored without","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\decoder.rs","byte_start":17230276,"byte_end":17230345,"line_start":41,"line_end":41,"column_start":5,"column_end":74}},{"value":"/ interfering with the processing of future messages, it may be more","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\decoder.rs","byte_start":17230350,"byte_end":17230420,"line_start":42,"line_end":42,"column_start":5,"column_end":75}},{"value":"/ useful to report the failure as an `Item`.","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\decoder.rs","byte_start":17230425,"byte_end":17230471,"line_start":43,"line_end":43,"column_start":5,"column_end":51}},{"value":"/","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\decoder.rs","byte_start":17230476,"byte_end":17230479,"line_start":44,"line_end":44,"column_start":5,"column_end":8}},{"value":"/ `From<io::Error>` is required in the interest of making `Error` suitable","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\decoder.rs","byte_start":17230484,"byte_end":17230560,"line_start":45,"line_end":45,"column_start":5,"column_end":81}},{"value":"/ for returning directly from a [`FramedRead`], and to enable the default","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\decoder.rs","byte_start":17230565,"byte_end":17230640,"line_start":46,"line_end":46,"column_start":5,"column_end":80}},{"value":"/ implementation of `decode_eof` to yield an `io::Error` when the decoder","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\decoder.rs","byte_start":17230645,"byte_end":17230720,"line_start":47,"line_end":47,"column_start":5,"column_end":80}},{"value":"/ fails to consume all available data.","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\decoder.rs","byte_start":17230725,"byte_end":17230765,"line_start":48,"line_end":48,"column_start":5,"column_end":45}},{"value":"/","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\decoder.rs","byte_start":17230770,"byte_end":17230773,"line_start":49,"line_end":49,"column_start":5,"column_end":8}},{"value":"/ Note that implementors of this trait can simply indicate `type Error =","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\decoder.rs","byte_start":17230778,"byte_end":17230852,"line_start":50,"line_end":50,"column_start":5,"column_end":79}},{"value":"/ io::Error` to use I/O errors as this type.","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\decoder.rs","byte_start":17230857,"byte_end":17230903,"line_start":51,"line_end":51,"column_start":5,"column_end":51}},{"value":"/","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\decoder.rs","byte_start":17230908,"byte_end":17230911,"line_start":52,"line_end":52,"column_start":5,"column_end":8}},{"value":"/ [`FramedRead`]: crate::codec::FramedRead","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\decoder.rs","byte_start":17230916,"byte_end":17230960,"line_start":53,"line_end":53,"column_start":5,"column_end":49}}]},{"kind":"Method","id":{"krate":0,"index":514},"span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\decoder.rs","byte_start":17233911,"byte_end":17233917,"line_start":124,"line_end":124,"column_start":8,"column_end":14},"name":"decode","qualname":"::codec::decoder::Decoder::decode","value":"pub fn decode(&mut Self, &mut BytesMut)\n-> Result<Option<Self::Item>, Self::Error>","parent":{"krate":0,"index":511},"children":[],"decl_id":null,"docs":" Attempts to decode a frame from the provided buffer of bytes.","sig":null,"attributes":[{"value":"/ Attempts to decode a frame from the provided buffer of bytes.","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\decoder.rs","byte_start":17230999,"byte_end":17231064,"line_start":56,"line_end":56,"column_start":5,"column_end":70}},{"value":"/","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\decoder.rs","byte_start":17231069,"byte_end":17231072,"line_start":57,"line_end":57,"column_start":5,"column_end":8}},{"value":"/ This method is called by [`FramedRead`] whenever bytes are ready to be","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\decoder.rs","byte_start":17231077,"byte_end":17231151,"line_start":58,"line_end":58,"column_start":5,"column_end":79}},{"value":"/ parsed. The provided buffer of bytes is what's been read so far, and","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\decoder.rs","byte_start":17231156,"byte_end":17231228,"line_start":59,"line_end":59,"column_start":5,"column_end":77}},{"value":"/ this instance of `Decode` can determine whether an entire frame is in","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\decoder.rs","byte_start":17231233,"byte_end":17231306,"line_start":60,"line_end":60,"column_start":5,"column_end":78}},{"value":"/ the buffer and is ready to be returned.","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\decoder.rs","byte_start":17231311,"byte_end":17231354,"line_start":61,"line_end":61,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\decoder.rs","byte_start":17231359,"byte_end":17231362,"line_start":62,"line_end":62,"column_start":5,"column_end":8}},{"value":"/ If an entire frame is available, then this instance will remove those","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\decoder.rs","byte_start":17231367,"byte_end":17231440,"line_start":63,"line_end":63,"column_start":5,"column_end":78}},{"value":"/ bytes from the buffer provided and return them as a decoded","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\decoder.rs","byte_start":17231445,"byte_end":17231508,"line_start":64,"line_end":64,"column_start":5,"column_end":68}},{"value":"/ frame. Note that removing bytes from the provided buffer doesn't always","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\decoder.rs","byte_start":17231513,"byte_end":17231588,"line_start":65,"line_end":65,"column_start":5,"column_end":80}},{"value":"/ necessarily copy the bytes, so this should be an efficient operation in","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\decoder.rs","byte_start":17231593,"byte_end":17231668,"line_start":66,"line_end":66,"column_start":5,"column_end":80}},{"value":"/ most circumstances.","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\decoder.rs","byte_start":17231673,"byte_end":17231696,"line_start":67,"line_end":67,"column_start":5,"column_end":28}},{"value":"/","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\decoder.rs","byte_start":17231701,"byte_end":17231704,"line_start":68,"line_end":68,"column_start":5,"column_end":8}},{"value":"/ If the bytes look valid, but a frame isn't fully available yet, then","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\decoder.rs","byte_start":17231709,"byte_end":17231781,"line_start":69,"line_end":69,"column_start":5,"column_end":77}},{"value":"/ `Ok(None)` is returned. This indicates to the [`Framed`] instance that","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\decoder.rs","byte_start":17231786,"byte_end":17231860,"line_start":70,"line_end":70,"column_start":5,"column_end":79}},{"value":"/ it needs to read some more bytes before calling this method again.","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\decoder.rs","byte_start":17231865,"byte_end":17231935,"line_start":71,"line_end":71,"column_start":5,"column_end":75}},{"value":"/","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\decoder.rs","byte_start":17231940,"byte_end":17231943,"line_start":72,"line_end":72,"column_start":5,"column_end":8}},{"value":"/ Note that the bytes provided may be empty. If a previous call to","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\decoder.rs","byte_start":17231948,"byte_end":17232016,"line_start":73,"line_end":73,"column_start":5,"column_end":73}},{"value":"/ `decode` consumed all the bytes in the buffer then `decode` will be","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\decoder.rs","byte_start":17232021,"byte_end":17232092,"line_start":74,"line_end":74,"column_start":5,"column_end":76}},{"value":"/ called again until it returns `Ok(None)`, indicating that more bytes need to","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\decoder.rs","byte_start":17232097,"byte_end":17232177,"line_start":75,"line_end":75,"column_start":5,"column_end":85}},{"value":"/ be read.","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\decoder.rs","byte_start":17232182,"byte_end":17232194,"line_start":76,"line_end":76,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\decoder.rs","byte_start":17232199,"byte_end":17232202,"line_start":77,"line_end":77,"column_start":5,"column_end":8}},{"value":"/ Finally, if the bytes in the buffer are malformed then an error is","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\decoder.rs","byte_start":17232207,"byte_end":17232277,"line_start":78,"line_end":78,"column_start":5,"column_end":75}},{"value":"/ returned indicating why. This informs [`Framed`] that the stream is now","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\decoder.rs","byte_start":17232282,"byte_end":17232357,"line_start":79,"line_end":79,"column_start":5,"column_end":80}},{"value":"/ corrupt and should be terminated.","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\decoder.rs","byte_start":17232362,"byte_end":17232399,"line_start":80,"line_end":80,"column_start":5,"column_end":42}},{"value":"/","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\decoder.rs","byte_start":17232404,"byte_end":17232407,"line_start":81,"line_end":81,"column_start":5,"column_end":8}},{"value":"/ [`Framed`]: crate::codec::Framed","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\decoder.rs","byte_start":17232412,"byte_end":17232448,"line_start":82,"line_end":82,"column_start":5,"column_end":41}},{"value":"/ [`FramedRead`]: crate::codec::FramedRead","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\decoder.rs","byte_start":17232453,"byte_end":17232497,"line_start":83,"line_end":83,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\decoder.rs","byte_start":17232502,"byte_end":17232505,"line_start":84,"line_end":84,"column_start":5,"column_end":8}},{"value":"/ # Buffer management","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\decoder.rs","byte_start":17232510,"byte_end":17232533,"line_start":85,"line_end":85,"column_start":5,"column_end":28}},{"value":"/","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\decoder.rs","byte_start":17232538,"byte_end":17232541,"line_start":86,"line_end":86,"column_start":5,"column_end":8}},{"value":"/ Before returning from the function, implementations should ensure that","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\decoder.rs","byte_start":17232546,"byte_end":17232620,"line_start":87,"line_end":87,"column_start":5,"column_end":79}},{"value":"/ the buffer has appropriate capacity in anticipation of future calls to","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\decoder.rs","byte_start":17232625,"byte_end":17232699,"line_start":88,"line_end":88,"column_start":5,"column_end":79}},{"value":"/ `decode`. Failing to do so leads to inefficiency.","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\decoder.rs","byte_start":17232704,"byte_end":17232757,"line_start":89,"line_end":89,"column_start":5,"column_end":58}},{"value":"/","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\decoder.rs","byte_start":17232762,"byte_end":17232765,"line_start":90,"line_end":90,"column_start":5,"column_end":8}},{"value":"/ For example, if frames have a fixed length, or if the length of the","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\decoder.rs","byte_start":17232770,"byte_end":17232841,"line_start":91,"line_end":91,"column_start":5,"column_end":76}},{"value":"/ current frame is known from a header, a possible buffer management","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\decoder.rs","byte_start":17232846,"byte_end":17232916,"line_start":92,"line_end":92,"column_start":5,"column_end":75}},{"value":"/ strategy is:","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\decoder.rs","byte_start":17232921,"byte_end":17232937,"line_start":93,"line_end":93,"column_start":5,"column_end":21}},{"value":"/","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\decoder.rs","byte_start":17232942,"byte_end":17232945,"line_start":94,"line_end":94,"column_start":5,"column_end":8}},{"value":"/ ```no_run","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\decoder.rs","byte_start":17232950,"byte_end":17232963,"line_start":95,"line_end":95,"column_start":5,"column_end":18}},{"value":"/ # use std::io;","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\decoder.rs","byte_start":17232968,"byte_end":17232986,"line_start":96,"line_end":96,"column_start":5,"column_end":23}},{"value":"/ #","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\decoder.rs","byte_start":17232991,"byte_end":17232996,"line_start":97,"line_end":97,"column_start":5,"column_end":10}},{"value":"/ # use bytes::BytesMut;","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\decoder.rs","byte_start":17233001,"byte_end":17233027,"line_start":98,"line_end":98,"column_start":5,"column_end":31}},{"value":"/ # use tokio_util::codec::Decoder;","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\decoder.rs","byte_start":17233032,"byte_end":17233069,"line_start":99,"line_end":99,"column_start":5,"column_end":42}},{"value":"/ #","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\decoder.rs","byte_start":17233074,"byte_end":17233079,"line_start":100,"line_end":100,"column_start":5,"column_end":10}},{"value":"/ # struct MyCodec;","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\decoder.rs","byte_start":17233084,"byte_end":17233105,"line_start":101,"line_end":101,"column_start":5,"column_end":26}},{"value":"/ #","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\decoder.rs","byte_start":17233110,"byte_end":17233115,"line_start":102,"line_end":102,"column_start":5,"column_end":10}},{"value":"/ impl Decoder for MyCodec {","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\decoder.rs","byte_start":17233120,"byte_end":17233150,"line_start":103,"line_end":103,"column_start":5,"column_end":35}},{"value":"/     // ...","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\decoder.rs","byte_start":17233155,"byte_end":17233169,"line_start":104,"line_end":104,"column_start":5,"column_end":19}},{"value":"/     # type Item = BytesMut;","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\decoder.rs","byte_start":17233174,"byte_end":17233205,"line_start":105,"line_end":105,"column_start":5,"column_end":36}},{"value":"/     # type Error = io::Error;","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\decoder.rs","byte_start":17233210,"byte_end":17233243,"line_start":106,"line_end":106,"column_start":5,"column_end":38}},{"value":"/","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\decoder.rs","byte_start":17233248,"byte_end":17233251,"line_start":107,"line_end":107,"column_start":5,"column_end":8}},{"value":"/     fn decode(&mut self, src: &mut BytesMut) -> Result<Option<Self::Item>, Self::Error> {","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\decoder.rs","byte_start":17233256,"byte_end":17233349,"line_start":108,"line_end":108,"column_start":5,"column_end":98}},{"value":"/         // ...","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\decoder.rs","byte_start":17233354,"byte_end":17233372,"line_start":109,"line_end":109,"column_start":5,"column_end":23}},{"value":"/","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\decoder.rs","byte_start":17233377,"byte_end":17233380,"line_start":110,"line_end":110,"column_start":5,"column_end":8}},{"value":"/         // Reserve enough to complete decoding of the current frame.","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\decoder.rs","byte_start":17233385,"byte_end":17233457,"line_start":111,"line_end":111,"column_start":5,"column_end":77}},{"value":"/         let current_frame_len: usize = 1000; // Example.","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\decoder.rs","byte_start":17233462,"byte_end":17233522,"line_start":112,"line_end":112,"column_start":5,"column_end":65}},{"value":"/         // And to start decoding the next frame.","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\decoder.rs","byte_start":17233527,"byte_end":17233579,"line_start":113,"line_end":113,"column_start":5,"column_end":57}},{"value":"/         let next_frame_header_len: usize = 10; // Example.","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\decoder.rs","byte_start":17233584,"byte_end":17233646,"line_start":114,"line_end":114,"column_start":5,"column_end":67}},{"value":"/         src.reserve(current_frame_len + next_frame_header_len);","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\decoder.rs","byte_start":17233651,"byte_end":17233718,"line_start":115,"line_end":115,"column_start":5,"column_end":72}},{"value":"/","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\decoder.rs","byte_start":17233723,"byte_end":17233726,"line_start":116,"line_end":116,"column_start":5,"column_end":8}},{"value":"/         return Ok(None);","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\decoder.rs","byte_start":17233731,"byte_end":17233759,"line_start":117,"line_end":117,"column_start":5,"column_end":33}},{"value":"/     }","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\decoder.rs","byte_start":17233764,"byte_end":17233773,"line_start":118,"line_end":118,"column_start":5,"column_end":14}},{"value":"/ }","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\decoder.rs","byte_start":17233778,"byte_end":17233783,"line_start":119,"line_end":119,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\decoder.rs","byte_start":17233788,"byte_end":17233795,"line_start":120,"line_end":120,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\decoder.rs","byte_start":17233800,"byte_end":17233803,"line_start":121,"line_end":121,"column_start":5,"column_end":8}},{"value":"/ An optimal buffer management strategy minimizes reallocations and","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\decoder.rs","byte_start":17233808,"byte_end":17233877,"line_start":122,"line_end":122,"column_start":5,"column_end":74}},{"value":"/ over-allocations.","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\decoder.rs","byte_start":17233882,"byte_end":17233903,"line_start":123,"line_end":123,"column_start":5,"column_end":26}}]},{"kind":"Method","id":{"krate":0,"index":515},"span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\decoder.rs","byte_start":17235083,"byte_end":17235093,"line_start":144,"line_end":144,"column_start":8,"column_end":18},"name":"decode_eof","qualname":"::codec::decoder::Decoder::decode_eof","value":"pub fn decode_eof(&mut Self, &mut BytesMut)\n-> Result<Option<Self::Item>, Self::Error>","parent":{"krate":0,"index":511},"children":[],"decl_id":null,"docs":" A default method available to be called when there are no more bytes\n available to be read from the underlying I/O.","sig":null,"attributes":[{"value":"/ A default method available to be called when there are no more bytes","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\decoder.rs","byte_start":17233998,"byte_end":17234070,"line_start":126,"line_end":126,"column_start":5,"column_end":77}},{"value":"/ available to be read from the underlying I/O.","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\decoder.rs","byte_start":17234075,"byte_end":17234124,"line_start":127,"line_end":127,"column_start":5,"column_end":54}},{"value":"/","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\decoder.rs","byte_start":17234129,"byte_end":17234132,"line_start":128,"line_end":128,"column_start":5,"column_end":8}},{"value":"/ This method defaults to calling `decode` and returns an error if","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\decoder.rs","byte_start":17234137,"byte_end":17234205,"line_start":129,"line_end":129,"column_start":5,"column_end":73}},{"value":"/ `Ok(None)` is returned while there is unconsumed data in `buf`.","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\decoder.rs","byte_start":17234210,"byte_end":17234277,"line_start":130,"line_end":130,"column_start":5,"column_end":72}},{"value":"/ Typically this doesn't need to be implemented unless the framing","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\decoder.rs","byte_start":17234282,"byte_end":17234350,"line_start":131,"line_end":131,"column_start":5,"column_end":73}},{"value":"/ protocol differs near the end of the stream, or if you need to construct","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\decoder.rs","byte_start":17234355,"byte_end":17234431,"line_start":132,"line_end":132,"column_start":5,"column_end":81}},{"value":"/ frames _across_ eof boundaries on sources that can be resumed.","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\decoder.rs","byte_start":17234436,"byte_end":17234502,"line_start":133,"line_end":133,"column_start":5,"column_end":71}},{"value":"/","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\decoder.rs","byte_start":17234507,"byte_end":17234510,"line_start":134,"line_end":134,"column_start":5,"column_end":8}},{"value":"/ Note that the `buf` argument may be empty. If a previous call to","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\decoder.rs","byte_start":17234515,"byte_end":17234583,"line_start":135,"line_end":135,"column_start":5,"column_end":73}},{"value":"/ `decode_eof` consumed all the bytes in the buffer, `decode_eof` will be","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\decoder.rs","byte_start":17234588,"byte_end":17234663,"line_start":136,"line_end":136,"column_start":5,"column_end":80}},{"value":"/ called again until it returns `None`, indicating that there are no more","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\decoder.rs","byte_start":17234668,"byte_end":17234743,"line_start":137,"line_end":137,"column_start":5,"column_end":80}},{"value":"/ frames to yield. This behavior enables returning finalization frames","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\decoder.rs","byte_start":17234748,"byte_end":17234820,"line_start":138,"line_end":138,"column_start":5,"column_end":77}},{"value":"/ that may not be based on inbound data.","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\decoder.rs","byte_start":17234825,"byte_end":17234867,"line_start":139,"line_end":139,"column_start":5,"column_end":47}},{"value":"/","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\decoder.rs","byte_start":17234872,"byte_end":17234875,"line_start":140,"line_end":140,"column_start":5,"column_end":8}},{"value":"/ Once `None` has been returned, `decode_eof` won't be called again until","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\decoder.rs","byte_start":17234880,"byte_end":17234955,"line_start":141,"line_end":141,"column_start":5,"column_end":80}},{"value":"/ an attempt to resume the stream has been made, where the underlying stream","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\decoder.rs","byte_start":17234960,"byte_end":17235038,"line_start":142,"line_end":142,"column_start":5,"column_end":83}},{"value":"/ actually returned more data.","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\decoder.rs","byte_start":17235043,"byte_end":17235075,"line_start":143,"line_end":143,"column_start":5,"column_end":37}}]},{"kind":"Method","id":{"krate":0,"index":516},"span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\decoder.rs","byte_start":17236701,"byte_end":17236707,"line_start":178,"line_end":178,"column_start":8,"column_end":14},"name":"framed","qualname":"::codec::decoder::Decoder::framed","value":"pub fn framed<T: AsyncRead + AsyncWrite + Sized>(Self, T) -> Framed<T, Self>\nwhere Self: Sized","parent":{"krate":0,"index":511},"children":[],"decl_id":null,"docs":" Provides a [`Stream`] and [`Sink`] interface for reading and writing to this\n `Io` object, using `Decode` and `Encode` to read and write the raw data.","sig":null,"attributes":[{"value":"/ Provides a [`Stream`] and [`Sink`] interface for reading and writing to this","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\decoder.rs","byte_start":17235511,"byte_end":17235591,"line_start":157,"line_end":157,"column_start":5,"column_end":85}},{"value":"/ `Io` object, using `Decode` and `Encode` to read and write the raw data.","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\decoder.rs","byte_start":17235596,"byte_end":17235672,"line_start":158,"line_end":158,"column_start":5,"column_end":81}},{"value":"/","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\decoder.rs","byte_start":17235677,"byte_end":17235680,"line_start":159,"line_end":159,"column_start":5,"column_end":8}},{"value":"/ Raw I/O objects work with byte sequences, but higher-level code usually","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\decoder.rs","byte_start":17235685,"byte_end":17235760,"line_start":160,"line_end":160,"column_start":5,"column_end":80}},{"value":"/ wants to batch these into meaningful chunks, called \"frames\". This","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\decoder.rs","byte_start":17235765,"byte_end":17235835,"line_start":161,"line_end":161,"column_start":5,"column_end":75}},{"value":"/ method layers framing on top of an I/O object, by using the `Codec`","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\decoder.rs","byte_start":17235840,"byte_end":17235911,"line_start":162,"line_end":162,"column_start":5,"column_end":76}},{"value":"/ traits to handle encoding and decoding of messages frames. Note that","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\decoder.rs","byte_start":17235916,"byte_end":17235988,"line_start":163,"line_end":163,"column_start":5,"column_end":77}},{"value":"/ the incoming and outgoing frame types may be distinct.","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\decoder.rs","byte_start":17235993,"byte_end":17236051,"line_start":164,"line_end":164,"column_start":5,"column_end":63}},{"value":"/","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\decoder.rs","byte_start":17236056,"byte_end":17236059,"line_start":165,"line_end":165,"column_start":5,"column_end":8}},{"value":"/ This function returns a *single* object that is both `Stream` and","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\decoder.rs","byte_start":17236064,"byte_end":17236133,"line_start":166,"line_end":166,"column_start":5,"column_end":74}},{"value":"/ `Sink`; grouping this into a single object is often useful for layering","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\decoder.rs","byte_start":17236138,"byte_end":17236213,"line_start":167,"line_end":167,"column_start":5,"column_end":80}},{"value":"/ things like gzip or TLS, which require both read and write access to the","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\decoder.rs","byte_start":17236218,"byte_end":17236294,"line_start":168,"line_end":168,"column_start":5,"column_end":81}},{"value":"/ underlying object.","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\decoder.rs","byte_start":17236299,"byte_end":17236321,"line_start":169,"line_end":169,"column_start":5,"column_end":27}},{"value":"/","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\decoder.rs","byte_start":17236326,"byte_end":17236329,"line_start":170,"line_end":170,"column_start":5,"column_end":8}},{"value":"/ If you want to work more directly with the streams and sink, consider","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\decoder.rs","byte_start":17236334,"byte_end":17236407,"line_start":171,"line_end":171,"column_start":5,"column_end":78}},{"value":"/ calling `split` on the [`Framed`] returned by this method, which will","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\decoder.rs","byte_start":17236412,"byte_end":17236485,"line_start":172,"line_end":172,"column_start":5,"column_end":78}},{"value":"/ break them into separate objects, allowing them to interact more easily.","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\decoder.rs","byte_start":17236490,"byte_end":17236566,"line_start":173,"line_end":173,"column_start":5,"column_end":81}},{"value":"/","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\decoder.rs","byte_start":17236571,"byte_end":17236574,"line_start":174,"line_end":174,"column_start":5,"column_end":8}},{"value":"/ [`Stream`]: futures_core::Stream","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\decoder.rs","byte_start":17236579,"byte_end":17236615,"line_start":175,"line_end":175,"column_start":5,"column_end":41}},{"value":"/ [`Sink`]: futures_sink::Sink","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\decoder.rs","byte_start":17236620,"byte_end":17236652,"line_start":176,"line_end":176,"column_start":5,"column_end":37}},{"value":"/ [`Framed`]: crate::codec::Framed","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\decoder.rs","byte_start":17236657,"byte_end":17236693,"line_start":177,"line_end":177,"column_start":5,"column_end":41}}]},{"kind":"Trait","id":{"krate":0,"index":528},"span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\encoder.rs","byte_start":17237041,"byte_end":17237048,"line_start":8,"line_end":8,"column_start":11,"column_end":18},"name":"Encoder","qualname":"::codec::encoder::Encoder","value":"Encoder<Item>","parent":null,"children":[{"krate":0,"index":530},{"krate":0,"index":531}],"decl_id":null,"docs":" Trait of helper objects to write out messages as bytes, for use with\n [`FramedWrite`].","sig":null,"attributes":[{"value":"/ Trait of helper objects to write out messages as bytes, for use with","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\encoder.rs","byte_start":17236886,"byte_end":17236958,"line_start":4,"line_end":4,"column_start":1,"column_end":73}},{"value":"/ [`FramedWrite`].","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\encoder.rs","byte_start":17236959,"byte_end":17236979,"line_start":5,"line_end":5,"column_start":1,"column_end":21}},{"value":"/","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\encoder.rs","byte_start":17236980,"byte_end":17236983,"line_start":6,"line_end":6,"column_start":1,"column_end":4}},{"value":"/ [`FramedWrite`]: crate::codec::FramedWrite","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\encoder.rs","byte_start":17236984,"byte_end":17237030,"line_start":7,"line_end":7,"column_start":1,"column_end":47}}]},{"kind":"Type","id":{"krate":0,"index":530},"span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\encoder.rs","byte_start":17237313,"byte_end":17237318,"line_start":15,"line_end":15,"column_start":10,"column_end":15},"name":"Error","qualname":"::codec::encoder::Encoder::Error","value":"type Error: From<io::Error>;","parent":{"krate":0,"index":528},"children":[],"decl_id":null,"docs":" The type of encoding errors.","sig":null,"attributes":[{"value":"/ The type of encoding errors.","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\encoder.rs","byte_start":17237061,"byte_end":17237093,"line_start":9,"line_end":9,"column_start":5,"column_end":37}},{"value":"/","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\encoder.rs","byte_start":17237098,"byte_end":17237101,"line_start":10,"line_end":10,"column_start":5,"column_end":8}},{"value":"/ [`FramedWrite`] requires `Encoder`s errors to implement `From<io::Error>`","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\encoder.rs","byte_start":17237106,"byte_end":17237183,"line_start":11,"line_end":11,"column_start":5,"column_end":82}},{"value":"/ in the interest letting it return `Error`s directly.","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\encoder.rs","byte_start":17237188,"byte_end":17237244,"line_start":12,"line_end":12,"column_start":5,"column_end":61}},{"value":"/","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\encoder.rs","byte_start":17237249,"byte_end":17237252,"line_start":13,"line_end":13,"column_start":5,"column_end":8}},{"value":"/ [`FramedWrite`]: crate::codec::FramedWrite","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\encoder.rs","byte_start":17237257,"byte_end":17237303,"line_start":14,"line_end":14,"column_start":5,"column_end":51}}]},{"kind":"Method","id":{"krate":0,"index":531},"span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\encoder.rs","byte_start":17237669,"byte_end":17237675,"line_start":24,"line_end":24,"column_start":8,"column_end":14},"name":"encode","qualname":"::codec::encoder::Encoder::encode","value":"pub fn encode(&mut Self, Item, &mut BytesMut) -> Result<(), Self::Error>","parent":{"krate":0,"index":528},"children":[],"decl_id":null,"docs":" Encodes a frame into the buffer provided.","sig":null,"attributes":[{"value":"/ Encodes a frame into the buffer provided.","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\encoder.rs","byte_start":17237342,"byte_end":17237387,"line_start":17,"line_end":17,"column_start":5,"column_end":50}},{"value":"/","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\encoder.rs","byte_start":17237392,"byte_end":17237395,"line_start":18,"line_end":18,"column_start":5,"column_end":8}},{"value":"/ This method will encode `item` into the byte buffer provided by `dst`.","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\encoder.rs","byte_start":17237400,"byte_end":17237474,"line_start":19,"line_end":19,"column_start":5,"column_end":79}},{"value":"/ The `dst` provided is an internal buffer of the [`FramedWrite`] instance and","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\encoder.rs","byte_start":17237479,"byte_end":17237559,"line_start":20,"line_end":20,"column_start":5,"column_end":85}},{"value":"/ will be written out when possible.","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\encoder.rs","byte_start":17237564,"byte_end":17237602,"line_start":21,"line_end":21,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\encoder.rs","byte_start":17237607,"byte_end":17237610,"line_start":22,"line_end":22,"column_start":5,"column_end":8}},{"value":"/ [`FramedWrite`]: crate::codec::FramedWrite","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\encoder.rs","byte_start":17237615,"byte_end":17237661,"line_start":23,"line_end":23,"column_start":5,"column_end":51}}]},{"kind":"Struct","id":{"krate":0,"index":1475},"span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\framed.rs","byte_start":17251315,"byte_end":17251321,"line_start":27,"line_end":27,"column_start":16,"column_end":22},"name":"Framed","qualname":"::codec::framed::Framed","value":"Framed {  }","parent":null,"children":[{"krate":0,"index":1478}],"decl_id":null,"docs":" A unified [`Stream`] and [`Sink`] interface to an underlying I/O object, using\n the `Encoder` and `Decoder` traits to encode and decode frames.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":703},"span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\framed.rs","byte_start":17253094,"byte_end":17253097,"line_start":65,"line_end":65,"column_start":12,"column_end":15},"name":"new","qualname":"<Framed<T, U>>::new","value":"pub fn new(T, U) -> Framed<T, U>","parent":null,"children":[],"decl_id":null,"docs":" Provides a [`Stream`] and [`Sink`] interface for reading and writing to this\n I/O object, using [`Decoder`] and [`Encoder`] to read and write the raw data.","sig":null,"attributes":[{"value":"/ Provides a [`Stream`] and [`Sink`] interface for reading and writing to this","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\framed.rs","byte_start":17251463,"byte_end":17251543,"line_start":37,"line_end":37,"column_start":5,"column_end":85}},{"value":"/ I/O object, using [`Decoder`] and [`Encoder`] to read and write the raw data.","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\framed.rs","byte_start":17251548,"byte_end":17251629,"line_start":38,"line_end":38,"column_start":5,"column_end":86}},{"value":"/","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\framed.rs","byte_start":17251634,"byte_end":17251637,"line_start":39,"line_end":39,"column_start":5,"column_end":8}},{"value":"/ Raw I/O objects work with byte sequences, but higher-level code usually","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\framed.rs","byte_start":17251642,"byte_end":17251717,"line_start":40,"line_end":40,"column_start":5,"column_end":80}},{"value":"/ wants to batch these into meaningful chunks, called \"frames\". This","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\framed.rs","byte_start":17251722,"byte_end":17251792,"line_start":41,"line_end":41,"column_start":5,"column_end":75}},{"value":"/ method layers framing on top of an I/O object, by using the codec","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\framed.rs","byte_start":17251797,"byte_end":17251866,"line_start":42,"line_end":42,"column_start":5,"column_end":74}},{"value":"/ traits to handle encoding and decoding of messages frames. Note that","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\framed.rs","byte_start":17251871,"byte_end":17251943,"line_start":43,"line_end":43,"column_start":5,"column_end":77}},{"value":"/ the incoming and outgoing frame types may be distinct.","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\framed.rs","byte_start":17251948,"byte_end":17252006,"line_start":44,"line_end":44,"column_start":5,"column_end":63}},{"value":"/","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\framed.rs","byte_start":17252011,"byte_end":17252014,"line_start":45,"line_end":45,"column_start":5,"column_end":8}},{"value":"/ This function returns a *single* object that is both [`Stream`] and","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\framed.rs","byte_start":17252019,"byte_end":17252090,"line_start":46,"line_end":46,"column_start":5,"column_end":76}},{"value":"/ [`Sink`]; grouping this into a single object is often useful for layering","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\framed.rs","byte_start":17252095,"byte_end":17252172,"line_start":47,"line_end":47,"column_start":5,"column_end":82}},{"value":"/ things like gzip or TLS, which require both read and write access to the","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\framed.rs","byte_start":17252177,"byte_end":17252253,"line_start":48,"line_end":48,"column_start":5,"column_end":81}},{"value":"/ underlying object.","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\framed.rs","byte_start":17252258,"byte_end":17252280,"line_start":49,"line_end":49,"column_start":5,"column_end":27}},{"value":"/","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\framed.rs","byte_start":17252285,"byte_end":17252288,"line_start":50,"line_end":50,"column_start":5,"column_end":8}},{"value":"/ If you want to work more directly with the streams and sink, consider","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\framed.rs","byte_start":17252293,"byte_end":17252366,"line_start":51,"line_end":51,"column_start":5,"column_end":78}},{"value":"/ calling [`split`] on the `Framed` returned by this method, which will","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\framed.rs","byte_start":17252371,"byte_end":17252444,"line_start":52,"line_end":52,"column_start":5,"column_end":78}},{"value":"/ break them into separate objects, allowing them to interact more easily.","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\framed.rs","byte_start":17252449,"byte_end":17252525,"line_start":53,"line_end":53,"column_start":5,"column_end":81}},{"value":"/","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\framed.rs","byte_start":17252530,"byte_end":17252533,"line_start":54,"line_end":54,"column_start":5,"column_end":8}},{"value":"/ Note that, for some byte sources, the stream can be resumed after an EOF","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\framed.rs","byte_start":17252538,"byte_end":17252614,"line_start":55,"line_end":55,"column_start":5,"column_end":81}},{"value":"/ by reading from it, even after it has returned `None`. Repeated attempts","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\framed.rs","byte_start":17252619,"byte_end":17252695,"line_start":56,"line_end":56,"column_start":5,"column_end":81}},{"value":"/ to do so, without new data available, continue to return `None` without","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\framed.rs","byte_start":17252700,"byte_end":17252775,"line_start":57,"line_end":57,"column_start":5,"column_end":80}},{"value":"/ creating more (closing) frames.","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\framed.rs","byte_start":17252780,"byte_end":17252815,"line_start":58,"line_end":58,"column_start":5,"column_end":40}},{"value":"/","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\framed.rs","byte_start":17252820,"byte_end":17252823,"line_start":59,"line_end":59,"column_start":5,"column_end":8}},{"value":"/ [`Stream`]: futures_core::Stream","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\framed.rs","byte_start":17252828,"byte_end":17252864,"line_start":60,"line_end":60,"column_start":5,"column_end":41}},{"value":"/ [`Sink`]: futures_sink::Sink","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\framed.rs","byte_start":17252869,"byte_end":17252901,"line_start":61,"line_end":61,"column_start":5,"column_end":37}},{"value":"/ [`Decode`]: crate::codec::Decoder","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\framed.rs","byte_start":17252906,"byte_end":17252943,"line_start":62,"line_end":62,"column_start":5,"column_end":42}},{"value":"/ [`Encoder`]: crate::codec::Encoder","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\framed.rs","byte_start":17252948,"byte_end":17252986,"line_start":63,"line_end":63,"column_start":5,"column_end":43}},{"value":"/ [`split`]: https://docs.rs/futures/0.3/futures/stream/trait.StreamExt.html#method.split","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\framed.rs","byte_start":17252991,"byte_end":17253082,"line_start":64,"line_end":64,"column_start":5,"column_end":96}}]},{"kind":"Method","id":{"krate":0,"index":704},"span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\framed.rs","byte_start":17254705,"byte_end":17254718,"line_start":99,"line_end":99,"column_start":12,"column_end":25},"name":"with_capacity","qualname":"<Framed<T, U>>::with_capacity","value":"pub fn with_capacity(T, U, usize) -> Framed<T, U>","parent":null,"children":[],"decl_id":null,"docs":" Provides a [`Stream`] and [`Sink`] interface for reading and writing to this\n I/O object, using [`Decoder`] and [`Encoder`] to read and write the raw data,\n with a specific read buffer initial capacity.","sig":null,"attributes":[{"value":"/ Provides a [`Stream`] and [`Sink`] interface for reading and writing to this","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\framed.rs","byte_start":17253310,"byte_end":17253390,"line_start":75,"line_end":75,"column_start":5,"column_end":85}},{"value":"/ I/O object, using [`Decoder`] and [`Encoder`] to read and write the raw data,","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\framed.rs","byte_start":17253395,"byte_end":17253476,"line_start":76,"line_end":76,"column_start":5,"column_end":86}},{"value":"/ with a specific read buffer initial capacity.","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\framed.rs","byte_start":17253481,"byte_end":17253530,"line_start":77,"line_end":77,"column_start":5,"column_end":54}},{"value":"/","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\framed.rs","byte_start":17253535,"byte_end":17253538,"line_start":78,"line_end":78,"column_start":5,"column_end":8}},{"value":"/ Raw I/O objects work with byte sequences, but higher-level code usually","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\framed.rs","byte_start":17253543,"byte_end":17253618,"line_start":79,"line_end":79,"column_start":5,"column_end":80}},{"value":"/ wants to batch these into meaningful chunks, called \"frames\". This","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\framed.rs","byte_start":17253623,"byte_end":17253693,"line_start":80,"line_end":80,"column_start":5,"column_end":75}},{"value":"/ method layers framing on top of an I/O object, by using the codec","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\framed.rs","byte_start":17253698,"byte_end":17253767,"line_start":81,"line_end":81,"column_start":5,"column_end":74}},{"value":"/ traits to handle encoding and decoding of messages frames. Note that","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\framed.rs","byte_start":17253772,"byte_end":17253844,"line_start":82,"line_end":82,"column_start":5,"column_end":77}},{"value":"/ the incoming and outgoing frame types may be distinct.","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\framed.rs","byte_start":17253849,"byte_end":17253907,"line_start":83,"line_end":83,"column_start":5,"column_end":63}},{"value":"/","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\framed.rs","byte_start":17253912,"byte_end":17253915,"line_start":84,"line_end":84,"column_start":5,"column_end":8}},{"value":"/ This function returns a *single* object that is both [`Stream`] and","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\framed.rs","byte_start":17253920,"byte_end":17253991,"line_start":85,"line_end":85,"column_start":5,"column_end":76}},{"value":"/ [`Sink`]; grouping this into a single object is often useful for layering","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\framed.rs","byte_start":17253996,"byte_end":17254073,"line_start":86,"line_end":86,"column_start":5,"column_end":82}},{"value":"/ things like gzip or TLS, which require both read and write access to the","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\framed.rs","byte_start":17254078,"byte_end":17254154,"line_start":87,"line_end":87,"column_start":5,"column_end":81}},{"value":"/ underlying object.","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\framed.rs","byte_start":17254159,"byte_end":17254181,"line_start":88,"line_end":88,"column_start":5,"column_end":27}},{"value":"/","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\framed.rs","byte_start":17254186,"byte_end":17254189,"line_start":89,"line_end":89,"column_start":5,"column_end":8}},{"value":"/ If you want to work more directly with the streams and sink, consider","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\framed.rs","byte_start":17254194,"byte_end":17254267,"line_start":90,"line_end":90,"column_start":5,"column_end":78}},{"value":"/ calling [`split`] on the `Framed` returned by this method, which will","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\framed.rs","byte_start":17254272,"byte_end":17254345,"line_start":91,"line_end":91,"column_start":5,"column_end":78}},{"value":"/ break them into separate objects, allowing them to interact more easily.","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\framed.rs","byte_start":17254350,"byte_end":17254426,"line_start":92,"line_end":92,"column_start":5,"column_end":81}},{"value":"/","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\framed.rs","byte_start":17254431,"byte_end":17254434,"line_start":93,"line_end":93,"column_start":5,"column_end":8}},{"value":"/ [`Stream`]: futures_core::Stream","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\framed.rs","byte_start":17254439,"byte_end":17254475,"line_start":94,"line_end":94,"column_start":5,"column_end":41}},{"value":"/ [`Sink`]: futures_sink::Sink","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\framed.rs","byte_start":17254480,"byte_end":17254512,"line_start":95,"line_end":95,"column_start":5,"column_end":37}},{"value":"/ [`Decode`]: crate::codec::Decoder","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\framed.rs","byte_start":17254517,"byte_end":17254554,"line_start":96,"line_end":96,"column_start":5,"column_end":42}},{"value":"/ [`Encoder`]: crate::codec::Encoder","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\framed.rs","byte_start":17254559,"byte_end":17254597,"line_start":97,"line_end":97,"column_start":5,"column_end":43}},{"value":"/ [`split`]: https://docs.rs/futures/0.3/futures/stream/trait.StreamExt.html#method.split","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\framed.rs","byte_start":17254602,"byte_end":17254693,"line_start":98,"line_end":98,"column_start":5,"column_end":96}}]},{"kind":"Method","id":{"krate":0,"index":708},"span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\framed.rs","byte_start":17256865,"byte_end":17256875,"line_start":146,"line_end":146,"column_start":12,"column_end":22},"name":"from_parts","qualname":"<Framed<T, U>>::from_parts","value":"pub fn from_parts(FramedParts<T, U>) -> Framed<T, U>","parent":null,"children":[],"decl_id":null,"docs":" Provides a [`Stream`] and [`Sink`] interface for reading and writing to this\n I/O object, using [`Decoder`] and [`Encoder`] to read and write the raw data.","sig":null,"attributes":[{"value":"/ Provides a [`Stream`] and [`Sink`] interface for reading and writing to this","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\framed.rs","byte_start":17255288,"byte_end":17255368,"line_start":119,"line_end":119,"column_start":5,"column_end":85}},{"value":"/ I/O object, using [`Decoder`] and [`Encoder`] to read and write the raw data.","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\framed.rs","byte_start":17255373,"byte_end":17255454,"line_start":120,"line_end":120,"column_start":5,"column_end":86}},{"value":"/","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\framed.rs","byte_start":17255459,"byte_end":17255462,"line_start":121,"line_end":121,"column_start":5,"column_end":8}},{"value":"/ Raw I/O objects work with byte sequences, but higher-level code usually","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\framed.rs","byte_start":17255467,"byte_end":17255542,"line_start":122,"line_end":122,"column_start":5,"column_end":80}},{"value":"/ wants to batch these into meaningful chunks, called \"frames\". This","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\framed.rs","byte_start":17255547,"byte_end":17255617,"line_start":123,"line_end":123,"column_start":5,"column_end":75}},{"value":"/ method layers framing on top of an I/O object, by using the `Codec`","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\framed.rs","byte_start":17255622,"byte_end":17255693,"line_start":124,"line_end":124,"column_start":5,"column_end":76}},{"value":"/ traits to handle encoding and decoding of messages frames. Note that","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\framed.rs","byte_start":17255698,"byte_end":17255770,"line_start":125,"line_end":125,"column_start":5,"column_end":77}},{"value":"/ the incoming and outgoing frame types may be distinct.","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\framed.rs","byte_start":17255775,"byte_end":17255833,"line_start":126,"line_end":126,"column_start":5,"column_end":63}},{"value":"/","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\framed.rs","byte_start":17255838,"byte_end":17255841,"line_start":127,"line_end":127,"column_start":5,"column_end":8}},{"value":"/ This function returns a *single* object that is both [`Stream`] and","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\framed.rs","byte_start":17255846,"byte_end":17255917,"line_start":128,"line_end":128,"column_start":5,"column_end":76}},{"value":"/ [`Sink`]; grouping this into a single object is often useful for layering","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\framed.rs","byte_start":17255922,"byte_end":17255999,"line_start":129,"line_end":129,"column_start":5,"column_end":82}},{"value":"/ things like gzip or TLS, which require both read and write access to the","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\framed.rs","byte_start":17256004,"byte_end":17256080,"line_start":130,"line_end":130,"column_start":5,"column_end":81}},{"value":"/ underlying object.","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\framed.rs","byte_start":17256085,"byte_end":17256107,"line_start":131,"line_end":131,"column_start":5,"column_end":27}},{"value":"/","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\framed.rs","byte_start":17256112,"byte_end":17256115,"line_start":132,"line_end":132,"column_start":5,"column_end":8}},{"value":"/ This objects takes a stream and a readbuffer and a writebuffer. These field","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\framed.rs","byte_start":17256120,"byte_end":17256199,"line_start":133,"line_end":133,"column_start":5,"column_end":84}},{"value":"/ can be obtained from an existing `Framed` with the [`into_parts`] method.","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\framed.rs","byte_start":17256204,"byte_end":17256281,"line_start":134,"line_end":134,"column_start":5,"column_end":82}},{"value":"/","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\framed.rs","byte_start":17256286,"byte_end":17256289,"line_start":135,"line_end":135,"column_start":5,"column_end":8}},{"value":"/ If you want to work more directly with the streams and sink, consider","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\framed.rs","byte_start":17256294,"byte_end":17256367,"line_start":136,"line_end":136,"column_start":5,"column_end":78}},{"value":"/ calling [`split`] on the `Framed` returned by this method, which will","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\framed.rs","byte_start":17256372,"byte_end":17256445,"line_start":137,"line_end":137,"column_start":5,"column_end":78}},{"value":"/ break them into separate objects, allowing them to interact more easily.","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\framed.rs","byte_start":17256450,"byte_end":17256526,"line_start":138,"line_end":138,"column_start":5,"column_end":81}},{"value":"/","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\framed.rs","byte_start":17256531,"byte_end":17256534,"line_start":139,"line_end":139,"column_start":5,"column_end":8}},{"value":"/ [`Stream`]: futures_core::Stream","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\framed.rs","byte_start":17256539,"byte_end":17256575,"line_start":140,"line_end":140,"column_start":5,"column_end":41}},{"value":"/ [`Sink`]: futures_sink::Sink","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\framed.rs","byte_start":17256580,"byte_end":17256612,"line_start":141,"line_end":141,"column_start":5,"column_end":37}},{"value":"/ [`Decoder`]: crate::codec::Decoder","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\framed.rs","byte_start":17256617,"byte_end":17256655,"line_start":142,"line_end":142,"column_start":5,"column_end":43}},{"value":"/ [`Encoder`]: crate::codec::Encoder","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\framed.rs","byte_start":17256660,"byte_end":17256698,"line_start":143,"line_end":143,"column_start":5,"column_end":43}},{"value":"/ [`into_parts`]: crate::codec::Framed::into_parts()","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\framed.rs","byte_start":17256703,"byte_end":17256757,"line_start":144,"line_end":144,"column_start":5,"column_end":59}},{"value":"/ [`split`]: https://docs.rs/futures/0.3/futures/stream/trait.StreamExt.html#method.split","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\framed.rs","byte_start":17256762,"byte_end":17256853,"line_start":145,"line_end":145,"column_start":5,"column_end":96}}]},{"kind":"Method","id":{"krate":0,"index":709},"span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\framed.rs","byte_start":17257510,"byte_end":17257517,"line_start":165,"line_end":165,"column_start":12,"column_end":19},"name":"get_ref","qualname":"<Framed<T, U>>::get_ref","value":"pub fn get_ref(&Self) -> &T","parent":null,"children":[],"decl_id":null,"docs":" Returns a reference to the underlying I/O stream wrapped by\n `Framed`.","sig":null,"attributes":[{"value":"/ Returns a reference to the underlying I/O stream wrapped by","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\framed.rs","byte_start":17257227,"byte_end":17257290,"line_start":159,"line_end":159,"column_start":5,"column_end":68}},{"value":"/ `Framed`.","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\framed.rs","byte_start":17257295,"byte_end":17257308,"line_start":160,"line_end":160,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\framed.rs","byte_start":17257313,"byte_end":17257316,"line_start":161,"line_end":161,"column_start":5,"column_end":8}},{"value":"/ Note that care should be taken to not tamper with the underlying stream","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\framed.rs","byte_start":17257321,"byte_end":17257396,"line_start":162,"line_end":162,"column_start":5,"column_end":80}},{"value":"/ of data coming in as it may corrupt the stream of frames otherwise","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\framed.rs","byte_start":17257401,"byte_end":17257471,"line_start":163,"line_end":163,"column_start":5,"column_end":75}},{"value":"/ being worked with.","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\framed.rs","byte_start":17257476,"byte_end":17257498,"line_start":164,"line_end":164,"column_start":5,"column_end":27}}]},{"kind":"Method","id":{"krate":0,"index":710},"span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\framed.rs","byte_start":17257861,"byte_end":17257868,"line_start":175,"line_end":175,"column_start":12,"column_end":19},"name":"get_mut","qualname":"<Framed<T, U>>::get_mut","value":"pub fn get_mut(&mut Self) -> &mut T","parent":null,"children":[],"decl_id":null,"docs":" Returns a mutable reference to the underlying I/O stream wrapped by\n `Framed`.","sig":null,"attributes":[{"value":"/ Returns a mutable reference to the underlying I/O stream wrapped by","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\framed.rs","byte_start":17257570,"byte_end":17257641,"line_start":169,"line_end":169,"column_start":5,"column_end":76}},{"value":"/ `Framed`.","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\framed.rs","byte_start":17257646,"byte_end":17257659,"line_start":170,"line_end":170,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\framed.rs","byte_start":17257664,"byte_end":17257667,"line_start":171,"line_end":171,"column_start":5,"column_end":8}},{"value":"/ Note that care should be taken to not tamper with the underlying stream","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\framed.rs","byte_start":17257672,"byte_end":17257747,"line_start":172,"line_end":172,"column_start":5,"column_end":80}},{"value":"/ of data coming in as it may corrupt the stream of frames otherwise","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\framed.rs","byte_start":17257752,"byte_end":17257822,"line_start":173,"line_end":173,"column_start":5,"column_end":75}},{"value":"/ being worked with.","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\framed.rs","byte_start":17257827,"byte_end":17257849,"line_start":174,"line_end":174,"column_start":5,"column_end":27}}]},{"kind":"Method","id":{"krate":0,"index":711},"span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\framed.rs","byte_start":17258231,"byte_end":17258242,"line_start":185,"line_end":185,"column_start":12,"column_end":23},"name":"get_pin_mut","qualname":"<Framed<T, U>>::get_pin_mut","value":"pub fn get_pin_mut(Pin<&mut Self>) -> Pin<&mut T>","parent":null,"children":[],"decl_id":null,"docs":" Returns a pinned mutable reference to the underlying I/O stream wrapped by\n `Framed`.","sig":null,"attributes":[{"value":"/ Returns a pinned mutable reference to the underlying I/O stream wrapped by","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\framed.rs","byte_start":17257933,"byte_end":17258011,"line_start":179,"line_end":179,"column_start":5,"column_end":83}},{"value":"/ `Framed`.","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\framed.rs","byte_start":17258016,"byte_end":17258029,"line_start":180,"line_end":180,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\framed.rs","byte_start":17258034,"byte_end":17258037,"line_start":181,"line_end":181,"column_start":5,"column_end":8}},{"value":"/ Note that care should be taken to not tamper with the underlying stream","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\framed.rs","byte_start":17258042,"byte_end":17258117,"line_start":182,"line_end":182,"column_start":5,"column_end":80}},{"value":"/ of data coming in as it may corrupt the stream of frames otherwise","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\framed.rs","byte_start":17258122,"byte_end":17258192,"line_start":183,"line_end":183,"column_start":5,"column_end":75}},{"value":"/ being worked with.","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\framed.rs","byte_start":17258197,"byte_end":17258219,"line_start":184,"line_end":184,"column_start":5,"column_end":27}}]},{"kind":"Method","id":{"krate":0,"index":712},"span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\framed.rs","byte_start":17258589,"byte_end":17258594,"line_start":194,"line_end":194,"column_start":12,"column_end":17},"name":"codec","qualname":"<Framed<T, U>>::codec","value":"pub fn codec(&Self) -> &U","parent":null,"children":[],"decl_id":null,"docs":" Returns a reference to the underlying codec wrapped by\n `Framed`.","sig":null,"attributes":[{"value":"/ Returns a reference to the underlying codec wrapped by","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\framed.rs","byte_start":17258338,"byte_end":17258396,"line_start":189,"line_end":189,"column_start":5,"column_end":63}},{"value":"/ `Framed`.","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\framed.rs","byte_start":17258401,"byte_end":17258414,"line_start":190,"line_end":190,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\framed.rs","byte_start":17258419,"byte_end":17258422,"line_start":191,"line_end":191,"column_start":5,"column_end":8}},{"value":"/ Note that care should be taken to not tamper with the underlying codec","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\framed.rs","byte_start":17258427,"byte_end":17258501,"line_start":192,"line_end":192,"column_start":5,"column_end":79}},{"value":"/ as it may corrupt the stream of frames otherwise being worked with.","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\framed.rs","byte_start":17258506,"byte_end":17258577,"line_start":193,"line_end":193,"column_start":5,"column_end":76}}]},{"kind":"Method","id":{"krate":0,"index":713},"span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\framed.rs","byte_start":17258906,"byte_end":17258915,"line_start":203,"line_end":203,"column_start":12,"column_end":21},"name":"codec_mut","qualname":"<Framed<T, U>>::codec_mut","value":"pub fn codec_mut(&mut Self) -> &mut U","parent":null,"children":[],"decl_id":null,"docs":" Returns a mutable reference to the underlying codec wrapped by\n `Framed`.","sig":null,"attributes":[{"value":"/ Returns a mutable reference to the underlying codec wrapped by","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\framed.rs","byte_start":17258647,"byte_end":17258713,"line_start":198,"line_end":198,"column_start":5,"column_end":71}},{"value":"/ `Framed`.","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\framed.rs","byte_start":17258718,"byte_end":17258731,"line_start":199,"line_end":199,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\framed.rs","byte_start":17258736,"byte_end":17258739,"line_start":200,"line_end":200,"column_start":5,"column_end":8}},{"value":"/ Note that care should be taken to not tamper with the underlying codec","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\framed.rs","byte_start":17258744,"byte_end":17258818,"line_start":201,"line_end":201,"column_start":5,"column_end":79}},{"value":"/ as it may corrupt the stream of frames otherwise being worked with.","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\framed.rs","byte_start":17258823,"byte_end":17258894,"line_start":202,"line_end":202,"column_start":5,"column_end":76}}]},{"kind":"Method","id":{"krate":0,"index":714},"span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\framed.rs","byte_start":17259252,"byte_end":17259261,"line_start":212,"line_end":212,"column_start":12,"column_end":21},"name":"map_codec","qualname":"<Framed<T, U>>::map_codec","value":"pub fn map_codec<C, F>(Self, F) -> Framed<T, C> where F: FnOnce(U) -> C","parent":null,"children":[],"decl_id":null,"docs":" Maps the codec `U` to `C`, preserving the read and write buffers\n wrapped by `Framed`.","sig":null,"attributes":[{"value":"/ Maps the codec `U` to `C`, preserving the read and write buffers","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\framed.rs","byte_start":17258980,"byte_end":17259048,"line_start":207,"line_end":207,"column_start":5,"column_end":73}},{"value":"/ wrapped by `Framed`.","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\framed.rs","byte_start":17259053,"byte_end":17259077,"line_start":208,"line_end":208,"column_start":5,"column_end":29}},{"value":"/","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\framed.rs","byte_start":17259082,"byte_end":17259085,"line_start":209,"line_end":209,"column_start":5,"column_end":8}},{"value":"/ Note that care should be taken to not tamper with the underlying codec","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\framed.rs","byte_start":17259090,"byte_end":17259164,"line_start":210,"line_end":210,"column_start":5,"column_end":79}},{"value":"/ as it may corrupt the stream of frames otherwise being worked with.","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\framed.rs","byte_start":17259169,"byte_end":17259240,"line_start":211,"line_end":211,"column_start":5,"column_end":76}}]},{"kind":"Method","id":{"krate":0,"index":717},"span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\framed.rs","byte_start":17259952,"byte_end":17259965,"line_start":232,"line_end":232,"column_start":12,"column_end":25},"name":"codec_pin_mut","qualname":"<Framed<T, U>>::codec_pin_mut","value":"pub fn codec_pin_mut(Pin<&mut Self>) -> &mut U","parent":null,"children":[],"decl_id":null,"docs":" Returns a mutable reference to the underlying codec wrapped by\n `Framed`.","sig":null,"attributes":[{"value":"/ Returns a mutable reference to the underlying codec wrapped by","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\framed.rs","byte_start":17259693,"byte_end":17259759,"line_start":227,"line_end":227,"column_start":5,"column_end":71}},{"value":"/ `Framed`.","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\framed.rs","byte_start":17259764,"byte_end":17259777,"line_start":228,"line_end":228,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\framed.rs","byte_start":17259782,"byte_end":17259785,"line_start":229,"line_end":229,"column_start":5,"column_end":8}},{"value":"/ Note that care should be taken to not tamper with the underlying codec","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\framed.rs","byte_start":17259790,"byte_end":17259864,"line_start":230,"line_end":230,"column_start":5,"column_end":79}},{"value":"/ as it may corrupt the stream of frames otherwise being worked with.","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\framed.rs","byte_start":17259869,"byte_end":17259940,"line_start":231,"line_end":231,"column_start":5,"column_end":76}}]},{"kind":"Method","id":{"krate":0,"index":718},"span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\framed.rs","byte_start":17260111,"byte_end":17260122,"line_start":237,"line_end":237,"column_start":12,"column_end":23},"name":"read_buffer","qualname":"<Framed<T, U>>::read_buffer","value":"pub fn read_buffer(&Self) -> &BytesMut","parent":null,"children":[],"decl_id":null,"docs":" Returns a reference to the read buffer.\n","sig":null,"attributes":[{"value":"/ Returns a reference to the read buffer.","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\framed.rs","byte_start":17260056,"byte_end":17260099,"line_start":236,"line_end":236,"column_start":5,"column_end":48}}]},{"kind":"Method","id":{"krate":0,"index":719},"span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\framed.rs","byte_start":17260257,"byte_end":17260272,"line_start":242,"line_end":242,"column_start":12,"column_end":27},"name":"read_buffer_mut","qualname":"<Framed<T, U>>::read_buffer_mut","value":"pub fn read_buffer_mut(&mut Self) -> &mut BytesMut","parent":null,"children":[],"decl_id":null,"docs":" Returns a mutable reference to the read buffer.\n","sig":null,"attributes":[{"value":"/ Returns a mutable reference to the read buffer.","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\framed.rs","byte_start":17260194,"byte_end":17260245,"line_start":241,"line_end":241,"column_start":5,"column_end":56}}]},{"kind":"Method","id":{"krate":0,"index":720},"span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\framed.rs","byte_start":17260412,"byte_end":17260424,"line_start":247,"line_end":247,"column_start":12,"column_end":24},"name":"write_buffer","qualname":"<Framed<T, U>>::write_buffer","value":"pub fn write_buffer(&Self) -> &BytesMut","parent":null,"children":[],"decl_id":null,"docs":" Returns a reference to the write buffer.\n","sig":null,"attributes":[{"value":"/ Returns a reference to the write buffer.","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\framed.rs","byte_start":17260356,"byte_end":17260400,"line_start":246,"line_end":246,"column_start":5,"column_end":49}}]},{"kind":"Method","id":{"krate":0,"index":721},"span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\framed.rs","byte_start":17260561,"byte_end":17260577,"line_start":252,"line_end":252,"column_start":12,"column_end":28},"name":"write_buffer_mut","qualname":"<Framed<T, U>>::write_buffer_mut","value":"pub fn write_buffer_mut(&mut Self) -> &mut BytesMut","parent":null,"children":[],"decl_id":null,"docs":" Returns a mutable reference to the write buffer.\n","sig":null,"attributes":[{"value":"/ Returns a mutable reference to the write buffer.","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\framed.rs","byte_start":17260497,"byte_end":17260549,"line_start":251,"line_end":251,"column_start":5,"column_end":57}}]},{"kind":"Method","id":{"krate":0,"index":722},"span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\framed.rs","byte_start":17260927,"byte_end":17260937,"line_start":261,"line_end":261,"column_start":12,"column_end":22},"name":"into_inner","qualname":"<Framed<T, U>>::into_inner","value":"pub fn into_inner(Self) -> T","parent":null,"children":[],"decl_id":null,"docs":" Consumes the `Framed`, returning its underlying I/O stream.","sig":null,"attributes":[{"value":"/ Consumes the `Framed`, returning its underlying I/O stream.","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\framed.rs","byte_start":17260662,"byte_end":17260725,"line_start":256,"line_end":256,"column_start":5,"column_end":68}},{"value":"/","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\framed.rs","byte_start":17260730,"byte_end":17260733,"line_start":257,"line_end":257,"column_start":5,"column_end":8}},{"value":"/ Note that care should be taken to not tamper with the underlying stream","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\framed.rs","byte_start":17260738,"byte_end":17260813,"line_start":258,"line_end":258,"column_start":5,"column_end":80}},{"value":"/ of data coming in as it may corrupt the stream of frames otherwise","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\framed.rs","byte_start":17260818,"byte_end":17260888,"line_start":259,"line_end":259,"column_start":5,"column_end":75}},{"value":"/ being worked with.","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\framed.rs","byte_start":17260893,"byte_end":17260915,"line_start":260,"line_end":260,"column_start":5,"column_end":27}}]},{"kind":"Method","id":{"krate":0,"index":723},"span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\framed.rs","byte_start":17261309,"byte_end":17261319,"line_start":271,"line_end":271,"column_start":12,"column_end":22},"name":"into_parts","qualname":"<Framed<T, U>>::into_parts","value":"pub fn into_parts(Self) -> FramedParts<T, U>","parent":null,"children":[],"decl_id":null,"docs":" Consumes the `Framed`, returning its underlying I/O stream, the buffer\n with unprocessed data, and the codec.","sig":null,"attributes":[{"value":"/ Consumes the `Framed`, returning its underlying I/O stream, the buffer","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\framed.rs","byte_start":17260987,"byte_end":17261061,"line_start":265,"line_end":265,"column_start":5,"column_end":79}},{"value":"/ with unprocessed data, and the codec.","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\framed.rs","byte_start":17261066,"byte_end":17261107,"line_start":266,"line_end":266,"column_start":5,"column_end":46}},{"value":"/","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\framed.rs","byte_start":17261112,"byte_end":17261115,"line_start":267,"line_end":267,"column_start":5,"column_end":8}},{"value":"/ Note that care should be taken to not tamper with the underlying stream","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\framed.rs","byte_start":17261120,"byte_end":17261195,"line_start":268,"line_end":268,"column_start":5,"column_end":80}},{"value":"/ of data coming in as it may corrupt the stream of frames otherwise","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\framed.rs","byte_start":17261200,"byte_end":17261270,"line_start":269,"line_end":269,"column_start":5,"column_end":75}},{"value":"/ being worked with.","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\framed.rs","byte_start":17261275,"byte_end":17261297,"line_start":270,"line_end":270,"column_start":5,"column_end":27}}]},{"kind":"Struct","id":{"krate":0,"index":1201},"span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\framed.rs","byte_start":17263293,"byte_end":17263304,"line_start":341,"line_end":341,"column_start":12,"column_end":23},"name":"FramedParts","qualname":"::codec::framed::FramedParts","value":"FramedParts { io, codec, read_buf, write_buf }","parent":null,"children":[{"krate":0,"index":1204},{"krate":0,"index":1205},{"krate":0,"index":1206},{"krate":0,"index":1207},{"krate":0,"index":1208}],"decl_id":null,"docs":" `FramedParts` contains an export of the data of a Framed transport.\n It can be used to construct a new [`Framed`] with a different codec.\n It contains all current buffers and the inner transport.","sig":null,"attributes":[{"value":"/ `FramedParts` contains an export of the data of a Framed transport.","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\framed.rs","byte_start":17262978,"byte_end":17263049,"line_start":334,"line_end":334,"column_start":1,"column_end":72}},{"value":"/ It can be used to construct a new [`Framed`] with a different codec.","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\framed.rs","byte_start":17263050,"byte_end":17263122,"line_start":335,"line_end":335,"column_start":1,"column_end":73}},{"value":"/ It contains all current buffers and the inner transport.","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\framed.rs","byte_start":17263123,"byte_end":17263183,"line_start":336,"line_end":336,"column_start":1,"column_end":61}},{"value":"/","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\framed.rs","byte_start":17263184,"byte_end":17263187,"line_start":337,"line_end":337,"column_start":1,"column_end":4}},{"value":"/ [`Framed`]: crate::codec::Framed","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\framed.rs","byte_start":17263188,"byte_end":17263224,"line_start":338,"line_end":338,"column_start":1,"column_end":37}},{"value":"allow(clippy :: manual_non_exhaustive)","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\framed.rs","byte_start":17263242,"byte_end":17263281,"line_start":340,"line_end":340,"column_start":1,"column_end":40}}]},{"kind":"Field","id":{"krate":0,"index":1204},"span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\framed.rs","byte_start":17263390,"byte_end":17263392,"line_start":343,"line_end":343,"column_start":9,"column_end":11},"name":"io","qualname":"::codec::framed::FramedParts::io","value":"T","parent":{"krate":0,"index":1201},"children":[],"decl_id":null,"docs":" The inner transport used to read bytes to and write bytes to\n","sig":null,"attributes":[{"value":"/ The inner transport used to read bytes to and write bytes to","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\framed.rs","byte_start":17263317,"byte_end":17263381,"line_start":342,"line_end":342,"column_start":5,"column_end":69}}]},{"kind":"Field","id":{"krate":0,"index":1205},"span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\framed.rs","byte_start":17263424,"byte_end":17263429,"line_start":346,"line_end":346,"column_start":9,"column_end":14},"name":"codec","qualname":"::codec::framed::FramedParts::codec","value":"U","parent":{"krate":0,"index":1201},"children":[],"decl_id":null,"docs":" The codec\n","sig":null,"attributes":[{"value":"/ The codec","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\framed.rs","byte_start":17263402,"byte_end":17263415,"line_start":345,"line_end":345,"column_start":5,"column_end":18}}]},{"kind":"Field","id":{"krate":0,"index":1206},"span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\framed.rs","byte_start":17263494,"byte_end":17263502,"line_start":349,"line_end":349,"column_start":9,"column_end":17},"name":"read_buf","qualname":"::codec::framed::FramedParts::read_buf","value":"bytes::BytesMut","parent":{"krate":0,"index":1201},"children":[],"decl_id":null,"docs":" The buffer with read but unprocessed data.\n","sig":null,"attributes":[{"value":"/ The buffer with read but unprocessed data.","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\framed.rs","byte_start":17263439,"byte_end":17263485,"line_start":348,"line_end":348,"column_start":5,"column_end":51}}]},{"kind":"Field","id":{"krate":0,"index":1207},"span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\framed.rs","byte_start":17263589,"byte_end":17263598,"line_start":352,"line_end":352,"column_start":9,"column_end":18},"name":"write_buf","qualname":"::codec::framed::FramedParts::write_buf","value":"bytes::BytesMut","parent":{"krate":0,"index":1201},"children":[],"decl_id":null,"docs":" A buffer with unprocessed data which are not written yet.\n","sig":null,"attributes":[{"value":"/ A buffer with unprocessed data which are not written yet.","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\framed.rs","byte_start":17263519,"byte_end":17263580,"line_start":351,"line_end":351,"column_start":5,"column_end":66}}]},{"kind":"Method","id":{"krate":0,"index":745},"span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\framed.rs","byte_start":17263831,"byte_end":17263834,"line_start":361,"line_end":361,"column_start":12,"column_end":15},"name":"new","qualname":"<FramedParts<T, U>>::new","value":"pub fn new<I>(T, U) -> FramedParts<T, U> where U: Encoder<I>","parent":null,"children":[],"decl_id":null,"docs":" Create a new, default, `FramedParts`\n","sig":null,"attributes":[{"value":"/ Create a new, default, `FramedParts`","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\framed.rs","byte_start":17263779,"byte_end":17263819,"line_start":360,"line_end":360,"column_start":5,"column_end":45}}]},{"kind":"Struct","id":{"krate":0,"index":1434},"span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\framed_read.rs","byte_start":17264563,"byte_end":17264573,"line_start":19,"line_end":19,"column_start":16,"column_end":26},"name":"FramedRead","qualname":"::codec::framed_read::FramedRead","value":"FramedRead {  }","parent":null,"children":[{"krate":0,"index":1437}],"decl_id":null,"docs":" A [`Stream`] of messages decoded from an [`AsyncRead`].","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":796},"span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\framed_read.rs","byte_start":17264824,"byte_end":17264827,"line_start":33,"line_end":33,"column_start":12,"column_end":15},"name":"new","qualname":"<FramedRead<T, D>>::new","value":"pub fn new(T, D) -> FramedRead<T, D>","parent":null,"children":[],"decl_id":null,"docs":" Creates a new `FramedRead` with the given `decoder`.\n","sig":null,"attributes":[{"value":"/ Creates a new `FramedRead` with the given `decoder`.","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\framed_read.rs","byte_start":17264756,"byte_end":17264812,"line_start":32,"line_end":32,"column_start":5,"column_end":61}}]},{"kind":"Method","id":{"krate":0,"index":797},"span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\framed_read.rs","byte_start":17265175,"byte_end":17265188,"line_start":45,"line_end":45,"column_start":12,"column_end":25},"name":"with_capacity","qualname":"<FramedRead<T, D>>::with_capacity","value":"pub fn with_capacity(T, D, usize) -> FramedRead<T, D>","parent":null,"children":[],"decl_id":null,"docs":" Creates a new `FramedRead` with the given `decoder` and a buffer of `capacity`\n initial size.\n","sig":null,"attributes":[{"value":"/ Creates a new `FramedRead` with the given `decoder` and a buffer of `capacity`","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\framed_read.rs","byte_start":17265059,"byte_end":17265141,"line_start":43,"line_end":43,"column_start":5,"column_end":87}},{"value":"/ initial size.","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\framed_read.rs","byte_start":17265146,"byte_end":17265163,"line_start":44,"line_end":44,"column_start":5,"column_end":22}}]},{"kind":"Method","id":{"krate":0,"index":801},"span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\framed_read.rs","byte_start":17265942,"byte_end":17265949,"line_start":68,"line_end":68,"column_start":12,"column_end":19},"name":"get_ref","qualname":"<FramedRead<T, D>>::get_ref","value":"pub fn get_ref(&Self) -> &T","parent":null,"children":[],"decl_id":null,"docs":" Returns a reference to the underlying I/O stream wrapped by\n `FramedRead`.","sig":null,"attributes":[{"value":"/ Returns a reference to the underlying I/O stream wrapped by","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\framed_read.rs","byte_start":17265655,"byte_end":17265718,"line_start":62,"line_end":62,"column_start":5,"column_end":68}},{"value":"/ `FramedRead`.","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\framed_read.rs","byte_start":17265723,"byte_end":17265740,"line_start":63,"line_end":63,"column_start":5,"column_end":22}},{"value":"/","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\framed_read.rs","byte_start":17265745,"byte_end":17265748,"line_start":64,"line_end":64,"column_start":5,"column_end":8}},{"value":"/ Note that care should be taken to not tamper with the underlying stream","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\framed_read.rs","byte_start":17265753,"byte_end":17265828,"line_start":65,"line_end":65,"column_start":5,"column_end":80}},{"value":"/ of data coming in as it may corrupt the stream of frames otherwise","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\framed_read.rs","byte_start":17265833,"byte_end":17265903,"line_start":66,"line_end":66,"column_start":5,"column_end":75}},{"value":"/ being worked with.","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\framed_read.rs","byte_start":17265908,"byte_end":17265930,"line_start":67,"line_end":67,"column_start":5,"column_end":27}}]},{"kind":"Method","id":{"krate":0,"index":802},"span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\framed_read.rs","byte_start":17266297,"byte_end":17266304,"line_start":78,"line_end":78,"column_start":12,"column_end":19},"name":"get_mut","qualname":"<FramedRead<T, D>>::get_mut","value":"pub fn get_mut(&mut Self) -> &mut T","parent":null,"children":[],"decl_id":null,"docs":" Returns a mutable reference to the underlying I/O stream wrapped by\n `FramedRead`.","sig":null,"attributes":[{"value":"/ Returns a mutable reference to the underlying I/O stream wrapped by","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\framed_read.rs","byte_start":17266002,"byte_end":17266073,"line_start":72,"line_end":72,"column_start":5,"column_end":76}},{"value":"/ `FramedRead`.","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\framed_read.rs","byte_start":17266078,"byte_end":17266095,"line_start":73,"line_end":73,"column_start":5,"column_end":22}},{"value":"/","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\framed_read.rs","byte_start":17266100,"byte_end":17266103,"line_start":74,"line_end":74,"column_start":5,"column_end":8}},{"value":"/ Note that care should be taken to not tamper with the underlying stream","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\framed_read.rs","byte_start":17266108,"byte_end":17266183,"line_start":75,"line_end":75,"column_start":5,"column_end":80}},{"value":"/ of data coming in as it may corrupt the stream of frames otherwise","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\framed_read.rs","byte_start":17266188,"byte_end":17266258,"line_start":76,"line_end":76,"column_start":5,"column_end":75}},{"value":"/ being worked with.","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\framed_read.rs","byte_start":17266263,"byte_end":17266285,"line_start":77,"line_end":77,"column_start":5,"column_end":27}}]},{"kind":"Method","id":{"krate":0,"index":803},"span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\framed_read.rs","byte_start":17266671,"byte_end":17266682,"line_start":88,"line_end":88,"column_start":12,"column_end":23},"name":"get_pin_mut","qualname":"<FramedRead<T, D>>::get_pin_mut","value":"pub fn get_pin_mut(Pin<&mut Self>) -> Pin<&mut T>","parent":null,"children":[],"decl_id":null,"docs":" Returns a pinned mutable reference to the underlying I/O stream wrapped by\n `FramedRead`.","sig":null,"attributes":[{"value":"/ Returns a pinned mutable reference to the underlying I/O stream wrapped by","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\framed_read.rs","byte_start":17266369,"byte_end":17266447,"line_start":82,"line_end":82,"column_start":5,"column_end":83}},{"value":"/ `FramedRead`.","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\framed_read.rs","byte_start":17266452,"byte_end":17266469,"line_start":83,"line_end":83,"column_start":5,"column_end":22}},{"value":"/","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\framed_read.rs","byte_start":17266474,"byte_end":17266477,"line_start":84,"line_end":84,"column_start":5,"column_end":8}},{"value":"/ Note that care should be taken to not tamper with the underlying stream","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\framed_read.rs","byte_start":17266482,"byte_end":17266557,"line_start":85,"line_end":85,"column_start":5,"column_end":80}},{"value":"/ of data coming in as it may corrupt the stream of frames otherwise","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\framed_read.rs","byte_start":17266562,"byte_end":17266632,"line_start":86,"line_end":86,"column_start":5,"column_end":75}},{"value":"/ being worked with.","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\framed_read.rs","byte_start":17266637,"byte_end":17266659,"line_start":87,"line_end":87,"column_start":5,"column_end":27}}]},{"kind":"Method","id":{"krate":0,"index":804},"span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\framed_read.rs","byte_start":17267047,"byte_end":17267057,"line_start":97,"line_end":97,"column_start":12,"column_end":22},"name":"into_inner","qualname":"<FramedRead<T, D>>::into_inner","value":"pub fn into_inner(Self) -> T","parent":null,"children":[],"decl_id":null,"docs":" Consumes the `FramedRead`, returning its underlying I/O stream.","sig":null,"attributes":[{"value":"/ Consumes the `FramedRead`, returning its underlying I/O stream.","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\framed_read.rs","byte_start":17266778,"byte_end":17266845,"line_start":92,"line_end":92,"column_start":5,"column_end":72}},{"value":"/","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\framed_read.rs","byte_start":17266850,"byte_end":17266853,"line_start":93,"line_end":93,"column_start":5,"column_end":8}},{"value":"/ Note that care should be taken to not tamper with the underlying stream","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\framed_read.rs","byte_start":17266858,"byte_end":17266933,"line_start":94,"line_end":94,"column_start":5,"column_end":80}},{"value":"/ of data coming in as it may corrupt the stream of frames otherwise","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\framed_read.rs","byte_start":17266938,"byte_end":17267008,"line_start":95,"line_end":95,"column_start":5,"column_end":75}},{"value":"/ being worked with.","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\framed_read.rs","byte_start":17267013,"byte_end":17267035,"line_start":96,"line_end":96,"column_start":5,"column_end":27}}]},{"kind":"Method","id":{"krate":0,"index":805},"span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\framed_read.rs","byte_start":17267169,"byte_end":17267176,"line_start":102,"line_end":102,"column_start":12,"column_end":19},"name":"decoder","qualname":"<FramedRead<T, D>>::decoder","value":"pub fn decoder(&Self) -> &D","parent":null,"children":[],"decl_id":null,"docs":" Returns a reference to the underlying decoder.\n","sig":null,"attributes":[{"value":"/ Returns a reference to the underlying decoder.","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\framed_read.rs","byte_start":17267107,"byte_end":17267157,"line_start":101,"line_end":101,"column_start":5,"column_end":55}}]},{"kind":"Method","id":{"krate":0,"index":806},"span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\framed_read.rs","byte_start":17267299,"byte_end":17267310,"line_start":107,"line_end":107,"column_start":12,"column_end":23},"name":"decoder_mut","qualname":"<FramedRead<T, D>>::decoder_mut","value":"pub fn decoder_mut(&mut Self) -> &mut D","parent":null,"children":[],"decl_id":null,"docs":" Returns a mutable reference to the underlying decoder.\n","sig":null,"attributes":[{"value":"/ Returns a mutable reference to the underlying decoder.","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\framed_read.rs","byte_start":17267229,"byte_end":17267287,"line_start":106,"line_end":106,"column_start":5,"column_end":63}}]},{"kind":"Method","id":{"krate":0,"index":807},"span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\framed_read.rs","byte_start":17267475,"byte_end":17267486,"line_start":113,"line_end":113,"column_start":12,"column_end":23},"name":"map_decoder","qualname":"<FramedRead<T, D>>::map_decoder","value":"pub fn map_decoder<C, F>(Self, F) -> FramedRead<T, C> where F: FnOnce(D) -> C","parent":null,"children":[],"decl_id":null,"docs":" Maps the decoder `D` to `C`, preserving the read buffer\n wrapped by `Framed`.\n","sig":null,"attributes":[{"value":"/ Maps the decoder `D` to `C`, preserving the read buffer","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\framed_read.rs","byte_start":17267375,"byte_end":17267434,"line_start":111,"line_end":111,"column_start":5,"column_end":64}},{"value":"/ wrapped by `Framed`.","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\framed_read.rs","byte_start":17267439,"byte_end":17267463,"line_start":112,"line_end":112,"column_start":5,"column_end":29}}]},{"kind":"Method","id":{"krate":0,"index":810},"span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\framed_read.rs","byte_start":17268002,"byte_end":17268017,"line_start":133,"line_end":133,"column_start":12,"column_end":27},"name":"decoder_pin_mut","qualname":"<FramedRead<T, D>>::decoder_pin_mut","value":"pub fn decoder_pin_mut(Pin<&mut Self>) -> &mut D","parent":null,"children":[],"decl_id":null,"docs":" Returns a mutable reference to the underlying decoder.\n","sig":null,"attributes":[{"value":"/ Returns a mutable reference to the underlying decoder.","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\framed_read.rs","byte_start":17267932,"byte_end":17267990,"line_start":132,"line_end":132,"column_start":5,"column_end":63}}]},{"kind":"Method","id":{"krate":0,"index":811},"span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\framed_read.rs","byte_start":17268163,"byte_end":17268174,"line_start":138,"line_end":138,"column_start":12,"column_end":23},"name":"read_buffer","qualname":"<FramedRead<T, D>>::read_buffer","value":"pub fn read_buffer(&Self) -> &BytesMut","parent":null,"children":[],"decl_id":null,"docs":" Returns a reference to the read buffer.\n","sig":null,"attributes":[{"value":"/ Returns a reference to the read buffer.","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\framed_read.rs","byte_start":17268108,"byte_end":17268151,"line_start":137,"line_end":137,"column_start":5,"column_end":48}}]},{"kind":"Method","id":{"krate":0,"index":812},"span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\framed_read.rs","byte_start":17268304,"byte_end":17268319,"line_start":143,"line_end":143,"column_start":12,"column_end":27},"name":"read_buffer_mut","qualname":"<FramedRead<T, D>>::read_buffer_mut","value":"pub fn read_buffer_mut(&mut Self) -> &mut BytesMut","parent":null,"children":[],"decl_id":null,"docs":" Returns a mutable reference to the read buffer.\n","sig":null,"attributes":[{"value":"/ Returns a mutable reference to the read buffer.","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\framed_read.rs","byte_start":17268241,"byte_end":17268292,"line_start":142,"line_end":142,"column_start":5,"column_end":56}}]},{"kind":"Struct","id":{"krate":0,"index":1393},"span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\framed_write.rs","byte_start":17270420,"byte_end":17270431,"line_start":19,"line_end":19,"column_start":16,"column_end":27},"name":"FramedWrite","qualname":"::codec::framed_write::FramedWrite","value":"FramedWrite {  }","parent":null,"children":[{"krate":0,"index":1396}],"decl_id":null,"docs":" A [`Sink`] of frames encoded to an `AsyncWrite`.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":879},"span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\framed_write.rs","byte_start":17270638,"byte_end":17270641,"line_start":30,"line_end":30,"column_start":12,"column_end":15},"name":"new","qualname":"<FramedWrite<T, E>>::new","value":"pub fn new(T, E) -> FramedWrite<T, E>","parent":null,"children":[],"decl_id":null,"docs":" Creates a new `FramedWrite` with the given `encoder`.\n","sig":null,"attributes":[{"value":"/ Creates a new `FramedWrite` with the given `encoder`.","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\framed_write.rs","byte_start":17270569,"byte_end":17270626,"line_start":29,"line_end":29,"column_start":5,"column_end":62}}]},{"kind":"Method","id":{"krate":0,"index":883},"span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\framed_write.rs","byte_start":17271199,"byte_end":17271206,"line_start":48,"line_end":48,"column_start":12,"column_end":19},"name":"get_ref","qualname":"<FramedWrite<T, E>>::get_ref","value":"pub fn get_ref(&Self) -> &T","parent":null,"children":[],"decl_id":null,"docs":" Returns a reference to the underlying I/O stream wrapped by\n `FramedWrite`.","sig":null,"attributes":[{"value":"/ Returns a reference to the underlying I/O stream wrapped by","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\framed_write.rs","byte_start":17270911,"byte_end":17270974,"line_start":42,"line_end":42,"column_start":5,"column_end":68}},{"value":"/ `FramedWrite`.","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\framed_write.rs","byte_start":17270979,"byte_end":17270997,"line_start":43,"line_end":43,"column_start":5,"column_end":23}},{"value":"/","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\framed_write.rs","byte_start":17271002,"byte_end":17271005,"line_start":44,"line_end":44,"column_start":5,"column_end":8}},{"value":"/ Note that care should be taken to not tamper with the underlying stream","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\framed_write.rs","byte_start":17271010,"byte_end":17271085,"line_start":45,"line_end":45,"column_start":5,"column_end":80}},{"value":"/ of data coming in as it may corrupt the stream of frames otherwise","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\framed_write.rs","byte_start":17271090,"byte_end":17271160,"line_start":46,"line_end":46,"column_start":5,"column_end":75}},{"value":"/ being worked with.","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\framed_write.rs","byte_start":17271165,"byte_end":17271187,"line_start":47,"line_end":47,"column_start":5,"column_end":27}}]},{"kind":"Method","id":{"krate":0,"index":884},"span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\framed_write.rs","byte_start":17271555,"byte_end":17271562,"line_start":58,"line_end":58,"column_start":12,"column_end":19},"name":"get_mut","qualname":"<FramedWrite<T, E>>::get_mut","value":"pub fn get_mut(&mut Self) -> &mut T","parent":null,"children":[],"decl_id":null,"docs":" Returns a mutable reference to the underlying I/O stream wrapped by\n `FramedWrite`.","sig":null,"attributes":[{"value":"/ Returns a mutable reference to the underlying I/O stream wrapped by","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\framed_write.rs","byte_start":17271259,"byte_end":17271330,"line_start":52,"line_end":52,"column_start":5,"column_end":76}},{"value":"/ `FramedWrite`.","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\framed_write.rs","byte_start":17271335,"byte_end":17271353,"line_start":53,"line_end":53,"column_start":5,"column_end":23}},{"value":"/","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\framed_write.rs","byte_start":17271358,"byte_end":17271361,"line_start":54,"line_end":54,"column_start":5,"column_end":8}},{"value":"/ Note that care should be taken to not tamper with the underlying stream","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\framed_write.rs","byte_start":17271366,"byte_end":17271441,"line_start":55,"line_end":55,"column_start":5,"column_end":80}},{"value":"/ of data coming in as it may corrupt the stream of frames otherwise","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\framed_write.rs","byte_start":17271446,"byte_end":17271516,"line_start":56,"line_end":56,"column_start":5,"column_end":75}},{"value":"/ being worked with.","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\framed_write.rs","byte_start":17271521,"byte_end":17271543,"line_start":57,"line_end":57,"column_start":5,"column_end":27}}]},{"kind":"Method","id":{"krate":0,"index":885},"span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\framed_write.rs","byte_start":17271930,"byte_end":17271941,"line_start":68,"line_end":68,"column_start":12,"column_end":23},"name":"get_pin_mut","qualname":"<FramedWrite<T, E>>::get_pin_mut","value":"pub fn get_pin_mut(Pin<&mut Self>) -> Pin<&mut T>","parent":null,"children":[],"decl_id":null,"docs":" Returns a pinned mutable reference to the underlying I/O stream wrapped by\n `FramedWrite`.","sig":null,"attributes":[{"value":"/ Returns a pinned mutable reference to the underlying I/O stream wrapped by","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\framed_write.rs","byte_start":17271627,"byte_end":17271705,"line_start":62,"line_end":62,"column_start":5,"column_end":83}},{"value":"/ `FramedWrite`.","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\framed_write.rs","byte_start":17271710,"byte_end":17271728,"line_start":63,"line_end":63,"column_start":5,"column_end":23}},{"value":"/","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\framed_write.rs","byte_start":17271733,"byte_end":17271736,"line_start":64,"line_end":64,"column_start":5,"column_end":8}},{"value":"/ Note that care should be taken to not tamper with the underlying stream","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\framed_write.rs","byte_start":17271741,"byte_end":17271816,"line_start":65,"line_end":65,"column_start":5,"column_end":80}},{"value":"/ of data coming in as it may corrupt the stream of frames otherwise","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\framed_write.rs","byte_start":17271821,"byte_end":17271891,"line_start":66,"line_end":66,"column_start":5,"column_end":75}},{"value":"/ being worked with.","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\framed_write.rs","byte_start":17271896,"byte_end":17271918,"line_start":67,"line_end":67,"column_start":5,"column_end":27}}]},{"kind":"Method","id":{"krate":0,"index":886},"span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\framed_write.rs","byte_start":17272307,"byte_end":17272317,"line_start":77,"line_end":77,"column_start":12,"column_end":22},"name":"into_inner","qualname":"<FramedWrite<T, E>>::into_inner","value":"pub fn into_inner(Self) -> T","parent":null,"children":[],"decl_id":null,"docs":" Consumes the `FramedWrite`, returning its underlying I/O stream.","sig":null,"attributes":[{"value":"/ Consumes the `FramedWrite`, returning its underlying I/O stream.","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\framed_write.rs","byte_start":17272037,"byte_end":17272105,"line_start":72,"line_end":72,"column_start":5,"column_end":73}},{"value":"/","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\framed_write.rs","byte_start":17272110,"byte_end":17272113,"line_start":73,"line_end":73,"column_start":5,"column_end":8}},{"value":"/ Note that care should be taken to not tamper with the underlying stream","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\framed_write.rs","byte_start":17272118,"byte_end":17272193,"line_start":74,"line_end":74,"column_start":5,"column_end":80}},{"value":"/ of data coming in as it may corrupt the stream of frames otherwise","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\framed_write.rs","byte_start":17272198,"byte_end":17272268,"line_start":75,"line_end":75,"column_start":5,"column_end":75}},{"value":"/ being worked with.","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\framed_write.rs","byte_start":17272273,"byte_end":17272295,"line_start":76,"line_end":76,"column_start":5,"column_end":27}}]},{"kind":"Method","id":{"krate":0,"index":887},"span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\framed_write.rs","byte_start":17272429,"byte_end":17272436,"line_start":82,"line_end":82,"column_start":12,"column_end":19},"name":"encoder","qualname":"<FramedWrite<T, E>>::encoder","value":"pub fn encoder(&Self) -> &E","parent":null,"children":[],"decl_id":null,"docs":" Returns a reference to the underlying encoder.\n","sig":null,"attributes":[{"value":"/ Returns a reference to the underlying encoder.","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\framed_write.rs","byte_start":17272367,"byte_end":17272417,"line_start":81,"line_end":81,"column_start":5,"column_end":55}}]},{"kind":"Method","id":{"krate":0,"index":888},"span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\framed_write.rs","byte_start":17272559,"byte_end":17272570,"line_start":87,"line_end":87,"column_start":12,"column_end":23},"name":"encoder_mut","qualname":"<FramedWrite<T, E>>::encoder_mut","value":"pub fn encoder_mut(&mut Self) -> &mut E","parent":null,"children":[],"decl_id":null,"docs":" Returns a mutable reference to the underlying encoder.\n","sig":null,"attributes":[{"value":"/ Returns a mutable reference to the underlying encoder.","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\framed_write.rs","byte_start":17272489,"byte_end":17272547,"line_start":86,"line_end":86,"column_start":5,"column_end":63}}]},{"kind":"Method","id":{"krate":0,"index":889},"span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\framed_write.rs","byte_start":17272736,"byte_end":17272747,"line_start":93,"line_end":93,"column_start":12,"column_end":23},"name":"map_encoder","qualname":"<FramedWrite<T, E>>::map_encoder","value":"pub fn map_encoder<C, F>(Self, F) -> FramedWrite<T, C> where F: FnOnce(E) -> C","parent":null,"children":[],"decl_id":null,"docs":" Maps the encoder `E` to `C`, preserving the write buffer\n wrapped by `Framed`.\n","sig":null,"attributes":[{"value":"/ Maps the encoder `E` to `C`, preserving the write buffer","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\framed_write.rs","byte_start":17272635,"byte_end":17272695,"line_start":91,"line_end":91,"column_start":5,"column_end":65}},{"value":"/ wrapped by `Framed`.","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\framed_write.rs","byte_start":17272700,"byte_end":17272724,"line_start":92,"line_end":92,"column_start":5,"column_end":29}}]},{"kind":"Method","id":{"krate":0,"index":892},"span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\framed_write.rs","byte_start":17273265,"byte_end":17273280,"line_start":113,"line_end":113,"column_start":12,"column_end":27},"name":"encoder_pin_mut","qualname":"<FramedWrite<T, E>>::encoder_pin_mut","value":"pub fn encoder_pin_mut(Pin<&mut Self>) -> &mut E","parent":null,"children":[],"decl_id":null,"docs":" Returns a mutable reference to the underlying encoder.\n","sig":null,"attributes":[{"value":"/ Returns a mutable reference to the underlying encoder.","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\framed_write.rs","byte_start":17273195,"byte_end":17273253,"line_start":112,"line_end":112,"column_start":5,"column_end":63}}]},{"kind":"Method","id":{"krate":0,"index":893},"span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\framed_write.rs","byte_start":17273427,"byte_end":17273439,"line_start":118,"line_end":118,"column_start":12,"column_end":24},"name":"write_buffer","qualname":"<FramedWrite<T, E>>::write_buffer","value":"pub fn write_buffer(&Self) -> &BytesMut","parent":null,"children":[],"decl_id":null,"docs":" Returns a reference to the write buffer.\n","sig":null,"attributes":[{"value":"/ Returns a reference to the write buffer.","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\framed_write.rs","byte_start":17273371,"byte_end":17273415,"line_start":117,"line_end":117,"column_start":5,"column_end":49}}]},{"kind":"Method","id":{"krate":0,"index":894},"span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\framed_write.rs","byte_start":17273570,"byte_end":17273586,"line_start":123,"line_end":123,"column_start":12,"column_end":28},"name":"write_buffer_mut","qualname":"<FramedWrite<T, E>>::write_buffer_mut","value":"pub fn write_buffer_mut(&mut Self) -> &mut BytesMut","parent":null,"children":[],"decl_id":null,"docs":" Returns a mutable reference to the write buffer.\n","sig":null,"attributes":[{"value":"/ Returns a mutable reference to the write buffer.","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\framed_write.rs","byte_start":17273506,"byte_end":17273558,"line_start":122,"line_end":122,"column_start":5,"column_end":57}}]},{"kind":"Mod","id":{"krate":0,"index":916},"span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\length_delimited.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"length_delimited","qualname":"::codec::length_delimited","value":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\length_delimited.rs","parent":null,"children":[{"krate":0,"index":917},{"krate":0,"index":918},{"krate":0,"index":921},{"krate":0,"index":924},{"krate":0,"index":927},{"krate":0,"index":930},{"krate":0,"index":933},{"krate":0,"index":934},{"krate":0,"index":937},{"krate":0,"index":940},{"krate":0,"index":941},{"krate":0,"index":944},{"krate":0,"index":947},{"krate":0,"index":950},{"krate":0,"index":953},{"krate":0,"index":956},{"krate":0,"index":957},{"krate":0,"index":960},{"krate":0,"index":963},{"krate":0,"index":964},{"krate":0,"index":967},{"krate":0,"index":970},{"krate":0,"index":1213},{"krate":0,"index":1220},{"krate":0,"index":1222},{"krate":0,"index":1224},{"krate":0,"index":973},{"krate":0,"index":1225},{"krate":0,"index":1228},{"krate":0,"index":1230},{"krate":0,"index":1232},{"krate":0,"index":1238},{"krate":0,"index":1240},{"krate":0,"index":1242},{"krate":0,"index":975},{"krate":0,"index":982},{"krate":0,"index":986},{"krate":0,"index":990},{"krate":0,"index":992},{"krate":0,"index":999},{"krate":0,"index":1020},{"krate":0,"index":1022},{"krate":0,"index":1024},{"krate":0,"index":1026}],"decl_id":null,"docs":" Frame a stream of bytes based on a length prefix","sig":null,"attributes":[{"value":"/ Frame a stream of bytes based on a length prefix","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\length_delimited.rs","byte_start":17275113,"byte_end":17275165,"line_start":1,"line_end":1,"column_start":1,"column_end":53}},{"value":"/","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\length_delimited.rs","byte_start":17275166,"byte_end":17275169,"line_start":2,"line_end":2,"column_start":1,"column_end":4}},{"value":"/ Many protocols delimit their frames by prefacing frame data with a","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\length_delimited.rs","byte_start":17275170,"byte_end":17275240,"line_start":3,"line_end":3,"column_start":1,"column_end":71}},{"value":"/ frame head that specifies the length of the frame. The","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\length_delimited.rs","byte_start":17275241,"byte_end":17275299,"line_start":4,"line_end":4,"column_start":1,"column_end":59}},{"value":"/ `length_delimited` module provides utilities for handling the length","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\length_delimited.rs","byte_start":17275300,"byte_end":17275372,"line_start":5,"line_end":5,"column_start":1,"column_end":73}},{"value":"/ based framing. This allows the consumer to work with entire frames","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\length_delimited.rs","byte_start":17275373,"byte_end":17275443,"line_start":6,"line_end":6,"column_start":1,"column_end":71}},{"value":"/ without having to worry about buffering or other framing logic.","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\length_delimited.rs","byte_start":17275444,"byte_end":17275511,"line_start":7,"line_end":7,"column_start":1,"column_end":68}},{"value":"/","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\length_delimited.rs","byte_start":17275512,"byte_end":17275515,"line_start":8,"line_end":8,"column_start":1,"column_end":4}},{"value":"/ # Getting started","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\length_delimited.rs","byte_start":17275516,"byte_end":17275537,"line_start":9,"line_end":9,"column_start":1,"column_end":22}},{"value":"/","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\length_delimited.rs","byte_start":17275538,"byte_end":17275541,"line_start":10,"line_end":10,"column_start":1,"column_end":4}},{"value":"/ If implementing a protocol from scratch, using length delimited framing","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\length_delimited.rs","byte_start":17275542,"byte_end":17275617,"line_start":11,"line_end":11,"column_start":1,"column_end":76}},{"value":"/ is an easy way to get started. [`LengthDelimitedCodec::new()`] will","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\length_delimited.rs","byte_start":17275618,"byte_end":17275689,"line_start":12,"line_end":12,"column_start":1,"column_end":72}},{"value":"/ return a length delimited codec using default configuration values.","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\length_delimited.rs","byte_start":17275690,"byte_end":17275761,"line_start":13,"line_end":13,"column_start":1,"column_end":72}},{"value":"/ This can then be used to construct a framer to adapt a full-duplex","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\length_delimited.rs","byte_start":17275762,"byte_end":17275832,"line_start":14,"line_end":14,"column_start":1,"column_end":71}},{"value":"/ byte stream into a stream of frames.","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\length_delimited.rs","byte_start":17275833,"byte_end":17275873,"line_start":15,"line_end":15,"column_start":1,"column_end":41}},{"value":"/","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\length_delimited.rs","byte_start":17275874,"byte_end":17275877,"line_start":16,"line_end":16,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\length_delimited.rs","byte_start":17275878,"byte_end":17275885,"line_start":17,"line_end":17,"column_start":1,"column_end":8}},{"value":"/ use tokio::io::{AsyncRead, AsyncWrite};","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\length_delimited.rs","byte_start":17275886,"byte_end":17275929,"line_start":18,"line_end":18,"column_start":1,"column_end":44}},{"value":"/ use tokio_util::codec::{Framed, LengthDelimitedCodec};","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\length_delimited.rs","byte_start":17275930,"byte_end":17275988,"line_start":19,"line_end":19,"column_start":1,"column_end":59}},{"value":"/","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\length_delimited.rs","byte_start":17275989,"byte_end":17275992,"line_start":20,"line_end":20,"column_start":1,"column_end":4}},{"value":"/ fn bind_transport<T: AsyncRead + AsyncWrite>(io: T)","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\length_delimited.rs","byte_start":17275993,"byte_end":17276048,"line_start":21,"line_end":21,"column_start":1,"column_end":56}},{"value":"/     -> Framed<T, LengthDelimitedCodec>","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\length_delimited.rs","byte_start":17276049,"byte_end":17276091,"line_start":22,"line_end":22,"column_start":1,"column_end":43}},{"value":"/ {","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\length_delimited.rs","byte_start":17276092,"byte_end":17276097,"line_start":23,"line_end":23,"column_start":1,"column_end":6}},{"value":"/     Framed::new(io, LengthDelimitedCodec::new())","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\length_delimited.rs","byte_start":17276098,"byte_end":17276150,"line_start":24,"line_end":24,"column_start":1,"column_end":53}},{"value":"/ }","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\length_delimited.rs","byte_start":17276151,"byte_end":17276156,"line_start":25,"line_end":25,"column_start":1,"column_end":6}},{"value":"/ # pub fn main() {}","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\length_delimited.rs","byte_start":17276157,"byte_end":17276179,"line_start":26,"line_end":26,"column_start":1,"column_end":23}},{"value":"/ ```","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\length_delimited.rs","byte_start":17276180,"byte_end":17276187,"line_start":27,"line_end":27,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\length_delimited.rs","byte_start":17276188,"byte_end":17276191,"line_start":28,"line_end":28,"column_start":1,"column_end":4}},{"value":"/ The returned transport implements `Sink + Stream` for `BytesMut`. It","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\length_delimited.rs","byte_start":17276192,"byte_end":17276264,"line_start":29,"line_end":29,"column_start":1,"column_end":73}},{"value":"/ encodes the frame with a big-endian `u32` header denoting the frame","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\length_delimited.rs","byte_start":17276265,"byte_end":17276336,"line_start":30,"line_end":30,"column_start":1,"column_end":72}},{"value":"/ payload length:","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\length_delimited.rs","byte_start":17276337,"byte_end":17276356,"line_start":31,"line_end":31,"column_start":1,"column_end":20}},{"value":"/","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\length_delimited.rs","byte_start":17276357,"byte_end":17276360,"line_start":32,"line_end":32,"column_start":1,"column_end":4}},{"value":"/ ```text","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\length_delimited.rs","byte_start":17276361,"byte_end":17276372,"line_start":33,"line_end":33,"column_start":1,"column_end":12}},{"value":"/ +----------+--------------------------------+","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\length_delimited.rs","byte_start":17276373,"byte_end":17276422,"line_start":34,"line_end":34,"column_start":1,"column_end":50}},{"value":"/ | len: u32 |          frame payload         |","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\length_delimited.rs","byte_start":17276423,"byte_end":17276472,"line_start":35,"line_end":35,"column_start":1,"column_end":50}},{"value":"/ +----------+--------------------------------+","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\length_delimited.rs","byte_start":17276473,"byte_end":17276522,"line_start":36,"line_end":36,"column_start":1,"column_end":50}},{"value":"/ ```","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\length_delimited.rs","byte_start":17276523,"byte_end":17276530,"line_start":37,"line_end":37,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\length_delimited.rs","byte_start":17276531,"byte_end":17276534,"line_start":38,"line_end":38,"column_start":1,"column_end":4}},{"value":"/ Specifically, given the following:","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\length_delimited.rs","byte_start":17276535,"byte_end":17276573,"line_start":39,"line_end":39,"column_start":1,"column_end":39}},{"value":"/","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\length_delimited.rs","byte_start":17276574,"byte_end":17276577,"line_start":40,"line_end":40,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\length_delimited.rs","byte_start":17276578,"byte_end":17276585,"line_start":41,"line_end":41,"column_start":1,"column_end":8}},{"value":"/ use tokio::io::{AsyncRead, AsyncWrite};","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\length_delimited.rs","byte_start":17276586,"byte_end":17276629,"line_start":42,"line_end":42,"column_start":1,"column_end":44}},{"value":"/ use tokio_util::codec::{Framed, LengthDelimitedCodec};","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\length_delimited.rs","byte_start":17276630,"byte_end":17276688,"line_start":43,"line_end":43,"column_start":1,"column_end":59}},{"value":"/","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\length_delimited.rs","byte_start":17276689,"byte_end":17276692,"line_start":44,"line_end":44,"column_start":1,"column_end":4}},{"value":"/ use futures::SinkExt;","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\length_delimited.rs","byte_start":17276693,"byte_end":17276718,"line_start":45,"line_end":45,"column_start":1,"column_end":26}},{"value":"/ use bytes::Bytes;","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\length_delimited.rs","byte_start":17276719,"byte_end":17276740,"line_start":46,"line_end":46,"column_start":1,"column_end":22}},{"value":"/","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\length_delimited.rs","byte_start":17276741,"byte_end":17276744,"line_start":47,"line_end":47,"column_start":1,"column_end":4}},{"value":"/ async fn write_frame<T>(io: T) -> Result<(), Box<dyn std::error::Error>>","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\length_delimited.rs","byte_start":17276745,"byte_end":17276821,"line_start":48,"line_end":48,"column_start":1,"column_end":77}},{"value":"/ where","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\length_delimited.rs","byte_start":17276822,"byte_end":17276831,"line_start":49,"line_end":49,"column_start":1,"column_end":10}},{"value":"/     T: AsyncRead + AsyncWrite + Unpin,","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\length_delimited.rs","byte_start":17276832,"byte_end":17276874,"line_start":50,"line_end":50,"column_start":1,"column_end":43}},{"value":"/ {","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\length_delimited.rs","byte_start":17276875,"byte_end":17276880,"line_start":51,"line_end":51,"column_start":1,"column_end":6}},{"value":"/     let mut transport = Framed::new(io, LengthDelimitedCodec::new());","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\length_delimited.rs","byte_start":17276881,"byte_end":17276954,"line_start":52,"line_end":52,"column_start":1,"column_end":74}},{"value":"/     let frame = Bytes::from(\"hello world\");","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\length_delimited.rs","byte_start":17276955,"byte_end":17277002,"line_start":53,"line_end":53,"column_start":1,"column_end":48}},{"value":"/","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\length_delimited.rs","byte_start":17277003,"byte_end":17277006,"line_start":54,"line_end":54,"column_start":1,"column_end":4}},{"value":"/     transport.send(frame).await?;","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\length_delimited.rs","byte_start":17277007,"byte_end":17277044,"line_start":55,"line_end":55,"column_start":1,"column_end":38}},{"value":"/     Ok(())","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\length_delimited.rs","byte_start":17277045,"byte_end":17277059,"line_start":56,"line_end":56,"column_start":1,"column_end":15}},{"value":"/ }","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\length_delimited.rs","byte_start":17277060,"byte_end":17277065,"line_start":57,"line_end":57,"column_start":1,"column_end":6}},{"value":"/ ```","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\length_delimited.rs","byte_start":17277066,"byte_end":17277073,"line_start":58,"line_end":58,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\length_delimited.rs","byte_start":17277074,"byte_end":17277077,"line_start":59,"line_end":59,"column_start":1,"column_end":4}},{"value":"/ The encoded frame will look like this:","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\length_delimited.rs","byte_start":17277078,"byte_end":17277120,"line_start":60,"line_end":60,"column_start":1,"column_end":43}},{"value":"/","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\length_delimited.rs","byte_start":17277121,"byte_end":17277124,"line_start":61,"line_end":61,"column_start":1,"column_end":4}},{"value":"/ ```text","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\length_delimited.rs","byte_start":17277125,"byte_end":17277136,"line_start":62,"line_end":62,"column_start":1,"column_end":12}},{"value":"/ +---- len: u32 ----+---- data ----+","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\length_delimited.rs","byte_start":17277137,"byte_end":17277176,"line_start":63,"line_end":63,"column_start":1,"column_end":40}},{"value":"/ | \\x00\\x00\\x00\\x0b |  hello world |","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\length_delimited.rs","byte_start":17277177,"byte_end":17277216,"line_start":64,"line_end":64,"column_start":1,"column_end":40}},{"value":"/ +------------------+--------------+","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\length_delimited.rs","byte_start":17277217,"byte_end":17277256,"line_start":65,"line_end":65,"column_start":1,"column_end":40}},{"value":"/ ```","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\length_delimited.rs","byte_start":17277257,"byte_end":17277264,"line_start":66,"line_end":66,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\length_delimited.rs","byte_start":17277265,"byte_end":17277268,"line_start":67,"line_end":67,"column_start":1,"column_end":4}},{"value":"/ # Decoding","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\length_delimited.rs","byte_start":17277269,"byte_end":17277283,"line_start":68,"line_end":68,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\length_delimited.rs","byte_start":17277284,"byte_end":17277287,"line_start":69,"line_end":69,"column_start":1,"column_end":4}},{"value":"/ [`FramedRead`] adapts an [`AsyncRead`] into a `Stream` of [`BytesMut`],","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\length_delimited.rs","byte_start":17277288,"byte_end":17277363,"line_start":70,"line_end":70,"column_start":1,"column_end":76}},{"value":"/ such that each yielded [`BytesMut`] value contains the contents of an","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\length_delimited.rs","byte_start":17277364,"byte_end":17277437,"line_start":71,"line_end":71,"column_start":1,"column_end":74}},{"value":"/ entire frame. There are many configuration parameters enabling","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\length_delimited.rs","byte_start":17277438,"byte_end":17277504,"line_start":72,"line_end":72,"column_start":1,"column_end":67}},{"value":"/ [`FramedRead`] to handle a wide range of protocols. Here are some","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\length_delimited.rs","byte_start":17277505,"byte_end":17277574,"line_start":73,"line_end":73,"column_start":1,"column_end":70}},{"value":"/ examples that will cover the various options at a high level.","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\length_delimited.rs","byte_start":17277575,"byte_end":17277640,"line_start":74,"line_end":74,"column_start":1,"column_end":66}},{"value":"/","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\length_delimited.rs","byte_start":17277641,"byte_end":17277644,"line_start":75,"line_end":75,"column_start":1,"column_end":4}},{"value":"/ ## Example 1","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\length_delimited.rs","byte_start":17277645,"byte_end":17277661,"line_start":76,"line_end":76,"column_start":1,"column_end":17}},{"value":"/","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\length_delimited.rs","byte_start":17277662,"byte_end":17277665,"line_start":77,"line_end":77,"column_start":1,"column_end":4}},{"value":"/ The following will parse a `u16` length field at offset 0, including the","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\length_delimited.rs","byte_start":17277666,"byte_end":17277742,"line_start":78,"line_end":78,"column_start":1,"column_end":77}},{"value":"/ frame head in the yielded `BytesMut`.","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\length_delimited.rs","byte_start":17277743,"byte_end":17277784,"line_start":79,"line_end":79,"column_start":1,"column_end":42}},{"value":"/","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\length_delimited.rs","byte_start":17277785,"byte_end":17277788,"line_start":80,"line_end":80,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\length_delimited.rs","byte_start":17277789,"byte_end":17277796,"line_start":81,"line_end":81,"column_start":1,"column_end":8}},{"value":"/ # use tokio::io::AsyncRead;","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\length_delimited.rs","byte_start":17277797,"byte_end":17277828,"line_start":82,"line_end":82,"column_start":1,"column_end":32}},{"value":"/ # use tokio_util::codec::LengthDelimitedCodec;","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\length_delimited.rs","byte_start":17277829,"byte_end":17277879,"line_start":83,"line_end":83,"column_start":1,"column_end":51}},{"value":"/ # fn bind_read<T: AsyncRead>(io: T) {","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\length_delimited.rs","byte_start":17277880,"byte_end":17277921,"line_start":84,"line_end":84,"column_start":1,"column_end":42}},{"value":"/ LengthDelimitedCodec::builder()","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\length_delimited.rs","byte_start":17277922,"byte_end":17277957,"line_start":85,"line_end":85,"column_start":1,"column_end":36}},{"value":"/     .length_field_offset(0) // default value","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\length_delimited.rs","byte_start":17277958,"byte_end":17278006,"line_start":86,"line_end":86,"column_start":1,"column_end":49}},{"value":"/     .length_field_type::<u16>()","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\length_delimited.rs","byte_start":17278007,"byte_end":17278042,"line_start":87,"line_end":87,"column_start":1,"column_end":36}},{"value":"/     .length_adjustment(0)   // default value","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\length_delimited.rs","byte_start":17278043,"byte_end":17278091,"line_start":88,"line_end":88,"column_start":1,"column_end":49}},{"value":"/     .num_skip(0) // Do not strip frame header","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\length_delimited.rs","byte_start":17278092,"byte_end":17278141,"line_start":89,"line_end":89,"column_start":1,"column_end":50}},{"value":"/     .new_read(io);","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\length_delimited.rs","byte_start":17278142,"byte_end":17278164,"line_start":90,"line_end":90,"column_start":1,"column_end":23}},{"value":"/ # }","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\length_delimited.rs","byte_start":17278165,"byte_end":17278172,"line_start":91,"line_end":91,"column_start":1,"column_end":8}},{"value":"/ # pub fn main() {}","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\length_delimited.rs","byte_start":17278173,"byte_end":17278195,"line_start":92,"line_end":92,"column_start":1,"column_end":23}},{"value":"/ ```","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\length_delimited.rs","byte_start":17278196,"byte_end":17278203,"line_start":93,"line_end":93,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\length_delimited.rs","byte_start":17278204,"byte_end":17278207,"line_start":94,"line_end":94,"column_start":1,"column_end":4}},{"value":"/ The following frame will be decoded as such:","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\length_delimited.rs","byte_start":17278208,"byte_end":17278256,"line_start":95,"line_end":95,"column_start":1,"column_end":49}},{"value":"/","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\length_delimited.rs","byte_start":17278257,"byte_end":17278260,"line_start":96,"line_end":96,"column_start":1,"column_end":4}},{"value":"/ ```text","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\length_delimited.rs","byte_start":17278261,"byte_end":17278272,"line_start":97,"line_end":97,"column_start":1,"column_end":12}},{"value":"/          INPUT                           DECODED","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\length_delimited.rs","byte_start":17278273,"byte_end":17278325,"line_start":98,"line_end":98,"column_start":1,"column_end":53}},{"value":"/ +-- len ---+--- Payload ---+     +-- len ---+--- Payload ---+","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\length_delimited.rs","byte_start":17278326,"byte_end":17278391,"line_start":99,"line_end":99,"column_start":1,"column_end":66}},{"value":"/ | \\x00\\x0B |  Hello world  | --> | \\x00\\x0B |  Hello world  |","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\length_delimited.rs","byte_start":17278392,"byte_end":17278457,"line_start":100,"line_end":100,"column_start":1,"column_end":66}},{"value":"/ +----------+---------------+     +----------+---------------+","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\length_delimited.rs","byte_start":17278458,"byte_end":17278523,"line_start":101,"line_end":101,"column_start":1,"column_end":66}},{"value":"/ ```","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\length_delimited.rs","byte_start":17278524,"byte_end":17278531,"line_start":102,"line_end":102,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\length_delimited.rs","byte_start":17278532,"byte_end":17278535,"line_start":103,"line_end":103,"column_start":1,"column_end":4}},{"value":"/ The value of the length field is 11 (`\\x0B`) which represents the length","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\length_delimited.rs","byte_start":17278536,"byte_end":17278612,"line_start":104,"line_end":104,"column_start":1,"column_end":77}},{"value":"/ of the payload, `hello world`. By default, [`FramedRead`] assumes that","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\length_delimited.rs","byte_start":17278613,"byte_end":17278687,"line_start":105,"line_end":105,"column_start":1,"column_end":75}},{"value":"/ the length field represents the number of bytes that **follows** the","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\length_delimited.rs","byte_start":17278688,"byte_end":17278760,"line_start":106,"line_end":106,"column_start":1,"column_end":73}},{"value":"/ length field. Thus, the entire frame has a length of 13: 2 bytes for the","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\length_delimited.rs","byte_start":17278761,"byte_end":17278837,"line_start":107,"line_end":107,"column_start":1,"column_end":77}},{"value":"/ frame head + 11 bytes for the payload.","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\length_delimited.rs","byte_start":17278838,"byte_end":17278880,"line_start":108,"line_end":108,"column_start":1,"column_end":43}},{"value":"/","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\length_delimited.rs","byte_start":17278881,"byte_end":17278884,"line_start":109,"line_end":109,"column_start":1,"column_end":4}},{"value":"/ ## Example 2","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\length_delimited.rs","byte_start":17278885,"byte_end":17278901,"line_start":110,"line_end":110,"column_start":1,"column_end":17}},{"value":"/","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\length_delimited.rs","byte_start":17278902,"byte_end":17278905,"line_start":111,"line_end":111,"column_start":1,"column_end":4}},{"value":"/ The following will parse a `u16` length field at offset 0, omitting the","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\length_delimited.rs","byte_start":17278906,"byte_end":17278981,"line_start":112,"line_end":112,"column_start":1,"column_end":76}},{"value":"/ frame head in the yielded `BytesMut`.","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\length_delimited.rs","byte_start":17278982,"byte_end":17279023,"line_start":113,"line_end":113,"column_start":1,"column_end":42}},{"value":"/","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\length_delimited.rs","byte_start":17279024,"byte_end":17279027,"line_start":114,"line_end":114,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\length_delimited.rs","byte_start":17279028,"byte_end":17279035,"line_start":115,"line_end":115,"column_start":1,"column_end":8}},{"value":"/ # use tokio::io::AsyncRead;","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\length_delimited.rs","byte_start":17279036,"byte_end":17279067,"line_start":116,"line_end":116,"column_start":1,"column_end":32}},{"value":"/ # use tokio_util::codec::LengthDelimitedCodec;","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\length_delimited.rs","byte_start":17279068,"byte_end":17279118,"line_start":117,"line_end":117,"column_start":1,"column_end":51}},{"value":"/ # fn bind_read<T: AsyncRead>(io: T) {","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\length_delimited.rs","byte_start":17279119,"byte_end":17279160,"line_start":118,"line_end":118,"column_start":1,"column_end":42}},{"value":"/ LengthDelimitedCodec::builder()","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\length_delimited.rs","byte_start":17279161,"byte_end":17279196,"line_start":119,"line_end":119,"column_start":1,"column_end":36}},{"value":"/     .length_field_offset(0) // default value","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\length_delimited.rs","byte_start":17279197,"byte_end":17279245,"line_start":120,"line_end":120,"column_start":1,"column_end":49}},{"value":"/     .length_field_type::<u16>()","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\length_delimited.rs","byte_start":17279246,"byte_end":17279281,"line_start":121,"line_end":121,"column_start":1,"column_end":36}},{"value":"/     .length_adjustment(0)   // default value","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\length_delimited.rs","byte_start":17279282,"byte_end":17279330,"line_start":122,"line_end":122,"column_start":1,"column_end":49}},{"value":"/     // `num_skip` is not needed, the default is to skip","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\length_delimited.rs","byte_start":17279331,"byte_end":17279390,"line_start":123,"line_end":123,"column_start":1,"column_end":60}},{"value":"/     .new_read(io);","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\length_delimited.rs","byte_start":17279391,"byte_end":17279413,"line_start":124,"line_end":124,"column_start":1,"column_end":23}},{"value":"/ # }","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\length_delimited.rs","byte_start":17279414,"byte_end":17279421,"line_start":125,"line_end":125,"column_start":1,"column_end":8}},{"value":"/ # pub fn main() {}","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\length_delimited.rs","byte_start":17279422,"byte_end":17279444,"line_start":126,"line_end":126,"column_start":1,"column_end":23}},{"value":"/ ```","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\length_delimited.rs","byte_start":17279445,"byte_end":17279452,"line_start":127,"line_end":127,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\length_delimited.rs","byte_start":17279453,"byte_end":17279456,"line_start":128,"line_end":128,"column_start":1,"column_end":4}},{"value":"/ The following frame will be decoded as such:","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\length_delimited.rs","byte_start":17279457,"byte_end":17279505,"line_start":129,"line_end":129,"column_start":1,"column_end":49}},{"value":"/","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\length_delimited.rs","byte_start":17279506,"byte_end":17279509,"line_start":130,"line_end":130,"column_start":1,"column_end":4}},{"value":"/ ```text","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\length_delimited.rs","byte_start":17279510,"byte_end":17279521,"line_start":131,"line_end":131,"column_start":1,"column_end":12}},{"value":"/          INPUT                        DECODED","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\length_delimited.rs","byte_start":17279522,"byte_end":17279571,"line_start":132,"line_end":132,"column_start":1,"column_end":50}},{"value":"/ +-- len ---+--- Payload ---+     +--- Payload ---+","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\length_delimited.rs","byte_start":17279572,"byte_end":17279626,"line_start":133,"line_end":133,"column_start":1,"column_end":55}},{"value":"/ | \\x00\\x0B |  Hello world  | --> |  Hello world  |","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\length_delimited.rs","byte_start":17279627,"byte_end":17279681,"line_start":134,"line_end":134,"column_start":1,"column_end":55}},{"value":"/ +----------+---------------+     +---------------+","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\length_delimited.rs","byte_start":17279682,"byte_end":17279736,"line_start":135,"line_end":135,"column_start":1,"column_end":55}},{"value":"/ ```","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\length_delimited.rs","byte_start":17279737,"byte_end":17279744,"line_start":136,"line_end":136,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\length_delimited.rs","byte_start":17279745,"byte_end":17279748,"line_start":137,"line_end":137,"column_start":1,"column_end":4}},{"value":"/ This is similar to the first example, the only difference is that the","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\length_delimited.rs","byte_start":17279749,"byte_end":17279822,"line_start":138,"line_end":138,"column_start":1,"column_end":74}},{"value":"/ frame head is **not** included in the yielded `BytesMut` value.","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\length_delimited.rs","byte_start":17279823,"byte_end":17279890,"line_start":139,"line_end":139,"column_start":1,"column_end":68}},{"value":"/","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\length_delimited.rs","byte_start":17279891,"byte_end":17279894,"line_start":140,"line_end":140,"column_start":1,"column_end":4}},{"value":"/ ## Example 3","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\length_delimited.rs","byte_start":17279895,"byte_end":17279911,"line_start":141,"line_end":141,"column_start":1,"column_end":17}},{"value":"/","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\length_delimited.rs","byte_start":17279912,"byte_end":17279915,"line_start":142,"line_end":142,"column_start":1,"column_end":4}},{"value":"/ The following will parse a `u16` length field at offset 0, including the","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\length_delimited.rs","byte_start":17279916,"byte_end":17279992,"line_start":143,"line_end":143,"column_start":1,"column_end":77}},{"value":"/ frame head in the yielded `BytesMut`. In this case, the length field","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\length_delimited.rs","byte_start":17279993,"byte_end":17280065,"line_start":144,"line_end":144,"column_start":1,"column_end":73}},{"value":"/ **includes** the frame head length.","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\length_delimited.rs","byte_start":17280066,"byte_end":17280105,"line_start":145,"line_end":145,"column_start":1,"column_end":40}},{"value":"/","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\length_delimited.rs","byte_start":17280106,"byte_end":17280109,"line_start":146,"line_end":146,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\length_delimited.rs","byte_start":17280110,"byte_end":17280117,"line_start":147,"line_end":147,"column_start":1,"column_end":8}},{"value":"/ # use tokio::io::AsyncRead;","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\length_delimited.rs","byte_start":17280118,"byte_end":17280149,"line_start":148,"line_end":148,"column_start":1,"column_end":32}},{"value":"/ # use tokio_util::codec::LengthDelimitedCodec;","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\length_delimited.rs","byte_start":17280150,"byte_end":17280200,"line_start":149,"line_end":149,"column_start":1,"column_end":51}},{"value":"/ # fn bind_read<T: AsyncRead>(io: T) {","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\length_delimited.rs","byte_start":17280201,"byte_end":17280242,"line_start":150,"line_end":150,"column_start":1,"column_end":42}},{"value":"/ LengthDelimitedCodec::builder()","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\length_delimited.rs","byte_start":17280243,"byte_end":17280278,"line_start":151,"line_end":151,"column_start":1,"column_end":36}},{"value":"/     .length_field_offset(0) // default value","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\length_delimited.rs","byte_start":17280279,"byte_end":17280327,"line_start":152,"line_end":152,"column_start":1,"column_end":49}},{"value":"/     .length_field_type::<u16>()","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\length_delimited.rs","byte_start":17280328,"byte_end":17280363,"line_start":153,"line_end":153,"column_start":1,"column_end":36}},{"value":"/     .length_adjustment(-2)  // size of head","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\length_delimited.rs","byte_start":17280364,"byte_end":17280411,"line_start":154,"line_end":154,"column_start":1,"column_end":48}},{"value":"/     .num_skip(0)","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\length_delimited.rs","byte_start":17280412,"byte_end":17280432,"line_start":155,"line_end":155,"column_start":1,"column_end":21}},{"value":"/     .new_read(io);","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\length_delimited.rs","byte_start":17280433,"byte_end":17280455,"line_start":156,"line_end":156,"column_start":1,"column_end":23}},{"value":"/ # }","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\length_delimited.rs","byte_start":17280456,"byte_end":17280463,"line_start":157,"line_end":157,"column_start":1,"column_end":8}},{"value":"/ # pub fn main() {}","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\length_delimited.rs","byte_start":17280464,"byte_end":17280486,"line_start":158,"line_end":158,"column_start":1,"column_end":23}},{"value":"/ ```","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\length_delimited.rs","byte_start":17280487,"byte_end":17280494,"line_start":159,"line_end":159,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\length_delimited.rs","byte_start":17280495,"byte_end":17280498,"line_start":160,"line_end":160,"column_start":1,"column_end":4}},{"value":"/ The following frame will be decoded as such:","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\length_delimited.rs","byte_start":17280499,"byte_end":17280547,"line_start":161,"line_end":161,"column_start":1,"column_end":49}},{"value":"/","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\length_delimited.rs","byte_start":17280548,"byte_end":17280551,"line_start":162,"line_end":162,"column_start":1,"column_end":4}},{"value":"/ ```text","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\length_delimited.rs","byte_start":17280552,"byte_end":17280563,"line_start":163,"line_end":163,"column_start":1,"column_end":12}},{"value":"/          INPUT                           DECODED","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\length_delimited.rs","byte_start":17280564,"byte_end":17280616,"line_start":164,"line_end":164,"column_start":1,"column_end":53}},{"value":"/ +-- len ---+--- Payload ---+     +-- len ---+--- Payload ---+","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\length_delimited.rs","byte_start":17280617,"byte_end":17280682,"line_start":165,"line_end":165,"column_start":1,"column_end":66}},{"value":"/ | \\x00\\x0D |  Hello world  | --> | \\x00\\x0D |  Hello world  |","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\length_delimited.rs","byte_start":17280683,"byte_end":17280748,"line_start":166,"line_end":166,"column_start":1,"column_end":66}},{"value":"/ +----------+---------------+     +----------+---------------+","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\length_delimited.rs","byte_start":17280749,"byte_end":17280814,"line_start":167,"line_end":167,"column_start":1,"column_end":66}},{"value":"/ ```","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\length_delimited.rs","byte_start":17280815,"byte_end":17280822,"line_start":168,"line_end":168,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\length_delimited.rs","byte_start":17280823,"byte_end":17280826,"line_start":169,"line_end":169,"column_start":1,"column_end":4}},{"value":"/ In most cases, the length field represents the length of the payload","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\length_delimited.rs","byte_start":17280827,"byte_end":17280899,"line_start":170,"line_end":170,"column_start":1,"column_end":73}},{"value":"/ only, as shown in the previous examples. However, in some protocols the","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\length_delimited.rs","byte_start":17280900,"byte_end":17280975,"line_start":171,"line_end":171,"column_start":1,"column_end":76}},{"value":"/ length field represents the length of the whole frame, including the","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\length_delimited.rs","byte_start":17280976,"byte_end":17281048,"line_start":172,"line_end":172,"column_start":1,"column_end":73}},{"value":"/ head. In such cases, we specify a negative `length_adjustment` to adjust","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\length_delimited.rs","byte_start":17281049,"byte_end":17281125,"line_start":173,"line_end":173,"column_start":1,"column_end":77}},{"value":"/ the value provided in the frame head to represent the payload length.","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\length_delimited.rs","byte_start":17281126,"byte_end":17281199,"line_start":174,"line_end":174,"column_start":1,"column_end":74}},{"value":"/","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\length_delimited.rs","byte_start":17281200,"byte_end":17281203,"line_start":175,"line_end":175,"column_start":1,"column_end":4}},{"value":"/ ## Example 4","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\length_delimited.rs","byte_start":17281204,"byte_end":17281220,"line_start":176,"line_end":176,"column_start":1,"column_end":17}},{"value":"/","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\length_delimited.rs","byte_start":17281221,"byte_end":17281224,"line_start":177,"line_end":177,"column_start":1,"column_end":4}},{"value":"/ The following will parse a 3 byte length field at offset 0 in a 5 byte","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\length_delimited.rs","byte_start":17281225,"byte_end":17281299,"line_start":178,"line_end":178,"column_start":1,"column_end":75}},{"value":"/ frame head, including the frame head in the yielded `BytesMut`.","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\length_delimited.rs","byte_start":17281300,"byte_end":17281367,"line_start":179,"line_end":179,"column_start":1,"column_end":68}},{"value":"/","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\length_delimited.rs","byte_start":17281368,"byte_end":17281371,"line_start":180,"line_end":180,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\length_delimited.rs","byte_start":17281372,"byte_end":17281379,"line_start":181,"line_end":181,"column_start":1,"column_end":8}},{"value":"/ # use tokio::io::AsyncRead;","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\length_delimited.rs","byte_start":17281380,"byte_end":17281411,"line_start":182,"line_end":182,"column_start":1,"column_end":32}},{"value":"/ # use tokio_util::codec::LengthDelimitedCodec;","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\length_delimited.rs","byte_start":17281412,"byte_end":17281462,"line_start":183,"line_end":183,"column_start":1,"column_end":51}},{"value":"/ # fn bind_read<T: AsyncRead>(io: T) {","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\length_delimited.rs","byte_start":17281463,"byte_end":17281504,"line_start":184,"line_end":184,"column_start":1,"column_end":42}},{"value":"/ LengthDelimitedCodec::builder()","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\length_delimited.rs","byte_start":17281505,"byte_end":17281540,"line_start":185,"line_end":185,"column_start":1,"column_end":36}},{"value":"/     .length_field_offset(0) // default value","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\length_delimited.rs","byte_start":17281541,"byte_end":17281589,"line_start":186,"line_end":186,"column_start":1,"column_end":49}},{"value":"/     .length_field_length(3)","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\length_delimited.rs","byte_start":17281590,"byte_end":17281621,"line_start":187,"line_end":187,"column_start":1,"column_end":32}},{"value":"/     .length_adjustment(2)  // remaining head","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\length_delimited.rs","byte_start":17281622,"byte_end":17281670,"line_start":188,"line_end":188,"column_start":1,"column_end":49}},{"value":"/     .num_skip(0)","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\length_delimited.rs","byte_start":17281671,"byte_end":17281691,"line_start":189,"line_end":189,"column_start":1,"column_end":21}},{"value":"/     .new_read(io);","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\length_delimited.rs","byte_start":17281692,"byte_end":17281714,"line_start":190,"line_end":190,"column_start":1,"column_end":23}},{"value":"/ # }","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\length_delimited.rs","byte_start":17281715,"byte_end":17281722,"line_start":191,"line_end":191,"column_start":1,"column_end":8}},{"value":"/ # pub fn main() {}","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\length_delimited.rs","byte_start":17281723,"byte_end":17281745,"line_start":192,"line_end":192,"column_start":1,"column_end":23}},{"value":"/ ```","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\length_delimited.rs","byte_start":17281746,"byte_end":17281753,"line_start":193,"line_end":193,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\length_delimited.rs","byte_start":17281754,"byte_end":17281757,"line_start":194,"line_end":194,"column_start":1,"column_end":4}},{"value":"/ The following frame will be decoded as such:","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\length_delimited.rs","byte_start":17281758,"byte_end":17281806,"line_start":195,"line_end":195,"column_start":1,"column_end":49}},{"value":"/","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\length_delimited.rs","byte_start":17281807,"byte_end":17281810,"line_start":196,"line_end":196,"column_start":1,"column_end":4}},{"value":"/ ```text","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\length_delimited.rs","byte_start":17281811,"byte_end":17281822,"line_start":197,"line_end":197,"column_start":1,"column_end":12}},{"value":"/                  INPUT","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\length_delimited.rs","byte_start":17281823,"byte_end":17281849,"line_start":198,"line_end":198,"column_start":1,"column_end":27}},{"value":"/ +---- len -----+- head -+--- Payload ---+","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\length_delimited.rs","byte_start":17281850,"byte_end":17281895,"line_start":199,"line_end":199,"column_start":1,"column_end":46}},{"value":"/ | \\x00\\x00\\x0B | \\xCAFE |  Hello world  |","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\length_delimited.rs","byte_start":17281896,"byte_end":17281941,"line_start":200,"line_end":200,"column_start":1,"column_end":46}},{"value":"/ +--------------+--------+---------------+","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\length_delimited.rs","byte_start":17281942,"byte_end":17281987,"line_start":201,"line_end":201,"column_start":1,"column_end":46}},{"value":"/","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\length_delimited.rs","byte_start":17281988,"byte_end":17281991,"line_start":202,"line_end":202,"column_start":1,"column_end":4}},{"value":"/                  DECODED","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\length_delimited.rs","byte_start":17281992,"byte_end":17282020,"line_start":203,"line_end":203,"column_start":1,"column_end":29}},{"value":"/ +---- len -----+- head -+--- Payload ---+","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\length_delimited.rs","byte_start":17282021,"byte_end":17282066,"line_start":204,"line_end":204,"column_start":1,"column_end":46}},{"value":"/ | \\x00\\x00\\x0B | \\xCAFE |  Hello world  |","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\length_delimited.rs","byte_start":17282067,"byte_end":17282112,"line_start":205,"line_end":205,"column_start":1,"column_end":46}},{"value":"/ +--------------+--------+---------------+","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\length_delimited.rs","byte_start":17282113,"byte_end":17282158,"line_start":206,"line_end":206,"column_start":1,"column_end":46}},{"value":"/ ```","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\length_delimited.rs","byte_start":17282159,"byte_end":17282166,"line_start":207,"line_end":207,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\length_delimited.rs","byte_start":17282167,"byte_end":17282170,"line_start":208,"line_end":208,"column_start":1,"column_end":4}},{"value":"/ A more advanced example that shows a case where there is extra frame","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\length_delimited.rs","byte_start":17282171,"byte_end":17282243,"line_start":209,"line_end":209,"column_start":1,"column_end":73}},{"value":"/ head data between the length field and the payload. In such cases, it is","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\length_delimited.rs","byte_start":17282244,"byte_end":17282320,"line_start":210,"line_end":210,"column_start":1,"column_end":77}},{"value":"/ usually desirable to include the frame head as part of the yielded","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\length_delimited.rs","byte_start":17282321,"byte_end":17282391,"line_start":211,"line_end":211,"column_start":1,"column_end":71}},{"value":"/ `BytesMut`. This lets consumers of the length delimited framer to","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\length_delimited.rs","byte_start":17282392,"byte_end":17282461,"line_start":212,"line_end":212,"column_start":1,"column_end":70}},{"value":"/ process the frame head as needed.","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\length_delimited.rs","byte_start":17282462,"byte_end":17282499,"line_start":213,"line_end":213,"column_start":1,"column_end":38}},{"value":"/","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\length_delimited.rs","byte_start":17282500,"byte_end":17282503,"line_start":214,"line_end":214,"column_start":1,"column_end":4}},{"value":"/ The positive `length_adjustment` value lets `FramedRead` factor in the","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\length_delimited.rs","byte_start":17282504,"byte_end":17282578,"line_start":215,"line_end":215,"column_start":1,"column_end":75}},{"value":"/ additional head into the frame length calculation.","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\length_delimited.rs","byte_start":17282579,"byte_end":17282633,"line_start":216,"line_end":216,"column_start":1,"column_end":55}},{"value":"/","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\length_delimited.rs","byte_start":17282634,"byte_end":17282637,"line_start":217,"line_end":217,"column_start":1,"column_end":4}},{"value":"/ ## Example 5","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\length_delimited.rs","byte_start":17282638,"byte_end":17282654,"line_start":218,"line_end":218,"column_start":1,"column_end":17}},{"value":"/","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\length_delimited.rs","byte_start":17282655,"byte_end":17282658,"line_start":219,"line_end":219,"column_start":1,"column_end":4}},{"value":"/ The following will parse a `u16` length field at offset 1 of a 4 byte","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\length_delimited.rs","byte_start":17282659,"byte_end":17282732,"line_start":220,"line_end":220,"column_start":1,"column_end":74}},{"value":"/ frame head. The first byte and the length field will be omitted from the","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\length_delimited.rs","byte_start":17282733,"byte_end":17282809,"line_start":221,"line_end":221,"column_start":1,"column_end":77}},{"value":"/ yielded `BytesMut`, but the trailing 2 bytes of the frame head will be","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\length_delimited.rs","byte_start":17282810,"byte_end":17282884,"line_start":222,"line_end":222,"column_start":1,"column_end":75}},{"value":"/ included.","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\length_delimited.rs","byte_start":17282885,"byte_end":17282898,"line_start":223,"line_end":223,"column_start":1,"column_end":14}},{"value":"/","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\length_delimited.rs","byte_start":17282899,"byte_end":17282902,"line_start":224,"line_end":224,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\length_delimited.rs","byte_start":17282903,"byte_end":17282910,"line_start":225,"line_end":225,"column_start":1,"column_end":8}},{"value":"/ # use tokio::io::AsyncRead;","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\length_delimited.rs","byte_start":17282911,"byte_end":17282942,"line_start":226,"line_end":226,"column_start":1,"column_end":32}},{"value":"/ # use tokio_util::codec::LengthDelimitedCodec;","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\length_delimited.rs","byte_start":17282943,"byte_end":17282993,"line_start":227,"line_end":227,"column_start":1,"column_end":51}},{"value":"/ # fn bind_read<T: AsyncRead>(io: T) {","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\length_delimited.rs","byte_start":17282994,"byte_end":17283035,"line_start":228,"line_end":228,"column_start":1,"column_end":42}},{"value":"/ LengthDelimitedCodec::builder()","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\length_delimited.rs","byte_start":17283036,"byte_end":17283071,"line_start":229,"line_end":229,"column_start":1,"column_end":36}},{"value":"/     .length_field_offset(1) // length of hdr1","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\length_delimited.rs","byte_start":17283072,"byte_end":17283121,"line_start":230,"line_end":230,"column_start":1,"column_end":50}},{"value":"/     .length_field_type::<u16>()","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\length_delimited.rs","byte_start":17283122,"byte_end":17283157,"line_start":231,"line_end":231,"column_start":1,"column_end":36}},{"value":"/     .length_adjustment(1)  // length of hdr2","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\length_delimited.rs","byte_start":17283158,"byte_end":17283206,"line_start":232,"line_end":232,"column_start":1,"column_end":49}},{"value":"/     .num_skip(3) // length of hdr1 + LEN","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\length_delimited.rs","byte_start":17283207,"byte_end":17283251,"line_start":233,"line_end":233,"column_start":1,"column_end":45}},{"value":"/     .new_read(io);","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\length_delimited.rs","byte_start":17283252,"byte_end":17283274,"line_start":234,"line_end":234,"column_start":1,"column_end":23}},{"value":"/ # }","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\length_delimited.rs","byte_start":17283275,"byte_end":17283282,"line_start":235,"line_end":235,"column_start":1,"column_end":8}},{"value":"/ # pub fn main() {}","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\length_delimited.rs","byte_start":17283283,"byte_end":17283305,"line_start":236,"line_end":236,"column_start":1,"column_end":23}},{"value":"/ ```","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\length_delimited.rs","byte_start":17283306,"byte_end":17283313,"line_start":237,"line_end":237,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\length_delimited.rs","byte_start":17283314,"byte_end":17283317,"line_start":238,"line_end":238,"column_start":1,"column_end":4}},{"value":"/ The following frame will be decoded as such:","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\length_delimited.rs","byte_start":17283318,"byte_end":17283366,"line_start":239,"line_end":239,"column_start":1,"column_end":49}},{"value":"/","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\length_delimited.rs","byte_start":17283367,"byte_end":17283370,"line_start":240,"line_end":240,"column_start":1,"column_end":4}},{"value":"/ ```text","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\length_delimited.rs","byte_start":17283371,"byte_end":17283382,"line_start":241,"line_end":241,"column_start":1,"column_end":12}},{"value":"/                  INPUT","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\length_delimited.rs","byte_start":17283383,"byte_end":17283409,"line_start":242,"line_end":242,"column_start":1,"column_end":27}},{"value":"/ +- hdr1 -+-- len ---+- hdr2 -+--- Payload ---+","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\length_delimited.rs","byte_start":17283410,"byte_end":17283460,"line_start":243,"line_end":243,"column_start":1,"column_end":51}},{"value":"/ |  \\xCA  | \\x00\\x0B |  \\xFE  |  Hello world  |","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\length_delimited.rs","byte_start":17283461,"byte_end":17283511,"line_start":244,"line_end":244,"column_start":1,"column_end":51}},{"value":"/ +--------+----------+--------+---------------+","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\length_delimited.rs","byte_start":17283512,"byte_end":17283562,"line_start":245,"line_end":245,"column_start":1,"column_end":51}},{"value":"/","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\length_delimited.rs","byte_start":17283563,"byte_end":17283566,"line_start":246,"line_end":246,"column_start":1,"column_end":4}},{"value":"/          DECODED","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\length_delimited.rs","byte_start":17283567,"byte_end":17283587,"line_start":247,"line_end":247,"column_start":1,"column_end":21}},{"value":"/ +- hdr2 -+--- Payload ---+","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\length_delimited.rs","byte_start":17283588,"byte_end":17283618,"line_start":248,"line_end":248,"column_start":1,"column_end":31}},{"value":"/ |  \\xFE  |  Hello world  |","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\length_delimited.rs","byte_start":17283619,"byte_end":17283649,"line_start":249,"line_end":249,"column_start":1,"column_end":31}},{"value":"/ +--------+---------------+","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\length_delimited.rs","byte_start":17283650,"byte_end":17283680,"line_start":250,"line_end":250,"column_start":1,"column_end":31}},{"value":"/ ```","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\length_delimited.rs","byte_start":17283681,"byte_end":17283688,"line_start":251,"line_end":251,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\length_delimited.rs","byte_start":17283689,"byte_end":17283692,"line_start":252,"line_end":252,"column_start":1,"column_end":4}},{"value":"/ The length field is situated in the middle of the frame head. In this","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\length_delimited.rs","byte_start":17283693,"byte_end":17283766,"line_start":253,"line_end":253,"column_start":1,"column_end":74}},{"value":"/ case, the first byte in the frame head could be a version or some other","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\length_delimited.rs","byte_start":17283767,"byte_end":17283842,"line_start":254,"line_end":254,"column_start":1,"column_end":76}},{"value":"/ identifier that is not needed for processing. On the other hand, the","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\length_delimited.rs","byte_start":17283843,"byte_end":17283915,"line_start":255,"line_end":255,"column_start":1,"column_end":73}},{"value":"/ second half of the head is needed.","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\length_delimited.rs","byte_start":17283916,"byte_end":17283954,"line_start":256,"line_end":256,"column_start":1,"column_end":39}},{"value":"/","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\length_delimited.rs","byte_start":17283955,"byte_end":17283958,"line_start":257,"line_end":257,"column_start":1,"column_end":4}},{"value":"/ `length_field_offset` indicates how many bytes to skip before starting","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\length_delimited.rs","byte_start":17283959,"byte_end":17284033,"line_start":258,"line_end":258,"column_start":1,"column_end":75}},{"value":"/ to read the length field.  `length_adjustment` is the number of bytes to","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\length_delimited.rs","byte_start":17284034,"byte_end":17284110,"line_start":259,"line_end":259,"column_start":1,"column_end":77}},{"value":"/ skip starting at the end of the length field. In this case, it is the","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\length_delimited.rs","byte_start":17284111,"byte_end":17284184,"line_start":260,"line_end":260,"column_start":1,"column_end":74}},{"value":"/ second half of the head.","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\length_delimited.rs","byte_start":17284185,"byte_end":17284213,"line_start":261,"line_end":261,"column_start":1,"column_end":29}},{"value":"/","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\length_delimited.rs","byte_start":17284214,"byte_end":17284217,"line_start":262,"line_end":262,"column_start":1,"column_end":4}},{"value":"/ ## Example 6","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\length_delimited.rs","byte_start":17284218,"byte_end":17284234,"line_start":263,"line_end":263,"column_start":1,"column_end":17}},{"value":"/","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\length_delimited.rs","byte_start":17284235,"byte_end":17284238,"line_start":264,"line_end":264,"column_start":1,"column_end":4}},{"value":"/ The following will parse a `u16` length field at offset 1 of a 4 byte","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\length_delimited.rs","byte_start":17284239,"byte_end":17284312,"line_start":265,"line_end":265,"column_start":1,"column_end":74}},{"value":"/ frame head. The first byte and the length field will be omitted from the","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\length_delimited.rs","byte_start":17284313,"byte_end":17284389,"line_start":266,"line_end":266,"column_start":1,"column_end":77}},{"value":"/ yielded `BytesMut`, but the trailing 2 bytes of the frame head will be","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\length_delimited.rs","byte_start":17284390,"byte_end":17284464,"line_start":267,"line_end":267,"column_start":1,"column_end":75}},{"value":"/ included. In this case, the length field **includes** the frame head","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\length_delimited.rs","byte_start":17284465,"byte_end":17284537,"line_start":268,"line_end":268,"column_start":1,"column_end":73}},{"value":"/ length.","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\length_delimited.rs","byte_start":17284538,"byte_end":17284549,"line_start":269,"line_end":269,"column_start":1,"column_end":12}},{"value":"/","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\length_delimited.rs","byte_start":17284550,"byte_end":17284553,"line_start":270,"line_end":270,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\length_delimited.rs","byte_start":17284554,"byte_end":17284561,"line_start":271,"line_end":271,"column_start":1,"column_end":8}},{"value":"/ # use tokio::io::AsyncRead;","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\length_delimited.rs","byte_start":17284562,"byte_end":17284593,"line_start":272,"line_end":272,"column_start":1,"column_end":32}},{"value":"/ # use tokio_util::codec::LengthDelimitedCodec;","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\length_delimited.rs","byte_start":17284594,"byte_end":17284644,"line_start":273,"line_end":273,"column_start":1,"column_end":51}},{"value":"/ # fn bind_read<T: AsyncRead>(io: T) {","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\length_delimited.rs","byte_start":17284645,"byte_end":17284686,"line_start":274,"line_end":274,"column_start":1,"column_end":42}},{"value":"/ LengthDelimitedCodec::builder()","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\length_delimited.rs","byte_start":17284687,"byte_end":17284722,"line_start":275,"line_end":275,"column_start":1,"column_end":36}},{"value":"/     .length_field_offset(1) // length of hdr1","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\length_delimited.rs","byte_start":17284723,"byte_end":17284772,"line_start":276,"line_end":276,"column_start":1,"column_end":50}},{"value":"/     .length_field_type::<u16>()","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\length_delimited.rs","byte_start":17284773,"byte_end":17284808,"line_start":277,"line_end":277,"column_start":1,"column_end":36}},{"value":"/     .length_adjustment(-3)  // length of hdr1 + LEN, negative","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\length_delimited.rs","byte_start":17284809,"byte_end":17284874,"line_start":278,"line_end":278,"column_start":1,"column_end":66}},{"value":"/     .num_skip(3)","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\length_delimited.rs","byte_start":17284875,"byte_end":17284895,"line_start":279,"line_end":279,"column_start":1,"column_end":21}},{"value":"/     .new_read(io);","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\length_delimited.rs","byte_start":17284896,"byte_end":17284918,"line_start":280,"line_end":280,"column_start":1,"column_end":23}},{"value":"/ # }","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\length_delimited.rs","byte_start":17284919,"byte_end":17284926,"line_start":281,"line_end":281,"column_start":1,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\length_delimited.rs","byte_start":17284927,"byte_end":17284934,"line_start":282,"line_end":282,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\length_delimited.rs","byte_start":17284935,"byte_end":17284938,"line_start":283,"line_end":283,"column_start":1,"column_end":4}},{"value":"/ The following frame will be decoded as such:","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\length_delimited.rs","byte_start":17284939,"byte_end":17284987,"line_start":284,"line_end":284,"column_start":1,"column_end":49}},{"value":"/","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\length_delimited.rs","byte_start":17284988,"byte_end":17284991,"line_start":285,"line_end":285,"column_start":1,"column_end":4}},{"value":"/ ```text","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\length_delimited.rs","byte_start":17284992,"byte_end":17285003,"line_start":286,"line_end":286,"column_start":1,"column_end":12}},{"value":"/                  INPUT","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\length_delimited.rs","byte_start":17285004,"byte_end":17285030,"line_start":287,"line_end":287,"column_start":1,"column_end":27}},{"value":"/ +- hdr1 -+-- len ---+- hdr2 -+--- Payload ---+","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\length_delimited.rs","byte_start":17285031,"byte_end":17285081,"line_start":288,"line_end":288,"column_start":1,"column_end":51}},{"value":"/ |  \\xCA  | \\x00\\x0F |  \\xFE  |  Hello world  |","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\length_delimited.rs","byte_start":17285082,"byte_end":17285132,"line_start":289,"line_end":289,"column_start":1,"column_end":51}},{"value":"/ +--------+----------+--------+---------------+","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\length_delimited.rs","byte_start":17285133,"byte_end":17285183,"line_start":290,"line_end":290,"column_start":1,"column_end":51}},{"value":"/","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\length_delimited.rs","byte_start":17285184,"byte_end":17285187,"line_start":291,"line_end":291,"column_start":1,"column_end":4}},{"value":"/          DECODED","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\length_delimited.rs","byte_start":17285188,"byte_end":17285208,"line_start":292,"line_end":292,"column_start":1,"column_end":21}},{"value":"/ +- hdr2 -+--- Payload ---+","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\length_delimited.rs","byte_start":17285209,"byte_end":17285239,"line_start":293,"line_end":293,"column_start":1,"column_end":31}},{"value":"/ |  \\xFE  |  Hello world  |","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\length_delimited.rs","byte_start":17285240,"byte_end":17285270,"line_start":294,"line_end":294,"column_start":1,"column_end":31}},{"value":"/ +--------+---------------+","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\length_delimited.rs","byte_start":17285271,"byte_end":17285301,"line_start":295,"line_end":295,"column_start":1,"column_end":31}},{"value":"/ ```","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\length_delimited.rs","byte_start":17285302,"byte_end":17285309,"line_start":296,"line_end":296,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\length_delimited.rs","byte_start":17285310,"byte_end":17285313,"line_start":297,"line_end":297,"column_start":1,"column_end":4}},{"value":"/ Similar to the example above, the difference is that the length field","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\length_delimited.rs","byte_start":17285314,"byte_end":17285387,"line_start":298,"line_end":298,"column_start":1,"column_end":74}},{"value":"/ represents the length of the entire frame instead of just the payload.","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\length_delimited.rs","byte_start":17285388,"byte_end":17285462,"line_start":299,"line_end":299,"column_start":1,"column_end":75}},{"value":"/ The length of `hdr1` and `len` must be counted in `length_adjustment`.","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\length_delimited.rs","byte_start":17285463,"byte_end":17285537,"line_start":300,"line_end":300,"column_start":1,"column_end":75}},{"value":"/ Note that the length of `hdr2` does **not** need to be explicitly set","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\length_delimited.rs","byte_start":17285538,"byte_end":17285611,"line_start":301,"line_end":301,"column_start":1,"column_end":74}},{"value":"/ anywhere because it already is factored into the total frame length that","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\length_delimited.rs","byte_start":17285612,"byte_end":17285688,"line_start":302,"line_end":302,"column_start":1,"column_end":77}},{"value":"/ is read from the byte stream.","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\length_delimited.rs","byte_start":17285689,"byte_end":17285722,"line_start":303,"line_end":303,"column_start":1,"column_end":34}},{"value":"/","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\length_delimited.rs","byte_start":17285723,"byte_end":17285726,"line_start":304,"line_end":304,"column_start":1,"column_end":4}},{"value":"/ ## Example 7","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\length_delimited.rs","byte_start":17285727,"byte_end":17285743,"line_start":305,"line_end":305,"column_start":1,"column_end":17}},{"value":"/","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\length_delimited.rs","byte_start":17285744,"byte_end":17285747,"line_start":306,"line_end":306,"column_start":1,"column_end":4}},{"value":"/ The following will parse a 3 byte length field at offset 0 in a 4 byte","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\length_delimited.rs","byte_start":17285748,"byte_end":17285822,"line_start":307,"line_end":307,"column_start":1,"column_end":75}},{"value":"/ frame head, excluding the 4th byte from the yielded `BytesMut`.","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\length_delimited.rs","byte_start":17285823,"byte_end":17285890,"line_start":308,"line_end":308,"column_start":1,"column_end":68}},{"value":"/","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\length_delimited.rs","byte_start":17285891,"byte_end":17285894,"line_start":309,"line_end":309,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\length_delimited.rs","byte_start":17285895,"byte_end":17285902,"line_start":310,"line_end":310,"column_start":1,"column_end":8}},{"value":"/ # use tokio::io::AsyncRead;","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\length_delimited.rs","byte_start":17285903,"byte_end":17285934,"line_start":311,"line_end":311,"column_start":1,"column_end":32}},{"value":"/ # use tokio_util::codec::LengthDelimitedCodec;","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\length_delimited.rs","byte_start":17285935,"byte_end":17285985,"line_start":312,"line_end":312,"column_start":1,"column_end":51}},{"value":"/ # fn bind_read<T: AsyncRead>(io: T) {","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\length_delimited.rs","byte_start":17285986,"byte_end":17286027,"line_start":313,"line_end":313,"column_start":1,"column_end":42}},{"value":"/ LengthDelimitedCodec::builder()","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\length_delimited.rs","byte_start":17286028,"byte_end":17286063,"line_start":314,"line_end":314,"column_start":1,"column_end":36}},{"value":"/     .length_field_offset(0) // default value","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\length_delimited.rs","byte_start":17286064,"byte_end":17286112,"line_start":315,"line_end":315,"column_start":1,"column_end":49}},{"value":"/     .length_field_length(3)","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\length_delimited.rs","byte_start":17286113,"byte_end":17286144,"line_start":316,"line_end":316,"column_start":1,"column_end":32}},{"value":"/     .length_adjustment(0)  // default value","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\length_delimited.rs","byte_start":17286145,"byte_end":17286192,"line_start":317,"line_end":317,"column_start":1,"column_end":48}},{"value":"/     .num_skip(4) // skip the first 4 bytes","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\length_delimited.rs","byte_start":17286193,"byte_end":17286239,"line_start":318,"line_end":318,"column_start":1,"column_end":47}},{"value":"/     .new_read(io);","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\length_delimited.rs","byte_start":17286240,"byte_end":17286262,"line_start":319,"line_end":319,"column_start":1,"column_end":23}},{"value":"/ # }","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\length_delimited.rs","byte_start":17286263,"byte_end":17286270,"line_start":320,"line_end":320,"column_start":1,"column_end":8}},{"value":"/ # pub fn main() {}","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\length_delimited.rs","byte_start":17286271,"byte_end":17286293,"line_start":321,"line_end":321,"column_start":1,"column_end":23}},{"value":"/ ```","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\length_delimited.rs","byte_start":17286294,"byte_end":17286301,"line_start":322,"line_end":322,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\length_delimited.rs","byte_start":17286302,"byte_end":17286305,"line_start":323,"line_end":323,"column_start":1,"column_end":4}},{"value":"/ The following frame will be decoded as such:","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\length_delimited.rs","byte_start":17286306,"byte_end":17286354,"line_start":324,"line_end":324,"column_start":1,"column_end":49}},{"value":"/","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\length_delimited.rs","byte_start":17286355,"byte_end":17286358,"line_start":325,"line_end":325,"column_start":1,"column_end":4}},{"value":"/ ```text","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\length_delimited.rs","byte_start":17286359,"byte_end":17286370,"line_start":326,"line_end":326,"column_start":1,"column_end":12}},{"value":"/                  INPUT                       DECODED","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\length_delimited.rs","byte_start":17286371,"byte_end":17286427,"line_start":327,"line_end":327,"column_start":1,"column_end":57}},{"value":"/ +------- len ------+--- Payload ---+    +--- Payload ---+","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\length_delimited.rs","byte_start":17286428,"byte_end":17286489,"line_start":328,"line_end":328,"column_start":1,"column_end":62}},{"value":"/ | \\x00\\x00\\x0B\\xFF |  Hello world  | => |  Hello world  |","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\length_delimited.rs","byte_start":17286490,"byte_end":17286551,"line_start":329,"line_end":329,"column_start":1,"column_end":62}},{"value":"/ +------------------+---------------+    +---------------+","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\length_delimited.rs","byte_start":17286552,"byte_end":17286613,"line_start":330,"line_end":330,"column_start":1,"column_end":62}},{"value":"/ ```","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\length_delimited.rs","byte_start":17286614,"byte_end":17286621,"line_start":331,"line_end":331,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\length_delimited.rs","byte_start":17286622,"byte_end":17286625,"line_start":332,"line_end":332,"column_start":1,"column_end":4}},{"value":"/ A simple example where there are unused bytes between the length field","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\length_delimited.rs","byte_start":17286626,"byte_end":17286700,"line_start":333,"line_end":333,"column_start":1,"column_end":75}},{"value":"/ and the payload.","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\length_delimited.rs","byte_start":17286701,"byte_end":17286721,"line_start":334,"line_end":334,"column_start":1,"column_end":21}},{"value":"/","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\length_delimited.rs","byte_start":17286722,"byte_end":17286725,"line_start":335,"line_end":335,"column_start":1,"column_end":4}},{"value":"/ # Encoding","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\length_delimited.rs","byte_start":17286726,"byte_end":17286740,"line_start":336,"line_end":336,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\length_delimited.rs","byte_start":17286741,"byte_end":17286744,"line_start":337,"line_end":337,"column_start":1,"column_end":4}},{"value":"/ [`FramedWrite`] adapts an [`AsyncWrite`] into a `Sink` of [`BytesMut`],","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\length_delimited.rs","byte_start":17286745,"byte_end":17286820,"line_start":338,"line_end":338,"column_start":1,"column_end":76}},{"value":"/ such that each submitted [`BytesMut`] is prefaced by a length field.","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\length_delimited.rs","byte_start":17286821,"byte_end":17286893,"line_start":339,"line_end":339,"column_start":1,"column_end":73}},{"value":"/ There are fewer configuration options than [`FramedRead`]. Given","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\length_delimited.rs","byte_start":17286894,"byte_end":17286962,"line_start":340,"line_end":340,"column_start":1,"column_end":69}},{"value":"/ protocols that have more complex frame heads, an encoder should probably","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\length_delimited.rs","byte_start":17286963,"byte_end":17287039,"line_start":341,"line_end":341,"column_start":1,"column_end":77}},{"value":"/ be written by hand using [`Encoder`].","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\length_delimited.rs","byte_start":17287040,"byte_end":17287081,"line_start":342,"line_end":342,"column_start":1,"column_end":42}},{"value":"/","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\length_delimited.rs","byte_start":17287082,"byte_end":17287085,"line_start":343,"line_end":343,"column_start":1,"column_end":4}},{"value":"/ Here is a simple example, given a `FramedWrite` with the following","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\length_delimited.rs","byte_start":17287086,"byte_end":17287156,"line_start":344,"line_end":344,"column_start":1,"column_end":71}},{"value":"/ configuration:","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\length_delimited.rs","byte_start":17287157,"byte_end":17287175,"line_start":345,"line_end":345,"column_start":1,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\length_delimited.rs","byte_start":17287176,"byte_end":17287179,"line_start":346,"line_end":346,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\length_delimited.rs","byte_start":17287180,"byte_end":17287187,"line_start":347,"line_end":347,"column_start":1,"column_end":8}},{"value":"/ # use tokio::io::AsyncWrite;","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\length_delimited.rs","byte_start":17287188,"byte_end":17287220,"line_start":348,"line_end":348,"column_start":1,"column_end":33}},{"value":"/ # use tokio_util::codec::LengthDelimitedCodec;","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\length_delimited.rs","byte_start":17287221,"byte_end":17287271,"line_start":349,"line_end":349,"column_start":1,"column_end":51}},{"value":"/ # fn write_frame<T: AsyncWrite>(io: T) {","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\length_delimited.rs","byte_start":17287272,"byte_end":17287316,"line_start":350,"line_end":350,"column_start":1,"column_end":45}},{"value":"/ # let _ =","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\length_delimited.rs","byte_start":17287317,"byte_end":17287330,"line_start":351,"line_end":351,"column_start":1,"column_end":14}},{"value":"/ LengthDelimitedCodec::builder()","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\length_delimited.rs","byte_start":17287331,"byte_end":17287366,"line_start":352,"line_end":352,"column_start":1,"column_end":36}},{"value":"/     .length_field_type::<u16>()","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\length_delimited.rs","byte_start":17287367,"byte_end":17287402,"line_start":353,"line_end":353,"column_start":1,"column_end":36}},{"value":"/     .new_write(io);","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\length_delimited.rs","byte_start":17287403,"byte_end":17287426,"line_start":354,"line_end":354,"column_start":1,"column_end":24}},{"value":"/ # }","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\length_delimited.rs","byte_start":17287427,"byte_end":17287434,"line_start":355,"line_end":355,"column_start":1,"column_end":8}},{"value":"/ # pub fn main() {}","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\length_delimited.rs","byte_start":17287435,"byte_end":17287457,"line_start":356,"line_end":356,"column_start":1,"column_end":23}},{"value":"/ ```","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\length_delimited.rs","byte_start":17287458,"byte_end":17287465,"line_start":357,"line_end":357,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\length_delimited.rs","byte_start":17287466,"byte_end":17287469,"line_start":358,"line_end":358,"column_start":1,"column_end":4}},{"value":"/ A payload of `hello world` will be encoded as:","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\length_delimited.rs","byte_start":17287470,"byte_end":17287520,"line_start":359,"line_end":359,"column_start":1,"column_end":51}},{"value":"/","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\length_delimited.rs","byte_start":17287521,"byte_end":17287524,"line_start":360,"line_end":360,"column_start":1,"column_end":4}},{"value":"/ ```text","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\length_delimited.rs","byte_start":17287525,"byte_end":17287536,"line_start":361,"line_end":361,"column_start":1,"column_end":12}},{"value":"/ +- len: u16 -+---- data ----+","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\length_delimited.rs","byte_start":17287537,"byte_end":17287570,"line_start":362,"line_end":362,"column_start":1,"column_end":34}},{"value":"/ |  \\x00\\x0b  |  hello world |","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\length_delimited.rs","byte_start":17287571,"byte_end":17287604,"line_start":363,"line_end":363,"column_start":1,"column_end":34}},{"value":"/ +------------+--------------+","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\length_delimited.rs","byte_start":17287605,"byte_end":17287638,"line_start":364,"line_end":364,"column_start":1,"column_end":34}},{"value":"/ ```","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\length_delimited.rs","byte_start":17287639,"byte_end":17287646,"line_start":365,"line_end":365,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\length_delimited.rs","byte_start":17287647,"byte_end":17287650,"line_start":366,"line_end":366,"column_start":1,"column_end":4}},{"value":"/ [`LengthDelimitedCodec::new()`]: method@LengthDelimitedCodec::new","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\length_delimited.rs","byte_start":17287651,"byte_end":17287720,"line_start":367,"line_end":367,"column_start":1,"column_end":70}},{"value":"/ [`FramedRead`]: struct@FramedRead","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\length_delimited.rs","byte_start":17287721,"byte_end":17287758,"line_start":368,"line_end":368,"column_start":1,"column_end":38}},{"value":"/ [`FramedWrite`]: struct@FramedWrite","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\length_delimited.rs","byte_start":17287759,"byte_end":17287798,"line_start":369,"line_end":369,"column_start":1,"column_end":40}},{"value":"/ [`AsyncRead`]: trait@tokio::io::AsyncRead","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\length_delimited.rs","byte_start":17287799,"byte_end":17287844,"line_start":370,"line_end":370,"column_start":1,"column_end":46}},{"value":"/ [`AsyncWrite`]: trait@tokio::io::AsyncWrite","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\length_delimited.rs","byte_start":17287845,"byte_end":17287892,"line_start":371,"line_end":371,"column_start":1,"column_end":48}},{"value":"/ [`Encoder`]: trait@Encoder","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\length_delimited.rs","byte_start":17287893,"byte_end":17287923,"line_start":372,"line_end":372,"column_start":1,"column_end":31}},{"value":"/ [`BytesMut`]: bytes::BytesMut","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\length_delimited.rs","byte_start":17287924,"byte_end":17287957,"line_start":373,"line_end":373,"column_start":1,"column_end":34}}]},{"kind":"Struct","id":{"krate":0,"index":1213},"span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\length_delimited.rs","byte_start":17288524,"byte_end":17288531,"line_start":390,"line_end":390,"column_start":12,"column_end":19},"name":"Builder","qualname":"::codec::length_delimited::Builder","value":"Builder {  }","parent":null,"children":[{"krate":0,"index":1214},{"krate":0,"index":1215},{"krate":0,"index":1216},{"krate":0,"index":1217},{"krate":0,"index":1218},{"krate":0,"index":1219}],"decl_id":null,"docs":" Configure length delimited `LengthDelimitedCodec`s.","sig":null,"attributes":[{"value":"/ Configure length delimited `LengthDelimitedCodec`s.","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\length_delimited.rs","byte_start":17288206,"byte_end":17288261,"line_start":384,"line_end":384,"column_start":1,"column_end":56}},{"value":"/","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\length_delimited.rs","byte_start":17288262,"byte_end":17288265,"line_start":385,"line_end":385,"column_start":1,"column_end":4}},{"value":"/ `Builder` enables constructing configured length delimited codecs. Note","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\length_delimited.rs","byte_start":17288266,"byte_end":17288341,"line_start":386,"line_end":386,"column_start":1,"column_end":76}},{"value":"/ that not all configuration settings apply to both encoding and decoding. See","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\length_delimited.rs","byte_start":17288342,"byte_end":17288422,"line_start":387,"line_end":387,"column_start":1,"column_end":81}},{"value":"/ the documentation for specific methods for more detail.","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\length_delimited.rs","byte_start":17288423,"byte_end":17288482,"line_start":388,"line_end":388,"column_start":1,"column_end":60}}]},{"kind":"Struct","id":{"krate":0,"index":973},"span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\length_delimited.rs","byte_start":17289202,"byte_end":17289227,"line_start":412,"line_end":412,"column_start":12,"column_end":37},"name":"LengthDelimitedCodecError","qualname":"::codec::length_delimited::LengthDelimitedCodecError","value":"LengthDelimitedCodecError {  }","parent":null,"children":[{"krate":0,"index":974}],"decl_id":null,"docs":" An error when the number of bytes read is more than max frame length.\n","sig":null,"attributes":[{"value":"/ An error when the number of bytes read is more than max frame length.","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\length_delimited.rs","byte_start":17289117,"byte_end":17289190,"line_start":411,"line_end":411,"column_start":1,"column_end":74}}]},{"kind":"Struct","id":{"krate":0,"index":1225},"span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\length_delimited.rs","byte_start":17289579,"byte_end":17289599,"line_start":425,"line_end":425,"column_start":12,"column_end":32},"name":"LengthDelimitedCodec","qualname":"::codec::length_delimited::LengthDelimitedCodec","value":"LengthDelimitedCodec {  }","parent":null,"children":[{"krate":0,"index":1226},{"krate":0,"index":1227}],"decl_id":null,"docs":" A codec for frames delimited by a frame head specifying their lengths.","sig":null,"attributes":[{"value":"/ A codec for frames delimited by a frame head specifying their lengths.","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\length_delimited.rs","byte_start":17289248,"byte_end":17289322,"line_start":416,"line_end":416,"column_start":1,"column_end":75}},{"value":"/","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\length_delimited.rs","byte_start":17289323,"byte_end":17289326,"line_start":417,"line_end":417,"column_start":1,"column_end":4}},{"value":"/ This allows the consumer to work with entire frames without having to worry","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\length_delimited.rs","byte_start":17289327,"byte_end":17289406,"line_start":418,"line_end":418,"column_start":1,"column_end":80}},{"value":"/ about buffering or other framing logic.","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\length_delimited.rs","byte_start":17289407,"byte_end":17289450,"line_start":419,"line_end":419,"column_start":1,"column_end":44}},{"value":"/","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\length_delimited.rs","byte_start":17289451,"byte_end":17289454,"line_start":420,"line_end":420,"column_start":1,"column_end":4}},{"value":"/ See [module level] documentation for more detail.","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\length_delimited.rs","byte_start":17289455,"byte_end":17289508,"line_start":421,"line_end":421,"column_start":1,"column_end":54}},{"value":"/","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\length_delimited.rs","byte_start":17289509,"byte_end":17289512,"line_start":422,"line_end":422,"column_start":1,"column_end":4}},{"value":"/ [module level]: index.html","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\length_delimited.rs","byte_start":17289513,"byte_end":17289543,"line_start":423,"line_end":423,"column_start":1,"column_end":31}}]},{"kind":"Method","id":{"krate":0,"index":976},"span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\length_delimited.rs","byte_start":17289943,"byte_end":17289946,"line_start":443,"line_end":443,"column_start":12,"column_end":15},"name":"new","qualname":"<LengthDelimitedCodec>::new","value":"pub fn new() -> Self","parent":null,"children":[],"decl_id":null,"docs":" Creates a new `LengthDelimitedCodec` with the default configuration values.\n","sig":null,"attributes":[{"value":"/ Creates a new `LengthDelimitedCodec` with the default configuration values.","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\length_delimited.rs","byte_start":17289852,"byte_end":17289931,"line_start":442,"line_end":442,"column_start":5,"column_end":84}}]},{"kind":"Method","id":{"krate":0,"index":977},"span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\length_delimited.rs","byte_start":17290173,"byte_end":17290180,"line_start":452,"line_end":452,"column_start":12,"column_end":19},"name":"builder","qualname":"<LengthDelimitedCodec>::builder","value":"pub fn builder() -> Builder","parent":null,"children":[],"decl_id":null,"docs":" Creates a new length delimited codec builder with default configuration\n values.\n","sig":null,"attributes":[{"value":"/ Creates a new length delimited codec builder with default configuration","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\length_delimited.rs","byte_start":17290070,"byte_end":17290145,"line_start":450,"line_end":450,"column_start":5,"column_end":80}},{"value":"/ values.","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\length_delimited.rs","byte_start":17290150,"byte_end":17290161,"line_start":451,"line_end":451,"column_start":5,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":978},"span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\length_delimited.rs","byte_start":17290402,"byte_end":17290418,"line_start":460,"line_end":460,"column_start":12,"column_end":28},"name":"max_frame_length","qualname":"<LengthDelimitedCodec>::max_frame_length","value":"pub fn max_frame_length(&Self) -> usize","parent":null,"children":[],"decl_id":null,"docs":" Returns the current max frame setting","sig":null,"attributes":[{"value":"/ Returns the current max frame setting","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\length_delimited.rs","byte_start":17290230,"byte_end":17290271,"line_start":456,"line_end":456,"column_start":5,"column_end":46}},{"value":"/","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\length_delimited.rs","byte_start":17290276,"byte_end":17290279,"line_start":457,"line_end":457,"column_start":5,"column_end":8}},{"value":"/ This is the largest size this codec will accept from the wire. Larger","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\length_delimited.rs","byte_start":17290284,"byte_end":17290357,"line_start":458,"line_end":458,"column_start":5,"column_end":78}},{"value":"/ frames will be rejected.","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\length_delimited.rs","byte_start":17290362,"byte_end":17290390,"line_start":459,"line_end":459,"column_start":5,"column_end":33}}]},{"kind":"Method","id":{"krate":0,"index":979},"span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\length_delimited.rs","byte_start":17290839,"byte_end":17290859,"line_start":470,"line_end":470,"column_start":12,"column_end":32},"name":"set_max_frame_length","qualname":"<LengthDelimitedCodec>::set_max_frame_length","value":"pub fn set_max_frame_length(&mut Self, usize)","parent":null,"children":[],"decl_id":null,"docs":" Updates the max frame setting.","sig":null,"attributes":[{"value":"/ Updates the max frame setting.","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\length_delimited.rs","byte_start":17290483,"byte_end":17290517,"line_start":464,"line_end":464,"column_start":5,"column_end":39}},{"value":"/","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\length_delimited.rs","byte_start":17290522,"byte_end":17290525,"line_start":465,"line_end":465,"column_start":5,"column_end":8}},{"value":"/ The change takes effect the next time a frame is decoded. In other","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\length_delimited.rs","byte_start":17290530,"byte_end":17290600,"line_start":466,"line_end":466,"column_start":5,"column_end":75}},{"value":"/ words, if a frame is currently in process of being decoded with a frame","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\length_delimited.rs","byte_start":17290605,"byte_end":17290680,"line_start":467,"line_end":467,"column_start":5,"column_end":80}},{"value":"/ size greater than `val` but less than the max frame length in effect","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\length_delimited.rs","byte_start":17290685,"byte_end":17290757,"line_start":468,"line_end":468,"column_start":5,"column_end":77}},{"value":"/ before calling this function, then the frame will be allowed.","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\length_delimited.rs","byte_start":17290762,"byte_end":17290827,"line_start":469,"line_end":469,"column_start":5,"column_end":70}}]},{"kind":"Trait","id":{"krate":0,"index":993},"span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\length_delimited.rs","byte_start":17295648,"byte_end":17295663,"line_start":634,"line_end":634,"column_start":15,"column_end":30},"name":"LengthFieldType","qualname":"::codec::length_delimited::builder::LengthFieldType","value":"LengthFieldType","parent":null,"children":[],"decl_id":null,"docs":" Types that can be used with `Builder::length_field_type`.\n","sig":null,"attributes":[{"value":"/ Types that can be used with `Builder::length_field_type`.","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\length_delimited.rs","byte_start":17295572,"byte_end":17295633,"line_start":633,"line_end":633,"column_start":5,"column_end":66}}]},{"kind":"Method","id":{"krate":0,"index":1000},"span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\length_delimited.rs","byte_start":17296588,"byte_end":17296591,"line_start":670,"line_end":670,"column_start":12,"column_end":15},"name":"new","qualname":"<Builder>::new","value":"pub fn new() -> Builder","parent":null,"children":[],"decl_id":null,"docs":" Creates a new length delimited codec builder with default configuration\n values.","sig":null,"attributes":[{"value":"/ Creates a new length delimited codec builder with default configuration","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\length_delimited.rs","byte_start":17296042,"byte_end":17296117,"line_start":651,"line_end":651,"column_start":5,"column_end":80}},{"value":"/ values.","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\length_delimited.rs","byte_start":17296122,"byte_end":17296133,"line_start":652,"line_end":652,"column_start":5,"column_end":16}},{"value":"/","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\length_delimited.rs","byte_start":17296138,"byte_end":17296141,"line_start":653,"line_end":653,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\length_delimited.rs","byte_start":17296146,"byte_end":17296160,"line_start":654,"line_end":654,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\length_delimited.rs","byte_start":17296165,"byte_end":17296168,"line_start":655,"line_end":655,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\length_delimited.rs","byte_start":17296173,"byte_end":17296180,"line_start":656,"line_end":656,"column_start":5,"column_end":12}},{"value":"/ # use tokio::io::AsyncRead;","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\length_delimited.rs","byte_start":17296185,"byte_end":17296216,"line_start":657,"line_end":657,"column_start":5,"column_end":36}},{"value":"/ use tokio_util::codec::LengthDelimitedCodec;","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\length_delimited.rs","byte_start":17296221,"byte_end":17296269,"line_start":658,"line_end":658,"column_start":5,"column_end":53}},{"value":"/","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\length_delimited.rs","byte_start":17296274,"byte_end":17296277,"line_start":659,"line_end":659,"column_start":5,"column_end":8}},{"value":"/ # fn bind_read<T: AsyncRead>(io: T) {","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\length_delimited.rs","byte_start":17296282,"byte_end":17296323,"line_start":660,"line_end":660,"column_start":5,"column_end":46}},{"value":"/ LengthDelimitedCodec::builder()","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\length_delimited.rs","byte_start":17296328,"byte_end":17296363,"line_start":661,"line_end":661,"column_start":5,"column_end":40}},{"value":"/     .length_field_offset(0)","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\length_delimited.rs","byte_start":17296368,"byte_end":17296399,"line_start":662,"line_end":662,"column_start":5,"column_end":36}},{"value":"/     .length_field_type::<u16>()","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\length_delimited.rs","byte_start":17296404,"byte_end":17296439,"line_start":663,"line_end":663,"column_start":5,"column_end":40}},{"value":"/     .length_adjustment(0)","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\length_delimited.rs","byte_start":17296444,"byte_end":17296473,"line_start":664,"line_end":664,"column_start":5,"column_end":34}},{"value":"/     .num_skip(0)","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\length_delimited.rs","byte_start":17296478,"byte_end":17296498,"line_start":665,"line_end":665,"column_start":5,"column_end":25}},{"value":"/     .new_read(io);","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\length_delimited.rs","byte_start":17296503,"byte_end":17296525,"line_start":666,"line_end":666,"column_start":5,"column_end":27}},{"value":"/ # }","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\length_delimited.rs","byte_start":17296530,"byte_end":17296537,"line_start":667,"line_end":667,"column_start":5,"column_end":12}},{"value":"/ # pub fn main() {}","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\length_delimited.rs","byte_start":17296542,"byte_end":17296564,"line_start":668,"line_end":668,"column_start":5,"column_end":27}},{"value":"/ ```","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\length_delimited.rs","byte_start":17296569,"byte_end":17296576,"line_start":669,"line_end":669,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":1001},"span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\length_delimited.rs","byte_start":17297776,"byte_end":17297786,"line_start":711,"line_end":711,"column_start":12,"column_end":22},"name":"big_endian","qualname":"<Builder>::big_endian","value":"pub fn big_endian(&mut Self) -> &mut Self","parent":null,"children":[],"decl_id":null,"docs":" Read the length field as a big endian integer","sig":null,"attributes":[{"value":"/ Read the length field as a big endian integer","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\length_delimited.rs","byte_start":17297255,"byte_end":17297304,"line_start":692,"line_end":692,"column_start":5,"column_end":54}},{"value":"/","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\length_delimited.rs","byte_start":17297309,"byte_end":17297312,"line_start":693,"line_end":693,"column_start":5,"column_end":8}},{"value":"/ This is the default setting.","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\length_delimited.rs","byte_start":17297317,"byte_end":17297349,"line_start":694,"line_end":694,"column_start":5,"column_end":37}},{"value":"/","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\length_delimited.rs","byte_start":17297354,"byte_end":17297357,"line_start":695,"line_end":695,"column_start":5,"column_end":8}},{"value":"/ This configuration option applies to both encoding and decoding.","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\length_delimited.rs","byte_start":17297362,"byte_end":17297430,"line_start":696,"line_end":696,"column_start":5,"column_end":73}},{"value":"/","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\length_delimited.rs","byte_start":17297435,"byte_end":17297438,"line_start":697,"line_end":697,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\length_delimited.rs","byte_start":17297443,"byte_end":17297457,"line_start":698,"line_end":698,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\length_delimited.rs","byte_start":17297462,"byte_end":17297465,"line_start":699,"line_end":699,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\length_delimited.rs","byte_start":17297470,"byte_end":17297477,"line_start":700,"line_end":700,"column_start":5,"column_end":12}},{"value":"/ # use tokio::io::AsyncRead;","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\length_delimited.rs","byte_start":17297482,"byte_end":17297513,"line_start":701,"line_end":701,"column_start":5,"column_end":36}},{"value":"/ use tokio_util::codec::LengthDelimitedCodec;","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\length_delimited.rs","byte_start":17297518,"byte_end":17297566,"line_start":702,"line_end":702,"column_start":5,"column_end":53}},{"value":"/","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\length_delimited.rs","byte_start":17297571,"byte_end":17297574,"line_start":703,"line_end":703,"column_start":5,"column_end":8}},{"value":"/ # fn bind_read<T: AsyncRead>(io: T) {","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\length_delimited.rs","byte_start":17297579,"byte_end":17297620,"line_start":704,"line_end":704,"column_start":5,"column_end":46}},{"value":"/ LengthDelimitedCodec::builder()","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\length_delimited.rs","byte_start":17297625,"byte_end":17297660,"line_start":705,"line_end":705,"column_start":5,"column_end":40}},{"value":"/     .big_endian()","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\length_delimited.rs","byte_start":17297665,"byte_end":17297686,"line_start":706,"line_end":706,"column_start":5,"column_end":26}},{"value":"/     .new_read(io);","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\length_delimited.rs","byte_start":17297691,"byte_end":17297713,"line_start":707,"line_end":707,"column_start":5,"column_end":27}},{"value":"/ # }","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\length_delimited.rs","byte_start":17297718,"byte_end":17297725,"line_start":708,"line_end":708,"column_start":5,"column_end":12}},{"value":"/ # pub fn main() {}","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\length_delimited.rs","byte_start":17297730,"byte_end":17297752,"line_start":709,"line_end":709,"column_start":5,"column_end":27}},{"value":"/ ```","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\length_delimited.rs","byte_start":17297757,"byte_end":17297764,"line_start":710,"line_end":710,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":1002},"span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\length_delimited.rs","byte_start":17298418,"byte_end":17298431,"line_start":735,"line_end":735,"column_start":12,"column_end":25},"name":"little_endian","qualname":"<Builder>::little_endian","value":"pub fn little_endian(&mut Self) -> &mut Self","parent":null,"children":[],"decl_id":null,"docs":" Read the length field as a little endian integer","sig":null,"attributes":[{"value":"/ Read the length field as a little endian integer","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\length_delimited.rs","byte_start":17297885,"byte_end":17297937,"line_start":716,"line_end":716,"column_start":5,"column_end":57}},{"value":"/","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\length_delimited.rs","byte_start":17297942,"byte_end":17297945,"line_start":717,"line_end":717,"column_start":5,"column_end":8}},{"value":"/ The default setting is big endian.","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\length_delimited.rs","byte_start":17297950,"byte_end":17297988,"line_start":718,"line_end":718,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\length_delimited.rs","byte_start":17297993,"byte_end":17297996,"line_start":719,"line_end":719,"column_start":5,"column_end":8}},{"value":"/ This configuration option applies to both encoding and decoding.","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\length_delimited.rs","byte_start":17298001,"byte_end":17298069,"line_start":720,"line_end":720,"column_start":5,"column_end":73}},{"value":"/","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\length_delimited.rs","byte_start":17298074,"byte_end":17298077,"line_start":721,"line_end":721,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\length_delimited.rs","byte_start":17298082,"byte_end":17298096,"line_start":722,"line_end":722,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\length_delimited.rs","byte_start":17298101,"byte_end":17298104,"line_start":723,"line_end":723,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\length_delimited.rs","byte_start":17298109,"byte_end":17298116,"line_start":724,"line_end":724,"column_start":5,"column_end":12}},{"value":"/ # use tokio::io::AsyncRead;","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\length_delimited.rs","byte_start":17298121,"byte_end":17298152,"line_start":725,"line_end":725,"column_start":5,"column_end":36}},{"value":"/ use tokio_util::codec::LengthDelimitedCodec;","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\length_delimited.rs","byte_start":17298157,"byte_end":17298205,"line_start":726,"line_end":726,"column_start":5,"column_end":53}},{"value":"/","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\length_delimited.rs","byte_start":17298210,"byte_end":17298213,"line_start":727,"line_end":727,"column_start":5,"column_end":8}},{"value":"/ # fn bind_read<T: AsyncRead>(io: T) {","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\length_delimited.rs","byte_start":17298218,"byte_end":17298259,"line_start":728,"line_end":728,"column_start":5,"column_end":46}},{"value":"/ LengthDelimitedCodec::builder()","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\length_delimited.rs","byte_start":17298264,"byte_end":17298299,"line_start":729,"line_end":729,"column_start":5,"column_end":40}},{"value":"/     .little_endian()","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\length_delimited.rs","byte_start":17298304,"byte_end":17298328,"line_start":730,"line_end":730,"column_start":5,"column_end":29}},{"value":"/     .new_read(io);","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\length_delimited.rs","byte_start":17298333,"byte_end":17298355,"line_start":731,"line_end":731,"column_start":5,"column_end":27}},{"value":"/ # }","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\length_delimited.rs","byte_start":17298360,"byte_end":17298367,"line_start":732,"line_end":732,"column_start":5,"column_end":12}},{"value":"/ # pub fn main() {}","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\length_delimited.rs","byte_start":17298372,"byte_end":17298394,"line_start":733,"line_end":733,"column_start":5,"column_end":27}},{"value":"/ ```","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\length_delimited.rs","byte_start":17298399,"byte_end":17298406,"line_start":734,"line_end":734,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":1003},"span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\length_delimited.rs","byte_start":17299064,"byte_end":17299077,"line_start":759,"line_end":759,"column_start":12,"column_end":25},"name":"native_endian","qualname":"<Builder>::native_endian","value":"pub fn native_endian(&mut Self) -> &mut Self","parent":null,"children":[],"decl_id":null,"docs":" Read the length field as a native endian integer","sig":null,"attributes":[{"value":"/ Read the length field as a native endian integer","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\length_delimited.rs","byte_start":17298531,"byte_end":17298583,"line_start":740,"line_end":740,"column_start":5,"column_end":57}},{"value":"/","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\length_delimited.rs","byte_start":17298588,"byte_end":17298591,"line_start":741,"line_end":741,"column_start":5,"column_end":8}},{"value":"/ The default setting is big endian.","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\length_delimited.rs","byte_start":17298596,"byte_end":17298634,"line_start":742,"line_end":742,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\length_delimited.rs","byte_start":17298639,"byte_end":17298642,"line_start":743,"line_end":743,"column_start":5,"column_end":8}},{"value":"/ This configuration option applies to both encoding and decoding.","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\length_delimited.rs","byte_start":17298647,"byte_end":17298715,"line_start":744,"line_end":744,"column_start":5,"column_end":73}},{"value":"/","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\length_delimited.rs","byte_start":17298720,"byte_end":17298723,"line_start":745,"line_end":745,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\length_delimited.rs","byte_start":17298728,"byte_end":17298742,"line_start":746,"line_end":746,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\length_delimited.rs","byte_start":17298747,"byte_end":17298750,"line_start":747,"line_end":747,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\length_delimited.rs","byte_start":17298755,"byte_end":17298762,"line_start":748,"line_end":748,"column_start":5,"column_end":12}},{"value":"/ # use tokio::io::AsyncRead;","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\length_delimited.rs","byte_start":17298767,"byte_end":17298798,"line_start":749,"line_end":749,"column_start":5,"column_end":36}},{"value":"/ use tokio_util::codec::LengthDelimitedCodec;","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\length_delimited.rs","byte_start":17298803,"byte_end":17298851,"line_start":750,"line_end":750,"column_start":5,"column_end":53}},{"value":"/","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\length_delimited.rs","byte_start":17298856,"byte_end":17298859,"line_start":751,"line_end":751,"column_start":5,"column_end":8}},{"value":"/ # fn bind_read<T: AsyncRead>(io: T) {","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\length_delimited.rs","byte_start":17298864,"byte_end":17298905,"line_start":752,"line_end":752,"column_start":5,"column_end":46}},{"value":"/ LengthDelimitedCodec::builder()","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\length_delimited.rs","byte_start":17298910,"byte_end":17298945,"line_start":753,"line_end":753,"column_start":5,"column_end":40}},{"value":"/     .native_endian()","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\length_delimited.rs","byte_start":17298950,"byte_end":17298974,"line_start":754,"line_end":754,"column_start":5,"column_end":29}},{"value":"/     .new_read(io);","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\length_delimited.rs","byte_start":17298979,"byte_end":17299001,"line_start":755,"line_end":755,"column_start":5,"column_end":27}},{"value":"/ # }","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\length_delimited.rs","byte_start":17299006,"byte_end":17299013,"line_start":756,"line_end":756,"column_start":5,"column_end":12}},{"value":"/ # pub fn main() {}","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\length_delimited.rs","byte_start":17299018,"byte_end":17299040,"line_start":757,"line_end":757,"column_start":5,"column_end":27}},{"value":"/ ```","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\length_delimited.rs","byte_start":17299045,"byte_end":17299052,"line_start":758,"line_end":758,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":1004},"span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\length_delimited.rs","byte_start":17300174,"byte_end":17300190,"line_start":793,"line_end":793,"column_start":12,"column_end":28},"name":"max_frame_length","qualname":"<Builder>::max_frame_length","value":"pub fn max_frame_length(&mut Self, usize) -> &mut Self","parent":null,"children":[],"decl_id":null,"docs":" Sets the max frame length in bytes","sig":null,"attributes":[{"value":"/ Sets the max frame length in bytes","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\length_delimited.rs","byte_start":17299246,"byte_end":17299284,"line_start":767,"line_end":767,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\length_delimited.rs","byte_start":17299289,"byte_end":17299292,"line_start":768,"line_end":768,"column_start":5,"column_end":8}},{"value":"/ This configuration option applies to both encoding and decoding. The","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\length_delimited.rs","byte_start":17299297,"byte_end":17299369,"line_start":769,"line_end":769,"column_start":5,"column_end":77}},{"value":"/ default value is 8MB.","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\length_delimited.rs","byte_start":17299374,"byte_end":17299399,"line_start":770,"line_end":770,"column_start":5,"column_end":30}},{"value":"/","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\length_delimited.rs","byte_start":17299404,"byte_end":17299407,"line_start":771,"line_end":771,"column_start":5,"column_end":8}},{"value":"/ When decoding, the length field read from the byte stream is checked","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\length_delimited.rs","byte_start":17299412,"byte_end":17299484,"line_start":772,"line_end":772,"column_start":5,"column_end":77}},{"value":"/ against this setting **before** any adjustments are applied. When","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\length_delimited.rs","byte_start":17299489,"byte_end":17299558,"line_start":773,"line_end":773,"column_start":5,"column_end":74}},{"value":"/ encoding, the length of the submitted payload is checked against this","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\length_delimited.rs","byte_start":17299563,"byte_end":17299636,"line_start":774,"line_end":774,"column_start":5,"column_end":78}},{"value":"/ setting.","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\length_delimited.rs","byte_start":17299641,"byte_end":17299653,"line_start":775,"line_end":775,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\length_delimited.rs","byte_start":17299658,"byte_end":17299661,"line_start":776,"line_end":776,"column_start":5,"column_end":8}},{"value":"/ When frames exceed the max length, an `io::Error` with the custom value","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\length_delimited.rs","byte_start":17299666,"byte_end":17299741,"line_start":777,"line_end":777,"column_start":5,"column_end":80}},{"value":"/ of the `LengthDelimitedCodecError` type will be returned.","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\length_delimited.rs","byte_start":17299746,"byte_end":17299807,"line_start":778,"line_end":778,"column_start":5,"column_end":66}},{"value":"/","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\length_delimited.rs","byte_start":17299812,"byte_end":17299815,"line_start":779,"line_end":779,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\length_delimited.rs","byte_start":17299820,"byte_end":17299834,"line_start":780,"line_end":780,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\length_delimited.rs","byte_start":17299839,"byte_end":17299842,"line_start":781,"line_end":781,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\length_delimited.rs","byte_start":17299847,"byte_end":17299854,"line_start":782,"line_end":782,"column_start":5,"column_end":12}},{"value":"/ # use tokio::io::AsyncRead;","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\length_delimited.rs","byte_start":17299859,"byte_end":17299890,"line_start":783,"line_end":783,"column_start":5,"column_end":36}},{"value":"/ use tokio_util::codec::LengthDelimitedCodec;","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\length_delimited.rs","byte_start":17299895,"byte_end":17299943,"line_start":784,"line_end":784,"column_start":5,"column_end":53}},{"value":"/","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\length_delimited.rs","byte_start":17299948,"byte_end":17299951,"line_start":785,"line_end":785,"column_start":5,"column_end":8}},{"value":"/ # fn bind_read<T: AsyncRead>(io: T) {","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\length_delimited.rs","byte_start":17299956,"byte_end":17299997,"line_start":786,"line_end":786,"column_start":5,"column_end":46}},{"value":"/ LengthDelimitedCodec::builder()","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\length_delimited.rs","byte_start":17300002,"byte_end":17300037,"line_start":787,"line_end":787,"column_start":5,"column_end":40}},{"value":"/     .max_frame_length(8 * 1024 * 1024)","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\length_delimited.rs","byte_start":17300042,"byte_end":17300084,"line_start":788,"line_end":788,"column_start":5,"column_end":47}},{"value":"/     .new_read(io);","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\length_delimited.rs","byte_start":17300089,"byte_end":17300111,"line_start":789,"line_end":789,"column_start":5,"column_end":27}},{"value":"/ # }","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\length_delimited.rs","byte_start":17300116,"byte_end":17300123,"line_start":790,"line_end":790,"column_start":5,"column_end":12}},{"value":"/ # pub fn main() {}","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\length_delimited.rs","byte_start":17300128,"byte_end":17300150,"line_start":791,"line_end":791,"column_start":5,"column_end":27}},{"value":"/ ```","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\length_delimited.rs","byte_start":17300155,"byte_end":17300162,"line_start":792,"line_end":792,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":1005},"span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\length_delimited.rs","byte_start":17301289,"byte_end":17301306,"line_start":830,"line_end":830,"column_start":12,"column_end":29},"name":"length_field_type","qualname":"<Builder>::length_field_type","value":"pub fn length_field_type<T: builder::LengthFieldType>(&mut Self) -> &mut Self","parent":null,"children":[],"decl_id":null,"docs":" Sets the unsigned integer type used to represent the length field.","sig":null,"attributes":[{"value":"/ Sets the unsigned integer type used to represent the length field.","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\length_delimited.rs","byte_start":17300287,"byte_end":17300357,"line_start":798,"line_end":798,"column_start":5,"column_end":75}},{"value":"/","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\length_delimited.rs","byte_start":17300362,"byte_end":17300365,"line_start":799,"line_end":799,"column_start":5,"column_end":8}},{"value":"/ The default type is [`u32`]. The max type is [`u64`] (or [`usize`] on","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\length_delimited.rs","byte_start":17300370,"byte_end":17300443,"line_start":800,"line_end":800,"column_start":5,"column_end":78}},{"value":"/ 64-bit targets).","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\length_delimited.rs","byte_start":17300448,"byte_end":17300468,"line_start":801,"line_end":801,"column_start":5,"column_end":25}},{"value":"/","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\length_delimited.rs","byte_start":17300473,"byte_end":17300476,"line_start":802,"line_end":802,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\length_delimited.rs","byte_start":17300481,"byte_end":17300495,"line_start":803,"line_end":803,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\length_delimited.rs","byte_start":17300500,"byte_end":17300503,"line_start":804,"line_end":804,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\length_delimited.rs","byte_start":17300508,"byte_end":17300515,"line_start":805,"line_end":805,"column_start":5,"column_end":12}},{"value":"/ # use tokio::io::AsyncRead;","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\length_delimited.rs","byte_start":17300520,"byte_end":17300551,"line_start":806,"line_end":806,"column_start":5,"column_end":36}},{"value":"/ use tokio_util::codec::LengthDelimitedCodec;","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\length_delimited.rs","byte_start":17300556,"byte_end":17300604,"line_start":807,"line_end":807,"column_start":5,"column_end":53}},{"value":"/","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\length_delimited.rs","byte_start":17300609,"byte_end":17300612,"line_start":808,"line_end":808,"column_start":5,"column_end":8}},{"value":"/ # fn bind_read<T: AsyncRead>(io: T) {","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\length_delimited.rs","byte_start":17300617,"byte_end":17300658,"line_start":809,"line_end":809,"column_start":5,"column_end":46}},{"value":"/ LengthDelimitedCodec::builder()","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\length_delimited.rs","byte_start":17300663,"byte_end":17300698,"line_start":810,"line_end":810,"column_start":5,"column_end":40}},{"value":"/     .length_field_type::<u32>()","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\length_delimited.rs","byte_start":17300703,"byte_end":17300738,"line_start":811,"line_end":811,"column_start":5,"column_end":40}},{"value":"/     .new_read(io);","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\length_delimited.rs","byte_start":17300743,"byte_end":17300765,"line_start":812,"line_end":812,"column_start":5,"column_end":27}},{"value":"/ # }","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\length_delimited.rs","byte_start":17300770,"byte_end":17300777,"line_start":813,"line_end":813,"column_start":5,"column_end":12}},{"value":"/ # pub fn main() {}","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\length_delimited.rs","byte_start":17300782,"byte_end":17300804,"line_start":814,"line_end":814,"column_start":5,"column_end":27}},{"value":"/ ```","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\length_delimited.rs","byte_start":17300809,"byte_end":17300816,"line_start":815,"line_end":815,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\length_delimited.rs","byte_start":17300821,"byte_end":17300824,"line_start":816,"line_end":816,"column_start":5,"column_end":8}},{"value":"/ Unlike [`Builder::length_field_length`], this does not fail at runtime","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\length_delimited.rs","byte_start":17300829,"byte_end":17300903,"line_start":817,"line_end":817,"column_start":5,"column_end":79}},{"value":"/ and instead produces a compile error:","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\length_delimited.rs","byte_start":17300908,"byte_end":17300949,"line_start":818,"line_end":818,"column_start":5,"column_end":46}},{"value":"/","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\length_delimited.rs","byte_start":17300954,"byte_end":17300957,"line_start":819,"line_end":819,"column_start":5,"column_end":8}},{"value":"/ ```compile_fail","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\length_delimited.rs","byte_start":17300962,"byte_end":17300981,"line_start":820,"line_end":820,"column_start":5,"column_end":24}},{"value":"/ # use tokio::io::AsyncRead;","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\length_delimited.rs","byte_start":17300986,"byte_end":17301017,"line_start":821,"line_end":821,"column_start":5,"column_end":36}},{"value":"/ # use tokio_util::codec::LengthDelimitedCodec;","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\length_delimited.rs","byte_start":17301022,"byte_end":17301072,"line_start":822,"line_end":822,"column_start":5,"column_end":55}},{"value":"/ # fn bind_read<T: AsyncRead>(io: T) {","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\length_delimited.rs","byte_start":17301077,"byte_end":17301118,"line_start":823,"line_end":823,"column_start":5,"column_end":46}},{"value":"/ LengthDelimitedCodec::builder()","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\length_delimited.rs","byte_start":17301123,"byte_end":17301158,"line_start":824,"line_end":824,"column_start":5,"column_end":40}},{"value":"/     .length_field_type::<u128>()","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\length_delimited.rs","byte_start":17301163,"byte_end":17301199,"line_start":825,"line_end":825,"column_start":5,"column_end":41}},{"value":"/     .new_read(io);","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\length_delimited.rs","byte_start":17301204,"byte_end":17301226,"line_start":826,"line_end":826,"column_start":5,"column_end":27}},{"value":"/ # }","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\length_delimited.rs","byte_start":17301231,"byte_end":17301238,"line_start":827,"line_end":827,"column_start":5,"column_end":12}},{"value":"/ # pub fn main() {}","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\length_delimited.rs","byte_start":17301243,"byte_end":17301265,"line_start":828,"line_end":828,"column_start":5,"column_end":27}},{"value":"/ ```","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\length_delimited.rs","byte_start":17301270,"byte_end":17301277,"line_start":829,"line_end":829,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":1007},"span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\length_delimited.rs","byte_start":17301991,"byte_end":17302010,"line_start":853,"line_end":853,"column_start":12,"column_end":31},"name":"length_field_length","qualname":"<Builder>::length_field_length","value":"pub fn length_field_length(&mut Self, usize) -> &mut Self","parent":null,"children":[],"decl_id":null,"docs":" Sets the number of bytes used to represent the length field","sig":null,"attributes":[{"value":"/ Sets the number of bytes used to represent the length field","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\length_delimited.rs","byte_start":17301427,"byte_end":17301490,"line_start":834,"line_end":834,"column_start":5,"column_end":68}},{"value":"/","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\length_delimited.rs","byte_start":17301495,"byte_end":17301498,"line_start":835,"line_end":835,"column_start":5,"column_end":8}},{"value":"/ The default value is `4`. The max value is `8`.","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\length_delimited.rs","byte_start":17301503,"byte_end":17301554,"line_start":836,"line_end":836,"column_start":5,"column_end":56}},{"value":"/","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\length_delimited.rs","byte_start":17301559,"byte_end":17301562,"line_start":837,"line_end":837,"column_start":5,"column_end":8}},{"value":"/ This configuration option applies to both encoding and decoding.","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\length_delimited.rs","byte_start":17301567,"byte_end":17301635,"line_start":838,"line_end":838,"column_start":5,"column_end":73}},{"value":"/","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\length_delimited.rs","byte_start":17301640,"byte_end":17301643,"line_start":839,"line_end":839,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\length_delimited.rs","byte_start":17301648,"byte_end":17301662,"line_start":840,"line_end":840,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\length_delimited.rs","byte_start":17301667,"byte_end":17301670,"line_start":841,"line_end":841,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\length_delimited.rs","byte_start":17301675,"byte_end":17301682,"line_start":842,"line_end":842,"column_start":5,"column_end":12}},{"value":"/ # use tokio::io::AsyncRead;","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\length_delimited.rs","byte_start":17301687,"byte_end":17301718,"line_start":843,"line_end":843,"column_start":5,"column_end":36}},{"value":"/ use tokio_util::codec::LengthDelimitedCodec;","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\length_delimited.rs","byte_start":17301723,"byte_end":17301771,"line_start":844,"line_end":844,"column_start":5,"column_end":53}},{"value":"/","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\length_delimited.rs","byte_start":17301776,"byte_end":17301779,"line_start":845,"line_end":845,"column_start":5,"column_end":8}},{"value":"/ # fn bind_read<T: AsyncRead>(io: T) {","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\length_delimited.rs","byte_start":17301784,"byte_end":17301825,"line_start":846,"line_end":846,"column_start":5,"column_end":46}},{"value":"/ LengthDelimitedCodec::builder()","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\length_delimited.rs","byte_start":17301830,"byte_end":17301865,"line_start":847,"line_end":847,"column_start":5,"column_end":40}},{"value":"/     .length_field_length(4)","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\length_delimited.rs","byte_start":17301870,"byte_end":17301901,"line_start":848,"line_end":848,"column_start":5,"column_end":36}},{"value":"/     .new_read(io);","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\length_delimited.rs","byte_start":17301906,"byte_end":17301928,"line_start":849,"line_end":849,"column_start":5,"column_end":27}},{"value":"/ # }","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\length_delimited.rs","byte_start":17301933,"byte_end":17301940,"line_start":850,"line_end":850,"column_start":5,"column_end":12}},{"value":"/ # pub fn main() {}","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\length_delimited.rs","byte_start":17301945,"byte_end":17301967,"line_start":851,"line_end":851,"column_start":5,"column_end":27}},{"value":"/ ```","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\length_delimited.rs","byte_start":17301972,"byte_end":17301979,"line_start":852,"line_end":852,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":1008},"span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\length_delimited.rs","byte_start":17302669,"byte_end":17302688,"line_start":876,"line_end":876,"column_start":12,"column_end":31},"name":"length_field_offset","qualname":"<Builder>::length_field_offset","value":"pub fn length_field_offset(&mut Self, usize) -> &mut Self","parent":null,"children":[],"decl_id":null,"docs":" Sets the number of bytes in the header before the length field","sig":null,"attributes":[{"value":"/ Sets the number of bytes in the header before the length field","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\length_delimited.rs","byte_start":17302179,"byte_end":17302245,"line_start":859,"line_end":859,"column_start":5,"column_end":71}},{"value":"/","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\length_delimited.rs","byte_start":17302250,"byte_end":17302253,"line_start":860,"line_end":860,"column_start":5,"column_end":8}},{"value":"/ This configuration option only applies to decoding.","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\length_delimited.rs","byte_start":17302258,"byte_end":17302313,"line_start":861,"line_end":861,"column_start":5,"column_end":60}},{"value":"/","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\length_delimited.rs","byte_start":17302318,"byte_end":17302321,"line_start":862,"line_end":862,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\length_delimited.rs","byte_start":17302326,"byte_end":17302340,"line_start":863,"line_end":863,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\length_delimited.rs","byte_start":17302345,"byte_end":17302348,"line_start":864,"line_end":864,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\length_delimited.rs","byte_start":17302353,"byte_end":17302360,"line_start":865,"line_end":865,"column_start":5,"column_end":12}},{"value":"/ # use tokio::io::AsyncRead;","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\length_delimited.rs","byte_start":17302365,"byte_end":17302396,"line_start":866,"line_end":866,"column_start":5,"column_end":36}},{"value":"/ use tokio_util::codec::LengthDelimitedCodec;","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\length_delimited.rs","byte_start":17302401,"byte_end":17302449,"line_start":867,"line_end":867,"column_start":5,"column_end":53}},{"value":"/","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\length_delimited.rs","byte_start":17302454,"byte_end":17302457,"line_start":868,"line_end":868,"column_start":5,"column_end":8}},{"value":"/ # fn bind_read<T: AsyncRead>(io: T) {","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\length_delimited.rs","byte_start":17302462,"byte_end":17302503,"line_start":869,"line_end":869,"column_start":5,"column_end":46}},{"value":"/ LengthDelimitedCodec::builder()","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\length_delimited.rs","byte_start":17302508,"byte_end":17302543,"line_start":870,"line_end":870,"column_start":5,"column_end":40}},{"value":"/     .length_field_offset(1)","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\length_delimited.rs","byte_start":17302548,"byte_end":17302579,"line_start":871,"line_end":871,"column_start":5,"column_end":36}},{"value":"/     .new_read(io);","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\length_delimited.rs","byte_start":17302584,"byte_end":17302606,"line_start":872,"line_end":872,"column_start":5,"column_end":27}},{"value":"/ # }","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\length_delimited.rs","byte_start":17302611,"byte_end":17302618,"line_start":873,"line_end":873,"column_start":5,"column_end":12}},{"value":"/ # pub fn main() {}","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\length_delimited.rs","byte_start":17302623,"byte_end":17302645,"line_start":874,"line_end":874,"column_start":5,"column_end":27}},{"value":"/ ```","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\length_delimited.rs","byte_start":17302650,"byte_end":17302657,"line_start":875,"line_end":875,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":1009},"span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\length_delimited.rs","byte_start":17303242,"byte_end":17303259,"line_start":897,"line_end":897,"column_start":12,"column_end":29},"name":"length_adjustment","qualname":"<Builder>::length_adjustment","value":"pub fn length_adjustment(&mut Self, isize) -> &mut Self","parent":null,"children":[],"decl_id":null,"docs":" Delta between the payload length specified in the header and the real\n payload length","sig":null,"attributes":[{"value":"/ Delta between the payload length specified in the header and the real","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\length_delimited.rs","byte_start":17302791,"byte_end":17302864,"line_start":881,"line_end":881,"column_start":5,"column_end":78}},{"value":"/ payload length","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\length_delimited.rs","byte_start":17302869,"byte_end":17302887,"line_start":882,"line_end":882,"column_start":5,"column_end":23}},{"value":"/","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\length_delimited.rs","byte_start":17302892,"byte_end":17302895,"line_start":883,"line_end":883,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\length_delimited.rs","byte_start":17302900,"byte_end":17302914,"line_start":884,"line_end":884,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\length_delimited.rs","byte_start":17302919,"byte_end":17302922,"line_start":885,"line_end":885,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\length_delimited.rs","byte_start":17302927,"byte_end":17302934,"line_start":886,"line_end":886,"column_start":5,"column_end":12}},{"value":"/ # use tokio::io::AsyncRead;","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\length_delimited.rs","byte_start":17302939,"byte_end":17302970,"line_start":887,"line_end":887,"column_start":5,"column_end":36}},{"value":"/ use tokio_util::codec::LengthDelimitedCodec;","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\length_delimited.rs","byte_start":17302975,"byte_end":17303023,"line_start":888,"line_end":888,"column_start":5,"column_end":53}},{"value":"/","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\length_delimited.rs","byte_start":17303028,"byte_end":17303031,"line_start":889,"line_end":889,"column_start":5,"column_end":8}},{"value":"/ # fn bind_read<T: AsyncRead>(io: T) {","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\length_delimited.rs","byte_start":17303036,"byte_end":17303077,"line_start":890,"line_end":890,"column_start":5,"column_end":46}},{"value":"/ LengthDelimitedCodec::builder()","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\length_delimited.rs","byte_start":17303082,"byte_end":17303117,"line_start":891,"line_end":891,"column_start":5,"column_end":40}},{"value":"/     .length_adjustment(-2)","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\length_delimited.rs","byte_start":17303122,"byte_end":17303152,"line_start":892,"line_end":892,"column_start":5,"column_end":35}},{"value":"/     .new_read(io);","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\length_delimited.rs","byte_start":17303157,"byte_end":17303179,"line_start":893,"line_end":893,"column_start":5,"column_end":27}},{"value":"/ # }","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\length_delimited.rs","byte_start":17303184,"byte_end":17303191,"line_start":894,"line_end":894,"column_start":5,"column_end":12}},{"value":"/ # pub fn main() {}","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\length_delimited.rs","byte_start":17303196,"byte_end":17303218,"line_start":895,"line_end":895,"column_start":5,"column_end":27}},{"value":"/ ```","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\length_delimited.rs","byte_start":17303223,"byte_end":17303230,"line_start":896,"line_end":896,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":1010},"span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\length_delimited.rs","byte_start":17303909,"byte_end":17303917,"line_start":921,"line_end":921,"column_start":12,"column_end":20},"name":"num_skip","qualname":"<Builder>::num_skip","value":"pub fn num_skip(&mut Self, usize) -> &mut Self","parent":null,"children":[],"decl_id":null,"docs":" Sets the number of bytes to skip before reading the payload","sig":null,"attributes":[{"value":"/ Sets the number of bytes to skip before reading the payload","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\length_delimited.rs","byte_start":17303360,"byte_end":17303423,"line_start":902,"line_end":902,"column_start":5,"column_end":68}},{"value":"/","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\length_delimited.rs","byte_start":17303428,"byte_end":17303431,"line_start":903,"line_end":903,"column_start":5,"column_end":8}},{"value":"/ Default value is `length_field_len + length_field_offset`","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\length_delimited.rs","byte_start":17303436,"byte_end":17303497,"line_start":904,"line_end":904,"column_start":5,"column_end":66}},{"value":"/","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\length_delimited.rs","byte_start":17303502,"byte_end":17303505,"line_start":905,"line_end":905,"column_start":5,"column_end":8}},{"value":"/ This configuration option only applies to decoding","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\length_delimited.rs","byte_start":17303510,"byte_end":17303564,"line_start":906,"line_end":906,"column_start":5,"column_end":59}},{"value":"/","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\length_delimited.rs","byte_start":17303569,"byte_end":17303572,"line_start":907,"line_end":907,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\length_delimited.rs","byte_start":17303577,"byte_end":17303591,"line_start":908,"line_end":908,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\length_delimited.rs","byte_start":17303596,"byte_end":17303599,"line_start":909,"line_end":909,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\length_delimited.rs","byte_start":17303604,"byte_end":17303611,"line_start":910,"line_end":910,"column_start":5,"column_end":12}},{"value":"/ # use tokio::io::AsyncRead;","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\length_delimited.rs","byte_start":17303616,"byte_end":17303647,"line_start":911,"line_end":911,"column_start":5,"column_end":36}},{"value":"/ use tokio_util::codec::LengthDelimitedCodec;","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\length_delimited.rs","byte_start":17303652,"byte_end":17303700,"line_start":912,"line_end":912,"column_start":5,"column_end":53}},{"value":"/","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\length_delimited.rs","byte_start":17303705,"byte_end":17303708,"line_start":913,"line_end":913,"column_start":5,"column_end":8}},{"value":"/ # fn bind_read<T: AsyncRead>(io: T) {","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\length_delimited.rs","byte_start":17303713,"byte_end":17303754,"line_start":914,"line_end":914,"column_start":5,"column_end":46}},{"value":"/ LengthDelimitedCodec::builder()","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\length_delimited.rs","byte_start":17303759,"byte_end":17303794,"line_start":915,"line_end":915,"column_start":5,"column_end":40}},{"value":"/     .num_skip(4)","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\length_delimited.rs","byte_start":17303799,"byte_end":17303819,"line_start":916,"line_end":916,"column_start":5,"column_end":25}},{"value":"/     .new_read(io);","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\length_delimited.rs","byte_start":17303824,"byte_end":17303846,"line_start":917,"line_end":917,"column_start":5,"column_end":27}},{"value":"/ # }","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\length_delimited.rs","byte_start":17303851,"byte_end":17303858,"line_start":918,"line_end":918,"column_start":5,"column_end":12}},{"value":"/ # pub fn main() {}","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\length_delimited.rs","byte_start":17303863,"byte_end":17303885,"line_start":919,"line_end":919,"column_start":5,"column_end":27}},{"value":"/ ```","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\length_delimited.rs","byte_start":17303890,"byte_end":17303897,"line_start":920,"line_end":920,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":1011},"span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\length_delimited.rs","byte_start":17304441,"byte_end":17304450,"line_start":941,"line_end":941,"column_start":12,"column_end":21},"name":"new_codec","qualname":"<Builder>::new_codec","value":"pub fn new_codec(&Self) -> LengthDelimitedCodec","parent":null,"children":[],"decl_id":null,"docs":" Create a configured length delimited `LengthDelimitedCodec`","sig":null,"attributes":[{"value":"/ Create a configured length delimited `LengthDelimitedCodec`","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\length_delimited.rs","byte_start":17304015,"byte_end":17304078,"line_start":926,"line_end":926,"column_start":5,"column_end":68}},{"value":"/","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\length_delimited.rs","byte_start":17304083,"byte_end":17304086,"line_start":927,"line_end":927,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\length_delimited.rs","byte_start":17304091,"byte_end":17304105,"line_start":928,"line_end":928,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\length_delimited.rs","byte_start":17304110,"byte_end":17304113,"line_start":929,"line_end":929,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\length_delimited.rs","byte_start":17304118,"byte_end":17304125,"line_start":930,"line_end":930,"column_start":5,"column_end":12}},{"value":"/ use tokio_util::codec::LengthDelimitedCodec;","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\length_delimited.rs","byte_start":17304130,"byte_end":17304178,"line_start":931,"line_end":931,"column_start":5,"column_end":53}},{"value":"/ # pub fn main() {","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\length_delimited.rs","byte_start":17304183,"byte_end":17304204,"line_start":932,"line_end":932,"column_start":5,"column_end":26}},{"value":"/ LengthDelimitedCodec::builder()","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\length_delimited.rs","byte_start":17304209,"byte_end":17304244,"line_start":933,"line_end":933,"column_start":5,"column_end":40}},{"value":"/     .length_field_offset(0)","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\length_delimited.rs","byte_start":17304249,"byte_end":17304280,"line_start":934,"line_end":934,"column_start":5,"column_end":36}},{"value":"/     .length_field_type::<u16>()","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\length_delimited.rs","byte_start":17304285,"byte_end":17304320,"line_start":935,"line_end":935,"column_start":5,"column_end":40}},{"value":"/     .length_adjustment(0)","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\length_delimited.rs","byte_start":17304325,"byte_end":17304354,"line_start":936,"line_end":936,"column_start":5,"column_end":34}},{"value":"/     .num_skip(0)","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\length_delimited.rs","byte_start":17304359,"byte_end":17304379,"line_start":937,"line_end":937,"column_start":5,"column_end":25}},{"value":"/     .new_codec();","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\length_delimited.rs","byte_start":17304384,"byte_end":17304405,"line_start":938,"line_end":938,"column_start":5,"column_end":26}},{"value":"/ # }","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\length_delimited.rs","byte_start":17304410,"byte_end":17304417,"line_start":939,"line_end":939,"column_start":5,"column_end":12}},{"value":"/ ```","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\length_delimited.rs","byte_start":17304422,"byte_end":17304429,"line_start":940,"line_end":940,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":1012},"span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\length_delimited.rs","byte_start":17305110,"byte_end":17305118,"line_start":966,"line_end":966,"column_start":12,"column_end":20},"name":"new_read","qualname":"<Builder>::new_read","value":"pub fn new_read<T>(&Self, T) -> FramedRead<T, LengthDelimitedCodec> where\nT: AsyncRead","parent":null,"children":[],"decl_id":null,"docs":" Create a configured length delimited `FramedRead`","sig":null,"attributes":[{"value":"/ Create a configured length delimited `FramedRead`","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\length_delimited.rs","byte_start":17304602,"byte_end":17304655,"line_start":948,"line_end":948,"column_start":5,"column_end":58}},{"value":"/","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\length_delimited.rs","byte_start":17304660,"byte_end":17304663,"line_start":949,"line_end":949,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\length_delimited.rs","byte_start":17304668,"byte_end":17304682,"line_start":950,"line_end":950,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\length_delimited.rs","byte_start":17304687,"byte_end":17304690,"line_start":951,"line_end":951,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\length_delimited.rs","byte_start":17304695,"byte_end":17304702,"line_start":952,"line_end":952,"column_start":5,"column_end":12}},{"value":"/ # use tokio::io::AsyncRead;","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\length_delimited.rs","byte_start":17304707,"byte_end":17304738,"line_start":953,"line_end":953,"column_start":5,"column_end":36}},{"value":"/ use tokio_util::codec::LengthDelimitedCodec;","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\length_delimited.rs","byte_start":17304743,"byte_end":17304791,"line_start":954,"line_end":954,"column_start":5,"column_end":53}},{"value":"/","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\length_delimited.rs","byte_start":17304796,"byte_end":17304799,"line_start":955,"line_end":955,"column_start":5,"column_end":8}},{"value":"/ # fn bind_read<T: AsyncRead>(io: T) {","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\length_delimited.rs","byte_start":17304804,"byte_end":17304845,"line_start":956,"line_end":956,"column_start":5,"column_end":46}},{"value":"/ LengthDelimitedCodec::builder()","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\length_delimited.rs","byte_start":17304850,"byte_end":17304885,"line_start":957,"line_end":957,"column_start":5,"column_end":40}},{"value":"/     .length_field_offset(0)","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\length_delimited.rs","byte_start":17304890,"byte_end":17304921,"line_start":958,"line_end":958,"column_start":5,"column_end":36}},{"value":"/     .length_field_type::<u16>()","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\length_delimited.rs","byte_start":17304926,"byte_end":17304961,"line_start":959,"line_end":959,"column_start":5,"column_end":40}},{"value":"/     .length_adjustment(0)","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\length_delimited.rs","byte_start":17304966,"byte_end":17304995,"line_start":960,"line_end":960,"column_start":5,"column_end":34}},{"value":"/     .num_skip(0)","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\length_delimited.rs","byte_start":17305000,"byte_end":17305020,"line_start":961,"line_end":961,"column_start":5,"column_end":25}},{"value":"/     .new_read(io);","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\length_delimited.rs","byte_start":17305025,"byte_end":17305047,"line_start":962,"line_end":962,"column_start":5,"column_end":27}},{"value":"/ # }","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\length_delimited.rs","byte_start":17305052,"byte_end":17305059,"line_start":963,"line_end":963,"column_start":5,"column_end":12}},{"value":"/ # pub fn main() {}","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\length_delimited.rs","byte_start":17305064,"byte_end":17305086,"line_start":964,"line_end":964,"column_start":5,"column_end":27}},{"value":"/ ```","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\length_delimited.rs","byte_start":17305091,"byte_end":17305098,"line_start":965,"line_end":965,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":1014},"span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\length_delimited.rs","byte_start":17305695,"byte_end":17305704,"line_start":987,"line_end":987,"column_start":12,"column_end":21},"name":"new_write","qualname":"<Builder>::new_write","value":"pub fn new_write<T>(&Self, T) -> FramedWrite<T, LengthDelimitedCodec> where\nT: AsyncWrite","parent":null,"children":[],"decl_id":null,"docs":" Create a configured length delimited `FramedWrite`","sig":null,"attributes":[{"value":"/ Create a configured length delimited `FramedWrite`","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\length_delimited.rs","byte_start":17305282,"byte_end":17305336,"line_start":973,"line_end":973,"column_start":5,"column_end":59}},{"value":"/","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\length_delimited.rs","byte_start":17305341,"byte_end":17305344,"line_start":974,"line_end":974,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\length_delimited.rs","byte_start":17305349,"byte_end":17305363,"line_start":975,"line_end":975,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\length_delimited.rs","byte_start":17305368,"byte_end":17305371,"line_start":976,"line_end":976,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\length_delimited.rs","byte_start":17305376,"byte_end":17305383,"line_start":977,"line_end":977,"column_start":5,"column_end":12}},{"value":"/ # use tokio::io::AsyncWrite;","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\length_delimited.rs","byte_start":17305388,"byte_end":17305420,"line_start":978,"line_end":978,"column_start":5,"column_end":37}},{"value":"/ # use tokio_util::codec::LengthDelimitedCodec;","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\length_delimited.rs","byte_start":17305425,"byte_end":17305475,"line_start":979,"line_end":979,"column_start":5,"column_end":55}},{"value":"/ # fn write_frame<T: AsyncWrite>(io: T) {","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\length_delimited.rs","byte_start":17305480,"byte_end":17305524,"line_start":980,"line_end":980,"column_start":5,"column_end":49}},{"value":"/ LengthDelimitedCodec::builder()","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\length_delimited.rs","byte_start":17305529,"byte_end":17305564,"line_start":981,"line_end":981,"column_start":5,"column_end":40}},{"value":"/     .length_field_type::<u16>()","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\length_delimited.rs","byte_start":17305569,"byte_end":17305604,"line_start":982,"line_end":982,"column_start":5,"column_end":40}},{"value":"/     .new_write(io);","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\length_delimited.rs","byte_start":17305609,"byte_end":17305632,"line_start":983,"line_end":983,"column_start":5,"column_end":28}},{"value":"/ # }","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\length_delimited.rs","byte_start":17305637,"byte_end":17305644,"line_start":984,"line_end":984,"column_start":5,"column_end":12}},{"value":"/ # pub fn main() {}","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\length_delimited.rs","byte_start":17305649,"byte_end":17305671,"line_start":985,"line_end":985,"column_start":5,"column_end":27}},{"value":"/ ```","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\length_delimited.rs","byte_start":17305676,"byte_end":17305683,"line_start":986,"line_end":986,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":1016},"span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\length_delimited.rs","byte_start":17306317,"byte_end":17306327,"line_start":1009,"line_end":1009,"column_start":12,"column_end":22},"name":"new_framed","qualname":"<Builder>::new_framed","value":"pub fn new_framed<T>(&Self, T) -> Framed<T, LengthDelimitedCodec> where\nT: AsyncRead + AsyncWrite","parent":null,"children":[],"decl_id":null,"docs":" Create a configured length delimited `Framed`","sig":null,"attributes":[{"value":"/ Create a configured length delimited `Framed`","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\length_delimited.rs","byte_start":17305865,"byte_end":17305914,"line_start":994,"line_end":994,"column_start":5,"column_end":54}},{"value":"/","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\length_delimited.rs","byte_start":17305919,"byte_end":17305922,"line_start":995,"line_end":995,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\length_delimited.rs","byte_start":17305927,"byte_end":17305941,"line_start":996,"line_end":996,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\length_delimited.rs","byte_start":17305946,"byte_end":17305949,"line_start":997,"line_end":997,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\length_delimited.rs","byte_start":17305954,"byte_end":17305961,"line_start":998,"line_end":998,"column_start":5,"column_end":12}},{"value":"/ # use tokio::io::{AsyncRead, AsyncWrite};","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\length_delimited.rs","byte_start":17305966,"byte_end":17306011,"line_start":999,"line_end":999,"column_start":5,"column_end":50}},{"value":"/ # use tokio_util::codec::LengthDelimitedCodec;","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\length_delimited.rs","byte_start":17306016,"byte_end":17306066,"line_start":1000,"line_end":1000,"column_start":5,"column_end":55}},{"value":"/ # fn write_frame<T: AsyncRead + AsyncWrite>(io: T) {","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\length_delimited.rs","byte_start":17306071,"byte_end":17306127,"line_start":1001,"line_end":1001,"column_start":5,"column_end":61}},{"value":"/ # let _ =","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\length_delimited.rs","byte_start":17306132,"byte_end":17306145,"line_start":1002,"line_end":1002,"column_start":5,"column_end":18}},{"value":"/ LengthDelimitedCodec::builder()","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\length_delimited.rs","byte_start":17306150,"byte_end":17306185,"line_start":1003,"line_end":1003,"column_start":5,"column_end":40}},{"value":"/     .length_field_type::<u16>()","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\length_delimited.rs","byte_start":17306190,"byte_end":17306225,"line_start":1004,"line_end":1004,"column_start":5,"column_end":40}},{"value":"/     .new_framed(io);","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\length_delimited.rs","byte_start":17306230,"byte_end":17306254,"line_start":1005,"line_end":1005,"column_start":5,"column_end":29}},{"value":"/ # }","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\length_delimited.rs","byte_start":17306259,"byte_end":17306266,"line_start":1006,"line_end":1006,"column_start":5,"column_end":12}},{"value":"/ # pub fn main() {}","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\length_delimited.rs","byte_start":17306271,"byte_end":17306293,"line_start":1007,"line_end":1007,"column_start":5,"column_end":27}},{"value":"/ ```","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\length_delimited.rs","byte_start":17306298,"byte_end":17306305,"line_start":1008,"line_end":1008,"column_start":5,"column_end":12}}]},{"kind":"Struct","id":{"krate":0,"index":1243},"span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\lines_codec.rs","byte_start":17307706,"byte_end":17307716,"line_start":12,"line_end":12,"column_start":12,"column_end":22},"name":"LinesCodec","qualname":"::codec::lines_codec::LinesCodec","value":"LinesCodec {  }","parent":null,"children":[{"krate":0,"index":1244},{"krate":0,"index":1245},{"krate":0,"index":1246}],"decl_id":null,"docs":" A simple [`Decoder`] and [`Encoder`] implementation that splits up data into lines.","sig":null,"attributes":[{"value":"/ A simple [`Decoder`] and [`Encoder`] implementation that splits up data into lines.","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\lines_codec.rs","byte_start":17307463,"byte_end":17307550,"line_start":7,"line_end":7,"column_start":1,"column_end":88}},{"value":"/","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\lines_codec.rs","byte_start":17307551,"byte_end":17307554,"line_start":8,"line_end":8,"column_start":1,"column_end":4}},{"value":"/ [`Decoder`]: crate::codec::Decoder","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\lines_codec.rs","byte_start":17307555,"byte_end":17307593,"line_start":9,"line_end":9,"column_start":1,"column_end":39}},{"value":"/ [`Encoder`]: crate::codec::Encoder","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\lines_codec.rs","byte_start":17307594,"byte_end":17307632,"line_start":10,"line_end":10,"column_start":1,"column_end":39}}]},{"kind":"Method","id":{"krate":0,"index":1068},"span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\lines_codec.rs","byte_start":17308816,"byte_end":17308819,"line_start":40,"line_end":40,"column_start":12,"column_end":15},"name":"new","qualname":"<LinesCodec>::new","value":"pub fn new() -> LinesCodec","parent":null,"children":[],"decl_id":null,"docs":" Returns a `LinesCodec` for splitting up data into lines.","sig":null,"attributes":[{"value":"/ Returns a `LinesCodec` for splitting up data into lines.","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\lines_codec.rs","byte_start":17308397,"byte_end":17308457,"line_start":31,"line_end":31,"column_start":5,"column_end":65}},{"value":"/","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\lines_codec.rs","byte_start":17308462,"byte_end":17308465,"line_start":32,"line_end":32,"column_start":5,"column_end":8}},{"value":"/ # Note","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\lines_codec.rs","byte_start":17308470,"byte_end":17308480,"line_start":33,"line_end":33,"column_start":5,"column_end":15}},{"value":"/","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\lines_codec.rs","byte_start":17308485,"byte_end":17308488,"line_start":34,"line_end":34,"column_start":5,"column_end":8}},{"value":"/ The returned `LinesCodec` will not have an upper bound on the length","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\lines_codec.rs","byte_start":17308493,"byte_end":17308565,"line_start":35,"line_end":35,"column_start":5,"column_end":77}},{"value":"/ of a buffered line. See the documentation for [`new_with_max_length`]","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\lines_codec.rs","byte_start":17308570,"byte_end":17308643,"line_start":36,"line_end":36,"column_start":5,"column_end":78}},{"value":"/ for information on why this could be a potential security risk.","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\lines_codec.rs","byte_start":17308648,"byte_end":17308715,"line_start":37,"line_end":37,"column_start":5,"column_end":72}},{"value":"/","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\lines_codec.rs","byte_start":17308720,"byte_end":17308723,"line_start":38,"line_end":38,"column_start":5,"column_end":8}},{"value":"/ [`new_with_max_length`]: crate::codec::LinesCodec::new_with_max_length()","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\lines_codec.rs","byte_start":17308728,"byte_end":17308804,"line_start":39,"line_end":39,"column_start":5,"column_end":81}}]},{"kind":"Method","id":{"krate":0,"index":1069},"span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\lines_codec.rs","byte_start":17309950,"byte_end":17309969,"line_start":66,"line_end":66,"column_start":12,"column_end":31},"name":"new_with_max_length","qualname":"<LinesCodec>::new_with_max_length","value":"pub fn new_with_max_length(usize) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Returns a `LinesCodec` with a maximum line length limit.","sig":null,"attributes":[{"value":"/ Returns a `LinesCodec` with a maximum line length limit.","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\lines_codec.rs","byte_start":17308977,"byte_end":17309037,"line_start":48,"line_end":48,"column_start":5,"column_end":65}},{"value":"/","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\lines_codec.rs","byte_start":17309042,"byte_end":17309045,"line_start":49,"line_end":49,"column_start":5,"column_end":8}},{"value":"/ If this is set, calls to `LinesCodec::decode` will return a","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\lines_codec.rs","byte_start":17309050,"byte_end":17309113,"line_start":50,"line_end":50,"column_start":5,"column_end":68}},{"value":"/ [`LinesCodecError`] when a line exceeds the length limit. Subsequent calls","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\lines_codec.rs","byte_start":17309118,"byte_end":17309196,"line_start":51,"line_end":51,"column_start":5,"column_end":83}},{"value":"/ will discard up to `limit` bytes from that line until a newline","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\lines_codec.rs","byte_start":17309201,"byte_end":17309268,"line_start":52,"line_end":52,"column_start":5,"column_end":72}},{"value":"/ character is reached, returning `None` until the line over the limit","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\lines_codec.rs","byte_start":17309273,"byte_end":17309345,"line_start":53,"line_end":53,"column_start":5,"column_end":77}},{"value":"/ has been fully discarded. After that point, calls to `decode` will","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\lines_codec.rs","byte_start":17309350,"byte_end":17309420,"line_start":54,"line_end":54,"column_start":5,"column_end":75}},{"value":"/ function as normal.","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\lines_codec.rs","byte_start":17309425,"byte_end":17309448,"line_start":55,"line_end":55,"column_start":5,"column_end":28}},{"value":"/","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\lines_codec.rs","byte_start":17309453,"byte_end":17309456,"line_start":56,"line_end":56,"column_start":5,"column_end":8}},{"value":"/ # Note","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\lines_codec.rs","byte_start":17309461,"byte_end":17309471,"line_start":57,"line_end":57,"column_start":5,"column_end":15}},{"value":"/","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\lines_codec.rs","byte_start":17309476,"byte_end":17309479,"line_start":58,"line_end":58,"column_start":5,"column_end":8}},{"value":"/ Setting a length limit is highly recommended for any `LinesCodec` which","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\lines_codec.rs","byte_start":17309484,"byte_end":17309559,"line_start":59,"line_end":59,"column_start":5,"column_end":80}},{"value":"/ will be exposed to untrusted input. Otherwise, the size of the buffer","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\lines_codec.rs","byte_start":17309564,"byte_end":17309637,"line_start":60,"line_end":60,"column_start":5,"column_end":78}},{"value":"/ that holds the line currently being read is unbounded. An attacker could","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\lines_codec.rs","byte_start":17309642,"byte_end":17309718,"line_start":61,"line_end":61,"column_start":5,"column_end":81}},{"value":"/ exploit this unbounded buffer by sending an unbounded amount of input","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\lines_codec.rs","byte_start":17309723,"byte_end":17309796,"line_start":62,"line_end":62,"column_start":5,"column_end":78}},{"value":"/ without any `\\n` characters, causing unbounded memory consumption.","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\lines_codec.rs","byte_start":17309801,"byte_end":17309871,"line_start":63,"line_end":63,"column_start":5,"column_end":75}},{"value":"/","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\lines_codec.rs","byte_start":17309876,"byte_end":17309879,"line_start":64,"line_end":64,"column_start":5,"column_end":8}},{"value":"/ [`LinesCodecError`]: crate::codec::LinesCodecError","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\lines_codec.rs","byte_start":17309884,"byte_end":17309938,"line_start":65,"line_end":65,"column_start":5,"column_end":59}}]},{"kind":"Method","id":{"krate":0,"index":1070},"span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\lines_codec.rs","byte_start":17310535,"byte_end":17310545,"line_start":88,"line_end":88,"column_start":12,"column_end":22},"name":"max_length","qualname":"<LinesCodec>::max_length","value":"pub fn max_length(&Self) -> usize","parent":null,"children":[],"decl_id":null,"docs":" Returns the maximum line length when decoding.","sig":null,"attributes":[{"value":"/ Returns the maximum line length when decoding.","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\lines_codec.rs","byte_start":17310097,"byte_end":17310147,"line_start":73,"line_end":73,"column_start":5,"column_end":55}},{"value":"/","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\lines_codec.rs","byte_start":17310152,"byte_end":17310155,"line_start":74,"line_end":74,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\lines_codec.rs","byte_start":17310160,"byte_end":17310167,"line_start":75,"line_end":75,"column_start":5,"column_end":12}},{"value":"/ use std::usize;","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\lines_codec.rs","byte_start":17310172,"byte_end":17310191,"line_start":76,"line_end":76,"column_start":5,"column_end":24}},{"value":"/ use tokio_util::codec::LinesCodec;","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\lines_codec.rs","byte_start":17310196,"byte_end":17310234,"line_start":77,"line_end":77,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\lines_codec.rs","byte_start":17310239,"byte_end":17310242,"line_start":78,"line_end":78,"column_start":5,"column_end":8}},{"value":"/ let codec = LinesCodec::new();","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\lines_codec.rs","byte_start":17310247,"byte_end":17310281,"line_start":79,"line_end":79,"column_start":5,"column_end":39}},{"value":"/ assert_eq!(codec.max_length(), usize::MAX);","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\lines_codec.rs","byte_start":17310286,"byte_end":17310333,"line_start":80,"line_end":80,"column_start":5,"column_end":52}},{"value":"/ ```","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\lines_codec.rs","byte_start":17310338,"byte_end":17310345,"line_start":81,"line_end":81,"column_start":5,"column_end":12}},{"value":"/ ```","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\lines_codec.rs","byte_start":17310350,"byte_end":17310357,"line_start":82,"line_end":82,"column_start":5,"column_end":12}},{"value":"/ use tokio_util::codec::LinesCodec;","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\lines_codec.rs","byte_start":17310362,"byte_end":17310400,"line_start":83,"line_end":83,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\lines_codec.rs","byte_start":17310405,"byte_end":17310408,"line_start":84,"line_end":84,"column_start":5,"column_end":8}},{"value":"/ let codec = LinesCodec::new_with_max_length(256);","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\lines_codec.rs","byte_start":17310413,"byte_end":17310466,"line_start":85,"line_end":85,"column_start":5,"column_end":58}},{"value":"/ assert_eq!(codec.max_length(), 256);","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\lines_codec.rs","byte_start":17310471,"byte_end":17310511,"line_start":86,"line_end":86,"column_start":5,"column_end":45}},{"value":"/ ```","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\lines_codec.rs","byte_start":17310516,"byte_end":17310523,"line_start":87,"line_end":87,"column_start":5,"column_end":12}}]},{"kind":"TupleVariant","id":{"krate":0,"index":1266},"span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\lines_codec.rs","byte_start":17314871,"byte_end":17314892,"line_start":210,"line_end":210,"column_start":5,"column_end":26},"name":"MaxLineLengthExceeded","qualname":"::codec::lines_codec::LinesCodecError::MaxLineLengthExceeded","value":"LinesCodecError::MaxLineLengthExceeded","parent":{"krate":0,"index":1265},"children":[],"decl_id":null,"docs":" The maximum line length was exceeded.\n","sig":null,"attributes":[{"value":"/ The maximum line length was exceeded.","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\lines_codec.rs","byte_start":17314825,"byte_end":17314866,"line_start":209,"line_end":209,"column_start":5,"column_end":46}}]},{"kind":"TupleVariant","id":{"krate":0,"index":1268},"span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\lines_codec.rs","byte_start":17314928,"byte_end":17314930,"line_start":212,"line_end":212,"column_start":5,"column_end":7},"name":"Io","qualname":"::codec::lines_codec::LinesCodecError::Io","value":"LinesCodecError::Io(io::Error)","parent":{"krate":0,"index":1265},"children":[],"decl_id":null,"docs":" An IO error occurred.\n","sig":null,"attributes":[{"value":"/ An IO error occurred.","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\lines_codec.rs","byte_start":17314898,"byte_end":17314923,"line_start":211,"line_end":211,"column_start":5,"column_end":30}}]},{"kind":"Enum","id":{"krate":0,"index":1265},"span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\lines_codec.rs","byte_start":17314803,"byte_end":17314818,"line_start":208,"line_end":208,"column_start":10,"column_end":25},"name":"LinesCodecError","qualname":"::codec::lines_codec::LinesCodecError","value":"pub enum LinesCodecError { MaxLineLengthExceeded, Io(io::Error), }","parent":null,"children":[{"krate":0,"index":1266},{"krate":0,"index":1268}],"decl_id":null,"docs":" An error occurred while encoding or decoding a line.\n","sig":null,"attributes":[{"value":"/ An error occurred while encoding or decoding a line.","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\lines_codec.rs","byte_start":17314720,"byte_end":17314776,"line_start":206,"line_end":206,"column_start":1,"column_end":57}}]},{"kind":"Struct","id":{"krate":0,"index":1273},"span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\any_delimiter_codec.rs","byte_start":17316852,"byte_end":17316869,"line_start":41,"line_end":41,"column_start":12,"column_end":29},"name":"AnyDelimiterCodec","qualname":"::codec::any_delimiter_codec::AnyDelimiterCodec","value":"AnyDelimiterCodec {  }","parent":null,"children":[{"krate":0,"index":1274},{"krate":0,"index":1275},{"krate":0,"index":1276},{"krate":0,"index":1277},{"krate":0,"index":1278}],"decl_id":null,"docs":" A simple [`Decoder`] and [`Encoder`] implementation that splits up data into chunks based on any character in the given delimiter string.","sig":null,"attributes":[{"value":"/ A simple [`Decoder`] and [`Encoder`] implementation that splits up data into chunks based on any character in the given delimiter string.","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\any_delimiter_codec.rs","byte_start":17315666,"byte_end":17315807,"line_start":9,"line_end":9,"column_start":1,"column_end":142}},{"value":"/","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\any_delimiter_codec.rs","byte_start":17315808,"byte_end":17315811,"line_start":10,"line_end":10,"column_start":1,"column_end":4}},{"value":"/ [`Decoder`]: crate::codec::Decoder","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\any_delimiter_codec.rs","byte_start":17315812,"byte_end":17315850,"line_start":11,"line_end":11,"column_start":1,"column_end":39}},{"value":"/ [`Encoder`]: crate::codec::Encoder","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\any_delimiter_codec.rs","byte_start":17315851,"byte_end":17315889,"line_start":12,"line_end":12,"column_start":1,"column_end":39}},{"value":"/","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\any_delimiter_codec.rs","byte_start":17315890,"byte_end":17315893,"line_start":13,"line_end":13,"column_start":1,"column_end":4}},{"value":"/ # Example","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\any_delimiter_codec.rs","byte_start":17315894,"byte_end":17315907,"line_start":14,"line_end":14,"column_start":1,"column_end":14}},{"value":"/ Decode string of bytes containing various different delimiters.","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\any_delimiter_codec.rs","byte_start":17315908,"byte_end":17315975,"line_start":15,"line_end":15,"column_start":1,"column_end":68}},{"value":"/","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\any_delimiter_codec.rs","byte_start":17315976,"byte_end":17315979,"line_start":16,"line_end":16,"column_start":1,"column_end":4}},{"value":"/ [`BytesMut`]: bytes::BytesMut","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\any_delimiter_codec.rs","byte_start":17315980,"byte_end":17316013,"line_start":17,"line_end":17,"column_start":1,"column_end":34}},{"value":"/ [`Error`]: std::io::Error","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\any_delimiter_codec.rs","byte_start":17316014,"byte_end":17316043,"line_start":18,"line_end":18,"column_start":1,"column_end":30}},{"value":"/","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\any_delimiter_codec.rs","byte_start":17316044,"byte_end":17316047,"line_start":19,"line_end":19,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\any_delimiter_codec.rs","byte_start":17316048,"byte_end":17316055,"line_start":20,"line_end":20,"column_start":1,"column_end":8}},{"value":"/ use tokio_util::codec::{AnyDelimiterCodec, Decoder};","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\any_delimiter_codec.rs","byte_start":17316056,"byte_end":17316112,"line_start":21,"line_end":21,"column_start":1,"column_end":57}},{"value":"/ use bytes::{BufMut, BytesMut};","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\any_delimiter_codec.rs","byte_start":17316113,"byte_end":17316147,"line_start":22,"line_end":22,"column_start":1,"column_end":35}},{"value":"/","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\any_delimiter_codec.rs","byte_start":17316148,"byte_end":17316151,"line_start":23,"line_end":23,"column_start":1,"column_end":4}},{"value":"/ #","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\any_delimiter_codec.rs","byte_start":17316152,"byte_end":17316157,"line_start":24,"line_end":24,"column_start":1,"column_end":6}},{"value":"/ # #[tokio::main(flavor = \"current_thread\")]","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\any_delimiter_codec.rs","byte_start":17316158,"byte_end":17316205,"line_start":25,"line_end":25,"column_start":1,"column_end":48}},{"value":"/ # async fn main() -> Result<(), std::io::Error> {","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\any_delimiter_codec.rs","byte_start":17316206,"byte_end":17316259,"line_start":26,"line_end":26,"column_start":1,"column_end":54}},{"value":"/ let mut codec = AnyDelimiterCodec::new(b\",;\\r\\n\".to_vec(),b\";\".to_vec());","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\any_delimiter_codec.rs","byte_start":17316260,"byte_end":17316337,"line_start":27,"line_end":27,"column_start":1,"column_end":78}},{"value":"/ let buf = &mut BytesMut::new();","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\any_delimiter_codec.rs","byte_start":17316338,"byte_end":17316373,"line_start":28,"line_end":28,"column_start":1,"column_end":36}},{"value":"/ buf.reserve(200);","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\any_delimiter_codec.rs","byte_start":17316374,"byte_end":17316395,"line_start":29,"line_end":29,"column_start":1,"column_end":22}},{"value":"/ buf.put_slice(b\"chunk 1,chunk 2;chunk 3\\n\\r\");","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\any_delimiter_codec.rs","byte_start":17316396,"byte_end":17316446,"line_start":30,"line_end":30,"column_start":1,"column_end":51}},{"value":"/ assert_eq!(\"chunk 1\", codec.decode(buf).unwrap().unwrap());","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\any_delimiter_codec.rs","byte_start":17316447,"byte_end":17316510,"line_start":31,"line_end":31,"column_start":1,"column_end":64}},{"value":"/ assert_eq!(\"chunk 2\", codec.decode(buf).unwrap().unwrap());","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\any_delimiter_codec.rs","byte_start":17316511,"byte_end":17316574,"line_start":32,"line_end":32,"column_start":1,"column_end":64}},{"value":"/ assert_eq!(\"chunk 3\", codec.decode(buf).unwrap().unwrap());","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\any_delimiter_codec.rs","byte_start":17316575,"byte_end":17316638,"line_start":33,"line_end":33,"column_start":1,"column_end":64}},{"value":"/ assert_eq!(\"\", codec.decode(buf).unwrap().unwrap());","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\any_delimiter_codec.rs","byte_start":17316639,"byte_end":17316695,"line_start":34,"line_end":34,"column_start":1,"column_end":57}},{"value":"/ assert_eq!(None, codec.decode(buf).unwrap());","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\any_delimiter_codec.rs","byte_start":17316696,"byte_end":17316745,"line_start":35,"line_end":35,"column_start":1,"column_end":50}},{"value":"/ # Ok(())","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\any_delimiter_codec.rs","byte_start":17316746,"byte_end":17316758,"line_start":36,"line_end":36,"column_start":1,"column_end":13}},{"value":"/ # }","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\any_delimiter_codec.rs","byte_start":17316759,"byte_end":17316766,"line_start":37,"line_end":37,"column_start":1,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\any_delimiter_codec.rs","byte_start":17316767,"byte_end":17316774,"line_start":38,"line_end":38,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\any_delimiter_codec.rs","byte_start":17316775,"byte_end":17316778,"line_start":39,"line_end":39,"column_start":1,"column_end":4}}]},{"kind":"Method","id":{"krate":0,"index":1137},"span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\any_delimiter_codec.rs","byte_start":17318204,"byte_end":17318207,"line_start":75,"line_end":75,"column_start":12,"column_end":15},"name":"new","qualname":"<AnyDelimiterCodec>::new","value":"pub fn new(Vec<u8>, Vec<u8>) -> AnyDelimiterCodec","parent":null,"children":[],"decl_id":null,"docs":" Returns a `AnyDelimiterCodec` for splitting up data into chunks.","sig":null,"attributes":[{"value":"/ Returns a `AnyDelimiterCodec` for splitting up data into chunks.","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\any_delimiter_codec.rs","byte_start":17317762,"byte_end":17317830,"line_start":66,"line_end":66,"column_start":5,"column_end":73}},{"value":"/","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\any_delimiter_codec.rs","byte_start":17317835,"byte_end":17317838,"line_start":67,"line_end":67,"column_start":5,"column_end":8}},{"value":"/ # Note","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\any_delimiter_codec.rs","byte_start":17317843,"byte_end":17317853,"line_start":68,"line_end":68,"column_start":5,"column_end":15}},{"value":"/","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\any_delimiter_codec.rs","byte_start":17317858,"byte_end":17317861,"line_start":69,"line_end":69,"column_start":5,"column_end":8}},{"value":"/ The returned `AnyDelimiterCodec` will not have an upper bound on the length","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\any_delimiter_codec.rs","byte_start":17317866,"byte_end":17317945,"line_start":70,"line_end":70,"column_start":5,"column_end":84}},{"value":"/ of a buffered chunk. See the documentation for [`new_with_max_length`]","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\any_delimiter_codec.rs","byte_start":17317950,"byte_end":17318024,"line_start":71,"line_end":71,"column_start":5,"column_end":79}},{"value":"/ for information on why this could be a potential security risk.","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\any_delimiter_codec.rs","byte_start":17318029,"byte_end":17318096,"line_start":72,"line_end":72,"column_start":5,"column_end":72}},{"value":"/","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\any_delimiter_codec.rs","byte_start":17318101,"byte_end":17318104,"line_start":73,"line_end":73,"column_start":5,"column_end":8}},{"value":"/ [`new_with_max_length`]: crate::codec::AnyDelimiterCodec::new_with_max_length()","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\any_delimiter_codec.rs","byte_start":17318109,"byte_end":17318192,"line_start":74,"line_end":74,"column_start":5,"column_end":88}}]},{"kind":"Method","id":{"krate":0,"index":1138},"span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\any_delimiter_codec.rs","byte_start":17319518,"byte_end":17319537,"line_start":103,"line_end":103,"column_start":12,"column_end":31},"name":"new_with_max_length","qualname":"<AnyDelimiterCodec>::new_with_max_length","value":"pub fn new_with_max_length(Vec<u8>, Vec<u8>, usize) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Returns a `AnyDelimiterCodec` with a maximum chunk length limit.","sig":null,"attributes":[{"value":"/ Returns a `AnyDelimiterCodec` with a maximum chunk length limit.","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\any_delimiter_codec.rs","byte_start":17318487,"byte_end":17318555,"line_start":85,"line_end":85,"column_start":5,"column_end":73}},{"value":"/","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\any_delimiter_codec.rs","byte_start":17318560,"byte_end":17318563,"line_start":86,"line_end":86,"column_start":5,"column_end":8}},{"value":"/ If this is set, calls to `AnyDelimiterCodec::decode` will return a","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\any_delimiter_codec.rs","byte_start":17318568,"byte_end":17318638,"line_start":87,"line_end":87,"column_start":5,"column_end":75}},{"value":"/ [`AnyDelimiterCodecError`] when a chunk exceeds the length limit. Subsequent calls","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\any_delimiter_codec.rs","byte_start":17318643,"byte_end":17318729,"line_start":88,"line_end":88,"column_start":5,"column_end":91}},{"value":"/ will discard up to `limit` bytes from that chunk until a delimiter","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\any_delimiter_codec.rs","byte_start":17318734,"byte_end":17318804,"line_start":89,"line_end":89,"column_start":5,"column_end":75}},{"value":"/ character is reached, returning `None` until the delimiter over the limit","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\any_delimiter_codec.rs","byte_start":17318809,"byte_end":17318886,"line_start":90,"line_end":90,"column_start":5,"column_end":82}},{"value":"/ has been fully discarded. After that point, calls to `decode` will","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\any_delimiter_codec.rs","byte_start":17318891,"byte_end":17318961,"line_start":91,"line_end":91,"column_start":5,"column_end":75}},{"value":"/ function as normal.","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\any_delimiter_codec.rs","byte_start":17318966,"byte_end":17318989,"line_start":92,"line_end":92,"column_start":5,"column_end":28}},{"value":"/","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\any_delimiter_codec.rs","byte_start":17318994,"byte_end":17318997,"line_start":93,"line_end":93,"column_start":5,"column_end":8}},{"value":"/ # Note","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\any_delimiter_codec.rs","byte_start":17319002,"byte_end":17319012,"line_start":94,"line_end":94,"column_start":5,"column_end":15}},{"value":"/","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\any_delimiter_codec.rs","byte_start":17319017,"byte_end":17319020,"line_start":95,"line_end":95,"column_start":5,"column_end":8}},{"value":"/ Setting a length limit is highly recommended for any `AnyDelimiterCodec` which","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\any_delimiter_codec.rs","byte_start":17319025,"byte_end":17319107,"line_start":96,"line_end":96,"column_start":5,"column_end":87}},{"value":"/ will be exposed to untrusted input. Otherwise, the size of the buffer","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\any_delimiter_codec.rs","byte_start":17319112,"byte_end":17319185,"line_start":97,"line_end":97,"column_start":5,"column_end":78}},{"value":"/ that holds the chunk currently being read is unbounded. An attacker could","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\any_delimiter_codec.rs","byte_start":17319190,"byte_end":17319267,"line_start":98,"line_end":98,"column_start":5,"column_end":82}},{"value":"/ exploit this unbounded buffer by sending an unbounded amount of input","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\any_delimiter_codec.rs","byte_start":17319272,"byte_end":17319345,"line_start":99,"line_end":99,"column_start":5,"column_end":78}},{"value":"/ without any delimiter characters, causing unbounded memory consumption.","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\any_delimiter_codec.rs","byte_start":17319350,"byte_end":17319425,"line_start":100,"line_end":100,"column_start":5,"column_end":80}},{"value":"/","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\any_delimiter_codec.rs","byte_start":17319430,"byte_end":17319433,"line_start":101,"line_end":101,"column_start":5,"column_end":8}},{"value":"/ [`AnyDelimiterCodecError`]: crate::codec::AnyDelimiterCodecError","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\any_delimiter_codec.rs","byte_start":17319438,"byte_end":17319506,"line_start":102,"line_end":102,"column_start":5,"column_end":73}}]},{"kind":"Method","id":{"krate":0,"index":1139},"span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\any_delimiter_codec.rs","byte_start":17320325,"byte_end":17320335,"line_start":129,"line_end":129,"column_start":12,"column_end":22},"name":"max_length","qualname":"<AnyDelimiterCodec>::max_length","value":"pub fn max_length(&Self) -> usize","parent":null,"children":[],"decl_id":null,"docs":" Returns the maximum chunk length when decoding.","sig":null,"attributes":[{"value":"/ Returns the maximum chunk length when decoding.","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\any_delimiter_codec.rs","byte_start":17319794,"byte_end":17319845,"line_start":114,"line_end":114,"column_start":5,"column_end":56}},{"value":"/","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\any_delimiter_codec.rs","byte_start":17319850,"byte_end":17319853,"line_start":115,"line_end":115,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\any_delimiter_codec.rs","byte_start":17319858,"byte_end":17319865,"line_start":116,"line_end":116,"column_start":5,"column_end":12}},{"value":"/ use std::usize;","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\any_delimiter_codec.rs","byte_start":17319870,"byte_end":17319889,"line_start":117,"line_end":117,"column_start":5,"column_end":24}},{"value":"/ use tokio_util::codec::AnyDelimiterCodec;","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\any_delimiter_codec.rs","byte_start":17319894,"byte_end":17319939,"line_start":118,"line_end":118,"column_start":5,"column_end":50}},{"value":"/","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\any_delimiter_codec.rs","byte_start":17319944,"byte_end":17319947,"line_start":119,"line_end":119,"column_start":5,"column_end":8}},{"value":"/ let codec = AnyDelimiterCodec::new(b\",;\\n\".to_vec(), b\";\".to_vec());","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\any_delimiter_codec.rs","byte_start":17319952,"byte_end":17320024,"line_start":120,"line_end":120,"column_start":5,"column_end":77}},{"value":"/ assert_eq!(codec.max_length(), usize::MAX);","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\any_delimiter_codec.rs","byte_start":17320029,"byte_end":17320076,"line_start":121,"line_end":121,"column_start":5,"column_end":52}},{"value":"/ ```","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\any_delimiter_codec.rs","byte_start":17320081,"byte_end":17320088,"line_start":122,"line_end":122,"column_start":5,"column_end":12}},{"value":"/ ```","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\any_delimiter_codec.rs","byte_start":17320093,"byte_end":17320100,"line_start":123,"line_end":123,"column_start":5,"column_end":12}},{"value":"/ use tokio_util::codec::AnyDelimiterCodec;","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\any_delimiter_codec.rs","byte_start":17320105,"byte_end":17320150,"line_start":124,"line_end":124,"column_start":5,"column_end":50}},{"value":"/","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\any_delimiter_codec.rs","byte_start":17320155,"byte_end":17320158,"line_start":125,"line_end":125,"column_start":5,"column_end":8}},{"value":"/ let codec = AnyDelimiterCodec::new_with_max_length(b\",;\\n\".to_vec(), b\";\".to_vec(), 256);","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\any_delimiter_codec.rs","byte_start":17320163,"byte_end":17320256,"line_start":126,"line_end":126,"column_start":5,"column_end":98}},{"value":"/ assert_eq!(codec.max_length(), 256);","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\any_delimiter_codec.rs","byte_start":17320261,"byte_end":17320301,"line_start":127,"line_end":127,"column_start":5,"column_end":45}},{"value":"/ ```","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\any_delimiter_codec.rs","byte_start":17320306,"byte_end":17320313,"line_start":128,"line_end":128,"column_start":5,"column_end":12}}]},{"kind":"TupleVariant","id":{"krate":0,"index":1298},"span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\any_delimiter_codec.rs","byte_start":17324431,"byte_end":17324453,"line_start":241,"line_end":241,"column_start":5,"column_end":27},"name":"MaxChunkLengthExceeded","qualname":"::codec::any_delimiter_codec::AnyDelimiterCodecError::MaxChunkLengthExceeded","value":"AnyDelimiterCodecError::MaxChunkLengthExceeded","parent":{"krate":0,"index":1297},"children":[],"decl_id":null,"docs":" The maximum chunk length was exceeded.\n","sig":null,"attributes":[{"value":"/ The maximum chunk length was exceeded.","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\any_delimiter_codec.rs","byte_start":17324384,"byte_end":17324426,"line_start":240,"line_end":240,"column_start":5,"column_end":47}}]},{"kind":"TupleVariant","id":{"krate":0,"index":1300},"span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\any_delimiter_codec.rs","byte_start":17324489,"byte_end":17324491,"line_start":243,"line_end":243,"column_start":5,"column_end":7},"name":"Io","qualname":"::codec::any_delimiter_codec::AnyDelimiterCodecError::Io","value":"AnyDelimiterCodecError::Io(io::Error)","parent":{"krate":0,"index":1297},"children":[],"decl_id":null,"docs":" An IO error occurred.\n","sig":null,"attributes":[{"value":"/ An IO error occurred.","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\any_delimiter_codec.rs","byte_start":17324459,"byte_end":17324484,"line_start":242,"line_end":242,"column_start":5,"column_end":30}}]},{"kind":"Enum","id":{"krate":0,"index":1297},"span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\any_delimiter_codec.rs","byte_start":17324355,"byte_end":17324377,"line_start":239,"line_end":239,"column_start":10,"column_end":32},"name":"AnyDelimiterCodecError","qualname":"::codec::any_delimiter_codec::AnyDelimiterCodecError","value":"pub enum AnyDelimiterCodecError { MaxChunkLengthExceeded, Io(io::Error), }","parent":null,"children":[{"krate":0,"index":1298},{"krate":0,"index":1300}],"decl_id":null,"docs":" An error occurred while encoding or decoding a chunk.\n","sig":null,"attributes":[{"value":"/ An error occurred while encoding or decoding a chunk.","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\any_delimiter_codec.rs","byte_start":17324271,"byte_end":17324328,"line_start":237,"line_end":237,"column_start":1,"column_end":58}}]},{"kind":"Mod","id":{"krate":0,"index":14},"span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\sync\\mod.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"sync","qualname":"::sync","value":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\sync\\mod.rs","parent":null,"children":[{"krate":0,"index":15},{"krate":0,"index":105},{"krate":0,"index":106},{"krate":0,"index":109},{"krate":0,"index":112},{"krate":0,"index":115},{"krate":0,"index":179},{"krate":0,"index":180},{"krate":0,"index":183},{"krate":0,"index":186},{"krate":0,"index":246},{"krate":0,"index":249},{"krate":0,"index":337}],"decl_id":null,"docs":" Synchronization primitives\n","sig":null,"attributes":[{"value":"/ Synchronization primitives","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\sync\\mod.rs","byte_start":7007,"byte_end":7037,"line_start":1,"line_end":1,"column_start":1,"column_end":31}}]},{"kind":"Struct","id":{"krate":0,"index":1305},"span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\sync\\cancellation_token\\guard.rs","byte_start":14476,"byte_end":14485,"line_start":6,"line_end":6,"column_start":12,"column_end":21},"name":"DropGuard","qualname":"::sync::cancellation_token::guard::DropGuard","value":"DropGuard {  }","parent":null,"children":[{"krate":0,"index":1306}],"decl_id":null,"docs":" A wrapper for cancellation token which automatically cancels\n it on drop. It is created using `drop_guard` method on the `CancellationToken`.\n","sig":null,"attributes":[{"value":"/ A wrapper for cancellation token which automatically cancels","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\sync\\cancellation_token\\guard.rs","byte_start":14299,"byte_end":14363,"line_start":3,"line_end":3,"column_start":1,"column_end":65}},{"value":"/ it on drop. It is created using `drop_guard` method on the `CancellationToken`.","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\sync\\cancellation_token\\guard.rs","byte_start":14364,"byte_end":14447,"line_start":4,"line_end":4,"column_start":1,"column_end":84}}]},{"kind":"Method","id":{"krate":0,"index":21},"span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\sync\\cancellation_token\\guard.rs","byte_start":14748,"byte_end":14754,"line_start":14,"line_end":14,"column_start":12,"column_end":18},"name":"disarm","qualname":"<DropGuard>::disarm","value":"pub fn disarm(Self) -> CancellationToken","parent":null,"children":[],"decl_id":null,"docs":" Returns stored cancellation token and removes this drop guard instance\n (i.e. it will no longer cancel token). Other guards for this token\n are not affected.\n","sig":null,"attributes":[{"value":"/ Returns stored cancellation token and removes this drop guard instance","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\sync\\cancellation_token\\guard.rs","byte_start":14561,"byte_end":14635,"line_start":11,"line_end":11,"column_start":5,"column_end":79}},{"value":"/ (i.e. it will no longer cancel token). Other guards for this token","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\sync\\cancellation_token\\guard.rs","byte_start":14640,"byte_end":14710,"line_start":12,"line_end":12,"column_start":5,"column_end":75}},{"value":"/ are not affected.","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\sync\\cancellation_token\\guard.rs","byte_start":14715,"byte_end":14736,"line_start":13,"line_end":13,"column_start":5,"column_end":26}}]},{"kind":"Struct","id":{"krate":0,"index":81},"span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\sync\\cancellation_token.rs","byte_start":8887,"byte_end":8904,"line_start":54,"line_end":54,"column_start":12,"column_end":29},"name":"CancellationToken","qualname":"::sync::cancellation_token::CancellationToken","value":"CancellationToken {  }","parent":null,"children":[{"krate":0,"index":82}],"decl_id":null,"docs":" A token which can be used to signal a cancellation request to one or more\n tasks.","sig":null,"attributes":[{"value":"/ A token which can be used to signal a cancellation request to one or more","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\sync\\cancellation_token.rs","byte_start":7665,"byte_end":7742,"line_start":14,"line_end":14,"column_start":1,"column_end":78}},{"value":"/ tasks.","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\sync\\cancellation_token.rs","byte_start":7743,"byte_end":7753,"line_start":15,"line_end":15,"column_start":1,"column_end":11}},{"value":"/","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\sync\\cancellation_token.rs","byte_start":7754,"byte_end":7757,"line_start":16,"line_end":16,"column_start":1,"column_end":4}},{"value":"/ Tasks can call [`CancellationToken::cancelled()`] in order to","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\sync\\cancellation_token.rs","byte_start":7758,"byte_end":7823,"line_start":17,"line_end":17,"column_start":1,"column_end":66}},{"value":"/ obtain a Future which will be resolved when cancellation is requested.","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\sync\\cancellation_token.rs","byte_start":7824,"byte_end":7898,"line_start":18,"line_end":18,"column_start":1,"column_end":75}},{"value":"/","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\sync\\cancellation_token.rs","byte_start":7899,"byte_end":7902,"line_start":19,"line_end":19,"column_start":1,"column_end":4}},{"value":"/ Cancellation can be requested through the [`CancellationToken::cancel`] method.","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\sync\\cancellation_token.rs","byte_start":7903,"byte_end":7986,"line_start":20,"line_end":20,"column_start":1,"column_end":84}},{"value":"/","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\sync\\cancellation_token.rs","byte_start":7987,"byte_end":7990,"line_start":21,"line_end":21,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\sync\\cancellation_token.rs","byte_start":7991,"byte_end":8005,"line_start":22,"line_end":22,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\sync\\cancellation_token.rs","byte_start":8006,"byte_end":8009,"line_start":23,"line_end":23,"column_start":1,"column_end":4}},{"value":"/ ```no_run","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\sync\\cancellation_token.rs","byte_start":8010,"byte_end":8023,"line_start":24,"line_end":24,"column_start":1,"column_end":14}},{"value":"/ use tokio::select;","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\sync\\cancellation_token.rs","byte_start":8024,"byte_end":8046,"line_start":25,"line_end":25,"column_start":1,"column_end":23}},{"value":"/ use tokio_util::sync::CancellationToken;","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\sync\\cancellation_token.rs","byte_start":8047,"byte_end":8091,"line_start":26,"line_end":26,"column_start":1,"column_end":45}},{"value":"/","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\sync\\cancellation_token.rs","byte_start":8092,"byte_end":8095,"line_start":27,"line_end":27,"column_start":1,"column_end":4}},{"value":"/ #[tokio::main]","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\sync\\cancellation_token.rs","byte_start":8096,"byte_end":8114,"line_start":28,"line_end":28,"column_start":1,"column_end":19}},{"value":"/ async fn main() {","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\sync\\cancellation_token.rs","byte_start":8115,"byte_end":8136,"line_start":29,"line_end":29,"column_start":1,"column_end":22}},{"value":"/     let token = CancellationToken::new();","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\sync\\cancellation_token.rs","byte_start":8137,"byte_end":8182,"line_start":30,"line_end":30,"column_start":1,"column_end":46}},{"value":"/     let cloned_token = token.clone();","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\sync\\cancellation_token.rs","byte_start":8183,"byte_end":8224,"line_start":31,"line_end":31,"column_start":1,"column_end":42}},{"value":"/","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\sync\\cancellation_token.rs","byte_start":8225,"byte_end":8228,"line_start":32,"line_end":32,"column_start":1,"column_end":4}},{"value":"/     let join_handle = tokio::spawn(async move {","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\sync\\cancellation_token.rs","byte_start":8229,"byte_end":8280,"line_start":33,"line_end":33,"column_start":1,"column_end":52}},{"value":"/         // Wait for either cancellation or a very long time","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\sync\\cancellation_token.rs","byte_start":8281,"byte_end":8344,"line_start":34,"line_end":34,"column_start":1,"column_end":64}},{"value":"/         select! {","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\sync\\cancellation_token.rs","byte_start":8345,"byte_end":8366,"line_start":35,"line_end":35,"column_start":1,"column_end":22}},{"value":"/             _ = cloned_token.cancelled() => {","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\sync\\cancellation_token.rs","byte_start":8367,"byte_end":8416,"line_start":36,"line_end":36,"column_start":1,"column_end":50}},{"value":"/                 // The token was cancelled","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\sync\\cancellation_token.rs","byte_start":8417,"byte_end":8463,"line_start":37,"line_end":37,"column_start":1,"column_end":47}},{"value":"/                 5","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\sync\\cancellation_token.rs","byte_start":8464,"byte_end":8485,"line_start":38,"line_end":38,"column_start":1,"column_end":22}},{"value":"/             }","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\sync\\cancellation_token.rs","byte_start":8486,"byte_end":8503,"line_start":39,"line_end":39,"column_start":1,"column_end":18}},{"value":"/             _ = tokio::time::sleep(std::time::Duration::from_secs(9999)) => {","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\sync\\cancellation_token.rs","byte_start":8504,"byte_end":8585,"line_start":40,"line_end":40,"column_start":1,"column_end":82}},{"value":"/                 99","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\sync\\cancellation_token.rs","byte_start":8586,"byte_end":8608,"line_start":41,"line_end":41,"column_start":1,"column_end":23}},{"value":"/             }","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\sync\\cancellation_token.rs","byte_start":8609,"byte_end":8626,"line_start":42,"line_end":42,"column_start":1,"column_end":18}},{"value":"/         }","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\sync\\cancellation_token.rs","byte_start":8627,"byte_end":8640,"line_start":43,"line_end":43,"column_start":1,"column_end":14}},{"value":"/     });","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\sync\\cancellation_token.rs","byte_start":8641,"byte_end":8652,"line_start":44,"line_end":44,"column_start":1,"column_end":12}},{"value":"/","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\sync\\cancellation_token.rs","byte_start":8653,"byte_end":8656,"line_start":45,"line_end":45,"column_start":1,"column_end":4}},{"value":"/     tokio::spawn(async move {","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\sync\\cancellation_token.rs","byte_start":8657,"byte_end":8690,"line_start":46,"line_end":46,"column_start":1,"column_end":34}},{"value":"/         tokio::time::sleep(std::time::Duration::from_millis(10)).await;","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\sync\\cancellation_token.rs","byte_start":8691,"byte_end":8766,"line_start":47,"line_end":47,"column_start":1,"column_end":76}},{"value":"/         token.cancel();","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\sync\\cancellation_token.rs","byte_start":8767,"byte_end":8794,"line_start":48,"line_end":48,"column_start":1,"column_end":28}},{"value":"/     });","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\sync\\cancellation_token.rs","byte_start":8795,"byte_end":8806,"line_start":49,"line_end":49,"column_start":1,"column_end":12}},{"value":"/","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\sync\\cancellation_token.rs","byte_start":8807,"byte_end":8810,"line_start":50,"line_end":50,"column_start":1,"column_end":4}},{"value":"/     assert_eq!(5, join_handle.await.unwrap());","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\sync\\cancellation_token.rs","byte_start":8811,"byte_end":8861,"line_start":51,"line_end":51,"column_start":1,"column_end":51}},{"value":"/ }","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\sync\\cancellation_token.rs","byte_start":8862,"byte_end":8867,"line_start":52,"line_end":52,"column_start":1,"column_end":6}},{"value":"/ ```","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\sync\\cancellation_token.rs","byte_start":8868,"byte_end":8875,"line_start":53,"line_end":53,"column_start":1,"column_end":8}}]},{"kind":"Struct","id":{"krate":0,"index":1309},"span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\sync\\cancellation_token.rs","byte_start":9131,"byte_end":9156,"line_start":62,"line_end":62,"column_start":16,"column_end":41},"name":"WaitForCancellationFuture","qualname":"::sync::cancellation_token::WaitForCancellationFuture","value":"WaitForCancellationFuture {  }","parent":null,"children":[{"krate":0,"index":1311},{"krate":0,"index":1312}],"decl_id":null,"docs":" A Future that is resolved once the corresponding [`CancellationToken`]\n is cancelled.\n","sig":null,"attributes":[{"value":"must_use = \"futures do nothing unless polled\"","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pin-project-lite-0.2.9\\src\\lib.rs","byte_start":13525703,"byte_end":13525712,"line_start":633,"line_end":633,"column_start":11,"column_end":20}}]},{"kind":"Method","id":{"krate":0,"index":92},"span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\sync\\cancellation_token.rs","byte_start":10140,"byte_end":10143,"line_start":102,"line_end":102,"column_start":12,"column_end":15},"name":"new","qualname":"<CancellationToken>::new","value":"pub fn new() -> CancellationToken","parent":null,"children":[],"decl_id":null,"docs":" Creates a new CancellationToken in the non-cancelled state.\n","sig":null,"attributes":[{"value":"/ Creates a new CancellationToken in the non-cancelled state.","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\sync\\cancellation_token.rs","byte_start":10065,"byte_end":10128,"line_start":101,"line_end":101,"column_start":5,"column_end":68}}]},{"kind":"Method","id":{"krate":0,"index":93},"span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\sync\\cancellation_token.rs","byte_start":11542,"byte_end":11553,"line_start":146,"line_end":146,"column_start":12,"column_end":23},"name":"child_token","qualname":"<CancellationToken>::child_token","value":"pub fn child_token(&Self) -> CancellationToken","parent":null,"children":[],"decl_id":null,"docs":" Creates a `CancellationToken` which will get cancelled whenever the\n current token gets cancelled.","sig":null,"attributes":[{"value":"/ Creates a `CancellationToken` which will get cancelled whenever the","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\sync\\cancellation_token.rs","byte_start":10275,"byte_end":10346,"line_start":108,"line_end":108,"column_start":5,"column_end":76}},{"value":"/ current token gets cancelled.","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\sync\\cancellation_token.rs","byte_start":10351,"byte_end":10384,"line_start":109,"line_end":109,"column_start":5,"column_end":38}},{"value":"/","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\sync\\cancellation_token.rs","byte_start":10389,"byte_end":10392,"line_start":110,"line_end":110,"column_start":5,"column_end":8}},{"value":"/ If the current token is already cancelled, the child token will get","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\sync\\cancellation_token.rs","byte_start":10397,"byte_end":10468,"line_start":111,"line_end":111,"column_start":5,"column_end":76}},{"value":"/ returned in cancelled state.","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\sync\\cancellation_token.rs","byte_start":10473,"byte_end":10505,"line_start":112,"line_end":112,"column_start":5,"column_end":37}},{"value":"/","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\sync\\cancellation_token.rs","byte_start":10510,"byte_end":10513,"line_start":113,"line_end":113,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\sync\\cancellation_token.rs","byte_start":10518,"byte_end":10532,"line_start":114,"line_end":114,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\sync\\cancellation_token.rs","byte_start":10537,"byte_end":10540,"line_start":115,"line_end":115,"column_start":5,"column_end":8}},{"value":"/ ```no_run","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\sync\\cancellation_token.rs","byte_start":10545,"byte_end":10558,"line_start":116,"line_end":116,"column_start":5,"column_end":18}},{"value":"/ use tokio::select;","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\sync\\cancellation_token.rs","byte_start":10563,"byte_end":10585,"line_start":117,"line_end":117,"column_start":5,"column_end":27}},{"value":"/ use tokio_util::sync::CancellationToken;","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\sync\\cancellation_token.rs","byte_start":10590,"byte_end":10634,"line_start":118,"line_end":118,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\sync\\cancellation_token.rs","byte_start":10639,"byte_end":10642,"line_start":119,"line_end":119,"column_start":5,"column_end":8}},{"value":"/ #[tokio::main]","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\sync\\cancellation_token.rs","byte_start":10647,"byte_end":10665,"line_start":120,"line_end":120,"column_start":5,"column_end":23}},{"value":"/ async fn main() {","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\sync\\cancellation_token.rs","byte_start":10670,"byte_end":10691,"line_start":121,"line_end":121,"column_start":5,"column_end":26}},{"value":"/     let token = CancellationToken::new();","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\sync\\cancellation_token.rs","byte_start":10696,"byte_end":10741,"line_start":122,"line_end":122,"column_start":5,"column_end":50}},{"value":"/     let child_token = token.child_token();","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\sync\\cancellation_token.rs","byte_start":10746,"byte_end":10792,"line_start":123,"line_end":123,"column_start":5,"column_end":51}},{"value":"/","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\sync\\cancellation_token.rs","byte_start":10797,"byte_end":10800,"line_start":124,"line_end":124,"column_start":5,"column_end":8}},{"value":"/     let join_handle = tokio::spawn(async move {","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\sync\\cancellation_token.rs","byte_start":10805,"byte_end":10856,"line_start":125,"line_end":125,"column_start":5,"column_end":56}},{"value":"/         // Wait for either cancellation or a very long time","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\sync\\cancellation_token.rs","byte_start":10861,"byte_end":10924,"line_start":126,"line_end":126,"column_start":5,"column_end":68}},{"value":"/         select! {","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\sync\\cancellation_token.rs","byte_start":10929,"byte_end":10950,"line_start":127,"line_end":127,"column_start":5,"column_end":26}},{"value":"/             _ = child_token.cancelled() => {","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\sync\\cancellation_token.rs","byte_start":10955,"byte_end":11003,"line_start":128,"line_end":128,"column_start":5,"column_end":53}},{"value":"/                 // The token was cancelled","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\sync\\cancellation_token.rs","byte_start":11008,"byte_end":11054,"line_start":129,"line_end":129,"column_start":5,"column_end":51}},{"value":"/                 5","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\sync\\cancellation_token.rs","byte_start":11059,"byte_end":11080,"line_start":130,"line_end":130,"column_start":5,"column_end":26}},{"value":"/             }","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\sync\\cancellation_token.rs","byte_start":11085,"byte_end":11102,"line_start":131,"line_end":131,"column_start":5,"column_end":22}},{"value":"/             _ = tokio::time::sleep(std::time::Duration::from_secs(9999)) => {","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\sync\\cancellation_token.rs","byte_start":11107,"byte_end":11188,"line_start":132,"line_end":132,"column_start":5,"column_end":86}},{"value":"/                 99","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\sync\\cancellation_token.rs","byte_start":11193,"byte_end":11215,"line_start":133,"line_end":133,"column_start":5,"column_end":27}},{"value":"/             }","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\sync\\cancellation_token.rs","byte_start":11220,"byte_end":11237,"line_start":134,"line_end":134,"column_start":5,"column_end":22}},{"value":"/         }","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\sync\\cancellation_token.rs","byte_start":11242,"byte_end":11255,"line_start":135,"line_end":135,"column_start":5,"column_end":18}},{"value":"/     });","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\sync\\cancellation_token.rs","byte_start":11260,"byte_end":11271,"line_start":136,"line_end":136,"column_start":5,"column_end":16}},{"value":"/","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\sync\\cancellation_token.rs","byte_start":11276,"byte_end":11279,"line_start":137,"line_end":137,"column_start":5,"column_end":8}},{"value":"/     tokio::spawn(async move {","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\sync\\cancellation_token.rs","byte_start":11284,"byte_end":11317,"line_start":138,"line_end":138,"column_start":5,"column_end":38}},{"value":"/         tokio::time::sleep(std::time::Duration::from_millis(10)).await;","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\sync\\cancellation_token.rs","byte_start":11322,"byte_end":11397,"line_start":139,"line_end":139,"column_start":5,"column_end":80}},{"value":"/         token.cancel();","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\sync\\cancellation_token.rs","byte_start":11402,"byte_end":11429,"line_start":140,"line_end":140,"column_start":5,"column_end":32}},{"value":"/     });","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\sync\\cancellation_token.rs","byte_start":11434,"byte_end":11445,"line_start":141,"line_end":141,"column_start":5,"column_end":16}},{"value":"/","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\sync\\cancellation_token.rs","byte_start":11450,"byte_end":11453,"line_start":142,"line_end":142,"column_start":5,"column_end":8}},{"value":"/     assert_eq!(5, join_handle.await.unwrap());","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\sync\\cancellation_token.rs","byte_start":11458,"byte_end":11508,"line_start":143,"line_end":143,"column_start":5,"column_end":55}},{"value":"/ }","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\sync\\cancellation_token.rs","byte_start":11513,"byte_end":11518,"line_start":144,"line_end":144,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\sync\\cancellation_token.rs","byte_start":11523,"byte_end":11530,"line_start":145,"line_end":145,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":94},"span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\sync\\cancellation_token.rs","byte_start":12276,"byte_end":12282,"line_start":162,"line_end":162,"column_start":12,"column_end":18},"name":"cancel","qualname":"<CancellationToken>::cancel","value":"pub fn cancel(&Self)","parent":null,"children":[],"decl_id":null,"docs":" Cancel the [`CancellationToken`] and all child tokens which had been\n derived from it.","sig":null,"attributes":[{"value":"/ Cancel the [`CancellationToken`] and all child tokens which had been","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\sync\\cancellation_token.rs","byte_start":11688,"byte_end":11760,"line_start":152,"line_end":152,"column_start":5,"column_end":77}},{"value":"/ derived from it.","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\sync\\cancellation_token.rs","byte_start":11765,"byte_end":11785,"line_start":153,"line_end":153,"column_start":5,"column_end":25}},{"value":"/","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\sync\\cancellation_token.rs","byte_start":11790,"byte_end":11793,"line_start":154,"line_end":154,"column_start":5,"column_end":8}},{"value":"/ This will wake up all tasks which are waiting for cancellation.","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\sync\\cancellation_token.rs","byte_start":11798,"byte_end":11865,"line_start":155,"line_end":155,"column_start":5,"column_end":72}},{"value":"/","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\sync\\cancellation_token.rs","byte_start":11870,"byte_end":11873,"line_start":156,"line_end":156,"column_start":5,"column_end":8}},{"value":"/ Be aware that cancellation is not an atomic operation. It is possible","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\sync\\cancellation_token.rs","byte_start":11878,"byte_end":11951,"line_start":157,"line_end":157,"column_start":5,"column_end":78}},{"value":"/ for another thread running in parallel with a call to `cancel` to first","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\sync\\cancellation_token.rs","byte_start":11956,"byte_end":12031,"line_start":158,"line_end":158,"column_start":5,"column_end":80}},{"value":"/ receive `true` from `is_cancelled` on one child node, and then receive","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\sync\\cancellation_token.rs","byte_start":12036,"byte_end":12110,"line_start":159,"line_end":159,"column_start":5,"column_end":79}},{"value":"/ `false` from `is_cancelled` on another child node. However, once the","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\sync\\cancellation_token.rs","byte_start":12115,"byte_end":12187,"line_start":160,"line_end":160,"column_start":5,"column_end":77}},{"value":"/ call to `cancel` returns, all child nodes have been fully cancelled.","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\sync\\cancellation_token.rs","byte_start":12192,"byte_end":12264,"line_start":161,"line_end":161,"column_start":5,"column_end":77}}]},{"kind":"Method","id":{"krate":0,"index":95},"span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\sync\\cancellation_token.rs","byte_start":12414,"byte_end":12426,"line_start":167,"line_end":167,"column_start":12,"column_end":24},"name":"is_cancelled","qualname":"<CancellationToken>::is_cancelled","value":"pub fn is_cancelled(&Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Returns `true` if the `CancellationToken` is cancelled.\n","sig":null,"attributes":[{"value":"/ Returns `true` if the `CancellationToken` is cancelled.","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\sync\\cancellation_token.rs","byte_start":12343,"byte_end":12402,"line_start":166,"line_end":166,"column_start":5,"column_end":64}}]},{"kind":"Method","id":{"krate":0,"index":96},"span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\sync\\cancellation_token.rs","byte_start":12785,"byte_end":12794,"line_start":179,"line_end":179,"column_start":12,"column_end":21},"name":"cancelled","qualname":"<CancellationToken>::cancelled","value":"pub fn cancelled(&Self) -> WaitForCancellationFuture","parent":null,"children":[],"decl_id":null,"docs":" Returns a `Future` that gets fulfilled when cancellation is requested.","sig":null,"attributes":[{"value":"/ Returns a `Future` that gets fulfilled when cancellation is requested.","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\sync\\cancellation_token.rs","byte_start":12500,"byte_end":12574,"line_start":171,"line_end":171,"column_start":5,"column_end":79}},{"value":"/","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\sync\\cancellation_token.rs","byte_start":12579,"byte_end":12582,"line_start":172,"line_end":172,"column_start":5,"column_end":8}},{"value":"/ The future will complete immediately if the token is already cancelled","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\sync\\cancellation_token.rs","byte_start":12587,"byte_end":12661,"line_start":173,"line_end":173,"column_start":5,"column_end":79}},{"value":"/ when this method is called.","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\sync\\cancellation_token.rs","byte_start":12666,"byte_end":12697,"line_start":174,"line_end":174,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\sync\\cancellation_token.rs","byte_start":12702,"byte_end":12705,"line_start":175,"line_end":175,"column_start":5,"column_end":8}},{"value":"/ # Cancel safety","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\sync\\cancellation_token.rs","byte_start":12710,"byte_end":12729,"line_start":176,"line_end":176,"column_start":5,"column_end":24}},{"value":"/","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\sync\\cancellation_token.rs","byte_start":12734,"byte_end":12737,"line_start":177,"line_end":177,"column_start":5,"column_end":8}},{"value":"/ This method is cancel safe.","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\sync\\cancellation_token.rs","byte_start":12742,"byte_end":12773,"line_start":178,"line_end":178,"column_start":5,"column_end":36}}]},{"kind":"Method","id":{"krate":0,"index":97},"span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\sync\\cancellation_token.rs","byte_start":13138,"byte_end":13148,"line_start":190,"line_end":190,"column_start":12,"column_end":22},"name":"drop_guard","qualname":"<CancellationToken>::drop_guard","value":"pub fn drop_guard(Self) -> DropGuard","parent":null,"children":[],"decl_id":null,"docs":" Creates a `DropGuard` for this token.","sig":null,"attributes":[{"value":"/ Creates a `DropGuard` for this token.","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\sync\\cancellation_token.rs","byte_start":12975,"byte_end":13016,"line_start":186,"line_end":186,"column_start":5,"column_end":46}},{"value":"/","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\sync\\cancellation_token.rs","byte_start":13021,"byte_end":13024,"line_start":187,"line_end":187,"column_start":5,"column_end":8}},{"value":"/ Returned guard will cancel this token (and all its children) on drop","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\sync\\cancellation_token.rs","byte_start":13029,"byte_end":13101,"line_start":188,"line_end":188,"column_start":5,"column_end":77}},{"value":"/ unless disarmed.","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\sync\\cancellation_token.rs","byte_start":13106,"byte_end":13126,"line_start":189,"line_end":189,"column_start":5,"column_end":25}}]},{"kind":"Struct","id":{"krate":0,"index":1346},"span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\sync\\mpsc.rs","byte_start":29551,"byte_end":29564,"line_start":12,"line_end":12,"column_start":12,"column_end":25},"name":"PollSendError","qualname":"::sync::mpsc::PollSendError","value":"","parent":null,"children":[],"decl_id":null,"docs":" Error returned by the `PollSender` when the channel is closed.\n","sig":null,"attributes":[{"value":"/ Error returned by the `PollSender` when the channel is closed.","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\sync\\mpsc.rs","byte_start":29456,"byte_end":29522,"line_start":10,"line_end":10,"column_start":1,"column_end":67}}]},{"kind":"Method","id":{"krate":0,"index":147},"span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\sync\\mpsc.rs","byte_start":29843,"byte_end":29853,"line_start":19,"line_end":19,"column_start":12,"column_end":22},"name":"into_inner","qualname":"<PollSendError<T>>::into_inner","value":"pub fn into_inner(Self) -> Option<T>","parent":null,"children":[],"decl_id":null,"docs":" Consumes the stored value, if any.","sig":null,"attributes":[{"value":"/ Consumes the stored value, if any.","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\sync\\mpsc.rs","byte_start":29612,"byte_end":29650,"line_start":15,"line_end":15,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\sync\\mpsc.rs","byte_start":29655,"byte_end":29658,"line_start":16,"line_end":16,"column_start":5,"column_end":8}},{"value":"/ If this error was encountered when calling `start_send`/`send_item`, this will be the item","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\sync\\mpsc.rs","byte_start":29663,"byte_end":29757,"line_start":17,"line_end":17,"column_start":5,"column_end":99}},{"value":"/ that the caller attempted to send.  Otherwise, it will be `None`.","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\sync\\mpsc.rs","byte_start":29762,"byte_end":29831,"line_start":18,"line_end":18,"column_start":5,"column_end":74}}]},{"kind":"Struct","id":{"krate":0,"index":1368},"span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\sync\\mpsc.rs","byte_start":30373,"byte_end":30383,"line_start":44,"line_end":44,"column_start":12,"column_end":22},"name":"PollSender","qualname":"::sync::mpsc::PollSender","value":"PollSender {  }","parent":null,"children":[{"krate":0,"index":1370},{"krate":0,"index":1371},{"krate":0,"index":1372}],"decl_id":null,"docs":" A wrapper around [`mpsc::Sender`] that can be polled.","sig":null,"attributes":[{"value":"/ A wrapper around [`mpsc::Sender`] that can be polled.","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\sync\\mpsc.rs","byte_start":30235,"byte_end":30292,"line_start":40,"line_end":40,"column_start":1,"column_end":58}},{"value":"/","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\sync\\mpsc.rs","byte_start":30293,"byte_end":30296,"line_start":41,"line_end":41,"column_start":1,"column_end":4}},{"value":"/ [`mpsc::Sender`]: tokio::sync::mpsc::Sender","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\sync\\mpsc.rs","byte_start":30297,"byte_end":30344,"line_start":42,"line_end":42,"column_start":1,"column_end":48}}]},{"kind":"Method","id":{"krate":0,"index":160},"span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\sync\\mpsc.rs","byte_start":31287,"byte_end":31290,"line_start":69,"line_end":69,"column_start":12,"column_end":15},"name":"new","qualname":"<PollSender<T>>::new","value":"pub fn new(Sender<T>) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Creates a new `PollSender`.\n","sig":null,"attributes":[{"value":"/ Creates a new `PollSender`.","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\sync\\mpsc.rs","byte_start":31244,"byte_end":31275,"line_start":68,"line_end":68,"column_start":5,"column_end":36}}]},{"kind":"Method","id":{"krate":0,"index":162},"span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\sync\\mpsc.rs","byte_start":32274,"byte_end":32286,"line_start":94,"line_end":94,"column_start":12,"column_end":24},"name":"poll_reserve","qualname":"<PollSender<T>>::poll_reserve","value":"pub fn poll_reserve(&mut Self, &mut Context)\n-> Poll<Result<(), PollSendError<T>>>","parent":null,"children":[],"decl_id":null,"docs":" Attempts to prepare the sender to receive a value.","sig":null,"attributes":[{"value":"/ Attempts to prepare the sender to receive a value.","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\sync\\mpsc.rs","byte_start":31613,"byte_end":31667,"line_start":81,"line_end":81,"column_start":5,"column_end":59}},{"value":"/","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\sync\\mpsc.rs","byte_start":31672,"byte_end":31675,"line_start":82,"line_end":82,"column_start":5,"column_end":8}},{"value":"/ This method must be called and return `Poll::Ready(Ok(()))` prior to each call to","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\sync\\mpsc.rs","byte_start":31680,"byte_end":31765,"line_start":83,"line_end":83,"column_start":5,"column_end":90}},{"value":"/ `send_item`.","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\sync\\mpsc.rs","byte_start":31770,"byte_end":31786,"line_start":84,"line_end":84,"column_start":5,"column_end":21}},{"value":"/","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\sync\\mpsc.rs","byte_start":31791,"byte_end":31794,"line_start":85,"line_end":85,"column_start":5,"column_end":8}},{"value":"/ This method returns `Poll::Ready` once the underlying channel is ready to receive a value,","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\sync\\mpsc.rs","byte_start":31799,"byte_end":31893,"line_start":86,"line_end":86,"column_start":5,"column_end":99}},{"value":"/ by reserving a slot in the channel for the item to be sent. If this method returns","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\sync\\mpsc.rs","byte_start":31898,"byte_end":31984,"line_start":87,"line_end":87,"column_start":5,"column_end":91}},{"value":"/ `Poll::Pending`, the current task is registered to be notified (via","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\sync\\mpsc.rs","byte_start":31989,"byte_end":32060,"line_start":88,"line_end":88,"column_start":5,"column_end":76}},{"value":"/ `cx.waker().wake_by_ref()`) when `poll_reserve` should be called again.","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\sync\\mpsc.rs","byte_start":32065,"byte_end":32140,"line_start":89,"line_end":89,"column_start":5,"column_end":80}},{"value":"/","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\sync\\mpsc.rs","byte_start":32145,"byte_end":32148,"line_start":90,"line_end":90,"column_start":5,"column_end":8}},{"value":"/ # Errors","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\sync\\mpsc.rs","byte_start":32153,"byte_end":32165,"line_start":91,"line_end":91,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\sync\\mpsc.rs","byte_start":32170,"byte_end":32173,"line_start":92,"line_end":92,"column_start":5,"column_end":8}},{"value":"/ If the channel is closed, an error will be returned.  This is a permanent state.","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\sync\\mpsc.rs","byte_start":32178,"byte_end":32262,"line_start":93,"line_end":93,"column_start":5,"column_end":89}}]},{"kind":"Method","id":{"krate":0,"index":163},"span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\sync\\mpsc.rs","byte_start":34291,"byte_end":34300,"line_start":139,"line_end":139,"column_start":12,"column_end":21},"name":"send_item","qualname":"<PollSender<T>>::send_item","value":"pub fn send_item(&mut Self, T) -> Result<(), PollSendError<T>>","parent":null,"children":[],"decl_id":null,"docs":" Sends an item to the channel.","sig":null,"attributes":[{"value":"/ Sends an item to the channel.","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\sync\\mpsc.rs","byte_start":33831,"byte_end":33864,"line_start":126,"line_end":126,"column_start":5,"column_end":38}},{"value":"/","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\sync\\mpsc.rs","byte_start":33869,"byte_end":33872,"line_start":127,"line_end":127,"column_start":5,"column_end":8}},{"value":"/ Before calling `send_item`, `poll_reserve` must be called with a successful return","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\sync\\mpsc.rs","byte_start":33877,"byte_end":33963,"line_start":128,"line_end":128,"column_start":5,"column_end":91}},{"value":"/ value of `Poll::Ready(Ok(()))`.","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\sync\\mpsc.rs","byte_start":33968,"byte_end":34003,"line_start":129,"line_end":129,"column_start":5,"column_end":40}},{"value":"/","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\sync\\mpsc.rs","byte_start":34008,"byte_end":34011,"line_start":130,"line_end":130,"column_start":5,"column_end":8}},{"value":"/ # Errors","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\sync\\mpsc.rs","byte_start":34016,"byte_end":34028,"line_start":131,"line_end":131,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\sync\\mpsc.rs","byte_start":34033,"byte_end":34036,"line_start":132,"line_end":132,"column_start":5,"column_end":8}},{"value":"/ If the channel is closed, an error will be returned.  This is a permanent state.","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\sync\\mpsc.rs","byte_start":34041,"byte_end":34125,"line_start":133,"line_end":133,"column_start":5,"column_end":89}},{"value":"/","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\sync\\mpsc.rs","byte_start":34130,"byte_end":34133,"line_start":134,"line_end":134,"column_start":5,"column_end":8}},{"value":"/ # Panics","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\sync\\mpsc.rs","byte_start":34138,"byte_end":34150,"line_start":135,"line_end":135,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\sync\\mpsc.rs","byte_start":34155,"byte_end":34158,"line_start":136,"line_end":136,"column_start":5,"column_end":8}},{"value":"/ If `poll_reserve` was not successfully called prior to calling `send_item`, then this method","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\sync\\mpsc.rs","byte_start":34163,"byte_end":34259,"line_start":137,"line_end":137,"column_start":5,"column_end":101}},{"value":"/ will panic.","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\sync\\mpsc.rs","byte_start":34264,"byte_end":34279,"line_start":138,"line_end":138,"column_start":5,"column_end":20}}]},{"kind":"Method","id":{"krate":0,"index":164},"span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\sync\\mpsc.rs","byte_start":35319,"byte_end":35328,"line_start":162,"line_end":162,"column_start":12,"column_end":21},"name":"is_closed","qualname":"<PollSender<T>>::is_closed","value":"pub fn is_closed(&Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Checks whether this sender is been closed.","sig":null,"attributes":[{"value":"/ Checks whether this sender is been closed.","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\sync\\mpsc.rs","byte_start":35173,"byte_end":35219,"line_start":159,"line_end":159,"column_start":5,"column_end":51}},{"value":"/","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\sync\\mpsc.rs","byte_start":35224,"byte_end":35227,"line_start":160,"line_end":160,"column_start":5,"column_end":8}},{"value":"/ The underlying channel that this sender was wrapping may still be open.","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\sync\\mpsc.rs","byte_start":35232,"byte_end":35307,"line_start":161,"line_end":161,"column_start":5,"column_end":80}}]},{"kind":"Method","id":{"krate":0,"index":165},"span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\sync\\mpsc.rs","byte_start":35650,"byte_end":35657,"line_start":170,"line_end":170,"column_start":12,"column_end":19},"name":"get_ref","qualname":"<PollSender<T>>::get_ref","value":"pub fn get_ref(&Self) -> Option<&Sender<T>>","parent":null,"children":[],"decl_id":null,"docs":" Gets a reference to the `Sender` of the underlying channel.","sig":null,"attributes":[{"value":"/ Gets a reference to the `Sender` of the underlying channel.","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\sync\\mpsc.rs","byte_start":35426,"byte_end":35489,"line_start":166,"line_end":166,"column_start":5,"column_end":68}},{"value":"/","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\sync\\mpsc.rs","byte_start":35494,"byte_end":35497,"line_start":167,"line_end":167,"column_start":5,"column_end":8}},{"value":"/ If `PollSender` has been closed, `None` is returned. The underlying channel that this sender","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\sync\\mpsc.rs","byte_start":35502,"byte_end":35598,"line_start":168,"line_end":168,"column_start":5,"column_end":101}},{"value":"/ was wrapping may still be open.","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\sync\\mpsc.rs","byte_start":35603,"byte_end":35638,"line_start":169,"line_end":169,"column_start":5,"column_end":40}}]},{"kind":"Method","id":{"krate":0,"index":166},"span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\sync\\mpsc.rs","byte_start":36455,"byte_end":36460,"line_start":186,"line_end":186,"column_start":12,"column_end":17},"name":"close","qualname":"<PollSender<T>>::close","value":"pub fn close(&mut Self)","parent":null,"children":[],"decl_id":null,"docs":" Closes this sender.","sig":null,"attributes":[{"value":"/ Closes this sender.","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\sync\\mpsc.rs","byte_start":35729,"byte_end":35752,"line_start":174,"line_end":174,"column_start":5,"column_end":28}},{"value":"/","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\sync\\mpsc.rs","byte_start":35757,"byte_end":35760,"line_start":175,"line_end":175,"column_start":5,"column_end":8}},{"value":"/ No more messages will be able to be sent from this sender, but the underlying channel will","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\sync\\mpsc.rs","byte_start":35765,"byte_end":35859,"line_start":176,"line_end":176,"column_start":5,"column_end":99}},{"value":"/ remain open until all senders have dropped, or until the [`Receiver`] closes the channel.","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\sync\\mpsc.rs","byte_start":35864,"byte_end":35957,"line_start":177,"line_end":177,"column_start":5,"column_end":98}},{"value":"/","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\sync\\mpsc.rs","byte_start":35962,"byte_end":35965,"line_start":178,"line_end":178,"column_start":5,"column_end":8}},{"value":"/ If a slot was previously reserved by calling `poll_reserve`, then a final call can be made","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\sync\\mpsc.rs","byte_start":35970,"byte_end":36064,"line_start":179,"line_end":179,"column_start":5,"column_end":99}},{"value":"/ to `send_item` in order to consume the reserved slot.  After that, no further sends will be","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\sync\\mpsc.rs","byte_start":36069,"byte_end":36164,"line_start":180,"line_end":180,"column_start":5,"column_end":100}},{"value":"/ possible.  If you do not intend to send another item, you can release the reserved slot back","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\sync\\mpsc.rs","byte_start":36169,"byte_end":36265,"line_start":181,"line_end":181,"column_start":5,"column_end":101}},{"value":"/ to the underlying sender by calling [`abort_send`].","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\sync\\mpsc.rs","byte_start":36270,"byte_end":36325,"line_start":182,"line_end":182,"column_start":5,"column_end":60}},{"value":"/","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\sync\\mpsc.rs","byte_start":36330,"byte_end":36333,"line_start":183,"line_end":183,"column_start":5,"column_end":8}},{"value":"/ [`abort_send`]: crate::sync::PollSender::abort_send","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\sync\\mpsc.rs","byte_start":36338,"byte_end":36393,"line_start":184,"line_end":184,"column_start":5,"column_end":60}},{"value":"/ [`Receiver`]: tokio::sync::mpsc::Receiver","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\sync\\mpsc.rs","byte_start":36398,"byte_end":36443,"line_start":185,"line_end":185,"column_start":5,"column_end":50}}]},{"kind":"Method","id":{"krate":0,"index":167},"span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\sync\\mpsc.rs","byte_start":37394,"byte_end":37404,"line_start":208,"line_end":208,"column_start":12,"column_end":22},"name":"abort_send","qualname":"<PollSender<T>>::abort_send","value":"pub fn abort_send(&mut Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Aborts the current in-progress send, if any.","sig":null,"attributes":[{"value":"/ Aborts the current in-progress send, if any.","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\sync\\mpsc.rs","byte_start":37098,"byte_end":37146,"line_start":203,"line_end":203,"column_start":5,"column_end":53}},{"value":"/","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\sync\\mpsc.rs","byte_start":37151,"byte_end":37154,"line_start":204,"line_end":204,"column_start":5,"column_end":8}},{"value":"/ Returns `true` if a send was aborted.  If the sender was closed prior to calling","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\sync\\mpsc.rs","byte_start":37159,"byte_end":37243,"line_start":205,"line_end":205,"column_start":5,"column_end":89}},{"value":"/ `abort_send`, then the sender will remain in the closed state, otherwise the sender will be","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\sync\\mpsc.rs","byte_start":37248,"byte_end":37343,"line_start":206,"line_end":206,"column_start":5,"column_end":100}},{"value":"/ ready to attempt another send.","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\sync\\mpsc.rs","byte_start":37348,"byte_end":37382,"line_start":207,"line_end":207,"column_start":5,"column_end":39}}]},{"kind":"Struct","id":{"krate":0,"index":226},"span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\sync\\poll_semaphore.rs","byte_start":40622,"byte_end":40635,"line_start":13,"line_end":13,"column_start":12,"column_end":25},"name":"PollSemaphore","qualname":"::sync::poll_semaphore::PollSemaphore","value":"PollSemaphore {  }","parent":null,"children":[{"krate":0,"index":227},{"krate":0,"index":228}],"decl_id":null,"docs":" A wrapper around [`Semaphore`] that provides a `poll_acquire` method.","sig":null,"attributes":[{"value":"/ A wrapper around [`Semaphore`] that provides a `poll_acquire` method.","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\sync\\poll_semaphore.rs","byte_start":40491,"byte_end":40564,"line_start":10,"line_end":10,"column_start":1,"column_end":74}},{"value":"/","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\sync\\poll_semaphore.rs","byte_start":40565,"byte_end":40568,"line_start":11,"line_end":11,"column_start":1,"column_end":4}},{"value":"/ [`Semaphore`]: tokio::sync::Semaphore","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\sync\\poll_semaphore.rs","byte_start":40569,"byte_end":40610,"line_start":12,"line_end":12,"column_start":1,"column_end":42}}]},{"kind":"Method","id":{"krate":0,"index":230},"span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\sync\\poll_semaphore.rs","byte_start":40838,"byte_end":40841,"line_start":20,"line_end":20,"column_start":12,"column_end":15},"name":"new","qualname":"<PollSemaphore>::new","value":"pub fn new(Arc<Semaphore>) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Create a new `PollSemaphore`.\n","sig":null,"attributes":[{"value":"/ Create a new `PollSemaphore`.","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\sync\\poll_semaphore.rs","byte_start":40793,"byte_end":40826,"line_start":19,"line_end":19,"column_start":5,"column_end":38}}]},{"kind":"Method","id":{"krate":0,"index":231},"span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\sync\\poll_semaphore.rs","byte_start":41005,"byte_end":41010,"line_start":28,"line_end":28,"column_start":12,"column_end":17},"name":"close","qualname":"<PollSemaphore>::close","value":"pub fn close(&Self)","parent":null,"children":[],"decl_id":null,"docs":" Closes the semaphore.\n","sig":null,"attributes":[{"value":"/ Closes the semaphore.","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\sync\\poll_semaphore.rs","byte_start":40968,"byte_end":40993,"line_start":27,"line_end":27,"column_start":5,"column_end":30}}]},{"kind":"Method","id":{"krate":0,"index":232},"span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\sync\\poll_semaphore.rs","byte_start":41116,"byte_end":41127,"line_start":33,"line_end":33,"column_start":12,"column_end":23},"name":"clone_inner","qualname":"<PollSemaphore>::clone_inner","value":"pub fn clone_inner(&Self) -> Arc<Semaphore>","parent":null,"children":[],"decl_id":null,"docs":" Obtain a clone of the inner semaphore.\n","sig":null,"attributes":[{"value":"/ Obtain a clone of the inner semaphore.","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\sync\\poll_semaphore.rs","byte_start":41062,"byte_end":41104,"line_start":32,"line_end":32,"column_start":5,"column_end":47}}]},{"kind":"Method","id":{"krate":0,"index":233},"span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\sync\\poll_semaphore.rs","byte_start":41242,"byte_end":41252,"line_start":38,"line_end":38,"column_start":12,"column_end":22},"name":"into_inner","qualname":"<PollSemaphore>::into_inner","value":"pub fn into_inner(Self) -> Arc<Semaphore>","parent":null,"children":[],"decl_id":null,"docs":" Get back the inner semaphore.\n","sig":null,"attributes":[{"value":"/ Get back the inner semaphore.","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\sync\\poll_semaphore.rs","byte_start":41197,"byte_end":41230,"line_start":37,"line_end":37,"column_start":5,"column_end":38}}]},{"kind":"Method","id":{"krate":0,"index":234},"span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\sync\\poll_semaphore.rs","byte_start":41986,"byte_end":41998,"line_start":55,"line_end":55,"column_start":12,"column_end":24},"name":"poll_acquire","qualname":"<PollSemaphore>::poll_acquire","value":"pub fn poll_acquire(&mut Self, &mut Context)\n-> Poll<Option<OwnedSemaphorePermit>>","parent":null,"children":[],"decl_id":null,"docs":" Poll to acquire a permit from the semaphore.","sig":null,"attributes":[{"value":"/ Poll to acquire a permit from the semaphore.","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\sync\\poll_semaphore.rs","byte_start":41313,"byte_end":41361,"line_start":42,"line_end":42,"column_start":5,"column_end":53}},{"value":"/","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\sync\\poll_semaphore.rs","byte_start":41366,"byte_end":41369,"line_start":43,"line_end":43,"column_start":5,"column_end":8}},{"value":"/ This can return the following values:","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\sync\\poll_semaphore.rs","byte_start":41374,"byte_end":41415,"line_start":44,"line_end":44,"column_start":5,"column_end":46}},{"value":"/","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\sync\\poll_semaphore.rs","byte_start":41420,"byte_end":41423,"line_start":45,"line_end":45,"column_start":5,"column_end":8}},{"value":"/  - `Poll::Pending` if a permit is not currently available.","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\sync\\poll_semaphore.rs","byte_start":41428,"byte_end":41490,"line_start":46,"line_end":46,"column_start":5,"column_end":67}},{"value":"/  - `Poll::Ready(Some(permit))` if a permit was acquired.","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\sync\\poll_semaphore.rs","byte_start":41495,"byte_end":41555,"line_start":47,"line_end":47,"column_start":5,"column_end":65}},{"value":"/  - `Poll::Ready(None)` if the semaphore has been closed.","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\sync\\poll_semaphore.rs","byte_start":41560,"byte_end":41620,"line_start":48,"line_end":48,"column_start":5,"column_end":65}},{"value":"/","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\sync\\poll_semaphore.rs","byte_start":41625,"byte_end":41628,"line_start":49,"line_end":49,"column_start":5,"column_end":8}},{"value":"/ When this method returns `Poll::Pending`, the current task is scheduled","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\sync\\poll_semaphore.rs","byte_start":41633,"byte_end":41708,"line_start":50,"line_end":50,"column_start":5,"column_end":80}},{"value":"/ to receive a wakeup when a permit becomes available, or when the","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\sync\\poll_semaphore.rs","byte_start":41713,"byte_end":41781,"line_start":51,"line_end":51,"column_start":5,"column_end":73}},{"value":"/ semaphore is closed. Note that on multiple calls to `poll_acquire`, only","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\sync\\poll_semaphore.rs","byte_start":41786,"byte_end":41862,"line_start":52,"line_end":52,"column_start":5,"column_end":81}},{"value":"/ the `Waker` from the `Context` passed to the most recent call is","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\sync\\poll_semaphore.rs","byte_start":41867,"byte_end":41935,"line_start":53,"line_end":53,"column_start":5,"column_end":73}},{"value":"/ scheduled to receive a wakeup.","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\sync\\poll_semaphore.rs","byte_start":41940,"byte_end":41974,"line_start":54,"line_end":54,"column_start":5,"column_end":39}}]},{"kind":"Method","id":{"krate":0,"index":235},"span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\sync\\poll_semaphore.rs","byte_start":43426,"byte_end":43443,"line_start":92,"line_end":92,"column_start":12,"column_end":29},"name":"available_permits","qualname":"<PollSemaphore>::available_permits","value":"pub fn available_permits(&Self) -> usize","parent":null,"children":[],"decl_id":null,"docs":" Returns the current number of available permits.","sig":null,"attributes":[{"value":"/ Returns the current number of available permits.","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\sync\\poll_semaphore.rs","byte_start":43142,"byte_end":43194,"line_start":86,"line_end":86,"column_start":5,"column_end":57}},{"value":"/","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\sync\\poll_semaphore.rs","byte_start":43199,"byte_end":43202,"line_start":87,"line_end":87,"column_start":5,"column_end":8}},{"value":"/ This is equivalent to the [`Semaphore::available_permits`] method on the","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\sync\\poll_semaphore.rs","byte_start":43207,"byte_end":43283,"line_start":88,"line_end":88,"column_start":5,"column_end":81}},{"value":"/ `tokio::sync::Semaphore` type.","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\sync\\poll_semaphore.rs","byte_start":43288,"byte_end":43322,"line_start":89,"line_end":89,"column_start":5,"column_end":39}},{"value":"/","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\sync\\poll_semaphore.rs","byte_start":43327,"byte_end":43330,"line_start":90,"line_end":90,"column_start":5,"column_end":8}},{"value":"/ [`Semaphore::available_permits`]: tokio::sync::Semaphore::available_permits","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\sync\\poll_semaphore.rs","byte_start":43335,"byte_end":43414,"line_start":91,"line_end":91,"column_start":5,"column_end":84}}]},{"kind":"Method","id":{"krate":0,"index":236},"span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\sync\\poll_semaphore.rs","byte_start":43903,"byte_end":43914,"line_start":105,"line_end":105,"column_start":12,"column_end":23},"name":"add_permits","qualname":"<PollSemaphore>::add_permits","value":"pub fn add_permits(&Self, usize)","parent":null,"children":[],"decl_id":null,"docs":" Adds `n` new permits to the semaphore.","sig":null,"attributes":[{"value":"/ Adds `n` new permits to the semaphore.","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\sync\\poll_semaphore.rs","byte_start":43516,"byte_end":43558,"line_start":96,"line_end":96,"column_start":5,"column_end":47}},{"value":"/","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\sync\\poll_semaphore.rs","byte_start":43563,"byte_end":43566,"line_start":97,"line_end":97,"column_start":5,"column_end":8}},{"value":"/ The maximum number of permits is `usize::MAX >> 3`, and this function","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\sync\\poll_semaphore.rs","byte_start":43571,"byte_end":43644,"line_start":98,"line_end":98,"column_start":5,"column_end":78}},{"value":"/ will panic if the limit is exceeded.","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\sync\\poll_semaphore.rs","byte_start":43649,"byte_end":43689,"line_start":99,"line_end":99,"column_start":5,"column_end":45}},{"value":"/","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\sync\\poll_semaphore.rs","byte_start":43694,"byte_end":43697,"line_start":100,"line_end":100,"column_start":5,"column_end":8}},{"value":"/ This is equivalent to the [`Semaphore::add_permits`] method on the","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\sync\\poll_semaphore.rs","byte_start":43702,"byte_end":43772,"line_start":101,"line_end":101,"column_start":5,"column_end":75}},{"value":"/ `tokio::sync::Semaphore` type.","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\sync\\poll_semaphore.rs","byte_start":43777,"byte_end":43811,"line_start":102,"line_end":102,"column_start":5,"column_end":39}},{"value":"/","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\sync\\poll_semaphore.rs","byte_start":43816,"byte_end":43819,"line_start":103,"line_end":103,"column_start":5,"column_end":8}},{"value":"/ [`Semaphore::add_permits`]: tokio::sync::Semaphore::add_permits","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\sync\\poll_semaphore.rs","byte_start":43824,"byte_end":43891,"line_start":104,"line_end":104,"column_start":5,"column_end":72}}]},{"kind":"Struct","id":{"krate":0,"index":282},"span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\sync\\reusable_box.rs","byte_start":45068,"byte_end":45085,"line_start":14,"line_end":14,"column_start":12,"column_end":29},"name":"ReusableBoxFuture","qualname":"::sync::reusable_box::ReusableBoxFuture","value":"ReusableBoxFuture {  }","parent":null,"children":[{"krate":0,"index":285}],"decl_id":null,"docs":" A reusable `Pin<Box<dyn Future<Output = T> + Send + 'a>>`.","sig":null,"attributes":[{"value":"/ A reusable `Pin<Box<dyn Future<Output = T> + Send + 'a>>`.","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\sync\\reusable_box.rs","byte_start":44863,"byte_end":44925,"line_start":10,"line_end":10,"column_start":1,"column_end":63}},{"value":"/","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\sync\\reusable_box.rs","byte_start":44926,"byte_end":44929,"line_start":11,"line_end":11,"column_start":1,"column_end":4}},{"value":"/ This type lets you replace the future stored in the box without","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\sync\\reusable_box.rs","byte_start":44930,"byte_end":44997,"line_start":12,"line_end":12,"column_start":1,"column_end":68}},{"value":"/ reallocating when the size and alignment permits this.","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\sync\\reusable_box.rs","byte_start":44998,"byte_end":45056,"line_start":13,"line_end":13,"column_start":1,"column_end":59}}]},{"kind":"Method","id":{"krate":0,"index":289},"span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\sync\\reusable_box.rs","byte_start":45281,"byte_end":45284,"line_start":20,"line_end":20,"column_start":12,"column_end":15},"name":"new","qualname":"<ReusableBoxFuture>::new","value":"pub fn new<F>(F) -> Self where F: Future<Output = T> + Send + 'a","parent":null,"children":[],"decl_id":null,"docs":" Create a new `ReusableBoxFuture<T>` containing the provided future.\n","sig":null,"attributes":[{"value":"/ Create a new `ReusableBoxFuture<T>` containing the provided future.","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\sync\\reusable_box.rs","byte_start":45198,"byte_end":45269,"line_start":19,"line_end":19,"column_start":5,"column_end":76}}]},{"kind":"Method","id":{"krate":0,"index":291},"span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\sync\\reusable_box.rs","byte_start":45654,"byte_end":45657,"line_start":33,"line_end":33,"column_start":12,"column_end":15},"name":"set","qualname":"<ReusableBoxFuture>::set","value":"pub fn set<F>(&mut Self, F) where F: Future<Output = T> + Send + 'a","parent":null,"children":[],"decl_id":null,"docs":" Replace the future currently stored in this box.","sig":null,"attributes":[{"value":"/ Replace the future currently stored in this box.","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\sync\\reusable_box.rs","byte_start":45439,"byte_end":45491,"line_start":29,"line_end":29,"column_start":5,"column_end":57}},{"value":"/","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\sync\\reusable_box.rs","byte_start":45496,"byte_end":45499,"line_start":30,"line_end":30,"column_start":5,"column_end":8}},{"value":"/ This reallocates if and only if the layout of the provided future is","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\sync\\reusable_box.rs","byte_start":45504,"byte_end":45576,"line_start":31,"line_end":31,"column_start":5,"column_end":77}},{"value":"/ different from the layout of the currently stored future.","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\sync\\reusable_box.rs","byte_start":45581,"byte_end":45642,"line_start":32,"line_end":32,"column_start":5,"column_end":66}}]},{"kind":"Method","id":{"krate":0,"index":293},"span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\sync\\reusable_box.rs","byte_start":46095,"byte_end":46102,"line_start":47,"line_end":47,"column_start":12,"column_end":19},"name":"try_set","qualname":"<ReusableBoxFuture>::try_set","value":"pub fn try_set<F>(&mut Self, F) -> Result<(), F> where F: Future<Output = T> +\nSend + 'a","parent":null,"children":[],"decl_id":null,"docs":" Replace the future currently stored in this box.","sig":null,"attributes":[{"value":"/ Replace the future currently stored in this box.","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\sync\\reusable_box.rs","byte_start":45854,"byte_end":45906,"line_start":42,"line_end":42,"column_start":5,"column_end":57}},{"value":"/","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\sync\\reusable_box.rs","byte_start":45911,"byte_end":45914,"line_start":43,"line_end":43,"column_start":5,"column_end":8}},{"value":"/ This function never reallocates, but returns an error if the provided","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\sync\\reusable_box.rs","byte_start":45919,"byte_end":45992,"line_start":44,"line_end":44,"column_start":5,"column_end":78}},{"value":"/ future has a different size or alignment from the currently stored","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\sync\\reusable_box.rs","byte_start":45997,"byte_end":46067,"line_start":45,"line_end":45,"column_start":5,"column_end":75}},{"value":"/ future.","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\sync\\reusable_box.rs","byte_start":46072,"byte_end":46083,"line_start":46,"line_end":46,"column_start":5,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":299},"span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\sync\\reusable_box.rs","byte_start":47169,"byte_end":47176,"line_start":72,"line_end":72,"column_start":12,"column_end":19},"name":"get_pin","qualname":"<ReusableBoxFuture>::get_pin","value":"pub fn get_pin(&mut Self) -> Pin<&mut dyn Future<Output = T> + Send>","parent":null,"children":[],"decl_id":null,"docs":" Get a pinned reference to the underlying future.\n","sig":null,"attributes":[{"value":"/ Get a pinned reference to the underlying future.","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\sync\\reusable_box.rs","byte_start":47105,"byte_end":47157,"line_start":71,"line_end":71,"column_start":5,"column_end":57}}]},{"kind":"Method","id":{"krate":0,"index":300},"span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\sync\\reusable_box.rs","byte_start":47329,"byte_end":47333,"line_start":77,"line_end":77,"column_start":12,"column_end":16},"name":"poll","qualname":"<ReusableBoxFuture>::poll","value":"pub fn poll(&mut Self, &mut Context) -> Poll<T>","parent":null,"children":[],"decl_id":null,"docs":" Poll the future stored inside this box.\n","sig":null,"attributes":[{"value":"/ Poll the future stored inside this box.","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\sync\\reusable_box.rs","byte_start":47274,"byte_end":47317,"line_start":76,"line_end":76,"column_start":5,"column_end":48}}]},{"kind":"Mod","id":{"krate":0,"index":340},"span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\either.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"either","qualname":"::either","value":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\either.rs","parent":null,"children":[{"krate":0,"index":341},{"krate":0,"index":342},{"krate":0,"index":345},{"krate":0,"index":348},{"krate":0,"index":351},{"krate":0,"index":352},{"krate":0,"index":355},{"krate":0,"index":358},{"krate":0,"index":359},{"krate":0,"index":362},{"krate":0,"index":365},{"krate":0,"index":368},{"krate":0,"index":371},{"krate":0,"index":374},{"krate":0,"index":1376},{"krate":0,"index":1385},{"krate":0,"index":1389},{"krate":0,"index":377},{"krate":0,"index":378},{"krate":0,"index":384},{"krate":0,"index":388},{"krate":0,"index":393},{"krate":0,"index":398},{"krate":0,"index":404}],"decl_id":null,"docs":" Module defining an Either type.\n","sig":null,"attributes":[{"value":"/ Module defining an Either type.","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\either.rs","byte_start":50184,"byte_end":50219,"line_start":1,"line_end":1,"column_start":1,"column_end":36}}]},{"kind":"TupleVariant","id":{"krate":0,"index":1379},"span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\either.rs","byte_start":52166,"byte_end":52170,"line_start":65,"line_end":65,"column_start":5,"column_end":9},"name":"Left","qualname":"::either::Either::Left","value":"Either::Left(L)","parent":{"krate":0,"index":1376},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":1382},"span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\either.rs","byte_start":52179,"byte_end":52184,"line_start":66,"line_end":66,"column_start":5,"column_end":10},"name":"Right","qualname":"::either::Either::Right","value":"Either::Right(R)","parent":{"krate":0,"index":1376},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Enum","id":{"krate":0,"index":1376},"span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\either.rs","byte_start":52147,"byte_end":52153,"line_start":64,"line_end":64,"column_start":10,"column_end":16},"name":"Either","qualname":"::either::Either","value":"pub enum Either<L, R> { Left(L), Right(R), }","parent":null,"children":[{"krate":0,"index":1379},{"krate":0,"index":1382}],"decl_id":null,"docs":" Combines two different futures, streams, or sinks having the same associated types into a single type.","sig":null,"attributes":[{"value":"/ Combines two different futures, streams, or sinks having the same associated types into a single type.","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\either.rs","byte_start":50396,"byte_end":50502,"line_start":10,"line_end":10,"column_start":1,"column_end":107}},{"value":"/","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\either.rs","byte_start":50503,"byte_end":50506,"line_start":11,"line_end":11,"column_start":1,"column_end":4}},{"value":"/ This type implements common asynchronous traits such as [`Future`] and those in Tokio.","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\either.rs","byte_start":50507,"byte_end":50597,"line_start":12,"line_end":12,"column_start":1,"column_end":91}},{"value":"/","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\either.rs","byte_start":50598,"byte_end":50601,"line_start":13,"line_end":13,"column_start":1,"column_end":4}},{"value":"/ [`Future`]: std::future::Future","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\either.rs","byte_start":50602,"byte_end":50637,"line_start":14,"line_end":14,"column_start":1,"column_end":36}},{"value":"/","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\either.rs","byte_start":50638,"byte_end":50641,"line_start":15,"line_end":15,"column_start":1,"column_end":4}},{"value":"/ # Example","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\either.rs","byte_start":50642,"byte_end":50655,"line_start":16,"line_end":16,"column_start":1,"column_end":14}},{"value":"/","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\either.rs","byte_start":50656,"byte_end":50659,"line_start":17,"line_end":17,"column_start":1,"column_end":4}},{"value":"/ The following code will not work:","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\either.rs","byte_start":50660,"byte_end":50697,"line_start":18,"line_end":18,"column_start":1,"column_end":38}},{"value":"/","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\either.rs","byte_start":50698,"byte_end":50701,"line_start":19,"line_end":19,"column_start":1,"column_end":4}},{"value":"/ ```compile_fail","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\either.rs","byte_start":50702,"byte_end":50721,"line_start":20,"line_end":20,"column_start":1,"column_end":20}},{"value":"/ # fn some_condition() -> bool { true }","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\either.rs","byte_start":50722,"byte_end":50764,"line_start":21,"line_end":21,"column_start":1,"column_end":43}},{"value":"/ # async fn some_async_function() -> u32 { 10 }","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\either.rs","byte_start":50765,"byte_end":50815,"line_start":22,"line_end":22,"column_start":1,"column_end":51}},{"value":"/ # async fn other_async_function() -> u32 { 20 }","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\either.rs","byte_start":50816,"byte_end":50867,"line_start":23,"line_end":23,"column_start":1,"column_end":52}},{"value":"/ #[tokio::main]","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\either.rs","byte_start":50868,"byte_end":50886,"line_start":24,"line_end":24,"column_start":1,"column_end":19}},{"value":"/ async fn main() {","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\either.rs","byte_start":50887,"byte_end":50908,"line_start":25,"line_end":25,"column_start":1,"column_end":22}},{"value":"/     let result = if some_condition() {","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\either.rs","byte_start":50909,"byte_end":50951,"line_start":26,"line_end":26,"column_start":1,"column_end":43}},{"value":"/         some_async_function()","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\either.rs","byte_start":50952,"byte_end":50985,"line_start":27,"line_end":27,"column_start":1,"column_end":34}},{"value":"/     } else {","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\either.rs","byte_start":50986,"byte_end":51002,"line_start":28,"line_end":28,"column_start":1,"column_end":17}},{"value":"/         other_async_function() // <- Will print: \"`if` and `else` have incompatible types\"","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\either.rs","byte_start":51003,"byte_end":51097,"line_start":29,"line_end":29,"column_start":1,"column_end":95}},{"value":"/     };","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\either.rs","byte_start":51098,"byte_end":51108,"line_start":30,"line_end":30,"column_start":1,"column_end":11}},{"value":"/","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\either.rs","byte_start":51109,"byte_end":51112,"line_start":31,"line_end":31,"column_start":1,"column_end":4}},{"value":"/     println!(\"Result is {}\", result.await);","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\either.rs","byte_start":51113,"byte_end":51160,"line_start":32,"line_end":32,"column_start":1,"column_end":48}},{"value":"/ }","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\either.rs","byte_start":51161,"byte_end":51166,"line_start":33,"line_end":33,"column_start":1,"column_end":6}},{"value":"/ ```","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\either.rs","byte_start":51167,"byte_end":51174,"line_start":34,"line_end":34,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\either.rs","byte_start":51175,"byte_end":51178,"line_start":35,"line_end":35,"column_start":1,"column_end":4}},{"value":"/","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\either.rs","byte_start":51379,"byte_end":51382,"line_start":39,"line_end":39,"column_start":1,"column_end":4}},{"value":"/ When the output type is the same, we can wrap each future in `Either` to avoid the","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\either.rs","byte_start":51383,"byte_end":51469,"line_start":40,"line_end":40,"column_start":1,"column_end":87}},{"value":"/ issue:","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\either.rs","byte_start":51470,"byte_end":51480,"line_start":41,"line_end":41,"column_start":1,"column_end":11}},{"value":"/","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\either.rs","byte_start":51481,"byte_end":51484,"line_start":42,"line_end":42,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\either.rs","byte_start":51485,"byte_end":51492,"line_start":43,"line_end":43,"column_start":1,"column_end":8}},{"value":"/ use tokio_util::either::Either;","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\either.rs","byte_start":51493,"byte_end":51528,"line_start":44,"line_end":44,"column_start":1,"column_end":36}},{"value":"/ # fn some_condition() -> bool { true }","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\either.rs","byte_start":51529,"byte_end":51571,"line_start":45,"line_end":45,"column_start":1,"column_end":43}},{"value":"/ # async fn some_async_function() -> u32 { 10 }","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\either.rs","byte_start":51572,"byte_end":51622,"line_start":46,"line_end":46,"column_start":1,"column_end":51}},{"value":"/ # async fn other_async_function() -> u32 { 20 }","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\either.rs","byte_start":51623,"byte_end":51674,"line_start":47,"line_end":47,"column_start":1,"column_end":52}},{"value":"/","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\either.rs","byte_start":51675,"byte_end":51678,"line_start":48,"line_end":48,"column_start":1,"column_end":4}},{"value":"/ #[tokio::main]","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\either.rs","byte_start":51679,"byte_end":51697,"line_start":49,"line_end":49,"column_start":1,"column_end":19}},{"value":"/ async fn main() {","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\either.rs","byte_start":51698,"byte_end":51719,"line_start":50,"line_end":50,"column_start":1,"column_end":22}},{"value":"/     let result = if some_condition() {","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\either.rs","byte_start":51720,"byte_end":51762,"line_start":51,"line_end":51,"column_start":1,"column_end":43}},{"value":"/         Either::Left(some_async_function())","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\either.rs","byte_start":51763,"byte_end":51810,"line_start":52,"line_end":52,"column_start":1,"column_end":48}},{"value":"/     } else {","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\either.rs","byte_start":51811,"byte_end":51827,"line_start":53,"line_end":53,"column_start":1,"column_end":17}},{"value":"/         Either::Right(other_async_function())","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\either.rs","byte_start":51828,"byte_end":51877,"line_start":54,"line_end":54,"column_start":1,"column_end":50}},{"value":"/     };","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\either.rs","byte_start":51878,"byte_end":51888,"line_start":55,"line_end":55,"column_start":1,"column_end":11}},{"value":"/","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\either.rs","byte_start":51889,"byte_end":51892,"line_start":56,"line_end":56,"column_start":1,"column_end":4}},{"value":"/     let value = result.await;","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\either.rs","byte_start":51893,"byte_end":51926,"line_start":57,"line_end":57,"column_start":1,"column_end":34}},{"value":"/     println!(\"Result is {}\", value);","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\either.rs","byte_start":51927,"byte_end":51967,"line_start":58,"line_end":58,"column_start":1,"column_end":41}},{"value":"/     # assert_eq!(value, 10);","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\either.rs","byte_start":51968,"byte_end":52000,"line_start":59,"line_end":59,"column_start":1,"column_end":33}},{"value":"/ }","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\either.rs","byte_start":52001,"byte_end":52006,"line_start":60,"line_end":60,"column_start":1,"column_end":6}},{"value":"/ ```","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\either.rs","byte_start":52007,"byte_end":52014,"line_start":61,"line_end":61,"column_start":1,"column_end":8}},{"value":"allow(missing_docs)","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\either.rs","byte_start":52015,"byte_end":52037,"line_start":62,"line_end":62,"column_start":1,"column_end":23}}]}],"impls":[{"id":0,"kind":"Inherent","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\bytes_codec.rs","byte_start":17227814,"byte_end":17227824,"line_start":47,"line_end":47,"column_start":6,"column_end":16},"value":"","parent":null,"children":[{"krate":0,"index":480}],"docs":"","sig":null,"attributes":[]},{"id":1,"kind":"Direct","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\bytes_codec.rs","byte_start":17227975,"byte_end":17227985,"line_start":54,"line_end":54,"column_start":18,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":482},{"krate":0,"index":483},{"krate":0,"index":484}],"docs":"","sig":null,"attributes":[]},{"id":2,"kind":"Direct","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\bytes_codec.rs","byte_start":17228312,"byte_end":17228322,"line_start":68,"line_end":68,"column_start":25,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":486},{"krate":0,"index":487}],"docs":"","sig":null,"attributes":[]},{"id":3,"kind":"Direct","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\bytes_codec.rs","byte_start":17228546,"byte_end":17228556,"line_start":78,"line_end":78,"column_start":28,"column_end":38},"value":"","parent":null,"children":[{"krate":0,"index":489},{"krate":0,"index":490}],"docs":"","sig":null,"attributes":[]},{"id":4,"kind":"Direct","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\framed_impl.rs","byte_start":17238793,"byte_end":17238802,"line_start":48,"line_end":48,"column_start":18,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":592}],"docs":"","sig":null,"attributes":[]},{"id":5,"kind":"Direct","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\framed_impl.rs","byte_start":17239034,"byte_end":17239044,"line_start":59,"line_end":59,"column_start":18,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":594}],"docs":"","sig":null,"attributes":[]},{"id":6,"kind":"Direct","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\framed_impl.rs","byte_start":17239195,"byte_end":17239204,"line_start":67,"line_end":67,"column_start":25,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":596}],"docs":"","sig":null,"attributes":[]},{"id":7,"kind":"Direct","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\framed_impl.rs","byte_start":17239559,"byte_end":17239569,"line_start":83,"line_end":83,"column_start":25,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":598}],"docs":"","sig":null,"attributes":[]},{"id":8,"kind":"Direct","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\framed_impl.rs","byte_start":17239815,"byte_end":17239823,"line_start":94,"line_end":94,"column_start":28,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":600}],"docs":"","sig":null,"attributes":[]},{"id":9,"kind":"Direct","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\framed_impl.rs","byte_start":17239920,"byte_end":17239928,"line_start":99,"line_end":99,"column_start":31,"column_end":39},"value":"","parent":null,"children":[{"krate":0,"index":602}],"docs":"","sig":null,"attributes":[]},{"id":10,"kind":"Direct","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\framed_impl.rs","byte_start":17240039,"byte_end":17240047,"line_start":104,"line_end":104,"column_start":29,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":604}],"docs":"","sig":null,"attributes":[]},{"id":11,"kind":"Direct","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\framed_impl.rs","byte_start":17240147,"byte_end":17240155,"line_start":109,"line_end":109,"column_start":32,"column_end":40},"value":"","parent":null,"children":[{"krate":0,"index":606}],"docs":"","sig":null,"attributes":[]},{"id":12,"kind":"Direct","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\framed_impl.rs","byte_start":17240265,"byte_end":17240275,"line_start":114,"line_end":114,"column_start":26,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":611},{"krate":0,"index":612}],"docs":"","sig":null,"attributes":[]},{"id":13,"kind":"Direct","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\framed_impl.rs","byte_start":17248562,"byte_end":17248572,"line_start":249,"line_end":249,"column_start":30,"column_end":40},"value":"","parent":null,"children":[{"krate":0,"index":624},{"krate":0,"index":625},{"krate":0,"index":626},{"krate":0,"index":627},{"krate":0,"index":631}],"docs":"","sig":null,"attributes":[]},{"id":14,"kind":"Inherent","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\framed.rs","byte_start":17251407,"byte_end":17251413,"line_start":33,"line_end":33,"column_start":12,"column_end":18},"value":"","parent":null,"children":[{"krate":0,"index":703},{"krate":0,"index":704}],"docs":"","sig":null,"attributes":[]},{"id":15,"kind":"Inherent","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\framed.rs","byte_start":17255269,"byte_end":17255275,"line_start":118,"line_end":118,"column_start":12,"column_end":18},"value":"","parent":null,"children":[{"krate":0,"index":708},{"krate":0,"index":709},{"krate":0,"index":710},{"krate":0,"index":711},{"krate":0,"index":712},{"krate":0,"index":713},{"krate":0,"index":714},{"krate":0,"index":717},{"krate":0,"index":718},{"krate":0,"index":719},{"krate":0,"index":720},{"krate":0,"index":721},{"krate":0,"index":722},{"krate":0,"index":723}],"docs":"","sig":null,"attributes":[]},{"id":16,"kind":"Direct","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\framed.rs","byte_start":17261666,"byte_end":17261672,"line_start":283,"line_end":283,"column_start":23,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":727},{"krate":0,"index":728}],"docs":"","sig":null,"attributes":[]},{"id":17,"kind":"Direct","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\framed.rs","byte_start":17261988,"byte_end":17261994,"line_start":296,"line_end":296,"column_start":27,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":733},{"krate":0,"index":734},{"krate":0,"index":735},{"krate":0,"index":736},{"krate":0,"index":737}],"docs":"","sig":null,"attributes":[]},{"id":18,"kind":"Direct","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\framed.rs","byte_start":17262709,"byte_end":17262715,"line_start":321,"line_end":321,"column_start":27,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":741}],"docs":"","sig":null,"attributes":[]},{"id":19,"kind":"Inherent","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\framed.rs","byte_start":17263755,"byte_end":17263766,"line_start":359,"line_end":359,"column_start":12,"column_end":23},"value":"","parent":null,"children":[{"krate":0,"index":745}],"docs":"","sig":null,"attributes":[]},{"id":20,"kind":"Inherent","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\framed_read.rs","byte_start":17264693,"byte_end":17264703,"line_start":27,"line_end":27,"column_start":12,"column_end":22},"value":"","parent":null,"children":[{"krate":0,"index":796},{"krate":0,"index":797}],"docs":"","sig":null,"attributes":[]},{"id":21,"kind":"Inherent","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\framed_read.rs","byte_start":17265632,"byte_end":17265642,"line_start":61,"line_end":61,"column_start":12,"column_end":22},"value":"","parent":null,"children":[{"krate":0,"index":801},{"krate":0,"index":802},{"krate":0,"index":803},{"krate":0,"index":804},{"krate":0,"index":805},{"krate":0,"index":806},{"krate":0,"index":807},{"krate":0,"index":810},{"krate":0,"index":811},{"krate":0,"index":812}],"docs":"","sig":null,"attributes":[]},{"id":22,"kind":"Direct","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\framed_read.rs","byte_start":17268472,"byte_end":17268482,"line_start":149,"line_end":149,"column_start":23,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":816},{"krate":0,"index":817}],"docs":"","sig":null,"attributes":[]},{"id":23,"kind":"Direct","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\framed_read.rs","byte_start":17268795,"byte_end":17268805,"line_start":162,"line_end":162,"column_start":27,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":822},{"krate":0,"index":823},{"krate":0,"index":824},{"krate":0,"index":825},{"krate":0,"index":826}],"docs":"","sig":null,"attributes":[]},{"id":24,"kind":"Direct","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\framed_read.rs","byte_start":17269531,"byte_end":17269541,"line_start":185,"line_end":185,"column_start":27,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":830}],"docs":"","sig":null,"attributes":[]},{"id":25,"kind":"Inherent","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\framed_write.rs","byte_start":17270520,"byte_end":17270531,"line_start":25,"line_end":25,"column_start":12,"column_end":23},"value":"","parent":null,"children":[{"krate":0,"index":879}],"docs":"","sig":null,"attributes":[]},{"id":26,"kind":"Inherent","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\framed_write.rs","byte_start":17270887,"byte_end":17270898,"line_start":41,"line_end":41,"column_start":12,"column_end":23},"value":"","parent":null,"children":[{"krate":0,"index":883},{"krate":0,"index":884},{"krate":0,"index":885},{"krate":0,"index":886},{"krate":0,"index":887},{"krate":0,"index":888},{"krate":0,"index":889},{"krate":0,"index":892},{"krate":0,"index":893},{"krate":0,"index":894}],"docs":"","sig":null,"attributes":[]},{"id":27,"kind":"Direct","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\framed_write.rs","byte_start":17273743,"byte_end":17273754,"line_start":129,"line_end":129,"column_start":27,"column_end":38},"value":"","parent":null,"children":[{"krate":0,"index":899},{"krate":0,"index":900},{"krate":0,"index":901},{"krate":0,"index":902},{"krate":0,"index":903}],"docs":"","sig":null,"attributes":[]},{"id":28,"kind":"Direct","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\framed_write.rs","byte_start":17274518,"byte_end":17274529,"line_start":155,"line_end":155,"column_start":23,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":907},{"krate":0,"index":908}],"docs":"","sig":null,"attributes":[]},{"id":29,"kind":"Direct","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\framed_write.rs","byte_start":17274770,"byte_end":17274781,"line_start":166,"line_end":166,"column_start":27,"column_end":38},"value":"","parent":null,"children":[{"krate":0,"index":912}],"docs":"","sig":null,"attributes":[]},{"id":30,"kind":"Inherent","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\length_delimited.rs","byte_start":17289825,"byte_end":17289845,"line_start":441,"line_end":441,"column_start":6,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":976},{"krate":0,"index":977},{"krate":0,"index":978},{"krate":0,"index":979},{"krate":0,"index":980},{"krate":0,"index":981}],"docs":"","sig":null,"attributes":[]},{"id":31,"kind":"Direct","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\length_delimited.rs","byte_start":17293179,"byte_end":17293199,"line_start":549,"line_end":549,"column_start":18,"column_end":38},"value":"","parent":null,"children":[{"krate":0,"index":983},{"krate":0,"index":984},{"krate":0,"index":985}],"docs":"","sig":null,"attributes":[]},{"id":32,"kind":"Direct","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\length_delimited.rs","byte_start":17294085,"byte_end":17294105,"line_start":580,"line_end":580,"column_start":25,"column_end":45},"value":"","parent":null,"children":[{"krate":0,"index":987},{"krate":0,"index":988}],"docs":"","sig":null,"attributes":[]},{"id":33,"kind":"Direct","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\length_delimited.rs","byte_start":17295446,"byte_end":17295466,"line_start":624,"line_end":624,"column_start":18,"column_end":38},"value":"","parent":null,"children":[{"krate":0,"index":991}],"docs":"","sig":null,"attributes":[]},{"id":39,"kind":"Inherent","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\length_delimited.rs","byte_start":17296028,"byte_end":17296035,"line_start":650,"line_end":650,"column_start":6,"column_end":13},"value":"","parent":null,"children":[{"krate":0,"index":1000},{"krate":0,"index":1001},{"krate":0,"index":1002},{"krate":0,"index":1003},{"krate":0,"index":1004},{"krate":0,"index":1005},{"krate":0,"index":1007},{"krate":0,"index":1008},{"krate":0,"index":1009},{"krate":0,"index":1010},{"krate":0,"index":1011},{"krate":0,"index":1012},{"krate":0,"index":1014},{"krate":0,"index":1016},{"krate":0,"index":1018},{"krate":0,"index":1019}],"docs":"","sig":null,"attributes":[]},{"id":40,"kind":"Direct","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\length_delimited.rs","byte_start":17306810,"byte_end":17306817,"line_start":1027,"line_end":1027,"column_start":18,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":1021}],"docs":"","sig":null,"attributes":[]},{"id":41,"kind":"Direct","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\length_delimited.rs","byte_start":17306943,"byte_end":17306968,"line_start":1035,"line_end":1035,"column_start":21,"column_end":46},"value":"","parent":null,"children":[{"krate":0,"index":1023}],"docs":"","sig":null,"attributes":[]},{"id":42,"kind":"Direct","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\length_delimited.rs","byte_start":17307126,"byte_end":17307151,"line_start":1041,"line_end":1041,"column_start":23,"column_end":48},"value":"","parent":null,"children":[{"krate":0,"index":1025}],"docs":"","sig":null,"attributes":[]},{"id":43,"kind":"Direct","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\length_delimited.rs","byte_start":17307286,"byte_end":17307311,"line_start":1047,"line_end":1047,"column_start":19,"column_end":44},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":44,"kind":"Inherent","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\lines_codec.rs","byte_start":17308380,"byte_end":17308390,"line_start":30,"line_end":30,"column_start":6,"column_end":16},"value":"","parent":null,"children":[{"krate":0,"index":1068},{"krate":0,"index":1069},{"krate":0,"index":1070}],"docs":"","sig":null,"attributes":[]},{"id":45,"kind":"Direct","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\lines_codec.rs","byte_start":17310932,"byte_end":17310942,"line_start":106,"line_end":106,"column_start":18,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":1075},{"krate":0,"index":1076},{"krate":0,"index":1077},{"krate":0,"index":1079}],"docs":"","sig":null,"attributes":[]},{"id":46,"kind":"Direct","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\lines_codec.rs","byte_start":17314318,"byte_end":17314328,"line_start":185,"line_end":185,"column_start":24,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":1082},{"krate":0,"index":1083}],"docs":"","sig":null,"attributes":[]},{"id":47,"kind":"Direct","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\lines_codec.rs","byte_start":17314651,"byte_end":17314661,"line_start":200,"line_end":200,"column_start":18,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":1085}],"docs":"","sig":null,"attributes":[]},{"id":48,"kind":"Direct","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\lines_codec.rs","byte_start":17314968,"byte_end":17314983,"line_start":215,"line_end":215,"column_start":23,"column_end":38},"value":"","parent":null,"children":[{"krate":0,"index":1087}],"docs":"","sig":null,"attributes":[]},{"id":49,"kind":"Direct","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\lines_codec.rs","byte_start":17315265,"byte_end":17315280,"line_start":224,"line_end":224,"column_start":26,"column_end":41},"value":"","parent":null,"children":[{"krate":0,"index":1089}],"docs":"","sig":null,"attributes":[]},{"id":50,"kind":"Direct","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\lines_codec.rs","byte_start":17315397,"byte_end":17315412,"line_start":230,"line_end":230,"column_start":28,"column_end":43},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":51,"kind":"Inherent","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\any_delimiter_codec.rs","byte_start":17317738,"byte_end":17317755,"line_start":65,"line_end":65,"column_start":6,"column_end":23},"value":"","parent":null,"children":[{"krate":0,"index":1137},{"krate":0,"index":1138},{"krate":0,"index":1139}],"docs":"","sig":null,"attributes":[]},{"id":52,"kind":"Direct","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\any_delimiter_codec.rs","byte_start":17320404,"byte_end":17320421,"line_start":134,"line_end":134,"column_start":18,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":1141},{"krate":0,"index":1142},{"krate":0,"index":1143},{"krate":0,"index":1146}],"docs":"","sig":null,"attributes":[]},{"id":53,"kind":"Direct","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\any_delimiter_codec.rs","byte_start":17323713,"byte_end":17323730,"line_start":212,"line_end":212,"column_start":24,"column_end":41},"value":"","parent":null,"children":[{"krate":0,"index":1149},{"krate":0,"index":1150}],"docs":"","sig":null,"attributes":[]},{"id":54,"kind":"Direct","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\any_delimiter_codec.rs","byte_start":17324094,"byte_end":17324111,"line_start":228,"line_end":228,"column_start":18,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":1152}],"docs":"","sig":null,"attributes":[]},{"id":55,"kind":"Direct","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\any_delimiter_codec.rs","byte_start":17324529,"byte_end":17324551,"line_start":246,"line_end":246,"column_start":23,"column_end":45},"value":"","parent":null,"children":[{"krate":0,"index":1154}],"docs":"","sig":null,"attributes":[]},{"id":56,"kind":"Direct","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\any_delimiter_codec.rs","byte_start":17324880,"byte_end":17324902,"line_start":257,"line_end":257,"column_start":26,"column_end":48},"value":"","parent":null,"children":[{"krate":0,"index":1156}],"docs":"","sig":null,"attributes":[]},{"id":57,"kind":"Direct","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\any_delimiter_codec.rs","byte_start":17325033,"byte_end":17325055,"line_start":263,"line_end":263,"column_start":28,"column_end":50},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":58,"kind":"Inherent","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\sync\\cancellation_token\\guard.rs","byte_start":14545,"byte_end":14554,"line_start":10,"line_end":10,"column_start":6,"column_end":15},"value":"","parent":null,"children":[{"krate":0,"index":21}],"docs":"","sig":null,"attributes":[]},{"id":59,"kind":"Direct","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\sync\\cancellation_token\\guard.rs","byte_start":14914,"byte_end":14923,"line_start":21,"line_end":21,"column_start":15,"column_end":24},"value":"","parent":null,"children":[{"krate":0,"index":23}],"docs":"","sig":null,"attributes":[]},{"id":60,"kind":"Inherent","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\sync\\cancellation_token\\tree_node.rs","byte_start":17373,"byte_end":17381,"line_start":50,"line_end":50,"column_start":6,"column_end":14},"value":"","parent":null,"children":[{"krate":0,"index":39},{"krate":0,"index":40}],"docs":"","sig":null,"attributes":[]},{"id":61,"kind":"Direct","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\sync\\cancellation_token.rs","byte_start":9355,"byte_end":9372,"line_start":71,"line_end":71,"column_start":27,"column_end":44},"value":"","parent":null,"children":[{"krate":0,"index":84}],"docs":"","sig":null,"attributes":[]},{"id":62,"kind":"Direct","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\sync\\cancellation_token.rs","byte_start":9597,"byte_end":9614,"line_start":79,"line_end":79,"column_start":16,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":86}],"docs":"","sig":null,"attributes":[]},{"id":63,"kind":"Direct","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\sync\\cancellation_token.rs","byte_start":9805,"byte_end":9822,"line_start":88,"line_end":88,"column_start":15,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":88}],"docs":"","sig":null,"attributes":[]},{"id":64,"kind":"Direct","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\sync\\cancellation_token.rs","byte_start":9934,"byte_end":9951,"line_start":94,"line_end":94,"column_start":18,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":90}],"docs":"","sig":null,"attributes":[]},{"id":65,"kind":"Inherent","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\sync\\cancellation_token.rs","byte_start":10041,"byte_end":10058,"line_start":100,"line_end":100,"column_start":6,"column_end":23},"value":"","parent":null,"children":[{"krate":0,"index":92},{"krate":0,"index":93},{"krate":0,"index":94},{"krate":0,"index":95},{"krate":0,"index":96},{"krate":0,"index":97}],"docs":"","sig":null,"attributes":[]},{"id":66,"kind":"Direct","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\sync\\cancellation_token.rs","byte_start":13296,"byte_end":13321,"line_start":197,"line_end":197,"column_start":31,"column_end":56},"value":"","parent":null,"children":[{"krate":0,"index":100}],"docs":"","sig":null,"attributes":[]},{"id":67,"kind":"Direct","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\sync\\cancellation_token.rs","byte_start":13493,"byte_end":13518,"line_start":203,"line_end":203,"column_start":21,"column_end":46},"value":"","parent":null,"children":[{"krate":0,"index":103},{"krate":0,"index":104}],"docs":"","sig":null,"attributes":[]},{"id":68,"kind":"Inherent","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\sync\\mpsc.rs","byte_start":29589,"byte_end":29602,"line_start":14,"line_end":14,"column_start":9,"column_end":22},"value":"","parent":null,"children":[{"krate":0,"index":147}],"docs":"","sig":null,"attributes":[]},{"id":69,"kind":"Direct","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\sync\\mpsc.rs","byte_start":29924,"byte_end":29937,"line_start":24,"line_end":24,"column_start":26,"column_end":39},"value":"","parent":null,"children":[{"krate":0,"index":150}],"docs":"","sig":null,"attributes":[]},{"id":70,"kind":"Direct","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\sync\\mpsc.rs","byte_start":30097,"byte_end":30110,"line_start":30,"line_end":30,"column_start":43,"column_end":56},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":71,"kind":"Inherent","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\sync\\mpsc.rs","byte_start":31224,"byte_end":31234,"line_start":67,"line_end":67,"column_start":25,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":160},{"krate":0,"index":161},{"krate":0,"index":162},{"krate":0,"index":163},{"krate":0,"index":164},{"krate":0,"index":165},{"krate":0,"index":166},{"krate":0,"index":167}],"docs":"","sig":null,"attributes":[]},{"id":72,"kind":"Direct","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\sync\\mpsc.rs","byte_start":38875,"byte_end":38885,"line_start":244,"line_end":244,"column_start":19,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":170}],"docs":"","sig":null,"attributes":[]},{"id":73,"kind":"Direct","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\sync\\mpsc.rs","byte_start":39615,"byte_end":39625,"line_start":264,"line_end":264,"column_start":37,"column_end":47},"value":"","parent":null,"children":[{"krate":0,"index":174},{"krate":0,"index":175},{"krate":0,"index":176},{"krate":0,"index":177},{"krate":0,"index":178}],"docs":"","sig":null,"attributes":[]},{"id":74,"kind":"Inherent","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\sync\\poll_semaphore.rs","byte_start":40773,"byte_end":40786,"line_start":18,"line_end":18,"column_start":6,"column_end":19},"value":"","parent":null,"children":[{"krate":0,"index":230},{"krate":0,"index":231},{"krate":0,"index":232},{"krate":0,"index":233},{"krate":0,"index":234},{"krate":0,"index":235},{"krate":0,"index":236}],"docs":"","sig":null,"attributes":[]},{"id":75,"kind":"Direct","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\sync\\poll_semaphore.rs","byte_start":43998,"byte_end":44011,"line_start":110,"line_end":110,"column_start":17,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":238},{"krate":0,"index":239}],"docs":"","sig":null,"attributes":[]},{"id":76,"kind":"Direct","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\sync\\poll_semaphore.rs","byte_start":44225,"byte_end":44238,"line_start":118,"line_end":118,"column_start":16,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":241}],"docs":"","sig":null,"attributes":[]},{"id":77,"kind":"Direct","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\sync\\poll_semaphore.rs","byte_start":44356,"byte_end":44369,"line_start":124,"line_end":124,"column_start":21,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":243}],"docs":"","sig":null,"attributes":[]},{"id":78,"kind":"Direct","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\sync\\poll_semaphore.rs","byte_start":44581,"byte_end":44594,"line_start":132,"line_end":132,"column_start":27,"column_end":40},"value":"","parent":null,"children":[{"krate":0,"index":245}],"docs":"","sig":null,"attributes":[]},{"id":79,"kind":"Inherent","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\sync\\reusable_box.rs","byte_start":45167,"byte_end":45184,"line_start":18,"line_end":18,"column_start":13,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":289},{"krate":0,"index":291},{"krate":0,"index":293},{"krate":0,"index":299},{"krate":0,"index":300}],"docs":"","sig":null,"attributes":[]},{"id":80,"kind":"Direct","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\sync\\reusable_box.rs","byte_start":47440,"byte_end":47457,"line_start":82,"line_end":82,"column_start":20,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":303},{"krate":0,"index":304}],"docs":"","sig":null,"attributes":[]},{"id":81,"kind":"Direct","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\sync\\reusable_box.rs","byte_start":47874,"byte_end":47891,"line_start":94,"line_end":94,"column_start":25,"column_end":42},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":82,"kind":"Direct","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\sync\\reusable_box.rs","byte_start":47926,"byte_end":47943,"line_start":96,"line_end":96,"column_start":24,"column_end":41},"value":"","parent":null,"children":[{"krate":0,"index":309}],"docs":"","sig":null,"attributes":[]},{"id":83,"kind":"Inherent","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\sync\\reusable_box.rs","byte_start":49331,"byte_end":49341,"line_start":141,"line_end":141,"column_start":27,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":323},{"krate":0,"index":324}],"docs":"","sig":null,"attributes":[]},{"id":84,"kind":"Direct","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\sync\\reusable_box.rs","byte_start":49629,"byte_end":49639,"line_start":153,"line_end":153,"column_start":36,"column_end":46},"value":"","parent":null,"children":[{"krate":0,"index":328}],"docs":"","sig":null,"attributes":[]},{"id":85,"kind":"Direct","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\sync\\reusable_box.rs","byte_start":50037,"byte_end":50044,"line_start":165,"line_end":165,"column_start":20,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":335},{"krate":0,"index":336}],"docs":"","sig":null,"attributes":[]},{"id":86,"kind":"Direct","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\either.rs","byte_start":52790,"byte_end":52796,"line_start":83,"line_end":83,"column_start":26,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":382},{"krate":0,"index":383}],"docs":"","sig":null,"attributes":[]},{"id":87,"kind":"Direct","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\either.rs","byte_start":53039,"byte_end":53045,"line_start":95,"line_end":95,"column_start":26,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":387}],"docs":"","sig":null,"attributes":[]},{"id":88,"kind":"Direct","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\either.rs","byte_start":53318,"byte_end":53324,"line_start":109,"line_end":109,"column_start":29,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":391},{"krate":0,"index":392}],"docs":"","sig":null,"attributes":[]},{"id":89,"kind":"Direct","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\either.rs","byte_start":53652,"byte_end":53658,"line_start":123,"line_end":123,"column_start":26,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":396},{"krate":0,"index":397}],"docs":"","sig":null,"attributes":[]},{"id":90,"kind":"Direct","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\either.rs","byte_start":54012,"byte_end":54018,"line_start":137,"line_end":137,"column_start":27,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":401},{"krate":0,"index":402},{"krate":0,"index":403}],"docs":"","sig":null,"attributes":[]},{"id":91,"kind":"Direct","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\either.rs","byte_start":54570,"byte_end":54576,"line_start":155,"line_end":155,"column_start":45,"column_end":51},"value":"","parent":null,"children":[{"krate":0,"index":407},{"krate":0,"index":408}],"docs":"","sig":null,"attributes":[]}],"refs":[{"kind":"Mod","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\lib.rs","byte_start":647,"byte_end":652,"line_start":28,"line_end":28,"column_start":13,"column_end":18},"ref_id":{"krate":0,"index":458}},{"kind":"Mod","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\mod.rs","byte_start":17226226,"byte_end":17226242,"line_start":283,"line_end":283,"column_start":9,"column_end":25},"ref_id":{"krate":0,"index":916}},{"kind":"Mod","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\lib.rs","byte_start":864,"byte_end":868,"line_start":53,"line_end":53,"column_start":9,"column_end":13},"ref_id":{"krate":0,"index":14}},{"kind":"Mod","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\lib.rs","byte_start":879,"byte_end":885,"line_start":55,"line_end":55,"column_start":9,"column_end":15},"ref_id":{"krate":0,"index":340}}],"macro_refs":[],"relations":[{"span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\bytes_codec.rs","byte_start":17227814,"byte_end":17227824,"line_start":47,"line_end":47,"column_start":6,"column_end":16},"kind":{"Impl":{"id":0}},"from":{"krate":0,"index":1165},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\bytes_codec.rs","byte_start":17227975,"byte_end":17227985,"line_start":54,"line_end":54,"column_start":18,"column_end":28},"kind":{"Impl":{"id":1}},"from":{"krate":0,"index":1165},"to":{"krate":0,"index":511}},{"span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\bytes_codec.rs","byte_start":17228312,"byte_end":17228322,"line_start":68,"line_end":68,"column_start":25,"column_end":35},"kind":{"Impl":{"id":2}},"from":{"krate":0,"index":1165},"to":{"krate":0,"index":528}},{"span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\bytes_codec.rs","byte_start":17228546,"byte_end":17228556,"line_start":78,"line_end":78,"column_start":28,"column_end":38},"kind":{"Impl":{"id":3}},"from":{"krate":0,"index":1165},"to":{"krate":0,"index":528}},{"span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\framed_impl.rs","byte_start":17238793,"byte_end":17238802,"line_start":48,"line_end":48,"column_start":18,"column_end":27},"kind":{"Impl":{"id":4}},"from":{"krate":0,"index":1189},"to":{"krate":2,"index":3035}},{"span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\framed_impl.rs","byte_start":17239034,"byte_end":17239044,"line_start":59,"line_end":59,"column_start":18,"column_end":28},"kind":{"Impl":{"id":5}},"from":{"krate":0,"index":589},"to":{"krate":2,"index":3035}},{"span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\framed_impl.rs","byte_start":17239195,"byte_end":17239204,"line_start":67,"line_end":67,"column_start":25,"column_end":34},"kind":{"Impl":{"id":6}},"from":{"krate":0,"index":1189},"to":{"krate":2,"index":2963}},{"span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\framed_impl.rs","byte_start":17239559,"byte_end":17239569,"line_start":83,"line_end":83,"column_start":25,"column_end":35},"kind":{"Impl":{"id":7}},"from":{"krate":0,"index":589},"to":{"krate":2,"index":2963}},{"span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\framed_impl.rs","byte_start":17239815,"byte_end":17239823,"line_start":94,"line_end":94,"column_start":28,"column_end":36},"kind":{"Impl":{"id":8}},"from":{"krate":0,"index":1196},"to":{"krate":2,"index":2654}},{"span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\framed_impl.rs","byte_start":17239920,"byte_end":17239928,"line_start":99,"line_end":99,"column_start":31,"column_end":39},"kind":{"Impl":{"id":9}},"from":{"krate":0,"index":1196},"to":{"krate":2,"index":2657}},{"span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\framed_impl.rs","byte_start":17240039,"byte_end":17240047,"line_start":104,"line_end":104,"column_start":29,"column_end":37},"kind":{"Impl":{"id":10}},"from":{"krate":0,"index":1196},"to":{"krate":2,"index":2654}},{"span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\framed_impl.rs","byte_start":17240147,"byte_end":17240155,"line_start":109,"line_end":109,"column_start":32,"column_end":40},"kind":{"Impl":{"id":11}},"from":{"krate":0,"index":1196},"to":{"krate":2,"index":2657}},{"span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\framed_impl.rs","byte_start":17240265,"byte_end":17240275,"line_start":114,"line_end":114,"column_start":26,"column_end":36},"kind":{"Impl":{"id":12}},"from":{"krate":0,"index":1804},"to":{"krate":35,"index":96}},{"span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\framed_impl.rs","byte_start":17248562,"byte_end":17248572,"line_start":249,"line_end":249,"column_start":30,"column_end":40},"kind":{"Impl":{"id":13}},"from":{"krate":0,"index":1804},"to":{"krate":17,"index":17}},{"span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\framed.rs","byte_start":17251407,"byte_end":17251413,"line_start":33,"line_end":33,"column_start":12,"column_end":18},"kind":{"Impl":{"id":14}},"from":{"krate":0,"index":1475},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\framed.rs","byte_start":17255269,"byte_end":17255275,"line_start":118,"line_end":118,"column_start":12,"column_end":18},"kind":{"Impl":{"id":15}},"from":{"krate":0,"index":1475},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\framed.rs","byte_start":17261666,"byte_end":17261672,"line_start":283,"line_end":283,"column_start":23,"column_end":29},"kind":{"Impl":{"id":16}},"from":{"krate":0,"index":1475},"to":{"krate":35,"index":96}},{"span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\framed.rs","byte_start":17261988,"byte_end":17261994,"line_start":296,"line_end":296,"column_start":27,"column_end":33},"kind":{"Impl":{"id":17}},"from":{"krate":0,"index":1475},"to":{"krate":17,"index":17}},{"span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\framed.rs","byte_start":17262709,"byte_end":17262715,"line_start":321,"line_end":321,"column_start":27,"column_end":33},"kind":{"Impl":{"id":18}},"from":{"krate":0,"index":1475},"to":{"krate":2,"index":9685}},{"span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\framed.rs","byte_start":17263755,"byte_end":17263766,"line_start":359,"line_end":359,"column_start":12,"column_end":23},"kind":{"Impl":{"id":19}},"from":{"krate":0,"index":1201},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\framed_read.rs","byte_start":17264693,"byte_end":17264703,"line_start":27,"line_end":27,"column_start":12,"column_end":22},"kind":{"Impl":{"id":20}},"from":{"krate":0,"index":1434},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\framed_read.rs","byte_start":17265632,"byte_end":17265642,"line_start":61,"line_end":61,"column_start":12,"column_end":22},"kind":{"Impl":{"id":21}},"from":{"krate":0,"index":1434},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\framed_read.rs","byte_start":17268472,"byte_end":17268482,"line_start":149,"line_end":149,"column_start":23,"column_end":33},"kind":{"Impl":{"id":22}},"from":{"krate":0,"index":1434},"to":{"krate":35,"index":96}},{"span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\framed_read.rs","byte_start":17268795,"byte_end":17268805,"line_start":162,"line_end":162,"column_start":27,"column_end":37},"kind":{"Impl":{"id":23}},"from":{"krate":0,"index":1434},"to":{"krate":17,"index":17}},{"span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\framed_read.rs","byte_start":17269531,"byte_end":17269541,"line_start":185,"line_end":185,"column_start":27,"column_end":37},"kind":{"Impl":{"id":24}},"from":{"krate":0,"index":1434},"to":{"krate":2,"index":9685}},{"span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\framed_write.rs","byte_start":17270520,"byte_end":17270531,"line_start":25,"line_end":25,"column_start":12,"column_end":23},"kind":{"Impl":{"id":25}},"from":{"krate":0,"index":1393},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\framed_write.rs","byte_start":17270887,"byte_end":17270898,"line_start":41,"line_end":41,"column_start":12,"column_end":23},"kind":{"Impl":{"id":26}},"from":{"krate":0,"index":1393},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\framed_write.rs","byte_start":17273743,"byte_end":17273754,"line_start":129,"line_end":129,"column_start":27,"column_end":38},"kind":{"Impl":{"id":27}},"from":{"krate":0,"index":1393},"to":{"krate":17,"index":17}},{"span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\framed_write.rs","byte_start":17274518,"byte_end":17274529,"line_start":155,"line_end":155,"column_start":23,"column_end":34},"kind":{"Impl":{"id":28}},"from":{"krate":0,"index":1393},"to":{"krate":35,"index":96}},{"span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\framed_write.rs","byte_start":17274770,"byte_end":17274781,"line_start":166,"line_end":166,"column_start":27,"column_end":38},"kind":{"Impl":{"id":29}},"from":{"krate":0,"index":1393},"to":{"krate":2,"index":9685}},{"span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\length_delimited.rs","byte_start":17289825,"byte_end":17289845,"line_start":441,"line_end":441,"column_start":6,"column_end":26},"kind":{"Impl":{"id":30}},"from":{"krate":0,"index":1225},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\length_delimited.rs","byte_start":17293179,"byte_end":17293199,"line_start":549,"line_end":549,"column_start":18,"column_end":38},"kind":{"Impl":{"id":31}},"from":{"krate":0,"index":1225},"to":{"krate":0,"index":511}},{"span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\length_delimited.rs","byte_start":17294085,"byte_end":17294105,"line_start":580,"line_end":580,"column_start":25,"column_end":45},"kind":{"Impl":{"id":32}},"from":{"krate":0,"index":1225},"to":{"krate":0,"index":528}},{"span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\length_delimited.rs","byte_start":17295446,"byte_end":17295466,"line_start":624,"line_end":624,"column_start":18,"column_end":38},"kind":{"Impl":{"id":33}},"from":{"krate":0,"index":1225},"to":{"krate":2,"index":3035}},{"span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\length_delimited.rs","byte_start":17296028,"byte_end":17296035,"line_start":650,"line_end":650,"column_start":6,"column_end":13},"kind":{"Impl":{"id":39}},"from":{"krate":0,"index":1213},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\length_delimited.rs","byte_start":17306810,"byte_end":17306817,"line_start":1027,"line_end":1027,"column_start":18,"column_end":25},"kind":{"Impl":{"id":40}},"from":{"krate":0,"index":1213},"to":{"krate":2,"index":3035}},{"span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\length_delimited.rs","byte_start":17306943,"byte_end":17306968,"line_start":1035,"line_end":1035,"column_start":21,"column_end":46},"kind":{"Impl":{"id":41}},"from":{"krate":0,"index":973},"to":{"krate":2,"index":9685}},{"span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\length_delimited.rs","byte_start":17307126,"byte_end":17307151,"line_start":1041,"line_end":1041,"column_start":23,"column_end":48},"kind":{"Impl":{"id":42}},"from":{"krate":0,"index":973},"to":{"krate":2,"index":9692}},{"span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\length_delimited.rs","byte_start":17307286,"byte_end":17307311,"line_start":1047,"line_end":1047,"column_start":19,"column_end":44},"kind":{"Impl":{"id":43}},"from":{"krate":0,"index":973},"to":{"krate":1,"index":2546}},{"span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\lines_codec.rs","byte_start":17308380,"byte_end":17308390,"line_start":30,"line_end":30,"column_start":6,"column_end":16},"kind":{"Impl":{"id":44}},"from":{"krate":0,"index":1243},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\lines_codec.rs","byte_start":17310932,"byte_end":17310942,"line_start":106,"line_end":106,"column_start":18,"column_end":28},"kind":{"Impl":{"id":45}},"from":{"krate":0,"index":1243},"to":{"krate":0,"index":511}},{"span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\lines_codec.rs","byte_start":17314318,"byte_end":17314328,"line_start":185,"line_end":185,"column_start":24,"column_end":34},"kind":{"Impl":{"id":46}},"from":{"krate":0,"index":1243},"to":{"krate":0,"index":528}},{"span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\lines_codec.rs","byte_start":17314651,"byte_end":17314661,"line_start":200,"line_end":200,"column_start":18,"column_end":28},"kind":{"Impl":{"id":47}},"from":{"krate":0,"index":1243},"to":{"krate":2,"index":3035}},{"span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\lines_codec.rs","byte_start":17314968,"byte_end":17314983,"line_start":215,"line_end":215,"column_start":23,"column_end":38},"kind":{"Impl":{"id":48}},"from":{"krate":0,"index":1265},"to":{"krate":2,"index":9692}},{"span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\lines_codec.rs","byte_start":17315265,"byte_end":17315280,"line_start":224,"line_end":224,"column_start":26,"column_end":41},"kind":{"Impl":{"id":49}},"from":{"krate":0,"index":1265},"to":{"krate":2,"index":2963}},{"span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\lines_codec.rs","byte_start":17315397,"byte_end":17315412,"line_start":230,"line_end":230,"column_start":28,"column_end":43},"kind":{"Impl":{"id":50}},"from":{"krate":0,"index":1265},"to":{"krate":1,"index":2546}},{"span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\any_delimiter_codec.rs","byte_start":17317738,"byte_end":17317755,"line_start":65,"line_end":65,"column_start":6,"column_end":23},"kind":{"Impl":{"id":51}},"from":{"krate":0,"index":1273},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\any_delimiter_codec.rs","byte_start":17320404,"byte_end":17320421,"line_start":134,"line_end":134,"column_start":18,"column_end":35},"kind":{"Impl":{"id":52}},"from":{"krate":0,"index":1273},"to":{"krate":0,"index":511}},{"span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\any_delimiter_codec.rs","byte_start":17323713,"byte_end":17323730,"line_start":212,"line_end":212,"column_start":24,"column_end":41},"kind":{"Impl":{"id":53}},"from":{"krate":0,"index":1273},"to":{"krate":0,"index":528}},{"span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\any_delimiter_codec.rs","byte_start":17324094,"byte_end":17324111,"line_start":228,"line_end":228,"column_start":18,"column_end":35},"kind":{"Impl":{"id":54}},"from":{"krate":0,"index":1273},"to":{"krate":2,"index":3035}},{"span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\any_delimiter_codec.rs","byte_start":17324529,"byte_end":17324551,"line_start":246,"line_end":246,"column_start":23,"column_end":45},"kind":{"Impl":{"id":55}},"from":{"krate":0,"index":1297},"to":{"krate":2,"index":9692}},{"span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\any_delimiter_codec.rs","byte_start":17324880,"byte_end":17324902,"line_start":257,"line_end":257,"column_start":26,"column_end":48},"kind":{"Impl":{"id":56}},"from":{"krate":0,"index":1297},"to":{"krate":2,"index":2963}},{"span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\any_delimiter_codec.rs","byte_start":17325033,"byte_end":17325055,"line_start":263,"line_end":263,"column_start":28,"column_end":50},"kind":{"Impl":{"id":57}},"from":{"krate":0,"index":1297},"to":{"krate":1,"index":2546}},{"span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\sync\\cancellation_token\\guard.rs","byte_start":14545,"byte_end":14554,"line_start":10,"line_end":10,"column_start":6,"column_end":15},"kind":{"Impl":{"id":58}},"from":{"krate":0,"index":1305},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\sync\\cancellation_token\\guard.rs","byte_start":14914,"byte_end":14923,"line_start":21,"line_end":21,"column_start":15,"column_end":24},"kind":{"Impl":{"id":59}},"from":{"krate":0,"index":1305},"to":{"krate":2,"index":3300}},{"span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\sync\\cancellation_token\\tree_node.rs","byte_start":17373,"byte_end":17381,"line_start":50,"line_end":50,"column_start":6,"column_end":14},"kind":{"Impl":{"id":60}},"from":{"krate":0,"index":35},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\sync\\cancellation_token.rs","byte_start":9355,"byte_end":9372,"line_start":71,"line_end":71,"column_start":27,"column_end":44},"kind":{"Impl":{"id":61}},"from":{"krate":0,"index":81},"to":{"krate":2,"index":9685}},{"span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\sync\\cancellation_token.rs","byte_start":9597,"byte_end":9614,"line_start":79,"line_end":79,"column_start":16,"column_end":33},"kind":{"Impl":{"id":62}},"from":{"krate":0,"index":81},"to":{"krate":2,"index":2679}},{"span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\sync\\cancellation_token.rs","byte_start":9805,"byte_end":9822,"line_start":88,"line_end":88,"column_start":15,"column_end":32},"kind":{"Impl":{"id":63}},"from":{"krate":0,"index":81},"to":{"krate":2,"index":3300}},{"span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\sync\\cancellation_token.rs","byte_start":9934,"byte_end":9951,"line_start":94,"line_end":94,"column_start":18,"column_end":35},"kind":{"Impl":{"id":64}},"from":{"krate":0,"index":81},"to":{"krate":2,"index":3035}},{"span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\sync\\cancellation_token.rs","byte_start":10041,"byte_end":10058,"line_start":100,"line_end":100,"column_start":6,"column_end":23},"kind":{"Impl":{"id":65}},"from":{"krate":0,"index":81},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\sync\\cancellation_token.rs","byte_start":13296,"byte_end":13321,"line_start":197,"line_end":197,"column_start":31,"column_end":56},"kind":{"Impl":{"id":66}},"from":{"krate":0,"index":1309},"to":{"krate":2,"index":9685}},{"span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\sync\\cancellation_token.rs","byte_start":13493,"byte_end":13518,"line_start":203,"line_end":203,"column_start":21,"column_end":46},"kind":{"Impl":{"id":67}},"from":{"krate":0,"index":1309},"to":{"krate":2,"index":13098}},{"span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\sync\\mpsc.rs","byte_start":29589,"byte_end":29602,"line_start":14,"line_end":14,"column_start":9,"column_end":22},"kind":{"Impl":{"id":68}},"from":{"krate":0,"index":1346},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\sync\\mpsc.rs","byte_start":29924,"byte_end":29937,"line_start":24,"line_end":24,"column_start":26,"column_end":39},"kind":{"Impl":{"id":69}},"from":{"krate":0,"index":1346},"to":{"krate":2,"index":9692}},{"span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\sync\\mpsc.rs","byte_start":30097,"byte_end":30110,"line_start":30,"line_end":30,"column_start":43,"column_end":56},"kind":{"Impl":{"id":70}},"from":{"krate":0,"index":1346},"to":{"krate":1,"index":2546}},{"span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\sync\\mpsc.rs","byte_start":31224,"byte_end":31234,"line_start":67,"line_end":67,"column_start":25,"column_end":35},"kind":{"Impl":{"id":71}},"from":{"krate":0,"index":1368},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\sync\\mpsc.rs","byte_start":38875,"byte_end":38885,"line_start":244,"line_end":244,"column_start":19,"column_end":29},"kind":{"Impl":{"id":72}},"from":{"krate":0,"index":1368},"to":{"krate":2,"index":2679}},{"span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\sync\\mpsc.rs","byte_start":39615,"byte_end":39625,"line_start":264,"line_end":264,"column_start":37,"column_end":47},"kind":{"Impl":{"id":73}},"from":{"krate":0,"index":1368},"to":{"krate":17,"index":17}},{"span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\sync\\poll_semaphore.rs","byte_start":40773,"byte_end":40786,"line_start":18,"line_end":18,"column_start":6,"column_end":19},"kind":{"Impl":{"id":74}},"from":{"krate":0,"index":226},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\sync\\poll_semaphore.rs","byte_start":43998,"byte_end":44011,"line_start":110,"line_end":110,"column_start":17,"column_end":30},"kind":{"Impl":{"id":75}},"from":{"krate":0,"index":226},"to":{"krate":35,"index":96}},{"span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\sync\\poll_semaphore.rs","byte_start":44225,"byte_end":44238,"line_start":118,"line_end":118,"column_start":16,"column_end":29},"kind":{"Impl":{"id":76}},"from":{"krate":0,"index":226},"to":{"krate":2,"index":2679}},{"span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\sync\\poll_semaphore.rs","byte_start":44356,"byte_end":44369,"line_start":124,"line_end":124,"column_start":21,"column_end":34},"kind":{"Impl":{"id":77}},"from":{"krate":0,"index":226},"to":{"krate":2,"index":9685}},{"span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\sync\\poll_semaphore.rs","byte_start":44581,"byte_end":44594,"line_start":132,"line_end":132,"column_start":27,"column_end":40},"kind":{"Impl":{"id":78}},"from":{"krate":0,"index":226},"to":{"krate":2,"index":2954}},{"span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\sync\\reusable_box.rs","byte_start":45167,"byte_end":45184,"line_start":18,"line_end":18,"column_start":13,"column_end":30},"kind":{"Impl":{"id":79}},"from":{"krate":0,"index":282},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\sync\\reusable_box.rs","byte_start":47440,"byte_end":47457,"line_start":82,"line_end":82,"column_start":20,"column_end":37},"kind":{"Impl":{"id":80}},"from":{"krate":0,"index":282},"to":{"krate":2,"index":13098}},{"span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\sync\\reusable_box.rs","byte_start":47874,"byte_end":47891,"line_start":94,"line_end":94,"column_start":25,"column_end":42},"kind":{"Impl":{"id":81}},"from":{"krate":0,"index":282},"to":{"krate":2,"index":3069}},{"span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\sync\\reusable_box.rs","byte_start":47926,"byte_end":47943,"line_start":96,"line_end":96,"column_start":24,"column_end":41},"kind":{"Impl":{"id":82}},"from":{"krate":0,"index":282},"to":{"krate":2,"index":9685}},{"span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\sync\\reusable_box.rs","byte_start":49331,"byte_end":49341,"line_start":141,"line_end":141,"column_start":27,"column_end":37},"kind":{"Impl":{"id":83}},"from":{"krate":0,"index":316},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\sync\\reusable_box.rs","byte_start":49629,"byte_end":49639,"line_start":153,"line_end":153,"column_start":36,"column_end":46},"kind":{"Impl":{"id":84}},"from":{"krate":0,"index":316},"to":{"krate":2,"index":3300}},{"span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\sync\\reusable_box.rs","byte_start":50037,"byte_end":50044,"line_start":165,"line_end":165,"column_start":20,"column_end":27},"kind":{"Impl":{"id":85}},"from":{"krate":0,"index":329},"to":{"krate":2,"index":13098}},{"span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\either.rs","byte_start":52790,"byte_end":52796,"line_start":83,"line_end":83,"column_start":26,"column_end":32},"kind":{"Impl":{"id":86}},"from":{"krate":0,"index":1376},"to":{"krate":2,"index":13098}},{"span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\either.rs","byte_start":53039,"byte_end":53045,"line_start":95,"line_end":95,"column_start":26,"column_end":32},"kind":{"Impl":{"id":87}},"from":{"krate":0,"index":1376},"to":{"krate":18,"index":231}},{"span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\either.rs","byte_start":53318,"byte_end":53324,"line_start":109,"line_end":109,"column_start":29,"column_end":35},"kind":{"Impl":{"id":88}},"from":{"krate":0,"index":1376},"to":{"krate":18,"index":189}},{"span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\either.rs","byte_start":53652,"byte_end":53658,"line_start":123,"line_end":123,"column_start":26,"column_end":32},"kind":{"Impl":{"id":89}},"from":{"krate":0,"index":1376},"to":{"krate":18,"index":270}},{"span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\either.rs","byte_start":54012,"byte_end":54018,"line_start":137,"line_end":137,"column_start":27,"column_end":33},"kind":{"Impl":{"id":90}},"from":{"krate":0,"index":1376},"to":{"krate":18,"index":310}},{"span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\either.rs","byte_start":54570,"byte_end":54576,"line_start":155,"line_end":155,"column_start":45,"column_end":51},"kind":{"Impl":{"id":91}},"from":{"krate":0,"index":1376},"to":{"krate":35,"index":96}}]}