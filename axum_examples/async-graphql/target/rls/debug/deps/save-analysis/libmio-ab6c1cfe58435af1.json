{"config":{"output_file":null,"full_docs":false,"pub_only":true,"reachable_only":true,"distro_crate":false,"signatures":false,"borrow_data":false},"version":"0.19.1","compilation":{"directory":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.8.4","program":"C:\\Users\\admin\\.rustup\\toolchains\\stable-x86_64-pc-windows-msvc\\bin\\rls.exe","arguments":["--crate-name","mio","--edition=2018","C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.8.4\\src\\lib.rs","--json=diagnostic-rendered-ansi,artifacts,future-incompat","--crate-type","lib","--emit=dep-info,metadata","-C","embed-bitcode=no","-C","debuginfo=2","--cfg","feature=\"default\"","--cfg","feature=\"net\"","--cfg","feature=\"os-ext\"","--cfg","feature=\"os-poll\"","-C","metadata=ab6c1cfe58435af1","-C","extra-filename=-ab6c1cfe58435af1","--out-dir","f:\\sea-orm-demo\\axum_examples\\async-graphql\\target\\rls\\debug\\deps","-L","dependency=f:\\sea-orm-demo\\axum_examples\\async-graphql\\target\\rls\\debug\\deps","--extern","log=f:\\sea-orm-demo\\axum_examples\\async-graphql\\target\\rls\\debug\\deps\\liblog-0b1bc219257e849b.rmeta","--extern","windows_sys=f:\\sea-orm-demo\\axum_examples\\async-graphql\\target\\rls\\debug\\deps\\libwindows_sys-ffaefcaf96fe301b.rmeta","--cap-lints","allow","-L","native=C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\windows_x86_64_msvc-0.36.1\\lib","--error-format=json","--sysroot","C:\\Users\\admin\\.rustup/toolchains/stable-x86_64-pc-windows-msvc"],"output":"f:\\sea-orm-demo\\axum_examples\\async-graphql\\target\\rls\\debug\\deps\\libmio-ab6c1cfe58435af1.rmeta"},"prelude":{"crate_id":{"name":"mio","disambiguator":[14144391104112046288,0]},"crate_root":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.8.4\\src","external_crates":[{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.8.4\\src\\lib.rs","num":1,"id":{"name":"std","disambiguator":[13015713666403456114,0]}},{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.8.4\\src\\lib.rs","num":2,"id":{"name":"core","disambiguator":[1507510987272037120,0]}},{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.8.4\\src\\lib.rs","num":3,"id":{"name":"compiler_builtins","disambiguator":[3803325750332457499,0]}},{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.8.4\\src\\lib.rs","num":4,"id":{"name":"rustc_std_workspace_core","disambiguator":[4223354511651166533,0]}},{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.8.4\\src\\lib.rs","num":5,"id":{"name":"alloc","disambiguator":[15700094508901508366,0]}},{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.8.4\\src\\lib.rs","num":6,"id":{"name":"libc","disambiguator":[12632183332710247155,0]}},{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.8.4\\src\\lib.rs","num":7,"id":{"name":"unwind","disambiguator":[18262169243471273054,0]}},{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.8.4\\src\\lib.rs","num":8,"id":{"name":"cfg_if","disambiguator":[15664785966706829415,0]}},{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.8.4\\src\\lib.rs","num":9,"id":{"name":"miniz_oxide","disambiguator":[3895343934390880989,0]}},{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.8.4\\src\\lib.rs","num":10,"id":{"name":"rustc_std_workspace_alloc","disambiguator":[1841993658411810574,0]}},{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.8.4\\src\\lib.rs","num":11,"id":{"name":"adler","disambiguator":[1117248029108287081,0]}},{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.8.4\\src\\lib.rs","num":12,"id":{"name":"hashbrown","disambiguator":[14646112292732085519,0]}},{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.8.4\\src\\lib.rs","num":13,"id":{"name":"std_detect","disambiguator":[11979428506951486581,0]}},{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.8.4\\src\\lib.rs","num":14,"id":{"name":"rustc_demangle","disambiguator":[2104796995944127881,0]}},{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.8.4\\src\\lib.rs","num":15,"id":{"name":"panic_unwind","disambiguator":[4084207378877276393,0]}},{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.8.4\\src\\poll.rs","num":16,"id":{"name":"log","disambiguator":[17080025455861879662,0]}},{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.8.4\\src\\poll.rs","num":17,"id":{"name":"cfg_if","disambiguator":[17941200006019888196,0]}},{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.8.4\\src\\sys\\windows\\afd.rs","num":18,"id":{"name":"windows_sys","disambiguator":[8944581579481882201,0]}}],"span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.8.4\\src\\lib.rs","byte_start":0,"byte_end":9513,"line_start":1,"line_end":266,"column_start":1,"column_end":2}},"imports":[{"kind":"Use","ref_id":{"krate":0,"index":1442},"span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.8.4\\src\\event\\mod.rs","byte_start":55214,"byte_end":55219,"line_start":8,"line_end":8,"column_start":22,"column_end":27},"alias_span":null,"name":"Event","value":"","parent":{"krate":0,"index":115}},{"kind":"Use","ref_id":{"krate":0,"index":157},"span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.8.4\\src\\event\\mod.rs","byte_start":55244,"byte_end":55250,"line_start":9,"line_end":9,"column_start":24,"column_end":30},"alias_span":null,"name":"Events","value":"","parent":{"krate":0,"index":115}},{"kind":"Use","ref_id":{"krate":0,"index":1446},"span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.8.4\\src\\event\\mod.rs","byte_start":55252,"byte_end":55256,"line_start":9,"line_end":9,"column_start":32,"column_end":36},"alias_span":null,"name":"Iter","value":"","parent":{"krate":0,"index":115}},{"kind":"Use","ref_id":{"krate":0,"index":193},"span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.8.4\\src\\event\\mod.rs","byte_start":55281,"byte_end":55287,"line_start":10,"line_end":10,"column_start":23,"column_end":29},"alias_span":null,"name":"Source","value":"","parent":{"krate":0,"index":115}},{"kind":"Use","ref_id":{"krate":0,"index":1598},"span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.8.4\\src\\net\\tcp\\mod.rs","byte_start":13709925,"byte_end":13709936,"line_start":2,"line_end":2,"column_start":25,"column_end":36},"alias_span":null,"name":"TcpListener","value":"","parent":{"krate":0,"index":1537}},{"kind":"Use","ref_id":{"krate":0,"index":1691},"span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.8.4\\src\\net\\tcp\\mod.rs","byte_start":13709973,"byte_end":13709982,"line_start":5,"line_end":5,"column_start":23,"column_end":32},"alias_span":null,"name":"TcpStream","value":"","parent":{"krate":0,"index":1537}},{"kind":"Use","ref_id":{"krate":0,"index":1598},"span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.8.4\\src\\net\\mod.rs","byte_start":13709648,"byte_end":13709659,"line_start":29,"line_end":29,"column_start":21,"column_end":32},"alias_span":null,"name":"TcpListener","value":"","parent":{"krate":0,"index":1536}},{"kind":"Use","ref_id":{"krate":0,"index":1691},"span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.8.4\\src\\net\\mod.rs","byte_start":13709661,"byte_end":13709670,"line_start":29,"line_end":29,"column_start":34,"column_end":43},"alias_span":null,"name":"TcpStream","value":"","parent":{"krate":0,"index":1536}},{"kind":"Use","ref_id":{"krate":0,"index":1809},"span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.8.4\\src\\net\\mod.rs","byte_start":13709766,"byte_end":13709775,"line_start":34,"line_end":34,"column_start":20,"column_end":29},"alias_span":null,"name":"UdpSocket","value":"","parent":{"krate":0,"index":1536}},{"kind":"Use","ref_id":{"krate":0,"index":157},"span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.8.4\\src\\lib.rs","byte_start":1465,"byte_end":1471,"line_start":65,"line_end":65,"column_start":16,"column_end":22},"alias_span":null,"name":"Events","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":240},"span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.8.4\\src\\lib.rs","byte_start":1491,"byte_end":1499,"line_start":66,"line_end":66,"column_start":19,"column_end":27},"alias_span":null,"name":"Interest","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":71},"span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.8.4\\src\\lib.rs","byte_start":1516,"byte_end":1520,"line_start":67,"line_end":67,"column_start":16,"column_end":20},"alias_span":null,"name":"Poll","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":73},"span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.8.4\\src\\lib.rs","byte_start":1522,"byte_end":1530,"line_start":67,"line_end":67,"column_start":22,"column_end":30},"alias_span":null,"name":"Registry","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":1416},"span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.8.4\\src\\lib.rs","byte_start":1548,"byte_end":1553,"line_start":68,"line_end":68,"column_start":16,"column_end":21},"alias_span":null,"name":"Token","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":1417},"span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.8.4\\src\\lib.rs","byte_start":1548,"byte_end":1553,"line_start":68,"line_end":68,"column_start":16,"column_end":21},"alias_span":null,"name":"Token","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":1438},"span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.8.4\\src\\lib.rs","byte_start":1602,"byte_end":1607,"line_start":70,"line_end":70,"column_start":16,"column_end":21},"alias_span":null,"name":"Waker","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":1265},"span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.8.4\\src\\lib.rs","byte_start":2162,"byte_end":2171,"line_start":93,"line_end":93,"column_start":37,"column_end":46},"alias_span":null,"name":"NamedPipe","value":"","parent":{"krate":0,"index":234}}],"defs":[{"kind":"Mod","id":{"krate":0,"index":0},"span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.8.4\\src\\lib.rs","byte_start":0,"byte_end":9513,"line_start":1,"line_end":266,"column_start":1,"column_end":2},"name":"","qualname":"::","value":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.8.4\\src\\lib.rs","parent":null,"children":[{"krate":0,"index":1},{"krate":0,"index":2},{"krate":0,"index":3},{"krate":0,"index":10},{"krate":0,"index":41},{"krate":0,"index":93},{"krate":0,"index":94},{"krate":0,"index":97},{"krate":0,"index":115},{"krate":0,"index":1456},{"krate":0,"index":1536},{"krate":0,"index":215},{"krate":0,"index":218},{"krate":0,"index":221},{"krate":0,"index":222},{"krate":0,"index":225},{"krate":0,"index":228},{"krate":0,"index":229},{"krate":0,"index":231},{"krate":0,"index":234},{"krate":0,"index":238},{"krate":0,"index":239}],"decl_id":null,"docs":" Mio is a fast, low-level I/O library for Rust focusing on non-blocking APIs\n and event notification for building high performance I/O apps with as little\n overhead as possible over the OS abstractions.","sig":null,"attributes":[{"value":"deny(missing_docs, missing_debug_implementations, rust_2018_idioms,\nunused_imports, dead_code)","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.8.4\\src\\lib.rs","byte_start":0,"byte_end":120,"line_start":1,"line_end":7,"column_start":1,"column_end":3}},{"value":"/ Mio is a fast, low-level I/O library for Rust focusing on non-blocking APIs","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.8.4\\src\\lib.rs","byte_start":307,"byte_end":386,"line_start":14,"line_end":14,"column_start":1,"column_end":80}},{"value":"/ and event notification for building high performance I/O apps with as little","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.8.4\\src\\lib.rs","byte_start":387,"byte_end":467,"line_start":15,"line_end":15,"column_start":1,"column_end":81}},{"value":"/ overhead as possible over the OS abstractions.","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.8.4\\src\\lib.rs","byte_start":468,"byte_end":518,"line_start":16,"line_end":16,"column_start":1,"column_end":51}},{"value":"/","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.8.4\\src\\lib.rs","byte_start":519,"byte_end":522,"line_start":17,"line_end":17,"column_start":1,"column_end":4}},{"value":"/ # Usage","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.8.4\\src\\lib.rs","byte_start":523,"byte_end":534,"line_start":18,"line_end":18,"column_start":1,"column_end":12}},{"value":"/","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.8.4\\src\\lib.rs","byte_start":535,"byte_end":538,"line_start":19,"line_end":19,"column_start":1,"column_end":4}},{"value":"/ Using Mio starts by creating a [`Poll`], which reads events from the OS and","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.8.4\\src\\lib.rs","byte_start":539,"byte_end":618,"line_start":20,"line_end":20,"column_start":1,"column_end":80}},{"value":"/ puts them into [`Events`]. You can handle I/O events from the OS with it.","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.8.4\\src\\lib.rs","byte_start":619,"byte_end":696,"line_start":21,"line_end":21,"column_start":1,"column_end":78}},{"value":"/","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.8.4\\src\\lib.rs","byte_start":697,"byte_end":700,"line_start":22,"line_end":22,"column_start":1,"column_end":4}},{"value":"/ For more detail, see [`Poll`].","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.8.4\\src\\lib.rs","byte_start":701,"byte_end":735,"line_start":23,"line_end":23,"column_start":1,"column_end":35}},{"value":"/","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.8.4\\src\\lib.rs","byte_start":736,"byte_end":739,"line_start":24,"line_end":24,"column_start":1,"column_end":4}},{"value":"/ [`Poll`]: ../mio/struct.Poll.html","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.8.4\\src\\lib.rs","byte_start":740,"byte_end":777,"line_start":25,"line_end":25,"column_start":1,"column_end":38}},{"value":"/ [`Events`]: ../mio/event/struct.Events.html","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.8.4\\src\\lib.rs","byte_start":778,"byte_end":825,"line_start":26,"line_end":26,"column_start":1,"column_end":48}},{"value":"/","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.8.4\\src\\lib.rs","byte_start":826,"byte_end":829,"line_start":27,"line_end":27,"column_start":1,"column_end":4}},{"value":"/ ## Examples","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.8.4\\src\\lib.rs","byte_start":830,"byte_end":845,"line_start":28,"line_end":28,"column_start":1,"column_end":16}},{"value":"/","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.8.4\\src\\lib.rs","byte_start":846,"byte_end":849,"line_start":29,"line_end":29,"column_start":1,"column_end":4}},{"value":"/ Examples can found in the `examples` directory of the source code, or [on","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.8.4\\src\\lib.rs","byte_start":850,"byte_end":927,"line_start":30,"line_end":30,"column_start":1,"column_end":78}},{"value":"/ GitHub].","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.8.4\\src\\lib.rs","byte_start":928,"byte_end":940,"line_start":31,"line_end":31,"column_start":1,"column_end":13}},{"value":"/","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.8.4\\src\\lib.rs","byte_start":941,"byte_end":944,"line_start":32,"line_end":32,"column_start":1,"column_end":4}},{"value":"/ [on GitHub]: https://github.com/tokio-rs/mio/tree/master/examples","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.8.4\\src\\lib.rs","byte_start":945,"byte_end":1014,"line_start":33,"line_end":33,"column_start":1,"column_end":70}},{"value":"/","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.8.4\\src\\lib.rs","byte_start":1015,"byte_end":1018,"line_start":34,"line_end":34,"column_start":1,"column_end":4}},{"value":"/ ## Guide","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.8.4\\src\\lib.rs","byte_start":1019,"byte_end":1031,"line_start":35,"line_end":35,"column_start":1,"column_end":13}},{"value":"/","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.8.4\\src\\lib.rs","byte_start":1032,"byte_end":1035,"line_start":36,"line_end":36,"column_start":1,"column_end":4}},{"value":"/ A getting started guide is available in the [`guide`] module.","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.8.4\\src\\lib.rs","byte_start":1036,"byte_end":1101,"line_start":37,"line_end":37,"column_start":1,"column_end":66}},{"value":"/","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.8.4\\src\\lib.rs","byte_start":1102,"byte_end":1105,"line_start":38,"line_end":38,"column_start":1,"column_end":4}},{"value":"/ ## Available features","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.8.4\\src\\lib.rs","byte_start":1106,"byte_end":1131,"line_start":39,"line_end":39,"column_start":1,"column_end":26}},{"value":"/","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.8.4\\src\\lib.rs","byte_start":1132,"byte_end":1135,"line_start":40,"line_end":40,"column_start":1,"column_end":4}},{"value":"/ The available features are described in the [`features`] module.","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.8.4\\src\\lib.rs","byte_start":1136,"byte_end":1204,"line_start":41,"line_end":41,"column_start":1,"column_end":69}}]},{"kind":"Struct","id":{"krate":0,"index":240},"span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.8.4\\src\\interest.rs","byte_start":11952,"byte_end":11960,"line_start":17,"line_end":17,"column_start":12,"column_end":20},"name":"Interest","qualname":"::interest::Interest","value":"","parent":null,"children":[],"decl_id":null,"docs":" Interest used in registering.","sig":null,"attributes":[{"value":"/ Interest used in registering.","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.8.4\\src\\interest.rs","byte_start":11313,"byte_end":11346,"line_start":4,"line_end":4,"column_start":1,"column_end":34}},{"value":"/","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.8.4\\src\\interest.rs","byte_start":11347,"byte_end":11350,"line_start":5,"line_end":5,"column_start":1,"column_end":4}},{"value":"/ Interest are used in [registering] [`event::Source`]s with [`Poll`], they","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.8.4\\src\\interest.rs","byte_start":11351,"byte_end":11428,"line_start":6,"line_end":6,"column_start":1,"column_end":78}},{"value":"/ indicate what readiness should be monitored for. For example if a socket is","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.8.4\\src\\interest.rs","byte_start":11429,"byte_end":11508,"line_start":7,"line_end":7,"column_start":1,"column_end":80}},{"value":"/ registered with [readable] interests and the socket becomes writable, no","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.8.4\\src\\interest.rs","byte_start":11509,"byte_end":11585,"line_start":8,"line_end":8,"column_start":1,"column_end":77}},{"value":"/ event will be returned from a call to [`poll`].","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.8.4\\src\\interest.rs","byte_start":11586,"byte_end":11637,"line_start":9,"line_end":9,"column_start":1,"column_end":52}},{"value":"/","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.8.4\\src\\interest.rs","byte_start":11638,"byte_end":11641,"line_start":10,"line_end":10,"column_start":1,"column_end":4}},{"value":"/ [registering]: struct.Registry.html#method.register","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.8.4\\src\\interest.rs","byte_start":11642,"byte_end":11697,"line_start":11,"line_end":11,"column_start":1,"column_end":56}},{"value":"/ [`event::Source`]: ./event/trait.Source.html","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.8.4\\src\\interest.rs","byte_start":11698,"byte_end":11746,"line_start":12,"line_end":12,"column_start":1,"column_end":49}},{"value":"/ [`Poll`]: struct.Poll.html","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.8.4\\src\\interest.rs","byte_start":11747,"byte_end":11777,"line_start":13,"line_end":13,"column_start":1,"column_end":31}},{"value":"/ [readable]: struct.Interest.html#associatedconstant.READABLE","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.8.4\\src\\interest.rs","byte_start":11778,"byte_end":11842,"line_start":14,"line_end":14,"column_start":1,"column_end":65}},{"value":"/ [`poll`]: struct.Poll.html#method.poll","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.8.4\\src\\interest.rs","byte_start":11843,"byte_end":11885,"line_start":15,"line_end":15,"column_start":1,"column_end":43}}]},{"kind":"Const","id":{"krate":0,"index":26},"span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.8.4\\src\\interest.rs","byte_start":12489,"byte_end":12497,"line_start":38,"line_end":38,"column_start":15,"column_end":23},"name":"READABLE","qualname":"::interest::Interest::READABLE","value":"Interest","parent":{"krate":0,"index":25},"children":[],"decl_id":null,"docs":" Returns a `Interest` set representing readable interests.\n","sig":null,"attributes":[{"value":"/ Returns a `Interest` set representing readable interests.","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.8.4\\src\\interest.rs","byte_start":12413,"byte_end":12474,"line_start":37,"line_end":37,"column_start":5,"column_end":66}}]},{"kind":"Const","id":{"krate":0,"index":27},"span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.8.4\\src\\interest.rs","byte_start":12648,"byte_end":12656,"line_start":41,"line_end":41,"column_start":15,"column_end":23},"name":"WRITABLE","qualname":"::interest::Interest::WRITABLE","value":"Interest","parent":{"krate":0,"index":25},"children":[],"decl_id":null,"docs":" Returns a `Interest` set representing writable interests.\n","sig":null,"attributes":[{"value":"/ Returns a `Interest` set representing writable interests.","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.8.4\\src\\interest.rs","byte_start":12572,"byte_end":12633,"line_start":40,"line_end":40,"column_start":5,"column_end":66}}]},{"kind":"Method","id":{"krate":0,"index":28},"span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.8.4\\src\\interest.rs","byte_start":13668,"byte_end":13671,"line_start":69,"line_end":69,"column_start":18,"column_end":21},"name":"add","qualname":"<Interest>::add","value":"pub const fn add(Self, Interest) -> Interest","parent":null,"children":[],"decl_id":null,"docs":" Add together two `Interest`.","sig":null,"attributes":[{"value":"/ Add together two `Interest`.","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.8.4\\src\\interest.rs","byte_start":13217,"byte_end":13249,"line_start":56,"line_end":56,"column_start":5,"column_end":37}},{"value":"/","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.8.4\\src\\interest.rs","byte_start":13254,"byte_end":13257,"line_start":57,"line_end":57,"column_start":5,"column_end":8}},{"value":"/ This does the same thing as the `BitOr` implementation, but is a","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.8.4\\src\\interest.rs","byte_start":13262,"byte_end":13330,"line_start":58,"line_end":58,"column_start":5,"column_end":73}},{"value":"/ constant function.","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.8.4\\src\\interest.rs","byte_start":13335,"byte_end":13357,"line_start":59,"line_end":59,"column_start":5,"column_end":27}},{"value":"/","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.8.4\\src\\interest.rs","byte_start":13362,"byte_end":13365,"line_start":60,"line_end":60,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.8.4\\src\\interest.rs","byte_start":13370,"byte_end":13377,"line_start":61,"line_end":61,"column_start":5,"column_end":12}},{"value":"/ use mio::Interest;","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.8.4\\src\\interest.rs","byte_start":13382,"byte_end":13404,"line_start":62,"line_end":62,"column_start":5,"column_end":27}},{"value":"/","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.8.4\\src\\interest.rs","byte_start":13409,"byte_end":13412,"line_start":63,"line_end":63,"column_start":5,"column_end":8}},{"value":"/ const INTERESTS: Interest = Interest::READABLE.add(Interest::WRITABLE);","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.8.4\\src\\interest.rs","byte_start":13417,"byte_end":13492,"line_start":64,"line_end":64,"column_start":5,"column_end":80}},{"value":"/ # fn silent_dead_code_warning(_: Interest) { }","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.8.4\\src\\interest.rs","byte_start":13497,"byte_end":13547,"line_start":65,"line_end":65,"column_start":5,"column_end":55}},{"value":"/ # silent_dead_code_warning(INTERESTS)","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.8.4\\src\\interest.rs","byte_start":13552,"byte_end":13593,"line_start":66,"line_end":66,"column_start":5,"column_end":46}},{"value":"/ ```","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.8.4\\src\\interest.rs","byte_start":13598,"byte_end":13605,"line_start":67,"line_end":67,"column_start":5,"column_end":12}},{"value":"allow(clippy :: should_implement_trait)","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.8.4\\src\\interest.rs","byte_start":13610,"byte_end":13650,"line_start":68,"line_end":68,"column_start":5,"column_end":45}}]},{"kind":"Method","id":{"krate":0,"index":29},"span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.8.4\\src\\interest.rs","byte_start":14602,"byte_end":14608,"line_start":93,"line_end":93,"column_start":12,"column_end":18},"name":"remove","qualname":"<Interest>::remove","value":"pub fn remove(Self, Interest) -> Option<Interest>","parent":null,"children":[],"decl_id":null,"docs":" Removes `other` `Interest` from `self`.","sig":null,"attributes":[{"value":"/ Removes `other` `Interest` from `self`.","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.8.4\\src\\interest.rs","byte_start":13804,"byte_end":13847,"line_start":73,"line_end":73,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.8.4\\src\\interest.rs","byte_start":13852,"byte_end":13855,"line_start":74,"line_end":74,"column_start":5,"column_end":8}},{"value":"/ Returns `None` if the set would be empty after removing `other`.","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.8.4\\src\\interest.rs","byte_start":13860,"byte_end":13928,"line_start":75,"line_end":75,"column_start":5,"column_end":73}},{"value":"/","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.8.4\\src\\interest.rs","byte_start":13933,"byte_end":13936,"line_start":76,"line_end":76,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.8.4\\src\\interest.rs","byte_start":13941,"byte_end":13948,"line_start":77,"line_end":77,"column_start":5,"column_end":12}},{"value":"/ use mio::Interest;","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.8.4\\src\\interest.rs","byte_start":13953,"byte_end":13975,"line_start":78,"line_end":78,"column_start":5,"column_end":27}},{"value":"/","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.8.4\\src\\interest.rs","byte_start":13980,"byte_end":13983,"line_start":79,"line_end":79,"column_start":5,"column_end":8}},{"value":"/ const RW_INTERESTS: Interest = Interest::READABLE.add(Interest::WRITABLE);","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.8.4\\src\\interest.rs","byte_start":13988,"byte_end":14066,"line_start":80,"line_end":80,"column_start":5,"column_end":83}},{"value":"/","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.8.4\\src\\interest.rs","byte_start":14071,"byte_end":14074,"line_start":81,"line_end":81,"column_start":5,"column_end":8}},{"value":"/ // As long a one interest remain this will return `Some`.","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.8.4\\src\\interest.rs","byte_start":14079,"byte_end":14140,"line_start":82,"line_end":82,"column_start":5,"column_end":66}},{"value":"/ let w_interest = RW_INTERESTS.remove(Interest::READABLE).unwrap();","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.8.4\\src\\interest.rs","byte_start":14145,"byte_end":14215,"line_start":83,"line_end":83,"column_start":5,"column_end":75}},{"value":"/ assert!(!w_interest.is_readable());","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.8.4\\src\\interest.rs","byte_start":14220,"byte_end":14259,"line_start":84,"line_end":84,"column_start":5,"column_end":44}},{"value":"/ assert!(w_interest.is_writable());","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.8.4\\src\\interest.rs","byte_start":14264,"byte_end":14302,"line_start":85,"line_end":85,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.8.4\\src\\interest.rs","byte_start":14307,"byte_end":14310,"line_start":86,"line_end":86,"column_start":5,"column_end":8}},{"value":"/ // Removing all interests from the set will return `None`.","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.8.4\\src\\interest.rs","byte_start":14315,"byte_end":14377,"line_start":87,"line_end":87,"column_start":5,"column_end":67}},{"value":"/ assert_eq!(w_interest.remove(Interest::WRITABLE), None);","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.8.4\\src\\interest.rs","byte_start":14382,"byte_end":14442,"line_start":88,"line_end":88,"column_start":5,"column_end":65}},{"value":"/","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.8.4\\src\\interest.rs","byte_start":14447,"byte_end":14450,"line_start":89,"line_end":89,"column_start":5,"column_end":8}},{"value":"/ // Its also possible to remove multiple interests at once.","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.8.4\\src\\interest.rs","byte_start":14455,"byte_end":14517,"line_start":90,"line_end":90,"column_start":5,"column_end":67}},{"value":"/ assert_eq!(RW_INTERESTS.remove(RW_INTERESTS), None);","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.8.4\\src\\interest.rs","byte_start":14522,"byte_end":14578,"line_start":91,"line_end":91,"column_start":5,"column_end":61}},{"value":"/ ```","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.8.4\\src\\interest.rs","byte_start":14583,"byte_end":14590,"line_start":92,"line_end":92,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":30},"span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.8.4\\src\\interest.rs","byte_start":14809,"byte_end":14820,"line_start":98,"line_end":98,"column_start":18,"column_end":29},"name":"is_readable","qualname":"<Interest>::is_readable","value":"pub const fn is_readable(Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Returns true if the value includes readable readiness.\n","sig":null,"attributes":[{"value":"/ Returns true if the value includes readable readiness.","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.8.4\\src\\interest.rs","byte_start":14733,"byte_end":14791,"line_start":97,"line_end":97,"column_start":5,"column_end":63}}]},{"kind":"Method","id":{"krate":0,"index":31},"span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.8.4\\src\\interest.rs","byte_start":14963,"byte_end":14974,"line_start":103,"line_end":103,"column_start":18,"column_end":29},"name":"is_writable","qualname":"<Interest>::is_writable","value":"pub const fn is_writable(Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Returns true if the value includes writable readiness.\n","sig":null,"attributes":[{"value":"/ Returns true if the value includes writable readiness.","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.8.4\\src\\interest.rs","byte_start":14887,"byte_end":14945,"line_start":102,"line_end":102,"column_start":5,"column_end":63}}]},{"kind":"Method","id":{"krate":0,"index":32},"span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.8.4\\src\\interest.rs","byte_start":15112,"byte_end":15118,"line_start":108,"line_end":108,"column_start":18,"column_end":24},"name":"is_aio","qualname":"<Interest>::is_aio","value":"pub const fn is_aio(Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Returns true if `Interest` contains AIO readiness\n","sig":null,"attributes":[{"value":"/ Returns true if `Interest` contains AIO readiness","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.8.4\\src\\interest.rs","byte_start":15041,"byte_end":15094,"line_start":107,"line_end":107,"column_start":5,"column_end":58}}]},{"kind":"Method","id":{"krate":0,"index":33},"span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.8.4\\src\\interest.rs","byte_start":15251,"byte_end":15257,"line_start":113,"line_end":113,"column_start":18,"column_end":24},"name":"is_lio","qualname":"<Interest>::is_lio","value":"pub const fn is_lio(Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Returns true if `Interest` contains LIO readiness\n","sig":null,"attributes":[{"value":"/ Returns true if `Interest` contains LIO readiness","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.8.4\\src\\interest.rs","byte_start":15180,"byte_end":15233,"line_start":112,"line_end":112,"column_start":5,"column_end":58}}]},{"kind":"Struct","id":{"krate":0,"index":71},"span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.8.4\\src\\poll.rs","byte_start":27712,"byte_end":27716,"line_start":249,"line_end":249,"column_start":12,"column_end":16},"name":"Poll","qualname":"::poll::Poll","value":"Poll {  }","parent":null,"children":[{"krate":0,"index":72}],"decl_id":null,"docs":" Polls for readiness events on all registered values.","sig":null,"attributes":[{"value":"/ Polls for readiness events on all registered values.","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.8.4\\src\\poll.rs","byte_start":16956,"byte_end":17012,"line_start":8,"line_end":8,"column_start":1,"column_end":57}},{"value":"/","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.8.4\\src\\poll.rs","byte_start":17013,"byte_end":17016,"line_start":9,"line_end":9,"column_start":1,"column_end":4}},{"value":"/ `Poll` allows a program to monitor a large number of [`event::Source`]s,","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.8.4\\src\\poll.rs","byte_start":17017,"byte_end":17093,"line_start":10,"line_end":10,"column_start":1,"column_end":77}},{"value":"/ waiting until one or more become \"ready\" for some class of operations; e.g.","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.8.4\\src\\poll.rs","byte_start":17094,"byte_end":17173,"line_start":11,"line_end":11,"column_start":1,"column_end":80}},{"value":"/ reading and writing. An event source is considered ready if it is possible","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.8.4\\src\\poll.rs","byte_start":17174,"byte_end":17252,"line_start":12,"line_end":12,"column_start":1,"column_end":79}},{"value":"/ to immediately perform a corresponding operation; e.g. [`read`] or","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.8.4\\src\\poll.rs","byte_start":17253,"byte_end":17323,"line_start":13,"line_end":13,"column_start":1,"column_end":71}},{"value":"/ [`write`].","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.8.4\\src\\poll.rs","byte_start":17324,"byte_end":17338,"line_start":14,"line_end":14,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.8.4\\src\\poll.rs","byte_start":17339,"byte_end":17342,"line_start":15,"line_end":15,"column_start":1,"column_end":4}},{"value":"/ To use `Poll`, an `event::Source` must first be registered with the `Poll`","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.8.4\\src\\poll.rs","byte_start":17343,"byte_end":17421,"line_start":16,"line_end":16,"column_start":1,"column_end":79}},{"value":"/ instance using the [`register`] method on its associated `Register`,","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.8.4\\src\\poll.rs","byte_start":17422,"byte_end":17494,"line_start":17,"line_end":17,"column_start":1,"column_end":73}},{"value":"/ supplying readiness interest. The readiness interest tells `Poll` which","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.8.4\\src\\poll.rs","byte_start":17495,"byte_end":17570,"line_start":18,"line_end":18,"column_start":1,"column_end":76}},{"value":"/ specific operations on the handle to monitor for readiness. A `Token` is","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.8.4\\src\\poll.rs","byte_start":17571,"byte_end":17647,"line_start":19,"line_end":19,"column_start":1,"column_end":77}},{"value":"/ also passed to the [`register`] function. When `Poll` returns a readiness","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.8.4\\src\\poll.rs","byte_start":17648,"byte_end":17725,"line_start":20,"line_end":20,"column_start":1,"column_end":78}},{"value":"/ event, it will include this token.  This associates the event with the","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.8.4\\src\\poll.rs","byte_start":17726,"byte_end":17800,"line_start":21,"line_end":21,"column_start":1,"column_end":75}},{"value":"/ event source that generated the event.","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.8.4\\src\\poll.rs","byte_start":17801,"byte_end":17843,"line_start":22,"line_end":22,"column_start":1,"column_end":43}},{"value":"/","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.8.4\\src\\poll.rs","byte_start":17844,"byte_end":17847,"line_start":23,"line_end":23,"column_start":1,"column_end":4}},{"value":"/ [`event::Source`]: ./event/trait.Source.html","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.8.4\\src\\poll.rs","byte_start":17848,"byte_end":17896,"line_start":24,"line_end":24,"column_start":1,"column_end":49}},{"value":"/ [`read`]: ./net/struct.TcpStream.html#method.read","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.8.4\\src\\poll.rs","byte_start":17897,"byte_end":17950,"line_start":25,"line_end":25,"column_start":1,"column_end":54}},{"value":"/ [`write`]: ./net/struct.TcpStream.html#method.write","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.8.4\\src\\poll.rs","byte_start":17951,"byte_end":18006,"line_start":26,"line_end":26,"column_start":1,"column_end":56}},{"value":"/ [`register`]: struct.Registry.html#method.register","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.8.4\\src\\poll.rs","byte_start":18007,"byte_end":18061,"line_start":27,"line_end":27,"column_start":1,"column_end":55}},{"value":"/","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.8.4\\src\\poll.rs","byte_start":18062,"byte_end":18065,"line_start":28,"line_end":28,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.8.4\\src\\poll.rs","byte_start":18066,"byte_end":18080,"line_start":29,"line_end":29,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.8.4\\src\\poll.rs","byte_start":18081,"byte_end":18084,"line_start":30,"line_end":30,"column_start":1,"column_end":4}},{"value":"/ A basic example -- establishing a `TcpStream` connection.","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.8.4\\src\\poll.rs","byte_start":18085,"byte_end":18146,"line_start":31,"line_end":31,"column_start":1,"column_end":62}},{"value":"/","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.8.4\\src\\poll.rs","byte_start":18147,"byte_end":18150,"line_start":32,"line_end":32,"column_start":1,"column_end":4}},{"value":"/ # use std::error::Error;","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.8.4\\src\\poll.rs","byte_start":18298,"byte_end":18326,"line_start":35,"line_end":35,"column_start":1,"column_end":29}},{"value":"/ # fn main() -> Result<(), Box<dyn Error>> {","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.8.4\\src\\poll.rs","byte_start":18327,"byte_end":18374,"line_start":36,"line_end":36,"column_start":1,"column_end":48}},{"value":"/ use mio::{Events, Poll, Interest, Token};","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.8.4\\src\\poll.rs","byte_start":18375,"byte_end":18420,"line_start":37,"line_end":37,"column_start":1,"column_end":46}},{"value":"/ use mio::net::TcpStream;","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.8.4\\src\\poll.rs","byte_start":18421,"byte_end":18449,"line_start":38,"line_end":38,"column_start":1,"column_end":29}},{"value":"/","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.8.4\\src\\poll.rs","byte_start":18450,"byte_end":18453,"line_start":39,"line_end":39,"column_start":1,"column_end":4}},{"value":"/ use std::net::{self, SocketAddr};","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.8.4\\src\\poll.rs","byte_start":18454,"byte_end":18491,"line_start":40,"line_end":40,"column_start":1,"column_end":38}},{"value":"/","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.8.4\\src\\poll.rs","byte_start":18492,"byte_end":18495,"line_start":41,"line_end":41,"column_start":1,"column_end":4}},{"value":"/ // Bind a server socket to connect to.","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.8.4\\src\\poll.rs","byte_start":18496,"byte_end":18538,"line_start":42,"line_end":42,"column_start":1,"column_end":43}},{"value":"/ let addr: SocketAddr = \"127.0.0.1:0\".parse()?;","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.8.4\\src\\poll.rs","byte_start":18539,"byte_end":18589,"line_start":43,"line_end":43,"column_start":1,"column_end":51}},{"value":"/ let server = net::TcpListener::bind(addr)?;","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.8.4\\src\\poll.rs","byte_start":18590,"byte_end":18637,"line_start":44,"line_end":44,"column_start":1,"column_end":48}},{"value":"/","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.8.4\\src\\poll.rs","byte_start":18638,"byte_end":18641,"line_start":45,"line_end":45,"column_start":1,"column_end":4}},{"value":"/ // Construct a new `Poll` handle as well as the `Events` we'll store into","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.8.4\\src\\poll.rs","byte_start":18642,"byte_end":18719,"line_start":46,"line_end":46,"column_start":1,"column_end":78}},{"value":"/ let mut poll = Poll::new()?;","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.8.4\\src\\poll.rs","byte_start":18720,"byte_end":18752,"line_start":47,"line_end":47,"column_start":1,"column_end":33}},{"value":"/ let mut events = Events::with_capacity(1024);","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.8.4\\src\\poll.rs","byte_start":18753,"byte_end":18802,"line_start":48,"line_end":48,"column_start":1,"column_end":50}},{"value":"/","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.8.4\\src\\poll.rs","byte_start":18803,"byte_end":18806,"line_start":49,"line_end":49,"column_start":1,"column_end":4}},{"value":"/ // Connect the stream","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.8.4\\src\\poll.rs","byte_start":18807,"byte_end":18832,"line_start":50,"line_end":50,"column_start":1,"column_end":26}},{"value":"/ let mut stream = TcpStream::connect(server.local_addr()?)?;","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.8.4\\src\\poll.rs","byte_start":18833,"byte_end":18896,"line_start":51,"line_end":51,"column_start":1,"column_end":64}},{"value":"/","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.8.4\\src\\poll.rs","byte_start":18897,"byte_end":18900,"line_start":52,"line_end":52,"column_start":1,"column_end":4}},{"value":"/ // Register the stream with `Poll`","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.8.4\\src\\poll.rs","byte_start":18901,"byte_end":18939,"line_start":53,"line_end":53,"column_start":1,"column_end":39}},{"value":"/ poll.registry().register(&mut stream, Token(0), Interest::READABLE | Interest::WRITABLE)?;","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.8.4\\src\\poll.rs","byte_start":18940,"byte_end":19034,"line_start":54,"line_end":54,"column_start":1,"column_end":95}},{"value":"/","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.8.4\\src\\poll.rs","byte_start":19035,"byte_end":19038,"line_start":55,"line_end":55,"column_start":1,"column_end":4}},{"value":"/ // Wait for the socket to become ready. This has to happens in a loop to","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.8.4\\src\\poll.rs","byte_start":19039,"byte_end":19115,"line_start":56,"line_end":56,"column_start":1,"column_end":77}},{"value":"/ // handle spurious wakeups.","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.8.4\\src\\poll.rs","byte_start":19116,"byte_end":19147,"line_start":57,"line_end":57,"column_start":1,"column_end":32}},{"value":"/ loop {","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.8.4\\src\\poll.rs","byte_start":19148,"byte_end":19158,"line_start":58,"line_end":58,"column_start":1,"column_end":11}},{"value":"/     poll.poll(&mut events, None)?;","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.8.4\\src\\poll.rs","byte_start":19159,"byte_end":19197,"line_start":59,"line_end":59,"column_start":1,"column_end":39}},{"value":"/","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.8.4\\src\\poll.rs","byte_start":19198,"byte_end":19201,"line_start":60,"line_end":60,"column_start":1,"column_end":4}},{"value":"/     for event in &events {","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.8.4\\src\\poll.rs","byte_start":19202,"byte_end":19232,"line_start":61,"line_end":61,"column_start":1,"column_end":31}},{"value":"/         if event.token() == Token(0) && event.is_writable() {","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.8.4\\src\\poll.rs","byte_start":19233,"byte_end":19298,"line_start":62,"line_end":62,"column_start":1,"column_end":66}},{"value":"/             // The socket connected (probably, it could still be a spurious","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.8.4\\src\\poll.rs","byte_start":19299,"byte_end":19378,"line_start":63,"line_end":63,"column_start":1,"column_end":80}},{"value":"/             // wakeup)","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.8.4\\src\\poll.rs","byte_start":19379,"byte_end":19405,"line_start":64,"line_end":64,"column_start":1,"column_end":27}},{"value":"/             return Ok(());","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.8.4\\src\\poll.rs","byte_start":19406,"byte_end":19436,"line_start":65,"line_end":65,"column_start":1,"column_end":31}},{"value":"/         }","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.8.4\\src\\poll.rs","byte_start":19437,"byte_end":19450,"line_start":66,"line_end":66,"column_start":1,"column_end":14}},{"value":"/     }","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.8.4\\src\\poll.rs","byte_start":19451,"byte_end":19460,"line_start":67,"line_end":67,"column_start":1,"column_end":10}},{"value":"/ }","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.8.4\\src\\poll.rs","byte_start":19461,"byte_end":19466,"line_start":68,"line_end":68,"column_start":1,"column_end":6}},{"value":"/ # }","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.8.4\\src\\poll.rs","byte_start":19467,"byte_end":19474,"line_start":69,"line_end":69,"column_start":1,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.8.4\\src\\poll.rs","byte_start":19475,"byte_end":19482,"line_start":70,"line_end":70,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.8.4\\src\\poll.rs","byte_start":19483,"byte_end":19486,"line_start":71,"line_end":71,"column_start":1,"column_end":4}},{"value":"/ # Portability","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.8.4\\src\\poll.rs","byte_start":19487,"byte_end":19504,"line_start":72,"line_end":72,"column_start":1,"column_end":18}},{"value":"/","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.8.4\\src\\poll.rs","byte_start":19505,"byte_end":19508,"line_start":73,"line_end":73,"column_start":1,"column_end":4}},{"value":"/ Using `Poll` provides a portable interface across supported platforms as","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.8.4\\src\\poll.rs","byte_start":19509,"byte_end":19585,"line_start":74,"line_end":74,"column_start":1,"column_end":77}},{"value":"/ long as the caller takes the following into consideration:","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.8.4\\src\\poll.rs","byte_start":19586,"byte_end":19648,"line_start":75,"line_end":75,"column_start":1,"column_end":63}},{"value":"/","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.8.4\\src\\poll.rs","byte_start":19649,"byte_end":19652,"line_start":76,"line_end":76,"column_start":1,"column_end":4}},{"value":"/ ### Spurious events","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.8.4\\src\\poll.rs","byte_start":19653,"byte_end":19676,"line_start":77,"line_end":77,"column_start":1,"column_end":24}},{"value":"/","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.8.4\\src\\poll.rs","byte_start":19677,"byte_end":19680,"line_start":78,"line_end":78,"column_start":1,"column_end":4}},{"value":"/ [`Poll::poll`] may return readiness events even if the associated","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.8.4\\src\\poll.rs","byte_start":19681,"byte_end":19750,"line_start":79,"line_end":79,"column_start":1,"column_end":70}},{"value":"/ event source is not actually ready. Given the same code, this may","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.8.4\\src\\poll.rs","byte_start":19751,"byte_end":19820,"line_start":80,"line_end":80,"column_start":1,"column_end":70}},{"value":"/ happen more on some platforms than others. It is important to never assume","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.8.4\\src\\poll.rs","byte_start":19821,"byte_end":19899,"line_start":81,"line_end":81,"column_start":1,"column_end":79}},{"value":"/ that, just because a readiness event was received, that the associated","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.8.4\\src\\poll.rs","byte_start":19900,"byte_end":19974,"line_start":82,"line_end":82,"column_start":1,"column_end":75}},{"value":"/ operation will succeed as well.","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.8.4\\src\\poll.rs","byte_start":19975,"byte_end":20010,"line_start":83,"line_end":83,"column_start":1,"column_end":36}},{"value":"/","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.8.4\\src\\poll.rs","byte_start":20011,"byte_end":20014,"line_start":84,"line_end":84,"column_start":1,"column_end":4}},{"value":"/ If operation fails with [`WouldBlock`], then the caller should not treat","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.8.4\\src\\poll.rs","byte_start":20015,"byte_end":20091,"line_start":85,"line_end":85,"column_start":1,"column_end":77}},{"value":"/ this as an error, but instead should wait until another readiness event is","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.8.4\\src\\poll.rs","byte_start":20092,"byte_end":20170,"line_start":86,"line_end":86,"column_start":1,"column_end":79}},{"value":"/ received.","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.8.4\\src\\poll.rs","byte_start":20171,"byte_end":20184,"line_start":87,"line_end":87,"column_start":1,"column_end":14}},{"value":"/","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.8.4\\src\\poll.rs","byte_start":20185,"byte_end":20188,"line_start":88,"line_end":88,"column_start":1,"column_end":4}},{"value":"/ ### Draining readiness","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.8.4\\src\\poll.rs","byte_start":20189,"byte_end":20215,"line_start":89,"line_end":89,"column_start":1,"column_end":27}},{"value":"/","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.8.4\\src\\poll.rs","byte_start":20216,"byte_end":20219,"line_start":90,"line_end":90,"column_start":1,"column_end":4}},{"value":"/ Once a readiness event is received, the corresponding operation must be","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.8.4\\src\\poll.rs","byte_start":20220,"byte_end":20295,"line_start":91,"line_end":91,"column_start":1,"column_end":76}},{"value":"/ performed repeatedly until it returns [`WouldBlock`]. Unless this is done,","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.8.4\\src\\poll.rs","byte_start":20296,"byte_end":20374,"line_start":92,"line_end":92,"column_start":1,"column_end":79}},{"value":"/ there is no guarantee that another readiness event will be delivered, even","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.8.4\\src\\poll.rs","byte_start":20375,"byte_end":20453,"line_start":93,"line_end":93,"column_start":1,"column_end":79}},{"value":"/ if further data is received for the event source.","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.8.4\\src\\poll.rs","byte_start":20454,"byte_end":20507,"line_start":94,"line_end":94,"column_start":1,"column_end":54}},{"value":"/","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.8.4\\src\\poll.rs","byte_start":20508,"byte_end":20511,"line_start":95,"line_end":95,"column_start":1,"column_end":4}},{"value":"/ [`WouldBlock`]: std::io::ErrorKind::WouldBlock","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.8.4\\src\\poll.rs","byte_start":20512,"byte_end":20562,"line_start":96,"line_end":96,"column_start":1,"column_end":51}},{"value":"/","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.8.4\\src\\poll.rs","byte_start":20563,"byte_end":20566,"line_start":97,"line_end":97,"column_start":1,"column_end":4}},{"value":"/ ### Readiness operations","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.8.4\\src\\poll.rs","byte_start":20567,"byte_end":20595,"line_start":98,"line_end":98,"column_start":1,"column_end":29}},{"value":"/","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.8.4\\src\\poll.rs","byte_start":20596,"byte_end":20599,"line_start":99,"line_end":99,"column_start":1,"column_end":4}},{"value":"/ The only readiness operations that are guaranteed to be present on all","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.8.4\\src\\poll.rs","byte_start":20600,"byte_end":20674,"line_start":100,"line_end":100,"column_start":1,"column_end":75}},{"value":"/ supported platforms are [`readable`] and [`writable`]. All other readiness","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.8.4\\src\\poll.rs","byte_start":20675,"byte_end":20753,"line_start":101,"line_end":101,"column_start":1,"column_end":79}},{"value":"/ operations may have false negatives and as such should be considered","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.8.4\\src\\poll.rs","byte_start":20754,"byte_end":20826,"line_start":102,"line_end":102,"column_start":1,"column_end":73}},{"value":"/ **hints**. This means that if a socket is registered with [`readable`]","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.8.4\\src\\poll.rs","byte_start":20827,"byte_end":20901,"line_start":103,"line_end":103,"column_start":1,"column_end":75}},{"value":"/ interest and either an error or close is received, a readiness event will","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.8.4\\src\\poll.rs","byte_start":20902,"byte_end":20979,"line_start":104,"line_end":104,"column_start":1,"column_end":78}},{"value":"/ be generated for the socket, but it **may** only include `readable`","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.8.4\\src\\poll.rs","byte_start":20980,"byte_end":21051,"line_start":105,"line_end":105,"column_start":1,"column_end":72}},{"value":"/ readiness. Also note that, given the potential for spurious events,","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.8.4\\src\\poll.rs","byte_start":21052,"byte_end":21123,"line_start":106,"line_end":106,"column_start":1,"column_end":72}},{"value":"/ receiving a readiness event with `read_closed`, `write_closed`, or `error`","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.8.4\\src\\poll.rs","byte_start":21124,"byte_end":21202,"line_start":107,"line_end":107,"column_start":1,"column_end":79}},{"value":"/ doesn't actually mean that a `read` on the socket will return a result","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.8.4\\src\\poll.rs","byte_start":21203,"byte_end":21277,"line_start":108,"line_end":108,"column_start":1,"column_end":75}},{"value":"/ matching the readiness event.","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.8.4\\src\\poll.rs","byte_start":21278,"byte_end":21311,"line_start":109,"line_end":109,"column_start":1,"column_end":34}},{"value":"/","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.8.4\\src\\poll.rs","byte_start":21312,"byte_end":21315,"line_start":110,"line_end":110,"column_start":1,"column_end":4}},{"value":"/ In other words, portable programs that explicitly check for [`read_closed`],","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.8.4\\src\\poll.rs","byte_start":21316,"byte_end":21396,"line_start":111,"line_end":111,"column_start":1,"column_end":81}},{"value":"/ [`write_closed`], or [`error`] readiness should be doing so as an","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.8.4\\src\\poll.rs","byte_start":21397,"byte_end":21466,"line_start":112,"line_end":112,"column_start":1,"column_end":70}},{"value":"/ **optimization** and always be able to handle an error or close situation","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.8.4\\src\\poll.rs","byte_start":21467,"byte_end":21544,"line_start":113,"line_end":113,"column_start":1,"column_end":78}},{"value":"/ when performing the actual read operation.","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.8.4\\src\\poll.rs","byte_start":21545,"byte_end":21591,"line_start":114,"line_end":114,"column_start":1,"column_end":47}},{"value":"/","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.8.4\\src\\poll.rs","byte_start":21592,"byte_end":21595,"line_start":115,"line_end":115,"column_start":1,"column_end":4}},{"value":"/ [`readable`]: ./event/struct.Event.html#method.is_readable","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.8.4\\src\\poll.rs","byte_start":21596,"byte_end":21658,"line_start":116,"line_end":116,"column_start":1,"column_end":63}},{"value":"/ [`writable`]: ./event/struct.Event.html#method.is_writable","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.8.4\\src\\poll.rs","byte_start":21659,"byte_end":21721,"line_start":117,"line_end":117,"column_start":1,"column_end":63}},{"value":"/ [`error`]: ./event/struct.Event.html#method.is_error","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.8.4\\src\\poll.rs","byte_start":21722,"byte_end":21778,"line_start":118,"line_end":118,"column_start":1,"column_end":57}},{"value":"/ [`read_closed`]: ./event/struct.Event.html#method.is_read_closed","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.8.4\\src\\poll.rs","byte_start":21779,"byte_end":21847,"line_start":119,"line_end":119,"column_start":1,"column_end":69}},{"value":"/ [`write_closed`]: ./event/struct.Event.html#method.is_write_closed","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.8.4\\src\\poll.rs","byte_start":21848,"byte_end":21918,"line_start":120,"line_end":120,"column_start":1,"column_end":71}},{"value":"/","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.8.4\\src\\poll.rs","byte_start":21919,"byte_end":21922,"line_start":121,"line_end":121,"column_start":1,"column_end":4}},{"value":"/ ### Registering handles","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.8.4\\src\\poll.rs","byte_start":21923,"byte_end":21950,"line_start":122,"line_end":122,"column_start":1,"column_end":28}},{"value":"/","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.8.4\\src\\poll.rs","byte_start":21951,"byte_end":21954,"line_start":123,"line_end":123,"column_start":1,"column_end":4}},{"value":"/ Unless otherwise noted, it should be assumed that types implementing","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.8.4\\src\\poll.rs","byte_start":21955,"byte_end":22027,"line_start":124,"line_end":124,"column_start":1,"column_end":73}},{"value":"/ [`event::Source`] will never become ready unless they are registered with","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.8.4\\src\\poll.rs","byte_start":22028,"byte_end":22105,"line_start":125,"line_end":125,"column_start":1,"column_end":78}},{"value":"/ `Poll`.","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.8.4\\src\\poll.rs","byte_start":22106,"byte_end":22117,"line_start":126,"line_end":126,"column_start":1,"column_end":12}},{"value":"/","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.8.4\\src\\poll.rs","byte_start":22118,"byte_end":22121,"line_start":127,"line_end":127,"column_start":1,"column_end":4}},{"value":"/ For example:","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.8.4\\src\\poll.rs","byte_start":22122,"byte_end":22138,"line_start":128,"line_end":128,"column_start":1,"column_end":17}},{"value":"/","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.8.4\\src\\poll.rs","byte_start":22139,"byte_end":22142,"line_start":129,"line_end":129,"column_start":1,"column_end":4}},{"value":"/ # use std::error::Error;","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.8.4\\src\\poll.rs","byte_start":22290,"byte_end":22318,"line_start":132,"line_end":132,"column_start":1,"column_end":29}},{"value":"/ # use std::net;","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.8.4\\src\\poll.rs","byte_start":22319,"byte_end":22338,"line_start":133,"line_end":133,"column_start":1,"column_end":20}},{"value":"/ # fn main() -> Result<(), Box<dyn Error>> {","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.8.4\\src\\poll.rs","byte_start":22339,"byte_end":22386,"line_start":134,"line_end":134,"column_start":1,"column_end":48}},{"value":"/ use mio::{Poll, Interest, Token};","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.8.4\\src\\poll.rs","byte_start":22387,"byte_end":22424,"line_start":135,"line_end":135,"column_start":1,"column_end":38}},{"value":"/ use mio::net::TcpStream;","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.8.4\\src\\poll.rs","byte_start":22425,"byte_end":22453,"line_start":136,"line_end":136,"column_start":1,"column_end":29}},{"value":"/ use std::net::SocketAddr;","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.8.4\\src\\poll.rs","byte_start":22454,"byte_end":22483,"line_start":137,"line_end":137,"column_start":1,"column_end":30}},{"value":"/ use std::time::Duration;","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.8.4\\src\\poll.rs","byte_start":22484,"byte_end":22512,"line_start":138,"line_end":138,"column_start":1,"column_end":29}},{"value":"/ use std::thread;","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.8.4\\src\\poll.rs","byte_start":22513,"byte_end":22533,"line_start":139,"line_end":139,"column_start":1,"column_end":21}},{"value":"/","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.8.4\\src\\poll.rs","byte_start":22534,"byte_end":22537,"line_start":140,"line_end":140,"column_start":1,"column_end":4}},{"value":"/ let address: SocketAddr = \"127.0.0.1:0\".parse()?;","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.8.4\\src\\poll.rs","byte_start":22538,"byte_end":22591,"line_start":141,"line_end":141,"column_start":1,"column_end":54}},{"value":"/ let listener = net::TcpListener::bind(address)?;","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.8.4\\src\\poll.rs","byte_start":22592,"byte_end":22644,"line_start":142,"line_end":142,"column_start":1,"column_end":53}},{"value":"/ let mut sock = TcpStream::connect(listener.local_addr()?)?;","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.8.4\\src\\poll.rs","byte_start":22645,"byte_end":22708,"line_start":143,"line_end":143,"column_start":1,"column_end":64}},{"value":"/","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.8.4\\src\\poll.rs","byte_start":22709,"byte_end":22712,"line_start":144,"line_end":144,"column_start":1,"column_end":4}},{"value":"/ thread::sleep(Duration::from_secs(1));","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.8.4\\src\\poll.rs","byte_start":22713,"byte_end":22755,"line_start":145,"line_end":145,"column_start":1,"column_end":43}},{"value":"/","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.8.4\\src\\poll.rs","byte_start":22756,"byte_end":22759,"line_start":146,"line_end":146,"column_start":1,"column_end":4}},{"value":"/ let poll = Poll::new()?;","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.8.4\\src\\poll.rs","byte_start":22760,"byte_end":22788,"line_start":147,"line_end":147,"column_start":1,"column_end":29}},{"value":"/","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.8.4\\src\\poll.rs","byte_start":22789,"byte_end":22792,"line_start":148,"line_end":148,"column_start":1,"column_end":4}},{"value":"/ // The connect is not guaranteed to have started until it is registered at","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.8.4\\src\\poll.rs","byte_start":22793,"byte_end":22871,"line_start":149,"line_end":149,"column_start":1,"column_end":79}},{"value":"/ // this point","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.8.4\\src\\poll.rs","byte_start":22872,"byte_end":22889,"line_start":150,"line_end":150,"column_start":1,"column_end":18}},{"value":"/ poll.registry().register(&mut sock, Token(0), Interest::READABLE | Interest::WRITABLE)?;","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.8.4\\src\\poll.rs","byte_start":22890,"byte_end":22982,"line_start":151,"line_end":151,"column_start":1,"column_end":93}},{"value":"/ #     Ok(())","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.8.4\\src\\poll.rs","byte_start":22983,"byte_end":22999,"line_start":152,"line_end":152,"column_start":1,"column_end":17}},{"value":"/ # }","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.8.4\\src\\poll.rs","byte_start":23000,"byte_end":23007,"line_start":153,"line_end":153,"column_start":1,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.8.4\\src\\poll.rs","byte_start":23008,"byte_end":23015,"line_start":154,"line_end":154,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.8.4\\src\\poll.rs","byte_start":23016,"byte_end":23019,"line_start":155,"line_end":155,"column_start":1,"column_end":4}},{"value":"/ ### Dropping `Poll`","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.8.4\\src\\poll.rs","byte_start":23020,"byte_end":23043,"line_start":156,"line_end":156,"column_start":1,"column_end":24}},{"value":"/","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.8.4\\src\\poll.rs","byte_start":23044,"byte_end":23047,"line_start":157,"line_end":157,"column_start":1,"column_end":4}},{"value":"/ When the `Poll` instance is dropped it may cancel in-flight operations for","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.8.4\\src\\poll.rs","byte_start":23048,"byte_end":23126,"line_start":158,"line_end":158,"column_start":1,"column_end":79}},{"value":"/ the registered [event sources], meaning that no further events for them may","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.8.4\\src\\poll.rs","byte_start":23127,"byte_end":23206,"line_start":159,"line_end":159,"column_start":1,"column_end":80}},{"value":"/ be received. It also means operations on the registered event sources may no","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.8.4\\src\\poll.rs","byte_start":23207,"byte_end":23287,"line_start":160,"line_end":160,"column_start":1,"column_end":81}},{"value":"/ longer work. It is up to the user to keep the `Poll` instance alive while","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.8.4\\src\\poll.rs","byte_start":23288,"byte_end":23365,"line_start":161,"line_end":161,"column_start":1,"column_end":78}},{"value":"/ registered event sources are being used.","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.8.4\\src\\poll.rs","byte_start":23366,"byte_end":23410,"line_start":162,"line_end":162,"column_start":1,"column_end":45}},{"value":"/","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.8.4\\src\\poll.rs","byte_start":23411,"byte_end":23414,"line_start":163,"line_end":163,"column_start":1,"column_end":4}},{"value":"/ [event sources]: ./event/trait.Source.html","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.8.4\\src\\poll.rs","byte_start":23415,"byte_end":23461,"line_start":164,"line_end":164,"column_start":1,"column_end":47}},{"value":"/","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.8.4\\src\\poll.rs","byte_start":23462,"byte_end":23465,"line_start":165,"line_end":165,"column_start":1,"column_end":4}},{"value":"/ ### Accessing raw fd/socket/handle","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.8.4\\src\\poll.rs","byte_start":23466,"byte_end":23504,"line_start":166,"line_end":166,"column_start":1,"column_end":39}},{"value":"/","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.8.4\\src\\poll.rs","byte_start":23505,"byte_end":23508,"line_start":167,"line_end":167,"column_start":1,"column_end":4}},{"value":"/ Mio makes it possible for many types to be converted into a raw file","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.8.4\\src\\poll.rs","byte_start":23509,"byte_end":23581,"line_start":168,"line_end":168,"column_start":1,"column_end":73}},{"value":"/ descriptor (fd, Unix), socket (Windows) or handle (Windows). This makes it","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.8.4\\src\\poll.rs","byte_start":23582,"byte_end":23660,"line_start":169,"line_end":169,"column_start":1,"column_end":79}},{"value":"/ possible to support more operations on the type than Mio supports, for","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.8.4\\src\\poll.rs","byte_start":23661,"byte_end":23735,"line_start":170,"line_end":170,"column_start":1,"column_end":75}},{"value":"/ example it makes [mio-aio] possible. However accessing the raw fd is not","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.8.4\\src\\poll.rs","byte_start":23736,"byte_end":23812,"line_start":171,"line_end":171,"column_start":1,"column_end":77}},{"value":"/ without it's pitfalls.","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.8.4\\src\\poll.rs","byte_start":23813,"byte_end":23839,"line_start":172,"line_end":172,"column_start":1,"column_end":27}},{"value":"/","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.8.4\\src\\poll.rs","byte_start":23840,"byte_end":23843,"line_start":173,"line_end":173,"column_start":1,"column_end":4}},{"value":"/ Specifically performing I/O operations outside of Mio on these types (via","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.8.4\\src\\poll.rs","byte_start":23844,"byte_end":23921,"line_start":174,"line_end":174,"column_start":1,"column_end":78}},{"value":"/ the raw fd) has unspecified behaviour. It could cause no more events to be","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.8.4\\src\\poll.rs","byte_start":23922,"byte_end":24000,"line_start":175,"line_end":175,"column_start":1,"column_end":79}},{"value":"/ generated for the type even though it returned `WouldBlock` (in an operation","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.8.4\\src\\poll.rs","byte_start":24001,"byte_end":24081,"line_start":176,"line_end":176,"column_start":1,"column_end":81}},{"value":"/ directly accessing the fd). The behaviour is OS specific and Mio can only","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.8.4\\src\\poll.rs","byte_start":24082,"byte_end":24159,"line_start":177,"line_end":177,"column_start":1,"column_end":78}},{"value":"/ guarantee cross-platform behaviour if it can control the I/O.","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.8.4\\src\\poll.rs","byte_start":24160,"byte_end":24225,"line_start":178,"line_end":178,"column_start":1,"column_end":66}},{"value":"/","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.8.4\\src\\poll.rs","byte_start":24226,"byte_end":24229,"line_start":179,"line_end":179,"column_start":1,"column_end":4}},{"value":"/ [mio-aio]: https://github.com/asomers/mio-aio","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.8.4\\src\\poll.rs","byte_start":24230,"byte_end":24279,"line_start":180,"line_end":180,"column_start":1,"column_end":50}},{"value":"/","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.8.4\\src\\poll.rs","byte_start":24280,"byte_end":24283,"line_start":181,"line_end":181,"column_start":1,"column_end":4}},{"value":"/ *The following is **not** guaranteed, just a description of the current","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.8.4\\src\\poll.rs","byte_start":24284,"byte_end":24359,"line_start":182,"line_end":182,"column_start":1,"column_end":76}},{"value":"/ situation!* Mio is allowed to change the following without it being considered","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.8.4\\src\\poll.rs","byte_start":24360,"byte_end":24442,"line_start":183,"line_end":183,"column_start":1,"column_end":83}},{"value":"/ a breaking change, don't depend on this, it's just here to inform the user.","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.8.4\\src\\poll.rs","byte_start":24443,"byte_end":24522,"line_start":184,"line_end":184,"column_start":1,"column_end":80}},{"value":"/ Currently the kqueue and epoll implementation support direct I/O operations","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.8.4\\src\\poll.rs","byte_start":24523,"byte_end":24602,"line_start":185,"line_end":185,"column_start":1,"column_end":80}},{"value":"/ on the fd without Mio's knowledge. Windows however needs **all** I/O","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.8.4\\src\\poll.rs","byte_start":24603,"byte_end":24675,"line_start":186,"line_end":186,"column_start":1,"column_end":73}},{"value":"/ operations to go through Mio otherwise it is not able to update it's","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.8.4\\src\\poll.rs","byte_start":24676,"byte_end":24748,"line_start":187,"line_end":187,"column_start":1,"column_end":73}},{"value":"/ internal state properly and won't generate events.","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.8.4\\src\\poll.rs","byte_start":24749,"byte_end":24803,"line_start":188,"line_end":188,"column_start":1,"column_end":55}},{"value":"/","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.8.4\\src\\poll.rs","byte_start":24804,"byte_end":24807,"line_start":189,"line_end":189,"column_start":1,"column_end":4}},{"value":"/ ### Polling without registering event sources","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.8.4\\src\\poll.rs","byte_start":24808,"byte_end":24857,"line_start":190,"line_end":190,"column_start":1,"column_end":50}},{"value":"/","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.8.4\\src\\poll.rs","byte_start":24858,"byte_end":24861,"line_start":191,"line_end":191,"column_start":1,"column_end":4}},{"value":"/","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.8.4\\src\\poll.rs","byte_start":24862,"byte_end":24865,"line_start":192,"line_end":192,"column_start":1,"column_end":4}},{"value":"/ *The following is **not** guaranteed, just a description of the current","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.8.4\\src\\poll.rs","byte_start":24866,"byte_end":24941,"line_start":193,"line_end":193,"column_start":1,"column_end":76}},{"value":"/ situation!* Mio is allowed to change the following without it being","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.8.4\\src\\poll.rs","byte_start":24942,"byte_end":25013,"line_start":194,"line_end":194,"column_start":1,"column_end":72}},{"value":"/ considered a breaking change, don't depend on this, it's just here to inform","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.8.4\\src\\poll.rs","byte_start":25014,"byte_end":25094,"line_start":195,"line_end":195,"column_start":1,"column_end":81}},{"value":"/ the user. On platforms that use epoll, kqueue or IOCP (see implementation","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.8.4\\src\\poll.rs","byte_start":25095,"byte_end":25172,"line_start":196,"line_end":196,"column_start":1,"column_end":78}},{"value":"/ notes below) polling without previously registering [event sources] will","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.8.4\\src\\poll.rs","byte_start":25173,"byte_end":25249,"line_start":197,"line_end":197,"column_start":1,"column_end":77}},{"value":"/ result in sleeping forever, only a process signal will be able to wake up","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.8.4\\src\\poll.rs","byte_start":25250,"byte_end":25327,"line_start":198,"line_end":198,"column_start":1,"column_end":78}},{"value":"/ the thread.","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.8.4\\src\\poll.rs","byte_start":25328,"byte_end":25343,"line_start":199,"line_end":199,"column_start":1,"column_end":16}},{"value":"/","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.8.4\\src\\poll.rs","byte_start":25344,"byte_end":25347,"line_start":200,"line_end":200,"column_start":1,"column_end":4}},{"value":"/ On WASM/WASI this is different as it doesn't support process signals,","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.8.4\\src\\poll.rs","byte_start":25348,"byte_end":25421,"line_start":201,"line_end":201,"column_start":1,"column_end":74}},{"value":"/ furthermore the WASI specification doesn't specify a behaviour in this","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.8.4\\src\\poll.rs","byte_start":25422,"byte_end":25496,"line_start":202,"line_end":202,"column_start":1,"column_end":75}},{"value":"/ situation, thus it's up to the implementation what to do here. As an","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.8.4\\src\\poll.rs","byte_start":25497,"byte_end":25569,"line_start":203,"line_end":203,"column_start":1,"column_end":73}},{"value":"/ example, the wasmtime runtime will return `EINVAL` in this situation, but","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.8.4\\src\\poll.rs","byte_start":25570,"byte_end":25647,"line_start":204,"line_end":204,"column_start":1,"column_end":78}},{"value":"/ different runtimes may return different results. If you have further","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.8.4\\src\\poll.rs","byte_start":25648,"byte_end":25720,"line_start":205,"line_end":205,"column_start":1,"column_end":73}},{"value":"/ insights or thoughts about this situation (and/or how Mio should handle it)","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.8.4\\src\\poll.rs","byte_start":25721,"byte_end":25800,"line_start":206,"line_end":206,"column_start":1,"column_end":80}},{"value":"/ please add you comment to [pull request#1580].","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.8.4\\src\\poll.rs","byte_start":25801,"byte_end":25851,"line_start":207,"line_end":207,"column_start":1,"column_end":51}},{"value":"/","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.8.4\\src\\poll.rs","byte_start":25852,"byte_end":25855,"line_start":208,"line_end":208,"column_start":1,"column_end":4}},{"value":"/ [event sources]: crate::event::Source","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.8.4\\src\\poll.rs","byte_start":25856,"byte_end":25897,"line_start":209,"line_end":209,"column_start":1,"column_end":42}},{"value":"/ [pull request#1580]: https://github.com/tokio-rs/mio/pull/1580","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.8.4\\src\\poll.rs","byte_start":25898,"byte_end":25964,"line_start":210,"line_end":210,"column_start":1,"column_end":67}},{"value":"/","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.8.4\\src\\poll.rs","byte_start":25965,"byte_end":25968,"line_start":211,"line_end":211,"column_start":1,"column_end":4}},{"value":"/ # Implementation notes","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.8.4\\src\\poll.rs","byte_start":25969,"byte_end":25995,"line_start":212,"line_end":212,"column_start":1,"column_end":27}},{"value":"/","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.8.4\\src\\poll.rs","byte_start":25996,"byte_end":25999,"line_start":213,"line_end":213,"column_start":1,"column_end":4}},{"value":"/ `Poll` is backed by the selector provided by the operating system.","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.8.4\\src\\poll.rs","byte_start":26000,"byte_end":26070,"line_start":214,"line_end":214,"column_start":1,"column_end":71}},{"value":"/","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.8.4\\src\\poll.rs","byte_start":26071,"byte_end":26074,"line_start":215,"line_end":215,"column_start":1,"column_end":4}},{"value":"/ |      OS       |  Selector |","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.8.4\\src\\poll.rs","byte_start":26075,"byte_end":26108,"line_start":216,"line_end":216,"column_start":1,"column_end":34}},{"value":"/ |---------------|-----------|","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.8.4\\src\\poll.rs","byte_start":26109,"byte_end":26142,"line_start":217,"line_end":217,"column_start":1,"column_end":34}},{"value":"/ | Android       | [epoll]   |","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.8.4\\src\\poll.rs","byte_start":26143,"byte_end":26176,"line_start":218,"line_end":218,"column_start":1,"column_end":34}},{"value":"/ | DragonFly BSD | [kqueue]  |","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.8.4\\src\\poll.rs","byte_start":26177,"byte_end":26210,"line_start":219,"line_end":219,"column_start":1,"column_end":34}},{"value":"/ | FreeBSD       | [kqueue]  |","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.8.4\\src\\poll.rs","byte_start":26211,"byte_end":26244,"line_start":220,"line_end":220,"column_start":1,"column_end":34}},{"value":"/ | iOS           | [kqueue]  |","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.8.4\\src\\poll.rs","byte_start":26245,"byte_end":26278,"line_start":221,"line_end":221,"column_start":1,"column_end":34}},{"value":"/ | illumos       | [epoll]   |","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.8.4\\src\\poll.rs","byte_start":26279,"byte_end":26312,"line_start":222,"line_end":222,"column_start":1,"column_end":34}},{"value":"/ | Linux         | [epoll]   |","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.8.4\\src\\poll.rs","byte_start":26313,"byte_end":26346,"line_start":223,"line_end":223,"column_start":1,"column_end":34}},{"value":"/ | NetBSD        | [kqueue]  |","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.8.4\\src\\poll.rs","byte_start":26347,"byte_end":26380,"line_start":224,"line_end":224,"column_start":1,"column_end":34}},{"value":"/ | OpenBSD       | [kqueue]  |","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.8.4\\src\\poll.rs","byte_start":26381,"byte_end":26414,"line_start":225,"line_end":225,"column_start":1,"column_end":34}},{"value":"/ | Windows       | [IOCP]    |","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.8.4\\src\\poll.rs","byte_start":26415,"byte_end":26448,"line_start":226,"line_end":226,"column_start":1,"column_end":34}},{"value":"/ | macOS         | [kqueue]  |","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.8.4\\src\\poll.rs","byte_start":26449,"byte_end":26482,"line_start":227,"line_end":227,"column_start":1,"column_end":34}},{"value":"/","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.8.4\\src\\poll.rs","byte_start":26483,"byte_end":26486,"line_start":228,"line_end":228,"column_start":1,"column_end":4}},{"value":"/ On all supported platforms, socket operations are handled by using the","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.8.4\\src\\poll.rs","byte_start":26487,"byte_end":26561,"line_start":229,"line_end":229,"column_start":1,"column_end":75}},{"value":"/ system selector. Platform specific extensions (e.g. [`SourceFd`]) allow","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.8.4\\src\\poll.rs","byte_start":26562,"byte_end":26637,"line_start":230,"line_end":230,"column_start":1,"column_end":76}},{"value":"/ accessing other features provided by individual system selectors. For","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.8.4\\src\\poll.rs","byte_start":26638,"byte_end":26711,"line_start":231,"line_end":231,"column_start":1,"column_end":74}},{"value":"/ example, Linux's [`signalfd`] feature can be used by registering the FD with","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.8.4\\src\\poll.rs","byte_start":26712,"byte_end":26792,"line_start":232,"line_end":232,"column_start":1,"column_end":81}},{"value":"/ `Poll` via [`SourceFd`].","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.8.4\\src\\poll.rs","byte_start":26793,"byte_end":26821,"line_start":233,"line_end":233,"column_start":1,"column_end":29}},{"value":"/","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.8.4\\src\\poll.rs","byte_start":26822,"byte_end":26825,"line_start":234,"line_end":234,"column_start":1,"column_end":4}},{"value":"/ On all platforms except windows, a call to [`Poll::poll`] is mostly just a","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.8.4\\src\\poll.rs","byte_start":26826,"byte_end":26904,"line_start":235,"line_end":235,"column_start":1,"column_end":79}},{"value":"/ direct call to the system selector. However, [IOCP] uses a completion model","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.8.4\\src\\poll.rs","byte_start":26905,"byte_end":26984,"line_start":236,"line_end":236,"column_start":1,"column_end":80}},{"value":"/ instead of a readiness model. In this case, `Poll` must adapt the completion","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.8.4\\src\\poll.rs","byte_start":26985,"byte_end":27065,"line_start":237,"line_end":237,"column_start":1,"column_end":81}},{"value":"/ model Mio's API. While non-trivial, the bridge layer is still quite","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.8.4\\src\\poll.rs","byte_start":27066,"byte_end":27137,"line_start":238,"line_end":238,"column_start":1,"column_end":72}},{"value":"/ efficient. The most expensive part being calls to `read` and `write` require","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.8.4\\src\\poll.rs","byte_start":27138,"byte_end":27218,"line_start":239,"line_end":239,"column_start":1,"column_end":81}},{"value":"/ data to be copied into an intermediate buffer before it is passed to the","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.8.4\\src\\poll.rs","byte_start":27219,"byte_end":27295,"line_start":240,"line_end":240,"column_start":1,"column_end":77}},{"value":"/ kernel.","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.8.4\\src\\poll.rs","byte_start":27296,"byte_end":27307,"line_start":241,"line_end":241,"column_start":1,"column_end":12}},{"value":"/","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.8.4\\src\\poll.rs","byte_start":27308,"byte_end":27311,"line_start":242,"line_end":242,"column_start":1,"column_end":4}},{"value":"/ [epoll]: https://man7.org/linux/man-pages/man7/epoll.7.html","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.8.4\\src\\poll.rs","byte_start":27312,"byte_end":27375,"line_start":243,"line_end":243,"column_start":1,"column_end":64}},{"value":"/ [kqueue]: https://www.freebsd.org/cgi/man.cgi?query=kqueue&sektion=2","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.8.4\\src\\poll.rs","byte_start":27376,"byte_end":27448,"line_start":244,"line_end":244,"column_start":1,"column_end":73}},{"value":"/ [IOCP]: https://docs.microsoft.com/en-us/windows/win32/fileio/i-o-completion-ports","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.8.4\\src\\poll.rs","byte_start":27449,"byte_end":27535,"line_start":245,"line_end":245,"column_start":1,"column_end":87}},{"value":"/ [`signalfd`]: https://man7.org/linux/man-pages/man2/signalfd.2.html","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.8.4\\src\\poll.rs","byte_start":27536,"byte_end":27607,"line_start":246,"line_end":246,"column_start":1,"column_end":72}},{"value":"/ [`SourceFd`]: unix/struct.SourceFd.html","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.8.4\\src\\poll.rs","byte_start":27608,"byte_end":27651,"line_start":247,"line_end":247,"column_start":1,"column_end":44}},{"value":"/ [`Poll::poll`]: struct.Poll.html#method.poll","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.8.4\\src\\poll.rs","byte_start":27652,"byte_end":27700,"line_start":248,"line_end":248,"column_start":1,"column_end":49}}]},{"kind":"Struct","id":{"krate":0,"index":73},"span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.8.4\\src\\poll.rs","byte_start":27786,"byte_end":27794,"line_start":254,"line_end":254,"column_start":12,"column_end":20},"name":"Registry","qualname":"::poll::Registry","value":"Registry {  }","parent":null,"children":[{"krate":0,"index":74}],"decl_id":null,"docs":" Registers I/O resources.\n","sig":null,"attributes":[{"value":"/ Registers I/O resources.","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.8.4\\src\\poll.rs","byte_start":27746,"byte_end":27774,"line_start":253,"line_end":253,"column_start":1,"column_end":29}}]},{"kind":"Method","id":{"krate":0,"index":257},"span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.8.4\\src\\poll.rs","byte_start":29109,"byte_end":29112,"line_start":293,"line_end":293,"column_start":16,"column_end":19},"name":"new","qualname":"<Poll>::new","value":"pub fn new() -> io::Result<Poll>","parent":null,"children":[],"decl_id":null,"docs":" Return a new `Poll` handle.","sig":null,"attributes":[{"value":"cfg(feature = \"os-poll\")","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.8.4\\src\\macros.rs","byte_start":9773,"byte_end":9800,"line_start":10,"line_end":10,"column_start":13,"column_end":40}}]},{"kind":"Method","id":{"krate":0,"index":76},"span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.8.4\\src\\poll.rs","byte_start":29377,"byte_end":29385,"line_start":302,"line_end":302,"column_start":12,"column_end":20},"name":"registry","qualname":"<Poll>::registry","value":"pub fn registry(&Self) -> &Registry","parent":null,"children":[],"decl_id":null,"docs":" Create a separate `Registry` which can be used to register\n `event::Source`s.\n","sig":null,"attributes":[{"value":"/ Create a separate `Registry` which can be used to register","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.8.4\\src\\poll.rs","byte_start":29277,"byte_end":29339,"line_start":300,"line_end":300,"column_start":5,"column_end":67}},{"value":"/ `event::Source`s.","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.8.4\\src\\poll.rs","byte_start":29344,"byte_end":29365,"line_start":301,"line_end":301,"column_start":5,"column_end":26}}]},{"kind":"Method","id":{"krate":0,"index":77},"span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.8.4\\src\\poll.rs","byte_start":33305,"byte_end":33309,"line_start":399,"line_end":399,"column_start":12,"column_end":16},"name":"poll","qualname":"<Poll>::poll","value":"pub fn poll(&mut Self, &mut Events, Option<Duration>) -> io::Result<()>","parent":null,"children":[],"decl_id":null,"docs":" Wait for readiness events","sig":null,"attributes":[{"value":"/ Wait for readiness events","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.8.4\\src\\poll.rs","byte_start":29442,"byte_end":29471,"line_start":306,"line_end":306,"column_start":5,"column_end":34}},{"value":"/","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.8.4\\src\\poll.rs","byte_start":29476,"byte_end":29479,"line_start":307,"line_end":307,"column_start":5,"column_end":8}},{"value":"/ Blocks the current thread and waits for readiness events for any of the","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.8.4\\src\\poll.rs","byte_start":29484,"byte_end":29559,"line_start":308,"line_end":308,"column_start":5,"column_end":80}},{"value":"/ [`event::Source`]s that have been registered with this `Poll` instance.","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.8.4\\src\\poll.rs","byte_start":29564,"byte_end":29639,"line_start":309,"line_end":309,"column_start":5,"column_end":80}},{"value":"/ The function will block until either at least one readiness event has","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.8.4\\src\\poll.rs","byte_start":29644,"byte_end":29717,"line_start":310,"line_end":310,"column_start":5,"column_end":78}},{"value":"/ been received or `timeout` has elapsed. A `timeout` of `None` means that","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.8.4\\src\\poll.rs","byte_start":29722,"byte_end":29798,"line_start":311,"line_end":311,"column_start":5,"column_end":81}},{"value":"/ `poll` will block until a readiness event has been received.","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.8.4\\src\\poll.rs","byte_start":29803,"byte_end":29867,"line_start":312,"line_end":312,"column_start":5,"column_end":69}},{"value":"/","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.8.4\\src\\poll.rs","byte_start":29872,"byte_end":29875,"line_start":313,"line_end":313,"column_start":5,"column_end":8}},{"value":"/ The supplied `events` will be cleared and newly received readiness events","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.8.4\\src\\poll.rs","byte_start":29880,"byte_end":29957,"line_start":314,"line_end":314,"column_start":5,"column_end":82}},{"value":"/ will be pushed onto the end. At most `events.capacity()` events will be","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.8.4\\src\\poll.rs","byte_start":29962,"byte_end":30037,"line_start":315,"line_end":315,"column_start":5,"column_end":80}},{"value":"/ returned. If there are further pending readiness events, they will be","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.8.4\\src\\poll.rs","byte_start":30042,"byte_end":30115,"line_start":316,"line_end":316,"column_start":5,"column_end":78}},{"value":"/ returned on the next call to `poll`.","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.8.4\\src\\poll.rs","byte_start":30120,"byte_end":30160,"line_start":317,"line_end":317,"column_start":5,"column_end":45}},{"value":"/","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.8.4\\src\\poll.rs","byte_start":30165,"byte_end":30168,"line_start":318,"line_end":318,"column_start":5,"column_end":8}},{"value":"/ A single call to `poll` may result in multiple readiness events being","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.8.4\\src\\poll.rs","byte_start":30173,"byte_end":30246,"line_start":319,"line_end":319,"column_start":5,"column_end":78}},{"value":"/ returned for a single event source. For example, if a TCP socket becomes","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.8.4\\src\\poll.rs","byte_start":30251,"byte_end":30327,"line_start":320,"line_end":320,"column_start":5,"column_end":81}},{"value":"/ both readable and writable, it may be possible for a single readiness","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.8.4\\src\\poll.rs","byte_start":30332,"byte_end":30405,"line_start":321,"line_end":321,"column_start":5,"column_end":78}},{"value":"/ event to be returned with both [`readable`] and [`writable`] readiness","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.8.4\\src\\poll.rs","byte_start":30410,"byte_end":30484,"line_start":322,"line_end":322,"column_start":5,"column_end":79}},{"value":"/ **OR** two separate events may be returned, one with [`readable`] set","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.8.4\\src\\poll.rs","byte_start":30489,"byte_end":30562,"line_start":323,"line_end":323,"column_start":5,"column_end":78}},{"value":"/ and one with [`writable`] set.","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.8.4\\src\\poll.rs","byte_start":30567,"byte_end":30601,"line_start":324,"line_end":324,"column_start":5,"column_end":39}},{"value":"/","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.8.4\\src\\poll.rs","byte_start":30606,"byte_end":30609,"line_start":325,"line_end":325,"column_start":5,"column_end":8}},{"value":"/ Note that the `timeout` will be rounded up to the system clock","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.8.4\\src\\poll.rs","byte_start":30614,"byte_end":30680,"line_start":326,"line_end":326,"column_start":5,"column_end":71}},{"value":"/ granularity (usually 1ms), and kernel scheduling delays mean that","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.8.4\\src\\poll.rs","byte_start":30685,"byte_end":30754,"line_start":327,"line_end":327,"column_start":5,"column_end":74}},{"value":"/ the blocking interval may be overrun by a small amount.","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.8.4\\src\\poll.rs","byte_start":30759,"byte_end":30818,"line_start":328,"line_end":328,"column_start":5,"column_end":64}},{"value":"/","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.8.4\\src\\poll.rs","byte_start":30823,"byte_end":30826,"line_start":329,"line_end":329,"column_start":5,"column_end":8}},{"value":"/ See the [struct] level documentation for a higher level discussion of","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.8.4\\src\\poll.rs","byte_start":30831,"byte_end":30904,"line_start":330,"line_end":330,"column_start":5,"column_end":78}},{"value":"/ polling.","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.8.4\\src\\poll.rs","byte_start":30909,"byte_end":30921,"line_start":331,"line_end":331,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.8.4\\src\\poll.rs","byte_start":30926,"byte_end":30929,"line_start":332,"line_end":332,"column_start":5,"column_end":8}},{"value":"/ [`event::Source`]: ./event/trait.Source.html","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.8.4\\src\\poll.rs","byte_start":30934,"byte_end":30982,"line_start":333,"line_end":333,"column_start":5,"column_end":53}},{"value":"/ [`readable`]: struct.Interest.html#associatedconstant.READABLE","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.8.4\\src\\poll.rs","byte_start":30987,"byte_end":31053,"line_start":334,"line_end":334,"column_start":5,"column_end":71}},{"value":"/ [`writable`]: struct.Interest.html#associatedconstant.WRITABLE","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.8.4\\src\\poll.rs","byte_start":31058,"byte_end":31124,"line_start":335,"line_end":335,"column_start":5,"column_end":71}},{"value":"/ [struct]: struct.Poll.html","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.8.4\\src\\poll.rs","byte_start":31129,"byte_end":31159,"line_start":336,"line_end":336,"column_start":5,"column_end":35}},{"value":"/ [`iter`]: ./event/struct.Events.html#method.iter","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.8.4\\src\\poll.rs","byte_start":31164,"byte_end":31216,"line_start":337,"line_end":337,"column_start":5,"column_end":57}},{"value":"/","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.8.4\\src\\poll.rs","byte_start":31221,"byte_end":31224,"line_start":338,"line_end":338,"column_start":5,"column_end":8}},{"value":"/ # Notes","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.8.4\\src\\poll.rs","byte_start":31229,"byte_end":31240,"line_start":339,"line_end":339,"column_start":5,"column_end":16}},{"value":"/","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.8.4\\src\\poll.rs","byte_start":31245,"byte_end":31248,"line_start":340,"line_end":340,"column_start":5,"column_end":8}},{"value":"/ This returns any errors without attempting to retry, previous versions","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.8.4\\src\\poll.rs","byte_start":31253,"byte_end":31327,"line_start":341,"line_end":341,"column_start":5,"column_end":79}},{"value":"/ of Mio would automatically retry the poll call if it was interrupted","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.8.4\\src\\poll.rs","byte_start":31332,"byte_end":31404,"line_start":342,"line_end":342,"column_start":5,"column_end":77}},{"value":"/ (if `EINTR` was returned).","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.8.4\\src\\poll.rs","byte_start":31409,"byte_end":31439,"line_start":343,"line_end":343,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.8.4\\src\\poll.rs","byte_start":31444,"byte_end":31447,"line_start":344,"line_end":344,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.8.4\\src\\poll.rs","byte_start":31452,"byte_end":31466,"line_start":345,"line_end":345,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.8.4\\src\\poll.rs","byte_start":31471,"byte_end":31474,"line_start":346,"line_end":346,"column_start":5,"column_end":8}},{"value":"/ A basic example -- establishing a `TcpStream` connection.","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.8.4\\src\\poll.rs","byte_start":31479,"byte_end":31540,"line_start":347,"line_end":347,"column_start":5,"column_end":66}},{"value":"/","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.8.4\\src\\poll.rs","byte_start":31545,"byte_end":31548,"line_start":348,"line_end":348,"column_start":5,"column_end":8}},{"value":"/ # use std::error::Error;","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.8.4\\src\\poll.rs","byte_start":31708,"byte_end":31736,"line_start":351,"line_end":351,"column_start":5,"column_end":33}},{"value":"/ # fn main() -> Result<(), Box<dyn Error>> {","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.8.4\\src\\poll.rs","byte_start":31741,"byte_end":31788,"line_start":352,"line_end":352,"column_start":5,"column_end":52}},{"value":"/ use mio::{Events, Poll, Interest, Token};","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.8.4\\src\\poll.rs","byte_start":31793,"byte_end":31838,"line_start":353,"line_end":353,"column_start":5,"column_end":50}},{"value":"/ use mio::net::TcpStream;","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.8.4\\src\\poll.rs","byte_start":31843,"byte_end":31871,"line_start":354,"line_end":354,"column_start":5,"column_end":33}},{"value":"/","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.8.4\\src\\poll.rs","byte_start":31876,"byte_end":31879,"line_start":355,"line_end":355,"column_start":5,"column_end":8}},{"value":"/ use std::net::{TcpListener, SocketAddr};","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.8.4\\src\\poll.rs","byte_start":31884,"byte_end":31928,"line_start":356,"line_end":356,"column_start":5,"column_end":49}},{"value":"/ use std::thread;","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.8.4\\src\\poll.rs","byte_start":31933,"byte_end":31953,"line_start":357,"line_end":357,"column_start":5,"column_end":25}},{"value":"/","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.8.4\\src\\poll.rs","byte_start":31958,"byte_end":31961,"line_start":358,"line_end":358,"column_start":5,"column_end":8}},{"value":"/ // Bind a server socket to connect to.","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.8.4\\src\\poll.rs","byte_start":31966,"byte_end":32008,"line_start":359,"line_end":359,"column_start":5,"column_end":47}},{"value":"/ let addr: SocketAddr = \"127.0.0.1:0\".parse()?;","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.8.4\\src\\poll.rs","byte_start":32013,"byte_end":32063,"line_start":360,"line_end":360,"column_start":5,"column_end":55}},{"value":"/ let server = TcpListener::bind(addr)?;","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.8.4\\src\\poll.rs","byte_start":32068,"byte_end":32110,"line_start":361,"line_end":361,"column_start":5,"column_end":47}},{"value":"/ let addr = server.local_addr()?.clone();","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.8.4\\src\\poll.rs","byte_start":32115,"byte_end":32159,"line_start":362,"line_end":362,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.8.4\\src\\poll.rs","byte_start":32164,"byte_end":32167,"line_start":363,"line_end":363,"column_start":5,"column_end":8}},{"value":"/ // Spawn a thread to accept the socket","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.8.4\\src\\poll.rs","byte_start":32172,"byte_end":32214,"line_start":364,"line_end":364,"column_start":5,"column_end":47}},{"value":"/ thread::spawn(move || {","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.8.4\\src\\poll.rs","byte_start":32219,"byte_end":32246,"line_start":365,"line_end":365,"column_start":5,"column_end":32}},{"value":"/     let _ = server.accept();","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.8.4\\src\\poll.rs","byte_start":32251,"byte_end":32283,"line_start":366,"line_end":366,"column_start":5,"column_end":37}},{"value":"/ });","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.8.4\\src\\poll.rs","byte_start":32288,"byte_end":32295,"line_start":367,"line_end":367,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.8.4\\src\\poll.rs","byte_start":32300,"byte_end":32303,"line_start":368,"line_end":368,"column_start":5,"column_end":8}},{"value":"/ // Construct a new `Poll` handle as well as the `Events` we'll store into","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.8.4\\src\\poll.rs","byte_start":32308,"byte_end":32385,"line_start":369,"line_end":369,"column_start":5,"column_end":82}},{"value":"/ let mut poll = Poll::new()?;","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.8.4\\src\\poll.rs","byte_start":32390,"byte_end":32422,"line_start":370,"line_end":370,"column_start":5,"column_end":37}},{"value":"/ let mut events = Events::with_capacity(1024);","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.8.4\\src\\poll.rs","byte_start":32427,"byte_end":32476,"line_start":371,"line_end":371,"column_start":5,"column_end":54}},{"value":"/","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.8.4\\src\\poll.rs","byte_start":32481,"byte_end":32484,"line_start":372,"line_end":372,"column_start":5,"column_end":8}},{"value":"/ // Connect the stream","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.8.4\\src\\poll.rs","byte_start":32489,"byte_end":32514,"line_start":373,"line_end":373,"column_start":5,"column_end":30}},{"value":"/ let mut stream = TcpStream::connect(addr)?;","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.8.4\\src\\poll.rs","byte_start":32519,"byte_end":32566,"line_start":374,"line_end":374,"column_start":5,"column_end":52}},{"value":"/","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.8.4\\src\\poll.rs","byte_start":32571,"byte_end":32574,"line_start":375,"line_end":375,"column_start":5,"column_end":8}},{"value":"/ // Register the stream with `Poll`","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.8.4\\src\\poll.rs","byte_start":32579,"byte_end":32617,"line_start":376,"line_end":376,"column_start":5,"column_end":43}},{"value":"/ poll.registry().register(","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.8.4\\src\\poll.rs","byte_start":32622,"byte_end":32651,"line_start":377,"line_end":377,"column_start":5,"column_end":34}},{"value":"/     &mut stream,","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.8.4\\src\\poll.rs","byte_start":32656,"byte_end":32676,"line_start":378,"line_end":378,"column_start":5,"column_end":25}},{"value":"/     Token(0),","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.8.4\\src\\poll.rs","byte_start":32681,"byte_end":32698,"line_start":379,"line_end":379,"column_start":5,"column_end":22}},{"value":"/     Interest::READABLE | Interest::WRITABLE)?;","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.8.4\\src\\poll.rs","byte_start":32703,"byte_end":32753,"line_start":380,"line_end":380,"column_start":5,"column_end":55}},{"value":"/","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.8.4\\src\\poll.rs","byte_start":32758,"byte_end":32761,"line_start":381,"line_end":381,"column_start":5,"column_end":8}},{"value":"/ // Wait for the socket to become ready. This has to happens in a loop to","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.8.4\\src\\poll.rs","byte_start":32766,"byte_end":32842,"line_start":382,"line_end":382,"column_start":5,"column_end":81}},{"value":"/ // handle spurious wakeups.","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.8.4\\src\\poll.rs","byte_start":32847,"byte_end":32878,"line_start":383,"line_end":383,"column_start":5,"column_end":36}},{"value":"/ loop {","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.8.4\\src\\poll.rs","byte_start":32883,"byte_end":32893,"line_start":384,"line_end":384,"column_start":5,"column_end":15}},{"value":"/     poll.poll(&mut events, None)?;","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.8.4\\src\\poll.rs","byte_start":32898,"byte_end":32936,"line_start":385,"line_end":385,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.8.4\\src\\poll.rs","byte_start":32941,"byte_end":32944,"line_start":386,"line_end":386,"column_start":5,"column_end":8}},{"value":"/     for event in &events {","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.8.4\\src\\poll.rs","byte_start":32949,"byte_end":32979,"line_start":387,"line_end":387,"column_start":5,"column_end":35}},{"value":"/         if event.token() == Token(0) && event.is_writable() {","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.8.4\\src\\poll.rs","byte_start":32984,"byte_end":33049,"line_start":388,"line_end":388,"column_start":5,"column_end":70}},{"value":"/             // The socket connected (probably, it could still be a spurious","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.8.4\\src\\poll.rs","byte_start":33054,"byte_end":33133,"line_start":389,"line_end":389,"column_start":5,"column_end":84}},{"value":"/             // wakeup)","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.8.4\\src\\poll.rs","byte_start":33138,"byte_end":33164,"line_start":390,"line_end":390,"column_start":5,"column_end":31}},{"value":"/             return Ok(());","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.8.4\\src\\poll.rs","byte_start":33169,"byte_end":33199,"line_start":391,"line_end":391,"column_start":5,"column_end":35}},{"value":"/         }","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.8.4\\src\\poll.rs","byte_start":33204,"byte_end":33217,"line_start":392,"line_end":392,"column_start":5,"column_end":18}},{"value":"/     }","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.8.4\\src\\poll.rs","byte_start":33222,"byte_end":33231,"line_start":393,"line_end":393,"column_start":5,"column_end":14}},{"value":"/ }","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.8.4\\src\\poll.rs","byte_start":33236,"byte_end":33241,"line_start":394,"line_end":394,"column_start":5,"column_end":10}},{"value":"/ # }","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.8.4\\src\\poll.rs","byte_start":33246,"byte_end":33253,"line_start":395,"line_end":395,"column_start":5,"column_end":12}},{"value":"/ ```","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.8.4\\src\\poll.rs","byte_start":33258,"byte_end":33265,"line_start":396,"line_end":396,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.8.4\\src\\poll.rs","byte_start":33270,"byte_end":33273,"line_start":397,"line_end":397,"column_start":5,"column_end":8}},{"value":"/ [struct]: #","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.8.4\\src\\poll.rs","byte_start":33278,"byte_end":33293,"line_start":398,"line_end":398,"column_start":5,"column_end":20}}]},{"kind":"Method","id":{"krate":0,"index":81},"span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.8.4\\src\\poll.rs","byte_start":37733,"byte_end":37741,"line_start":517,"line_end":517,"column_start":12,"column_end":20},"name":"register","qualname":"<Registry>::register","value":"pub fn register<S>(&Self, &mut S, Token, Interest) -> io::Result<()> where\nS: event::Source + ?Sized","parent":null,"children":[],"decl_id":null,"docs":" Register an [`event::Source`] with the `Poll` instance.","sig":null,"attributes":[{"value":"/ Register an [`event::Source`] with the `Poll` instance.","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.8.4\\src\\poll.rs","byte_start":33737,"byte_end":33796,"line_start":418,"line_end":418,"column_start":5,"column_end":64}},{"value":"/","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.8.4\\src\\poll.rs","byte_start":33801,"byte_end":33804,"line_start":419,"line_end":419,"column_start":5,"column_end":8}},{"value":"/ Once registered, the `Poll` instance will monitor the event source for","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.8.4\\src\\poll.rs","byte_start":33809,"byte_end":33883,"line_start":420,"line_end":420,"column_start":5,"column_end":79}},{"value":"/ readiness state changes. When it notices a state change, it will return","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.8.4\\src\\poll.rs","byte_start":33888,"byte_end":33963,"line_start":421,"line_end":421,"column_start":5,"column_end":80}},{"value":"/ a readiness event for the handle the next time [`poll`] is called.","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.8.4\\src\\poll.rs","byte_start":33968,"byte_end":34038,"line_start":422,"line_end":422,"column_start":5,"column_end":75}},{"value":"/","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.8.4\\src\\poll.rs","byte_start":34043,"byte_end":34046,"line_start":423,"line_end":423,"column_start":5,"column_end":8}},{"value":"/ See [`Poll`] docs for a high level overview.","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.8.4\\src\\poll.rs","byte_start":34051,"byte_end":34099,"line_start":424,"line_end":424,"column_start":5,"column_end":53}},{"value":"/","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.8.4\\src\\poll.rs","byte_start":34104,"byte_end":34107,"line_start":425,"line_end":425,"column_start":5,"column_end":8}},{"value":"/ # Arguments","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.8.4\\src\\poll.rs","byte_start":34112,"byte_end":34127,"line_start":426,"line_end":426,"column_start":5,"column_end":20}},{"value":"/","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.8.4\\src\\poll.rs","byte_start":34132,"byte_end":34135,"line_start":427,"line_end":427,"column_start":5,"column_end":8}},{"value":"/ `source: &mut S: event::Source`: This is the source of events that the","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.8.4\\src\\poll.rs","byte_start":34140,"byte_end":34214,"line_start":428,"line_end":428,"column_start":5,"column_end":79}},{"value":"/ `Poll` instance should monitor for readiness state changes.","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.8.4\\src\\poll.rs","byte_start":34219,"byte_end":34282,"line_start":429,"line_end":429,"column_start":5,"column_end":68}},{"value":"/","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.8.4\\src\\poll.rs","byte_start":34287,"byte_end":34290,"line_start":430,"line_end":430,"column_start":5,"column_end":8}},{"value":"/ `token: Token`: The caller picks a token to associate with the socket.","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.8.4\\src\\poll.rs","byte_start":34295,"byte_end":34369,"line_start":431,"line_end":431,"column_start":5,"column_end":79}},{"value":"/ When [`poll`] returns an event for the handle, this token is included.","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.8.4\\src\\poll.rs","byte_start":34374,"byte_end":34448,"line_start":432,"line_end":432,"column_start":5,"column_end":79}},{"value":"/ This allows the caller to map the event to its source. The token","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.8.4\\src\\poll.rs","byte_start":34453,"byte_end":34521,"line_start":433,"line_end":433,"column_start":5,"column_end":73}},{"value":"/ associated with the `event::Source` can be changed at any time by","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.8.4\\src\\poll.rs","byte_start":34526,"byte_end":34595,"line_start":434,"line_end":434,"column_start":5,"column_end":74}},{"value":"/ calling [`reregister`].","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.8.4\\src\\poll.rs","byte_start":34600,"byte_end":34627,"line_start":435,"line_end":435,"column_start":5,"column_end":32}},{"value":"/","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.8.4\\src\\poll.rs","byte_start":34632,"byte_end":34635,"line_start":436,"line_end":436,"column_start":5,"column_end":8}},{"value":"/ See documentation on [`Token`] for an example showing how to pick","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.8.4\\src\\poll.rs","byte_start":34640,"byte_end":34709,"line_start":437,"line_end":437,"column_start":5,"column_end":74}},{"value":"/ [`Token`] values.","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.8.4\\src\\poll.rs","byte_start":34714,"byte_end":34735,"line_start":438,"line_end":438,"column_start":5,"column_end":26}},{"value":"/","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.8.4\\src\\poll.rs","byte_start":34740,"byte_end":34743,"line_start":439,"line_end":439,"column_start":5,"column_end":8}},{"value":"/ `interest: Interest`: Specifies which operations `Poll` should monitor","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.8.4\\src\\poll.rs","byte_start":34748,"byte_end":34822,"line_start":440,"line_end":440,"column_start":5,"column_end":79}},{"value":"/ for readiness. `Poll` will only return readiness events for operations","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.8.4\\src\\poll.rs","byte_start":34827,"byte_end":34901,"line_start":441,"line_end":441,"column_start":5,"column_end":79}},{"value":"/ specified by this argument.","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.8.4\\src\\poll.rs","byte_start":34906,"byte_end":34937,"line_start":442,"line_end":442,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.8.4\\src\\poll.rs","byte_start":34942,"byte_end":34945,"line_start":443,"line_end":443,"column_start":5,"column_end":8}},{"value":"/ If a socket is registered with readable interest and the socket becomes","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.8.4\\src\\poll.rs","byte_start":34950,"byte_end":35025,"line_start":444,"line_end":444,"column_start":5,"column_end":80}},{"value":"/ writable, no event will be returned from [`poll`].","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.8.4\\src\\poll.rs","byte_start":35030,"byte_end":35084,"line_start":445,"line_end":445,"column_start":5,"column_end":59}},{"value":"/","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.8.4\\src\\poll.rs","byte_start":35089,"byte_end":35092,"line_start":446,"line_end":446,"column_start":5,"column_end":8}},{"value":"/ The readiness interest for an `event::Source` can be changed at any time","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.8.4\\src\\poll.rs","byte_start":35097,"byte_end":35173,"line_start":447,"line_end":447,"column_start":5,"column_end":81}},{"value":"/ by calling [`reregister`].","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.8.4\\src\\poll.rs","byte_start":35178,"byte_end":35208,"line_start":448,"line_end":448,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.8.4\\src\\poll.rs","byte_start":35213,"byte_end":35216,"line_start":449,"line_end":449,"column_start":5,"column_end":8}},{"value":"/ # Notes","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.8.4\\src\\poll.rs","byte_start":35221,"byte_end":35232,"line_start":450,"line_end":450,"column_start":5,"column_end":16}},{"value":"/","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.8.4\\src\\poll.rs","byte_start":35237,"byte_end":35240,"line_start":451,"line_end":451,"column_start":5,"column_end":8}},{"value":"/ Callers must ensure that if a source being registered with a `Poll`","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.8.4\\src\\poll.rs","byte_start":35245,"byte_end":35316,"line_start":452,"line_end":452,"column_start":5,"column_end":76}},{"value":"/ instance was previously registered with that `Poll` instance, then a","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.8.4\\src\\poll.rs","byte_start":35321,"byte_end":35393,"line_start":453,"line_end":453,"column_start":5,"column_end":77}},{"value":"/ call to [`deregister`] has already occurred. Consecutive calls to","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.8.4\\src\\poll.rs","byte_start":35398,"byte_end":35467,"line_start":454,"line_end":454,"column_start":5,"column_end":74}},{"value":"/ `register` is unspecified behavior.","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.8.4\\src\\poll.rs","byte_start":35472,"byte_end":35511,"line_start":455,"line_end":455,"column_start":5,"column_end":44}},{"value":"/","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.8.4\\src\\poll.rs","byte_start":35516,"byte_end":35519,"line_start":456,"line_end":456,"column_start":5,"column_end":8}},{"value":"/ Unless otherwise specified, the caller should assume that once an event","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.8.4\\src\\poll.rs","byte_start":35524,"byte_end":35599,"line_start":457,"line_end":457,"column_start":5,"column_end":80}},{"value":"/ source is registered with a `Poll` instance, it is bound to that `Poll`","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.8.4\\src\\poll.rs","byte_start":35604,"byte_end":35679,"line_start":458,"line_end":458,"column_start":5,"column_end":80}},{"value":"/ instance for the lifetime of the event source. This remains true even","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.8.4\\src\\poll.rs","byte_start":35684,"byte_end":35757,"line_start":459,"line_end":459,"column_start":5,"column_end":78}},{"value":"/ if the event source is deregistered from the poll instance using","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.8.4\\src\\poll.rs","byte_start":35762,"byte_end":35830,"line_start":460,"line_end":460,"column_start":5,"column_end":73}},{"value":"/ [`deregister`].","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.8.4\\src\\poll.rs","byte_start":35835,"byte_end":35854,"line_start":461,"line_end":461,"column_start":5,"column_end":24}},{"value":"/","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.8.4\\src\\poll.rs","byte_start":35859,"byte_end":35862,"line_start":462,"line_end":462,"column_start":5,"column_end":8}},{"value":"/ [`event::Source`]: ./event/trait.Source.html","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.8.4\\src\\poll.rs","byte_start":35867,"byte_end":35915,"line_start":463,"line_end":463,"column_start":5,"column_end":53}},{"value":"/ [`poll`]: struct.Poll.html#method.poll","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.8.4\\src\\poll.rs","byte_start":35920,"byte_end":35962,"line_start":464,"line_end":464,"column_start":5,"column_end":47}},{"value":"/ [`reregister`]: struct.Registry.html#method.reregister","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.8.4\\src\\poll.rs","byte_start":35967,"byte_end":36025,"line_start":465,"line_end":465,"column_start":5,"column_end":63}},{"value":"/ [`deregister`]: struct.Registry.html#method.deregister","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.8.4\\src\\poll.rs","byte_start":36030,"byte_end":36088,"line_start":466,"line_end":466,"column_start":5,"column_end":63}},{"value":"/ [`Token`]: struct.Token.html","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.8.4\\src\\poll.rs","byte_start":36093,"byte_end":36125,"line_start":467,"line_end":467,"column_start":5,"column_end":37}},{"value":"/","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.8.4\\src\\poll.rs","byte_start":36130,"byte_end":36133,"line_start":468,"line_end":468,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.8.4\\src\\poll.rs","byte_start":36138,"byte_end":36152,"line_start":469,"line_end":469,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.8.4\\src\\poll.rs","byte_start":36157,"byte_end":36160,"line_start":470,"line_end":470,"column_start":5,"column_end":8}},{"value":"/ # use std::error::Error;","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.8.4\\src\\poll.rs","byte_start":36320,"byte_end":36348,"line_start":473,"line_end":473,"column_start":5,"column_end":33}},{"value":"/ # use std::net;","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.8.4\\src\\poll.rs","byte_start":36353,"byte_end":36372,"line_start":474,"line_end":474,"column_start":5,"column_end":24}},{"value":"/ # fn main() -> Result<(), Box<dyn Error>> {","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.8.4\\src\\poll.rs","byte_start":36377,"byte_end":36424,"line_start":475,"line_end":475,"column_start":5,"column_end":52}},{"value":"/ use mio::{Events, Poll, Interest, Token};","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.8.4\\src\\poll.rs","byte_start":36429,"byte_end":36474,"line_start":476,"line_end":476,"column_start":5,"column_end":50}},{"value":"/ use mio::net::TcpStream;","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.8.4\\src\\poll.rs","byte_start":36479,"byte_end":36507,"line_start":477,"line_end":477,"column_start":5,"column_end":33}},{"value":"/ use std::net::SocketAddr;","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.8.4\\src\\poll.rs","byte_start":36512,"byte_end":36541,"line_start":478,"line_end":478,"column_start":5,"column_end":34}},{"value":"/ use std::time::{Duration, Instant};","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.8.4\\src\\poll.rs","byte_start":36546,"byte_end":36585,"line_start":479,"line_end":479,"column_start":5,"column_end":44}},{"value":"/","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.8.4\\src\\poll.rs","byte_start":36590,"byte_end":36593,"line_start":480,"line_end":480,"column_start":5,"column_end":8}},{"value":"/ let mut poll = Poll::new()?;","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.8.4\\src\\poll.rs","byte_start":36598,"byte_end":36630,"line_start":481,"line_end":481,"column_start":5,"column_end":37}},{"value":"/","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.8.4\\src\\poll.rs","byte_start":36635,"byte_end":36638,"line_start":482,"line_end":482,"column_start":5,"column_end":8}},{"value":"/ let address: SocketAddr = \"127.0.0.1:0\".parse()?;","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.8.4\\src\\poll.rs","byte_start":36643,"byte_end":36696,"line_start":483,"line_end":483,"column_start":5,"column_end":58}},{"value":"/ let listener = net::TcpListener::bind(address)?;","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.8.4\\src\\poll.rs","byte_start":36701,"byte_end":36753,"line_start":484,"line_end":484,"column_start":5,"column_end":57}},{"value":"/ let mut socket = TcpStream::connect(listener.local_addr()?)?;","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.8.4\\src\\poll.rs","byte_start":36758,"byte_end":36823,"line_start":485,"line_end":485,"column_start":5,"column_end":70}},{"value":"/","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.8.4\\src\\poll.rs","byte_start":36828,"byte_end":36831,"line_start":486,"line_end":486,"column_start":5,"column_end":8}},{"value":"/ // Register the socket with `poll`","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.8.4\\src\\poll.rs","byte_start":36836,"byte_end":36874,"line_start":487,"line_end":487,"column_start":5,"column_end":43}},{"value":"/ poll.registry().register(","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.8.4\\src\\poll.rs","byte_start":36879,"byte_end":36908,"line_start":488,"line_end":488,"column_start":5,"column_end":34}},{"value":"/     &mut socket,","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.8.4\\src\\poll.rs","byte_start":36913,"byte_end":36933,"line_start":489,"line_end":489,"column_start":5,"column_end":25}},{"value":"/     Token(0),","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.8.4\\src\\poll.rs","byte_start":36938,"byte_end":36955,"line_start":490,"line_end":490,"column_start":5,"column_end":22}},{"value":"/     Interest::READABLE | Interest::WRITABLE)?;","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.8.4\\src\\poll.rs","byte_start":36960,"byte_end":37010,"line_start":491,"line_end":491,"column_start":5,"column_end":55}},{"value":"/","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.8.4\\src\\poll.rs","byte_start":37015,"byte_end":37018,"line_start":492,"line_end":492,"column_start":5,"column_end":8}},{"value":"/ let mut events = Events::with_capacity(1024);","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.8.4\\src\\poll.rs","byte_start":37023,"byte_end":37072,"line_start":493,"line_end":493,"column_start":5,"column_end":54}},{"value":"/ let start = Instant::now();","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.8.4\\src\\poll.rs","byte_start":37077,"byte_end":37108,"line_start":494,"line_end":494,"column_start":5,"column_end":36}},{"value":"/ let timeout = Duration::from_millis(500);","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.8.4\\src\\poll.rs","byte_start":37113,"byte_end":37158,"line_start":495,"line_end":495,"column_start":5,"column_end":50}},{"value":"/","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.8.4\\src\\poll.rs","byte_start":37163,"byte_end":37166,"line_start":496,"line_end":496,"column_start":5,"column_end":8}},{"value":"/ loop {","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.8.4\\src\\poll.rs","byte_start":37171,"byte_end":37181,"line_start":497,"line_end":497,"column_start":5,"column_end":15}},{"value":"/     let elapsed = start.elapsed();","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.8.4\\src\\poll.rs","byte_start":37186,"byte_end":37224,"line_start":498,"line_end":498,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.8.4\\src\\poll.rs","byte_start":37229,"byte_end":37232,"line_start":499,"line_end":499,"column_start":5,"column_end":8}},{"value":"/     if elapsed >= timeout {","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.8.4\\src\\poll.rs","byte_start":37237,"byte_end":37268,"line_start":500,"line_end":500,"column_start":5,"column_end":36}},{"value":"/         // Connection timed out","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.8.4\\src\\poll.rs","byte_start":37273,"byte_end":37308,"line_start":501,"line_end":501,"column_start":5,"column_end":40}},{"value":"/         return Ok(());","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.8.4\\src\\poll.rs","byte_start":37313,"byte_end":37339,"line_start":502,"line_end":502,"column_start":5,"column_end":31}},{"value":"/     }","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.8.4\\src\\poll.rs","byte_start":37344,"byte_end":37353,"line_start":503,"line_end":503,"column_start":5,"column_end":14}},{"value":"/","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.8.4\\src\\poll.rs","byte_start":37358,"byte_end":37361,"line_start":504,"line_end":504,"column_start":5,"column_end":8}},{"value":"/     let remaining = timeout - elapsed;","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.8.4\\src\\poll.rs","byte_start":37366,"byte_end":37408,"line_start":505,"line_end":505,"column_start":5,"column_end":47}},{"value":"/     poll.poll(&mut events, Some(remaining))?;","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.8.4\\src\\poll.rs","byte_start":37413,"byte_end":37462,"line_start":506,"line_end":506,"column_start":5,"column_end":54}},{"value":"/","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.8.4\\src\\poll.rs","byte_start":37467,"byte_end":37470,"line_start":507,"line_end":507,"column_start":5,"column_end":8}},{"value":"/     for event in &events {","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.8.4\\src\\poll.rs","byte_start":37475,"byte_end":37505,"line_start":508,"line_end":508,"column_start":5,"column_end":35}},{"value":"/         if event.token() == Token(0) {","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.8.4\\src\\poll.rs","byte_start":37510,"byte_end":37552,"line_start":509,"line_end":509,"column_start":5,"column_end":47}},{"value":"/             // Something (probably) happened on the socket.","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.8.4\\src\\poll.rs","byte_start":37557,"byte_end":37620,"line_start":510,"line_end":510,"column_start":5,"column_end":68}},{"value":"/             return Ok(());","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.8.4\\src\\poll.rs","byte_start":37625,"byte_end":37655,"line_start":511,"line_end":511,"column_start":5,"column_end":35}},{"value":"/         }","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.8.4\\src\\poll.rs","byte_start":37660,"byte_end":37673,"line_start":512,"line_end":512,"column_start":5,"column_end":18}},{"value":"/     }","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.8.4\\src\\poll.rs","byte_start":37678,"byte_end":37687,"line_start":513,"line_end":513,"column_start":5,"column_end":14}},{"value":"/ }","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.8.4\\src\\poll.rs","byte_start":37692,"byte_end":37697,"line_start":514,"line_end":514,"column_start":5,"column_end":10}},{"value":"/ # }","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.8.4\\src\\poll.rs","byte_start":37702,"byte_end":37709,"line_start":515,"line_end":515,"column_start":5,"column_end":12}},{"value":"/ ```","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.8.4\\src\\poll.rs","byte_start":37714,"byte_end":37721,"line_start":516,"line_end":516,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":83},"span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.8.4\\src\\poll.rs","byte_start":40409,"byte_end":40419,"line_start":585,"line_end":585,"column_start":12,"column_end":22},"name":"reregister","qualname":"<Registry>::reregister","value":"pub fn reregister<S>(&Self, &mut S, Token, Interest) -> io::Result<()> where\nS: event::Source + ?Sized","parent":null,"children":[],"decl_id":null,"docs":" Re-register an [`event::Source`] with the `Poll` instance.","sig":null,"attributes":[{"value":"/ Re-register an [`event::Source`] with the `Poll` instance.","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.8.4\\src\\poll.rs","byte_start":38079,"byte_end":38141,"line_start":529,"line_end":529,"column_start":5,"column_end":67}},{"value":"/","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.8.4\\src\\poll.rs","byte_start":38146,"byte_end":38149,"line_start":530,"line_end":530,"column_start":5,"column_end":8}},{"value":"/ Re-registering an event source allows changing the details of the","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.8.4\\src\\poll.rs","byte_start":38154,"byte_end":38223,"line_start":531,"line_end":531,"column_start":5,"column_end":74}},{"value":"/ registration. Specifically, it allows updating the associated `token`","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.8.4\\src\\poll.rs","byte_start":38228,"byte_end":38301,"line_start":532,"line_end":532,"column_start":5,"column_end":78}},{"value":"/ and `interests` specified in previous `register` and `reregister` calls.","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.8.4\\src\\poll.rs","byte_start":38306,"byte_end":38382,"line_start":533,"line_end":533,"column_start":5,"column_end":81}},{"value":"/","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.8.4\\src\\poll.rs","byte_start":38387,"byte_end":38390,"line_start":534,"line_end":534,"column_start":5,"column_end":8}},{"value":"/ The `reregister` arguments fully override the previous values. In other","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.8.4\\src\\poll.rs","byte_start":38395,"byte_end":38470,"line_start":535,"line_end":535,"column_start":5,"column_end":80}},{"value":"/ words, if a socket is registered with [`readable`] interest and the call","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.8.4\\src\\poll.rs","byte_start":38475,"byte_end":38551,"line_start":536,"line_end":536,"column_start":5,"column_end":81}},{"value":"/ to `reregister` specifies [`writable`], then read interest is no longer","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.8.4\\src\\poll.rs","byte_start":38556,"byte_end":38631,"line_start":537,"line_end":537,"column_start":5,"column_end":80}},{"value":"/ requested for the handle.","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.8.4\\src\\poll.rs","byte_start":38636,"byte_end":38665,"line_start":538,"line_end":538,"column_start":5,"column_end":34}},{"value":"/","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.8.4\\src\\poll.rs","byte_start":38670,"byte_end":38673,"line_start":539,"line_end":539,"column_start":5,"column_end":8}},{"value":"/ The event source must have previously been registered with this instance","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.8.4\\src\\poll.rs","byte_start":38678,"byte_end":38754,"line_start":540,"line_end":540,"column_start":5,"column_end":81}},{"value":"/ of `Poll`, otherwise the behavior is unspecified.","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.8.4\\src\\poll.rs","byte_start":38759,"byte_end":38812,"line_start":541,"line_end":541,"column_start":5,"column_end":58}},{"value":"/","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.8.4\\src\\poll.rs","byte_start":38817,"byte_end":38820,"line_start":542,"line_end":542,"column_start":5,"column_end":8}},{"value":"/ See the [`register`] documentation for details about the function","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.8.4\\src\\poll.rs","byte_start":38825,"byte_end":38894,"line_start":543,"line_end":543,"column_start":5,"column_end":74}},{"value":"/ arguments and see the [`struct`] docs for a high level overview of","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.8.4\\src\\poll.rs","byte_start":38899,"byte_end":38969,"line_start":544,"line_end":544,"column_start":5,"column_end":75}},{"value":"/ polling.","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.8.4\\src\\poll.rs","byte_start":38974,"byte_end":38986,"line_start":545,"line_end":545,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.8.4\\src\\poll.rs","byte_start":38991,"byte_end":38994,"line_start":546,"line_end":546,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.8.4\\src\\poll.rs","byte_start":38999,"byte_end":39013,"line_start":547,"line_end":547,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.8.4\\src\\poll.rs","byte_start":39018,"byte_end":39021,"line_start":548,"line_end":548,"column_start":5,"column_end":8}},{"value":"/ # use std::error::Error;","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.8.4\\src\\poll.rs","byte_start":39181,"byte_end":39209,"line_start":551,"line_end":551,"column_start":5,"column_end":33}},{"value":"/ # use std::net;","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.8.4\\src\\poll.rs","byte_start":39214,"byte_end":39233,"line_start":552,"line_end":552,"column_start":5,"column_end":24}},{"value":"/ # fn main() -> Result<(), Box<dyn Error>> {","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.8.4\\src\\poll.rs","byte_start":39238,"byte_end":39285,"line_start":553,"line_end":553,"column_start":5,"column_end":52}},{"value":"/ use mio::{Poll, Interest, Token};","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.8.4\\src\\poll.rs","byte_start":39290,"byte_end":39327,"line_start":554,"line_end":554,"column_start":5,"column_end":42}},{"value":"/ use mio::net::TcpStream;","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.8.4\\src\\poll.rs","byte_start":39332,"byte_end":39360,"line_start":555,"line_end":555,"column_start":5,"column_end":33}},{"value":"/ use std::net::SocketAddr;","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.8.4\\src\\poll.rs","byte_start":39365,"byte_end":39394,"line_start":556,"line_end":556,"column_start":5,"column_end":34}},{"value":"/","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.8.4\\src\\poll.rs","byte_start":39399,"byte_end":39402,"line_start":557,"line_end":557,"column_start":5,"column_end":8}},{"value":"/ let poll = Poll::new()?;","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.8.4\\src\\poll.rs","byte_start":39407,"byte_end":39435,"line_start":558,"line_end":558,"column_start":5,"column_end":33}},{"value":"/","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.8.4\\src\\poll.rs","byte_start":39440,"byte_end":39443,"line_start":559,"line_end":559,"column_start":5,"column_end":8}},{"value":"/ let address: SocketAddr = \"127.0.0.1:0\".parse()?;","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.8.4\\src\\poll.rs","byte_start":39448,"byte_end":39501,"line_start":560,"line_end":560,"column_start":5,"column_end":58}},{"value":"/ let listener = net::TcpListener::bind(address)?;","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.8.4\\src\\poll.rs","byte_start":39506,"byte_end":39558,"line_start":561,"line_end":561,"column_start":5,"column_end":57}},{"value":"/ let mut socket = TcpStream::connect(listener.local_addr()?)?;","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.8.4\\src\\poll.rs","byte_start":39563,"byte_end":39628,"line_start":562,"line_end":562,"column_start":5,"column_end":70}},{"value":"/","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.8.4\\src\\poll.rs","byte_start":39633,"byte_end":39636,"line_start":563,"line_end":563,"column_start":5,"column_end":8}},{"value":"/ // Register the socket with `poll`, requesting readable","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.8.4\\src\\poll.rs","byte_start":39641,"byte_end":39700,"line_start":564,"line_end":564,"column_start":5,"column_end":64}},{"value":"/ poll.registry().register(","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.8.4\\src\\poll.rs","byte_start":39705,"byte_end":39734,"line_start":565,"line_end":565,"column_start":5,"column_end":34}},{"value":"/     &mut socket,","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.8.4\\src\\poll.rs","byte_start":39739,"byte_end":39759,"line_start":566,"line_end":566,"column_start":5,"column_end":25}},{"value":"/     Token(0),","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.8.4\\src\\poll.rs","byte_start":39764,"byte_end":39781,"line_start":567,"line_end":567,"column_start":5,"column_end":22}},{"value":"/     Interest::READABLE)?;","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.8.4\\src\\poll.rs","byte_start":39786,"byte_end":39815,"line_start":568,"line_end":568,"column_start":5,"column_end":34}},{"value":"/","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.8.4\\src\\poll.rs","byte_start":39820,"byte_end":39823,"line_start":569,"line_end":569,"column_start":5,"column_end":8}},{"value":"/ // Reregister the socket specifying write interest instead. Even though","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.8.4\\src\\poll.rs","byte_start":39828,"byte_end":39903,"line_start":570,"line_end":570,"column_start":5,"column_end":80}},{"value":"/ // the token is the same it must be specified.","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.8.4\\src\\poll.rs","byte_start":39908,"byte_end":39958,"line_start":571,"line_end":571,"column_start":5,"column_end":55}},{"value":"/ poll.registry().reregister(","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.8.4\\src\\poll.rs","byte_start":39963,"byte_end":39994,"line_start":572,"line_end":572,"column_start":5,"column_end":36}},{"value":"/     &mut socket,","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.8.4\\src\\poll.rs","byte_start":39999,"byte_end":40019,"line_start":573,"line_end":573,"column_start":5,"column_end":25}},{"value":"/     Token(0),","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.8.4\\src\\poll.rs","byte_start":40024,"byte_end":40041,"line_start":574,"line_end":574,"column_start":5,"column_end":22}},{"value":"/     Interest::WRITABLE)?;","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.8.4\\src\\poll.rs","byte_start":40046,"byte_end":40075,"line_start":575,"line_end":575,"column_start":5,"column_end":34}},{"value":"/ #     Ok(())","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.8.4\\src\\poll.rs","byte_start":40080,"byte_end":40096,"line_start":576,"line_end":576,"column_start":5,"column_end":21}},{"value":"/ # }","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.8.4\\src\\poll.rs","byte_start":40101,"byte_end":40108,"line_start":577,"line_end":577,"column_start":5,"column_end":12}},{"value":"/ ```","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.8.4\\src\\poll.rs","byte_start":40113,"byte_end":40120,"line_start":578,"line_end":578,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.8.4\\src\\poll.rs","byte_start":40125,"byte_end":40128,"line_start":579,"line_end":579,"column_start":5,"column_end":8}},{"value":"/ [`event::Source`]: ./event/trait.Source.html","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.8.4\\src\\poll.rs","byte_start":40133,"byte_end":40181,"line_start":580,"line_end":580,"column_start":5,"column_end":53}},{"value":"/ [`struct`]: struct.Poll.html","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.8.4\\src\\poll.rs","byte_start":40186,"byte_end":40218,"line_start":581,"line_end":581,"column_start":5,"column_end":37}},{"value":"/ [`register`]: struct.Registry.html#method.register","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.8.4\\src\\poll.rs","byte_start":40223,"byte_end":40277,"line_start":582,"line_end":582,"column_start":5,"column_end":59}},{"value":"/ [`readable`]: ./event/struct.Event.html#is_readable","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.8.4\\src\\poll.rs","byte_start":40282,"byte_end":40337,"line_start":583,"line_end":583,"column_start":5,"column_end":60}},{"value":"/ [`writable`]: ./event/struct.Event.html#is_writable","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.8.4\\src\\poll.rs","byte_start":40342,"byte_end":40397,"line_start":584,"line_end":584,"column_start":5,"column_end":60}}]},{"kind":"Method","id":{"krate":0,"index":85},"span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.8.4\\src\\poll.rs","byte_start":42890,"byte_end":42900,"line_start":648,"line_end":648,"column_start":12,"column_end":22},"name":"deregister","qualname":"<Registry>::deregister","value":"pub fn deregister<S>(&Self, &mut S) -> io::Result<()> where S: event::Source +\n?Sized","parent":null,"children":[],"decl_id":null,"docs":" Deregister an [`event::Source`] with the `Poll` instance.","sig":null,"attributes":[{"value":"/ Deregister an [`event::Source`] with the `Poll` instance.","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.8.4\\src\\poll.rs","byte_start":40761,"byte_end":40822,"line_start":597,"line_end":597,"column_start":5,"column_end":66}},{"value":"/","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.8.4\\src\\poll.rs","byte_start":40827,"byte_end":40830,"line_start":598,"line_end":598,"column_start":5,"column_end":8}},{"value":"/ When an event source is deregistered, the `Poll` instance will no longer","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.8.4\\src\\poll.rs","byte_start":40835,"byte_end":40911,"line_start":599,"line_end":599,"column_start":5,"column_end":81}},{"value":"/ monitor it for readiness state changes. Deregistering clears up any","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.8.4\\src\\poll.rs","byte_start":40916,"byte_end":40987,"line_start":600,"line_end":600,"column_start":5,"column_end":76}},{"value":"/ internal resources needed to track the handle.  After an explicit call","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.8.4\\src\\poll.rs","byte_start":40992,"byte_end":41066,"line_start":601,"line_end":601,"column_start":5,"column_end":79}},{"value":"/ to this method completes, it is guaranteed that the token previously","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.8.4\\src\\poll.rs","byte_start":41071,"byte_end":41143,"line_start":602,"line_end":602,"column_start":5,"column_end":77}},{"value":"/ registered to this handle will not be returned by a future poll, so long","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.8.4\\src\\poll.rs","byte_start":41148,"byte_end":41224,"line_start":603,"line_end":603,"column_start":5,"column_end":81}},{"value":"/ as a happens-before relationship is established between this call and","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.8.4\\src\\poll.rs","byte_start":41229,"byte_end":41302,"line_start":604,"line_end":604,"column_start":5,"column_end":78}},{"value":"/ the poll.","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.8.4\\src\\poll.rs","byte_start":41307,"byte_end":41320,"line_start":605,"line_end":605,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.8.4\\src\\poll.rs","byte_start":41325,"byte_end":41328,"line_start":606,"line_end":606,"column_start":5,"column_end":8}},{"value":"/ The event source must have previously been registered with this instance","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.8.4\\src\\poll.rs","byte_start":41333,"byte_end":41409,"line_start":607,"line_end":607,"column_start":5,"column_end":81}},{"value":"/ of `Poll`, otherwise the behavior is unspecified.","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.8.4\\src\\poll.rs","byte_start":41414,"byte_end":41467,"line_start":608,"line_end":608,"column_start":5,"column_end":58}},{"value":"/","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.8.4\\src\\poll.rs","byte_start":41472,"byte_end":41475,"line_start":609,"line_end":609,"column_start":5,"column_end":8}},{"value":"/ A handle can be passed back to `register` after it has been","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.8.4\\src\\poll.rs","byte_start":41480,"byte_end":41543,"line_start":610,"line_end":610,"column_start":5,"column_end":68}},{"value":"/ deregistered; however, it must be passed back to the **same** `Poll`","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.8.4\\src\\poll.rs","byte_start":41548,"byte_end":41620,"line_start":611,"line_end":611,"column_start":5,"column_end":77}},{"value":"/ instance, otherwise the behavior is unspecified.","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.8.4\\src\\poll.rs","byte_start":41625,"byte_end":41677,"line_start":612,"line_end":612,"column_start":5,"column_end":57}},{"value":"/","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.8.4\\src\\poll.rs","byte_start":41682,"byte_end":41685,"line_start":613,"line_end":613,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.8.4\\src\\poll.rs","byte_start":41690,"byte_end":41704,"line_start":614,"line_end":614,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.8.4\\src\\poll.rs","byte_start":41709,"byte_end":41712,"line_start":615,"line_end":615,"column_start":5,"column_end":8}},{"value":"/ # use std::error::Error;","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.8.4\\src\\poll.rs","byte_start":41872,"byte_end":41900,"line_start":618,"line_end":618,"column_start":5,"column_end":33}},{"value":"/ # use std::net;","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.8.4\\src\\poll.rs","byte_start":41905,"byte_end":41924,"line_start":619,"line_end":619,"column_start":5,"column_end":24}},{"value":"/ # fn main() -> Result<(), Box<dyn Error>> {","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.8.4\\src\\poll.rs","byte_start":41929,"byte_end":41976,"line_start":620,"line_end":620,"column_start":5,"column_end":52}},{"value":"/ use mio::{Events, Poll, Interest, Token};","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.8.4\\src\\poll.rs","byte_start":41981,"byte_end":42026,"line_start":621,"line_end":621,"column_start":5,"column_end":50}},{"value":"/ use mio::net::TcpStream;","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.8.4\\src\\poll.rs","byte_start":42031,"byte_end":42059,"line_start":622,"line_end":622,"column_start":5,"column_end":33}},{"value":"/ use std::net::SocketAddr;","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.8.4\\src\\poll.rs","byte_start":42064,"byte_end":42093,"line_start":623,"line_end":623,"column_start":5,"column_end":34}},{"value":"/ use std::time::Duration;","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.8.4\\src\\poll.rs","byte_start":42098,"byte_end":42126,"line_start":624,"line_end":624,"column_start":5,"column_end":33}},{"value":"/","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.8.4\\src\\poll.rs","byte_start":42131,"byte_end":42134,"line_start":625,"line_end":625,"column_start":5,"column_end":8}},{"value":"/ let mut poll = Poll::new()?;","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.8.4\\src\\poll.rs","byte_start":42139,"byte_end":42171,"line_start":626,"line_end":626,"column_start":5,"column_end":37}},{"value":"/","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.8.4\\src\\poll.rs","byte_start":42176,"byte_end":42179,"line_start":627,"line_end":627,"column_start":5,"column_end":8}},{"value":"/ let address: SocketAddr = \"127.0.0.1:0\".parse()?;","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.8.4\\src\\poll.rs","byte_start":42184,"byte_end":42237,"line_start":628,"line_end":628,"column_start":5,"column_end":58}},{"value":"/ let listener = net::TcpListener::bind(address)?;","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.8.4\\src\\poll.rs","byte_start":42242,"byte_end":42294,"line_start":629,"line_end":629,"column_start":5,"column_end":57}},{"value":"/ let mut socket = TcpStream::connect(listener.local_addr()?)?;","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.8.4\\src\\poll.rs","byte_start":42299,"byte_end":42364,"line_start":630,"line_end":630,"column_start":5,"column_end":70}},{"value":"/","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.8.4\\src\\poll.rs","byte_start":42369,"byte_end":42372,"line_start":631,"line_end":631,"column_start":5,"column_end":8}},{"value":"/ // Register the socket with `poll`","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.8.4\\src\\poll.rs","byte_start":42377,"byte_end":42415,"line_start":632,"line_end":632,"column_start":5,"column_end":43}},{"value":"/ poll.registry().register(","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.8.4\\src\\poll.rs","byte_start":42420,"byte_end":42449,"line_start":633,"line_end":633,"column_start":5,"column_end":34}},{"value":"/     &mut socket,","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.8.4\\src\\poll.rs","byte_start":42454,"byte_end":42474,"line_start":634,"line_end":634,"column_start":5,"column_end":25}},{"value":"/     Token(0),","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.8.4\\src\\poll.rs","byte_start":42479,"byte_end":42496,"line_start":635,"line_end":635,"column_start":5,"column_end":22}},{"value":"/     Interest::READABLE)?;","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.8.4\\src\\poll.rs","byte_start":42501,"byte_end":42530,"line_start":636,"line_end":636,"column_start":5,"column_end":34}},{"value":"/","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.8.4\\src\\poll.rs","byte_start":42535,"byte_end":42538,"line_start":637,"line_end":637,"column_start":5,"column_end":8}},{"value":"/ poll.registry().deregister(&mut socket)?;","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.8.4\\src\\poll.rs","byte_start":42543,"byte_end":42588,"line_start":638,"line_end":638,"column_start":5,"column_end":50}},{"value":"/","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.8.4\\src\\poll.rs","byte_start":42593,"byte_end":42596,"line_start":639,"line_end":639,"column_start":5,"column_end":8}},{"value":"/ let mut events = Events::with_capacity(1024);","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.8.4\\src\\poll.rs","byte_start":42601,"byte_end":42650,"line_start":640,"line_end":640,"column_start":5,"column_end":54}},{"value":"/","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.8.4\\src\\poll.rs","byte_start":42655,"byte_end":42658,"line_start":641,"line_end":641,"column_start":5,"column_end":8}},{"value":"/ // Set a timeout because this poll should never receive any events.","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.8.4\\src\\poll.rs","byte_start":42663,"byte_end":42734,"line_start":642,"line_end":642,"column_start":5,"column_end":76}},{"value":"/ poll.poll(&mut events, Some(Duration::from_secs(1)))?;","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.8.4\\src\\poll.rs","byte_start":42739,"byte_end":42797,"line_start":643,"line_end":643,"column_start":5,"column_end":63}},{"value":"/ assert!(events.is_empty());","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.8.4\\src\\poll.rs","byte_start":42802,"byte_end":42833,"line_start":644,"line_end":644,"column_start":5,"column_end":36}},{"value":"/ #     Ok(())","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.8.4\\src\\poll.rs","byte_start":42838,"byte_end":42854,"line_start":645,"line_end":645,"column_start":5,"column_end":21}},{"value":"/ # }","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.8.4\\src\\poll.rs","byte_start":42859,"byte_end":42866,"line_start":646,"line_end":646,"column_start":5,"column_end":12}},{"value":"/ ```","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.8.4\\src\\poll.rs","byte_start":42871,"byte_end":42878,"line_start":647,"line_end":647,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":87},"span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.8.4\\src\\poll.rs","byte_start":43297,"byte_end":43306,"line_start":660,"line_end":660,"column_start":12,"column_end":21},"name":"try_clone","qualname":"<Registry>::try_clone","value":"pub fn try_clone(&Self) -> io::Result<Registry>","parent":null,"children":[],"decl_id":null,"docs":" Creates a new independently owned `Registry`.","sig":null,"attributes":[{"value":"/ Creates a new independently owned `Registry`.","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.8.4\\src\\poll.rs","byte_start":43097,"byte_end":43146,"line_start":656,"line_end":656,"column_start":5,"column_end":54}},{"value":"/","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.8.4\\src\\poll.rs","byte_start":43151,"byte_end":43154,"line_start":657,"line_end":657,"column_start":5,"column_end":8}},{"value":"/ Event sources registered with this `Registry` will be registered with","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.8.4\\src\\poll.rs","byte_start":43159,"byte_end":43232,"line_start":658,"line_end":658,"column_start":5,"column_end":78}},{"value":"/ the original `Registry` and `Poll` instance.","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.8.4\\src\\poll.rs","byte_start":43237,"byte_end":43285,"line_start":659,"line_end":659,"column_start":5,"column_end":53}}]},{"kind":"Struct","id":{"krate":0,"index":1265},"span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.8.4\\src\\sys\\windows\\named_pipe.rs","byte_start":13666801,"byte_end":13666810,"line_start":72,"line_end":72,"column_start":12,"column_end":21},"name":"NamedPipe","qualname":"::sys::windows::named_pipe::NamedPipe","value":"NamedPipe {  }","parent":null,"children":[{"krate":0,"index":1266}],"decl_id":null,"docs":" Non-blocking windows named pipe.","sig":null,"attributes":[{"value":"/ Non-blocking windows named pipe.","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.8.4\\src\\sys\\windows\\named_pipe.rs","byte_start":13664720,"byte_end":13664756,"line_start":30,"line_end":30,"column_start":1,"column_end":37}},{"value":"/","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.8.4\\src\\sys\\windows\\named_pipe.rs","byte_start":13664757,"byte_end":13664760,"line_start":31,"line_end":31,"column_start":1,"column_end":4}},{"value":"/ This structure internally contains a `HANDLE` which represents the named","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.8.4\\src\\sys\\windows\\named_pipe.rs","byte_start":13664761,"byte_end":13664837,"line_start":32,"line_end":32,"column_start":1,"column_end":77}},{"value":"/ pipe, and also maintains state associated with the mio event loop and active","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.8.4\\src\\sys\\windows\\named_pipe.rs","byte_start":13664838,"byte_end":13664918,"line_start":33,"line_end":33,"column_start":1,"column_end":81}},{"value":"/ I/O operations that have been scheduled to translate IOCP to a readiness","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.8.4\\src\\sys\\windows\\named_pipe.rs","byte_start":13664919,"byte_end":13664995,"line_start":34,"line_end":34,"column_start":1,"column_end":77}},{"value":"/ model.","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.8.4\\src\\sys\\windows\\named_pipe.rs","byte_start":13664996,"byte_end":13665006,"line_start":35,"line_end":35,"column_start":1,"column_end":11}},{"value":"/","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.8.4\\src\\sys\\windows\\named_pipe.rs","byte_start":13665007,"byte_end":13665010,"line_start":36,"line_end":36,"column_start":1,"column_end":4}},{"value":"/ Note, IOCP is a *completion* based model whereas mio is a *readiness* based","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.8.4\\src\\sys\\windows\\named_pipe.rs","byte_start":13665011,"byte_end":13665090,"line_start":37,"line_end":37,"column_start":1,"column_end":80}},{"value":"/ model. To bridge this, `NamedPipe` performs internal buffering. Writes are","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.8.4\\src\\sys\\windows\\named_pipe.rs","byte_start":13665091,"byte_end":13665169,"line_start":38,"line_end":38,"column_start":1,"column_end":79}},{"value":"/ written to an internal buffer and the buffer is submitted to IOCP. IOCP","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.8.4\\src\\sys\\windows\\named_pipe.rs","byte_start":13665170,"byte_end":13665245,"line_start":39,"line_end":39,"column_start":1,"column_end":76}},{"value":"/ reads are submitted using internal buffers and `NamedPipe::read` reads from","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.8.4\\src\\sys\\windows\\named_pipe.rs","byte_start":13665246,"byte_end":13665325,"line_start":40,"line_end":40,"column_start":1,"column_end":80}},{"value":"/ this internal buffer.","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.8.4\\src\\sys\\windows\\named_pipe.rs","byte_start":13665326,"byte_end":13665351,"line_start":41,"line_end":41,"column_start":1,"column_end":26}},{"value":"/","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.8.4\\src\\sys\\windows\\named_pipe.rs","byte_start":13665352,"byte_end":13665355,"line_start":42,"line_end":42,"column_start":1,"column_end":4}},{"value":"/ # Trait implementations","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.8.4\\src\\sys\\windows\\named_pipe.rs","byte_start":13665356,"byte_end":13665383,"line_start":43,"line_end":43,"column_start":1,"column_end":28}},{"value":"/","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.8.4\\src\\sys\\windows\\named_pipe.rs","byte_start":13665384,"byte_end":13665387,"line_start":44,"line_end":44,"column_start":1,"column_end":4}},{"value":"/ The `Read` and `Write` traits are implemented for `NamedPipe` and for","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.8.4\\src\\sys\\windows\\named_pipe.rs","byte_start":13665388,"byte_end":13665461,"line_start":45,"line_end":45,"column_start":1,"column_end":74}},{"value":"/ `&NamedPipe`. This represents that a named pipe can be concurrently read and","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.8.4\\src\\sys\\windows\\named_pipe.rs","byte_start":13665462,"byte_end":13665542,"line_start":46,"line_end":46,"column_start":1,"column_end":81}},{"value":"/ written to and also can be read and written to at all. Typically a named","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.8.4\\src\\sys\\windows\\named_pipe.rs","byte_start":13665543,"byte_end":13665619,"line_start":47,"line_end":47,"column_start":1,"column_end":77}},{"value":"/ pipe needs to be connected to a client before it can be read or written,","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.8.4\\src\\sys\\windows\\named_pipe.rs","byte_start":13665620,"byte_end":13665696,"line_start":48,"line_end":48,"column_start":1,"column_end":77}},{"value":"/ however.","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.8.4\\src\\sys\\windows\\named_pipe.rs","byte_start":13665697,"byte_end":13665709,"line_start":49,"line_end":49,"column_start":1,"column_end":13}},{"value":"/","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.8.4\\src\\sys\\windows\\named_pipe.rs","byte_start":13665710,"byte_end":13665713,"line_start":50,"line_end":50,"column_start":1,"column_end":4}},{"value":"/ Note that for I/O operations on a named pipe to succeed then the named pipe","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.8.4\\src\\sys\\windows\\named_pipe.rs","byte_start":13665714,"byte_end":13665793,"line_start":51,"line_end":51,"column_start":1,"column_end":80}},{"value":"/ needs to be associated with an event loop. Until this happens all I/O","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.8.4\\src\\sys\\windows\\named_pipe.rs","byte_start":13665794,"byte_end":13665867,"line_start":52,"line_end":52,"column_start":1,"column_end":74}},{"value":"/ operations will return a \"would block\" error.","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.8.4\\src\\sys\\windows\\named_pipe.rs","byte_start":13665868,"byte_end":13665917,"line_start":53,"line_end":53,"column_start":1,"column_end":50}},{"value":"/","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.8.4\\src\\sys\\windows\\named_pipe.rs","byte_start":13665918,"byte_end":13665921,"line_start":54,"line_end":54,"column_start":1,"column_end":4}},{"value":"/ # Managing connections","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.8.4\\src\\sys\\windows\\named_pipe.rs","byte_start":13665922,"byte_end":13665948,"line_start":55,"line_end":55,"column_start":1,"column_end":27}},{"value":"/","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.8.4\\src\\sys\\windows\\named_pipe.rs","byte_start":13665949,"byte_end":13665952,"line_start":56,"line_end":56,"column_start":1,"column_end":4}},{"value":"/ The `NamedPipe` type supports a `connect` method to connect to a client and","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.8.4\\src\\sys\\windows\\named_pipe.rs","byte_start":13665953,"byte_end":13666032,"line_start":57,"line_end":57,"column_start":1,"column_end":80}},{"value":"/ a `disconnect` method to disconnect from that client. These two methods only","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.8.4\\src\\sys\\windows\\named_pipe.rs","byte_start":13666033,"byte_end":13666113,"line_start":58,"line_end":58,"column_start":1,"column_end":81}},{"value":"/ work once a named pipe is associated with an event loop.","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.8.4\\src\\sys\\windows\\named_pipe.rs","byte_start":13666114,"byte_end":13666174,"line_start":59,"line_end":59,"column_start":1,"column_end":61}},{"value":"/","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.8.4\\src\\sys\\windows\\named_pipe.rs","byte_start":13666175,"byte_end":13666178,"line_start":60,"line_end":60,"column_start":1,"column_end":4}},{"value":"/ The `connect` method will succeed asynchronously and a completion can be","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.8.4\\src\\sys\\windows\\named_pipe.rs","byte_start":13666179,"byte_end":13666255,"line_start":61,"line_end":61,"column_start":1,"column_end":77}},{"value":"/ detected once the object receives a writable notification.","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.8.4\\src\\sys\\windows\\named_pipe.rs","byte_start":13666256,"byte_end":13666318,"line_start":62,"line_end":62,"column_start":1,"column_end":63}},{"value":"/","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.8.4\\src\\sys\\windows\\named_pipe.rs","byte_start":13666319,"byte_end":13666322,"line_start":63,"line_end":63,"column_start":1,"column_end":4}},{"value":"/ # Named pipe clients","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.8.4\\src\\sys\\windows\\named_pipe.rs","byte_start":13666323,"byte_end":13666347,"line_start":64,"line_end":64,"column_start":1,"column_end":25}},{"value":"/","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.8.4\\src\\sys\\windows\\named_pipe.rs","byte_start":13666348,"byte_end":13666351,"line_start":65,"line_end":65,"column_start":1,"column_end":4}},{"value":"/ Currently to create a client of a named pipe server then you can use the","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.8.4\\src\\sys\\windows\\named_pipe.rs","byte_start":13666352,"byte_end":13666428,"line_start":66,"line_end":66,"column_start":1,"column_end":77}},{"value":"/ `OpenOptions` type in the standard library to create a `File` that connects","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.8.4\\src\\sys\\windows\\named_pipe.rs","byte_start":13666429,"byte_end":13666508,"line_start":67,"line_end":67,"column_start":1,"column_end":80}},{"value":"/ to a named pipe. Afterwards you can use the `into_raw_handle` method coupled","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.8.4\\src\\sys\\windows\\named_pipe.rs","byte_start":13666509,"byte_end":13666589,"line_start":68,"line_end":68,"column_start":1,"column_end":81}},{"value":"/ with the `NamedPipe::from_raw_handle` method to convert that to a named pipe","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.8.4\\src\\sys\\windows\\named_pipe.rs","byte_start":13666590,"byte_end":13666670,"line_start":69,"line_end":69,"column_start":1,"column_end":81}},{"value":"/ that can operate asynchronously. Don't forget to pass the","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.8.4\\src\\sys\\windows\\named_pipe.rs","byte_start":13666671,"byte_end":13666732,"line_start":70,"line_end":70,"column_start":1,"column_end":62}},{"value":"/ `FILE_FLAG_OVERLAPPED` flag when opening the `File`.","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.8.4\\src\\sys\\windows\\named_pipe.rs","byte_start":13666733,"byte_end":13666789,"line_start":71,"line_end":71,"column_start":1,"column_end":57}}]},{"kind":"Method","id":{"krate":0,"index":1294},"span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.8.4\\src\\sys\\windows\\named_pipe.rs","byte_start":13677274,"byte_end":13677277,"line_start":357,"line_end":357,"column_start":12,"column_end":15},"name":"new","qualname":"<NamedPipe>::new","value":"pub fn new<A: AsRef<OsStr>>(A) -> io::Result<NamedPipe>","parent":null,"children":[],"decl_id":null,"docs":" Creates a new named pipe at the specified `addr` given a \"reasonable\n set\" of initial configuration options.\n","sig":null,"attributes":[{"value":"/ Creates a new named pipe at the specified `addr` given a \"reasonable","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.8.4\\src\\sys\\windows\\named_pipe.rs","byte_start":13677143,"byte_end":13677215,"line_start":355,"line_end":355,"column_start":5,"column_end":77}},{"value":"/ set\" of initial configuration options.","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.8.4\\src\\sys\\windows\\named_pipe.rs","byte_start":13677220,"byte_end":13677262,"line_start":356,"line_end":356,"column_start":5,"column_end":47}}]},{"kind":"Method","id":{"krate":0,"index":1299},"span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.8.4\\src\\sys\\windows\\named_pipe.rs","byte_start":13679137,"byte_end":13679144,"line_start":404,"line_end":404,"column_start":12,"column_end":19},"name":"connect","qualname":"<NamedPipe>::connect","value":"pub fn connect(&Self) -> io::Result<()>","parent":null,"children":[],"decl_id":null,"docs":" Attempts to call `ConnectNamedPipe`, if possible.","sig":null,"attributes":[{"value":"/ Attempts to call `ConnectNamedPipe`, if possible.","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.8.4\\src\\sys\\windows\\named_pipe.rs","byte_start":13678157,"byte_end":13678210,"line_start":384,"line_end":384,"column_start":5,"column_end":58}},{"value":"/","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.8.4\\src\\sys\\windows\\named_pipe.rs","byte_start":13678215,"byte_end":13678218,"line_start":385,"line_end":385,"column_start":5,"column_end":8}},{"value":"/ This function will attempt to connect this pipe to a client in an","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.8.4\\src\\sys\\windows\\named_pipe.rs","byte_start":13678223,"byte_end":13678292,"line_start":386,"line_end":386,"column_start":5,"column_end":74}},{"value":"/ asynchronous fashion. If the function immediately establishes a","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.8.4\\src\\sys\\windows\\named_pipe.rs","byte_start":13678297,"byte_end":13678364,"line_start":387,"line_end":387,"column_start":5,"column_end":72}},{"value":"/ connection to a client then `Ok(())` is returned. Otherwise if a","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.8.4\\src\\sys\\windows\\named_pipe.rs","byte_start":13678369,"byte_end":13678437,"line_start":388,"line_end":388,"column_start":5,"column_end":73}},{"value":"/ connection attempt was issued and is now in progress then a \"would","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.8.4\\src\\sys\\windows\\named_pipe.rs","byte_start":13678442,"byte_end":13678512,"line_start":389,"line_end":389,"column_start":5,"column_end":75}},{"value":"/ block\" error is returned.","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.8.4\\src\\sys\\windows\\named_pipe.rs","byte_start":13678517,"byte_end":13678546,"line_start":390,"line_end":390,"column_start":5,"column_end":34}},{"value":"/","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.8.4\\src\\sys\\windows\\named_pipe.rs","byte_start":13678551,"byte_end":13678554,"line_start":391,"line_end":391,"column_start":5,"column_end":8}},{"value":"/ When the connection is finished then this object will be flagged as","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.8.4\\src\\sys\\windows\\named_pipe.rs","byte_start":13678559,"byte_end":13678630,"line_start":392,"line_end":392,"column_start":5,"column_end":76}},{"value":"/ being ready for a write, or otherwise in the writable state.","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.8.4\\src\\sys\\windows\\named_pipe.rs","byte_start":13678635,"byte_end":13678699,"line_start":393,"line_end":393,"column_start":5,"column_end":69}},{"value":"/","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.8.4\\src\\sys\\windows\\named_pipe.rs","byte_start":13678704,"byte_end":13678707,"line_start":394,"line_end":394,"column_start":5,"column_end":8}},{"value":"/ # Errors","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.8.4\\src\\sys\\windows\\named_pipe.rs","byte_start":13678712,"byte_end":13678724,"line_start":395,"line_end":395,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.8.4\\src\\sys\\windows\\named_pipe.rs","byte_start":13678729,"byte_end":13678732,"line_start":396,"line_end":396,"column_start":5,"column_end":8}},{"value":"/ This function will return a \"would block\" error if the pipe has not yet","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.8.4\\src\\sys\\windows\\named_pipe.rs","byte_start":13678737,"byte_end":13678812,"line_start":397,"line_end":397,"column_start":5,"column_end":80}},{"value":"/ been registered with an event loop, if the connection operation has","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.8.4\\src\\sys\\windows\\named_pipe.rs","byte_start":13678817,"byte_end":13678888,"line_start":398,"line_end":398,"column_start":5,"column_end":76}},{"value":"/ previously been issued but has not yet completed, or if the connect","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.8.4\\src\\sys\\windows\\named_pipe.rs","byte_start":13678893,"byte_end":13678964,"line_start":399,"line_end":399,"column_start":5,"column_end":76}},{"value":"/ itself was issued and didn't finish immediately.","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.8.4\\src\\sys\\windows\\named_pipe.rs","byte_start":13678969,"byte_end":13679021,"line_start":400,"line_end":400,"column_start":5,"column_end":57}},{"value":"/","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.8.4\\src\\sys\\windows\\named_pipe.rs","byte_start":13679026,"byte_end":13679029,"line_start":401,"line_end":401,"column_start":5,"column_end":8}},{"value":"/ Normal I/O errors from the call to `ConnectNamedPipe` are returned","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.8.4\\src\\sys\\windows\\named_pipe.rs","byte_start":13679034,"byte_end":13679104,"line_start":402,"line_end":402,"column_start":5,"column_end":75}},{"value":"/ immediately.","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.8.4\\src\\sys\\windows\\named_pipe.rs","byte_start":13679109,"byte_end":13679125,"line_start":403,"line_end":403,"column_start":5,"column_end":21}}]},{"kind":"Method","id":{"krate":0,"index":1300},"span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.8.4\\src\\sys\\windows\\named_pipe.rs","byte_start":13681419,"byte_end":13681429,"line_start":456,"line_end":456,"column_start":12,"column_end":22},"name":"take_error","qualname":"<NamedPipe>::take_error","value":"pub fn take_error(&Self) -> io::Result<Option<io::Error>>","parent":null,"children":[],"decl_id":null,"docs":" Takes any internal error that has happened after the last I/O operation\n which hasn't been retrieved yet.","sig":null,"attributes":[{"value":"/ Takes any internal error that has happened after the last I/O operation","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.8.4\\src\\sys\\windows\\named_pipe.rs","byte_start":13680869,"byte_end":13680944,"line_start":447,"line_end":447,"column_start":5,"column_end":80}},{"value":"/ which hasn't been retrieved yet.","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.8.4\\src\\sys\\windows\\named_pipe.rs","byte_start":13680949,"byte_end":13680985,"line_start":448,"line_end":448,"column_start":5,"column_end":41}},{"value":"/","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.8.4\\src\\sys\\windows\\named_pipe.rs","byte_start":13680990,"byte_end":13680993,"line_start":449,"line_end":449,"column_start":5,"column_end":8}},{"value":"/ This is particularly useful when detecting failed attempts to `connect`.","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.8.4\\src\\sys\\windows\\named_pipe.rs","byte_start":13680998,"byte_end":13681074,"line_start":450,"line_end":450,"column_start":5,"column_end":81}},{"value":"/ After a completed `connect` flags this pipe as writable then callers","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.8.4\\src\\sys\\windows\\named_pipe.rs","byte_start":13681079,"byte_end":13681151,"line_start":451,"line_end":451,"column_start":5,"column_end":77}},{"value":"/ must invoke this method to determine whether the connection actually","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.8.4\\src\\sys\\windows\\named_pipe.rs","byte_start":13681156,"byte_end":13681228,"line_start":452,"line_end":452,"column_start":5,"column_end":77}},{"value":"/ succeeded. If this function returns `None` then a client is connected,","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.8.4\\src\\sys\\windows\\named_pipe.rs","byte_start":13681233,"byte_end":13681307,"line_start":453,"line_end":453,"column_start":5,"column_end":79}},{"value":"/ otherwise it returns an error of what happened and a client shouldn't be","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.8.4\\src\\sys\\windows\\named_pipe.rs","byte_start":13681312,"byte_end":13681388,"line_start":454,"line_end":454,"column_start":5,"column_end":81}},{"value":"/ connected.","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.8.4\\src\\sys\\windows\\named_pipe.rs","byte_start":13681393,"byte_end":13681407,"line_start":455,"line_end":455,"column_start":5,"column_end":19}}]},{"kind":"Method","id":{"krate":0,"index":1301},"span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.8.4\\src\\sys\\windows\\named_pipe.rs","byte_start":13681890,"byte_end":13681900,"line_start":467,"line_end":467,"column_start":12,"column_end":22},"name":"disconnect","qualname":"<NamedPipe>::disconnect","value":"pub fn disconnect(&Self) -> io::Result<()>","parent":null,"children":[],"decl_id":null,"docs":" Disconnects this named pipe from a connected client.","sig":null,"attributes":[{"value":"/ Disconnects this named pipe from a connected client.","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.8.4\\src\\sys\\windows\\named_pipe.rs","byte_start":13681546,"byte_end":13681602,"line_start":460,"line_end":460,"column_start":5,"column_end":61}},{"value":"/","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.8.4\\src\\sys\\windows\\named_pipe.rs","byte_start":13681607,"byte_end":13681610,"line_start":461,"line_end":461,"column_start":5,"column_end":8}},{"value":"/ This function will disconnect the pipe from a connected client, if any,","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.8.4\\src\\sys\\windows\\named_pipe.rs","byte_start":13681615,"byte_end":13681690,"line_start":462,"line_end":462,"column_start":5,"column_end":80}},{"value":"/ transitively calling the `DisconnectNamedPipe` function.","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.8.4\\src\\sys\\windows\\named_pipe.rs","byte_start":13681695,"byte_end":13681755,"line_start":463,"line_end":463,"column_start":5,"column_end":65}},{"value":"/","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.8.4\\src\\sys\\windows\\named_pipe.rs","byte_start":13681760,"byte_end":13681763,"line_start":464,"line_end":464,"column_start":5,"column_end":8}},{"value":"/ After a `disconnect` is issued, then a `connect` may be called again to","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.8.4\\src\\sys\\windows\\named_pipe.rs","byte_start":13681768,"byte_end":13681843,"line_start":465,"line_end":465,"column_start":5,"column_end":80}},{"value":"/ connect to another client.","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.8.4\\src\\sys\\windows\\named_pipe.rs","byte_start":13681848,"byte_end":13681878,"line_start":466,"line_end":466,"column_start":5,"column_end":35}}]},{"kind":"Struct","id":{"krate":0,"index":1416},"span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.8.4\\src\\token.rs","byte_start":51917,"byte_end":51922,"line_start":132,"line_end":132,"column_start":12,"column_end":17},"name":"Token","qualname":"::token::Token","value":"","parent":null,"children":[],"decl_id":null,"docs":" Associates readiness events with [`event::Source`]s.","sig":null,"attributes":[{"value":"/ Associates readiness events with [`event::Source`]s.","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.8.4\\src\\token.rs","byte_start":46968,"byte_end":47024,"line_start":1,"line_end":1,"column_start":1,"column_end":57}},{"value":"/","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.8.4\\src\\token.rs","byte_start":47025,"byte_end":47028,"line_start":2,"line_end":2,"column_start":1,"column_end":4}},{"value":"/ `Token` is a wrapper around `usize` and is used as an argument to","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.8.4\\src\\token.rs","byte_start":47029,"byte_end":47098,"line_start":3,"line_end":3,"column_start":1,"column_end":70}},{"value":"/ [`Registry::register`] and [`Registry::reregister`].","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.8.4\\src\\token.rs","byte_start":47099,"byte_end":47155,"line_start":4,"line_end":4,"column_start":1,"column_end":57}},{"value":"/","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.8.4\\src\\token.rs","byte_start":47156,"byte_end":47159,"line_start":5,"line_end":5,"column_start":1,"column_end":4}},{"value":"/ See [`Poll`] for more documentation on polling.","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.8.4\\src\\token.rs","byte_start":47160,"byte_end":47211,"line_start":6,"line_end":6,"column_start":1,"column_end":52}},{"value":"/","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.8.4\\src\\token.rs","byte_start":47212,"byte_end":47215,"line_start":7,"line_end":7,"column_start":1,"column_end":4}},{"value":"/ [`event::Source`]: ./event/trait.Source.html","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.8.4\\src\\token.rs","byte_start":47216,"byte_end":47264,"line_start":8,"line_end":8,"column_start":1,"column_end":49}},{"value":"/ [`Poll`]: struct.Poll.html","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.8.4\\src\\token.rs","byte_start":47265,"byte_end":47295,"line_start":9,"line_end":9,"column_start":1,"column_end":31}},{"value":"/ [`Registry::register`]: struct.Registry.html#method.register","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.8.4\\src\\token.rs","byte_start":47296,"byte_end":47360,"line_start":10,"line_end":10,"column_start":1,"column_end":65}},{"value":"/ [`Registry::reregister`]: struct.Registry.html#method.reregister","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.8.4\\src\\token.rs","byte_start":47361,"byte_end":47429,"line_start":11,"line_end":11,"column_start":1,"column_end":69}},{"value":"/","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.8.4\\src\\token.rs","byte_start":47430,"byte_end":47433,"line_start":12,"line_end":12,"column_start":1,"column_end":4}},{"value":"/ # Example","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.8.4\\src\\token.rs","byte_start":47434,"byte_end":47447,"line_start":13,"line_end":13,"column_start":1,"column_end":14}},{"value":"/","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.8.4\\src\\token.rs","byte_start":47448,"byte_end":47451,"line_start":14,"line_end":14,"column_start":1,"column_end":4}},{"value":"/ Using `Token` to track which socket generated the event. In this example,","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.8.4\\src\\token.rs","byte_start":47452,"byte_end":47529,"line_start":15,"line_end":15,"column_start":1,"column_end":78}},{"value":"/ `HashMap` is used, but usually something like [`slab`] is better.","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.8.4\\src\\token.rs","byte_start":47530,"byte_end":47599,"line_start":16,"line_end":16,"column_start":1,"column_end":70}},{"value":"/","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.8.4\\src\\token.rs","byte_start":47600,"byte_end":47603,"line_start":17,"line_end":17,"column_start":1,"column_end":4}},{"value":"/ [`slab`]: https://crates.io/crates/slab","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.8.4\\src\\token.rs","byte_start":47604,"byte_end":47647,"line_start":18,"line_end":18,"column_start":1,"column_end":44}},{"value":"/","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.8.4\\src\\token.rs","byte_start":47648,"byte_end":47651,"line_start":19,"line_end":19,"column_start":1,"column_end":4}},{"value":"/ # use std::error::Error;","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.8.4\\src\\token.rs","byte_start":47799,"byte_end":47827,"line_start":22,"line_end":22,"column_start":1,"column_end":29}},{"value":"/ # fn main() -> Result<(), Box<dyn Error>> {","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.8.4\\src\\token.rs","byte_start":47828,"byte_end":47875,"line_start":23,"line_end":23,"column_start":1,"column_end":48}},{"value":"/ use mio::{Events, Interest, Poll, Token};","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.8.4\\src\\token.rs","byte_start":47876,"byte_end":47921,"line_start":24,"line_end":24,"column_start":1,"column_end":46}},{"value":"/ use mio::net::TcpListener;","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.8.4\\src\\token.rs","byte_start":47922,"byte_end":47952,"line_start":25,"line_end":25,"column_start":1,"column_end":31}},{"value":"/","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.8.4\\src\\token.rs","byte_start":47953,"byte_end":47956,"line_start":26,"line_end":26,"column_start":1,"column_end":4}},{"value":"/ use std::thread;","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.8.4\\src\\token.rs","byte_start":47957,"byte_end":47977,"line_start":27,"line_end":27,"column_start":1,"column_end":21}},{"value":"/ use std::io::{self, Read};","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.8.4\\src\\token.rs","byte_start":47978,"byte_end":48008,"line_start":28,"line_end":28,"column_start":1,"column_end":31}},{"value":"/ use std::collections::HashMap;","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.8.4\\src\\token.rs","byte_start":48009,"byte_end":48043,"line_start":29,"line_end":29,"column_start":1,"column_end":35}},{"value":"/","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.8.4\\src\\token.rs","byte_start":48044,"byte_end":48047,"line_start":30,"line_end":30,"column_start":1,"column_end":4}},{"value":"/ // After this number of sockets is accepted, the server will shutdown.","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.8.4\\src\\token.rs","byte_start":48048,"byte_end":48122,"line_start":31,"line_end":31,"column_start":1,"column_end":75}},{"value":"/ const MAX_SOCKETS: usize = 32;","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.8.4\\src\\token.rs","byte_start":48123,"byte_end":48157,"line_start":32,"line_end":32,"column_start":1,"column_end":35}},{"value":"/","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.8.4\\src\\token.rs","byte_start":48158,"byte_end":48161,"line_start":33,"line_end":33,"column_start":1,"column_end":4}},{"value":"/ // Pick a token that will not be used by any other socket and use that one","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.8.4\\src\\token.rs","byte_start":48162,"byte_end":48240,"line_start":34,"line_end":34,"column_start":1,"column_end":79}},{"value":"/ // for the listener.","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.8.4\\src\\token.rs","byte_start":48241,"byte_end":48265,"line_start":35,"line_end":35,"column_start":1,"column_end":25}},{"value":"/ const LISTENER: Token = Token(1024);","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.8.4\\src\\token.rs","byte_start":48266,"byte_end":48306,"line_start":36,"line_end":36,"column_start":1,"column_end":41}},{"value":"/","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.8.4\\src\\token.rs","byte_start":48307,"byte_end":48310,"line_start":37,"line_end":37,"column_start":1,"column_end":4}},{"value":"/ // Used to store the sockets.","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.8.4\\src\\token.rs","byte_start":48311,"byte_end":48344,"line_start":38,"line_end":38,"column_start":1,"column_end":34}},{"value":"/ let mut sockets = HashMap::new();","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.8.4\\src\\token.rs","byte_start":48345,"byte_end":48382,"line_start":39,"line_end":39,"column_start":1,"column_end":38}},{"value":"/","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.8.4\\src\\token.rs","byte_start":48383,"byte_end":48386,"line_start":40,"line_end":40,"column_start":1,"column_end":4}},{"value":"/ // This is used to generate a unique token for a socket","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.8.4\\src\\token.rs","byte_start":48387,"byte_end":48446,"line_start":41,"line_end":41,"column_start":1,"column_end":60}},{"value":"/ let mut next_socket_index = 0;","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.8.4\\src\\token.rs","byte_start":48447,"byte_end":48481,"line_start":42,"line_end":42,"column_start":1,"column_end":35}},{"value":"/","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.8.4\\src\\token.rs","byte_start":48482,"byte_end":48485,"line_start":43,"line_end":43,"column_start":1,"column_end":4}},{"value":"/ // The `Poll` instance","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.8.4\\src\\token.rs","byte_start":48486,"byte_end":48512,"line_start":44,"line_end":44,"column_start":1,"column_end":27}},{"value":"/ let mut poll = Poll::new()?;","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.8.4\\src\\token.rs","byte_start":48513,"byte_end":48545,"line_start":45,"line_end":45,"column_start":1,"column_end":33}},{"value":"/","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.8.4\\src\\token.rs","byte_start":48546,"byte_end":48549,"line_start":46,"line_end":46,"column_start":1,"column_end":4}},{"value":"/ // Tcp listener","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.8.4\\src\\token.rs","byte_start":48550,"byte_end":48569,"line_start":47,"line_end":47,"column_start":1,"column_end":20}},{"value":"/ let mut listener = TcpListener::bind(\"127.0.0.1:0\".parse()?)?;","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.8.4\\src\\token.rs","byte_start":48570,"byte_end":48636,"line_start":48,"line_end":48,"column_start":1,"column_end":67}},{"value":"/","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.8.4\\src\\token.rs","byte_start":48637,"byte_end":48640,"line_start":49,"line_end":49,"column_start":1,"column_end":4}},{"value":"/ // Register the listener","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.8.4\\src\\token.rs","byte_start":48641,"byte_end":48669,"line_start":50,"line_end":50,"column_start":1,"column_end":29}},{"value":"/ poll.registry().register(&mut listener, LISTENER, Interest::READABLE)?;","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.8.4\\src\\token.rs","byte_start":48670,"byte_end":48745,"line_start":51,"line_end":51,"column_start":1,"column_end":76}},{"value":"/","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.8.4\\src\\token.rs","byte_start":48746,"byte_end":48749,"line_start":52,"line_end":52,"column_start":1,"column_end":4}},{"value":"/ // Spawn a thread that will connect a bunch of sockets then close them","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.8.4\\src\\token.rs","byte_start":48750,"byte_end":48824,"line_start":53,"line_end":53,"column_start":1,"column_end":75}},{"value":"/ let addr = listener.local_addr()?;","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.8.4\\src\\token.rs","byte_start":48825,"byte_end":48863,"line_start":54,"line_end":54,"column_start":1,"column_end":39}},{"value":"/ thread::spawn(move || {","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.8.4\\src\\token.rs","byte_start":48864,"byte_end":48891,"line_start":55,"line_end":55,"column_start":1,"column_end":28}},{"value":"/     use std::net::TcpStream;","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.8.4\\src\\token.rs","byte_start":48892,"byte_end":48924,"line_start":56,"line_end":56,"column_start":1,"column_end":33}},{"value":"/","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.8.4\\src\\token.rs","byte_start":48925,"byte_end":48928,"line_start":57,"line_end":57,"column_start":1,"column_end":4}},{"value":"/     // +1 here is to connect an extra socket to signal the socket to close","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.8.4\\src\\token.rs","byte_start":48929,"byte_end":49007,"line_start":58,"line_end":58,"column_start":1,"column_end":79}},{"value":"/     for _ in 0..(MAX_SOCKETS+1) {","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.8.4\\src\\token.rs","byte_start":49008,"byte_end":49045,"line_start":59,"line_end":59,"column_start":1,"column_end":38}},{"value":"/         // Connect then drop the socket","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.8.4\\src\\token.rs","byte_start":49046,"byte_end":49089,"line_start":60,"line_end":60,"column_start":1,"column_end":44}},{"value":"/         let _ = TcpStream::connect(addr).unwrap();","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.8.4\\src\\token.rs","byte_start":49090,"byte_end":49144,"line_start":61,"line_end":61,"column_start":1,"column_end":55}},{"value":"/     }","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.8.4\\src\\token.rs","byte_start":49145,"byte_end":49154,"line_start":62,"line_end":62,"column_start":1,"column_end":10}},{"value":"/ });","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.8.4\\src\\token.rs","byte_start":49155,"byte_end":49162,"line_start":63,"line_end":63,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.8.4\\src\\token.rs","byte_start":49163,"byte_end":49166,"line_start":64,"line_end":64,"column_start":1,"column_end":4}},{"value":"/ // Event storage","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.8.4\\src\\token.rs","byte_start":49167,"byte_end":49187,"line_start":65,"line_end":65,"column_start":1,"column_end":21}},{"value":"/ let mut events = Events::with_capacity(1024);","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.8.4\\src\\token.rs","byte_start":49188,"byte_end":49237,"line_start":66,"line_end":66,"column_start":1,"column_end":50}},{"value":"/","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.8.4\\src\\token.rs","byte_start":49238,"byte_end":49241,"line_start":67,"line_end":67,"column_start":1,"column_end":4}},{"value":"/ // Read buffer, this will never actually get filled","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.8.4\\src\\token.rs","byte_start":49242,"byte_end":49297,"line_start":68,"line_end":68,"column_start":1,"column_end":56}},{"value":"/ let mut buf = [0; 256];","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.8.4\\src\\token.rs","byte_start":49298,"byte_end":49325,"line_start":69,"line_end":69,"column_start":1,"column_end":28}},{"value":"/","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.8.4\\src\\token.rs","byte_start":49326,"byte_end":49329,"line_start":70,"line_end":70,"column_start":1,"column_end":4}},{"value":"/ // The main event loop","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.8.4\\src\\token.rs","byte_start":49330,"byte_end":49356,"line_start":71,"line_end":71,"column_start":1,"column_end":27}},{"value":"/ loop {","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.8.4\\src\\token.rs","byte_start":49357,"byte_end":49367,"line_start":72,"line_end":72,"column_start":1,"column_end":11}},{"value":"/     // Wait for events","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.8.4\\src\\token.rs","byte_start":49368,"byte_end":49394,"line_start":73,"line_end":73,"column_start":1,"column_end":27}},{"value":"/     poll.poll(&mut events, None)?;","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.8.4\\src\\token.rs","byte_start":49395,"byte_end":49433,"line_start":74,"line_end":74,"column_start":1,"column_end":39}},{"value":"/","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.8.4\\src\\token.rs","byte_start":49434,"byte_end":49437,"line_start":75,"line_end":75,"column_start":1,"column_end":4}},{"value":"/     for event in &events {","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.8.4\\src\\token.rs","byte_start":49438,"byte_end":49468,"line_start":76,"line_end":76,"column_start":1,"column_end":31}},{"value":"/         match event.token() {","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.8.4\\src\\token.rs","byte_start":49469,"byte_end":49502,"line_start":77,"line_end":77,"column_start":1,"column_end":34}},{"value":"/             LISTENER => {","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.8.4\\src\\token.rs","byte_start":49503,"byte_end":49532,"line_start":78,"line_end":78,"column_start":1,"column_end":30}},{"value":"/                 // Perform operations in a loop until `WouldBlock` is","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.8.4\\src\\token.rs","byte_start":49533,"byte_end":49606,"line_start":79,"line_end":79,"column_start":1,"column_end":74}},{"value":"/                 // encountered.","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.8.4\\src\\token.rs","byte_start":49607,"byte_end":49642,"line_start":80,"line_end":80,"column_start":1,"column_end":36}},{"value":"/                 loop {","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.8.4\\src\\token.rs","byte_start":49643,"byte_end":49669,"line_start":81,"line_end":81,"column_start":1,"column_end":27}},{"value":"/                     match listener.accept() {","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.8.4\\src\\token.rs","byte_start":49670,"byte_end":49719,"line_start":82,"line_end":82,"column_start":1,"column_end":50}},{"value":"/                         Ok((mut socket, _)) => {","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.8.4\\src\\token.rs","byte_start":49720,"byte_end":49772,"line_start":83,"line_end":83,"column_start":1,"column_end":53}},{"value":"/                             // Shutdown the server","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.8.4\\src\\token.rs","byte_start":49773,"byte_end":49827,"line_start":84,"line_end":84,"column_start":1,"column_end":55}},{"value":"/                             if next_socket_index == MAX_SOCKETS {","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.8.4\\src\\token.rs","byte_start":49828,"byte_end":49897,"line_start":85,"line_end":85,"column_start":1,"column_end":70}},{"value":"/                                 return Ok(());","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.8.4\\src\\token.rs","byte_start":49898,"byte_end":49948,"line_start":86,"line_end":86,"column_start":1,"column_end":51}},{"value":"/                             }","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.8.4\\src\\token.rs","byte_start":49949,"byte_end":49982,"line_start":87,"line_end":87,"column_start":1,"column_end":34}},{"value":"/","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.8.4\\src\\token.rs","byte_start":49983,"byte_end":49986,"line_start":88,"line_end":88,"column_start":1,"column_end":4}},{"value":"/                             // Get the token for the socket","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.8.4\\src\\token.rs","byte_start":49987,"byte_end":50050,"line_start":89,"line_end":89,"column_start":1,"column_end":64}},{"value":"/                             let token = Token(next_socket_index);","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.8.4\\src\\token.rs","byte_start":50051,"byte_end":50120,"line_start":90,"line_end":90,"column_start":1,"column_end":70}},{"value":"/                             next_socket_index += 1;","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.8.4\\src\\token.rs","byte_start":50121,"byte_end":50176,"line_start":91,"line_end":91,"column_start":1,"column_end":56}},{"value":"/","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.8.4\\src\\token.rs","byte_start":50177,"byte_end":50180,"line_start":92,"line_end":92,"column_start":1,"column_end":4}},{"value":"/                             // Register the new socket w/ poll","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.8.4\\src\\token.rs","byte_start":50181,"byte_end":50247,"line_start":93,"line_end":93,"column_start":1,"column_end":67}},{"value":"/                             poll.registry().register(&mut socket, token, Interest::READABLE)?;","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.8.4\\src\\token.rs","byte_start":50248,"byte_end":50346,"line_start":94,"line_end":94,"column_start":1,"column_end":99}},{"value":"/","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.8.4\\src\\token.rs","byte_start":50347,"byte_end":50350,"line_start":95,"line_end":95,"column_start":1,"column_end":4}},{"value":"/                             // Store the socket","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.8.4\\src\\token.rs","byte_start":50351,"byte_end":50402,"line_start":96,"line_end":96,"column_start":1,"column_end":52}},{"value":"/                             sockets.insert(token, socket);","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.8.4\\src\\token.rs","byte_start":50403,"byte_end":50465,"line_start":97,"line_end":97,"column_start":1,"column_end":63}},{"value":"/                         }","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.8.4\\src\\token.rs","byte_start":50466,"byte_end":50495,"line_start":98,"line_end":98,"column_start":1,"column_end":30}},{"value":"/                         Err(ref e) if e.kind() == io::ErrorKind::WouldBlock => {","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.8.4\\src\\token.rs","byte_start":50496,"byte_end":50580,"line_start":99,"line_end":99,"column_start":1,"column_end":85}},{"value":"/                             // Socket is not ready anymore, stop accepting","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.8.4\\src\\token.rs","byte_start":50581,"byte_end":50659,"line_start":100,"line_end":100,"column_start":1,"column_end":79}},{"value":"/                             break;","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.8.4\\src\\token.rs","byte_start":50660,"byte_end":50698,"line_start":101,"line_end":101,"column_start":1,"column_end":39}},{"value":"/                         }","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.8.4\\src\\token.rs","byte_start":50699,"byte_end":50728,"line_start":102,"line_end":102,"column_start":1,"column_end":30}},{"value":"/                         e => panic!(\"err={:?}\", e), // Unexpected error","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.8.4\\src\\token.rs","byte_start":50729,"byte_end":50804,"line_start":103,"line_end":103,"column_start":1,"column_end":76}},{"value":"/                     }","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.8.4\\src\\token.rs","byte_start":50805,"byte_end":50830,"line_start":104,"line_end":104,"column_start":1,"column_end":26}},{"value":"/                 }","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.8.4\\src\\token.rs","byte_start":50831,"byte_end":50852,"line_start":105,"line_end":105,"column_start":1,"column_end":22}},{"value":"/             }","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.8.4\\src\\token.rs","byte_start":50853,"byte_end":50870,"line_start":106,"line_end":106,"column_start":1,"column_end":18}},{"value":"/             token => {","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.8.4\\src\\token.rs","byte_start":50871,"byte_end":50897,"line_start":107,"line_end":107,"column_start":1,"column_end":27}},{"value":"/                 // Always operate in a loop","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.8.4\\src\\token.rs","byte_start":50898,"byte_end":50945,"line_start":108,"line_end":108,"column_start":1,"column_end":48}},{"value":"/                 loop {","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.8.4\\src\\token.rs","byte_start":50946,"byte_end":50972,"line_start":109,"line_end":109,"column_start":1,"column_end":27}},{"value":"/                     match sockets.get_mut(&token).unwrap().read(&mut buf) {","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.8.4\\src\\token.rs","byte_start":50973,"byte_end":51052,"line_start":110,"line_end":110,"column_start":1,"column_end":80}},{"value":"/                         Ok(0) => {","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.8.4\\src\\token.rs","byte_start":51053,"byte_end":51091,"line_start":111,"line_end":111,"column_start":1,"column_end":39}},{"value":"/                             // Socket is closed, remove it from the map","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.8.4\\src\\token.rs","byte_start":51092,"byte_end":51167,"line_start":112,"line_end":112,"column_start":1,"column_end":76}},{"value":"/                             sockets.remove(&token);","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.8.4\\src\\token.rs","byte_start":51168,"byte_end":51223,"line_start":113,"line_end":113,"column_start":1,"column_end":56}},{"value":"/                             break;","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.8.4\\src\\token.rs","byte_start":51224,"byte_end":51262,"line_start":114,"line_end":114,"column_start":1,"column_end":39}},{"value":"/                         }","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.8.4\\src\\token.rs","byte_start":51263,"byte_end":51292,"line_start":115,"line_end":115,"column_start":1,"column_end":30}},{"value":"/                         // Data is not actually sent in this example","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.8.4\\src\\token.rs","byte_start":51293,"byte_end":51365,"line_start":116,"line_end":116,"column_start":1,"column_end":73}},{"value":"/                         Ok(_) => unreachable!(),","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.8.4\\src\\token.rs","byte_start":51366,"byte_end":51418,"line_start":117,"line_end":117,"column_start":1,"column_end":53}},{"value":"/                         Err(ref e) if e.kind() == io::ErrorKind::WouldBlock => {","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.8.4\\src\\token.rs","byte_start":51419,"byte_end":51503,"line_start":118,"line_end":118,"column_start":1,"column_end":85}},{"value":"/                             // Socket is not ready anymore, stop reading","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.8.4\\src\\token.rs","byte_start":51504,"byte_end":51580,"line_start":119,"line_end":119,"column_start":1,"column_end":77}},{"value":"/                             break;","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.8.4\\src\\token.rs","byte_start":51581,"byte_end":51619,"line_start":120,"line_end":120,"column_start":1,"column_end":39}},{"value":"/                         }","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.8.4\\src\\token.rs","byte_start":51620,"byte_end":51649,"line_start":121,"line_end":121,"column_start":1,"column_end":30}},{"value":"/                         e => panic!(\"err={:?}\", e), // Unexpected error","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.8.4\\src\\token.rs","byte_start":51650,"byte_end":51725,"line_start":122,"line_end":122,"column_start":1,"column_end":76}},{"value":"/                     }","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.8.4\\src\\token.rs","byte_start":51726,"byte_end":51751,"line_start":123,"line_end":123,"column_start":1,"column_end":26}},{"value":"/                 }","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.8.4\\src\\token.rs","byte_start":51752,"byte_end":51773,"line_start":124,"line_end":124,"column_start":1,"column_end":22}},{"value":"/             }","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.8.4\\src\\token.rs","byte_start":51774,"byte_end":51791,"line_start":125,"line_end":125,"column_start":1,"column_end":18}},{"value":"/         }","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.8.4\\src\\token.rs","byte_start":51792,"byte_end":51805,"line_start":126,"line_end":126,"column_start":1,"column_end":14}},{"value":"/     }","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.8.4\\src\\token.rs","byte_start":51806,"byte_end":51815,"line_start":127,"line_end":127,"column_start":1,"column_end":10}},{"value":"/ }","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.8.4\\src\\token.rs","byte_start":51816,"byte_end":51821,"line_start":128,"line_end":128,"column_start":1,"column_end":6}},{"value":"/ # }","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.8.4\\src\\token.rs","byte_start":51822,"byte_end":51829,"line_start":129,"line_end":129,"column_start":1,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.8.4\\src\\token.rs","byte_start":51830,"byte_end":51837,"line_start":130,"line_end":130,"column_start":1,"column_end":8}}]},{"kind":"Field","id":{"krate":0,"index":1418},"span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.8.4\\src\\token.rs","byte_start":51923,"byte_end":51932,"line_start":132,"line_end":132,"column_start":18,"column_end":27},"name":"0","qualname":"::token::Token::0","value":"usize","parent":{"krate":0,"index":1416},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":1438},"span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.8.4\\src\\waker.rs","byte_start":54594,"byte_end":54599,"line_start":78,"line_end":78,"column_start":12,"column_end":17},"name":"Waker","qualname":"::waker::Waker","value":"Waker {  }","parent":null,"children":[{"krate":0,"index":1439}],"decl_id":null,"docs":" Waker allows cross-thread waking of [`Poll`].","sig":null,"attributes":[{"value":"/ Waker allows cross-thread waking of [`Poll`].","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.8.4\\src\\waker.rs","byte_start":52073,"byte_end":52122,"line_start":5,"line_end":5,"column_start":1,"column_end":50}},{"value":"/","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.8.4\\src\\waker.rs","byte_start":52123,"byte_end":52126,"line_start":6,"line_end":6,"column_start":1,"column_end":4}},{"value":"/ When created it will cause events with [`readable`] readiness and the","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.8.4\\src\\waker.rs","byte_start":52127,"byte_end":52200,"line_start":7,"line_end":7,"column_start":1,"column_end":74}},{"value":"/ provided `token` if [`wake`] is called, possibly from another thread.","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.8.4\\src\\waker.rs","byte_start":52201,"byte_end":52274,"line_start":8,"line_end":8,"column_start":1,"column_end":74}},{"value":"/","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.8.4\\src\\waker.rs","byte_start":52275,"byte_end":52278,"line_start":9,"line_end":9,"column_start":1,"column_end":4}},{"value":"/ [`Poll`]: struct.Poll.html","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.8.4\\src\\waker.rs","byte_start":52279,"byte_end":52309,"line_start":10,"line_end":10,"column_start":1,"column_end":31}},{"value":"/ [`readable`]: ./event/struct.Event.html#method.is_readable","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.8.4\\src\\waker.rs","byte_start":52310,"byte_end":52372,"line_start":11,"line_end":11,"column_start":1,"column_end":63}},{"value":"/ [`wake`]: struct.Waker.html#method.wake","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.8.4\\src\\waker.rs","byte_start":52373,"byte_end":52416,"line_start":12,"line_end":12,"column_start":1,"column_end":44}},{"value":"/","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.8.4\\src\\waker.rs","byte_start":52417,"byte_end":52420,"line_start":13,"line_end":13,"column_start":1,"column_end":4}},{"value":"/ # Notes","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.8.4\\src\\waker.rs","byte_start":52421,"byte_end":52432,"line_start":14,"line_end":14,"column_start":1,"column_end":12}},{"value":"/","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.8.4\\src\\waker.rs","byte_start":52433,"byte_end":52436,"line_start":15,"line_end":15,"column_start":1,"column_end":4}},{"value":"/ `Waker` events are only guaranteed to be delivered while the `Waker` value","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.8.4\\src\\waker.rs","byte_start":52437,"byte_end":52515,"line_start":16,"line_end":16,"column_start":1,"column_end":79}},{"value":"/ is alive.","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.8.4\\src\\waker.rs","byte_start":52516,"byte_end":52529,"line_start":17,"line_end":17,"column_start":1,"column_end":14}},{"value":"/","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.8.4\\src\\waker.rs","byte_start":52530,"byte_end":52533,"line_start":18,"line_end":18,"column_start":1,"column_end":4}},{"value":"/ Only a single `Waker` can be active per [`Poll`], if multiple threads need","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.8.4\\src\\waker.rs","byte_start":52534,"byte_end":52612,"line_start":19,"line_end":19,"column_start":1,"column_end":79}},{"value":"/ access to the `Waker` it can be shared via for example an `Arc`. What","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.8.4\\src\\waker.rs","byte_start":52613,"byte_end":52686,"line_start":20,"line_end":20,"column_start":1,"column_end":74}},{"value":"/ happens if multiple `Waker`s are registered with the same `Poll` is","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.8.4\\src\\waker.rs","byte_start":52687,"byte_end":52758,"line_start":21,"line_end":21,"column_start":1,"column_end":72}},{"value":"/ unspecified.","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.8.4\\src\\waker.rs","byte_start":52759,"byte_end":52775,"line_start":22,"line_end":22,"column_start":1,"column_end":17}},{"value":"/","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.8.4\\src\\waker.rs","byte_start":52776,"byte_end":52779,"line_start":23,"line_end":23,"column_start":1,"column_end":4}},{"value":"/ # Implementation notes","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.8.4\\src\\waker.rs","byte_start":52780,"byte_end":52806,"line_start":24,"line_end":24,"column_start":1,"column_end":27}},{"value":"/","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.8.4\\src\\waker.rs","byte_start":52807,"byte_end":52810,"line_start":25,"line_end":25,"column_start":1,"column_end":4}},{"value":"/ On platforms that support kqueue this will use the `EVFILT_USER` event","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.8.4\\src\\waker.rs","byte_start":52811,"byte_end":52885,"line_start":26,"line_end":26,"column_start":1,"column_end":75}},{"value":"/ filter, see [implementation notes of `Poll`] to see what platforms support","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.8.4\\src\\waker.rs","byte_start":52886,"byte_end":52964,"line_start":27,"line_end":27,"column_start":1,"column_end":79}},{"value":"/ kqueue. On Linux it uses [eventfd].","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.8.4\\src\\waker.rs","byte_start":52965,"byte_end":53004,"line_start":28,"line_end":28,"column_start":1,"column_end":40}},{"value":"/","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.8.4\\src\\waker.rs","byte_start":53005,"byte_end":53008,"line_start":29,"line_end":29,"column_start":1,"column_end":4}},{"value":"/ [implementation notes of `Poll`]: struct.Poll.html#implementation-notes","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.8.4\\src\\waker.rs","byte_start":53009,"byte_end":53084,"line_start":30,"line_end":30,"column_start":1,"column_end":76}},{"value":"/ [eventfd]: https://man7.org/linux/man-pages/man2/eventfd.2.html","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.8.4\\src\\waker.rs","byte_start":53085,"byte_end":53152,"line_start":31,"line_end":31,"column_start":1,"column_end":68}},{"value":"/","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.8.4\\src\\waker.rs","byte_start":53153,"byte_end":53156,"line_start":32,"line_end":32,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.8.4\\src\\waker.rs","byte_start":53157,"byte_end":53171,"line_start":33,"line_end":33,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.8.4\\src\\waker.rs","byte_start":53172,"byte_end":53175,"line_start":34,"line_end":34,"column_start":1,"column_end":4}},{"value":"/ Wake a [`Poll`] instance from another thread.","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.8.4\\src\\waker.rs","byte_start":53176,"byte_end":53225,"line_start":35,"line_end":35,"column_start":1,"column_end":50}},{"value":"/","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.8.4\\src\\waker.rs","byte_start":53226,"byte_end":53229,"line_start":36,"line_end":36,"column_start":1,"column_end":4}},{"value":"/ # fn main() -> Result<(), Box<dyn std::error::Error>> {","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.8.4\\src\\waker.rs","byte_start":53333,"byte_end":53392,"line_start":39,"line_end":39,"column_start":1,"column_end":60}},{"value":"/ use std::thread;","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.8.4\\src\\waker.rs","byte_start":53393,"byte_end":53413,"line_start":40,"line_end":40,"column_start":1,"column_end":21}},{"value":"/ use std::time::Duration;","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.8.4\\src\\waker.rs","byte_start":53414,"byte_end":53442,"line_start":41,"line_end":41,"column_start":1,"column_end":29}},{"value":"/ use std::sync::Arc;","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.8.4\\src\\waker.rs","byte_start":53443,"byte_end":53466,"line_start":42,"line_end":42,"column_start":1,"column_end":24}},{"value":"/","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.8.4\\src\\waker.rs","byte_start":53467,"byte_end":53470,"line_start":43,"line_end":43,"column_start":1,"column_end":4}},{"value":"/ use mio::{Events, Token, Poll, Waker};","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.8.4\\src\\waker.rs","byte_start":53471,"byte_end":53513,"line_start":44,"line_end":44,"column_start":1,"column_end":43}},{"value":"/","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.8.4\\src\\waker.rs","byte_start":53514,"byte_end":53517,"line_start":45,"line_end":45,"column_start":1,"column_end":4}},{"value":"/ const WAKE_TOKEN: Token = Token(10);","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.8.4\\src\\waker.rs","byte_start":53518,"byte_end":53558,"line_start":46,"line_end":46,"column_start":1,"column_end":41}},{"value":"/","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.8.4\\src\\waker.rs","byte_start":53559,"byte_end":53562,"line_start":47,"line_end":47,"column_start":1,"column_end":4}},{"value":"/ let mut poll = Poll::new()?;","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.8.4\\src\\waker.rs","byte_start":53563,"byte_end":53595,"line_start":48,"line_end":48,"column_start":1,"column_end":33}},{"value":"/ let mut events = Events::with_capacity(2);","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.8.4\\src\\waker.rs","byte_start":53596,"byte_end":53642,"line_start":49,"line_end":49,"column_start":1,"column_end":47}},{"value":"/","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.8.4\\src\\waker.rs","byte_start":53643,"byte_end":53646,"line_start":50,"line_end":50,"column_start":1,"column_end":4}},{"value":"/ let waker = Arc::new(Waker::new(poll.registry(), WAKE_TOKEN)?);","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.8.4\\src\\waker.rs","byte_start":53647,"byte_end":53714,"line_start":51,"line_end":51,"column_start":1,"column_end":68}},{"value":"/","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.8.4\\src\\waker.rs","byte_start":53715,"byte_end":53718,"line_start":52,"line_end":52,"column_start":1,"column_end":4}},{"value":"/ // We need to keep the Waker alive, so we'll create a clone for the","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.8.4\\src\\waker.rs","byte_start":53719,"byte_end":53790,"line_start":53,"line_end":53,"column_start":1,"column_end":72}},{"value":"/ // thread we create below.","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.8.4\\src\\waker.rs","byte_start":53791,"byte_end":53821,"line_start":54,"line_end":54,"column_start":1,"column_end":31}},{"value":"/ let waker1 = waker.clone();","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.8.4\\src\\waker.rs","byte_start":53822,"byte_end":53853,"line_start":55,"line_end":55,"column_start":1,"column_end":32}},{"value":"/ let handle = thread::spawn(move || {","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.8.4\\src\\waker.rs","byte_start":53854,"byte_end":53894,"line_start":56,"line_end":56,"column_start":1,"column_end":41}},{"value":"/     // Working hard, or hardly working?","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.8.4\\src\\waker.rs","byte_start":53895,"byte_end":53938,"line_start":57,"line_end":57,"column_start":1,"column_end":44}},{"value":"/     thread::sleep(Duration::from_millis(500));","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.8.4\\src\\waker.rs","byte_start":53939,"byte_end":53989,"line_start":58,"line_end":58,"column_start":1,"column_end":51}},{"value":"/","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.8.4\\src\\waker.rs","byte_start":53990,"byte_end":53993,"line_start":59,"line_end":59,"column_start":1,"column_end":4}},{"value":"/     // Now we'll wake the queue on the other thread.","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.8.4\\src\\waker.rs","byte_start":53994,"byte_end":54050,"line_start":60,"line_end":60,"column_start":1,"column_end":57}},{"value":"/     waker1.wake().expect(\"unable to wake\");","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.8.4\\src\\waker.rs","byte_start":54051,"byte_end":54098,"line_start":61,"line_end":61,"column_start":1,"column_end":48}},{"value":"/ });","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.8.4\\src\\waker.rs","byte_start":54099,"byte_end":54106,"line_start":62,"line_end":62,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.8.4\\src\\waker.rs","byte_start":54107,"byte_end":54110,"line_start":63,"line_end":63,"column_start":1,"column_end":4}},{"value":"/ // On our current thread we'll poll for events, without a timeout.","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.8.4\\src\\waker.rs","byte_start":54111,"byte_end":54181,"line_start":64,"line_end":64,"column_start":1,"column_end":71}},{"value":"/ poll.poll(&mut events, None)?;","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.8.4\\src\\waker.rs","byte_start":54182,"byte_end":54216,"line_start":65,"line_end":65,"column_start":1,"column_end":35}},{"value":"/","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.8.4\\src\\waker.rs","byte_start":54217,"byte_end":54220,"line_start":66,"line_end":66,"column_start":1,"column_end":4}},{"value":"/ // After about 500 milliseconds we should be awoken by the other thread and","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.8.4\\src\\waker.rs","byte_start":54221,"byte_end":54300,"line_start":67,"line_end":67,"column_start":1,"column_end":80}},{"value":"/ // get a single event.","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.8.4\\src\\waker.rs","byte_start":54301,"byte_end":54327,"line_start":68,"line_end":68,"column_start":1,"column_end":27}},{"value":"/ assert!(!events.is_empty());","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.8.4\\src\\waker.rs","byte_start":54328,"byte_end":54360,"line_start":69,"line_end":69,"column_start":1,"column_end":33}},{"value":"/ let waker_event = events.iter().next().unwrap();","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.8.4\\src\\waker.rs","byte_start":54361,"byte_end":54413,"line_start":70,"line_end":70,"column_start":1,"column_end":53}},{"value":"/ assert!(waker_event.is_readable());","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.8.4\\src\\waker.rs","byte_start":54414,"byte_end":54453,"line_start":71,"line_end":71,"column_start":1,"column_end":40}},{"value":"/ assert_eq!(waker_event.token(), WAKE_TOKEN);","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.8.4\\src\\waker.rs","byte_start":54454,"byte_end":54502,"line_start":72,"line_end":72,"column_start":1,"column_end":49}},{"value":"/ # handle.join().unwrap();","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.8.4\\src\\waker.rs","byte_start":54503,"byte_end":54532,"line_start":73,"line_end":73,"column_start":1,"column_end":30}},{"value":"/ #     Ok(())","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.8.4\\src\\waker.rs","byte_start":54533,"byte_end":54549,"line_start":74,"line_end":74,"column_start":1,"column_end":17}},{"value":"/ # }","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.8.4\\src\\waker.rs","byte_start":54550,"byte_end":54557,"line_start":75,"line_end":75,"column_start":1,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.8.4\\src\\waker.rs","byte_start":54558,"byte_end":54565,"line_start":76,"line_end":76,"column_start":1,"column_end":8}}]},{"kind":"Method","id":{"krate":0,"index":112},"span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.8.4\\src\\waker.rs","byte_start":54682,"byte_end":54685,"line_start":84,"line_end":84,"column_start":12,"column_end":15},"name":"new","qualname":"<Waker>::new","value":"pub fn new(&Registry, Token) -> io::Result<Waker>","parent":null,"children":[],"decl_id":null,"docs":" Create a new `Waker`.\n","sig":null,"attributes":[{"value":"/ Create a new `Waker`.","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.8.4\\src\\waker.rs","byte_start":54645,"byte_end":54670,"line_start":83,"line_end":83,"column_start":5,"column_end":30}}]},{"kind":"Method","id":{"krate":0,"index":114},"span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.8.4\\src\\waker.rs","byte_start":55013,"byte_end":55017,"line_start":93,"line_end":93,"column_start":12,"column_end":16},"name":"wake","qualname":"<Waker>::wake","value":"pub fn wake(&Self) -> io::Result<()>","parent":null,"children":[],"decl_id":null,"docs":" Wake up the [`Poll`] associated with this `Waker`.","sig":null,"attributes":[{"value":"/ Wake up the [`Poll`] associated with this `Waker`.","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.8.4\\src\\waker.rs","byte_start":54904,"byte_end":54958,"line_start":90,"line_end":90,"column_start":5,"column_end":59}},{"value":"/","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.8.4\\src\\waker.rs","byte_start":54963,"byte_end":54966,"line_start":91,"line_end":91,"column_start":5,"column_end":8}},{"value":"/ [`Poll`]: struct.Poll.html","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.8.4\\src\\waker.rs","byte_start":54971,"byte_end":55001,"line_start":92,"line_end":92,"column_start":5,"column_end":35}}]},{"kind":"Mod","id":{"krate":0,"index":115},"span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.8.4\\src\\event\\mod.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"event","qualname":"::event","value":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.8.4\\src\\event\\mod.rs","parent":null,"children":[{"krate":0,"index":116},{"krate":0,"index":147},{"krate":0,"index":179},{"krate":0,"index":202},{"krate":0,"index":205},{"krate":0,"index":206},{"krate":0,"index":209},{"krate":0,"index":212}],"decl_id":null,"docs":" Readiness event types and utilities.\n","sig":null,"attributes":[{"value":"/ Readiness event types and utilities.","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.8.4\\src\\event\\mod.rs","byte_start":55080,"byte_end":55120,"line_start":1,"line_end":1,"column_start":1,"column_end":41}}]},{"kind":"Struct","id":{"krate":0,"index":1442},"span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.8.4\\src\\event\\event.rs","byte_start":55697,"byte_end":55702,"line_start":17,"line_end":17,"column_start":12,"column_end":17},"name":"Event","qualname":"::event::event::Event","value":"Event {  }","parent":null,"children":[{"krate":0,"index":1443}],"decl_id":null,"docs":" A readiness event.","sig":null,"attributes":[{"value":"/ A readiness event.","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.8.4\\src\\event\\event.rs","byte_start":55331,"byte_end":55353,"line_start":5,"line_end":5,"column_start":1,"column_end":23}},{"value":"/","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.8.4\\src\\event\\event.rs","byte_start":55354,"byte_end":55357,"line_start":6,"line_end":6,"column_start":1,"column_end":4}},{"value":"/ `Event` is a readiness state paired with a [`Token`]. It is returned by","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.8.4\\src\\event\\event.rs","byte_start":55358,"byte_end":55433,"line_start":7,"line_end":7,"column_start":1,"column_end":76}},{"value":"/ [`Poll::poll`].","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.8.4\\src\\event\\event.rs","byte_start":55434,"byte_end":55453,"line_start":8,"line_end":8,"column_start":1,"column_end":20}},{"value":"/","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.8.4\\src\\event\\event.rs","byte_start":55454,"byte_end":55457,"line_start":9,"line_end":9,"column_start":1,"column_end":4}},{"value":"/ For more documentation on polling and events, see [`Poll`].","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.8.4\\src\\event\\event.rs","byte_start":55458,"byte_end":55521,"line_start":10,"line_end":10,"column_start":1,"column_end":64}},{"value":"/","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.8.4\\src\\event\\event.rs","byte_start":55522,"byte_end":55525,"line_start":11,"line_end":11,"column_start":1,"column_end":4}},{"value":"/ [`Poll::poll`]: ../struct.Poll.html#method.poll","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.8.4\\src\\event\\event.rs","byte_start":55526,"byte_end":55577,"line_start":12,"line_end":12,"column_start":1,"column_end":52}},{"value":"/ [`Poll`]: ../struct.Poll.html","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.8.4\\src\\event\\event.rs","byte_start":55578,"byte_end":55611,"line_start":13,"line_end":13,"column_start":1,"column_end":34}},{"value":"/ [`Token`]: ../struct.Token.html","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.8.4\\src\\event\\event.rs","byte_start":55612,"byte_end":55647,"line_start":14,"line_end":14,"column_start":1,"column_end":36}},{"value":"repr(transparent)","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.8.4\\src\\event\\event.rs","byte_start":55665,"byte_end":55685,"line_start":16,"line_end":16,"column_start":1,"column_end":21}}]},{"kind":"Method","id":{"krate":0,"index":128},"span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.8.4\\src\\event\\event.rs","byte_start":55790,"byte_end":55795,"line_start":23,"line_end":23,"column_start":12,"column_end":17},"name":"token","qualname":"<Event>::token","value":"pub fn token(&Self) -> Token","parent":null,"children":[],"decl_id":null,"docs":" Returns the event's token.\n","sig":null,"attributes":[{"value":"/ Returns the event's token.","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.8.4\\src\\event\\event.rs","byte_start":55748,"byte_end":55778,"line_start":22,"line_end":22,"column_start":5,"column_end":35}}]},{"kind":"Method","id":{"krate":0,"index":129},"span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.8.4\\src\\event\\event.rs","byte_start":56447,"byte_end":56458,"line_start":37,"line_end":37,"column_start":12,"column_end":23},"name":"is_readable","qualname":"<Event>::is_readable","value":"pub fn is_readable(&Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Returns true if the event contains readable readiness.","sig":null,"attributes":[{"value":"/ Returns true if the event contains readable readiness.","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.8.4\\src\\event\\event.rs","byte_start":55864,"byte_end":55922,"line_start":27,"line_end":27,"column_start":5,"column_end":63}},{"value":"/","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.8.4\\src\\event\\event.rs","byte_start":55927,"byte_end":55930,"line_start":28,"line_end":28,"column_start":5,"column_end":8}},{"value":"/ # Notes","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.8.4\\src\\event\\event.rs","byte_start":55935,"byte_end":55946,"line_start":29,"line_end":29,"column_start":5,"column_end":16}},{"value":"/","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.8.4\\src\\event\\event.rs","byte_start":55951,"byte_end":55954,"line_start":30,"line_end":30,"column_start":5,"column_end":8}},{"value":"/ Out-of-band (OOB) data also triggers readable events. But must","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.8.4\\src\\event\\event.rs","byte_start":55959,"byte_end":56025,"line_start":31,"line_end":31,"column_start":5,"column_end":71}},{"value":"/ application don't actually read OOB data, this could leave an","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.8.4\\src\\event\\event.rs","byte_start":56030,"byte_end":56095,"line_start":32,"line_end":32,"column_start":5,"column_end":70}},{"value":"/ application open to a Denial-of-Service (Dos) attack, see","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.8.4\\src\\event\\event.rs","byte_start":56100,"byte_end":56161,"line_start":33,"line_end":33,"column_start":5,"column_end":66}},{"value":"/ <https://github.com/sandstorm-io/sandstorm-website/blob/58f93346028c0576e8147627667328eaaf4be9fa/_posts/2015-04-08-osx-security-bug.md>.","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.8.4\\src\\event\\event.rs","byte_start":56166,"byte_end":56306,"line_start":34,"line_end":34,"column_start":5,"column_end":145}},{"value":"/ However because Mio uses edge-triggers it will not result in an infinite","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.8.4\\src\\event\\event.rs","byte_start":56311,"byte_end":56387,"line_start":35,"line_end":35,"column_start":5,"column_end":81}},{"value":"/ loop as described in the article above.","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.8.4\\src\\event\\event.rs","byte_start":56392,"byte_end":56435,"line_start":36,"line_end":36,"column_start":5,"column_end":48}}]},{"kind":"Method","id":{"krate":0,"index":130},"span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.8.4\\src\\event\\event.rs","byte_start":56602,"byte_end":56613,"line_start":42,"line_end":42,"column_start":12,"column_end":23},"name":"is_writable","qualname":"<Event>::is_writable","value":"pub fn is_writable(&Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Returns true if the event contains writable readiness.\n","sig":null,"attributes":[{"value":"/ Returns true if the event contains writable readiness.","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.8.4\\src\\event\\event.rs","byte_start":56532,"byte_end":56590,"line_start":41,"line_end":41,"column_start":5,"column_end":63}}]},{"kind":"Method","id":{"krate":0,"index":131},"span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.8.4\\src\\event\\event.rs","byte_start":57616,"byte_end":57624,"line_start":67,"line_end":67,"column_start":12,"column_end":20},"name":"is_error","qualname":"<Event>::is_error","value":"pub fn is_error(&Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Returns true if the event contains error readiness.","sig":null,"attributes":[{"value":"/ Returns true if the event contains error readiness.","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.8.4\\src\\event\\event.rs","byte_start":56687,"byte_end":56742,"line_start":46,"line_end":46,"column_start":5,"column_end":60}},{"value":"/","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.8.4\\src\\event\\event.rs","byte_start":56747,"byte_end":56750,"line_start":47,"line_end":47,"column_start":5,"column_end":8}},{"value":"/ Error events occur when the socket enters an error state. In this case,","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.8.4\\src\\event\\event.rs","byte_start":56755,"byte_end":56830,"line_start":48,"line_end":48,"column_start":5,"column_end":80}},{"value":"/ the socket will also receive a readable or writable event. Reading or","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.8.4\\src\\event\\event.rs","byte_start":56835,"byte_end":56908,"line_start":49,"line_end":49,"column_start":5,"column_end":78}},{"value":"/ writing to the socket will result in an error.","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.8.4\\src\\event\\event.rs","byte_start":56913,"byte_end":56963,"line_start":50,"line_end":50,"column_start":5,"column_end":55}},{"value":"/","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.8.4\\src\\event\\event.rs","byte_start":56968,"byte_end":56971,"line_start":51,"line_end":51,"column_start":5,"column_end":8}},{"value":"/ # Notes","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.8.4\\src\\event\\event.rs","byte_start":56976,"byte_end":56987,"line_start":52,"line_end":52,"column_start":5,"column_end":16}},{"value":"/","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.8.4\\src\\event\\event.rs","byte_start":56992,"byte_end":56995,"line_start":53,"line_end":53,"column_start":5,"column_end":8}},{"value":"/ Method is available on all platforms, but not all platforms trigger the","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.8.4\\src\\event\\event.rs","byte_start":57000,"byte_end":57075,"line_start":54,"line_end":54,"column_start":5,"column_end":80}},{"value":"/ error event.","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.8.4\\src\\event\\event.rs","byte_start":57080,"byte_end":57096,"line_start":55,"line_end":55,"column_start":5,"column_end":21}},{"value":"/","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.8.4\\src\\event\\event.rs","byte_start":57101,"byte_end":57104,"line_start":56,"line_end":56,"column_start":5,"column_end":8}},{"value":"/ The table below shows what flags are checked on what OS.","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.8.4\\src\\event\\event.rs","byte_start":57109,"byte_end":57169,"line_start":57,"line_end":57,"column_start":5,"column_end":65}},{"value":"/","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.8.4\\src\\event\\event.rs","byte_start":57174,"byte_end":57177,"line_start":58,"line_end":58,"column_start":5,"column_end":8}},{"value":"/ | [OS selector] | Flag(s) checked |","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.8.4\\src\\event\\event.rs","byte_start":57182,"byte_end":57221,"line_start":59,"line_end":59,"column_start":5,"column_end":44}},{"value":"/ |---------------|-----------------|","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.8.4\\src\\event\\event.rs","byte_start":57226,"byte_end":57265,"line_start":60,"line_end":60,"column_start":5,"column_end":44}},{"value":"/ | [epoll]       | `EPOLLERR`      |","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.8.4\\src\\event\\event.rs","byte_start":57270,"byte_end":57309,"line_start":61,"line_end":61,"column_start":5,"column_end":44}},{"value":"/ | [kqueue]      | `EV_ERROR` and `EV_EOF` with `fflags` set to `0`. |","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.8.4\\src\\event\\event.rs","byte_start":57314,"byte_end":57387,"line_start":62,"line_end":62,"column_start":5,"column_end":78}},{"value":"/","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.8.4\\src\\event\\event.rs","byte_start":57392,"byte_end":57395,"line_start":63,"line_end":63,"column_start":5,"column_end":8}},{"value":"/ [OS selector]: ../struct.Poll.html#implementation-notes","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.8.4\\src\\event\\event.rs","byte_start":57400,"byte_end":57459,"line_start":64,"line_end":64,"column_start":5,"column_end":64}},{"value":"/ [epoll]: https://man7.org/linux/man-pages/man7/epoll.7.html","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.8.4\\src\\event\\event.rs","byte_start":57464,"byte_end":57527,"line_start":65,"line_end":65,"column_start":5,"column_end":68}},{"value":"/ [kqueue]: https://www.freebsd.org/cgi/man.cgi?query=kqueue&sektion=2","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.8.4\\src\\event\\event.rs","byte_start":57532,"byte_end":57604,"line_start":66,"line_end":66,"column_start":5,"column_end":77}}]},{"kind":"Method","id":{"krate":0,"index":132},"span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.8.4\\src\\event\\event.rs","byte_start":58938,"byte_end":58952,"line_start":98,"line_end":98,"column_start":12,"column_end":26},"name":"is_read_closed","qualname":"<Event>::is_read_closed","value":"pub fn is_read_closed(&Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Returns true if the event contains read closed readiness.","sig":null,"attributes":[{"value":"/ Returns true if the event contains read closed readiness.","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.8.4\\src\\event\\event.rs","byte_start":57695,"byte_end":57756,"line_start":71,"line_end":71,"column_start":5,"column_end":66}},{"value":"/","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.8.4\\src\\event\\event.rs","byte_start":57761,"byte_end":57764,"line_start":72,"line_end":72,"column_start":5,"column_end":8}},{"value":"/ # Notes","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.8.4\\src\\event\\event.rs","byte_start":57769,"byte_end":57780,"line_start":73,"line_end":73,"column_start":5,"column_end":16}},{"value":"/","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.8.4\\src\\event\\event.rs","byte_start":57785,"byte_end":57788,"line_start":74,"line_end":74,"column_start":5,"column_end":8}},{"value":"/ Read closed readiness can be expected after any of the following have","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.8.4\\src\\event\\event.rs","byte_start":57793,"byte_end":57866,"line_start":75,"line_end":75,"column_start":5,"column_end":78}},{"value":"/ occurred:","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.8.4\\src\\event\\event.rs","byte_start":57871,"byte_end":57884,"line_start":76,"line_end":76,"column_start":5,"column_end":18}},{"value":"/ * The local stream has shutdown the read half of its socket","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.8.4\\src\\event\\event.rs","byte_start":57889,"byte_end":57952,"line_start":77,"line_end":77,"column_start":5,"column_end":68}},{"value":"/ * The local stream has shutdown both the read half and the write half","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.8.4\\src\\event\\event.rs","byte_start":57957,"byte_end":58030,"line_start":78,"line_end":78,"column_start":5,"column_end":78}},{"value":"/   of its socket","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.8.4\\src\\event\\event.rs","byte_start":58035,"byte_end":58054,"line_start":79,"line_end":79,"column_start":5,"column_end":24}},{"value":"/ * The peer stream has shutdown the write half its socket; this sends a","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.8.4\\src\\event\\event.rs","byte_start":58059,"byte_end":58133,"line_start":80,"line_end":80,"column_start":5,"column_end":79}},{"value":"/   `FIN` packet that has been received by the local stream","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.8.4\\src\\event\\event.rs","byte_start":58138,"byte_end":58199,"line_start":81,"line_end":81,"column_start":5,"column_end":66}},{"value":"/","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.8.4\\src\\event\\event.rs","byte_start":58204,"byte_end":58207,"line_start":82,"line_end":82,"column_start":5,"column_end":8}},{"value":"/ Method is a best effort implementation. While some platforms may not","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.8.4\\src\\event\\event.rs","byte_start":58212,"byte_end":58284,"line_start":83,"line_end":83,"column_start":5,"column_end":77}},{"value":"/ return readiness when read half is closed, it is guaranteed that","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.8.4\\src\\event\\event.rs","byte_start":58289,"byte_end":58357,"line_start":84,"line_end":84,"column_start":5,"column_end":73}},{"value":"/ false-positives will not occur.","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.8.4\\src\\event\\event.rs","byte_start":58362,"byte_end":58397,"line_start":85,"line_end":85,"column_start":5,"column_end":40}},{"value":"/","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.8.4\\src\\event\\event.rs","byte_start":58402,"byte_end":58405,"line_start":86,"line_end":86,"column_start":5,"column_end":8}},{"value":"/ The table below shows what flags are checked on what OS.","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.8.4\\src\\event\\event.rs","byte_start":58410,"byte_end":58470,"line_start":87,"line_end":87,"column_start":5,"column_end":65}},{"value":"/","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.8.4\\src\\event\\event.rs","byte_start":58475,"byte_end":58478,"line_start":88,"line_end":88,"column_start":5,"column_end":8}},{"value":"/ | [OS selector] | Flag(s) checked |","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.8.4\\src\\event\\event.rs","byte_start":58483,"byte_end":58522,"line_start":89,"line_end":89,"column_start":5,"column_end":44}},{"value":"/ |---------------|-----------------|","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.8.4\\src\\event\\event.rs","byte_start":58527,"byte_end":58566,"line_start":90,"line_end":90,"column_start":5,"column_end":44}},{"value":"/ | [epoll]       | `EPOLLHUP`, or  |","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.8.4\\src\\event\\event.rs","byte_start":58571,"byte_end":58610,"line_start":91,"line_end":91,"column_start":5,"column_end":44}},{"value":"/ |               | `EPOLLIN` and `EPOLLRDHUP` |","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.8.4\\src\\event\\event.rs","byte_start":58615,"byte_end":58665,"line_start":92,"line_end":92,"column_start":5,"column_end":55}},{"value":"/ | [kqueue]      | `EV_EOF`        |","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.8.4\\src\\event\\event.rs","byte_start":58670,"byte_end":58709,"line_start":93,"line_end":93,"column_start":5,"column_end":44}},{"value":"/","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.8.4\\src\\event\\event.rs","byte_start":58714,"byte_end":58717,"line_start":94,"line_end":94,"column_start":5,"column_end":8}},{"value":"/ [OS selector]: ../struct.Poll.html#implementation-notes","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.8.4\\src\\event\\event.rs","byte_start":58722,"byte_end":58781,"line_start":95,"line_end":95,"column_start":5,"column_end":64}},{"value":"/ [epoll]: https://man7.org/linux/man-pages/man7/epoll.7.html","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.8.4\\src\\event\\event.rs","byte_start":58786,"byte_end":58849,"line_start":96,"line_end":96,"column_start":5,"column_end":68}},{"value":"/ [kqueue]: https://www.freebsd.org/cgi/man.cgi?query=kqueue&sektion=2","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.8.4\\src\\event\\event.rs","byte_start":58854,"byte_end":58926,"line_start":97,"line_end":97,"column_start":5,"column_end":77}}]},{"kind":"Method","id":{"krate":0,"index":133},"span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.8.4\\src\\event\\event.rs","byte_start":60184,"byte_end":60199,"line_start":128,"line_end":128,"column_start":12,"column_end":27},"name":"is_write_closed","qualname":"<Event>::is_write_closed","value":"pub fn is_write_closed(&Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Returns true if the event contains write closed readiness.","sig":null,"attributes":[{"value":"/ Returns true if the event contains write closed readiness.","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.8.4\\src\\event\\event.rs","byte_start":59029,"byte_end":59091,"line_start":102,"line_end":102,"column_start":5,"column_end":67}},{"value":"/","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.8.4\\src\\event\\event.rs","byte_start":59096,"byte_end":59099,"line_start":103,"line_end":103,"column_start":5,"column_end":8}},{"value":"/ # Notes","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.8.4\\src\\event\\event.rs","byte_start":59104,"byte_end":59115,"line_start":104,"line_end":104,"column_start":5,"column_end":16}},{"value":"/","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.8.4\\src\\event\\event.rs","byte_start":59120,"byte_end":59123,"line_start":105,"line_end":105,"column_start":5,"column_end":8}},{"value":"/ On [epoll] this is essentially a check for `EPOLLHUP` flag as the","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.8.4\\src\\event\\event.rs","byte_start":59128,"byte_end":59197,"line_start":106,"line_end":106,"column_start":5,"column_end":74}},{"value":"/ local stream shutting down its write half does not trigger this event.","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.8.4\\src\\event\\event.rs","byte_start":59202,"byte_end":59276,"line_start":107,"line_end":107,"column_start":5,"column_end":79}},{"value":"/","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.8.4\\src\\event\\event.rs","byte_start":59281,"byte_end":59284,"line_start":108,"line_end":108,"column_start":5,"column_end":8}},{"value":"/ On [kqueue] the local stream shutting down the write half of its","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.8.4\\src\\event\\event.rs","byte_start":59289,"byte_end":59357,"line_start":109,"line_end":109,"column_start":5,"column_end":73}},{"value":"/ socket will trigger this event.","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.8.4\\src\\event\\event.rs","byte_start":59362,"byte_end":59397,"line_start":110,"line_end":110,"column_start":5,"column_end":40}},{"value":"/","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.8.4\\src\\event\\event.rs","byte_start":59402,"byte_end":59405,"line_start":111,"line_end":111,"column_start":5,"column_end":8}},{"value":"/ Method is a best effort implementation. While some platforms may not","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.8.4\\src\\event\\event.rs","byte_start":59410,"byte_end":59482,"line_start":112,"line_end":112,"column_start":5,"column_end":77}},{"value":"/ return readiness when write half is closed, it is guaranteed that","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.8.4\\src\\event\\event.rs","byte_start":59487,"byte_end":59556,"line_start":113,"line_end":113,"column_start":5,"column_end":74}},{"value":"/ false-positives will not occur.","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.8.4\\src\\event\\event.rs","byte_start":59561,"byte_end":59596,"line_start":114,"line_end":114,"column_start":5,"column_end":40}},{"value":"/","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.8.4\\src\\event\\event.rs","byte_start":59601,"byte_end":59604,"line_start":115,"line_end":115,"column_start":5,"column_end":8}},{"value":"/ The table below shows what flags are checked on what OS.","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.8.4\\src\\event\\event.rs","byte_start":59609,"byte_end":59669,"line_start":116,"line_end":116,"column_start":5,"column_end":65}},{"value":"/","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.8.4\\src\\event\\event.rs","byte_start":59674,"byte_end":59677,"line_start":117,"line_end":117,"column_start":5,"column_end":8}},{"value":"/ | [OS selector] | Flag(s) checked |","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.8.4\\src\\event\\event.rs","byte_start":59682,"byte_end":59721,"line_start":118,"line_end":118,"column_start":5,"column_end":44}},{"value":"/ |---------------|-----------------|","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.8.4\\src\\event\\event.rs","byte_start":59726,"byte_end":59765,"line_start":119,"line_end":119,"column_start":5,"column_end":44}},{"value":"/ | [epoll]       | `EPOLLHUP`, or  |","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.8.4\\src\\event\\event.rs","byte_start":59770,"byte_end":59809,"line_start":120,"line_end":120,"column_start":5,"column_end":44}},{"value":"/ |               | only `EPOLLERR`, or |","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.8.4\\src\\event\\event.rs","byte_start":59814,"byte_end":59857,"line_start":121,"line_end":121,"column_start":5,"column_end":48}},{"value":"/ |               | `EPOLLOUT` and `EPOLLERR` |","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.8.4\\src\\event\\event.rs","byte_start":59862,"byte_end":59911,"line_start":122,"line_end":122,"column_start":5,"column_end":54}},{"value":"/ | [kqueue]      | `EV_EOF`        |","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.8.4\\src\\event\\event.rs","byte_start":59916,"byte_end":59955,"line_start":123,"line_end":123,"column_start":5,"column_end":44}},{"value":"/","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.8.4\\src\\event\\event.rs","byte_start":59960,"byte_end":59963,"line_start":124,"line_end":124,"column_start":5,"column_end":8}},{"value":"/ [OS selector]: ../struct.Poll.html#implementation-notes","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.8.4\\src\\event\\event.rs","byte_start":59968,"byte_end":60027,"line_start":125,"line_end":125,"column_start":5,"column_end":64}},{"value":"/ [epoll]: https://man7.org/linux/man-pages/man7/epoll.7.html","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.8.4\\src\\event\\event.rs","byte_start":60032,"byte_end":60095,"line_start":126,"line_end":126,"column_start":5,"column_end":68}},{"value":"/ [kqueue]: https://www.freebsd.org/cgi/man.cgi?query=kqueue&sektion=2","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.8.4\\src\\event\\event.rs","byte_start":60100,"byte_end":60172,"line_start":127,"line_end":127,"column_start":5,"column_end":77}}]},{"kind":"Method","id":{"krate":0,"index":134},"span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.8.4\\src\\event\\event.rs","byte_start":60971,"byte_end":60982,"line_start":150,"line_end":150,"column_start":12,"column_end":23},"name":"is_priority","qualname":"<Event>::is_priority","value":"pub fn is_priority(&Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Returns true if the event contains priority readiness.","sig":null,"attributes":[{"value":"/ Returns true if the event contains priority readiness.","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.8.4\\src\\event\\event.rs","byte_start":60277,"byte_end":60335,"line_start":132,"line_end":132,"column_start":5,"column_end":63}},{"value":"/","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.8.4\\src\\event\\event.rs","byte_start":60340,"byte_end":60343,"line_start":133,"line_end":133,"column_start":5,"column_end":8}},{"value":"/ # Notes","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.8.4\\src\\event\\event.rs","byte_start":60348,"byte_end":60359,"line_start":134,"line_end":134,"column_start":5,"column_end":16}},{"value":"/","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.8.4\\src\\event\\event.rs","byte_start":60364,"byte_end":60367,"line_start":135,"line_end":135,"column_start":5,"column_end":8}},{"value":"/ Method is available on all platforms, but not all platforms trigger the","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.8.4\\src\\event\\event.rs","byte_start":60372,"byte_end":60447,"line_start":136,"line_end":136,"column_start":5,"column_end":80}},{"value":"/ priority event.","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.8.4\\src\\event\\event.rs","byte_start":60452,"byte_end":60471,"line_start":137,"line_end":137,"column_start":5,"column_end":24}},{"value":"/","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.8.4\\src\\event\\event.rs","byte_start":60476,"byte_end":60479,"line_start":138,"line_end":138,"column_start":5,"column_end":8}},{"value":"/ The table below shows what flags are checked on what OS.","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.8.4\\src\\event\\event.rs","byte_start":60484,"byte_end":60544,"line_start":139,"line_end":139,"column_start":5,"column_end":65}},{"value":"/","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.8.4\\src\\event\\event.rs","byte_start":60549,"byte_end":60552,"line_start":140,"line_end":140,"column_start":5,"column_end":8}},{"value":"/ | [OS selector] | Flag(s) checked |","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.8.4\\src\\event\\event.rs","byte_start":60557,"byte_end":60596,"line_start":141,"line_end":141,"column_start":5,"column_end":44}},{"value":"/ |---------------|-----------------|","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.8.4\\src\\event\\event.rs","byte_start":60601,"byte_end":60640,"line_start":142,"line_end":142,"column_start":5,"column_end":44}},{"value":"/ | [epoll]       | `EPOLLPRI`      |","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.8.4\\src\\event\\event.rs","byte_start":60645,"byte_end":60684,"line_start":143,"line_end":143,"column_start":5,"column_end":44}},{"value":"/ | [kqueue]      | *Not supported* |","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.8.4\\src\\event\\event.rs","byte_start":60689,"byte_end":60728,"line_start":144,"line_end":144,"column_start":5,"column_end":44}},{"value":"/","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.8.4\\src\\event\\event.rs","byte_start":60733,"byte_end":60736,"line_start":145,"line_end":145,"column_start":5,"column_end":8}},{"value":"/ [OS selector]: ../struct.Poll.html#implementation-notes","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.8.4\\src\\event\\event.rs","byte_start":60741,"byte_end":60800,"line_start":146,"line_end":146,"column_start":5,"column_end":64}},{"value":"/ [epoll]: https://man7.org/linux/man-pages/man7/epoll.7.html","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.8.4\\src\\event\\event.rs","byte_start":60805,"byte_end":60868,"line_start":147,"line_end":147,"column_start":5,"column_end":68}},{"value":"/ [kqueue]: https://www.freebsd.org/cgi/man.cgi?query=kqueue&sektion=2","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.8.4\\src\\event\\event.rs","byte_start":60873,"byte_end":60945,"line_start":148,"line_end":148,"column_start":5,"column_end":77}},{"value":"inline","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.8.4\\src\\event\\event.rs","byte_start":60950,"byte_end":60959,"line_start":149,"line_end":149,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":135},"span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.8.4\\src\\event\\event.rs","byte_start":61788,"byte_end":61794,"line_start":172,"line_end":172,"column_start":12,"column_end":18},"name":"is_aio","qualname":"<Event>::is_aio","value":"pub fn is_aio(&Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Returns true if the event contains AIO readiness.","sig":null,"attributes":[{"value":"/ Returns true if the event contains AIO readiness.","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.8.4\\src\\event\\event.rs","byte_start":61056,"byte_end":61109,"line_start":154,"line_end":154,"column_start":5,"column_end":58}},{"value":"/","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.8.4\\src\\event\\event.rs","byte_start":61114,"byte_end":61117,"line_start":155,"line_end":155,"column_start":5,"column_end":8}},{"value":"/ # Notes","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.8.4\\src\\event\\event.rs","byte_start":61122,"byte_end":61133,"line_start":156,"line_end":156,"column_start":5,"column_end":16}},{"value":"/","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.8.4\\src\\event\\event.rs","byte_start":61138,"byte_end":61141,"line_start":157,"line_end":157,"column_start":5,"column_end":8}},{"value":"/ Method is available on all platforms, but not all platforms support AIO.","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.8.4\\src\\event\\event.rs","byte_start":61146,"byte_end":61222,"line_start":158,"line_end":158,"column_start":5,"column_end":81}},{"value":"/","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.8.4\\src\\event\\event.rs","byte_start":61227,"byte_end":61230,"line_start":159,"line_end":159,"column_start":5,"column_end":8}},{"value":"/ The table below shows what flags are checked on what OS.","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.8.4\\src\\event\\event.rs","byte_start":61235,"byte_end":61295,"line_start":160,"line_end":160,"column_start":5,"column_end":65}},{"value":"/","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.8.4\\src\\event\\event.rs","byte_start":61300,"byte_end":61303,"line_start":161,"line_end":161,"column_start":5,"column_end":8}},{"value":"/ | [OS selector] | Flag(s) checked |","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.8.4\\src\\event\\event.rs","byte_start":61308,"byte_end":61347,"line_start":162,"line_end":162,"column_start":5,"column_end":44}},{"value":"/ |---------------|-----------------|","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.8.4\\src\\event\\event.rs","byte_start":61352,"byte_end":61391,"line_start":163,"line_end":163,"column_start":5,"column_end":44}},{"value":"/ | [epoll]       | *Not supported* |","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.8.4\\src\\event\\event.rs","byte_start":61396,"byte_end":61435,"line_start":164,"line_end":164,"column_start":5,"column_end":44}},{"value":"/ | [kqueue]<sup>1</sup> | `EVFILT_AIO` |","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.8.4\\src\\event\\event.rs","byte_start":61440,"byte_end":61483,"line_start":165,"line_end":165,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.8.4\\src\\event\\event.rs","byte_start":61488,"byte_end":61491,"line_start":166,"line_end":166,"column_start":5,"column_end":8}},{"value":"/ 1: Only supported on DragonFly BSD, FreeBSD, iOS and macOS.","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.8.4\\src\\event\\event.rs","byte_start":61496,"byte_end":61559,"line_start":167,"line_end":167,"column_start":5,"column_end":68}},{"value":"/","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.8.4\\src\\event\\event.rs","byte_start":61564,"byte_end":61567,"line_start":168,"line_end":168,"column_start":5,"column_end":8}},{"value":"/ [OS selector]: ../struct.Poll.html#implementation-notes","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.8.4\\src\\event\\event.rs","byte_start":61572,"byte_end":61631,"line_start":169,"line_end":169,"column_start":5,"column_end":64}},{"value":"/ [epoll]: https://man7.org/linux/man-pages/man7/epoll.7.html","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.8.4\\src\\event\\event.rs","byte_start":61636,"byte_end":61699,"line_start":170,"line_end":170,"column_start":5,"column_end":68}},{"value":"/ [kqueue]: https://www.freebsd.org/cgi/man.cgi?query=kqueue&sektion=2","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.8.4\\src\\event\\event.rs","byte_start":61704,"byte_end":61776,"line_start":171,"line_end":171,"column_start":5,"column_end":77}}]},{"kind":"Method","id":{"krate":0,"index":136},"span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.8.4\\src\\event\\event.rs","byte_start":62098,"byte_end":62104,"line_start":182,"line_end":182,"column_start":12,"column_end":18},"name":"is_lio","qualname":"<Event>::is_lio","value":"pub fn is_lio(&Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Returns true if the event contains LIO readiness.","sig":null,"attributes":[{"value":"/ Returns true if the event contains LIO readiness.","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.8.4\\src\\event\\event.rs","byte_start":61863,"byte_end":61916,"line_start":176,"line_end":176,"column_start":5,"column_end":58}},{"value":"/","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.8.4\\src\\event\\event.rs","byte_start":61921,"byte_end":61924,"line_start":177,"line_end":177,"column_start":5,"column_end":8}},{"value":"/ # Notes","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.8.4\\src\\event\\event.rs","byte_start":61929,"byte_end":61940,"line_start":178,"line_end":178,"column_start":5,"column_end":16}},{"value":"/","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.8.4\\src\\event\\event.rs","byte_start":61945,"byte_end":61948,"line_start":179,"line_end":179,"column_start":5,"column_end":8}},{"value":"/ Method is available on all platforms, but only FreeBSD supports LIO. On","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.8.4\\src\\event\\event.rs","byte_start":61953,"byte_end":62028,"line_start":180,"line_end":180,"column_start":5,"column_end":80}},{"value":"/ FreeBSD this method checks the `EVFILT_LIO` flag.","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.8.4\\src\\event\\event.rs","byte_start":62033,"byte_end":62086,"line_start":181,"line_end":181,"column_start":5,"column_end":58}}]},{"kind":"Struct","id":{"krate":0,"index":157},"span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.8.4\\src\\event\\events.rs","byte_start":65101,"byte_end":65107,"line_start":42,"line_end":42,"column_start":12,"column_end":18},"name":"Events","qualname":"::event::events::Events","value":"Events {  }","parent":null,"children":[{"krate":0,"index":158}],"decl_id":null,"docs":" A collection of readiness events.","sig":null,"attributes":[{"value":"/ A collection of readiness events.","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.8.4\\src\\event\\events.rs","byte_start":63991,"byte_end":64028,"line_start":6,"line_end":6,"column_start":1,"column_end":38}},{"value":"/","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.8.4\\src\\event\\events.rs","byte_start":64029,"byte_end":64032,"line_start":7,"line_end":7,"column_start":1,"column_end":4}},{"value":"/ `Events` is passed as an argument to [`Poll::poll`] and will be used to","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.8.4\\src\\event\\events.rs","byte_start":64033,"byte_end":64108,"line_start":8,"line_end":8,"column_start":1,"column_end":76}},{"value":"/ receive any new readiness events received since the last poll. Usually, a","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.8.4\\src\\event\\events.rs","byte_start":64109,"byte_end":64186,"line_start":9,"line_end":9,"column_start":1,"column_end":78}},{"value":"/ single `Events` instance is created at the same time as a [`Poll`] and","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.8.4\\src\\event\\events.rs","byte_start":64187,"byte_end":64261,"line_start":10,"line_end":10,"column_start":1,"column_end":75}},{"value":"/ reused on each call to [`Poll::poll`].","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.8.4\\src\\event\\events.rs","byte_start":64262,"byte_end":64304,"line_start":11,"line_end":11,"column_start":1,"column_end":43}},{"value":"/","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.8.4\\src\\event\\events.rs","byte_start":64305,"byte_end":64308,"line_start":12,"line_end":12,"column_start":1,"column_end":4}},{"value":"/ See [`Poll`] for more documentation on polling.","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.8.4\\src\\event\\events.rs","byte_start":64309,"byte_end":64360,"line_start":13,"line_end":13,"column_start":1,"column_end":52}},{"value":"/","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.8.4\\src\\event\\events.rs","byte_start":64361,"byte_end":64364,"line_start":14,"line_end":14,"column_start":1,"column_end":4}},{"value":"/ [`Poll::poll`]: ../struct.Poll.html#method.poll","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.8.4\\src\\event\\events.rs","byte_start":64365,"byte_end":64416,"line_start":15,"line_end":15,"column_start":1,"column_end":52}},{"value":"/ [`Poll`]: ../struct.Poll.html","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.8.4\\src\\event\\events.rs","byte_start":64417,"byte_end":64450,"line_start":16,"line_end":16,"column_start":1,"column_end":34}},{"value":"/","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.8.4\\src\\event\\events.rs","byte_start":64451,"byte_end":64454,"line_start":17,"line_end":17,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.8.4\\src\\event\\events.rs","byte_start":64455,"byte_end":64469,"line_start":18,"line_end":18,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.8.4\\src\\event\\events.rs","byte_start":64470,"byte_end":64473,"line_start":19,"line_end":19,"column_start":1,"column_end":4}},{"value":"/ # use std::error::Error;","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.8.4\\src\\event\\events.rs","byte_start":64577,"byte_end":64605,"line_start":22,"line_end":22,"column_start":1,"column_end":29}},{"value":"/ # fn main() -> Result<(), Box<dyn Error>> {","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.8.4\\src\\event\\events.rs","byte_start":64606,"byte_end":64653,"line_start":23,"line_end":23,"column_start":1,"column_end":48}},{"value":"/ use mio::{Events, Poll};","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.8.4\\src\\event\\events.rs","byte_start":64654,"byte_end":64682,"line_start":24,"line_end":24,"column_start":1,"column_end":29}},{"value":"/ use std::time::Duration;","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.8.4\\src\\event\\events.rs","byte_start":64683,"byte_end":64711,"line_start":25,"line_end":25,"column_start":1,"column_end":29}},{"value":"/","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.8.4\\src\\event\\events.rs","byte_start":64712,"byte_end":64715,"line_start":26,"line_end":26,"column_start":1,"column_end":4}},{"value":"/ let mut events = Events::with_capacity(1024);","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.8.4\\src\\event\\events.rs","byte_start":64716,"byte_end":64765,"line_start":27,"line_end":27,"column_start":1,"column_end":50}},{"value":"/ let mut poll = Poll::new()?;","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.8.4\\src\\event\\events.rs","byte_start":64766,"byte_end":64798,"line_start":28,"line_end":28,"column_start":1,"column_end":33}},{"value":"/ #","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.8.4\\src\\event\\events.rs","byte_start":64799,"byte_end":64804,"line_start":29,"line_end":29,"column_start":1,"column_end":6}},{"value":"/ # assert!(events.is_empty());","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.8.4\\src\\event\\events.rs","byte_start":64805,"byte_end":64838,"line_start":30,"line_end":30,"column_start":1,"column_end":34}},{"value":"/","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.8.4\\src\\event\\events.rs","byte_start":64839,"byte_end":64842,"line_start":31,"line_end":31,"column_start":1,"column_end":4}},{"value":"/ // Register `event::Source`s with `poll`.","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.8.4\\src\\event\\events.rs","byte_start":64843,"byte_end":64888,"line_start":32,"line_end":32,"column_start":1,"column_end":46}},{"value":"/","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.8.4\\src\\event\\events.rs","byte_start":64889,"byte_end":64892,"line_start":33,"line_end":33,"column_start":1,"column_end":4}},{"value":"/ poll.poll(&mut events, Some(Duration::from_millis(100)))?;","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.8.4\\src\\event\\events.rs","byte_start":64893,"byte_end":64955,"line_start":34,"line_end":34,"column_start":1,"column_end":63}},{"value":"/","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.8.4\\src\\event\\events.rs","byte_start":64956,"byte_end":64959,"line_start":35,"line_end":35,"column_start":1,"column_end":4}},{"value":"/ for event in events.iter() {","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.8.4\\src\\event\\events.rs","byte_start":64960,"byte_end":64992,"line_start":36,"line_end":36,"column_start":1,"column_end":33}},{"value":"/     println!(\"Got an event for {:?}\", event.token());","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.8.4\\src\\event\\events.rs","byte_start":64993,"byte_end":65050,"line_start":37,"line_end":37,"column_start":1,"column_end":58}},{"value":"/ }","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.8.4\\src\\event\\events.rs","byte_start":65051,"byte_end":65056,"line_start":38,"line_end":38,"column_start":1,"column_end":6}},{"value":"/ #     Ok(())","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.8.4\\src\\event\\events.rs","byte_start":65057,"byte_end":65073,"line_start":39,"line_end":39,"column_start":1,"column_end":17}},{"value":"/ # }","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.8.4\\src\\event\\events.rs","byte_start":65074,"byte_end":65081,"line_start":40,"line_end":40,"column_start":1,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.8.4\\src\\event\\events.rs","byte_start":65082,"byte_end":65089,"line_start":41,"line_end":41,"column_start":1,"column_end":8}}]},{"kind":"Struct","id":{"krate":0,"index":1446},"span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.8.4\\src\\event\\events.rs","byte_start":65940,"byte_end":65944,"line_start":76,"line_end":76,"column_start":12,"column_end":16},"name":"Iter","qualname":"::event::events::Iter","value":"Iter {  }","parent":null,"children":[{"krate":0,"index":1448},{"krate":0,"index":1449}],"decl_id":null,"docs":" [`Events`] iterator.","sig":null,"attributes":[{"value":"/ [`Events`] iterator.","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.8.4\\src\\event\\events.rs","byte_start":65137,"byte_end":65161,"line_start":46,"line_end":46,"column_start":1,"column_end":25}},{"value":"/","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.8.4\\src\\event\\events.rs","byte_start":65162,"byte_end":65165,"line_start":47,"line_end":47,"column_start":1,"column_end":4}},{"value":"/ This struct is created by the [`iter`] method on [`Events`].","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.8.4\\src\\event\\events.rs","byte_start":65166,"byte_end":65230,"line_start":48,"line_end":48,"column_start":1,"column_end":65}},{"value":"/","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.8.4\\src\\event\\events.rs","byte_start":65231,"byte_end":65234,"line_start":49,"line_end":49,"column_start":1,"column_end":4}},{"value":"/ [`Events`]: struct.Events.html","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.8.4\\src\\event\\events.rs","byte_start":65235,"byte_end":65269,"line_start":50,"line_end":50,"column_start":1,"column_end":35}},{"value":"/ [`iter`]: struct.Events.html#method.iter","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.8.4\\src\\event\\events.rs","byte_start":65270,"byte_end":65314,"line_start":51,"line_end":51,"column_start":1,"column_end":45}},{"value":"/","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.8.4\\src\\event\\events.rs","byte_start":65315,"byte_end":65318,"line_start":52,"line_end":52,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.8.4\\src\\event\\events.rs","byte_start":65319,"byte_end":65333,"line_start":53,"line_end":53,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.8.4\\src\\event\\events.rs","byte_start":65334,"byte_end":65337,"line_start":54,"line_end":54,"column_start":1,"column_end":4}},{"value":"/ # use std::error::Error;","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.8.4\\src\\event\\events.rs","byte_start":65441,"byte_end":65469,"line_start":57,"line_end":57,"column_start":1,"column_end":29}},{"value":"/ # fn main() -> Result<(), Box<dyn Error>> {","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.8.4\\src\\event\\events.rs","byte_start":65470,"byte_end":65517,"line_start":58,"line_end":58,"column_start":1,"column_end":48}},{"value":"/ use mio::{Events, Poll};","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.8.4\\src\\event\\events.rs","byte_start":65518,"byte_end":65546,"line_start":59,"line_end":59,"column_start":1,"column_end":29}},{"value":"/ use std::time::Duration;","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.8.4\\src\\event\\events.rs","byte_start":65547,"byte_end":65575,"line_start":60,"line_end":60,"column_start":1,"column_end":29}},{"value":"/","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.8.4\\src\\event\\events.rs","byte_start":65576,"byte_end":65579,"line_start":61,"line_end":61,"column_start":1,"column_end":4}},{"value":"/ let mut events = Events::with_capacity(1024);","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.8.4\\src\\event\\events.rs","byte_start":65580,"byte_end":65629,"line_start":62,"line_end":62,"column_start":1,"column_end":50}},{"value":"/ let mut poll = Poll::new()?;","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.8.4\\src\\event\\events.rs","byte_start":65630,"byte_end":65662,"line_start":63,"line_end":63,"column_start":1,"column_end":33}},{"value":"/","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.8.4\\src\\event\\events.rs","byte_start":65663,"byte_end":65666,"line_start":64,"line_end":64,"column_start":1,"column_end":4}},{"value":"/ // Register handles with `poll`.","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.8.4\\src\\event\\events.rs","byte_start":65667,"byte_end":65703,"line_start":65,"line_end":65,"column_start":1,"column_end":37}},{"value":"/","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.8.4\\src\\event\\events.rs","byte_start":65704,"byte_end":65707,"line_start":66,"line_end":66,"column_start":1,"column_end":4}},{"value":"/ poll.poll(&mut events, Some(Duration::from_millis(100)))?;","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.8.4\\src\\event\\events.rs","byte_start":65708,"byte_end":65770,"line_start":67,"line_end":67,"column_start":1,"column_end":63}},{"value":"/","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.8.4\\src\\event\\events.rs","byte_start":65771,"byte_end":65774,"line_start":68,"line_end":68,"column_start":1,"column_end":4}},{"value":"/ for event in events.iter() {","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.8.4\\src\\event\\events.rs","byte_start":65775,"byte_end":65807,"line_start":69,"line_end":69,"column_start":1,"column_end":33}},{"value":"/     println!(\"Got an event for {:?}\", event.token());","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.8.4\\src\\event\\events.rs","byte_start":65808,"byte_end":65865,"line_start":70,"line_end":70,"column_start":1,"column_end":58}},{"value":"/ }","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.8.4\\src\\event\\events.rs","byte_start":65866,"byte_end":65871,"line_start":71,"line_end":71,"column_start":1,"column_end":6}},{"value":"/ #     Ok(())","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.8.4\\src\\event\\events.rs","byte_start":65872,"byte_end":65888,"line_start":72,"line_end":72,"column_start":1,"column_end":17}},{"value":"/ # }","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.8.4\\src\\event\\events.rs","byte_start":65889,"byte_end":65896,"line_start":73,"line_end":73,"column_start":1,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.8.4\\src\\event\\events.rs","byte_start":65897,"byte_end":65904,"line_start":74,"line_end":74,"column_start":1,"column_end":8}}]},{"kind":"Method","id":{"krate":0,"index":160},"span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.8.4\\src\\event\\events.rs","byte_start":66279,"byte_end":66292,"line_start":92,"line_end":92,"column_start":12,"column_end":25},"name":"with_capacity","qualname":"<Events>::with_capacity","value":"pub fn with_capacity(usize) -> Events","parent":null,"children":[],"decl_id":null,"docs":" Return a new `Events` capable of holding up to `capacity` events.","sig":null,"attributes":[{"value":"/ Return a new `Events` capable of holding up to `capacity` events.","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.8.4\\src\\event\\events.rs","byte_start":66011,"byte_end":66080,"line_start":82,"line_end":82,"column_start":5,"column_end":74}},{"value":"/","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.8.4\\src\\event\\events.rs","byte_start":66085,"byte_end":66088,"line_start":83,"line_end":83,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.8.4\\src\\event\\events.rs","byte_start":66093,"byte_end":66107,"line_start":84,"line_end":84,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.8.4\\src\\event\\events.rs","byte_start":66112,"byte_end":66115,"line_start":85,"line_end":85,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.8.4\\src\\event\\events.rs","byte_start":66120,"byte_end":66127,"line_start":86,"line_end":86,"column_start":5,"column_end":12}},{"value":"/ use mio::Events;","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.8.4\\src\\event\\events.rs","byte_start":66132,"byte_end":66152,"line_start":87,"line_end":87,"column_start":5,"column_end":25}},{"value":"/","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.8.4\\src\\event\\events.rs","byte_start":66157,"byte_end":66160,"line_start":88,"line_end":88,"column_start":5,"column_end":8}},{"value":"/ let events = Events::with_capacity(1024);","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.8.4\\src\\event\\events.rs","byte_start":66165,"byte_end":66210,"line_start":89,"line_end":89,"column_start":5,"column_end":50}},{"value":"/ assert_eq!(1024, events.capacity());","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.8.4\\src\\event\\events.rs","byte_start":66215,"byte_end":66255,"line_start":90,"line_end":90,"column_start":5,"column_end":45}},{"value":"/ ```","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.8.4\\src\\event\\events.rs","byte_start":66260,"byte_end":66267,"line_start":91,"line_end":91,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":161},"span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.8.4\\src\\event\\events.rs","byte_start":66651,"byte_end":66659,"line_start":106,"line_end":106,"column_start":12,"column_end":20},"name":"capacity","qualname":"<Events>::capacity","value":"pub fn capacity(&Self) -> usize","parent":null,"children":[],"decl_id":null,"docs":" Returns the number of `Event` values that `self` can hold.","sig":null,"attributes":[{"value":"/ Returns the number of `Event` values that `self` can hold.","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.8.4\\src\\event\\events.rs","byte_start":66417,"byte_end":66479,"line_start":98,"line_end":98,"column_start":5,"column_end":67}},{"value":"/","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.8.4\\src\\event\\events.rs","byte_start":66484,"byte_end":66487,"line_start":99,"line_end":99,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.8.4\\src\\event\\events.rs","byte_start":66492,"byte_end":66499,"line_start":100,"line_end":100,"column_start":5,"column_end":12}},{"value":"/ use mio::Events;","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.8.4\\src\\event\\events.rs","byte_start":66504,"byte_end":66524,"line_start":101,"line_end":101,"column_start":5,"column_end":25}},{"value":"/","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.8.4\\src\\event\\events.rs","byte_start":66529,"byte_end":66532,"line_start":102,"line_end":102,"column_start":5,"column_end":8}},{"value":"/ let events = Events::with_capacity(1024);","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.8.4\\src\\event\\events.rs","byte_start":66537,"byte_end":66582,"line_start":103,"line_end":103,"column_start":5,"column_end":50}},{"value":"/ assert_eq!(1024, events.capacity());","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.8.4\\src\\event\\events.rs","byte_start":66587,"byte_end":66627,"line_start":104,"line_end":104,"column_start":5,"column_end":45}},{"value":"/ ```","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.8.4\\src\\event\\events.rs","byte_start":66632,"byte_end":66639,"line_start":105,"line_end":105,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":162},"span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.8.4\\src\\event\\events.rs","byte_start":66965,"byte_end":66973,"line_start":120,"line_end":120,"column_start":12,"column_end":20},"name":"is_empty","qualname":"<Events>::is_empty","value":"pub fn is_empty(&Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Returns `true` if `self` contains no `Event` values.","sig":null,"attributes":[{"value":"/ Returns `true` if `self` contains no `Event` values.","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.8.4\\src\\event\\events.rs","byte_start":66719,"byte_end":66775,"line_start":110,"line_end":110,"column_start":5,"column_end":61}},{"value":"/","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.8.4\\src\\event\\events.rs","byte_start":66780,"byte_end":66783,"line_start":111,"line_end":111,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.8.4\\src\\event\\events.rs","byte_start":66788,"byte_end":66802,"line_start":112,"line_end":112,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.8.4\\src\\event\\events.rs","byte_start":66807,"byte_end":66810,"line_start":113,"line_end":113,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.8.4\\src\\event\\events.rs","byte_start":66815,"byte_end":66822,"line_start":114,"line_end":114,"column_start":5,"column_end":12}},{"value":"/ use mio::Events;","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.8.4\\src\\event\\events.rs","byte_start":66827,"byte_end":66847,"line_start":115,"line_end":115,"column_start":5,"column_end":25}},{"value":"/","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.8.4\\src\\event\\events.rs","byte_start":66852,"byte_end":66855,"line_start":116,"line_end":116,"column_start":5,"column_end":8}},{"value":"/ let events = Events::with_capacity(1024);","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.8.4\\src\\event\\events.rs","byte_start":66860,"byte_end":66905,"line_start":117,"line_end":117,"column_start":5,"column_end":50}},{"value":"/ assert!(events.is_empty());","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.8.4\\src\\event\\events.rs","byte_start":66910,"byte_end":66941,"line_start":118,"line_end":118,"column_start":5,"column_end":36}},{"value":"/ ```","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.8.4\\src\\event\\events.rs","byte_start":66946,"byte_end":66953,"line_start":119,"line_end":119,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":163},"span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.8.4\\src\\event\\events.rs","byte_start":67774,"byte_end":67778,"line_start":148,"line_end":148,"column_start":12,"column_end":16},"name":"iter","qualname":"<Events>::iter","value":"pub fn iter(&Self) -> Iter","parent":null,"children":[],"decl_id":null,"docs":" Returns an iterator over the `Event` values.","sig":null,"attributes":[{"value":"/ Returns an iterator over the `Event` values.","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.8.4\\src\\event\\events.rs","byte_start":67032,"byte_end":67080,"line_start":124,"line_end":124,"column_start":5,"column_end":53}},{"value":"/","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.8.4\\src\\event\\events.rs","byte_start":67085,"byte_end":67088,"line_start":125,"line_end":125,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.8.4\\src\\event\\events.rs","byte_start":67093,"byte_end":67107,"line_start":126,"line_end":126,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.8.4\\src\\event\\events.rs","byte_start":67112,"byte_end":67115,"line_start":127,"line_end":127,"column_start":5,"column_end":8}},{"value":"/ # use std::error::Error;","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.8.4\\src\\event\\events.rs","byte_start":67231,"byte_end":67259,"line_start":130,"line_end":130,"column_start":5,"column_end":33}},{"value":"/ # fn main() -> Result<(), Box<dyn Error>> {","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.8.4\\src\\event\\events.rs","byte_start":67264,"byte_end":67311,"line_start":131,"line_end":131,"column_start":5,"column_end":52}},{"value":"/ use mio::{Events, Poll};","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.8.4\\src\\event\\events.rs","byte_start":67316,"byte_end":67344,"line_start":132,"line_end":132,"column_start":5,"column_end":33}},{"value":"/ use std::time::Duration;","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.8.4\\src\\event\\events.rs","byte_start":67349,"byte_end":67377,"line_start":133,"line_end":133,"column_start":5,"column_end":33}},{"value":"/","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.8.4\\src\\event\\events.rs","byte_start":67382,"byte_end":67385,"line_start":134,"line_end":134,"column_start":5,"column_end":8}},{"value":"/ let mut events = Events::with_capacity(1024);","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.8.4\\src\\event\\events.rs","byte_start":67390,"byte_end":67439,"line_start":135,"line_end":135,"column_start":5,"column_end":54}},{"value":"/ let mut poll = Poll::new()?;","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.8.4\\src\\event\\events.rs","byte_start":67444,"byte_end":67476,"line_start":136,"line_end":136,"column_start":5,"column_end":37}},{"value":"/","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.8.4\\src\\event\\events.rs","byte_start":67481,"byte_end":67484,"line_start":137,"line_end":137,"column_start":5,"column_end":8}},{"value":"/ // Register handles with `poll`.","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.8.4\\src\\event\\events.rs","byte_start":67489,"byte_end":67525,"line_start":138,"line_end":138,"column_start":5,"column_end":41}},{"value":"/","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.8.4\\src\\event\\events.rs","byte_start":67530,"byte_end":67533,"line_start":139,"line_end":139,"column_start":5,"column_end":8}},{"value":"/ poll.poll(&mut events, Some(Duration::from_millis(100)))?;","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.8.4\\src\\event\\events.rs","byte_start":67538,"byte_end":67600,"line_start":140,"line_end":140,"column_start":5,"column_end":67}},{"value":"/","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.8.4\\src\\event\\events.rs","byte_start":67605,"byte_end":67608,"line_start":141,"line_end":141,"column_start":5,"column_end":8}},{"value":"/ for event in events.iter() {","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.8.4\\src\\event\\events.rs","byte_start":67613,"byte_end":67645,"line_start":142,"line_end":142,"column_start":5,"column_end":37}},{"value":"/     println!(\"Got an event for {:?}\", event.token());","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.8.4\\src\\event\\events.rs","byte_start":67650,"byte_end":67707,"line_start":143,"line_end":143,"column_start":5,"column_end":62}},{"value":"/ }","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.8.4\\src\\event\\events.rs","byte_start":67712,"byte_end":67717,"line_start":144,"line_end":144,"column_start":5,"column_end":10}},{"value":"/ #     Ok(())","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.8.4\\src\\event\\events.rs","byte_start":67722,"byte_end":67738,"line_start":145,"line_end":145,"column_start":5,"column_end":21}},{"value":"/ # }","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.8.4\\src\\event\\events.rs","byte_start":67743,"byte_end":67750,"line_start":146,"line_end":146,"column_start":5,"column_end":12}},{"value":"/ ```","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.8.4\\src\\event\\events.rs","byte_start":67755,"byte_end":67762,"line_start":147,"line_end":147,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":164},"span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.8.4\\src\\event\\events.rs","byte_start":68746,"byte_end":68751,"line_start":184,"line_end":184,"column_start":12,"column_end":17},"name":"clear","qualname":"<Events>::clear","value":"pub fn clear(&mut Self)","parent":null,"children":[],"decl_id":null,"docs":" Clearing all `Event` values from container explicitly.","sig":null,"attributes":[{"value":"/ Clearing all `Event` values from container explicitly.","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.8.4\\src\\event\\events.rs","byte_start":67881,"byte_end":67939,"line_start":155,"line_end":155,"column_start":5,"column_end":63}},{"value":"/","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.8.4\\src\\event\\events.rs","byte_start":67944,"byte_end":67947,"line_start":156,"line_end":156,"column_start":5,"column_end":8}},{"value":"/ # Notes","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.8.4\\src\\event\\events.rs","byte_start":67952,"byte_end":67963,"line_start":157,"line_end":157,"column_start":5,"column_end":16}},{"value":"/","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.8.4\\src\\event\\events.rs","byte_start":67968,"byte_end":67971,"line_start":158,"line_end":158,"column_start":5,"column_end":8}},{"value":"/ Events are cleared before every `poll`, so it is not required to call","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.8.4\\src\\event\\events.rs","byte_start":67976,"byte_end":68049,"line_start":159,"line_end":159,"column_start":5,"column_end":78}},{"value":"/ this manually.","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.8.4\\src\\event\\events.rs","byte_start":68054,"byte_end":68072,"line_start":160,"line_end":160,"column_start":5,"column_end":23}},{"value":"/","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.8.4\\src\\event\\events.rs","byte_start":68077,"byte_end":68080,"line_start":161,"line_end":161,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.8.4\\src\\event\\events.rs","byte_start":68085,"byte_end":68099,"line_start":162,"line_end":162,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.8.4\\src\\event\\events.rs","byte_start":68104,"byte_end":68107,"line_start":163,"line_end":163,"column_start":5,"column_end":8}},{"value":"/ # use std::error::Error;","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.8.4\\src\\event\\events.rs","byte_start":68223,"byte_end":68251,"line_start":166,"line_end":166,"column_start":5,"column_end":33}},{"value":"/ # fn main() -> Result<(), Box<dyn Error>> {","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.8.4\\src\\event\\events.rs","byte_start":68256,"byte_end":68303,"line_start":167,"line_end":167,"column_start":5,"column_end":52}},{"value":"/ use mio::{Events, Poll};","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.8.4\\src\\event\\events.rs","byte_start":68308,"byte_end":68336,"line_start":168,"line_end":168,"column_start":5,"column_end":33}},{"value":"/ use std::time::Duration;","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.8.4\\src\\event\\events.rs","byte_start":68341,"byte_end":68369,"line_start":169,"line_end":169,"column_start":5,"column_end":33}},{"value":"/","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.8.4\\src\\event\\events.rs","byte_start":68374,"byte_end":68377,"line_start":170,"line_end":170,"column_start":5,"column_end":8}},{"value":"/ let mut events = Events::with_capacity(1024);","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.8.4\\src\\event\\events.rs","byte_start":68382,"byte_end":68431,"line_start":171,"line_end":171,"column_start":5,"column_end":54}},{"value":"/ let mut poll = Poll::new()?;","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.8.4\\src\\event\\events.rs","byte_start":68436,"byte_end":68468,"line_start":172,"line_end":172,"column_start":5,"column_end":37}},{"value":"/","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.8.4\\src\\event\\events.rs","byte_start":68473,"byte_end":68476,"line_start":173,"line_end":173,"column_start":5,"column_end":8}},{"value":"/ // Register handles with `poll`.","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.8.4\\src\\event\\events.rs","byte_start":68481,"byte_end":68517,"line_start":174,"line_end":174,"column_start":5,"column_end":41}},{"value":"/","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.8.4\\src\\event\\events.rs","byte_start":68522,"byte_end":68525,"line_start":175,"line_end":175,"column_start":5,"column_end":8}},{"value":"/ poll.poll(&mut events, Some(Duration::from_millis(100)))?;","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.8.4\\src\\event\\events.rs","byte_start":68530,"byte_end":68592,"line_start":176,"line_end":176,"column_start":5,"column_end":67}},{"value":"/","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.8.4\\src\\event\\events.rs","byte_start":68597,"byte_end":68600,"line_start":177,"line_end":177,"column_start":5,"column_end":8}},{"value":"/ // Clear all events.","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.8.4\\src\\event\\events.rs","byte_start":68605,"byte_end":68629,"line_start":178,"line_end":178,"column_start":5,"column_end":29}},{"value":"/ events.clear();","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.8.4\\src\\event\\events.rs","byte_start":68634,"byte_end":68653,"line_start":179,"line_end":179,"column_start":5,"column_end":24}},{"value":"/ assert!(events.is_empty());","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.8.4\\src\\event\\events.rs","byte_start":68658,"byte_end":68689,"line_start":180,"line_end":180,"column_start":5,"column_end":36}},{"value":"/ #     Ok(())","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.8.4\\src\\event\\events.rs","byte_start":68694,"byte_end":68710,"line_start":181,"line_end":181,"column_start":5,"column_end":21}},{"value":"/ # }","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.8.4\\src\\event\\events.rs","byte_start":68715,"byte_end":68722,"line_start":182,"line_end":182,"column_start":5,"column_end":12}},{"value":"/ ```","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.8.4\\src\\event\\events.rs","byte_start":68727,"byte_end":68734,"line_start":183,"line_end":183,"column_start":5,"column_end":12}}]},{"kind":"Trait","id":{"krate":0,"index":193},"span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.8.4\\src\\event\\source.rs","byte_start":72329,"byte_end":72335,"line_start":75,"line_end":75,"column_start":11,"column_end":17},"name":"Source","qualname":"::event::source::Source","value":"Source","parent":null,"children":[{"krate":0,"index":194},{"krate":0,"index":195},{"krate":0,"index":196}],"decl_id":null,"docs":" An event source that may be registered with [`Registry`].","sig":null,"attributes":[{"value":"/ An event source that may be registered with [`Registry`].","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.8.4\\src\\event\\source.rs","byte_start":69782,"byte_end":69843,"line_start":5,"line_end":5,"column_start":1,"column_end":62}},{"value":"/","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.8.4\\src\\event\\source.rs","byte_start":69844,"byte_end":69847,"line_start":6,"line_end":6,"column_start":1,"column_end":4}},{"value":"/ Types that implement `event::Source` can be registered with","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.8.4\\src\\event\\source.rs","byte_start":69848,"byte_end":69911,"line_start":7,"line_end":7,"column_start":1,"column_end":64}},{"value":"/ `Registry`. Users of Mio **should not** use the `event::Source` trait","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.8.4\\src\\event\\source.rs","byte_start":69912,"byte_end":69985,"line_start":8,"line_end":8,"column_start":1,"column_end":74}},{"value":"/ functions directly. Instead, the equivalent functions on `Registry` should","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.8.4\\src\\event\\source.rs","byte_start":69986,"byte_end":70064,"line_start":9,"line_end":9,"column_start":1,"column_end":79}},{"value":"/ be used.","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.8.4\\src\\event\\source.rs","byte_start":70065,"byte_end":70077,"line_start":10,"line_end":10,"column_start":1,"column_end":13}},{"value":"/","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.8.4\\src\\event\\source.rs","byte_start":70078,"byte_end":70081,"line_start":11,"line_end":11,"column_start":1,"column_end":4}},{"value":"/ See [`Registry`] for more details.","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.8.4\\src\\event\\source.rs","byte_start":70082,"byte_end":70120,"line_start":12,"line_end":12,"column_start":1,"column_end":39}},{"value":"/","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.8.4\\src\\event\\source.rs","byte_start":70121,"byte_end":70124,"line_start":13,"line_end":13,"column_start":1,"column_end":4}},{"value":"/ [`Registry`]: ../struct.Registry.html","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.8.4\\src\\event\\source.rs","byte_start":70125,"byte_end":70166,"line_start":14,"line_end":14,"column_start":1,"column_end":42}},{"value":"/","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.8.4\\src\\event\\source.rs","byte_start":70167,"byte_end":70170,"line_start":15,"line_end":15,"column_start":1,"column_end":4}},{"value":"/ # Implementing `event::Source`","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.8.4\\src\\event\\source.rs","byte_start":70171,"byte_end":70205,"line_start":16,"line_end":16,"column_start":1,"column_end":35}},{"value":"/","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.8.4\\src\\event\\source.rs","byte_start":70206,"byte_end":70209,"line_start":17,"line_end":17,"column_start":1,"column_end":4}},{"value":"/ Event sources are always backed by system handles, such as sockets or other","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.8.4\\src\\event\\source.rs","byte_start":70210,"byte_end":70289,"line_start":18,"line_end":18,"column_start":1,"column_end":80}},{"value":"/ system handles. These `event::Source`s will be monitored by the system","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.8.4\\src\\event\\source.rs","byte_start":70290,"byte_end":70364,"line_start":19,"line_end":19,"column_start":1,"column_end":75}},{"value":"/ selector. An implementation of `Source` will almost always delegates to a","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.8.4\\src\\event\\source.rs","byte_start":70365,"byte_end":70442,"line_start":20,"line_end":20,"column_start":1,"column_end":78}},{"value":"/ lower level handle. Examples of this are [`TcpStream`]s, or the *unix only*","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.8.4\\src\\event\\source.rs","byte_start":70443,"byte_end":70522,"line_start":21,"line_end":21,"column_start":1,"column_end":80}},{"value":"/ [`SourceFd`].","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.8.4\\src\\event\\source.rs","byte_start":70523,"byte_end":70540,"line_start":22,"line_end":22,"column_start":1,"column_end":18}},{"value":"/","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.8.4\\src\\event\\source.rs","byte_start":70541,"byte_end":70544,"line_start":23,"line_end":23,"column_start":1,"column_end":4}},{"value":"/ [`TcpStream`]: ../net/struct.TcpStream.html","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.8.4\\src\\event\\source.rs","byte_start":70545,"byte_end":70592,"line_start":24,"line_end":24,"column_start":1,"column_end":48}},{"value":"/ [`SourceFd`]: ../unix/struct.SourceFd.html","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.8.4\\src\\event\\source.rs","byte_start":70593,"byte_end":70639,"line_start":25,"line_end":25,"column_start":1,"column_end":47}},{"value":"/","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.8.4\\src\\event\\source.rs","byte_start":70640,"byte_end":70643,"line_start":26,"line_end":26,"column_start":1,"column_end":4}},{"value":"/ # Dropping `event::Source`s","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.8.4\\src\\event\\source.rs","byte_start":70644,"byte_end":70675,"line_start":27,"line_end":27,"column_start":1,"column_end":32}},{"value":"/","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.8.4\\src\\event\\source.rs","byte_start":70676,"byte_end":70679,"line_start":28,"line_end":28,"column_start":1,"column_end":4}},{"value":"/ All `event::Source`s, unless otherwise specified, need to be [deregistered]","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.8.4\\src\\event\\source.rs","byte_start":70680,"byte_end":70759,"line_start":29,"line_end":29,"column_start":1,"column_end":80}},{"value":"/ before being dropped for them to not leak resources. This goes against the","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.8.4\\src\\event\\source.rs","byte_start":70760,"byte_end":70838,"line_start":30,"line_end":30,"column_start":1,"column_end":79}},{"value":"/ normal drop behaviour of types in Rust which cleanup after themselves, e.g.","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.8.4\\src\\event\\source.rs","byte_start":70839,"byte_end":70918,"line_start":31,"line_end":31,"column_start":1,"column_end":80}},{"value":"/ a `File` will close itself. However since deregistering needs access to","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.8.4\\src\\event\\source.rs","byte_start":70919,"byte_end":70994,"line_start":32,"line_end":32,"column_start":1,"column_end":76}},{"value":"/ [`Registry`] this cannot be done while being dropped.","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.8.4\\src\\event\\source.rs","byte_start":70995,"byte_end":71052,"line_start":33,"line_end":33,"column_start":1,"column_end":58}},{"value":"/","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.8.4\\src\\event\\source.rs","byte_start":71053,"byte_end":71056,"line_start":34,"line_end":34,"column_start":1,"column_end":4}},{"value":"/ [deregistered]: ../struct.Registry.html#method.deregister","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.8.4\\src\\event\\source.rs","byte_start":71057,"byte_end":71118,"line_start":35,"line_end":35,"column_start":1,"column_end":62}},{"value":"/","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.8.4\\src\\event\\source.rs","byte_start":71119,"byte_end":71122,"line_start":36,"line_end":36,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.8.4\\src\\event\\source.rs","byte_start":71123,"byte_end":71137,"line_start":37,"line_end":37,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.8.4\\src\\event\\source.rs","byte_start":71138,"byte_end":71141,"line_start":38,"line_end":38,"column_start":1,"column_end":4}},{"value":"/ Implementing `Source` on a struct containing a socket:","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.8.4\\src\\event\\source.rs","byte_start":71142,"byte_end":71200,"line_start":39,"line_end":39,"column_start":1,"column_end":59}},{"value":"/","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.8.4\\src\\event\\source.rs","byte_start":71201,"byte_end":71204,"line_start":40,"line_end":40,"column_start":1,"column_end":4}},{"value":"/ use mio::{Interest, Registry, Token};","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.8.4\\src\\event\\source.rs","byte_start":71352,"byte_end":71393,"line_start":43,"line_end":43,"column_start":1,"column_end":42}},{"value":"/ use mio::event::Source;","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.8.4\\src\\event\\source.rs","byte_start":71394,"byte_end":71421,"line_start":44,"line_end":44,"column_start":1,"column_end":28}},{"value":"/ use mio::net::TcpStream;","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.8.4\\src\\event\\source.rs","byte_start":71422,"byte_end":71450,"line_start":45,"line_end":45,"column_start":1,"column_end":29}},{"value":"/","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.8.4\\src\\event\\source.rs","byte_start":71451,"byte_end":71454,"line_start":46,"line_end":46,"column_start":1,"column_end":4}},{"value":"/ use std::io;","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.8.4\\src\\event\\source.rs","byte_start":71455,"byte_end":71471,"line_start":47,"line_end":47,"column_start":1,"column_end":17}},{"value":"/","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.8.4\\src\\event\\source.rs","byte_start":71472,"byte_end":71475,"line_start":48,"line_end":48,"column_start":1,"column_end":4}},{"value":"/ # #[allow(dead_code)]","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.8.4\\src\\event\\source.rs","byte_start":71476,"byte_end":71501,"line_start":49,"line_end":49,"column_start":1,"column_end":26}},{"value":"/ pub struct MySource {","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.8.4\\src\\event\\source.rs","byte_start":71502,"byte_end":71527,"line_start":50,"line_end":50,"column_start":1,"column_end":26}},{"value":"/     socket: TcpStream,","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.8.4\\src\\event\\source.rs","byte_start":71528,"byte_end":71554,"line_start":51,"line_end":51,"column_start":1,"column_end":27}},{"value":"/ }","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.8.4\\src\\event\\source.rs","byte_start":71555,"byte_end":71560,"line_start":52,"line_end":52,"column_start":1,"column_end":6}},{"value":"/","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.8.4\\src\\event\\source.rs","byte_start":71561,"byte_end":71564,"line_start":53,"line_end":53,"column_start":1,"column_end":4}},{"value":"/ impl Source for MySource {","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.8.4\\src\\event\\source.rs","byte_start":71565,"byte_end":71595,"line_start":54,"line_end":54,"column_start":1,"column_end":31}},{"value":"/     fn register(&mut self, registry: &Registry, token: Token, interests: Interest)","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.8.4\\src\\event\\source.rs","byte_start":71596,"byte_end":71682,"line_start":55,"line_end":55,"column_start":1,"column_end":87}},{"value":"/         -> io::Result<()>","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.8.4\\src\\event\\source.rs","byte_start":71683,"byte_end":71712,"line_start":56,"line_end":56,"column_start":1,"column_end":30}},{"value":"/     {","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.8.4\\src\\event\\source.rs","byte_start":71713,"byte_end":71722,"line_start":57,"line_end":57,"column_start":1,"column_end":10}},{"value":"/         // Delegate the `register` call to `socket`","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.8.4\\src\\event\\source.rs","byte_start":71723,"byte_end":71778,"line_start":58,"line_end":58,"column_start":1,"column_end":56}},{"value":"/         self.socket.register(registry, token, interests)","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.8.4\\src\\event\\source.rs","byte_start":71779,"byte_end":71839,"line_start":59,"line_end":59,"column_start":1,"column_end":61}},{"value":"/     }","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.8.4\\src\\event\\source.rs","byte_start":71840,"byte_end":71849,"line_start":60,"line_end":60,"column_start":1,"column_end":10}},{"value":"/","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.8.4\\src\\event\\source.rs","byte_start":71850,"byte_end":71853,"line_start":61,"line_end":61,"column_start":1,"column_end":4}},{"value":"/     fn reregister(&mut self, registry: &Registry, token: Token, interests: Interest)","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.8.4\\src\\event\\source.rs","byte_start":71854,"byte_end":71942,"line_start":62,"line_end":62,"column_start":1,"column_end":89}},{"value":"/         -> io::Result<()>","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.8.4\\src\\event\\source.rs","byte_start":71943,"byte_end":71972,"line_start":63,"line_end":63,"column_start":1,"column_end":30}},{"value":"/     {","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.8.4\\src\\event\\source.rs","byte_start":71973,"byte_end":71982,"line_start":64,"line_end":64,"column_start":1,"column_end":10}},{"value":"/         // Delegate the `reregister` call to `socket`","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.8.4\\src\\event\\source.rs","byte_start":71983,"byte_end":72040,"line_start":65,"line_end":65,"column_start":1,"column_end":58}},{"value":"/         self.socket.reregister(registry, token, interests)","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.8.4\\src\\event\\source.rs","byte_start":72041,"byte_end":72103,"line_start":66,"line_end":66,"column_start":1,"column_end":63}},{"value":"/     }","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.8.4\\src\\event\\source.rs","byte_start":72104,"byte_end":72113,"line_start":67,"line_end":67,"column_start":1,"column_end":10}},{"value":"/","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.8.4\\src\\event\\source.rs","byte_start":72114,"byte_end":72117,"line_start":68,"line_end":68,"column_start":1,"column_end":4}},{"value":"/     fn deregister(&mut self, registry: &Registry) -> io::Result<()> {","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.8.4\\src\\event\\source.rs","byte_start":72118,"byte_end":72191,"line_start":69,"line_end":69,"column_start":1,"column_end":74}},{"value":"/         // Delegate the `deregister` call to `socket`","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.8.4\\src\\event\\source.rs","byte_start":72192,"byte_end":72249,"line_start":70,"line_end":70,"column_start":1,"column_end":58}},{"value":"/         self.socket.deregister(registry)","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.8.4\\src\\event\\source.rs","byte_start":72250,"byte_end":72294,"line_start":71,"line_end":71,"column_start":1,"column_end":45}},{"value":"/     }","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.8.4\\src\\event\\source.rs","byte_start":72295,"byte_end":72304,"line_start":72,"line_end":72,"column_start":1,"column_end":10}},{"value":"/ }","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.8.4\\src\\event\\source.rs","byte_start":72305,"byte_end":72310,"line_start":73,"line_end":73,"column_start":1,"column_end":6}},{"value":"/ ```","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.8.4\\src\\event\\source.rs","byte_start":72311,"byte_end":72318,"line_start":74,"line_end":74,"column_start":1,"column_end":8}}]},{"kind":"Method","id":{"krate":0,"index":194},"span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.8.4\\src\\event\\source.rs","byte_start":72687,"byte_end":72695,"line_start":83,"line_end":83,"column_start":8,"column_end":16},"name":"register","qualname":"::event::source::Source::register","value":"pub fn register(&mut Self, &Registry, Token, Interest) -> io::Result<()>","parent":{"krate":0,"index":193},"children":[],"decl_id":null,"docs":" Register `self` with the given `Registry` instance.","sig":null,"attributes":[{"value":"/ Register `self` with the given `Registry` instance.","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.8.4\\src\\event\\source.rs","byte_start":72342,"byte_end":72397,"line_start":76,"line_end":76,"column_start":5,"column_end":60}},{"value":"/","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.8.4\\src\\event\\source.rs","byte_start":72402,"byte_end":72405,"line_start":77,"line_end":77,"column_start":5,"column_end":8}},{"value":"/ This function should not be called directly. Use [`Registry::register`]","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.8.4\\src\\event\\source.rs","byte_start":72410,"byte_end":72485,"line_start":78,"line_end":78,"column_start":5,"column_end":80}},{"value":"/ instead. Implementors should handle registration by delegating the call","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.8.4\\src\\event\\source.rs","byte_start":72490,"byte_end":72565,"line_start":79,"line_end":79,"column_start":5,"column_end":80}},{"value":"/ to another `Source` type.","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.8.4\\src\\event\\source.rs","byte_start":72570,"byte_end":72599,"line_start":80,"line_end":80,"column_start":5,"column_end":34}},{"value":"/","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.8.4\\src\\event\\source.rs","byte_start":72604,"byte_end":72607,"line_start":81,"line_end":81,"column_start":5,"column_end":8}},{"value":"/ [`Registry::register`]: ../struct.Registry.html#method.register","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.8.4\\src\\event\\source.rs","byte_start":72612,"byte_end":72679,"line_start":82,"line_end":82,"column_start":5,"column_end":72}}]},{"kind":"Method","id":{"krate":0,"index":195},"span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.8.4\\src\\event\\source.rs","byte_start":73190,"byte_end":73200,"line_start":97,"line_end":97,"column_start":8,"column_end":18},"name":"reregister","qualname":"::event::source::Source::reregister","value":"pub fn reregister(&mut Self, &Registry, Token, Interest) -> io::Result<()>","parent":{"krate":0,"index":193},"children":[],"decl_id":null,"docs":" Re-register `self` with the given `Registry` instance.","sig":null,"attributes":[{"value":"/ Re-register `self` with the given `Registry` instance.","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.8.4\\src\\event\\source.rs","byte_start":72826,"byte_end":72884,"line_start":90,"line_end":90,"column_start":5,"column_end":63}},{"value":"/","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.8.4\\src\\event\\source.rs","byte_start":72889,"byte_end":72892,"line_start":91,"line_end":91,"column_start":5,"column_end":8}},{"value":"/ This function should not be called directly. Use","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.8.4\\src\\event\\source.rs","byte_start":72897,"byte_end":72949,"line_start":92,"line_end":92,"column_start":5,"column_end":57}},{"value":"/ [`Registry::reregister`] instead. Implementors should handle","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.8.4\\src\\event\\source.rs","byte_start":72954,"byte_end":73018,"line_start":93,"line_end":93,"column_start":5,"column_end":69}},{"value":"/ re-registration by either delegating the call to another `Source` type.","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.8.4\\src\\event\\source.rs","byte_start":73023,"byte_end":73098,"line_start":94,"line_end":94,"column_start":5,"column_end":80}},{"value":"/","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.8.4\\src\\event\\source.rs","byte_start":73103,"byte_end":73106,"line_start":95,"line_end":95,"column_start":5,"column_end":8}},{"value":"/ [`Registry::reregister`]: ../struct.Registry.html#method.reregister","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.8.4\\src\\event\\source.rs","byte_start":73111,"byte_end":73182,"line_start":96,"line_end":96,"column_start":5,"column_end":76}}]},{"kind":"Method","id":{"krate":0,"index":196},"span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.8.4\\src\\event\\source.rs","byte_start":73686,"byte_end":73696,"line_start":111,"line_end":111,"column_start":8,"column_end":18},"name":"deregister","qualname":"::event::source::Source::deregister","value":"pub fn deregister(&mut Self, &Registry) -> io::Result<()>","parent":{"krate":0,"index":193},"children":[],"decl_id":null,"docs":" Deregister `self` from the given `Registry` instance.","sig":null,"attributes":[{"value":"/ Deregister `self` from the given `Registry` instance.","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.8.4\\src\\event\\source.rs","byte_start":73331,"byte_end":73388,"line_start":104,"line_end":104,"column_start":5,"column_end":62}},{"value":"/","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.8.4\\src\\event\\source.rs","byte_start":73393,"byte_end":73396,"line_start":105,"line_end":105,"column_start":5,"column_end":8}},{"value":"/ This function should not be called directly. Use","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.8.4\\src\\event\\source.rs","byte_start":73401,"byte_end":73453,"line_start":106,"line_end":106,"column_start":5,"column_end":57}},{"value":"/ [`Registry::deregister`] instead. Implementors should handle","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.8.4\\src\\event\\source.rs","byte_start":73458,"byte_end":73522,"line_start":107,"line_end":107,"column_start":5,"column_end":69}},{"value":"/ deregistration by delegating the call to another `Source` type.","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.8.4\\src\\event\\source.rs","byte_start":73527,"byte_end":73594,"line_start":108,"line_end":108,"column_start":5,"column_end":72}},{"value":"/","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.8.4\\src\\event\\source.rs","byte_start":73599,"byte_end":73602,"line_start":109,"line_end":109,"column_start":5,"column_end":8}},{"value":"/ [`Registry::deregister`]: ../struct.Registry.html#method.deregister","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.8.4\\src\\event\\source.rs","byte_start":73607,"byte_end":73678,"line_start":110,"line_end":110,"column_start":5,"column_end":76}}]},{"kind":"Mod","id":{"krate":0,"index":1536},"span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.8.4\\src\\net\\mod.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"net","qualname":"::net","value":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.8.4\\src\\net\\mod.rs","parent":null,"children":[{"krate":0,"index":1537},{"krate":0,"index":1750},{"krate":0,"index":1751},{"krate":0,"index":1754},{"krate":0,"index":1757},{"krate":0,"index":1861}],"decl_id":null,"docs":" Networking primitives.","sig":null,"attributes":[{"value":"cfg(feature = \"net\")","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.8.4\\src\\macros.rs","byte_start":10437,"byte_end":10460,"line_start":42,"line_end":42,"column_start":13,"column_end":36}},{"value":"/ Networking primitives.","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.8.4\\src\\net\\mod.rs","byte_start":13708250,"byte_end":13708276,"line_start":1,"line_end":1,"column_start":1,"column_end":27}},{"value":"/","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.8.4\\src\\net\\mod.rs","byte_start":13708277,"byte_end":13708280,"line_start":2,"line_end":2,"column_start":1,"column_end":4}},{"value":"/ The types provided in this module are non-blocking by default and are","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.8.4\\src\\net\\mod.rs","byte_start":13708281,"byte_end":13708354,"line_start":3,"line_end":3,"column_start":1,"column_end":74}},{"value":"/ designed to be portable across all supported Mio platforms. As long as the","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.8.4\\src\\net\\mod.rs","byte_start":13708355,"byte_end":13708433,"line_start":4,"line_end":4,"column_start":1,"column_end":79}},{"value":"/ [portability guidelines] are followed, the behavior should be identical no","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.8.4\\src\\net\\mod.rs","byte_start":13708434,"byte_end":13708512,"line_start":5,"line_end":5,"column_start":1,"column_end":79}},{"value":"/ matter the target platform.","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.8.4\\src\\net\\mod.rs","byte_start":13708513,"byte_end":13708544,"line_start":6,"line_end":6,"column_start":1,"column_end":32}},{"value":"/","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.8.4\\src\\net\\mod.rs","byte_start":13708545,"byte_end":13708548,"line_start":7,"line_end":7,"column_start":1,"column_end":4}},{"value":"/ [portability guidelines]: ../struct.Poll.html#portability","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.8.4\\src\\net\\mod.rs","byte_start":13708549,"byte_end":13708610,"line_start":8,"line_end":8,"column_start":1,"column_end":62}},{"value":"/","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.8.4\\src\\net\\mod.rs","byte_start":13708611,"byte_end":13708614,"line_start":9,"line_end":9,"column_start":1,"column_end":4}},{"value":"/ # Notes","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.8.4\\src\\net\\mod.rs","byte_start":13708615,"byte_end":13708626,"line_start":10,"line_end":10,"column_start":1,"column_end":12}},{"value":"/","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.8.4\\src\\net\\mod.rs","byte_start":13708627,"byte_end":13708630,"line_start":11,"line_end":11,"column_start":1,"column_end":4}},{"value":"/ When using a datagram based socket, i.e. [`UdpSocket`] or [`UnixDatagram`],","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.8.4\\src\\net\\mod.rs","byte_start":13708631,"byte_end":13708710,"line_start":12,"line_end":12,"column_start":1,"column_end":80}},{"value":"/ its only possible to receive a packet once. This means that if you provide a","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.8.4\\src\\net\\mod.rs","byte_start":13708711,"byte_end":13708791,"line_start":13,"line_end":13,"column_start":1,"column_end":81}},{"value":"/ buffer that is too small you won't be able to receive the data anymore. How","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.8.4\\src\\net\\mod.rs","byte_start":13708792,"byte_end":13708871,"line_start":14,"line_end":14,"column_start":1,"column_end":80}},{"value":"/ OSs deal with this situation is different for each OS:","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.8.4\\src\\net\\mod.rs","byte_start":13708872,"byte_end":13708930,"line_start":15,"line_end":15,"column_start":1,"column_end":59}},{"value":"/  * Unixes, such as Linux, FreeBSD and macOS, will simply fill the buffer and","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.8.4\\src\\net\\mod.rs","byte_start":13708931,"byte_end":13709011,"line_start":16,"line_end":16,"column_start":1,"column_end":81}},{"value":"/    return the amount of bytes written. This means that if the returned value","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.8.4\\src\\net\\mod.rs","byte_start":13709012,"byte_end":13709092,"line_start":17,"line_end":17,"column_start":1,"column_end":81}},{"value":"/    is equal to the size of the buffer it may have only written a part of the","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.8.4\\src\\net\\mod.rs","byte_start":13709093,"byte_end":13709173,"line_start":18,"line_end":18,"column_start":1,"column_end":81}},{"value":"/    packet (or the packet has the same size as the buffer).","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.8.4\\src\\net\\mod.rs","byte_start":13709174,"byte_end":13709236,"line_start":19,"line_end":19,"column_start":1,"column_end":63}},{"value":"/  * Windows returns an `WSAEMSGSIZE` error.","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.8.4\\src\\net\\mod.rs","byte_start":13709237,"byte_end":13709283,"line_start":20,"line_end":20,"column_start":1,"column_end":47}},{"value":"/","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.8.4\\src\\net\\mod.rs","byte_start":13709284,"byte_end":13709287,"line_start":21,"line_end":21,"column_start":1,"column_end":4}},{"value":"/ Mio does not change the value (either ok or error) returned by the OS, it's","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.8.4\\src\\net\\mod.rs","byte_start":13709288,"byte_end":13709367,"line_start":22,"line_end":22,"column_start":1,"column_end":80}},{"value":"/ up to the user handle this. How to deal with these difference is still up","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.8.4\\src\\net\\mod.rs","byte_start":13709368,"byte_end":13709445,"line_start":23,"line_end":23,"column_start":1,"column_end":78}},{"value":"/ for debate, specifically in","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.8.4\\src\\net\\mod.rs","byte_start":13709446,"byte_end":13709477,"line_start":24,"line_end":24,"column_start":1,"column_end":32}},{"value":"/ <https://github.com/rust-lang/rust/issues/55794>. The best advice we can","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.8.4\\src\\net\\mod.rs","byte_start":13709478,"byte_end":13709554,"line_start":25,"line_end":25,"column_start":1,"column_end":77}},{"value":"/ give is to always call receive with a large enough buffer.","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.8.4\\src\\net\\mod.rs","byte_start":13709555,"byte_end":13709617,"line_start":26,"line_end":26,"column_start":1,"column_end":63}}]},{"kind":"Struct","id":{"krate":0,"index":1598},"span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.8.4\\src\\net\\tcp\\listener.rs","byte_start":13711347,"byte_end":13711358,"line_start":44,"line_end":44,"column_start":12,"column_end":23},"name":"TcpListener","qualname":"::net::tcp::listener::TcpListener","value":"TcpListener {  }","parent":null,"children":[{"krate":0,"index":1599}],"decl_id":null,"docs":" A structure representing a socket server","sig":null,"attributes":[{"value":"/ A structure representing a socket server","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.8.4\\src\\net\\tcp\\listener.rs","byte_start":13710548,"byte_end":13710592,"line_start":18,"line_end":18,"column_start":1,"column_end":45}},{"value":"/","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.8.4\\src\\net\\tcp\\listener.rs","byte_start":13710593,"byte_end":13710596,"line_start":19,"line_end":19,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.8.4\\src\\net\\tcp\\listener.rs","byte_start":13710597,"byte_end":13710611,"line_start":20,"line_end":20,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.8.4\\src\\net\\tcp\\listener.rs","byte_start":13710612,"byte_end":13710615,"line_start":21,"line_end":21,"column_start":1,"column_end":4}},{"value":"/ # use std::error::Error;","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.8.4\\src\\net\\tcp\\listener.rs","byte_start":13710719,"byte_end":13710747,"line_start":24,"line_end":24,"column_start":1,"column_end":29}},{"value":"/ # fn main() -> Result<(), Box<dyn Error>> {","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.8.4\\src\\net\\tcp\\listener.rs","byte_start":13710748,"byte_end":13710795,"line_start":25,"line_end":25,"column_start":1,"column_end":48}},{"value":"/ use mio::{Events, Interest, Poll, Token};","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.8.4\\src\\net\\tcp\\listener.rs","byte_start":13710796,"byte_end":13710841,"line_start":26,"line_end":26,"column_start":1,"column_end":46}},{"value":"/ use mio::net::TcpListener;","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.8.4\\src\\net\\tcp\\listener.rs","byte_start":13710842,"byte_end":13710872,"line_start":27,"line_end":27,"column_start":1,"column_end":31}},{"value":"/ use std::time::Duration;","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.8.4\\src\\net\\tcp\\listener.rs","byte_start":13710873,"byte_end":13710901,"line_start":28,"line_end":28,"column_start":1,"column_end":29}},{"value":"/","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.8.4\\src\\net\\tcp\\listener.rs","byte_start":13710902,"byte_end":13710905,"line_start":29,"line_end":29,"column_start":1,"column_end":4}},{"value":"/ let mut listener = TcpListener::bind(\"127.0.0.1:34255\".parse()?)?;","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.8.4\\src\\net\\tcp\\listener.rs","byte_start":13710906,"byte_end":13710976,"line_start":30,"line_end":30,"column_start":1,"column_end":71}},{"value":"/","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.8.4\\src\\net\\tcp\\listener.rs","byte_start":13710977,"byte_end":13710980,"line_start":31,"line_end":31,"column_start":1,"column_end":4}},{"value":"/ let mut poll = Poll::new()?;","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.8.4\\src\\net\\tcp\\listener.rs","byte_start":13710981,"byte_end":13711013,"line_start":32,"line_end":32,"column_start":1,"column_end":33}},{"value":"/ let mut events = Events::with_capacity(128);","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.8.4\\src\\net\\tcp\\listener.rs","byte_start":13711014,"byte_end":13711062,"line_start":33,"line_end":33,"column_start":1,"column_end":49}},{"value":"/","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.8.4\\src\\net\\tcp\\listener.rs","byte_start":13711063,"byte_end":13711066,"line_start":34,"line_end":34,"column_start":1,"column_end":4}},{"value":"/ // Register the socket with `Poll`","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.8.4\\src\\net\\tcp\\listener.rs","byte_start":13711067,"byte_end":13711105,"line_start":35,"line_end":35,"column_start":1,"column_end":39}},{"value":"/ poll.registry().register(&mut listener, Token(0), Interest::READABLE)?;","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.8.4\\src\\net\\tcp\\listener.rs","byte_start":13711106,"byte_end":13711181,"line_start":36,"line_end":36,"column_start":1,"column_end":76}},{"value":"/","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.8.4\\src\\net\\tcp\\listener.rs","byte_start":13711182,"byte_end":13711185,"line_start":37,"line_end":37,"column_start":1,"column_end":4}},{"value":"/ poll.poll(&mut events, Some(Duration::from_millis(100)))?;","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.8.4\\src\\net\\tcp\\listener.rs","byte_start":13711186,"byte_end":13711248,"line_start":38,"line_end":38,"column_start":1,"column_end":63}},{"value":"/","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.8.4\\src\\net\\tcp\\listener.rs","byte_start":13711249,"byte_end":13711252,"line_start":39,"line_end":39,"column_start":1,"column_end":4}},{"value":"/ // There may be a socket ready to be accepted","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.8.4\\src\\net\\tcp\\listener.rs","byte_start":13711253,"byte_end":13711302,"line_start":40,"line_end":40,"column_start":1,"column_end":50}},{"value":"/ #     Ok(())","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.8.4\\src\\net\\tcp\\listener.rs","byte_start":13711303,"byte_end":13711319,"line_start":41,"line_end":41,"column_start":1,"column_end":17}},{"value":"/ # }","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.8.4\\src\\net\\tcp\\listener.rs","byte_start":13711320,"byte_end":13711327,"line_start":42,"line_end":42,"column_start":1,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.8.4\\src\\net\\tcp\\listener.rs","byte_start":13711328,"byte_end":13711335,"line_start":43,"line_end":43,"column_start":1,"column_end":8}}]},{"kind":"Method","id":{"krate":0,"index":1601},"span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.8.4\\src\\net\\tcp\\listener.rs","byte_start":13711888,"byte_end":13711892,"line_start":59,"line_end":59,"column_start":12,"column_end":16},"name":"bind","qualname":"<TcpListener>::bind","value":"pub fn bind(SocketAddr) -> io::Result<TcpListener>","parent":null,"children":[],"decl_id":null,"docs":" Convenience method to bind a new TCP listener to the specified address\n to receive new connections.","sig":null,"attributes":[{"value":"/ Convenience method to bind a new TCP listener to the specified address","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.8.4\\src\\net\\tcp\\listener.rs","byte_start":13711426,"byte_end":13711500,"line_start":49,"line_end":49,"column_start":5,"column_end":79}},{"value":"/ to receive new connections.","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.8.4\\src\\net\\tcp\\listener.rs","byte_start":13711505,"byte_end":13711536,"line_start":50,"line_end":50,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.8.4\\src\\net\\tcp\\listener.rs","byte_start":13711541,"byte_end":13711544,"line_start":51,"line_end":51,"column_start":5,"column_end":8}},{"value":"/ This function will take the following steps:","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.8.4\\src\\net\\tcp\\listener.rs","byte_start":13711549,"byte_end":13711597,"line_start":52,"line_end":52,"column_start":5,"column_end":53}},{"value":"/","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.8.4\\src\\net\\tcp\\listener.rs","byte_start":13711602,"byte_end":13711605,"line_start":53,"line_end":53,"column_start":5,"column_end":8}},{"value":"/ 1. Create a new TCP socket.","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.8.4\\src\\net\\tcp\\listener.rs","byte_start":13711610,"byte_end":13711641,"line_start":54,"line_end":54,"column_start":5,"column_end":36}},{"value":"/ 2. Set the `SO_REUSEADDR` option on the socket on Unix.","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.8.4\\src\\net\\tcp\\listener.rs","byte_start":13711646,"byte_end":13711705,"line_start":55,"line_end":55,"column_start":5,"column_end":64}},{"value":"/ 3. Bind the socket to the specified address.","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.8.4\\src\\net\\tcp\\listener.rs","byte_start":13711710,"byte_end":13711758,"line_start":56,"line_end":56,"column_start":5,"column_end":53}},{"value":"/ 4. Calls `listen` on the socket to prepare it to receive new connections.","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.8.4\\src\\net\\tcp\\listener.rs","byte_start":13711763,"byte_end":13711840,"line_start":57,"line_end":57,"column_start":5,"column_end":82}},{"value":"cfg(not(target_os = \"wasi\"))","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.8.4\\src\\net\\tcp\\listener.rs","byte_start":13711845,"byte_end":13711876,"line_start":58,"line_end":58,"column_start":5,"column_end":36}}]},{"kind":"Method","id":{"krate":0,"index":1602},"span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.8.4\\src\\net\\tcp\\listener.rs","byte_start":13713176,"byte_end":13713184,"line_start":87,"line_end":87,"column_start":12,"column_end":20},"name":"from_std","qualname":"<TcpListener>::from_std","value":"pub fn from_std(net::TcpListener) -> TcpListener","parent":null,"children":[],"decl_id":null,"docs":" Creates a new `TcpListener` from a standard `net::TcpListener`.","sig":null,"attributes":[{"value":"/ Creates a new `TcpListener` from a standard `net::TcpListener`.","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.8.4\\src\\net\\tcp\\listener.rs","byte_start":13712826,"byte_end":13712893,"line_start":81,"line_end":81,"column_start":5,"column_end":72}},{"value":"/","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.8.4\\src\\net\\tcp\\listener.rs","byte_start":13712898,"byte_end":13712901,"line_start":82,"line_end":82,"column_start":5,"column_end":8}},{"value":"/ This function is intended to be used to wrap a TCP listener from the","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.8.4\\src\\net\\tcp\\listener.rs","byte_start":13712906,"byte_end":13712978,"line_start":83,"line_end":83,"column_start":5,"column_end":77}},{"value":"/ standard library in the Mio equivalent. The conversion assumes nothing","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.8.4\\src\\net\\tcp\\listener.rs","byte_start":13712983,"byte_end":13713057,"line_start":84,"line_end":84,"column_start":5,"column_end":79}},{"value":"/ about the underlying listener; ; it is left up to the user to set it","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.8.4\\src\\net\\tcp\\listener.rs","byte_start":13713062,"byte_end":13713134,"line_start":85,"line_end":85,"column_start":5,"column_end":77}},{"value":"/ in non-blocking mode.","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.8.4\\src\\net\\tcp\\listener.rs","byte_start":13713139,"byte_end":13713164,"line_start":86,"line_end":86,"column_start":5,"column_end":30}}]},{"kind":"Method","id":{"krate":0,"index":1603},"span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.8.4\\src\\net\\tcp\\listener.rs","byte_start":13713699,"byte_end":13713705,"line_start":101,"line_end":101,"column_start":12,"column_end":18},"name":"accept","qualname":"<TcpListener>::accept","value":"pub fn accept(&Self) -> io::Result<(TcpStream, SocketAddr)>","parent":null,"children":[],"decl_id":null,"docs":" Accepts a new `TcpStream`.","sig":null,"attributes":[{"value":"/ Accepts a new `TcpStream`.","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.8.4\\src\\net\\tcp\\listener.rs","byte_start":13713317,"byte_end":13713347,"line_start":93,"line_end":93,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.8.4\\src\\net\\tcp\\listener.rs","byte_start":13713352,"byte_end":13713355,"line_start":94,"line_end":94,"column_start":5,"column_end":8}},{"value":"/ This may return an `Err(e)` where `e.kind()` is","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.8.4\\src\\net\\tcp\\listener.rs","byte_start":13713360,"byte_end":13713411,"line_start":95,"line_end":95,"column_start":5,"column_end":56}},{"value":"/ `io::ErrorKind::WouldBlock`. This means a stream may be ready at a later","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.8.4\\src\\net\\tcp\\listener.rs","byte_start":13713416,"byte_end":13713492,"line_start":96,"line_end":96,"column_start":5,"column_end":81}},{"value":"/ point and one should wait for an event before calling `accept` again.","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.8.4\\src\\net\\tcp\\listener.rs","byte_start":13713497,"byte_end":13713570,"line_start":97,"line_end":97,"column_start":5,"column_end":78}},{"value":"/","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.8.4\\src\\net\\tcp\\listener.rs","byte_start":13713575,"byte_end":13713578,"line_start":98,"line_end":98,"column_start":5,"column_end":8}},{"value":"/ If an accepted stream is returned, the remote address of the peer is","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.8.4\\src\\net\\tcp\\listener.rs","byte_start":13713583,"byte_end":13713655,"line_start":99,"line_end":99,"column_start":5,"column_end":77}},{"value":"/ returned along with it.","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.8.4\\src\\net\\tcp\\listener.rs","byte_start":13713660,"byte_end":13713687,"line_start":100,"line_end":100,"column_start":5,"column_end":32}}]},{"kind":"Method","id":{"krate":0,"index":1606},"span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.8.4\\src\\net\\tcp\\listener.rs","byte_start":13713971,"byte_end":13713981,"line_start":108,"line_end":108,"column_start":12,"column_end":22},"name":"local_addr","qualname":"<TcpListener>::local_addr","value":"pub fn local_addr(&Self) -> io::Result<SocketAddr>","parent":null,"children":[],"decl_id":null,"docs":" Returns the local socket address of this listener.\n","sig":null,"attributes":[{"value":"/ Returns the local socket address of this listener.","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.8.4\\src\\net\\tcp\\listener.rs","byte_start":13713905,"byte_end":13713959,"line_start":107,"line_end":107,"column_start":5,"column_end":59}}]},{"kind":"Method","id":{"krate":0,"index":1607},"span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.8.4\\src\\net\\tcp\\listener.rs","byte_start":13714245,"byte_end":13714252,"line_start":116,"line_end":116,"column_start":12,"column_end":19},"name":"set_ttl","qualname":"<TcpListener>::set_ttl","value":"pub fn set_ttl(&Self, u32) -> io::Result<()>","parent":null,"children":[],"decl_id":null,"docs":" Sets the value for the `IP_TTL` option on this socket.","sig":null,"attributes":[{"value":"/ Sets the value for the `IP_TTL` option on this socket.","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.8.4\\src\\net\\tcp\\listener.rs","byte_start":13714060,"byte_end":13714118,"line_start":112,"line_end":112,"column_start":5,"column_end":63}},{"value":"/","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.8.4\\src\\net\\tcp\\listener.rs","byte_start":13714123,"byte_end":13714126,"line_start":113,"line_end":113,"column_start":5,"column_end":8}},{"value":"/ This value sets the time-to-live field that is used in every packet sent","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.8.4\\src\\net\\tcp\\listener.rs","byte_start":13714131,"byte_end":13714207,"line_start":114,"line_end":114,"column_start":5,"column_end":81}},{"value":"/ from this socket.","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.8.4\\src\\net\\tcp\\listener.rs","byte_start":13714212,"byte_end":13714233,"line_start":115,"line_end":115,"column_start":5,"column_end":26}}]},{"kind":"Method","id":{"krate":0,"index":1608},"span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.8.4\\src\\net\\tcp\\listener.rs","byte_start":13714522,"byte_end":13714525,"line_start":125,"line_end":125,"column_start":12,"column_end":15},"name":"ttl","qualname":"<TcpListener>::ttl","value":"pub fn ttl(&Self) -> io::Result<u32>","parent":null,"children":[],"decl_id":null,"docs":" Gets the value of the `IP_TTL` option for this socket.","sig":null,"attributes":[{"value":"/ Gets the value of the `IP_TTL` option for this socket.","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.8.4\\src\\net\\tcp\\listener.rs","byte_start":13714333,"byte_end":13714391,"line_start":120,"line_end":120,"column_start":5,"column_end":63}},{"value":"/","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.8.4\\src\\net\\tcp\\listener.rs","byte_start":13714396,"byte_end":13714399,"line_start":121,"line_end":121,"column_start":5,"column_end":8}},{"value":"/ For more information about this option, see [`set_ttl`][link].","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.8.4\\src\\net\\tcp\\listener.rs","byte_start":13714404,"byte_end":13714470,"line_start":122,"line_end":122,"column_start":5,"column_end":71}},{"value":"/","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.8.4\\src\\net\\tcp\\listener.rs","byte_start":13714475,"byte_end":13714478,"line_start":123,"line_end":123,"column_start":5,"column_end":8}},{"value":"/ [link]: #method.set_ttl","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.8.4\\src\\net\\tcp\\listener.rs","byte_start":13714483,"byte_end":13714510,"line_start":124,"line_end":124,"column_start":5,"column_end":32}}]},{"kind":"Method","id":{"krate":0,"index":1609},"span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.8.4\\src\\net\\tcp\\listener.rs","byte_start":13714843,"byte_end":13714853,"line_start":134,"line_end":134,"column_start":12,"column_end":22},"name":"take_error","qualname":"<TcpListener>::take_error","value":"pub fn take_error(&Self) -> io::Result<Option<io::Error>>","parent":null,"children":[],"decl_id":null,"docs":" Get the value of the `SO_ERROR` option on this socket.","sig":null,"attributes":[{"value":"/ Get the value of the `SO_ERROR` option on this socket.","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.8.4\\src\\net\\tcp\\listener.rs","byte_start":13714590,"byte_end":13714648,"line_start":129,"line_end":129,"column_start":5,"column_end":63}},{"value":"/","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.8.4\\src\\net\\tcp\\listener.rs","byte_start":13714653,"byte_end":13714656,"line_start":130,"line_end":130,"column_start":5,"column_end":8}},{"value":"/ This will retrieve the stored error in the underlying socket, clearing","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.8.4\\src\\net\\tcp\\listener.rs","byte_start":13714661,"byte_end":13714735,"line_start":131,"line_end":131,"column_start":5,"column_end":79}},{"value":"/ the field in the process. This can be useful for checking errors between","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.8.4\\src\\net\\tcp\\listener.rs","byte_start":13714740,"byte_end":13714816,"line_start":132,"line_end":132,"column_start":5,"column_end":81}},{"value":"/ calls.","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.8.4\\src\\net\\tcp\\listener.rs","byte_start":13714821,"byte_end":13714831,"line_start":133,"line_end":133,"column_start":5,"column_end":15}}]},{"kind":"Struct","id":{"krate":0,"index":1691},"span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.8.4\\src\\net\\tcp\\stream.rs","byte_start":13719116,"byte_end":13719125,"line_start":48,"line_end":48,"column_start":12,"column_end":21},"name":"TcpStream","qualname":"::net::tcp::stream::TcpStream","value":"TcpStream {  }","parent":null,"children":[{"krate":0,"index":1692}],"decl_id":null,"docs":" A non-blocking TCP stream between a local socket and a remote socket.","sig":null,"attributes":[{"value":"/ A non-blocking TCP stream between a local socket and a remote socket.","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.8.4\\src\\net\\tcp\\stream.rs","byte_start":13718084,"byte_end":13718157,"line_start":16,"line_end":16,"column_start":1,"column_end":74}},{"value":"/","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.8.4\\src\\net\\tcp\\stream.rs","byte_start":13718158,"byte_end":13718161,"line_start":17,"line_end":17,"column_start":1,"column_end":4}},{"value":"/ The socket will be closed when the value is dropped.","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.8.4\\src\\net\\tcp\\stream.rs","byte_start":13718162,"byte_end":13718218,"line_start":18,"line_end":18,"column_start":1,"column_end":57}},{"value":"/","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.8.4\\src\\net\\tcp\\stream.rs","byte_start":13718219,"byte_end":13718222,"line_start":19,"line_end":19,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.8.4\\src\\net\\tcp\\stream.rs","byte_start":13718223,"byte_end":13718237,"line_start":20,"line_end":20,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.8.4\\src\\net\\tcp\\stream.rs","byte_start":13718238,"byte_end":13718241,"line_start":21,"line_end":21,"column_start":1,"column_end":4}},{"value":"/ # use std::net::{TcpListener, SocketAddr};","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.8.4\\src\\net\\tcp\\stream.rs","byte_start":13718345,"byte_end":13718391,"line_start":24,"line_end":24,"column_start":1,"column_end":47}},{"value":"/ # use std::error::Error;","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.8.4\\src\\net\\tcp\\stream.rs","byte_start":13718392,"byte_end":13718420,"line_start":25,"line_end":25,"column_start":1,"column_end":29}},{"value":"/ #","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.8.4\\src\\net\\tcp\\stream.rs","byte_start":13718421,"byte_end":13718426,"line_start":26,"line_end":26,"column_start":1,"column_end":6}},{"value":"/ # fn main() -> Result<(), Box<dyn Error>> {","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.8.4\\src\\net\\tcp\\stream.rs","byte_start":13718427,"byte_end":13718474,"line_start":27,"line_end":27,"column_start":1,"column_end":48}},{"value":"/ let address: SocketAddr = \"127.0.0.1:0\".parse()?;","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.8.4\\src\\net\\tcp\\stream.rs","byte_start":13718475,"byte_end":13718528,"line_start":28,"line_end":28,"column_start":1,"column_end":54}},{"value":"/ let listener = TcpListener::bind(address)?;","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.8.4\\src\\net\\tcp\\stream.rs","byte_start":13718529,"byte_end":13718576,"line_start":29,"line_end":29,"column_start":1,"column_end":48}},{"value":"/ use mio::{Events, Interest, Poll, Token};","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.8.4\\src\\net\\tcp\\stream.rs","byte_start":13718577,"byte_end":13718622,"line_start":30,"line_end":30,"column_start":1,"column_end":46}},{"value":"/ use mio::net::TcpStream;","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.8.4\\src\\net\\tcp\\stream.rs","byte_start":13718623,"byte_end":13718651,"line_start":31,"line_end":31,"column_start":1,"column_end":29}},{"value":"/ use std::time::Duration;","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.8.4\\src\\net\\tcp\\stream.rs","byte_start":13718652,"byte_end":13718680,"line_start":32,"line_end":32,"column_start":1,"column_end":29}},{"value":"/","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.8.4\\src\\net\\tcp\\stream.rs","byte_start":13718681,"byte_end":13718684,"line_start":33,"line_end":33,"column_start":1,"column_end":4}},{"value":"/ let mut stream = TcpStream::connect(listener.local_addr()?)?;","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.8.4\\src\\net\\tcp\\stream.rs","byte_start":13718685,"byte_end":13718750,"line_start":34,"line_end":34,"column_start":1,"column_end":66}},{"value":"/","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.8.4\\src\\net\\tcp\\stream.rs","byte_start":13718751,"byte_end":13718754,"line_start":35,"line_end":35,"column_start":1,"column_end":4}},{"value":"/ let mut poll = Poll::new()?;","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.8.4\\src\\net\\tcp\\stream.rs","byte_start":13718755,"byte_end":13718787,"line_start":36,"line_end":36,"column_start":1,"column_end":33}},{"value":"/ let mut events = Events::with_capacity(128);","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.8.4\\src\\net\\tcp\\stream.rs","byte_start":13718788,"byte_end":13718836,"line_start":37,"line_end":37,"column_start":1,"column_end":49}},{"value":"/","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.8.4\\src\\net\\tcp\\stream.rs","byte_start":13718837,"byte_end":13718840,"line_start":38,"line_end":38,"column_start":1,"column_end":4}},{"value":"/ // Register the socket with `Poll`","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.8.4\\src\\net\\tcp\\stream.rs","byte_start":13718841,"byte_end":13718879,"line_start":39,"line_end":39,"column_start":1,"column_end":39}},{"value":"/ poll.registry().register(&mut stream, Token(0), Interest::WRITABLE)?;","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.8.4\\src\\net\\tcp\\stream.rs","byte_start":13718880,"byte_end":13718953,"line_start":40,"line_end":40,"column_start":1,"column_end":74}},{"value":"/","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.8.4\\src\\net\\tcp\\stream.rs","byte_start":13718954,"byte_end":13718957,"line_start":41,"line_end":41,"column_start":1,"column_end":4}},{"value":"/ poll.poll(&mut events, Some(Duration::from_millis(100)))?;","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.8.4\\src\\net\\tcp\\stream.rs","byte_start":13718958,"byte_end":13719020,"line_start":42,"line_end":42,"column_start":1,"column_end":63}},{"value":"/","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.8.4\\src\\net\\tcp\\stream.rs","byte_start":13719021,"byte_end":13719024,"line_start":43,"line_end":43,"column_start":1,"column_end":4}},{"value":"/ // The socket might be ready at this point","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.8.4\\src\\net\\tcp\\stream.rs","byte_start":13719025,"byte_end":13719071,"line_start":44,"line_end":44,"column_start":1,"column_end":47}},{"value":"/ #     Ok(())","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.8.4\\src\\net\\tcp\\stream.rs","byte_start":13719072,"byte_end":13719088,"line_start":45,"line_end":45,"column_start":1,"column_end":17}},{"value":"/ # }","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.8.4\\src\\net\\tcp\\stream.rs","byte_start":13719089,"byte_end":13719096,"line_start":46,"line_end":46,"column_start":1,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.8.4\\src\\net\\tcp\\stream.rs","byte_start":13719097,"byte_end":13719104,"line_start":47,"line_end":47,"column_start":1,"column_end":8}}]},{"kind":"Method","id":{"krate":0,"index":1694},"span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.8.4\\src\\net\\tcp\\stream.rs","byte_start":13720783,"byte_end":13720790,"line_start":84,"line_end":84,"column_start":12,"column_end":19},"name":"connect","qualname":"<TcpStream>::connect","value":"pub fn connect(SocketAddr) -> io::Result<TcpStream>","parent":null,"children":[],"decl_id":null,"docs":" Create a new TCP stream and issue a non-blocking connect to the\n specified address.","sig":null,"attributes":[{"value":"/ Create a new TCP stream and issue a non-blocking connect to the","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.8.4\\src\\net\\tcp\\stream.rs","byte_start":13719189,"byte_end":13719256,"line_start":53,"line_end":53,"column_start":5,"column_end":72}},{"value":"/ specified address.","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.8.4\\src\\net\\tcp\\stream.rs","byte_start":13719261,"byte_end":13719283,"line_start":54,"line_end":54,"column_start":5,"column_end":27}},{"value":"/","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.8.4\\src\\net\\tcp\\stream.rs","byte_start":13719288,"byte_end":13719291,"line_start":55,"line_end":55,"column_start":5,"column_end":8}},{"value":"/ # Notes","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.8.4\\src\\net\\tcp\\stream.rs","byte_start":13719296,"byte_end":13719307,"line_start":56,"line_end":56,"column_start":5,"column_end":16}},{"value":"/","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.8.4\\src\\net\\tcp\\stream.rs","byte_start":13719312,"byte_end":13719315,"line_start":57,"line_end":57,"column_start":5,"column_end":8}},{"value":"/ The returned `TcpStream` may not be connected (and thus usable), unlike","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.8.4\\src\\net\\tcp\\stream.rs","byte_start":13719320,"byte_end":13719395,"line_start":58,"line_end":58,"column_start":5,"column_end":80}},{"value":"/ the API found in `std::net::TcpStream`. Because Mio issues a","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.8.4\\src\\net\\tcp\\stream.rs","byte_start":13719400,"byte_end":13719464,"line_start":59,"line_end":59,"column_start":5,"column_end":69}},{"value":"/ *non-blocking* connect it will not block the thread and instead return","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.8.4\\src\\net\\tcp\\stream.rs","byte_start":13719469,"byte_end":13719543,"line_start":60,"line_end":60,"column_start":5,"column_end":79}},{"value":"/ an unconnected `TcpStream`.","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.8.4\\src\\net\\tcp\\stream.rs","byte_start":13719548,"byte_end":13719579,"line_start":61,"line_end":61,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.8.4\\src\\net\\tcp\\stream.rs","byte_start":13719584,"byte_end":13719587,"line_start":62,"line_end":62,"column_start":5,"column_end":8}},{"value":"/ Ensuring the returned stream is connected is surprisingly complex when","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.8.4\\src\\net\\tcp\\stream.rs","byte_start":13719592,"byte_end":13719666,"line_start":63,"line_end":63,"column_start":5,"column_end":79}},{"value":"/ considering cross-platform support. Doing this properly should follow","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.8.4\\src\\net\\tcp\\stream.rs","byte_start":13719671,"byte_end":13719744,"line_start":64,"line_end":64,"column_start":5,"column_end":78}},{"value":"/ the steps below, an example implementation can be found","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.8.4\\src\\net\\tcp\\stream.rs","byte_start":13719749,"byte_end":13719808,"line_start":65,"line_end":65,"column_start":5,"column_end":64}},{"value":"/ [here](https://github.com/Thomasdezeeuw/heph/blob/0c4f1ab3eaf08bea1d65776528bfd6114c9f8374/src/net/tcp/stream.rs#L560-L622).","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.8.4\\src\\net\\tcp\\stream.rs","byte_start":13719813,"byte_end":13719941,"line_start":66,"line_end":66,"column_start":5,"column_end":133}},{"value":"/","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.8.4\\src\\net\\tcp\\stream.rs","byte_start":13719946,"byte_end":13719949,"line_start":67,"line_end":67,"column_start":5,"column_end":8}},{"value":"/  1. Call `TcpStream::connect`","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.8.4\\src\\net\\tcp\\stream.rs","byte_start":13719954,"byte_end":13719987,"line_start":68,"line_end":68,"column_start":5,"column_end":38}},{"value":"/  2. Register the returned stream with at least [write interest].","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.8.4\\src\\net\\tcp\\stream.rs","byte_start":13719992,"byte_end":13720060,"line_start":69,"line_end":69,"column_start":5,"column_end":73}},{"value":"/  3. Wait for a (writable) event.","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.8.4\\src\\net\\tcp\\stream.rs","byte_start":13720065,"byte_end":13720101,"line_start":70,"line_end":70,"column_start":5,"column_end":41}},{"value":"/  4. Check `TcpStream::peer_addr`. If it returns `libc::EINPROGRESS` or","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.8.4\\src\\net\\tcp\\stream.rs","byte_start":13720106,"byte_end":13720180,"line_start":71,"line_end":71,"column_start":5,"column_end":79}},{"value":"/     `ErrorKind::NotConnected` it means the stream is not yet connected,","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.8.4\\src\\net\\tcp\\stream.rs","byte_start":13720185,"byte_end":13720260,"line_start":72,"line_end":72,"column_start":5,"column_end":80}},{"value":"/     go back to step 3. If it returns an address it means the stream is","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.8.4\\src\\net\\tcp\\stream.rs","byte_start":13720265,"byte_end":13720339,"line_start":73,"line_end":73,"column_start":5,"column_end":79}},{"value":"/     connected, go to step 5. If another error is returned something","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.8.4\\src\\net\\tcp\\stream.rs","byte_start":13720344,"byte_end":13720415,"line_start":74,"line_end":74,"column_start":5,"column_end":76}},{"value":"/     whent wrong.","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.8.4\\src\\net\\tcp\\stream.rs","byte_start":13720420,"byte_end":13720440,"line_start":75,"line_end":75,"column_start":5,"column_end":25}},{"value":"/  5. Now the stream can be used.","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.8.4\\src\\net\\tcp\\stream.rs","byte_start":13720445,"byte_end":13720480,"line_start":76,"line_end":76,"column_start":5,"column_end":40}},{"value":"/","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.8.4\\src\\net\\tcp\\stream.rs","byte_start":13720485,"byte_end":13720488,"line_start":77,"line_end":77,"column_start":5,"column_end":8}},{"value":"/ This may return a `WouldBlock` in which case the socket connection","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.8.4\\src\\net\\tcp\\stream.rs","byte_start":13720493,"byte_end":13720563,"line_start":78,"line_end":78,"column_start":5,"column_end":75}},{"value":"/ cannot be completed immediately, it usually means there are insufficient","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.8.4\\src\\net\\tcp\\stream.rs","byte_start":13720568,"byte_end":13720644,"line_start":79,"line_end":79,"column_start":5,"column_end":81}},{"value":"/ entries in the routing cache.","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.8.4\\src\\net\\tcp\\stream.rs","byte_start":13720649,"byte_end":13720682,"line_start":80,"line_end":80,"column_start":5,"column_end":38}},{"value":"/","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.8.4\\src\\net\\tcp\\stream.rs","byte_start":13720687,"byte_end":13720690,"line_start":81,"line_end":81,"column_start":5,"column_end":8}},{"value":"/ [write interest]: Interest::WRITABLE","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.8.4\\src\\net\\tcp\\stream.rs","byte_start":13720695,"byte_end":13720735,"line_start":82,"line_end":82,"column_start":5,"column_end":45}},{"value":"cfg(not(target_os = \"wasi\"))","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.8.4\\src\\net\\tcp\\stream.rs","byte_start":13720740,"byte_end":13720771,"line_start":83,"line_end":83,"column_start":5,"column_end":36}}]},{"kind":"Method","id":{"krate":0,"index":1695},"span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.8.4\\src\\net\\tcp\\stream.rs","byte_start":13721680,"byte_end":13721688,"line_start":106,"line_end":106,"column_start":12,"column_end":20},"name":"from_std","qualname":"<TcpStream>::from_std","value":"pub fn from_std(net::TcpStream) -> TcpStream","parent":null,"children":[],"decl_id":null,"docs":" Creates a new `TcpStream` from a standard `net::TcpStream`.","sig":null,"attributes":[{"value":"/ Creates a new `TcpStream` from a standard `net::TcpStream`.","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.8.4\\src\\net\\tcp\\stream.rs","byte_start":13721129,"byte_end":13721192,"line_start":94,"line_end":94,"column_start":5,"column_end":68}},{"value":"/","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.8.4\\src\\net\\tcp\\stream.rs","byte_start":13721197,"byte_end":13721200,"line_start":95,"line_end":95,"column_start":5,"column_end":8}},{"value":"/ This function is intended to be used to wrap a TCP stream from the","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.8.4\\src\\net\\tcp\\stream.rs","byte_start":13721205,"byte_end":13721275,"line_start":96,"line_end":96,"column_start":5,"column_end":75}},{"value":"/ standard library in the Mio equivalent. The conversion assumes nothing","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.8.4\\src\\net\\tcp\\stream.rs","byte_start":13721280,"byte_end":13721354,"line_start":97,"line_end":97,"column_start":5,"column_end":79}},{"value":"/ about the underlying stream; it is left up to the user to set it in","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.8.4\\src\\net\\tcp\\stream.rs","byte_start":13721359,"byte_end":13721430,"line_start":98,"line_end":98,"column_start":5,"column_end":76}},{"value":"/ non-blocking mode.","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.8.4\\src\\net\\tcp\\stream.rs","byte_start":13721435,"byte_end":13721457,"line_start":99,"line_end":99,"column_start":5,"column_end":27}},{"value":"/","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.8.4\\src\\net\\tcp\\stream.rs","byte_start":13721462,"byte_end":13721465,"line_start":100,"line_end":100,"column_start":5,"column_end":8}},{"value":"/ # Note","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.8.4\\src\\net\\tcp\\stream.rs","byte_start":13721470,"byte_end":13721480,"line_start":101,"line_end":101,"column_start":5,"column_end":15}},{"value":"/","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.8.4\\src\\net\\tcp\\stream.rs","byte_start":13721485,"byte_end":13721488,"line_start":102,"line_end":102,"column_start":5,"column_end":8}},{"value":"/ The TCP stream here will not have `connect` called on it, so it","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.8.4\\src\\net\\tcp\\stream.rs","byte_start":13721493,"byte_end":13721560,"line_start":103,"line_end":103,"column_start":5,"column_end":72}},{"value":"/ should already be connected via some other means (be it manually, or","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.8.4\\src\\net\\tcp\\stream.rs","byte_start":13721565,"byte_end":13721637,"line_start":104,"line_end":104,"column_start":5,"column_end":77}},{"value":"/ the standard library).","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.8.4\\src\\net\\tcp\\stream.rs","byte_start":13721642,"byte_end":13721668,"line_start":105,"line_end":105,"column_start":5,"column_end":31}}]},{"kind":"Method","id":{"krate":0,"index":1696},"span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.8.4\\src\\net\\tcp\\stream.rs","byte_start":13721896,"byte_end":13721905,"line_start":113,"line_end":113,"column_start":12,"column_end":21},"name":"peer_addr","qualname":"<TcpStream>::peer_addr","value":"pub fn peer_addr(&Self) -> io::Result<SocketAddr>","parent":null,"children":[],"decl_id":null,"docs":" Returns the socket address of the remote peer of this TCP connection.\n","sig":null,"attributes":[{"value":"/ Returns the socket address of the remote peer of this TCP connection.","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.8.4\\src\\net\\tcp\\stream.rs","byte_start":13721811,"byte_end":13721884,"line_start":112,"line_end":112,"column_start":5,"column_end":78}}]},{"kind":"Method","id":{"krate":0,"index":1697},"span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.8.4\\src\\net\\tcp\\stream.rs","byte_start":13722067,"byte_end":13722077,"line_start":118,"line_end":118,"column_start":12,"column_end":22},"name":"local_addr","qualname":"<TcpStream>::local_addr","value":"pub fn local_addr(&Self) -> io::Result<SocketAddr>","parent":null,"children":[],"decl_id":null,"docs":" Returns the socket address of the local half of this TCP connection.\n","sig":null,"attributes":[{"value":"/ Returns the socket address of the local half of this TCP connection.","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.8.4\\src\\net\\tcp\\stream.rs","byte_start":13721983,"byte_end":13722055,"line_start":117,"line_end":117,"column_start":5,"column_end":77}}]},{"kind":"Method","id":{"krate":0,"index":1698},"span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.8.4\\src\\net\\tcp\\stream.rs","byte_start":13722431,"byte_end":13722439,"line_start":127,"line_end":127,"column_start":12,"column_end":20},"name":"shutdown","qualname":"<TcpStream>::shutdown","value":"pub fn shutdown(&Self, Shutdown) -> io::Result<()>","parent":null,"children":[],"decl_id":null,"docs":" Shuts down the read, write, or both halves of this connection.","sig":null,"attributes":[{"value":"/ Shuts down the read, write, or both halves of this connection.","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.8.4\\src\\net\\tcp\\stream.rs","byte_start":13722156,"byte_end":13722222,"line_start":122,"line_end":122,"column_start":5,"column_end":71}},{"value":"/","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.8.4\\src\\net\\tcp\\stream.rs","byte_start":13722227,"byte_end":13722230,"line_start":123,"line_end":123,"column_start":5,"column_end":8}},{"value":"/ This function will cause all pending and future I/O on the specified","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.8.4\\src\\net\\tcp\\stream.rs","byte_start":13722235,"byte_end":13722307,"line_start":124,"line_end":124,"column_start":5,"column_end":77}},{"value":"/ portions to return immediately with an appropriate value (see the","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.8.4\\src\\net\\tcp\\stream.rs","byte_start":13722312,"byte_end":13722381,"line_start":125,"line_end":125,"column_start":5,"column_end":74}},{"value":"/ documentation of `Shutdown`).","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.8.4\\src\\net\\tcp\\stream.rs","byte_start":13722386,"byte_end":13722419,"line_start":126,"line_end":126,"column_start":5,"column_end":38}}]},{"kind":"Method","id":{"krate":0,"index":1699},"span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.8.4\\src\\net\\tcp\\stream.rs","byte_start":13723183,"byte_end":13723194,"line_start":144,"line_end":144,"column_start":12,"column_end":23},"name":"set_nodelay","qualname":"<TcpStream>::set_nodelay","value":"pub fn set_nodelay(&Self, bool) -> io::Result<()>","parent":null,"children":[],"decl_id":null,"docs":" Sets the value of the `TCP_NODELAY` option on this socket.","sig":null,"attributes":[{"value":"/ Sets the value of the `TCP_NODELAY` option on this socket.","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.8.4\\src\\net\\tcp\\stream.rs","byte_start":13722526,"byte_end":13722588,"line_start":131,"line_end":131,"column_start":5,"column_end":67}},{"value":"/","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.8.4\\src\\net\\tcp\\stream.rs","byte_start":13722593,"byte_end":13722596,"line_start":132,"line_end":132,"column_start":5,"column_end":8}},{"value":"/ If set, this option disables the Nagle algorithm. This means that","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.8.4\\src\\net\\tcp\\stream.rs","byte_start":13722601,"byte_end":13722670,"line_start":133,"line_end":133,"column_start":5,"column_end":74}},{"value":"/ segments are always sent as soon as possible, even if there is only a","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.8.4\\src\\net\\tcp\\stream.rs","byte_start":13722675,"byte_end":13722748,"line_start":134,"line_end":134,"column_start":5,"column_end":78}},{"value":"/ small amount of data. When not set, data is buffered until there is a","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.8.4\\src\\net\\tcp\\stream.rs","byte_start":13722753,"byte_end":13722826,"line_start":135,"line_end":135,"column_start":5,"column_end":78}},{"value":"/ sufficient amount to send out, thereby avoiding the frequent sending of","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.8.4\\src\\net\\tcp\\stream.rs","byte_start":13722831,"byte_end":13722906,"line_start":136,"line_end":136,"column_start":5,"column_end":80}},{"value":"/ small packets.","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.8.4\\src\\net\\tcp\\stream.rs","byte_start":13722911,"byte_end":13722929,"line_start":137,"line_end":137,"column_start":5,"column_end":23}},{"value":"/","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.8.4\\src\\net\\tcp\\stream.rs","byte_start":13722934,"byte_end":13722937,"line_start":138,"line_end":138,"column_start":5,"column_end":8}},{"value":"/ # Notes","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.8.4\\src\\net\\tcp\\stream.rs","byte_start":13722942,"byte_end":13722953,"line_start":139,"line_end":139,"column_start":5,"column_end":16}},{"value":"/","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.8.4\\src\\net\\tcp\\stream.rs","byte_start":13722958,"byte_end":13722961,"line_start":140,"line_end":140,"column_start":5,"column_end":8}},{"value":"/ On Windows make sure the stream is connected before calling this method,","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.8.4\\src\\net\\tcp\\stream.rs","byte_start":13722966,"byte_end":13723042,"line_start":141,"line_end":141,"column_start":5,"column_end":81}},{"value":"/ by receiving an (writable) event. Trying to set `nodelay` on an","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.8.4\\src\\net\\tcp\\stream.rs","byte_start":13723047,"byte_end":13723114,"line_start":142,"line_end":142,"column_start":5,"column_end":72}},{"value":"/ unconnected `TcpStream` is unspecified behavior.","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.8.4\\src\\net\\tcp\\stream.rs","byte_start":13723119,"byte_end":13723171,"line_start":143,"line_end":143,"column_start":5,"column_end":57}}]},{"kind":"Method","id":{"krate":0,"index":1700},"span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.8.4\\src\\net\\tcp\\stream.rs","byte_start":13723731,"byte_end":13723738,"line_start":159,"line_end":159,"column_start":12,"column_end":19},"name":"nodelay","qualname":"<TcpStream>::nodelay","value":"pub fn nodelay(&Self) -> io::Result<bool>","parent":null,"children":[],"decl_id":null,"docs":" Gets the value of the `TCP_NODELAY` option on this socket.","sig":null,"attributes":[{"value":"/ Gets the value of the `TCP_NODELAY` option on this socket.","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.8.4\\src\\net\\tcp\\stream.rs","byte_start":13723288,"byte_end":13723350,"line_start":148,"line_end":148,"column_start":5,"column_end":67}},{"value":"/","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.8.4\\src\\net\\tcp\\stream.rs","byte_start":13723355,"byte_end":13723358,"line_start":149,"line_end":149,"column_start":5,"column_end":8}},{"value":"/ For more information about this option, see [`set_nodelay`][link].","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.8.4\\src\\net\\tcp\\stream.rs","byte_start":13723363,"byte_end":13723433,"line_start":150,"line_end":150,"column_start":5,"column_end":75}},{"value":"/","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.8.4\\src\\net\\tcp\\stream.rs","byte_start":13723438,"byte_end":13723441,"line_start":151,"line_end":151,"column_start":5,"column_end":8}},{"value":"/ [link]: #method.set_nodelay","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.8.4\\src\\net\\tcp\\stream.rs","byte_start":13723446,"byte_end":13723477,"line_start":152,"line_end":152,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.8.4\\src\\net\\tcp\\stream.rs","byte_start":13723482,"byte_end":13723485,"line_start":153,"line_end":153,"column_start":5,"column_end":8}},{"value":"/ # Notes","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.8.4\\src\\net\\tcp\\stream.rs","byte_start":13723490,"byte_end":13723501,"line_start":154,"line_end":154,"column_start":5,"column_end":16}},{"value":"/","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.8.4\\src\\net\\tcp\\stream.rs","byte_start":13723506,"byte_end":13723509,"line_start":155,"line_end":155,"column_start":5,"column_end":8}},{"value":"/ On Windows make sure the stream is connected before calling this method,","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.8.4\\src\\net\\tcp\\stream.rs","byte_start":13723514,"byte_end":13723590,"line_start":156,"line_end":156,"column_start":5,"column_end":81}},{"value":"/ by receiving an (writable) event. Trying to get `nodelay` on an","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.8.4\\src\\net\\tcp\\stream.rs","byte_start":13723595,"byte_end":13723662,"line_start":157,"line_end":157,"column_start":5,"column_end":72}},{"value":"/ unconnected `TcpStream` is unspecified behavior.","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.8.4\\src\\net\\tcp\\stream.rs","byte_start":13723667,"byte_end":13723719,"line_start":158,"line_end":158,"column_start":5,"column_end":57}}]},{"kind":"Method","id":{"krate":0,"index":1701},"span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.8.4\\src\\net\\tcp\\stream.rs","byte_start":13724231,"byte_end":13724238,"line_start":173,"line_end":173,"column_start":12,"column_end":19},"name":"set_ttl","qualname":"<TcpStream>::set_ttl","value":"pub fn set_ttl(&Self, u32) -> io::Result<()>","parent":null,"children":[],"decl_id":null,"docs":" Sets the value for the `IP_TTL` option on this socket.","sig":null,"attributes":[{"value":"/ Sets the value for the `IP_TTL` option on this socket.","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.8.4\\src\\net\\tcp\\stream.rs","byte_start":13723808,"byte_end":13723866,"line_start":163,"line_end":163,"column_start":5,"column_end":63}},{"value":"/","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.8.4\\src\\net\\tcp\\stream.rs","byte_start":13723871,"byte_end":13723874,"line_start":164,"line_end":164,"column_start":5,"column_end":8}},{"value":"/ This value sets the time-to-live field that is used in every packet sent","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.8.4\\src\\net\\tcp\\stream.rs","byte_start":13723879,"byte_end":13723955,"line_start":165,"line_end":165,"column_start":5,"column_end":81}},{"value":"/ from this socket.","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.8.4\\src\\net\\tcp\\stream.rs","byte_start":13723960,"byte_end":13723981,"line_start":166,"line_end":166,"column_start":5,"column_end":26}},{"value":"/","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.8.4\\src\\net\\tcp\\stream.rs","byte_start":13723986,"byte_end":13723989,"line_start":167,"line_end":167,"column_start":5,"column_end":8}},{"value":"/ # Notes","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.8.4\\src\\net\\tcp\\stream.rs","byte_start":13723994,"byte_end":13724005,"line_start":168,"line_end":168,"column_start":5,"column_end":16}},{"value":"/","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.8.4\\src\\net\\tcp\\stream.rs","byte_start":13724010,"byte_end":13724013,"line_start":169,"line_end":169,"column_start":5,"column_end":8}},{"value":"/ On Windows make sure the stream is connected before calling this method,","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.8.4\\src\\net\\tcp\\stream.rs","byte_start":13724018,"byte_end":13724094,"line_start":170,"line_end":170,"column_start":5,"column_end":81}},{"value":"/ by receiving an (writable) event. Trying to set `ttl` on an","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.8.4\\src\\net\\tcp\\stream.rs","byte_start":13724099,"byte_end":13724162,"line_start":171,"line_end":171,"column_start":5,"column_end":68}},{"value":"/ unconnected `TcpStream` is unspecified behavior.","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.8.4\\src\\net\\tcp\\stream.rs","byte_start":13724167,"byte_end":13724219,"line_start":172,"line_end":172,"column_start":5,"column_end":57}}]},{"kind":"Method","id":{"krate":0,"index":1702},"span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.8.4\\src\\net\\tcp\\stream.rs","byte_start":13724746,"byte_end":13724749,"line_start":188,"line_end":188,"column_start":12,"column_end":15},"name":"ttl","qualname":"<TcpStream>::ttl","value":"pub fn ttl(&Self) -> io::Result<u32>","parent":null,"children":[],"decl_id":null,"docs":" Gets the value of the `IP_TTL` option for this socket.","sig":null,"attributes":[{"value":"/ Gets the value of the `IP_TTL` option for this socket.","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.8.4\\src\\net\\tcp\\stream.rs","byte_start":13724319,"byte_end":13724377,"line_start":177,"line_end":177,"column_start":5,"column_end":63}},{"value":"/","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.8.4\\src\\net\\tcp\\stream.rs","byte_start":13724382,"byte_end":13724385,"line_start":178,"line_end":178,"column_start":5,"column_end":8}},{"value":"/ For more information about this option, see [`set_ttl`][link].","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.8.4\\src\\net\\tcp\\stream.rs","byte_start":13724390,"byte_end":13724456,"line_start":179,"line_end":179,"column_start":5,"column_end":71}},{"value":"/","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.8.4\\src\\net\\tcp\\stream.rs","byte_start":13724461,"byte_end":13724464,"line_start":180,"line_end":180,"column_start":5,"column_end":8}},{"value":"/ # Notes","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.8.4\\src\\net\\tcp\\stream.rs","byte_start":13724469,"byte_end":13724480,"line_start":181,"line_end":181,"column_start":5,"column_end":16}},{"value":"/","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.8.4\\src\\net\\tcp\\stream.rs","byte_start":13724485,"byte_end":13724488,"line_start":182,"line_end":182,"column_start":5,"column_end":8}},{"value":"/ On Windows make sure the stream is connected before calling this method,","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.8.4\\src\\net\\tcp\\stream.rs","byte_start":13724493,"byte_end":13724569,"line_start":183,"line_end":183,"column_start":5,"column_end":81}},{"value":"/ by receiving an (writable) event. Trying to get `ttl` on an","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.8.4\\src\\net\\tcp\\stream.rs","byte_start":13724574,"byte_end":13724637,"line_start":184,"line_end":184,"column_start":5,"column_end":68}},{"value":"/ unconnected `TcpStream` is unspecified behavior.","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.8.4\\src\\net\\tcp\\stream.rs","byte_start":13724642,"byte_end":13724694,"line_start":185,"line_end":185,"column_start":5,"column_end":57}},{"value":"/","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.8.4\\src\\net\\tcp\\stream.rs","byte_start":13724699,"byte_end":13724702,"line_start":186,"line_end":186,"column_start":5,"column_end":8}},{"value":"/ [link]: #method.set_ttl","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.8.4\\src\\net\\tcp\\stream.rs","byte_start":13724707,"byte_end":13724734,"line_start":187,"line_end":187,"column_start":5,"column_end":32}}]},{"kind":"Method","id":{"krate":0,"index":1703},"span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.8.4\\src\\net\\tcp\\stream.rs","byte_start":13725067,"byte_end":13725077,"line_start":197,"line_end":197,"column_start":12,"column_end":22},"name":"take_error","qualname":"<TcpStream>::take_error","value":"pub fn take_error(&Self) -> io::Result<Option<io::Error>>","parent":null,"children":[],"decl_id":null,"docs":" Get the value of the `SO_ERROR` option on this socket.","sig":null,"attributes":[{"value":"/ Get the value of the `SO_ERROR` option on this socket.","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.8.4\\src\\net\\tcp\\stream.rs","byte_start":13724814,"byte_end":13724872,"line_start":192,"line_end":192,"column_start":5,"column_end":63}},{"value":"/","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.8.4\\src\\net\\tcp\\stream.rs","byte_start":13724877,"byte_end":13724880,"line_start":193,"line_end":193,"column_start":5,"column_end":8}},{"value":"/ This will retrieve the stored error in the underlying socket, clearing","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.8.4\\src\\net\\tcp\\stream.rs","byte_start":13724885,"byte_end":13724959,"line_start":194,"line_end":194,"column_start":5,"column_end":79}},{"value":"/ the field in the process. This can be useful for checking errors between","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.8.4\\src\\net\\tcp\\stream.rs","byte_start":13724964,"byte_end":13725040,"line_start":195,"line_end":195,"column_start":5,"column_end":81}},{"value":"/ calls.","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.8.4\\src\\net\\tcp\\stream.rs","byte_start":13725045,"byte_end":13725055,"line_start":196,"line_end":196,"column_start":5,"column_end":15}}]},{"kind":"Method","id":{"krate":0,"index":1704},"span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.8.4\\src\\net\\tcp\\stream.rs","byte_start":13725515,"byte_end":13725519,"line_start":207,"line_end":207,"column_start":12,"column_end":16},"name":"peek","qualname":"<TcpStream>::peek","value":"pub fn peek(&Self, &mut [u8]) -> io::Result<usize>","parent":null,"children":[],"decl_id":null,"docs":" Receives data on the socket from the remote address to which it is\n connected, without removing that data from the queue. On success,\n returns the number of bytes peeked.","sig":null,"attributes":[{"value":"/ Receives data on the socket from the remote address to which it is","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.8.4\\src\\net\\tcp\\stream.rs","byte_start":13725163,"byte_end":13725233,"line_start":201,"line_end":201,"column_start":5,"column_end":75}},{"value":"/ connected, without removing that data from the queue. On success,","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.8.4\\src\\net\\tcp\\stream.rs","byte_start":13725238,"byte_end":13725307,"line_start":202,"line_end":202,"column_start":5,"column_end":74}},{"value":"/ returns the number of bytes peeked.","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.8.4\\src\\net\\tcp\\stream.rs","byte_start":13725312,"byte_end":13725351,"line_start":203,"line_end":203,"column_start":5,"column_end":44}},{"value":"/","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.8.4\\src\\net\\tcp\\stream.rs","byte_start":13725356,"byte_end":13725359,"line_start":204,"line_end":204,"column_start":5,"column_end":8}},{"value":"/ Successive calls return the same data. This is accomplished by passing","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.8.4\\src\\net\\tcp\\stream.rs","byte_start":13725364,"byte_end":13725438,"line_start":205,"line_end":205,"column_start":5,"column_end":79}},{"value":"/ `MSG_PEEK` as a flag to the underlying recv system call.","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.8.4\\src\\net\\tcp\\stream.rs","byte_start":13725443,"byte_end":13725503,"line_start":206,"line_end":206,"column_start":5,"column_end":65}}]},{"kind":"Method","id":{"krate":0,"index":1705},"span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.8.4\\src\\net\\tcp\\stream.rs","byte_start":13727524,"byte_end":13727530,"line_start":262,"line_end":262,"column_start":12,"column_end":18},"name":"try_io","qualname":"<TcpStream>::try_io","value":"pub fn try_io<F, T>(&Self, F) -> io::Result<T> where F: FnOnce() ->\nio::Result<T>","parent":null,"children":[],"decl_id":null,"docs":" Execute an I/O operation ensuring that the socket receives more events\n if it hits a [`WouldBlock`] error.","sig":null,"attributes":[{"value":"/ Execute an I/O operation ensuring that the socket receives more events","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.8.4\\src\\net\\tcp\\stream.rs","byte_start":13725606,"byte_end":13725680,"line_start":211,"line_end":211,"column_start":5,"column_end":79}},{"value":"/ if it hits a [`WouldBlock`] error.","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.8.4\\src\\net\\tcp\\stream.rs","byte_start":13725685,"byte_end":13725723,"line_start":212,"line_end":212,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.8.4\\src\\net\\tcp\\stream.rs","byte_start":13725728,"byte_end":13725731,"line_start":213,"line_end":213,"column_start":5,"column_end":8}},{"value":"/ # Notes","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.8.4\\src\\net\\tcp\\stream.rs","byte_start":13725736,"byte_end":13725747,"line_start":214,"line_end":214,"column_start":5,"column_end":16}},{"value":"/","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.8.4\\src\\net\\tcp\\stream.rs","byte_start":13725752,"byte_end":13725755,"line_start":215,"line_end":215,"column_start":5,"column_end":8}},{"value":"/ This method is required to be called for **all** I/O operations to","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.8.4\\src\\net\\tcp\\stream.rs","byte_start":13725760,"byte_end":13725830,"line_start":216,"line_end":216,"column_start":5,"column_end":75}},{"value":"/ ensure the user will receive events once the socket is ready again after","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.8.4\\src\\net\\tcp\\stream.rs","byte_start":13725835,"byte_end":13725911,"line_start":217,"line_end":217,"column_start":5,"column_end":81}},{"value":"/ returning a [`WouldBlock`] error.","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.8.4\\src\\net\\tcp\\stream.rs","byte_start":13725916,"byte_end":13725953,"line_start":218,"line_end":218,"column_start":5,"column_end":42}},{"value":"/","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.8.4\\src\\net\\tcp\\stream.rs","byte_start":13725958,"byte_end":13725961,"line_start":219,"line_end":219,"column_start":5,"column_end":8}},{"value":"/ [`WouldBlock`]: io::ErrorKind::WouldBlock","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.8.4\\src\\net\\tcp\\stream.rs","byte_start":13725966,"byte_end":13726011,"line_start":220,"line_end":220,"column_start":5,"column_end":50}},{"value":"/","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.8.4\\src\\net\\tcp\\stream.rs","byte_start":13726016,"byte_end":13726019,"line_start":221,"line_end":221,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.8.4\\src\\net\\tcp\\stream.rs","byte_start":13726024,"byte_end":13726038,"line_start":222,"line_end":222,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.8.4\\src\\net\\tcp\\stream.rs","byte_start":13726043,"byte_end":13726046,"line_start":223,"line_end":223,"column_start":5,"column_end":8}},{"value":"/ # use std::error::Error;","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.8.4\\src\\net\\tcp\\stream.rs","byte_start":13726136,"byte_end":13726164,"line_start":226,"line_end":226,"column_start":5,"column_end":33}},{"value":"/ #","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.8.4\\src\\net\\tcp\\stream.rs","byte_start":13726169,"byte_end":13726174,"line_start":227,"line_end":227,"column_start":5,"column_end":10}},{"value":"/ # fn main() -> Result<(), Box<dyn Error>> {","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.8.4\\src\\net\\tcp\\stream.rs","byte_start":13726179,"byte_end":13726226,"line_start":228,"line_end":228,"column_start":5,"column_end":52}},{"value":"/ use std::io;","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.8.4\\src\\net\\tcp\\stream.rs","byte_start":13726231,"byte_end":13726247,"line_start":229,"line_end":229,"column_start":5,"column_end":21}},{"value":"/ #[cfg(unix)]","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.8.4\\src\\net\\tcp\\stream.rs","byte_start":13726252,"byte_end":13726268,"line_start":230,"line_end":230,"column_start":5,"column_end":21}},{"value":"/ use std::os::unix::io::AsRawFd;","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.8.4\\src\\net\\tcp\\stream.rs","byte_start":13726273,"byte_end":13726308,"line_start":231,"line_end":231,"column_start":5,"column_end":40}},{"value":"/ #[cfg(windows)]","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.8.4\\src\\net\\tcp\\stream.rs","byte_start":13726313,"byte_end":13726332,"line_start":232,"line_end":232,"column_start":5,"column_end":24}},{"value":"/ use std::os::windows::io::AsRawSocket;","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.8.4\\src\\net\\tcp\\stream.rs","byte_start":13726337,"byte_end":13726379,"line_start":233,"line_end":233,"column_start":5,"column_end":47}},{"value":"/ use mio::net::TcpStream;","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.8.4\\src\\net\\tcp\\stream.rs","byte_start":13726384,"byte_end":13726412,"line_start":234,"line_end":234,"column_start":5,"column_end":33}},{"value":"/","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.8.4\\src\\net\\tcp\\stream.rs","byte_start":13726417,"byte_end":13726420,"line_start":235,"line_end":235,"column_start":5,"column_end":8}},{"value":"/ let address = \"127.0.0.1:8080\".parse().unwrap();","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.8.4\\src\\net\\tcp\\stream.rs","byte_start":13726425,"byte_end":13726477,"line_start":236,"line_end":236,"column_start":5,"column_end":57}},{"value":"/ let stream = TcpStream::connect(address)?;","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.8.4\\src\\net\\tcp\\stream.rs","byte_start":13726482,"byte_end":13726528,"line_start":237,"line_end":237,"column_start":5,"column_end":51}},{"value":"/","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.8.4\\src\\net\\tcp\\stream.rs","byte_start":13726533,"byte_end":13726536,"line_start":238,"line_end":238,"column_start":5,"column_end":8}},{"value":"/ // Wait until the stream is readable...","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.8.4\\src\\net\\tcp\\stream.rs","byte_start":13726541,"byte_end":13726584,"line_start":239,"line_end":239,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.8.4\\src\\net\\tcp\\stream.rs","byte_start":13726589,"byte_end":13726592,"line_start":240,"line_end":240,"column_start":5,"column_end":8}},{"value":"/ // Read from the stream using a direct libc call, of course the","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.8.4\\src\\net\\tcp\\stream.rs","byte_start":13726597,"byte_end":13726664,"line_start":241,"line_end":241,"column_start":5,"column_end":72}},{"value":"/ // `io::Read` implementation would be easier to use.","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.8.4\\src\\net\\tcp\\stream.rs","byte_start":13726669,"byte_end":13726725,"line_start":242,"line_end":242,"column_start":5,"column_end":61}},{"value":"/ let mut buf = [0; 512];","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.8.4\\src\\net\\tcp\\stream.rs","byte_start":13726730,"byte_end":13726757,"line_start":243,"line_end":243,"column_start":5,"column_end":32}},{"value":"/ let n = stream.try_io(|| {","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.8.4\\src\\net\\tcp\\stream.rs","byte_start":13726762,"byte_end":13726792,"line_start":244,"line_end":244,"column_start":5,"column_end":35}},{"value":"/     let buf_ptr = &mut buf as *mut _ as *mut _;","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.8.4\\src\\net\\tcp\\stream.rs","byte_start":13726797,"byte_end":13726848,"line_start":245,"line_end":245,"column_start":5,"column_end":56}},{"value":"/     #[cfg(unix)]","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.8.4\\src\\net\\tcp\\stream.rs","byte_start":13726853,"byte_end":13726873,"line_start":246,"line_end":246,"column_start":5,"column_end":25}},{"value":"/     let res = unsafe { libc::recv(stream.as_raw_fd(), buf_ptr, buf.len(), 0) };","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.8.4\\src\\net\\tcp\\stream.rs","byte_start":13726878,"byte_end":13726961,"line_start":247,"line_end":247,"column_start":5,"column_end":88}},{"value":"/     #[cfg(windows)]","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.8.4\\src\\net\\tcp\\stream.rs","byte_start":13726966,"byte_end":13726989,"line_start":248,"line_end":248,"column_start":5,"column_end":28}},{"value":"/     let res = unsafe { libc::recvfrom(stream.as_raw_socket() as usize, buf_ptr, buf.len() as i32, 0, std::ptr::null_mut(), std::ptr::null_mut()) };","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.8.4\\src\\net\\tcp\\stream.rs","byte_start":13726994,"byte_end":13727145,"line_start":249,"line_end":249,"column_start":5,"column_end":156}},{"value":"/     if res != -1 {","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.8.4\\src\\net\\tcp\\stream.rs","byte_start":13727150,"byte_end":13727172,"line_start":250,"line_end":250,"column_start":5,"column_end":27}},{"value":"/         Ok(res as usize)","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.8.4\\src\\net\\tcp\\stream.rs","byte_start":13727177,"byte_end":13727205,"line_start":251,"line_end":251,"column_start":5,"column_end":33}},{"value":"/     } else {","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.8.4\\src\\net\\tcp\\stream.rs","byte_start":13727210,"byte_end":13727226,"line_start":252,"line_end":252,"column_start":5,"column_end":21}},{"value":"/         // If EAGAIN or EWOULDBLOCK is set by libc::recv, the closure","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.8.4\\src\\net\\tcp\\stream.rs","byte_start":13727231,"byte_end":13727304,"line_start":253,"line_end":253,"column_start":5,"column_end":78}},{"value":"/         // should return `WouldBlock` error.","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.8.4\\src\\net\\tcp\\stream.rs","byte_start":13727309,"byte_end":13727357,"line_start":254,"line_end":254,"column_start":5,"column_end":53}},{"value":"/         Err(io::Error::last_os_error())","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.8.4\\src\\net\\tcp\\stream.rs","byte_start":13727362,"byte_end":13727405,"line_start":255,"line_end":255,"column_start":5,"column_end":48}},{"value":"/     }","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.8.4\\src\\net\\tcp\\stream.rs","byte_start":13727410,"byte_end":13727419,"line_start":256,"line_end":256,"column_start":5,"column_end":14}},{"value":"/ })?;","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.8.4\\src\\net\\tcp\\stream.rs","byte_start":13727424,"byte_end":13727432,"line_start":257,"line_end":257,"column_start":5,"column_end":13}},{"value":"/ eprintln!(\"read {} bytes\", n);","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.8.4\\src\\net\\tcp\\stream.rs","byte_start":13727437,"byte_end":13727471,"line_start":258,"line_end":258,"column_start":5,"column_end":39}},{"value":"/ # Ok(())","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.8.4\\src\\net\\tcp\\stream.rs","byte_start":13727476,"byte_end":13727488,"line_start":259,"line_end":259,"column_start":5,"column_end":17}},{"value":"/ # }","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.8.4\\src\\net\\tcp\\stream.rs","byte_start":13727493,"byte_end":13727500,"line_start":260,"line_end":260,"column_start":5,"column_end":12}},{"value":"/ ```","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.8.4\\src\\net\\tcp\\stream.rs","byte_start":13727505,"byte_end":13727512,"line_start":261,"line_end":261,"column_start":5,"column_end":12}}]},{"kind":"Struct","id":{"krate":0,"index":1809},"span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.8.4\\src\\net\\udp.rs","byte_start":13735028,"byte_end":13735037,"line_start":91,"line_end":91,"column_start":12,"column_end":21},"name":"UdpSocket","qualname":"::net::udp::UdpSocket","value":"UdpSocket {  }","parent":null,"children":[{"krate":0,"index":1810}],"decl_id":null,"docs":" A User Datagram Protocol socket.","sig":null,"attributes":[{"value":"/ A User Datagram Protocol socket.","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.8.4\\src\\net\\udp.rs","byte_start":13732390,"byte_end":13732426,"line_start":22,"line_end":22,"column_start":1,"column_end":37}},{"value":"/","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.8.4\\src\\net\\udp.rs","byte_start":13732427,"byte_end":13732430,"line_start":23,"line_end":23,"column_start":1,"column_end":4}},{"value":"/ This is an implementation of a bound UDP socket. This supports both IPv4 and","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.8.4\\src\\net\\udp.rs","byte_start":13732431,"byte_end":13732511,"line_start":24,"line_end":24,"column_start":1,"column_end":81}},{"value":"/ IPv6 addresses, and there is no corresponding notion of a server because UDP","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.8.4\\src\\net\\udp.rs","byte_start":13732512,"byte_end":13732592,"line_start":25,"line_end":25,"column_start":1,"column_end":81}},{"value":"/ is a datagram protocol.","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.8.4\\src\\net\\udp.rs","byte_start":13732593,"byte_end":13732620,"line_start":26,"line_end":26,"column_start":1,"column_end":28}},{"value":"/","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.8.4\\src\\net\\udp.rs","byte_start":13732621,"byte_end":13732624,"line_start":27,"line_end":27,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.8.4\\src\\net\\udp.rs","byte_start":13732625,"byte_end":13732639,"line_start":28,"line_end":28,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.8.4\\src\\net\\udp.rs","byte_start":13732640,"byte_end":13732643,"line_start":29,"line_end":29,"column_start":1,"column_end":4}},{"value":"/ # use std::error::Error;","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.8.4\\src\\net\\udp.rs","byte_start":13732747,"byte_end":13732775,"line_start":32,"line_end":32,"column_start":1,"column_end":29}},{"value":"/ #","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.8.4\\src\\net\\udp.rs","byte_start":13732776,"byte_end":13732781,"line_start":33,"line_end":33,"column_start":1,"column_end":6}},{"value":"/ # fn main() -> Result<(), Box<dyn Error>> {","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.8.4\\src\\net\\udp.rs","byte_start":13732782,"byte_end":13732829,"line_start":34,"line_end":34,"column_start":1,"column_end":48}},{"value":"/ // An Echo program:","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.8.4\\src\\net\\udp.rs","byte_start":13732830,"byte_end":13732853,"line_start":35,"line_end":35,"column_start":1,"column_end":24}},{"value":"/ // SENDER -> sends a message.","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.8.4\\src\\net\\udp.rs","byte_start":13732854,"byte_end":13732887,"line_start":36,"line_end":36,"column_start":1,"column_end":34}},{"value":"/ // ECHOER -> listens and prints the message received.","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.8.4\\src\\net\\udp.rs","byte_start":13732888,"byte_end":13732945,"line_start":37,"line_end":37,"column_start":1,"column_end":58}},{"value":"/","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.8.4\\src\\net\\udp.rs","byte_start":13732946,"byte_end":13732949,"line_start":38,"line_end":38,"column_start":1,"column_end":4}},{"value":"/ use mio::net::UdpSocket;","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.8.4\\src\\net\\udp.rs","byte_start":13732950,"byte_end":13732978,"line_start":39,"line_end":39,"column_start":1,"column_end":29}},{"value":"/ use mio::{Events, Interest, Poll, Token};","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.8.4\\src\\net\\udp.rs","byte_start":13732979,"byte_end":13733024,"line_start":40,"line_end":40,"column_start":1,"column_end":46}},{"value":"/ use std::time::Duration;","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.8.4\\src\\net\\udp.rs","byte_start":13733025,"byte_end":13733053,"line_start":41,"line_end":41,"column_start":1,"column_end":29}},{"value":"/","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.8.4\\src\\net\\udp.rs","byte_start":13733054,"byte_end":13733057,"line_start":42,"line_end":42,"column_start":1,"column_end":4}},{"value":"/ const SENDER: Token = Token(0);","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.8.4\\src\\net\\udp.rs","byte_start":13733058,"byte_end":13733093,"line_start":43,"line_end":43,"column_start":1,"column_end":36}},{"value":"/ const ECHOER: Token = Token(1);","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.8.4\\src\\net\\udp.rs","byte_start":13733094,"byte_end":13733129,"line_start":44,"line_end":44,"column_start":1,"column_end":36}},{"value":"/","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.8.4\\src\\net\\udp.rs","byte_start":13733130,"byte_end":13733133,"line_start":45,"line_end":45,"column_start":1,"column_end":4}},{"value":"/ // This operation will fail if the address is in use, so we select different ports for each","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.8.4\\src\\net\\udp.rs","byte_start":13733134,"byte_end":13733229,"line_start":46,"line_end":46,"column_start":1,"column_end":96}},{"value":"/ // socket.","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.8.4\\src\\net\\udp.rs","byte_start":13733230,"byte_end":13733244,"line_start":47,"line_end":47,"column_start":1,"column_end":15}},{"value":"/ let mut sender_socket = UdpSocket::bind(\"127.0.0.1:0\".parse()?)?;","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.8.4\\src\\net\\udp.rs","byte_start":13733245,"byte_end":13733314,"line_start":48,"line_end":48,"column_start":1,"column_end":70}},{"value":"/ let mut echoer_socket = UdpSocket::bind(\"127.0.0.1:0\".parse()?)?;","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.8.4\\src\\net\\udp.rs","byte_start":13733315,"byte_end":13733384,"line_start":49,"line_end":49,"column_start":1,"column_end":70}},{"value":"/","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.8.4\\src\\net\\udp.rs","byte_start":13733385,"byte_end":13733388,"line_start":50,"line_end":50,"column_start":1,"column_end":4}},{"value":"/ // If we do not use connect here, SENDER and ECHOER would need to call send_to and recv_from","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.8.4\\src\\net\\udp.rs","byte_start":13733389,"byte_end":13733485,"line_start":51,"line_end":51,"column_start":1,"column_end":97}},{"value":"/ // respectively.","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.8.4\\src\\net\\udp.rs","byte_start":13733486,"byte_end":13733506,"line_start":52,"line_end":52,"column_start":1,"column_end":21}},{"value":"/ sender_socket.connect(echoer_socket.local_addr()?)?;","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.8.4\\src\\net\\udp.rs","byte_start":13733507,"byte_end":13733563,"line_start":53,"line_end":53,"column_start":1,"column_end":57}},{"value":"/","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.8.4\\src\\net\\udp.rs","byte_start":13733564,"byte_end":13733567,"line_start":54,"line_end":54,"column_start":1,"column_end":4}},{"value":"/ // We need a Poll to check if SENDER is ready to be written into, and if ECHOER is ready to be","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.8.4\\src\\net\\udp.rs","byte_start":13733568,"byte_end":13733666,"line_start":55,"line_end":55,"column_start":1,"column_end":99}},{"value":"/ // read from.","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.8.4\\src\\net\\udp.rs","byte_start":13733667,"byte_end":13733684,"line_start":56,"line_end":56,"column_start":1,"column_end":18}},{"value":"/ let mut poll = Poll::new()?;","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.8.4\\src\\net\\udp.rs","byte_start":13733685,"byte_end":13733717,"line_start":57,"line_end":57,"column_start":1,"column_end":33}},{"value":"/","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.8.4\\src\\net\\udp.rs","byte_start":13733718,"byte_end":13733721,"line_start":58,"line_end":58,"column_start":1,"column_end":4}},{"value":"/ // We register our sockets here so that we can check if they are ready to be written/read.","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.8.4\\src\\net\\udp.rs","byte_start":13733722,"byte_end":13733816,"line_start":59,"line_end":59,"column_start":1,"column_end":95}},{"value":"/ poll.registry().register(&mut sender_socket, SENDER, Interest::WRITABLE)?;","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.8.4\\src\\net\\udp.rs","byte_start":13733817,"byte_end":13733895,"line_start":60,"line_end":60,"column_start":1,"column_end":79}},{"value":"/ poll.registry().register(&mut echoer_socket, ECHOER, Interest::READABLE)?;","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.8.4\\src\\net\\udp.rs","byte_start":13733896,"byte_end":13733974,"line_start":61,"line_end":61,"column_start":1,"column_end":79}},{"value":"/","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.8.4\\src\\net\\udp.rs","byte_start":13733975,"byte_end":13733978,"line_start":62,"line_end":62,"column_start":1,"column_end":4}},{"value":"/ let msg_to_send = [9; 9];","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.8.4\\src\\net\\udp.rs","byte_start":13733979,"byte_end":13734008,"line_start":63,"line_end":63,"column_start":1,"column_end":30}},{"value":"/ let mut buffer = [0; 9];","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.8.4\\src\\net\\udp.rs","byte_start":13734009,"byte_end":13734037,"line_start":64,"line_end":64,"column_start":1,"column_end":29}},{"value":"/","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.8.4\\src\\net\\udp.rs","byte_start":13734038,"byte_end":13734041,"line_start":65,"line_end":65,"column_start":1,"column_end":4}},{"value":"/ let mut events = Events::with_capacity(128);","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.8.4\\src\\net\\udp.rs","byte_start":13734042,"byte_end":13734090,"line_start":66,"line_end":66,"column_start":1,"column_end":49}},{"value":"/ loop {","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.8.4\\src\\net\\udp.rs","byte_start":13734091,"byte_end":13734101,"line_start":67,"line_end":67,"column_start":1,"column_end":11}},{"value":"/     poll.poll(&mut events, Some(Duration::from_millis(100)))?;","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.8.4\\src\\net\\udp.rs","byte_start":13734102,"byte_end":13734168,"line_start":68,"line_end":68,"column_start":1,"column_end":67}},{"value":"/     for event in events.iter() {","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.8.4\\src\\net\\udp.rs","byte_start":13734169,"byte_end":13734205,"line_start":69,"line_end":69,"column_start":1,"column_end":37}},{"value":"/         match event.token() {","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.8.4\\src\\net\\udp.rs","byte_start":13734206,"byte_end":13734239,"line_start":70,"line_end":70,"column_start":1,"column_end":34}},{"value":"/             // Our SENDER is ready to be written into.","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.8.4\\src\\net\\udp.rs","byte_start":13734240,"byte_end":13734298,"line_start":71,"line_end":71,"column_start":1,"column_end":59}},{"value":"/             SENDER => {","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.8.4\\src\\net\\udp.rs","byte_start":13734299,"byte_end":13734326,"line_start":72,"line_end":72,"column_start":1,"column_end":28}},{"value":"/                 let bytes_sent = sender_socket.send(&msg_to_send)?;","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.8.4\\src\\net\\udp.rs","byte_start":13734327,"byte_end":13734398,"line_start":73,"line_end":73,"column_start":1,"column_end":72}},{"value":"/                 assert_eq!(bytes_sent, 9);","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.8.4\\src\\net\\udp.rs","byte_start":13734399,"byte_end":13734445,"line_start":74,"line_end":74,"column_start":1,"column_end":47}},{"value":"/                 println!(\"sent {:?} -> {:?} bytes\", msg_to_send, bytes_sent);","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.8.4\\src\\net\\udp.rs","byte_start":13734446,"byte_end":13734527,"line_start":75,"line_end":75,"column_start":1,"column_end":82}},{"value":"/             },","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.8.4\\src\\net\\udp.rs","byte_start":13734528,"byte_end":13734546,"line_start":76,"line_end":76,"column_start":1,"column_end":19}},{"value":"/             // Our ECHOER is ready to be read from.","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.8.4\\src\\net\\udp.rs","byte_start":13734547,"byte_end":13734602,"line_start":77,"line_end":77,"column_start":1,"column_end":56}},{"value":"/             ECHOER => {","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.8.4\\src\\net\\udp.rs","byte_start":13734603,"byte_end":13734630,"line_start":78,"line_end":78,"column_start":1,"column_end":28}},{"value":"/                 let num_recv = echoer_socket.recv(&mut buffer)?;","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.8.4\\src\\net\\udp.rs","byte_start":13734631,"byte_end":13734699,"line_start":79,"line_end":79,"column_start":1,"column_end":69}},{"value":"/                 println!(\"echo {:?} -> {:?}\", buffer, num_recv);","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.8.4\\src\\net\\udp.rs","byte_start":13734700,"byte_end":13734768,"line_start":80,"line_end":80,"column_start":1,"column_end":69}},{"value":"/                 buffer = [0; 9];","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.8.4\\src\\net\\udp.rs","byte_start":13734769,"byte_end":13734805,"line_start":81,"line_end":81,"column_start":1,"column_end":37}},{"value":"/                 # drop(buffer); // Silence unused assignment warning.","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.8.4\\src\\net\\udp.rs","byte_start":13734806,"byte_end":13734879,"line_start":82,"line_end":82,"column_start":1,"column_end":74}},{"value":"/                 # return Ok(());","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.8.4\\src\\net\\udp.rs","byte_start":13734880,"byte_end":13734916,"line_start":83,"line_end":83,"column_start":1,"column_end":37}},{"value":"/             }","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.8.4\\src\\net\\udp.rs","byte_start":13734917,"byte_end":13734934,"line_start":84,"line_end":84,"column_start":1,"column_end":18}},{"value":"/             _ => unreachable!()","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.8.4\\src\\net\\udp.rs","byte_start":13734935,"byte_end":13734970,"line_start":85,"line_end":85,"column_start":1,"column_end":36}},{"value":"/         }","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.8.4\\src\\net\\udp.rs","byte_start":13734971,"byte_end":13734984,"line_start":86,"line_end":86,"column_start":1,"column_end":14}},{"value":"/     }","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.8.4\\src\\net\\udp.rs","byte_start":13734985,"byte_end":13734994,"line_start":87,"line_end":87,"column_start":1,"column_end":10}},{"value":"/ }","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.8.4\\src\\net\\udp.rs","byte_start":13734995,"byte_end":13735000,"line_start":88,"line_end":88,"column_start":1,"column_end":6}},{"value":"/ # }","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.8.4\\src\\net\\udp.rs","byte_start":13735001,"byte_end":13735008,"line_start":89,"line_end":89,"column_start":1,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.8.4\\src\\net\\udp.rs","byte_start":13735009,"byte_end":13735016,"line_start":90,"line_end":90,"column_start":1,"column_end":8}}]},{"kind":"Method","id":{"krate":0,"index":1812},"span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.8.4\\src\\net\\udp.rs","byte_start":13736011,"byte_end":13736015,"line_start":121,"line_end":121,"column_start":12,"column_end":16},"name":"bind","qualname":"<UdpSocket>::bind","value":"pub fn bind(SocketAddr) -> io::Result<UdpSocket>","parent":null,"children":[],"decl_id":null,"docs":" Creates a UDP socket from the given address.","sig":null,"attributes":[{"value":"/ Creates a UDP socket from the given address.","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.8.4\\src\\net\\udp.rs","byte_start":13735101,"byte_end":13735149,"line_start":96,"line_end":96,"column_start":5,"column_end":53}},{"value":"/","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.8.4\\src\\net\\udp.rs","byte_start":13735154,"byte_end":13735157,"line_start":97,"line_end":97,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.8.4\\src\\net\\udp.rs","byte_start":13735162,"byte_end":13735176,"line_start":98,"line_end":98,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.8.4\\src\\net\\udp.rs","byte_start":13735181,"byte_end":13735184,"line_start":99,"line_end":99,"column_start":5,"column_end":8}},{"value":"/ # use std::error::Error;","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.8.4\\src\\net\\udp.rs","byte_start":13735300,"byte_end":13735328,"line_start":102,"line_end":102,"column_start":5,"column_end":33}},{"value":"/ #","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.8.4\\src\\net\\udp.rs","byte_start":13735333,"byte_end":13735338,"line_start":103,"line_end":103,"column_start":5,"column_end":10}},{"value":"/ # fn main() -> Result<(), Box<dyn Error>> {","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.8.4\\src\\net\\udp.rs","byte_start":13735343,"byte_end":13735390,"line_start":104,"line_end":104,"column_start":5,"column_end":52}},{"value":"/ use mio::net::UdpSocket;","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.8.4\\src\\net\\udp.rs","byte_start":13735395,"byte_end":13735423,"line_start":105,"line_end":105,"column_start":5,"column_end":33}},{"value":"/","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.8.4\\src\\net\\udp.rs","byte_start":13735428,"byte_end":13735431,"line_start":106,"line_end":106,"column_start":5,"column_end":8}},{"value":"/ // We must bind it to an open address.","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.8.4\\src\\net\\udp.rs","byte_start":13735436,"byte_end":13735478,"line_start":107,"line_end":107,"column_start":5,"column_end":47}},{"value":"/ let socket = match UdpSocket::bind(\"127.0.0.1:0\".parse()?) {","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.8.4\\src\\net\\udp.rs","byte_start":13735483,"byte_end":13735547,"line_start":108,"line_end":108,"column_start":5,"column_end":69}},{"value":"/     Ok(new_socket) => new_socket,","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.8.4\\src\\net\\udp.rs","byte_start":13735552,"byte_end":13735589,"line_start":109,"line_end":109,"column_start":5,"column_end":42}},{"value":"/     Err(fail) => {","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.8.4\\src\\net\\udp.rs","byte_start":13735594,"byte_end":13735616,"line_start":110,"line_end":110,"column_start":5,"column_end":27}},{"value":"/         // We panic! here, but you could try to bind it again on another address.","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.8.4\\src\\net\\udp.rs","byte_start":13735621,"byte_end":13735706,"line_start":111,"line_end":111,"column_start":5,"column_end":90}},{"value":"/         panic!(\"Failed to bind socket. {:?}\", fail);","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.8.4\\src\\net\\udp.rs","byte_start":13735711,"byte_end":13735767,"line_start":112,"line_end":112,"column_start":5,"column_end":61}},{"value":"/     }","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.8.4\\src\\net\\udp.rs","byte_start":13735772,"byte_end":13735781,"line_start":113,"line_end":113,"column_start":5,"column_end":14}},{"value":"/ };","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.8.4\\src\\net\\udp.rs","byte_start":13735786,"byte_end":13735792,"line_start":114,"line_end":114,"column_start":5,"column_end":11}},{"value":"/","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.8.4\\src\\net\\udp.rs","byte_start":13735797,"byte_end":13735800,"line_start":115,"line_end":115,"column_start":5,"column_end":8}},{"value":"/ // Our socket was created, but we should not use it before checking it's readiness.","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.8.4\\src\\net\\udp.rs","byte_start":13735805,"byte_end":13735892,"line_start":116,"line_end":116,"column_start":5,"column_end":92}},{"value":"/ #    drop(socket); // Silence unused variable warning.","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.8.4\\src\\net\\udp.rs","byte_start":13735897,"byte_end":13735955,"line_start":117,"line_end":117,"column_start":5,"column_end":63}},{"value":"/ #    Ok(())","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.8.4\\src\\net\\udp.rs","byte_start":13735960,"byte_end":13735975,"line_start":118,"line_end":118,"column_start":5,"column_end":20}},{"value":"/ # }","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.8.4\\src\\net\\udp.rs","byte_start":13735980,"byte_end":13735987,"line_start":119,"line_end":119,"column_start":5,"column_end":12}},{"value":"/ ```","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.8.4\\src\\net\\udp.rs","byte_start":13735992,"byte_end":13735999,"line_start":120,"line_end":120,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":1813},"span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.8.4\\src\\net\\udp.rs","byte_start":13736466,"byte_end":13736474,"line_start":131,"line_end":131,"column_start":12,"column_end":20},"name":"from_std","qualname":"<UdpSocket>::from_std","value":"pub fn from_std(net::UdpSocket) -> UdpSocket","parent":null,"children":[],"decl_id":null,"docs":" Creates a new `UdpSocket` from a standard `net::UdpSocket`.","sig":null,"attributes":[{"value":"/ Creates a new `UdpSocket` from a standard `net::UdpSocket`.","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.8.4\\src\\net\\udp.rs","byte_start":13736126,"byte_end":13736189,"line_start":125,"line_end":125,"column_start":5,"column_end":68}},{"value":"/","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.8.4\\src\\net\\udp.rs","byte_start":13736194,"byte_end":13736197,"line_start":126,"line_end":126,"column_start":5,"column_end":8}},{"value":"/ This function is intended to be used to wrap a UDP socket from the","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.8.4\\src\\net\\udp.rs","byte_start":13736202,"byte_end":13736272,"line_start":127,"line_end":127,"column_start":5,"column_end":75}},{"value":"/ standard library in the Mio equivalent. The conversion assumes nothing","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.8.4\\src\\net\\udp.rs","byte_start":13736277,"byte_end":13736351,"line_start":128,"line_end":128,"column_start":5,"column_end":79}},{"value":"/ about the underlying socket; it is left up to the user to set it in","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.8.4\\src\\net\\udp.rs","byte_start":13736356,"byte_end":13736427,"line_start":129,"line_end":129,"column_start":5,"column_end":76}},{"value":"/ non-blocking mode.","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.8.4\\src\\net\\udp.rs","byte_start":13736432,"byte_end":13736454,"line_start":130,"line_end":130,"column_start":5,"column_end":27}}]},{"kind":"Method","id":{"krate":0,"index":1814},"span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.8.4\\src\\net\\udp.rs","byte_start":13737428,"byte_end":13737438,"line_start":160,"line_end":160,"column_start":12,"column_end":22},"name":"local_addr","qualname":"<UdpSocket>::local_addr","value":"pub fn local_addr(&Self) -> io::Result<SocketAddr>","parent":null,"children":[],"decl_id":null,"docs":" Returns the socket address that this socket was created from.","sig":null,"attributes":[{"value":"/ Returns the socket address that this socket was created from.","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.8.4\\src\\net\\udp.rs","byte_start":13736597,"byte_end":13736662,"line_start":137,"line_end":137,"column_start":5,"column_end":70}},{"value":"/","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.8.4\\src\\net\\udp.rs","byte_start":13736667,"byte_end":13736670,"line_start":138,"line_end":138,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.8.4\\src\\net\\udp.rs","byte_start":13736675,"byte_end":13736689,"line_start":139,"line_end":139,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.8.4\\src\\net\\udp.rs","byte_start":13736694,"byte_end":13736697,"line_start":140,"line_end":140,"column_start":5,"column_end":8}},{"value":"/ # use std::error::Error;","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.8.4\\src\\net\\udp.rs","byte_start":13737095,"byte_end":13737123,"line_start":149,"line_end":149,"column_start":5,"column_end":33}},{"value":"/ #","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.8.4\\src\\net\\udp.rs","byte_start":13737128,"byte_end":13737133,"line_start":150,"line_end":150,"column_start":5,"column_end":10}},{"value":"/ # fn main() -> Result<(), Box<dyn Error>> {","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.8.4\\src\\net\\udp.rs","byte_start":13737138,"byte_end":13737185,"line_start":151,"line_end":151,"column_start":5,"column_end":52}},{"value":"/ use mio::net::UdpSocket;","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.8.4\\src\\net\\udp.rs","byte_start":13737190,"byte_end":13737218,"line_start":152,"line_end":152,"column_start":5,"column_end":33}},{"value":"/","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.8.4\\src\\net\\udp.rs","byte_start":13737223,"byte_end":13737226,"line_start":153,"line_end":153,"column_start":5,"column_end":8}},{"value":"/ let addr = \"127.0.0.1:0\".parse()?;","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.8.4\\src\\net\\udp.rs","byte_start":13737231,"byte_end":13737269,"line_start":154,"line_end":154,"column_start":5,"column_end":43}},{"value":"/ let socket = UdpSocket::bind(addr)?;","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.8.4\\src\\net\\udp.rs","byte_start":13737274,"byte_end":13737314,"line_start":155,"line_end":155,"column_start":5,"column_end":45}},{"value":"/ assert_eq!(socket.local_addr()?.ip(), addr.ip());","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.8.4\\src\\net\\udp.rs","byte_start":13737319,"byte_end":13737372,"line_start":156,"line_end":156,"column_start":5,"column_end":58}},{"value":"/ #    Ok(())","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.8.4\\src\\net\\udp.rs","byte_start":13737377,"byte_end":13737392,"line_start":157,"line_end":157,"column_start":5,"column_end":20}},{"value":"/ # }","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.8.4\\src\\net\\udp.rs","byte_start":13737397,"byte_end":13737404,"line_start":158,"line_end":158,"column_start":5,"column_end":12}},{"value":"/ ```","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.8.4\\src\\net\\udp.rs","byte_start":13737409,"byte_end":13737416,"line_start":159,"line_end":159,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":1815},"span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.8.4\\src\\net\\udp.rs","byte_start":13738172,"byte_end":13738181,"line_start":183,"line_end":183,"column_start":12,"column_end":21},"name":"peer_addr","qualname":"<UdpSocket>::peer_addr","value":"pub fn peer_addr(&Self) -> io::Result<SocketAddr>","parent":null,"children":[],"decl_id":null,"docs":" Returns the socket address of the remote peer this socket was connected to.","sig":null,"attributes":[{"value":"/ Returns the socket address of the remote peer this socket was connected to.","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.8.4\\src\\net\\udp.rs","byte_start":13737517,"byte_end":13737596,"line_start":164,"line_end":164,"column_start":5,"column_end":84}},{"value":"/","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.8.4\\src\\net\\udp.rs","byte_start":13737601,"byte_end":13737604,"line_start":165,"line_end":165,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.8.4\\src\\net\\udp.rs","byte_start":13737609,"byte_end":13737623,"line_start":166,"line_end":166,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.8.4\\src\\net\\udp.rs","byte_start":13737628,"byte_end":13737631,"line_start":167,"line_end":167,"column_start":5,"column_end":8}},{"value":"/ # use std::error::Error;","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.8.4\\src\\net\\udp.rs","byte_start":13737747,"byte_end":13737775,"line_start":170,"line_end":170,"column_start":5,"column_end":33}},{"value":"/ #","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.8.4\\src\\net\\udp.rs","byte_start":13737780,"byte_end":13737785,"line_start":171,"line_end":171,"column_start":5,"column_end":10}},{"value":"/ # fn main() -> Result<(), Box<dyn Error>> {","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.8.4\\src\\net\\udp.rs","byte_start":13737790,"byte_end":13737837,"line_start":172,"line_end":172,"column_start":5,"column_end":52}},{"value":"/ use mio::net::UdpSocket;","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.8.4\\src\\net\\udp.rs","byte_start":13737842,"byte_end":13737870,"line_start":173,"line_end":173,"column_start":5,"column_end":33}},{"value":"/","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.8.4\\src\\net\\udp.rs","byte_start":13737875,"byte_end":13737878,"line_start":174,"line_end":174,"column_start":5,"column_end":8}},{"value":"/ let addr = \"127.0.0.1:0\".parse()?;","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.8.4\\src\\net\\udp.rs","byte_start":13737883,"byte_end":13737921,"line_start":175,"line_end":175,"column_start":5,"column_end":43}},{"value":"/ let peer_addr = \"127.0.0.1:11100\".parse()?;","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.8.4\\src\\net\\udp.rs","byte_start":13737926,"byte_end":13737973,"line_start":176,"line_end":176,"column_start":5,"column_end":52}},{"value":"/ let socket = UdpSocket::bind(addr)?;","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.8.4\\src\\net\\udp.rs","byte_start":13737978,"byte_end":13738018,"line_start":177,"line_end":177,"column_start":5,"column_end":45}},{"value":"/ socket.connect(peer_addr)?;","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.8.4\\src\\net\\udp.rs","byte_start":13738023,"byte_end":13738054,"line_start":178,"line_end":178,"column_start":5,"column_end":36}},{"value":"/ assert_eq!(socket.peer_addr()?.ip(), peer_addr.ip());","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.8.4\\src\\net\\udp.rs","byte_start":13738059,"byte_end":13738116,"line_start":179,"line_end":179,"column_start":5,"column_end":62}},{"value":"/ #    Ok(())","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.8.4\\src\\net\\udp.rs","byte_start":13738121,"byte_end":13738136,"line_start":180,"line_end":180,"column_start":5,"column_end":20}},{"value":"/ # }","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.8.4\\src\\net\\udp.rs","byte_start":13738141,"byte_end":13738148,"line_start":181,"line_end":181,"column_start":5,"column_end":12}},{"value":"/ ```","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.8.4\\src\\net\\udp.rs","byte_start":13738153,"byte_end":13738160,"line_start":182,"line_end":182,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":1816},"span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.8.4\\src\\net\\udp.rs","byte_start":13739062,"byte_end":13739069,"line_start":211,"line_end":211,"column_start":12,"column_end":19},"name":"send_to","qualname":"<UdpSocket>::send_to","value":"pub fn send_to(&Self, &[u8], SocketAddr) -> io::Result<usize>","parent":null,"children":[],"decl_id":null,"docs":" Sends data on the socket to the given address. On success, returns the\n number of bytes written.","sig":null,"attributes":[{"value":"/ Sends data on the socket to the given address. On success, returns the","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.8.4\\src\\net\\udp.rs","byte_start":13738259,"byte_end":13738333,"line_start":187,"line_end":187,"column_start":5,"column_end":79}},{"value":"/ number of bytes written.","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.8.4\\src\\net\\udp.rs","byte_start":13738338,"byte_end":13738366,"line_start":188,"line_end":188,"column_start":5,"column_end":33}},{"value":"/","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.8.4\\src\\net\\udp.rs","byte_start":13738371,"byte_end":13738374,"line_start":189,"line_end":189,"column_start":5,"column_end":8}},{"value":"/ Address type can be any implementor of `ToSocketAddrs` trait. See its","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.8.4\\src\\net\\udp.rs","byte_start":13738379,"byte_end":13738452,"line_start":190,"line_end":190,"column_start":5,"column_end":78}},{"value":"/ documentation for concrete examples.","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.8.4\\src\\net\\udp.rs","byte_start":13738457,"byte_end":13738497,"line_start":191,"line_end":191,"column_start":5,"column_end":45}},{"value":"/","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.8.4\\src\\net\\udp.rs","byte_start":13738502,"byte_end":13738505,"line_start":192,"line_end":192,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.8.4\\src\\net\\udp.rs","byte_start":13738510,"byte_end":13738524,"line_start":193,"line_end":193,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.8.4\\src\\net\\udp.rs","byte_start":13738529,"byte_end":13738532,"line_start":194,"line_end":194,"column_start":5,"column_end":8}},{"value":"/ ```no_run","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.8.4\\src\\net\\udp.rs","byte_start":13738537,"byte_end":13738550,"line_start":195,"line_end":195,"column_start":5,"column_end":18}},{"value":"/ # use std::error::Error;","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.8.4\\src\\net\\udp.rs","byte_start":13738555,"byte_end":13738583,"line_start":196,"line_end":196,"column_start":5,"column_end":33}},{"value":"/ # fn main() -> Result<(), Box<dyn Error>> {","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.8.4\\src\\net\\udp.rs","byte_start":13738588,"byte_end":13738635,"line_start":197,"line_end":197,"column_start":5,"column_end":52}},{"value":"/ use mio::net::UdpSocket;","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.8.4\\src\\net\\udp.rs","byte_start":13738640,"byte_end":13738668,"line_start":198,"line_end":198,"column_start":5,"column_end":33}},{"value":"/","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.8.4\\src\\net\\udp.rs","byte_start":13738673,"byte_end":13738676,"line_start":199,"line_end":199,"column_start":5,"column_end":8}},{"value":"/ let socket = UdpSocket::bind(\"127.0.0.1:0\".parse()?)?;","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.8.4\\src\\net\\udp.rs","byte_start":13738681,"byte_end":13738739,"line_start":200,"line_end":200,"column_start":5,"column_end":63}},{"value":"/","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.8.4\\src\\net\\udp.rs","byte_start":13738744,"byte_end":13738747,"line_start":201,"line_end":201,"column_start":5,"column_end":8}},{"value":"/ // We must check if the socket is writable before calling send_to,","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.8.4\\src\\net\\udp.rs","byte_start":13738752,"byte_end":13738822,"line_start":202,"line_end":202,"column_start":5,"column_end":75}},{"value":"/ // or we could run into a WouldBlock error.","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.8.4\\src\\net\\udp.rs","byte_start":13738827,"byte_end":13738874,"line_start":203,"line_end":203,"column_start":5,"column_end":52}},{"value":"/","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.8.4\\src\\net\\udp.rs","byte_start":13738879,"byte_end":13738882,"line_start":204,"line_end":204,"column_start":5,"column_end":8}},{"value":"/ let bytes_sent = socket.send_to(&[9; 9], \"127.0.0.1:11100\".parse()?)?;","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.8.4\\src\\net\\udp.rs","byte_start":13738887,"byte_end":13738961,"line_start":205,"line_end":205,"column_start":5,"column_end":79}},{"value":"/ assert_eq!(bytes_sent, 9);","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.8.4\\src\\net\\udp.rs","byte_start":13738966,"byte_end":13738996,"line_start":206,"line_end":206,"column_start":5,"column_end":35}},{"value":"/ #","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.8.4\\src\\net\\udp.rs","byte_start":13739001,"byte_end":13739006,"line_start":207,"line_end":207,"column_start":5,"column_end":10}},{"value":"/ #    Ok(())","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.8.4\\src\\net\\udp.rs","byte_start":13739011,"byte_end":13739026,"line_start":208,"line_end":208,"column_start":5,"column_end":20}},{"value":"/ # }","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.8.4\\src\\net\\udp.rs","byte_start":13739031,"byte_end":13739038,"line_start":209,"line_end":209,"column_start":5,"column_end":12}},{"value":"/ ```","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.8.4\\src\\net\\udp.rs","byte_start":13739043,"byte_end":13739050,"line_start":210,"line_end":210,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":1818},"span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.8.4\\src\\net\\udp.rs","byte_start":13740370,"byte_end":13740379,"line_start":246,"line_end":246,"column_start":12,"column_end":21},"name":"recv_from","qualname":"<UdpSocket>::recv_from","value":"pub fn recv_from(&Self, &mut [u8]) -> io::Result<(usize, SocketAddr)>","parent":null,"children":[],"decl_id":null,"docs":" Receives data from the socket. On success, returns the number of bytes\n read and the address from whence the data came.","sig":null,"attributes":[{"value":"/ Receives data from the socket. On success, returns the number of bytes","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.8.4\\src\\net\\udp.rs","byte_start":13739204,"byte_end":13739278,"line_start":215,"line_end":215,"column_start":5,"column_end":79}},{"value":"/ read and the address from whence the data came.","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.8.4\\src\\net\\udp.rs","byte_start":13739283,"byte_end":13739334,"line_start":216,"line_end":216,"column_start":5,"column_end":56}},{"value":"/","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.8.4\\src\\net\\udp.rs","byte_start":13739339,"byte_end":13739342,"line_start":217,"line_end":217,"column_start":5,"column_end":8}},{"value":"/ # Notes","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.8.4\\src\\net\\udp.rs","byte_start":13739347,"byte_end":13739358,"line_start":218,"line_end":218,"column_start":5,"column_end":16}},{"value":"/","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.8.4\\src\\net\\udp.rs","byte_start":13739363,"byte_end":13739366,"line_start":219,"line_end":219,"column_start":5,"column_end":8}},{"value":"/ On Windows, if the data is larger than the buffer specified, the buffer","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.8.4\\src\\net\\udp.rs","byte_start":13739371,"byte_end":13739446,"line_start":220,"line_end":220,"column_start":5,"column_end":80}},{"value":"/ is filled with the first part of the data, and recv_from returns the error","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.8.4\\src\\net\\udp.rs","byte_start":13739451,"byte_end":13739529,"line_start":221,"line_end":221,"column_start":5,"column_end":83}},{"value":"/ WSAEMSGSIZE(10040). The excess data is lost.","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.8.4\\src\\net\\udp.rs","byte_start":13739534,"byte_end":13739582,"line_start":222,"line_end":222,"column_start":5,"column_end":53}},{"value":"/ Make sure to always use a sufficiently large buffer to hold the","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.8.4\\src\\net\\udp.rs","byte_start":13739587,"byte_end":13739654,"line_start":223,"line_end":223,"column_start":5,"column_end":72}},{"value":"/ maximum UDP packet size, which can be up to 65536 bytes in size.","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.8.4\\src\\net\\udp.rs","byte_start":13739659,"byte_end":13739727,"line_start":224,"line_end":224,"column_start":5,"column_end":73}},{"value":"/","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.8.4\\src\\net\\udp.rs","byte_start":13739732,"byte_end":13739735,"line_start":225,"line_end":225,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.8.4\\src\\net\\udp.rs","byte_start":13739740,"byte_end":13739754,"line_start":226,"line_end":226,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.8.4\\src\\net\\udp.rs","byte_start":13739759,"byte_end":13739762,"line_start":227,"line_end":227,"column_start":5,"column_end":8}},{"value":"/ ```no_run","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.8.4\\src\\net\\udp.rs","byte_start":13739767,"byte_end":13739780,"line_start":228,"line_end":228,"column_start":5,"column_end":18}},{"value":"/ # use std::error::Error;","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.8.4\\src\\net\\udp.rs","byte_start":13739785,"byte_end":13739813,"line_start":229,"line_end":229,"column_start":5,"column_end":33}},{"value":"/ #","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.8.4\\src\\net\\udp.rs","byte_start":13739818,"byte_end":13739823,"line_start":230,"line_end":230,"column_start":5,"column_end":10}},{"value":"/ # fn main() -> Result<(), Box<dyn Error>> {","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.8.4\\src\\net\\udp.rs","byte_start":13739828,"byte_end":13739875,"line_start":231,"line_end":231,"column_start":5,"column_end":52}},{"value":"/ use mio::net::UdpSocket;","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.8.4\\src\\net\\udp.rs","byte_start":13739880,"byte_end":13739908,"line_start":232,"line_end":232,"column_start":5,"column_end":33}},{"value":"/","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.8.4\\src\\net\\udp.rs","byte_start":13739913,"byte_end":13739916,"line_start":233,"line_end":233,"column_start":5,"column_end":8}},{"value":"/ let socket = UdpSocket::bind(\"127.0.0.1:0\".parse()?)?;","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.8.4\\src\\net\\udp.rs","byte_start":13739921,"byte_end":13739979,"line_start":234,"line_end":234,"column_start":5,"column_end":63}},{"value":"/","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.8.4\\src\\net\\udp.rs","byte_start":13739984,"byte_end":13739987,"line_start":235,"line_end":235,"column_start":5,"column_end":8}},{"value":"/ // We must check if the socket is readable before calling recv_from,","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.8.4\\src\\net\\udp.rs","byte_start":13739992,"byte_end":13740064,"line_start":236,"line_end":236,"column_start":5,"column_end":77}},{"value":"/ // or we could run into a WouldBlock error.","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.8.4\\src\\net\\udp.rs","byte_start":13740069,"byte_end":13740116,"line_start":237,"line_end":237,"column_start":5,"column_end":52}},{"value":"/","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.8.4\\src\\net\\udp.rs","byte_start":13740121,"byte_end":13740124,"line_start":238,"line_end":238,"column_start":5,"column_end":8}},{"value":"/ let mut buf = [0; 9];","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.8.4\\src\\net\\udp.rs","byte_start":13740129,"byte_end":13740154,"line_start":239,"line_end":239,"column_start":5,"column_end":30}},{"value":"/ let (num_recv, from_addr) = socket.recv_from(&mut buf)?;","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.8.4\\src\\net\\udp.rs","byte_start":13740159,"byte_end":13740219,"line_start":240,"line_end":240,"column_start":5,"column_end":65}},{"value":"/ println!(\"Received {:?} -> {:?} bytes from {:?}\", buf, num_recv, from_addr);","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.8.4\\src\\net\\udp.rs","byte_start":13740224,"byte_end":13740304,"line_start":241,"line_end":241,"column_start":5,"column_end":85}},{"value":"/ #","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.8.4\\src\\net\\udp.rs","byte_start":13740309,"byte_end":13740314,"line_start":242,"line_end":242,"column_start":5,"column_end":10}},{"value":"/ #    Ok(())","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.8.4\\src\\net\\udp.rs","byte_start":13740319,"byte_end":13740334,"line_start":243,"line_end":243,"column_start":5,"column_end":20}},{"value":"/ # }","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.8.4\\src\\net\\udp.rs","byte_start":13740339,"byte_end":13740346,"line_start":244,"line_end":244,"column_start":5,"column_end":12}},{"value":"/ ```","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.8.4\\src\\net\\udp.rs","byte_start":13740351,"byte_end":13740358,"line_start":245,"line_end":245,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":1820},"span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.8.4\\src\\net\\udp.rs","byte_start":13741722,"byte_end":13741731,"line_start":282,"line_end":282,"column_start":12,"column_end":21},"name":"peek_from","qualname":"<UdpSocket>::peek_from","value":"pub fn peek_from(&Self, &mut [u8]) -> io::Result<(usize, SocketAddr)>","parent":null,"children":[],"decl_id":null,"docs":" Receives data from the socket, without removing it from the input queue.\n On success, returns the number of bytes read and the address from whence\n the data came.","sig":null,"attributes":[{"value":"/ Receives data from the socket, without removing it from the input queue.","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.8.4\\src\\net\\udp.rs","byte_start":13740506,"byte_end":13740582,"line_start":250,"line_end":250,"column_start":5,"column_end":81}},{"value":"/ On success, returns the number of bytes read and the address from whence","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.8.4\\src\\net\\udp.rs","byte_start":13740587,"byte_end":13740663,"line_start":251,"line_end":251,"column_start":5,"column_end":81}},{"value":"/ the data came.","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.8.4\\src\\net\\udp.rs","byte_start":13740668,"byte_end":13740686,"line_start":252,"line_end":252,"column_start":5,"column_end":23}},{"value":"/","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.8.4\\src\\net\\udp.rs","byte_start":13740691,"byte_end":13740694,"line_start":253,"line_end":253,"column_start":5,"column_end":8}},{"value":"/ # Notes","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.8.4\\src\\net\\udp.rs","byte_start":13740699,"byte_end":13740710,"line_start":254,"line_end":254,"column_start":5,"column_end":16}},{"value":"/","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.8.4\\src\\net\\udp.rs","byte_start":13740715,"byte_end":13740718,"line_start":255,"line_end":255,"column_start":5,"column_end":8}},{"value":"/ On Windows, if the data is larger than the buffer specified, the buffer","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.8.4\\src\\net\\udp.rs","byte_start":13740723,"byte_end":13740798,"line_start":256,"line_end":256,"column_start":5,"column_end":80}},{"value":"/ is filled with the first part of the data, and peek_from returns the error","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.8.4\\src\\net\\udp.rs","byte_start":13740803,"byte_end":13740881,"line_start":257,"line_end":257,"column_start":5,"column_end":83}},{"value":"/ WSAEMSGSIZE(10040). The excess data is lost.","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.8.4\\src\\net\\udp.rs","byte_start":13740886,"byte_end":13740934,"line_start":258,"line_end":258,"column_start":5,"column_end":53}},{"value":"/ Make sure to always use a sufficiently large buffer to hold the","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.8.4\\src\\net\\udp.rs","byte_start":13740939,"byte_end":13741006,"line_start":259,"line_end":259,"column_start":5,"column_end":72}},{"value":"/ maximum UDP packet size, which can be up to 65536 bytes in size.","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.8.4\\src\\net\\udp.rs","byte_start":13741011,"byte_end":13741079,"line_start":260,"line_end":260,"column_start":5,"column_end":73}},{"value":"/","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.8.4\\src\\net\\udp.rs","byte_start":13741084,"byte_end":13741087,"line_start":261,"line_end":261,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.8.4\\src\\net\\udp.rs","byte_start":13741092,"byte_end":13741106,"line_start":262,"line_end":262,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.8.4\\src\\net\\udp.rs","byte_start":13741111,"byte_end":13741114,"line_start":263,"line_end":263,"column_start":5,"column_end":8}},{"value":"/ ```no_run","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.8.4\\src\\net\\udp.rs","byte_start":13741119,"byte_end":13741132,"line_start":264,"line_end":264,"column_start":5,"column_end":18}},{"value":"/ # use std::error::Error;","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.8.4\\src\\net\\udp.rs","byte_start":13741137,"byte_end":13741165,"line_start":265,"line_end":265,"column_start":5,"column_end":33}},{"value":"/ #","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.8.4\\src\\net\\udp.rs","byte_start":13741170,"byte_end":13741175,"line_start":266,"line_end":266,"column_start":5,"column_end":10}},{"value":"/ # fn main() -> Result<(), Box<dyn Error>> {","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.8.4\\src\\net\\udp.rs","byte_start":13741180,"byte_end":13741227,"line_start":267,"line_end":267,"column_start":5,"column_end":52}},{"value":"/ use mio::net::UdpSocket;","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.8.4\\src\\net\\udp.rs","byte_start":13741232,"byte_end":13741260,"line_start":268,"line_end":268,"column_start":5,"column_end":33}},{"value":"/","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.8.4\\src\\net\\udp.rs","byte_start":13741265,"byte_end":13741268,"line_start":269,"line_end":269,"column_start":5,"column_end":8}},{"value":"/ let socket = UdpSocket::bind(\"127.0.0.1:0\".parse()?)?;","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.8.4\\src\\net\\udp.rs","byte_start":13741273,"byte_end":13741331,"line_start":270,"line_end":270,"column_start":5,"column_end":63}},{"value":"/","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.8.4\\src\\net\\udp.rs","byte_start":13741336,"byte_end":13741339,"line_start":271,"line_end":271,"column_start":5,"column_end":8}},{"value":"/ // We must check if the socket is readable before calling recv_from,","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.8.4\\src\\net\\udp.rs","byte_start":13741344,"byte_end":13741416,"line_start":272,"line_end":272,"column_start":5,"column_end":77}},{"value":"/ // or we could run into a WouldBlock error.","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.8.4\\src\\net\\udp.rs","byte_start":13741421,"byte_end":13741468,"line_start":273,"line_end":273,"column_start":5,"column_end":52}},{"value":"/","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.8.4\\src\\net\\udp.rs","byte_start":13741473,"byte_end":13741476,"line_start":274,"line_end":274,"column_start":5,"column_end":8}},{"value":"/ let mut buf = [0; 9];","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.8.4\\src\\net\\udp.rs","byte_start":13741481,"byte_end":13741506,"line_start":275,"line_end":275,"column_start":5,"column_end":30}},{"value":"/ let (num_recv, from_addr) = socket.peek_from(&mut buf)?;","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.8.4\\src\\net\\udp.rs","byte_start":13741511,"byte_end":13741571,"line_start":276,"line_end":276,"column_start":5,"column_end":65}},{"value":"/ println!(\"Received {:?} -> {:?} bytes from {:?}\", buf, num_recv, from_addr);","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.8.4\\src\\net\\udp.rs","byte_start":13741576,"byte_end":13741656,"line_start":277,"line_end":277,"column_start":5,"column_end":85}},{"value":"/ #","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.8.4\\src\\net\\udp.rs","byte_start":13741661,"byte_end":13741666,"line_start":278,"line_end":278,"column_start":5,"column_end":10}},{"value":"/ #    Ok(())","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.8.4\\src\\net\\udp.rs","byte_start":13741671,"byte_end":13741686,"line_start":279,"line_end":279,"column_start":5,"column_end":20}},{"value":"/ # }","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.8.4\\src\\net\\udp.rs","byte_start":13741691,"byte_end":13741698,"line_start":280,"line_end":280,"column_start":5,"column_end":12}},{"value":"/ ```","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.8.4\\src\\net\\udp.rs","byte_start":13741703,"byte_end":13741710,"line_start":281,"line_end":281,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":1822},"span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.8.4\\src\\net\\udp.rs","byte_start":13742002,"byte_end":13742006,"line_start":288,"line_end":288,"column_start":12,"column_end":16},"name":"send","qualname":"<UdpSocket>::send","value":"pub fn send(&Self, &[u8]) -> io::Result<usize>","parent":null,"children":[],"decl_id":null,"docs":" Sends data on the socket to the address previously bound via connect(). On success,\n returns the number of bytes written.\n","sig":null,"attributes":[{"value":"/ Sends data on the socket to the address previously bound via connect(). On success,","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.8.4\\src\\net\\udp.rs","byte_start":13741858,"byte_end":13741945,"line_start":286,"line_end":286,"column_start":5,"column_end":92}},{"value":"/ returns the number of bytes written.","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.8.4\\src\\net\\udp.rs","byte_start":13741950,"byte_end":13741990,"line_start":287,"line_end":287,"column_start":5,"column_end":45}}]},{"kind":"Method","id":{"krate":0,"index":1824},"span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.8.4\\src\\net\\udp.rs","byte_start":13742630,"byte_end":13742634,"line_start":302,"line_end":302,"column_start":12,"column_end":16},"name":"recv","qualname":"<UdpSocket>::recv","value":"pub fn recv(&Self, &mut [u8]) -> io::Result<usize>","parent":null,"children":[],"decl_id":null,"docs":" Receives data from the socket previously bound with connect(). On success, returns\n the number of bytes read.","sig":null,"attributes":[{"value":"/ Receives data from the socket previously bound with connect(). On success, returns","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.8.4\\src\\net\\udp.rs","byte_start":13742110,"byte_end":13742196,"line_start":292,"line_end":292,"column_start":5,"column_end":91}},{"value":"/ the number of bytes read.","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.8.4\\src\\net\\udp.rs","byte_start":13742201,"byte_end":13742230,"line_start":293,"line_end":293,"column_start":5,"column_end":34}},{"value":"/","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.8.4\\src\\net\\udp.rs","byte_start":13742235,"byte_end":13742238,"line_start":294,"line_end":294,"column_start":5,"column_end":8}},{"value":"/ # Notes","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.8.4\\src\\net\\udp.rs","byte_start":13742243,"byte_end":13742254,"line_start":295,"line_end":295,"column_start":5,"column_end":16}},{"value":"/","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.8.4\\src\\net\\udp.rs","byte_start":13742259,"byte_end":13742262,"line_start":296,"line_end":296,"column_start":5,"column_end":8}},{"value":"/ On Windows, if the data is larger than the buffer specified, the buffer","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.8.4\\src\\net\\udp.rs","byte_start":13742267,"byte_end":13742342,"line_start":297,"line_end":297,"column_start":5,"column_end":80}},{"value":"/ is filled with the first part of the data, and recv returns the error","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.8.4\\src\\net\\udp.rs","byte_start":13742347,"byte_end":13742420,"line_start":298,"line_end":298,"column_start":5,"column_end":78}},{"value":"/ WSAEMSGSIZE(10040). The excess data is lost.","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.8.4\\src\\net\\udp.rs","byte_start":13742425,"byte_end":13742473,"line_start":299,"line_end":299,"column_start":5,"column_end":53}},{"value":"/ Make sure to always use a sufficiently large buffer to hold the","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.8.4\\src\\net\\udp.rs","byte_start":13742478,"byte_end":13742545,"line_start":300,"line_end":300,"column_start":5,"column_end":72}},{"value":"/ maximum UDP packet size, which can be up to 65536 bytes in size.","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.8.4\\src\\net\\udp.rs","byte_start":13742550,"byte_end":13742618,"line_start":301,"line_end":301,"column_start":5,"column_end":73}}]},{"kind":"Method","id":{"krate":0,"index":1826},"span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.8.4\\src\\net\\udp.rs","byte_start":13743272,"byte_end":13743276,"line_start":316,"line_end":316,"column_start":12,"column_end":16},"name":"peek","qualname":"<UdpSocket>::peek","value":"pub fn peek(&Self, &mut [u8]) -> io::Result<usize>","parent":null,"children":[],"decl_id":null,"docs":" Receives data from the socket, without removing it from the input queue.\n On success, returns the number of bytes read.","sig":null,"attributes":[{"value":"/ Receives data from the socket, without removing it from the input queue.","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.8.4\\src\\net\\udp.rs","byte_start":13742742,"byte_end":13742818,"line_start":306,"line_end":306,"column_start":5,"column_end":81}},{"value":"/ On success, returns the number of bytes read.","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.8.4\\src\\net\\udp.rs","byte_start":13742823,"byte_end":13742872,"line_start":307,"line_end":307,"column_start":5,"column_end":54}},{"value":"/","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.8.4\\src\\net\\udp.rs","byte_start":13742877,"byte_end":13742880,"line_start":308,"line_end":308,"column_start":5,"column_end":8}},{"value":"/ # Notes","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.8.4\\src\\net\\udp.rs","byte_start":13742885,"byte_end":13742896,"line_start":309,"line_end":309,"column_start":5,"column_end":16}},{"value":"/","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.8.4\\src\\net\\udp.rs","byte_start":13742901,"byte_end":13742904,"line_start":310,"line_end":310,"column_start":5,"column_end":8}},{"value":"/ On Windows, if the data is larger than the buffer specified, the buffer","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.8.4\\src\\net\\udp.rs","byte_start":13742909,"byte_end":13742984,"line_start":311,"line_end":311,"column_start":5,"column_end":80}},{"value":"/ is filled with the first part of the data, and peek returns the error","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.8.4\\src\\net\\udp.rs","byte_start":13742989,"byte_end":13743062,"line_start":312,"line_end":312,"column_start":5,"column_end":78}},{"value":"/ WSAEMSGSIZE(10040). The excess data is lost.","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.8.4\\src\\net\\udp.rs","byte_start":13743067,"byte_end":13743115,"line_start":313,"line_end":313,"column_start":5,"column_end":53}},{"value":"/ Make sure to always use a sufficiently large buffer to hold the","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.8.4\\src\\net\\udp.rs","byte_start":13743120,"byte_end":13743187,"line_start":314,"line_end":314,"column_start":5,"column_end":72}},{"value":"/ maximum UDP packet size, which can be up to 65536 bytes in size.","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.8.4\\src\\net\\udp.rs","byte_start":13743192,"byte_end":13743260,"line_start":315,"line_end":315,"column_start":5,"column_end":73}}]},{"kind":"Method","id":{"krate":0,"index":1828},"span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.8.4\\src\\net\\udp.rs","byte_start":13743770,"byte_end":13743777,"line_start":327,"line_end":327,"column_start":12,"column_end":19},"name":"connect","qualname":"<UdpSocket>::connect","value":"pub fn connect(&Self, SocketAddr) -> io::Result<()>","parent":null,"children":[],"decl_id":null,"docs":" Connects the UDP socket setting the default destination for `send()`\n and limiting packets that are read via `recv` from the address specified\n in `addr`.","sig":null,"attributes":[{"value":"/ Connects the UDP socket setting the default destination for `send()`","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.8.4\\src\\net\\udp.rs","byte_start":13743384,"byte_end":13743456,"line_start":320,"line_end":320,"column_start":5,"column_end":77}},{"value":"/ and limiting packets that are read via `recv` from the address specified","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.8.4\\src\\net\\udp.rs","byte_start":13743461,"byte_end":13743537,"line_start":321,"line_end":321,"column_start":5,"column_end":81}},{"value":"/ in `addr`.","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.8.4\\src\\net\\udp.rs","byte_start":13743542,"byte_end":13743556,"line_start":322,"line_end":322,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.8.4\\src\\net\\udp.rs","byte_start":13743561,"byte_end":13743564,"line_start":323,"line_end":323,"column_start":5,"column_end":8}},{"value":"/ This may return a `WouldBlock` in which case the socket connection","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.8.4\\src\\net\\udp.rs","byte_start":13743569,"byte_end":13743639,"line_start":324,"line_end":324,"column_start":5,"column_end":75}},{"value":"/ cannot be completed immediately, it usually means there are insufficient","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.8.4\\src\\net\\udp.rs","byte_start":13743644,"byte_end":13743720,"line_start":325,"line_end":325,"column_start":5,"column_end":81}},{"value":"/ entries in the routing cache.","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.8.4\\src\\net\\udp.rs","byte_start":13743725,"byte_end":13743758,"line_start":326,"line_end":326,"column_start":5,"column_end":38}}]},{"kind":"Method","id":{"krate":0,"index":1829},"span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.8.4\\src\\net\\udp.rs","byte_start":13744631,"byte_end":13744644,"line_start":355,"line_end":355,"column_start":12,"column_end":25},"name":"set_broadcast","qualname":"<UdpSocket>::set_broadcast","value":"pub fn set_broadcast(&Self, bool) -> io::Result<()>","parent":null,"children":[],"decl_id":null,"docs":" Sets the value of the `SO_BROADCAST` option for this socket.","sig":null,"attributes":[{"value":"/ Sets the value of the `SO_BROADCAST` option for this socket.","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.8.4\\src\\net\\udp.rs","byte_start":13743867,"byte_end":13743931,"line_start":331,"line_end":331,"column_start":5,"column_end":69}},{"value":"/","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.8.4\\src\\net\\udp.rs","byte_start":13743936,"byte_end":13743939,"line_start":332,"line_end":332,"column_start":5,"column_end":8}},{"value":"/ When enabled, this socket is allowed to send packets to a broadcast","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.8.4\\src\\net\\udp.rs","byte_start":13743944,"byte_end":13744015,"line_start":333,"line_end":333,"column_start":5,"column_end":76}},{"value":"/ address.","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.8.4\\src\\net\\udp.rs","byte_start":13744020,"byte_end":13744032,"line_start":334,"line_end":334,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.8.4\\src\\net\\udp.rs","byte_start":13744037,"byte_end":13744040,"line_start":335,"line_end":335,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.8.4\\src\\net\\udp.rs","byte_start":13744045,"byte_end":13744059,"line_start":336,"line_end":336,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.8.4\\src\\net\\udp.rs","byte_start":13744064,"byte_end":13744067,"line_start":337,"line_end":337,"column_start":5,"column_end":8}},{"value":"/ # use std::error::Error;","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.8.4\\src\\net\\udp.rs","byte_start":13744183,"byte_end":13744211,"line_start":340,"line_end":340,"column_start":5,"column_end":33}},{"value":"/ #","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.8.4\\src\\net\\udp.rs","byte_start":13744216,"byte_end":13744221,"line_start":341,"line_end":341,"column_start":5,"column_end":10}},{"value":"/ # fn main() -> Result<(), Box<dyn Error>> {","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.8.4\\src\\net\\udp.rs","byte_start":13744226,"byte_end":13744273,"line_start":342,"line_end":342,"column_start":5,"column_end":52}},{"value":"/ use mio::net::UdpSocket;","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.8.4\\src\\net\\udp.rs","byte_start":13744278,"byte_end":13744306,"line_start":343,"line_end":343,"column_start":5,"column_end":33}},{"value":"/","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.8.4\\src\\net\\udp.rs","byte_start":13744311,"byte_end":13744314,"line_start":344,"line_end":344,"column_start":5,"column_end":8}},{"value":"/ let broadcast_socket = UdpSocket::bind(\"127.0.0.1:0\".parse()?)?;","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.8.4\\src\\net\\udp.rs","byte_start":13744319,"byte_end":13744387,"line_start":345,"line_end":345,"column_start":5,"column_end":73}},{"value":"/ if broadcast_socket.broadcast()? == false {","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.8.4\\src\\net\\udp.rs","byte_start":13744392,"byte_end":13744439,"line_start":346,"line_end":346,"column_start":5,"column_end":52}},{"value":"/     broadcast_socket.set_broadcast(true)?;","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.8.4\\src\\net\\udp.rs","byte_start":13744444,"byte_end":13744490,"line_start":347,"line_end":347,"column_start":5,"column_end":51}},{"value":"/ }","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.8.4\\src\\net\\udp.rs","byte_start":13744495,"byte_end":13744500,"line_start":348,"line_end":348,"column_start":5,"column_end":10}},{"value":"/","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.8.4\\src\\net\\udp.rs","byte_start":13744505,"byte_end":13744508,"line_start":349,"line_end":349,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(broadcast_socket.broadcast()?, true);","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.8.4\\src\\net\\udp.rs","byte_start":13744513,"byte_end":13744565,"line_start":350,"line_end":350,"column_start":5,"column_end":57}},{"value":"/ #","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.8.4\\src\\net\\udp.rs","byte_start":13744570,"byte_end":13744575,"line_start":351,"line_end":351,"column_start":5,"column_end":10}},{"value":"/ #    Ok(())","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.8.4\\src\\net\\udp.rs","byte_start":13744580,"byte_end":13744595,"line_start":352,"line_end":352,"column_start":5,"column_end":20}},{"value":"/ # }","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.8.4\\src\\net\\udp.rs","byte_start":13744600,"byte_end":13744607,"line_start":353,"line_end":353,"column_start":5,"column_end":12}},{"value":"/ ```","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.8.4\\src\\net\\udp.rs","byte_start":13744612,"byte_end":13744619,"line_start":354,"line_end":354,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":1830},"span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.8.4\\src\\net\\udp.rs","byte_start":13745412,"byte_end":13745421,"line_start":381,"line_end":381,"column_start":12,"column_end":21},"name":"broadcast","qualname":"<UdpSocket>::broadcast","value":"pub fn broadcast(&Self) -> io::Result<bool>","parent":null,"children":[],"decl_id":null,"docs":" Gets the value of the `SO_BROADCAST` option for this socket.","sig":null,"attributes":[{"value":"/ Gets the value of the `SO_BROADCAST` option for this socket.","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.8.4\\src\\net\\udp.rs","byte_start":13744730,"byte_end":13744794,"line_start":359,"line_end":359,"column_start":5,"column_end":69}},{"value":"/","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.8.4\\src\\net\\udp.rs","byte_start":13744799,"byte_end":13744802,"line_start":360,"line_end":360,"column_start":5,"column_end":8}},{"value":"/ For more information about this option, see","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.8.4\\src\\net\\udp.rs","byte_start":13744807,"byte_end":13744854,"line_start":361,"line_end":361,"column_start":5,"column_end":52}},{"value":"/ [`set_broadcast`][link].","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.8.4\\src\\net\\udp.rs","byte_start":13744859,"byte_end":13744887,"line_start":362,"line_end":362,"column_start":5,"column_end":33}},{"value":"/","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.8.4\\src\\net\\udp.rs","byte_start":13744892,"byte_end":13744895,"line_start":363,"line_end":363,"column_start":5,"column_end":8}},{"value":"/ [link]: #method.set_broadcast","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.8.4\\src\\net\\udp.rs","byte_start":13744900,"byte_end":13744933,"line_start":364,"line_end":364,"column_start":5,"column_end":38}},{"value":"/","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.8.4\\src\\net\\udp.rs","byte_start":13744938,"byte_end":13744941,"line_start":365,"line_end":365,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.8.4\\src\\net\\udp.rs","byte_start":13744946,"byte_end":13744960,"line_start":366,"line_end":366,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.8.4\\src\\net\\udp.rs","byte_start":13744965,"byte_end":13744968,"line_start":367,"line_end":367,"column_start":5,"column_end":8}},{"value":"/ # use std::error::Error;","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.8.4\\src\\net\\udp.rs","byte_start":13745084,"byte_end":13745112,"line_start":370,"line_end":370,"column_start":5,"column_end":33}},{"value":"/ #","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.8.4\\src\\net\\udp.rs","byte_start":13745117,"byte_end":13745122,"line_start":371,"line_end":371,"column_start":5,"column_end":10}},{"value":"/ # fn main() -> Result<(), Box<dyn Error>> {","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.8.4\\src\\net\\udp.rs","byte_start":13745127,"byte_end":13745174,"line_start":372,"line_end":372,"column_start":5,"column_end":52}},{"value":"/ use mio::net::UdpSocket;","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.8.4\\src\\net\\udp.rs","byte_start":13745179,"byte_end":13745207,"line_start":373,"line_end":373,"column_start":5,"column_end":33}},{"value":"/","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.8.4\\src\\net\\udp.rs","byte_start":13745212,"byte_end":13745215,"line_start":374,"line_end":374,"column_start":5,"column_end":8}},{"value":"/ let broadcast_socket = UdpSocket::bind(\"127.0.0.1:0\".parse()?)?;","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.8.4\\src\\net\\udp.rs","byte_start":13745220,"byte_end":13745288,"line_start":375,"line_end":375,"column_start":5,"column_end":73}},{"value":"/ assert_eq!(broadcast_socket.broadcast()?, false);","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.8.4\\src\\net\\udp.rs","byte_start":13745293,"byte_end":13745346,"line_start":376,"line_end":376,"column_start":5,"column_end":58}},{"value":"/ #","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.8.4\\src\\net\\udp.rs","byte_start":13745351,"byte_end":13745356,"line_start":377,"line_end":377,"column_start":5,"column_end":10}},{"value":"/ #    Ok(())","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.8.4\\src\\net\\udp.rs","byte_start":13745361,"byte_end":13745376,"line_start":378,"line_end":378,"column_start":5,"column_end":20}},{"value":"/ # }","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.8.4\\src\\net\\udp.rs","byte_start":13745381,"byte_end":13745388,"line_start":379,"line_end":379,"column_start":5,"column_end":12}},{"value":"/ ```","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.8.4\\src\\net\\udp.rs","byte_start":13745393,"byte_end":13745400,"line_start":380,"line_end":380,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":1831},"span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.8.4\\src\\net\\udp.rs","byte_start":13745725,"byte_end":13745746,"line_start":389,"line_end":389,"column_start":12,"column_end":33},"name":"set_multicast_loop_v4","qualname":"<UdpSocket>::set_multicast_loop_v4","value":"pub fn set_multicast_loop_v4(&Self, bool) -> io::Result<()>","parent":null,"children":[],"decl_id":null,"docs":" Sets the value of the `IP_MULTICAST_LOOP` option for this socket.","sig":null,"attributes":[{"value":"/ Sets the value of the `IP_MULTICAST_LOOP` option for this socket.","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.8.4\\src\\net\\udp.rs","byte_start":13745493,"byte_end":13745562,"line_start":385,"line_end":385,"column_start":5,"column_end":74}},{"value":"/","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.8.4\\src\\net\\udp.rs","byte_start":13745567,"byte_end":13745570,"line_start":386,"line_end":386,"column_start":5,"column_end":8}},{"value":"/ If enabled, multicast packets will be looped back to the local socket.","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.8.4\\src\\net\\udp.rs","byte_start":13745575,"byte_end":13745649,"line_start":387,"line_end":387,"column_start":5,"column_end":79}},{"value":"/ Note that this may not have any affect on IPv6 sockets.","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.8.4\\src\\net\\udp.rs","byte_start":13745654,"byte_end":13745713,"line_start":388,"line_end":388,"column_start":5,"column_end":64}}]},{"kind":"Method","id":{"krate":0,"index":1832},"span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.8.4\\src\\net\\udp.rs","byte_start":13746076,"byte_end":13746093,"line_start":399,"line_end":399,"column_start":12,"column_end":29},"name":"multicast_loop_v4","qualname":"<UdpSocket>::multicast_loop_v4","value":"pub fn multicast_loop_v4(&Self) -> io::Result<bool>","parent":null,"children":[],"decl_id":null,"docs":" Gets the value of the `IP_MULTICAST_LOOP` option for this socket.","sig":null,"attributes":[{"value":"/ Gets the value of the `IP_MULTICAST_LOOP` option for this socket.","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.8.4\\src\\net\\udp.rs","byte_start":13745840,"byte_end":13745909,"line_start":393,"line_end":393,"column_start":5,"column_end":74}},{"value":"/","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.8.4\\src\\net\\udp.rs","byte_start":13745914,"byte_end":13745917,"line_start":394,"line_end":394,"column_start":5,"column_end":8}},{"value":"/ For more information about this option, see","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.8.4\\src\\net\\udp.rs","byte_start":13745922,"byte_end":13745969,"line_start":395,"line_end":395,"column_start":5,"column_end":52}},{"value":"/ [`set_multicast_loop_v4`][link].","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.8.4\\src\\net\\udp.rs","byte_start":13745974,"byte_end":13746010,"line_start":396,"line_end":396,"column_start":5,"column_end":41}},{"value":"/","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.8.4\\src\\net\\udp.rs","byte_start":13746015,"byte_end":13746018,"line_start":397,"line_end":397,"column_start":5,"column_end":8}},{"value":"/ [link]: #method.set_multicast_loop_v4","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.8.4\\src\\net\\udp.rs","byte_start":13746023,"byte_end":13746064,"line_start":398,"line_end":398,"column_start":5,"column_end":46}}]},{"kind":"Method","id":{"krate":0,"index":1833},"span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.8.4\\src\\net\\udp.rs","byte_start":13746554,"byte_end":13746574,"line_start":410,"line_end":410,"column_start":12,"column_end":32},"name":"set_multicast_ttl_v4","qualname":"<UdpSocket>::set_multicast_ttl_v4","value":"pub fn set_multicast_ttl_v4(&Self, u32) -> io::Result<()>","parent":null,"children":[],"decl_id":null,"docs":" Sets the value of the `IP_MULTICAST_TTL` option for this socket.","sig":null,"attributes":[{"value":"/ Sets the value of the `IP_MULTICAST_TTL` option for this socket.","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.8.4\\src\\net\\udp.rs","byte_start":13746173,"byte_end":13746241,"line_start":403,"line_end":403,"column_start":5,"column_end":73}},{"value":"/","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.8.4\\src\\net\\udp.rs","byte_start":13746246,"byte_end":13746249,"line_start":404,"line_end":404,"column_start":5,"column_end":8}},{"value":"/ Indicates the time-to-live value of outgoing multicast packets for","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.8.4\\src\\net\\udp.rs","byte_start":13746254,"byte_end":13746324,"line_start":405,"line_end":405,"column_start":5,"column_end":75}},{"value":"/ this socket. The default value is 1 which means that multicast packets","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.8.4\\src\\net\\udp.rs","byte_start":13746329,"byte_end":13746403,"line_start":406,"line_end":406,"column_start":5,"column_end":79}},{"value":"/ don't leave the local network unless explicitly requested.","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.8.4\\src\\net\\udp.rs","byte_start":13746408,"byte_end":13746470,"line_start":407,"line_end":407,"column_start":5,"column_end":67}},{"value":"/","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.8.4\\src\\net\\udp.rs","byte_start":13746475,"byte_end":13746478,"line_start":408,"line_end":408,"column_start":5,"column_end":8}},{"value":"/ Note that this may not have any affect on IPv6 sockets.","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.8.4\\src\\net\\udp.rs","byte_start":13746483,"byte_end":13746542,"line_start":409,"line_end":409,"column_start":5,"column_end":64}}]},{"kind":"Method","id":{"krate":0,"index":1834},"span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.8.4\\src\\net\\udp.rs","byte_start":13746901,"byte_end":13746917,"line_start":420,"line_end":420,"column_start":12,"column_end":28},"name":"multicast_ttl_v4","qualname":"<UdpSocket>::multicast_ttl_v4","value":"pub fn multicast_ttl_v4(&Self) -> io::Result<u32>","parent":null,"children":[],"decl_id":null,"docs":" Gets the value of the `IP_MULTICAST_TTL` option for this socket.","sig":null,"attributes":[{"value":"/ Gets the value of the `IP_MULTICAST_TTL` option for this socket.","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.8.4\\src\\net\\udp.rs","byte_start":13746668,"byte_end":13746736,"line_start":414,"line_end":414,"column_start":5,"column_end":73}},{"value":"/","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.8.4\\src\\net\\udp.rs","byte_start":13746741,"byte_end":13746744,"line_start":415,"line_end":415,"column_start":5,"column_end":8}},{"value":"/ For more information about this option, see","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.8.4\\src\\net\\udp.rs","byte_start":13746749,"byte_end":13746796,"line_start":416,"line_end":416,"column_start":5,"column_end":52}},{"value":"/ [`set_multicast_ttl_v4`][link].","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.8.4\\src\\net\\udp.rs","byte_start":13746801,"byte_end":13746836,"line_start":417,"line_end":417,"column_start":5,"column_end":40}},{"value":"/","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.8.4\\src\\net\\udp.rs","byte_start":13746841,"byte_end":13746844,"line_start":418,"line_end":418,"column_start":5,"column_end":8}},{"value":"/ [link]: #method.set_multicast_ttl_v4","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.8.4\\src\\net\\udp.rs","byte_start":13746849,"byte_end":13746889,"line_start":419,"line_end":419,"column_start":5,"column_end":45}}]},{"kind":"Method","id":{"krate":0,"index":1835},"span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.8.4\\src\\net\\udp.rs","byte_start":13747231,"byte_end":13747252,"line_start":428,"line_end":428,"column_start":12,"column_end":33},"name":"set_multicast_loop_v6","qualname":"<UdpSocket>::set_multicast_loop_v6","value":"pub fn set_multicast_loop_v6(&Self, bool) -> io::Result<()>","parent":null,"children":[],"decl_id":null,"docs":" Sets the value of the `IPV6_MULTICAST_LOOP` option for this socket.","sig":null,"attributes":[{"value":"/ Sets the value of the `IPV6_MULTICAST_LOOP` option for this socket.","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.8.4\\src\\net\\udp.rs","byte_start":13746995,"byte_end":13747066,"line_start":424,"line_end":424,"column_start":5,"column_end":76}},{"value":"/","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.8.4\\src\\net\\udp.rs","byte_start":13747071,"byte_end":13747074,"line_start":425,"line_end":425,"column_start":5,"column_end":8}},{"value":"/ Controls whether this socket sees the multicast packets it sends itself.","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.8.4\\src\\net\\udp.rs","byte_start":13747079,"byte_end":13747155,"line_start":426,"line_end":426,"column_start":5,"column_end":81}},{"value":"/ Note that this may not have any affect on IPv4 sockets.","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.8.4\\src\\net\\udp.rs","byte_start":13747160,"byte_end":13747219,"line_start":427,"line_end":427,"column_start":5,"column_end":64}}]},{"kind":"Method","id":{"krate":0,"index":1836},"span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.8.4\\src\\net\\udp.rs","byte_start":13747584,"byte_end":13747601,"line_start":438,"line_end":438,"column_start":12,"column_end":29},"name":"multicast_loop_v6","qualname":"<UdpSocket>::multicast_loop_v6","value":"pub fn multicast_loop_v6(&Self) -> io::Result<bool>","parent":null,"children":[],"decl_id":null,"docs":" Gets the value of the `IPV6_MULTICAST_LOOP` option for this socket.","sig":null,"attributes":[{"value":"/ Gets the value of the `IPV6_MULTICAST_LOOP` option for this socket.","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.8.4\\src\\net\\udp.rs","byte_start":13747346,"byte_end":13747417,"line_start":432,"line_end":432,"column_start":5,"column_end":76}},{"value":"/","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.8.4\\src\\net\\udp.rs","byte_start":13747422,"byte_end":13747425,"line_start":433,"line_end":433,"column_start":5,"column_end":8}},{"value":"/ For more information about this option, see","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.8.4\\src\\net\\udp.rs","byte_start":13747430,"byte_end":13747477,"line_start":434,"line_end":434,"column_start":5,"column_end":52}},{"value":"/ [`set_multicast_loop_v6`][link].","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.8.4\\src\\net\\udp.rs","byte_start":13747482,"byte_end":13747518,"line_start":435,"line_end":435,"column_start":5,"column_end":41}},{"value":"/","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.8.4\\src\\net\\udp.rs","byte_start":13747523,"byte_end":13747526,"line_start":436,"line_end":436,"column_start":5,"column_end":8}},{"value":"/ [link]: #method.set_multicast_loop_v6","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.8.4\\src\\net\\udp.rs","byte_start":13747531,"byte_end":13747572,"line_start":437,"line_end":437,"column_start":5,"column_end":46}}]},{"kind":"Method","id":{"krate":0,"index":1837},"span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.8.4\\src\\net\\udp.rs","byte_start":13748390,"byte_end":13748397,"line_start":466,"line_end":466,"column_start":12,"column_end":19},"name":"set_ttl","qualname":"<UdpSocket>::set_ttl","value":"pub fn set_ttl(&Self, u32) -> io::Result<()>","parent":null,"children":[],"decl_id":null,"docs":" Sets the value for the `IP_TTL` option on this socket.","sig":null,"attributes":[{"value":"/ Sets the value for the `IP_TTL` option on this socket.","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.8.4\\src\\net\\udp.rs","byte_start":13747681,"byte_end":13747739,"line_start":442,"line_end":442,"column_start":5,"column_end":63}},{"value":"/","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.8.4\\src\\net\\udp.rs","byte_start":13747744,"byte_end":13747747,"line_start":443,"line_end":443,"column_start":5,"column_end":8}},{"value":"/ This value sets the time-to-live field that is used in every packet sent","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.8.4\\src\\net\\udp.rs","byte_start":13747752,"byte_end":13747828,"line_start":444,"line_end":444,"column_start":5,"column_end":81}},{"value":"/ from this socket.","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.8.4\\src\\net\\udp.rs","byte_start":13747833,"byte_end":13747854,"line_start":445,"line_end":445,"column_start":5,"column_end":26}},{"value":"/","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.8.4\\src\\net\\udp.rs","byte_start":13747859,"byte_end":13747862,"line_start":446,"line_end":446,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.8.4\\src\\net\\udp.rs","byte_start":13747867,"byte_end":13747881,"line_start":447,"line_end":447,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.8.4\\src\\net\\udp.rs","byte_start":13747886,"byte_end":13747889,"line_start":448,"line_end":448,"column_start":5,"column_end":8}},{"value":"/ # use std::error::Error;","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.8.4\\src\\net\\udp.rs","byte_start":13748005,"byte_end":13748033,"line_start":451,"line_end":451,"column_start":5,"column_end":33}},{"value":"/ #","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.8.4\\src\\net\\udp.rs","byte_start":13748038,"byte_end":13748043,"line_start":452,"line_end":452,"column_start":5,"column_end":10}},{"value":"/ # fn main() -> Result<(), Box<dyn Error>> {","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.8.4\\src\\net\\udp.rs","byte_start":13748048,"byte_end":13748095,"line_start":453,"line_end":453,"column_start":5,"column_end":52}},{"value":"/ use mio::net::UdpSocket;","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.8.4\\src\\net\\udp.rs","byte_start":13748100,"byte_end":13748128,"line_start":454,"line_end":454,"column_start":5,"column_end":33}},{"value":"/","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.8.4\\src\\net\\udp.rs","byte_start":13748133,"byte_end":13748136,"line_start":455,"line_end":455,"column_start":5,"column_end":8}},{"value":"/ let socket = UdpSocket::bind(\"127.0.0.1:0\".parse()?)?;","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.8.4\\src\\net\\udp.rs","byte_start":13748141,"byte_end":13748199,"line_start":456,"line_end":456,"column_start":5,"column_end":63}},{"value":"/ if socket.ttl()? < 255 {","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.8.4\\src\\net\\udp.rs","byte_start":13748204,"byte_end":13748232,"line_start":457,"line_end":457,"column_start":5,"column_end":33}},{"value":"/     socket.set_ttl(255)?;","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.8.4\\src\\net\\udp.rs","byte_start":13748237,"byte_end":13748266,"line_start":458,"line_end":458,"column_start":5,"column_end":34}},{"value":"/ }","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.8.4\\src\\net\\udp.rs","byte_start":13748271,"byte_end":13748276,"line_start":459,"line_end":459,"column_start":5,"column_end":10}},{"value":"/","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.8.4\\src\\net\\udp.rs","byte_start":13748281,"byte_end":13748284,"line_start":460,"line_end":460,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(socket.ttl()?, 255);","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.8.4\\src\\net\\udp.rs","byte_start":13748289,"byte_end":13748324,"line_start":461,"line_end":461,"column_start":5,"column_end":40}},{"value":"/ #","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.8.4\\src\\net\\udp.rs","byte_start":13748329,"byte_end":13748334,"line_start":462,"line_end":462,"column_start":5,"column_end":10}},{"value":"/ #    Ok(())","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.8.4\\src\\net\\udp.rs","byte_start":13748339,"byte_end":13748354,"line_start":463,"line_end":463,"column_start":5,"column_end":20}},{"value":"/ # }","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.8.4\\src\\net\\udp.rs","byte_start":13748359,"byte_end":13748366,"line_start":464,"line_end":464,"column_start":5,"column_end":12}},{"value":"/ ```","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.8.4\\src\\net\\udp.rs","byte_start":13748371,"byte_end":13748378,"line_start":465,"line_end":465,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":1838},"span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.8.4\\src\\net\\udp.rs","byte_start":13749144,"byte_end":13749147,"line_start":493,"line_end":493,"column_start":12,"column_end":15},"name":"ttl","qualname":"<UdpSocket>::ttl","value":"pub fn ttl(&Self) -> io::Result<u32>","parent":null,"children":[],"decl_id":null,"docs":" Gets the value of the `IP_TTL` option for this socket.","sig":null,"attributes":[{"value":"/ Gets the value of the `IP_TTL` option for this socket.","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.8.4\\src\\net\\udp.rs","byte_start":13748478,"byte_end":13748536,"line_start":470,"line_end":470,"column_start":5,"column_end":63}},{"value":"/","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.8.4\\src\\net\\udp.rs","byte_start":13748541,"byte_end":13748544,"line_start":471,"line_end":471,"column_start":5,"column_end":8}},{"value":"/ For more information about this option, see [`set_ttl`][link].","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.8.4\\src\\net\\udp.rs","byte_start":13748549,"byte_end":13748615,"line_start":472,"line_end":472,"column_start":5,"column_end":71}},{"value":"/","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.8.4\\src\\net\\udp.rs","byte_start":13748620,"byte_end":13748623,"line_start":473,"line_end":473,"column_start":5,"column_end":8}},{"value":"/ [link]: #method.set_ttl","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.8.4\\src\\net\\udp.rs","byte_start":13748628,"byte_end":13748655,"line_start":474,"line_end":474,"column_start":5,"column_end":32}},{"value":"/","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.8.4\\src\\net\\udp.rs","byte_start":13748660,"byte_end":13748663,"line_start":475,"line_end":475,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.8.4\\src\\net\\udp.rs","byte_start":13748668,"byte_end":13748682,"line_start":476,"line_end":476,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.8.4\\src\\net\\udp.rs","byte_start":13748687,"byte_end":13748690,"line_start":477,"line_end":477,"column_start":5,"column_end":8}},{"value":"/ # use std::error::Error;","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.8.4\\src\\net\\udp.rs","byte_start":13748806,"byte_end":13748834,"line_start":480,"line_end":480,"column_start":5,"column_end":33}},{"value":"/ #","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.8.4\\src\\net\\udp.rs","byte_start":13748839,"byte_end":13748844,"line_start":481,"line_end":481,"column_start":5,"column_end":10}},{"value":"/ # fn main() -> Result<(), Box<dyn Error>> {","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.8.4\\src\\net\\udp.rs","byte_start":13748849,"byte_end":13748896,"line_start":482,"line_end":482,"column_start":5,"column_end":52}},{"value":"/ use mio::net::UdpSocket;","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.8.4\\src\\net\\udp.rs","byte_start":13748901,"byte_end":13748929,"line_start":483,"line_end":483,"column_start":5,"column_end":33}},{"value":"/","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.8.4\\src\\net\\udp.rs","byte_start":13748934,"byte_end":13748937,"line_start":484,"line_end":484,"column_start":5,"column_end":8}},{"value":"/ let socket = UdpSocket::bind(\"127.0.0.1:0\".parse()?)?;","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.8.4\\src\\net\\udp.rs","byte_start":13748942,"byte_end":13749000,"line_start":485,"line_end":485,"column_start":5,"column_end":63}},{"value":"/ socket.set_ttl(255)?;","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.8.4\\src\\net\\udp.rs","byte_start":13749005,"byte_end":13749030,"line_start":486,"line_end":486,"column_start":5,"column_end":30}},{"value":"/","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.8.4\\src\\net\\udp.rs","byte_start":13749035,"byte_end":13749038,"line_start":487,"line_end":487,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(socket.ttl()?, 255);","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.8.4\\src\\net\\udp.rs","byte_start":13749043,"byte_end":13749078,"line_start":488,"line_end":488,"column_start":5,"column_end":40}},{"value":"/ #","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.8.4\\src\\net\\udp.rs","byte_start":13749083,"byte_end":13749088,"line_start":489,"line_end":489,"column_start":5,"column_end":10}},{"value":"/ #    Ok(())","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.8.4\\src\\net\\udp.rs","byte_start":13749093,"byte_end":13749108,"line_start":490,"line_end":490,"column_start":5,"column_end":20}},{"value":"/ # }","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.8.4\\src\\net\\udp.rs","byte_start":13749113,"byte_end":13749120,"line_start":491,"line_end":491,"column_start":5,"column_end":12}},{"value":"/ ```","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.8.4\\src\\net\\udp.rs","byte_start":13749125,"byte_end":13749132,"line_start":492,"line_end":492,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":1839},"span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.8.4\\src\\net\\udp.rs","byte_start":13749691,"byte_end":13749708,"line_start":505,"line_end":505,"column_start":12,"column_end":29},"name":"join_multicast_v4","qualname":"<UdpSocket>::join_multicast_v4","value":"pub fn join_multicast_v4(&Self, &Ipv4Addr, &Ipv4Addr) -> io::Result<()>","parent":null,"children":[],"decl_id":null,"docs":" Executes an operation of the `IP_ADD_MEMBERSHIP` type.","sig":null,"attributes":[{"value":"/ Executes an operation of the `IP_ADD_MEMBERSHIP` type.","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.8.4\\src\\net\\udp.rs","byte_start":13749212,"byte_end":13749270,"line_start":497,"line_end":497,"column_start":5,"column_end":63}},{"value":"/","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.8.4\\src\\net\\udp.rs","byte_start":13749275,"byte_end":13749278,"line_start":498,"line_end":498,"column_start":5,"column_end":8}},{"value":"/ This function specifies a new multicast group for this socket to join.","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.8.4\\src\\net\\udp.rs","byte_start":13749283,"byte_end":13749357,"line_start":499,"line_end":499,"column_start":5,"column_end":79}},{"value":"/ The address must be a valid multicast address, and `interface` is the","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.8.4\\src\\net\\udp.rs","byte_start":13749362,"byte_end":13749435,"line_start":500,"line_end":500,"column_start":5,"column_end":78}},{"value":"/ address of the local interface with which the system should join the","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.8.4\\src\\net\\udp.rs","byte_start":13749440,"byte_end":13749512,"line_start":501,"line_end":501,"column_start":5,"column_end":77}},{"value":"/ multicast group. If it's equal to `INADDR_ANY` then an appropriate","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.8.4\\src\\net\\udp.rs","byte_start":13749517,"byte_end":13749587,"line_start":502,"line_end":502,"column_start":5,"column_end":75}},{"value":"/ interface is chosen by the system.","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.8.4\\src\\net\\udp.rs","byte_start":13749592,"byte_end":13749630,"line_start":503,"line_end":503,"column_start":5,"column_end":43}},{"value":"allow(clippy :: trivially_copy_pass_by_ref)","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.8.4\\src\\net\\udp.rs","byte_start":13749635,"byte_end":13749679,"line_start":504,"line_end":504,"column_start":5,"column_end":49}}]},{"kind":"Method","id":{"krate":0,"index":1840},"span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.8.4\\src\\net\\udp.rs","byte_start":13750215,"byte_end":13750232,"line_start":515,"line_end":515,"column_start":12,"column_end":29},"name":"join_multicast_v6","qualname":"<UdpSocket>::join_multicast_v6","value":"pub fn join_multicast_v6(&Self, &Ipv6Addr, u32) -> io::Result<()>","parent":null,"children":[],"decl_id":null,"docs":" Executes an operation of the `IPV6_ADD_MEMBERSHIP` type.","sig":null,"attributes":[{"value":"/ Executes an operation of the `IPV6_ADD_MEMBERSHIP` type.","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.8.4\\src\\net\\udp.rs","byte_start":13749850,"byte_end":13749910,"line_start":509,"line_end":509,"column_start":5,"column_end":65}},{"value":"/","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.8.4\\src\\net\\udp.rs","byte_start":13749915,"byte_end":13749918,"line_start":510,"line_end":510,"column_start":5,"column_end":8}},{"value":"/ This function specifies a new multicast group for this socket to join.","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.8.4\\src\\net\\udp.rs","byte_start":13749923,"byte_end":13749997,"line_start":511,"line_end":511,"column_start":5,"column_end":79}},{"value":"/ The address must be a valid multicast address, and `interface` is the","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.8.4\\src\\net\\udp.rs","byte_start":13750002,"byte_end":13750075,"line_start":512,"line_end":512,"column_start":5,"column_end":78}},{"value":"/ index of the interface to join/leave (or 0 to indicate any interface).","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.8.4\\src\\net\\udp.rs","byte_start":13750080,"byte_end":13750154,"line_start":513,"line_end":513,"column_start":5,"column_end":79}},{"value":"allow(clippy :: trivially_copy_pass_by_ref)","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.8.4\\src\\net\\udp.rs","byte_start":13750159,"byte_end":13750203,"line_start":514,"line_end":514,"column_start":5,"column_end":49}}]},{"kind":"Method","id":{"krate":0,"index":1841},"span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.8.4\\src\\net\\udp.rs","byte_start":13750635,"byte_end":13750653,"line_start":526,"line_end":526,"column_start":12,"column_end":30},"name":"leave_multicast_v4","qualname":"<UdpSocket>::leave_multicast_v4","value":"pub fn leave_multicast_v4(&Self, &Ipv4Addr, &Ipv4Addr) -> io::Result<()>","parent":null,"children":[],"decl_id":null,"docs":" Executes an operation of the `IP_DROP_MEMBERSHIP` type.","sig":null,"attributes":[{"value":"/ Executes an operation of the `IP_DROP_MEMBERSHIP` type.","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.8.4\\src\\net\\udp.rs","byte_start":13750368,"byte_end":13750427,"line_start":519,"line_end":519,"column_start":5,"column_end":64}},{"value":"/","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.8.4\\src\\net\\udp.rs","byte_start":13750432,"byte_end":13750435,"line_start":520,"line_end":520,"column_start":5,"column_end":8}},{"value":"/ For more information about this option, see","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.8.4\\src\\net\\udp.rs","byte_start":13750440,"byte_end":13750487,"line_start":521,"line_end":521,"column_start":5,"column_end":52}},{"value":"/ [`join_multicast_v4`][link].","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.8.4\\src\\net\\udp.rs","byte_start":13750492,"byte_end":13750524,"line_start":522,"line_end":522,"column_start":5,"column_end":37}},{"value":"/","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.8.4\\src\\net\\udp.rs","byte_start":13750529,"byte_end":13750532,"line_start":523,"line_end":523,"column_start":5,"column_end":8}},{"value":"/ [link]: #method.join_multicast_v4","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.8.4\\src\\net\\udp.rs","byte_start":13750537,"byte_end":13750574,"line_start":524,"line_end":524,"column_start":5,"column_end":42}},{"value":"allow(clippy :: trivially_copy_pass_by_ref)","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.8.4\\src\\net\\udp.rs","byte_start":13750579,"byte_end":13750623,"line_start":525,"line_end":525,"column_start":5,"column_end":49}}]},{"kind":"Method","id":{"krate":0,"index":1842},"span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.8.4\\src\\net\\udp.rs","byte_start":13751065,"byte_end":13751083,"line_start":537,"line_end":537,"column_start":12,"column_end":30},"name":"leave_multicast_v6","qualname":"<UdpSocket>::leave_multicast_v6","value":"pub fn leave_multicast_v6(&Self, &Ipv6Addr, u32) -> io::Result<()>","parent":null,"children":[],"decl_id":null,"docs":" Executes an operation of the `IPV6_DROP_MEMBERSHIP` type.","sig":null,"attributes":[{"value":"/ Executes an operation of the `IPV6_DROP_MEMBERSHIP` type.","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.8.4\\src\\net\\udp.rs","byte_start":13750796,"byte_end":13750857,"line_start":530,"line_end":530,"column_start":5,"column_end":66}},{"value":"/","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.8.4\\src\\net\\udp.rs","byte_start":13750862,"byte_end":13750865,"line_start":531,"line_end":531,"column_start":5,"column_end":8}},{"value":"/ For more information about this option, see","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.8.4\\src\\net\\udp.rs","byte_start":13750870,"byte_end":13750917,"line_start":532,"line_end":532,"column_start":5,"column_end":52}},{"value":"/ [`join_multicast_v6`][link].","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.8.4\\src\\net\\udp.rs","byte_start":13750922,"byte_end":13750954,"line_start":533,"line_end":533,"column_start":5,"column_end":37}},{"value":"/","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.8.4\\src\\net\\udp.rs","byte_start":13750959,"byte_end":13750962,"line_start":534,"line_end":534,"column_start":5,"column_end":8}},{"value":"/ [link]: #method.join_multicast_v6","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.8.4\\src\\net\\udp.rs","byte_start":13750967,"byte_end":13751004,"line_start":535,"line_end":535,"column_start":5,"column_end":42}},{"value":"allow(clippy :: trivially_copy_pass_by_ref)","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.8.4\\src\\net\\udp.rs","byte_start":13751009,"byte_end":13751053,"line_start":536,"line_end":536,"column_start":5,"column_end":49}}]},{"kind":"Method","id":{"krate":0,"index":1843},"span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.8.4\\src\\net\\udp.rs","byte_start":13751342,"byte_end":13751349,"line_start":543,"line_end":543,"column_start":12,"column_end":19},"name":"only_v6","qualname":"<UdpSocket>::only_v6","value":"pub fn only_v6(&Self) -> io::Result<bool>","parent":null,"children":[],"decl_id":null,"docs":" Get the value of the `IPV6_V6ONLY` option on this socket.\n","sig":null,"attributes":[{"value":"/ Get the value of the `IPV6_V6ONLY` option on this socket.","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.8.4\\src\\net\\udp.rs","byte_start":13751220,"byte_end":13751281,"line_start":541,"line_end":541,"column_start":5,"column_end":66}},{"value":"allow(clippy :: trivially_copy_pass_by_ref)","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.8.4\\src\\net\\udp.rs","byte_start":13751286,"byte_end":13751330,"line_start":542,"line_end":542,"column_start":5,"column_end":49}}]},{"kind":"Method","id":{"krate":0,"index":1844},"span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.8.4\\src\\net\\udp.rs","byte_start":13751682,"byte_end":13751692,"line_start":552,"line_end":552,"column_start":12,"column_end":22},"name":"take_error","qualname":"<UdpSocket>::take_error","value":"pub fn take_error(&Self) -> io::Result<Option<io::Error>>","parent":null,"children":[],"decl_id":null,"docs":" Get the value of the `SO_ERROR` option on this socket.","sig":null,"attributes":[{"value":"/ Get the value of the `SO_ERROR` option on this socket.","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.8.4\\src\\net\\udp.rs","byte_start":13751429,"byte_end":13751487,"line_start":547,"line_end":547,"column_start":5,"column_end":63}},{"value":"/","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.8.4\\src\\net\\udp.rs","byte_start":13751492,"byte_end":13751495,"line_start":548,"line_end":548,"column_start":5,"column_end":8}},{"value":"/ This will retrieve the stored error in the underlying socket, clearing","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.8.4\\src\\net\\udp.rs","byte_start":13751500,"byte_end":13751574,"line_start":549,"line_end":549,"column_start":5,"column_end":79}},{"value":"/ the field in the process. This can be useful for checking errors between","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.8.4\\src\\net\\udp.rs","byte_start":13751579,"byte_end":13751655,"line_start":550,"line_end":550,"column_start":5,"column_end":81}},{"value":"/ calls.","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.8.4\\src\\net\\udp.rs","byte_start":13751660,"byte_end":13751670,"line_start":551,"line_end":551,"column_start":5,"column_end":15}}]},{"kind":"Method","id":{"krate":0,"index":1845},"span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.8.4\\src\\net\\udp.rs","byte_start":13753687,"byte_end":13753693,"line_start":607,"line_end":607,"column_start":12,"column_end":18},"name":"try_io","qualname":"<UdpSocket>::try_io","value":"pub fn try_io<F, T>(&Self, F) -> io::Result<T> where F: FnOnce() ->\nio::Result<T>","parent":null,"children":[],"decl_id":null,"docs":" Execute an I/O operation ensuring that the socket receives more events\n if it hits a [`WouldBlock`] error.","sig":null,"attributes":[{"value":"/ Execute an I/O operation ensuring that the socket receives more events","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.8.4\\src\\net\\udp.rs","byte_start":13751778,"byte_end":13751852,"line_start":556,"line_end":556,"column_start":5,"column_end":79}},{"value":"/ if it hits a [`WouldBlock`] error.","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.8.4\\src\\net\\udp.rs","byte_start":13751857,"byte_end":13751895,"line_start":557,"line_end":557,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.8.4\\src\\net\\udp.rs","byte_start":13751900,"byte_end":13751903,"line_start":558,"line_end":558,"column_start":5,"column_end":8}},{"value":"/ # Notes","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.8.4\\src\\net\\udp.rs","byte_start":13751908,"byte_end":13751919,"line_start":559,"line_end":559,"column_start":5,"column_end":16}},{"value":"/","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.8.4\\src\\net\\udp.rs","byte_start":13751924,"byte_end":13751927,"line_start":560,"line_end":560,"column_start":5,"column_end":8}},{"value":"/ This method is required to be called for **all** I/O operations to","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.8.4\\src\\net\\udp.rs","byte_start":13751932,"byte_end":13752002,"line_start":561,"line_end":561,"column_start":5,"column_end":75}},{"value":"/ ensure the user will receive events once the socket is ready again after","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.8.4\\src\\net\\udp.rs","byte_start":13752007,"byte_end":13752083,"line_start":562,"line_end":562,"column_start":5,"column_end":81}},{"value":"/ returning a [`WouldBlock`] error.","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.8.4\\src\\net\\udp.rs","byte_start":13752088,"byte_end":13752125,"line_start":563,"line_end":563,"column_start":5,"column_end":42}},{"value":"/","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.8.4\\src\\net\\udp.rs","byte_start":13752130,"byte_end":13752133,"line_start":564,"line_end":564,"column_start":5,"column_end":8}},{"value":"/ [`WouldBlock`]: io::ErrorKind::WouldBlock","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.8.4\\src\\net\\udp.rs","byte_start":13752138,"byte_end":13752183,"line_start":565,"line_end":565,"column_start":5,"column_end":50}},{"value":"/","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.8.4\\src\\net\\udp.rs","byte_start":13752188,"byte_end":13752191,"line_start":566,"line_end":566,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.8.4\\src\\net\\udp.rs","byte_start":13752196,"byte_end":13752210,"line_start":567,"line_end":567,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.8.4\\src\\net\\udp.rs","byte_start":13752215,"byte_end":13752218,"line_start":568,"line_end":568,"column_start":5,"column_end":8}},{"value":"/ # use std::error::Error;","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.8.4\\src\\net\\udp.rs","byte_start":13752308,"byte_end":13752336,"line_start":571,"line_end":571,"column_start":5,"column_end":33}},{"value":"/ #","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.8.4\\src\\net\\udp.rs","byte_start":13752341,"byte_end":13752346,"line_start":572,"line_end":572,"column_start":5,"column_end":10}},{"value":"/ # fn main() -> Result<(), Box<dyn Error>> {","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.8.4\\src\\net\\udp.rs","byte_start":13752351,"byte_end":13752398,"line_start":573,"line_end":573,"column_start":5,"column_end":52}},{"value":"/ use std::io;","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.8.4\\src\\net\\udp.rs","byte_start":13752403,"byte_end":13752419,"line_start":574,"line_end":574,"column_start":5,"column_end":21}},{"value":"/ #[cfg(unix)]","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.8.4\\src\\net\\udp.rs","byte_start":13752424,"byte_end":13752440,"line_start":575,"line_end":575,"column_start":5,"column_end":21}},{"value":"/ use std::os::unix::io::AsRawFd;","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.8.4\\src\\net\\udp.rs","byte_start":13752445,"byte_end":13752480,"line_start":576,"line_end":576,"column_start":5,"column_end":40}},{"value":"/ #[cfg(windows)]","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.8.4\\src\\net\\udp.rs","byte_start":13752485,"byte_end":13752504,"line_start":577,"line_end":577,"column_start":5,"column_end":24}},{"value":"/ use std::os::windows::io::AsRawSocket;","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.8.4\\src\\net\\udp.rs","byte_start":13752509,"byte_end":13752551,"line_start":578,"line_end":578,"column_start":5,"column_end":47}},{"value":"/ use mio::net::UdpSocket;","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.8.4\\src\\net\\udp.rs","byte_start":13752556,"byte_end":13752584,"line_start":579,"line_end":579,"column_start":5,"column_end":33}},{"value":"/","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.8.4\\src\\net\\udp.rs","byte_start":13752589,"byte_end":13752592,"line_start":580,"line_end":580,"column_start":5,"column_end":8}},{"value":"/ let address = \"127.0.0.1:8080\".parse().unwrap();","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.8.4\\src\\net\\udp.rs","byte_start":13752597,"byte_end":13752649,"line_start":581,"line_end":581,"column_start":5,"column_end":57}},{"value":"/ let dgram = UdpSocket::bind(address)?;","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.8.4\\src\\net\\udp.rs","byte_start":13752654,"byte_end":13752696,"line_start":582,"line_end":582,"column_start":5,"column_end":47}},{"value":"/","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.8.4\\src\\net\\udp.rs","byte_start":13752701,"byte_end":13752704,"line_start":583,"line_end":583,"column_start":5,"column_end":8}},{"value":"/ // Wait until the dgram is readable...","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.8.4\\src\\net\\udp.rs","byte_start":13752709,"byte_end":13752751,"line_start":584,"line_end":584,"column_start":5,"column_end":47}},{"value":"/","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.8.4\\src\\net\\udp.rs","byte_start":13752756,"byte_end":13752759,"line_start":585,"line_end":585,"column_start":5,"column_end":8}},{"value":"/ // Read from the dgram using a direct libc call, of course the","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.8.4\\src\\net\\udp.rs","byte_start":13752764,"byte_end":13752830,"line_start":586,"line_end":586,"column_start":5,"column_end":71}},{"value":"/ // `io::Read` implementation would be easier to use.","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.8.4\\src\\net\\udp.rs","byte_start":13752835,"byte_end":13752891,"line_start":587,"line_end":587,"column_start":5,"column_end":61}},{"value":"/ let mut buf = [0; 512];","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.8.4\\src\\net\\udp.rs","byte_start":13752896,"byte_end":13752923,"line_start":588,"line_end":588,"column_start":5,"column_end":32}},{"value":"/ let n = dgram.try_io(|| {","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.8.4\\src\\net\\udp.rs","byte_start":13752928,"byte_end":13752957,"line_start":589,"line_end":589,"column_start":5,"column_end":34}},{"value":"/     let buf_ptr = &mut buf as *mut _ as *mut _;","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.8.4\\src\\net\\udp.rs","byte_start":13752962,"byte_end":13753013,"line_start":590,"line_end":590,"column_start":5,"column_end":56}},{"value":"/     #[cfg(unix)]","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.8.4\\src\\net\\udp.rs","byte_start":13753018,"byte_end":13753038,"line_start":591,"line_end":591,"column_start":5,"column_end":25}},{"value":"/     let res = unsafe { libc::recv(dgram.as_raw_fd(), buf_ptr, buf.len(), 0) };","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.8.4\\src\\net\\udp.rs","byte_start":13753043,"byte_end":13753125,"line_start":592,"line_end":592,"column_start":5,"column_end":87}},{"value":"/     #[cfg(windows)]","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.8.4\\src\\net\\udp.rs","byte_start":13753130,"byte_end":13753153,"line_start":593,"line_end":593,"column_start":5,"column_end":28}},{"value":"/     let res = unsafe { libc::recvfrom(dgram.as_raw_socket() as usize, buf_ptr, buf.len() as i32, 0, std::ptr::null_mut(), std::ptr::null_mut()) };","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.8.4\\src\\net\\udp.rs","byte_start":13753158,"byte_end":13753308,"line_start":594,"line_end":594,"column_start":5,"column_end":155}},{"value":"/     if res != -1 {","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.8.4\\src\\net\\udp.rs","byte_start":13753313,"byte_end":13753335,"line_start":595,"line_end":595,"column_start":5,"column_end":27}},{"value":"/         Ok(res as usize)","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.8.4\\src\\net\\udp.rs","byte_start":13753340,"byte_end":13753368,"line_start":596,"line_end":596,"column_start":5,"column_end":33}},{"value":"/     } else {","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.8.4\\src\\net\\udp.rs","byte_start":13753373,"byte_end":13753389,"line_start":597,"line_end":597,"column_start":5,"column_end":21}},{"value":"/         // If EAGAIN or EWOULDBLOCK is set by libc::recv, the closure","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.8.4\\src\\net\\udp.rs","byte_start":13753394,"byte_end":13753467,"line_start":598,"line_end":598,"column_start":5,"column_end":78}},{"value":"/         // should return `WouldBlock` error.","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.8.4\\src\\net\\udp.rs","byte_start":13753472,"byte_end":13753520,"line_start":599,"line_end":599,"column_start":5,"column_end":53}},{"value":"/         Err(io::Error::last_os_error())","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.8.4\\src\\net\\udp.rs","byte_start":13753525,"byte_end":13753568,"line_start":600,"line_end":600,"column_start":5,"column_end":48}},{"value":"/     }","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.8.4\\src\\net\\udp.rs","byte_start":13753573,"byte_end":13753582,"line_start":601,"line_end":601,"column_start":5,"column_end":14}},{"value":"/ })?;","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.8.4\\src\\net\\udp.rs","byte_start":13753587,"byte_end":13753595,"line_start":602,"line_end":602,"column_start":5,"column_end":13}},{"value":"/ eprintln!(\"read {} bytes\", n);","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.8.4\\src\\net\\udp.rs","byte_start":13753600,"byte_end":13753634,"line_start":603,"line_end":603,"column_start":5,"column_end":39}},{"value":"/ # Ok(())","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.8.4\\src\\net\\udp.rs","byte_start":13753639,"byte_end":13753651,"line_start":604,"line_end":604,"column_start":5,"column_end":17}},{"value":"/ # }","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.8.4\\src\\net\\udp.rs","byte_start":13753656,"byte_end":13753663,"line_start":605,"line_end":605,"column_start":5,"column_end":12}},{"value":"/ ```","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.8.4\\src\\net\\udp.rs","byte_start":13753668,"byte_end":13753675,"line_start":606,"line_end":606,"column_start":5,"column_end":12}}]},{"kind":"Mod","id":{"krate":0,"index":234},"span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.8.4\\src\\lib.rs","byte_start":2082,"byte_end":2089,"line_start":90,"line_end":90,"column_start":9,"column_end":16},"name":"windows","qualname":"::windows","value":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.8.4\\src\\lib.rs","parent":null,"children":[{"krate":0,"index":235}],"decl_id":null,"docs":" Windows only extensions.\n","sig":null,"attributes":[{"value":"cfg(all(windows, feature = \"os-ext\"))","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.8.4\\src\\lib.rs","byte_start":1969,"byte_end":2009,"line_start":88,"line_end":88,"column_start":1,"column_end":41}},{"value":"/ Windows only extensions.","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.8.4\\src\\lib.rs","byte_start":2096,"byte_end":2124,"line_start":91,"line_end":91,"column_start":5,"column_end":33}}]},{"kind":"Mod","id":{"krate":0,"index":238},"span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.8.4\\src\\lib.rs","byte_start":2184,"byte_end":2192,"line_start":96,"line_end":96,"column_start":9,"column_end":17},"name":"features","qualname":"::features","value":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.8.4\\src\\lib.rs","parent":null,"children":[],"decl_id":null,"docs":" # Mio's optional features.","sig":null,"attributes":[{"value":"/ # Mio's optional features.","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.8.4\\src\\lib.rs","byte_start":2199,"byte_end":2229,"line_start":97,"line_end":97,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.8.4\\src\\lib.rs","byte_start":2234,"byte_end":2237,"line_start":98,"line_end":98,"column_start":5,"column_end":8}},{"value":"/ This document describes the available features in Mio.","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.8.4\\src\\lib.rs","byte_start":2242,"byte_end":2300,"line_start":99,"line_end":99,"column_start":5,"column_end":63}},{"value":"/","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.8.4\\src\\lib.rs","byte_start":2305,"byte_end":2308,"line_start":100,"line_end":100,"column_start":5,"column_end":8}},{"value":"/","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.8.4\\src\\lib.rs","byte_start":2459,"byte_end":2462,"line_start":103,"line_end":103,"column_start":5,"column_end":8}},{"value":"/ Mio by default provides only a shell implementation that `panic!`s the","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.8.4\\src\\lib.rs","byte_start":2467,"byte_end":2541,"line_start":104,"line_end":104,"column_start":5,"column_end":79}},{"value":"/ moment it is actually run. To run it requires OS support, this is","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.8.4\\src\\lib.rs","byte_start":2546,"byte_end":2615,"line_start":105,"line_end":105,"column_start":5,"column_end":74}},{"value":"/ enabled by activating the `os-poll` feature.","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.8.4\\src\\lib.rs","byte_start":2620,"byte_end":2668,"line_start":106,"line_end":106,"column_start":5,"column_end":53}},{"value":"/","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.8.4\\src\\lib.rs","byte_start":2673,"byte_end":2676,"line_start":107,"line_end":107,"column_start":5,"column_end":8}},{"value":"/ This makes `Poll`, `Registry` and `Waker` functional.","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.8.4\\src\\lib.rs","byte_start":2681,"byte_end":2738,"line_start":108,"line_end":108,"column_start":5,"column_end":62}},{"value":"/","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.8.4\\src\\lib.rs","byte_start":2743,"byte_end":2746,"line_start":109,"line_end":109,"column_start":5,"column_end":8}},{"value":"/","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.8.4\\src\\lib.rs","byte_start":2893,"byte_end":2896,"line_start":112,"line_end":112,"column_start":5,"column_end":8}},{"value":"/ `os-ext` enables additional OS specific facilities. These facilities can","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.8.4\\src\\lib.rs","byte_start":2901,"byte_end":2977,"line_start":113,"line_end":113,"column_start":5,"column_end":81}},{"value":"/ be found in the `unix` and `windows` module.","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.8.4\\src\\lib.rs","byte_start":2982,"byte_end":3030,"line_start":114,"line_end":114,"column_start":5,"column_end":53}},{"value":"/","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.8.4\\src\\lib.rs","byte_start":3035,"byte_end":3038,"line_start":115,"line_end":115,"column_start":5,"column_end":8}},{"value":"/","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.8.4\\src\\lib.rs","byte_start":3189,"byte_end":3192,"line_start":118,"line_end":118,"column_start":5,"column_end":8}},{"value":"/ The `net` feature enables networking primitives in the `net` module.","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.8.4\\src\\lib.rs","byte_start":3197,"byte_end":3269,"line_start":119,"line_end":119,"column_start":5,"column_end":77}}]},{"kind":"Mod","id":{"krate":0,"index":239},"span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.8.4\\src\\lib.rs","byte_start":3281,"byte_end":3286,"line_start":122,"line_end":122,"column_start":9,"column_end":14},"name":"guide","qualname":"::guide","value":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.8.4\\src\\lib.rs","parent":null,"children":[],"decl_id":null,"docs":" # Getting started guide.","sig":null,"attributes":[{"value":"/ # Getting started guide.","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.8.4\\src\\lib.rs","byte_start":3293,"byte_end":3321,"line_start":123,"line_end":123,"column_start":5,"column_end":33}},{"value":"/","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.8.4\\src\\lib.rs","byte_start":3326,"byte_end":3329,"line_start":124,"line_end":124,"column_start":5,"column_end":8}},{"value":"/ In this guide we'll do the following:","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.8.4\\src\\lib.rs","byte_start":3334,"byte_end":3375,"line_start":125,"line_end":125,"column_start":5,"column_end":46}},{"value":"/","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.8.4\\src\\lib.rs","byte_start":3380,"byte_end":3383,"line_start":126,"line_end":126,"column_start":5,"column_end":8}},{"value":"/ 1. Create a [`Poll`] instance (and learn what it is).","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.8.4\\src\\lib.rs","byte_start":3388,"byte_end":3445,"line_start":127,"line_end":127,"column_start":5,"column_end":62}},{"value":"/ 2. Register an [event source].","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.8.4\\src\\lib.rs","byte_start":3450,"byte_end":3484,"line_start":128,"line_end":128,"column_start":5,"column_end":39}},{"value":"/ 3. Create an event loop.","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.8.4\\src\\lib.rs","byte_start":3489,"byte_end":3517,"line_start":129,"line_end":129,"column_start":5,"column_end":33}},{"value":"/","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.8.4\\src\\lib.rs","byte_start":3522,"byte_end":3525,"line_start":130,"line_end":130,"column_start":5,"column_end":8}},{"value":"/ At the end you'll have a very small (but quick) TCP server that accepts","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.8.4\\src\\lib.rs","byte_start":3530,"byte_end":3605,"line_start":131,"line_end":131,"column_start":5,"column_end":80}},{"value":"/ connections and then drops (disconnects) them.","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.8.4\\src\\lib.rs","byte_start":3610,"byte_end":3660,"line_start":132,"line_end":132,"column_start":5,"column_end":55}},{"value":"/","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.8.4\\src\\lib.rs","byte_start":3665,"byte_end":3668,"line_start":133,"line_end":133,"column_start":5,"column_end":8}},{"value":"/ ## 1. Creating a `Poll` instance","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.8.4\\src\\lib.rs","byte_start":3673,"byte_end":3709,"line_start":134,"line_end":134,"column_start":5,"column_end":41}},{"value":"/","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.8.4\\src\\lib.rs","byte_start":3714,"byte_end":3717,"line_start":135,"line_end":135,"column_start":5,"column_end":8}},{"value":"/ Using Mio starts by creating a [`Poll`] instance, which monitors events","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.8.4\\src\\lib.rs","byte_start":3722,"byte_end":3797,"line_start":136,"line_end":136,"column_start":5,"column_end":80}},{"value":"/ from the OS and puts them into [`Events`]. This allows us to execute I/O","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.8.4\\src\\lib.rs","byte_start":3802,"byte_end":3878,"line_start":137,"line_end":137,"column_start":5,"column_end":81}},{"value":"/ operations based on what operations are ready.","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.8.4\\src\\lib.rs","byte_start":3883,"byte_end":3933,"line_start":138,"line_end":138,"column_start":5,"column_end":55}},{"value":"/","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.8.4\\src\\lib.rs","byte_start":3938,"byte_end":3941,"line_start":139,"line_end":139,"column_start":5,"column_end":8}},{"value":"/ [`Poll`]: ../struct.Poll.html","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.8.4\\src\\lib.rs","byte_start":3946,"byte_end":3979,"line_start":140,"line_end":140,"column_start":5,"column_end":38}},{"value":"/ [`Events`]: ../event/struct.Events.html","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.8.4\\src\\lib.rs","byte_start":3984,"byte_end":4027,"line_start":141,"line_end":141,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.8.4\\src\\lib.rs","byte_start":4032,"byte_end":4035,"line_start":142,"line_end":142,"column_start":5,"column_end":8}},{"value":"/ # use mio::{Poll, Events};","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.8.4\\src\\lib.rs","byte_start":4153,"byte_end":4183,"line_start":145,"line_end":145,"column_start":5,"column_end":35}},{"value":"/ # fn main() -> std::io::Result<()> {","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.8.4\\src\\lib.rs","byte_start":4188,"byte_end":4228,"line_start":146,"line_end":146,"column_start":5,"column_end":45}},{"value":"/ // `Poll` allows for polling of readiness events.","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.8.4\\src\\lib.rs","byte_start":4233,"byte_end":4286,"line_start":147,"line_end":147,"column_start":5,"column_end":58}},{"value":"/ let poll = Poll::new()?;","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.8.4\\src\\lib.rs","byte_start":4291,"byte_end":4319,"line_start":148,"line_end":148,"column_start":5,"column_end":33}},{"value":"/ // `Events` is collection of readiness `Event`s and can be filled by","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.8.4\\src\\lib.rs","byte_start":4324,"byte_end":4396,"line_start":149,"line_end":149,"column_start":5,"column_end":77}},{"value":"/ // calling `Poll::poll`.","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.8.4\\src\\lib.rs","byte_start":4401,"byte_end":4429,"line_start":150,"line_end":150,"column_start":5,"column_end":33}},{"value":"/ let events = Events::with_capacity(128);","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.8.4\\src\\lib.rs","byte_start":4434,"byte_end":4478,"line_start":151,"line_end":151,"column_start":5,"column_end":49}},{"value":"/ # drop((poll, events));","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.8.4\\src\\lib.rs","byte_start":4483,"byte_end":4510,"line_start":152,"line_end":152,"column_start":5,"column_end":32}},{"value":"/ # Ok(())","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.8.4\\src\\lib.rs","byte_start":4515,"byte_end":4527,"line_start":153,"line_end":153,"column_start":5,"column_end":17}},{"value":"/ # }","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.8.4\\src\\lib.rs","byte_start":4532,"byte_end":4539,"line_start":154,"line_end":154,"column_start":5,"column_end":12}},{"value":"/ ```","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.8.4\\src\\lib.rs","byte_start":4544,"byte_end":4551,"line_start":155,"line_end":155,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.8.4\\src\\lib.rs","byte_start":4556,"byte_end":4559,"line_start":156,"line_end":156,"column_start":5,"column_end":8}},{"value":"/ For example if we're using a [`TcpListener`],  we'll only want to","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.8.4\\src\\lib.rs","byte_start":4564,"byte_end":4633,"line_start":157,"line_end":157,"column_start":5,"column_end":74}},{"value":"/ attempt to accept an incoming connection *iff* any connections are","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.8.4\\src\\lib.rs","byte_start":4638,"byte_end":4708,"line_start":158,"line_end":158,"column_start":5,"column_end":75}},{"value":"/ queued and ready to be accepted. We don't want to waste our time if no","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.8.4\\src\\lib.rs","byte_start":4713,"byte_end":4787,"line_start":159,"line_end":159,"column_start":5,"column_end":79}},{"value":"/ connections are ready.","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.8.4\\src\\lib.rs","byte_start":4792,"byte_end":4818,"line_start":160,"line_end":160,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.8.4\\src\\lib.rs","byte_start":4823,"byte_end":4826,"line_start":161,"line_end":161,"column_start":5,"column_end":8}},{"value":"/ [`TcpListener`]: ../net/struct.TcpListener.html","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.8.4\\src\\lib.rs","byte_start":4831,"byte_end":4882,"line_start":162,"line_end":162,"column_start":5,"column_end":56}},{"value":"/","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.8.4\\src\\lib.rs","byte_start":4887,"byte_end":4890,"line_start":163,"line_end":163,"column_start":5,"column_end":8}},{"value":"/ ## 2. Registering event source","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.8.4\\src\\lib.rs","byte_start":4895,"byte_end":4929,"line_start":164,"line_end":164,"column_start":5,"column_end":39}},{"value":"/","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.8.4\\src\\lib.rs","byte_start":4934,"byte_end":4937,"line_start":165,"line_end":165,"column_start":5,"column_end":8}},{"value":"/ After we've created a [`Poll`] instance that monitors events from the OS","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.8.4\\src\\lib.rs","byte_start":4942,"byte_end":5018,"line_start":166,"line_end":166,"column_start":5,"column_end":81}},{"value":"/ for us, we need to provide it with a source of events. This is done by","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.8.4\\src\\lib.rs","byte_start":5023,"byte_end":5097,"line_start":167,"line_end":167,"column_start":5,"column_end":79}},{"value":"/ registering an [event source]. As the name “event source” suggests it is","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.8.4\\src\\lib.rs","byte_start":5102,"byte_end":5182,"line_start":168,"line_end":168,"column_start":5,"column_end":81}},{"value":"/ a source of events which can be polled using a `Poll` instance. On Unix","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.8.4\\src\\lib.rs","byte_start":5187,"byte_end":5262,"line_start":169,"line_end":169,"column_start":5,"column_end":80}},{"value":"/ systems this is usually a file descriptor, or a socket/handle on","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.8.4\\src\\lib.rs","byte_start":5267,"byte_end":5335,"line_start":170,"line_end":170,"column_start":5,"column_end":73}},{"value":"/ Windows.","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.8.4\\src\\lib.rs","byte_start":5340,"byte_end":5352,"line_start":171,"line_end":171,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.8.4\\src\\lib.rs","byte_start":5357,"byte_end":5360,"line_start":172,"line_end":172,"column_start":5,"column_end":8}},{"value":"/ In the example below we'll use a [`TcpListener`] for which we'll receive","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.8.4\\src\\lib.rs","byte_start":5365,"byte_end":5441,"line_start":173,"line_end":173,"column_start":5,"column_end":81}},{"value":"/ an event (from [`Poll`]) once a connection is ready to be accepted.","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.8.4\\src\\lib.rs","byte_start":5446,"byte_end":5517,"line_start":174,"line_end":174,"column_start":5,"column_end":76}},{"value":"/","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.8.4\\src\\lib.rs","byte_start":5522,"byte_end":5525,"line_start":175,"line_end":175,"column_start":5,"column_end":8}},{"value":"/ [event source]: ../event/trait.Source.html","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.8.4\\src\\lib.rs","byte_start":5530,"byte_end":5576,"line_start":176,"line_end":176,"column_start":5,"column_end":51}},{"value":"/","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.8.4\\src\\lib.rs","byte_start":5581,"byte_end":5584,"line_start":177,"line_end":177,"column_start":5,"column_end":8}},{"value":"/ # use mio::net::TcpListener;","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.8.4\\src\\lib.rs","byte_start":5746,"byte_end":5778,"line_start":180,"line_end":180,"column_start":5,"column_end":37}},{"value":"/ # use mio::{Poll, Token, Interest};","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.8.4\\src\\lib.rs","byte_start":5783,"byte_end":5822,"line_start":181,"line_end":181,"column_start":5,"column_end":44}},{"value":"/ # fn main() -> std::io::Result<()> {","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.8.4\\src\\lib.rs","byte_start":5827,"byte_end":5867,"line_start":182,"line_end":182,"column_start":5,"column_end":45}},{"value":"/ # let poll = Poll::new()?;","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.8.4\\src\\lib.rs","byte_start":5872,"byte_end":5902,"line_start":183,"line_end":183,"column_start":5,"column_end":35}},{"value":"/ # let address = \"127.0.0.1:0\".parse().unwrap();","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.8.4\\src\\lib.rs","byte_start":5907,"byte_end":5958,"line_start":184,"line_end":184,"column_start":5,"column_end":56}},{"value":"/ // Create a `TcpListener`, binding it to `address`.","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.8.4\\src\\lib.rs","byte_start":5963,"byte_end":6018,"line_start":185,"line_end":185,"column_start":5,"column_end":60}},{"value":"/ let mut listener = TcpListener::bind(address)?;","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.8.4\\src\\lib.rs","byte_start":6023,"byte_end":6074,"line_start":186,"line_end":186,"column_start":5,"column_end":56}},{"value":"/","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.8.4\\src\\lib.rs","byte_start":6079,"byte_end":6082,"line_start":187,"line_end":187,"column_start":5,"column_end":8}},{"value":"/ // Next we register it with `Poll` to receive events for it. The `SERVER`","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.8.4\\src\\lib.rs","byte_start":6087,"byte_end":6164,"line_start":188,"line_end":188,"column_start":5,"column_end":82}},{"value":"/ // `Token` is used to determine that we received an event for the listener","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.8.4\\src\\lib.rs","byte_start":6169,"byte_end":6247,"line_start":189,"line_end":189,"column_start":5,"column_end":83}},{"value":"/ // later on.","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.8.4\\src\\lib.rs","byte_start":6252,"byte_end":6268,"line_start":190,"line_end":190,"column_start":5,"column_end":21}},{"value":"/ const SERVER: Token = Token(0);","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.8.4\\src\\lib.rs","byte_start":6273,"byte_end":6308,"line_start":191,"line_end":191,"column_start":5,"column_end":40}},{"value":"/ poll.registry().register(&mut listener, SERVER, Interest::READABLE)?;","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.8.4\\src\\lib.rs","byte_start":6313,"byte_end":6386,"line_start":192,"line_end":192,"column_start":5,"column_end":78}},{"value":"/ # Ok(())","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.8.4\\src\\lib.rs","byte_start":6391,"byte_end":6403,"line_start":193,"line_end":193,"column_start":5,"column_end":17}},{"value":"/ # }","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.8.4\\src\\lib.rs","byte_start":6408,"byte_end":6415,"line_start":194,"line_end":194,"column_start":5,"column_end":12}},{"value":"/ ```","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.8.4\\src\\lib.rs","byte_start":6420,"byte_end":6427,"line_start":195,"line_end":195,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.8.4\\src\\lib.rs","byte_start":6432,"byte_end":6435,"line_start":196,"line_end":196,"column_start":5,"column_end":8}},{"value":"/ Multiple event sources can be [registered] (concurrently), so we can","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.8.4\\src\\lib.rs","byte_start":6440,"byte_end":6512,"line_start":197,"line_end":197,"column_start":5,"column_end":77}},{"value":"/ monitor multiple sources at a time.","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.8.4\\src\\lib.rs","byte_start":6517,"byte_end":6556,"line_start":198,"line_end":198,"column_start":5,"column_end":44}},{"value":"/","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.8.4\\src\\lib.rs","byte_start":6561,"byte_end":6564,"line_start":199,"line_end":199,"column_start":5,"column_end":8}},{"value":"/ [registered]: ../struct.Registry.html#method.register","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.8.4\\src\\lib.rs","byte_start":6569,"byte_end":6626,"line_start":200,"line_end":200,"column_start":5,"column_end":62}},{"value":"/","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.8.4\\src\\lib.rs","byte_start":6631,"byte_end":6634,"line_start":201,"line_end":201,"column_start":5,"column_end":8}},{"value":"/ ## 3. Creating the event loop","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.8.4\\src\\lib.rs","byte_start":6639,"byte_end":6672,"line_start":202,"line_end":202,"column_start":5,"column_end":38}},{"value":"/","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.8.4\\src\\lib.rs","byte_start":6677,"byte_end":6680,"line_start":203,"line_end":203,"column_start":5,"column_end":8}},{"value":"/ After we've created a [`Poll`] instance and registered one or more","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.8.4\\src\\lib.rs","byte_start":6685,"byte_end":6755,"line_start":204,"line_end":204,"column_start":5,"column_end":75}},{"value":"/ [event sources] with it, we can [poll] it for events. Polling for events","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.8.4\\src\\lib.rs","byte_start":6760,"byte_end":6836,"line_start":205,"line_end":205,"column_start":5,"column_end":81}},{"value":"/ is simple, we need a container to store the events: [`Events`] and need","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.8.4\\src\\lib.rs","byte_start":6841,"byte_end":6916,"line_start":206,"line_end":206,"column_start":5,"column_end":80}},{"value":"/ to do something based on the polled events (this part is up to you, we","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.8.4\\src\\lib.rs","byte_start":6921,"byte_end":6995,"line_start":207,"line_end":207,"column_start":5,"column_end":79}},{"value":"/ can't do it all!). If we do this in a loop we've got ourselves an event","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.8.4\\src\\lib.rs","byte_start":7000,"byte_end":7075,"line_start":208,"line_end":208,"column_start":5,"column_end":80}},{"value":"/ loop.","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.8.4\\src\\lib.rs","byte_start":7080,"byte_end":7089,"line_start":209,"line_end":209,"column_start":5,"column_end":14}},{"value":"/","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.8.4\\src\\lib.rs","byte_start":7094,"byte_end":7097,"line_start":210,"line_end":210,"column_start":5,"column_end":8}},{"value":"/ The example below shows the event loop in action, completing our small","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.8.4\\src\\lib.rs","byte_start":7102,"byte_end":7176,"line_start":211,"line_end":211,"column_start":5,"column_end":79}},{"value":"/ TCP server.","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.8.4\\src\\lib.rs","byte_start":7181,"byte_end":7196,"line_start":212,"line_end":212,"column_start":5,"column_end":20}},{"value":"/","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.8.4\\src\\lib.rs","byte_start":7201,"byte_end":7204,"line_start":213,"line_end":213,"column_start":5,"column_end":8}},{"value":"/ [poll]: ../struct.Poll.html#method.poll","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.8.4\\src\\lib.rs","byte_start":7209,"byte_end":7252,"line_start":214,"line_end":214,"column_start":5,"column_end":48}},{"value":"/ [event sources]: ../event/trait.Source.html","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.8.4\\src\\lib.rs","byte_start":7257,"byte_end":7304,"line_start":215,"line_end":215,"column_start":5,"column_end":52}},{"value":"/","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.8.4\\src\\lib.rs","byte_start":7309,"byte_end":7312,"line_start":216,"line_end":216,"column_start":5,"column_end":8}},{"value":"/ # use std::io;","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.8.4\\src\\lib.rs","byte_start":7474,"byte_end":7492,"line_start":219,"line_end":219,"column_start":5,"column_end":23}},{"value":"/ # use std::time::Duration;","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.8.4\\src\\lib.rs","byte_start":7497,"byte_end":7527,"line_start":220,"line_end":220,"column_start":5,"column_end":35}},{"value":"/ # use mio::net::TcpListener;","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.8.4\\src\\lib.rs","byte_start":7532,"byte_end":7564,"line_start":221,"line_end":221,"column_start":5,"column_end":37}},{"value":"/ # use mio::{Poll, Token, Interest, Events};","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.8.4\\src\\lib.rs","byte_start":7569,"byte_end":7616,"line_start":222,"line_end":222,"column_start":5,"column_end":52}},{"value":"/ # fn main() -> io::Result<()> {","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.8.4\\src\\lib.rs","byte_start":7621,"byte_end":7656,"line_start":223,"line_end":223,"column_start":5,"column_end":40}},{"value":"/ # let mut poll = Poll::new()?;","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.8.4\\src\\lib.rs","byte_start":7661,"byte_end":7695,"line_start":224,"line_end":224,"column_start":5,"column_end":39}},{"value":"/ # let mut events = Events::with_capacity(128);","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.8.4\\src\\lib.rs","byte_start":7700,"byte_end":7750,"line_start":225,"line_end":225,"column_start":5,"column_end":55}},{"value":"/ # let address = \"127.0.0.1:0\".parse().unwrap();","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.8.4\\src\\lib.rs","byte_start":7755,"byte_end":7806,"line_start":226,"line_end":226,"column_start":5,"column_end":56}},{"value":"/ # let mut listener = TcpListener::bind(address)?;","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.8.4\\src\\lib.rs","byte_start":7811,"byte_end":7864,"line_start":227,"line_end":227,"column_start":5,"column_end":58}},{"value":"/ # const SERVER: Token = Token(0);","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.8.4\\src\\lib.rs","byte_start":7869,"byte_end":7906,"line_start":228,"line_end":228,"column_start":5,"column_end":42}},{"value":"/ # poll.registry().register(&mut listener, SERVER, Interest::READABLE)?;","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.8.4\\src\\lib.rs","byte_start":7911,"byte_end":7986,"line_start":229,"line_end":229,"column_start":5,"column_end":80}},{"value":"/ // Start our event loop.","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.8.4\\src\\lib.rs","byte_start":7991,"byte_end":8019,"line_start":230,"line_end":230,"column_start":5,"column_end":33}},{"value":"/ loop {","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.8.4\\src\\lib.rs","byte_start":8024,"byte_end":8034,"line_start":231,"line_end":231,"column_start":5,"column_end":15}},{"value":"/     // Poll the OS for events, waiting at most 100 milliseconds.","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.8.4\\src\\lib.rs","byte_start":8039,"byte_end":8107,"line_start":232,"line_end":232,"column_start":5,"column_end":73}},{"value":"/     poll.poll(&mut events, Some(Duration::from_millis(100)))?;","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.8.4\\src\\lib.rs","byte_start":8112,"byte_end":8178,"line_start":233,"line_end":233,"column_start":5,"column_end":71}},{"value":"/","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.8.4\\src\\lib.rs","byte_start":8183,"byte_end":8186,"line_start":234,"line_end":234,"column_start":5,"column_end":8}},{"value":"/     // Process each event.","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.8.4\\src\\lib.rs","byte_start":8191,"byte_end":8221,"line_start":235,"line_end":235,"column_start":5,"column_end":35}},{"value":"/     for event in events.iter() {","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.8.4\\src\\lib.rs","byte_start":8226,"byte_end":8262,"line_start":236,"line_end":236,"column_start":5,"column_end":41}},{"value":"/         // We can use the token we previously provided to `register` to","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.8.4\\src\\lib.rs","byte_start":8267,"byte_end":8342,"line_start":237,"line_end":237,"column_start":5,"column_end":80}},{"value":"/         // determine for which type the event is.","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.8.4\\src\\lib.rs","byte_start":8347,"byte_end":8400,"line_start":238,"line_end":238,"column_start":5,"column_end":58}},{"value":"/         match event.token() {","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.8.4\\src\\lib.rs","byte_start":8405,"byte_end":8438,"line_start":239,"line_end":239,"column_start":5,"column_end":38}},{"value":"/             SERVER => loop {","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.8.4\\src\\lib.rs","byte_start":8443,"byte_end":8475,"line_start":240,"line_end":240,"column_start":5,"column_end":37}},{"value":"/                 // One or more connections are ready, so we'll attempt to","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.8.4\\src\\lib.rs","byte_start":8480,"byte_end":8557,"line_start":241,"line_end":241,"column_start":5,"column_end":82}},{"value":"/                 // accept them (in a loop).","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.8.4\\src\\lib.rs","byte_start":8562,"byte_end":8609,"line_start":242,"line_end":242,"column_start":5,"column_end":52}},{"value":"/                 match listener.accept() {","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.8.4\\src\\lib.rs","byte_start":8614,"byte_end":8659,"line_start":243,"line_end":243,"column_start":5,"column_end":50}},{"value":"/                     Ok((connection, address)) => {","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.8.4\\src\\lib.rs","byte_start":8664,"byte_end":8718,"line_start":244,"line_end":244,"column_start":5,"column_end":59}},{"value":"/                         println!(\"Got a connection from: {}\", address);","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.8.4\\src\\lib.rs","byte_start":8723,"byte_end":8798,"line_start":245,"line_end":245,"column_start":5,"column_end":80}},{"value":"/ #                       drop(connection);","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.8.4\\src\\lib.rs","byte_start":8803,"byte_end":8848,"line_start":246,"line_end":246,"column_start":5,"column_end":50}},{"value":"/                     },","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.8.4\\src\\lib.rs","byte_start":8853,"byte_end":8879,"line_start":247,"line_end":247,"column_start":5,"column_end":31}},{"value":"/                     // A \"would block error\" is returned if the operation","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.8.4\\src\\lib.rs","byte_start":8884,"byte_end":8961,"line_start":248,"line_end":248,"column_start":5,"column_end":82}},{"value":"/                     // is not ready, so we'll stop trying to accept","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.8.4\\src\\lib.rs","byte_start":8966,"byte_end":9037,"line_start":249,"line_end":249,"column_start":5,"column_end":76}},{"value":"/                     // connections.","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.8.4\\src\\lib.rs","byte_start":9042,"byte_end":9081,"line_start":250,"line_end":250,"column_start":5,"column_end":44}},{"value":"/                     Err(ref err) if would_block(err) => break,","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.8.4\\src\\lib.rs","byte_start":9086,"byte_end":9152,"line_start":251,"line_end":251,"column_start":5,"column_end":71}},{"value":"/                     Err(err) => return Err(err),","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.8.4\\src\\lib.rs","byte_start":9157,"byte_end":9209,"line_start":252,"line_end":252,"column_start":5,"column_end":57}},{"value":"/                 }","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.8.4\\src\\lib.rs","byte_start":9214,"byte_end":9235,"line_start":253,"line_end":253,"column_start":5,"column_end":26}},{"value":"/             }","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.8.4\\src\\lib.rs","byte_start":9240,"byte_end":9257,"line_start":254,"line_end":254,"column_start":5,"column_end":22}},{"value":"/ #           _ => unreachable!(),","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.8.4\\src\\lib.rs","byte_start":9262,"byte_end":9298,"line_start":255,"line_end":255,"column_start":5,"column_end":41}},{"value":"/         }","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.8.4\\src\\lib.rs","byte_start":9303,"byte_end":9316,"line_start":256,"line_end":256,"column_start":5,"column_end":18}},{"value":"/     }","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.8.4\\src\\lib.rs","byte_start":9321,"byte_end":9330,"line_start":257,"line_end":257,"column_start":5,"column_end":14}},{"value":"/ #   return Ok(());","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.8.4\\src\\lib.rs","byte_start":9335,"byte_end":9357,"line_start":258,"line_end":258,"column_start":5,"column_end":27}},{"value":"/ }","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.8.4\\src\\lib.rs","byte_start":9362,"byte_end":9367,"line_start":259,"line_end":259,"column_start":5,"column_end":10}},{"value":"/","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.8.4\\src\\lib.rs","byte_start":9372,"byte_end":9375,"line_start":260,"line_end":260,"column_start":5,"column_end":8}},{"value":"/ fn would_block(err: &io::Error) -> bool {","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.8.4\\src\\lib.rs","byte_start":9380,"byte_end":9425,"line_start":261,"line_end":261,"column_start":5,"column_end":50}},{"value":"/     err.kind() == io::ErrorKind::WouldBlock","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.8.4\\src\\lib.rs","byte_start":9430,"byte_end":9477,"line_start":262,"line_end":262,"column_start":5,"column_end":52}},{"value":"/ }","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.8.4\\src\\lib.rs","byte_start":9482,"byte_end":9487,"line_start":263,"line_end":263,"column_start":5,"column_end":10}},{"value":"/ # }","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.8.4\\src\\lib.rs","byte_start":9492,"byte_end":9499,"line_start":264,"line_end":264,"column_start":5,"column_end":12}},{"value":"/ ```","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.8.4\\src\\lib.rs","byte_start":9504,"byte_end":9511,"line_start":265,"line_end":265,"column_start":5,"column_end":12}}]}],"impls":[{"id":0,"kind":"Inherent","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.8.4\\src\\interest.rs","byte_start":12398,"byte_end":12406,"line_start":36,"line_end":36,"column_start":6,"column_end":14},"value":"","parent":null,"children":[{"krate":0,"index":26},{"krate":0,"index":27},{"krate":0,"index":28},{"krate":0,"index":29},{"krate":0,"index":30},{"krate":0,"index":31},{"krate":0,"index":32},{"krate":0,"index":33}],"docs":"","sig":null,"attributes":[]},{"id":1,"kind":"Direct","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.8.4\\src\\interest.rs","byte_start":15337,"byte_end":15345,"line_start":118,"line_end":118,"column_start":21,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":35},{"krate":0,"index":36}],"docs":"","sig":null,"attributes":[]},{"id":2,"kind":"Direct","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.8.4\\src\\interest.rs","byte_start":15488,"byte_end":15496,"line_start":127,"line_end":127,"column_start":27,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":38}],"docs":"","sig":null,"attributes":[]},{"id":3,"kind":"Direct","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.8.4\\src\\interest.rs","byte_start":15624,"byte_end":15632,"line_start":134,"line_end":134,"column_start":21,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":40}],"docs":"","sig":null,"attributes":[]},{"id":4,"kind":"Inherent","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.8.4\\src\\poll.rs","byte_start":27834,"byte_end":27838,"line_start":258,"line_end":258,"column_start":6,"column_end":10},"value":"","parent":null,"children":[{"krate":0,"index":257},{"krate":0,"index":76},{"krate":0,"index":77}],"docs":"","sig":null,"attributes":[]},{"id":5,"kind":"Direct","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.8.4\\src\\poll.rs","byte_start":33594,"byte_end":33598,"line_start":411,"line_end":411,"column_start":21,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":79}],"docs":"","sig":null,"attributes":[]},{"id":6,"kind":"Inherent","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.8.4\\src\\poll.rs","byte_start":33722,"byte_end":33730,"line_start":417,"line_end":417,"column_start":6,"column_end":14},"value":"","parent":null,"children":[{"krate":0,"index":81},{"krate":0,"index":83},{"krate":0,"index":85},{"krate":0,"index":87},{"krate":0,"index":89},{"krate":0,"index":90}],"docs":"","sig":null,"attributes":[]},{"id":7,"kind":"Direct","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.8.4\\src\\poll.rs","byte_start":43999,"byte_end":44007,"line_start":683,"line_end":683,"column_start":21,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":92}],"docs":"","sig":null,"attributes":[]},{"id":8,"kind":"Direct","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.8.4\\src\\sys\\windows\\afd.rs","byte_start":13607245,"byte_end":13607262,"line_start":46,"line_end":46,"column_start":22,"column_end":39},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":9,"kind":"Direct","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.8.4\\src\\sys\\windows\\afd.rs","byte_start":13607475,"byte_end":13607486,"line_start":57,"line_end":57,"column_start":21,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":320}],"docs":"","sig":null,"attributes":[]},{"id":10,"kind":"Inherent","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.8.4\\src\\sys\\windows\\afd.rs","byte_start":13607613,"byte_end":13607616,"line_start":63,"line_end":63,"column_start":6,"column_end":9},"value":"","parent":null,"children":[{"krate":0,"index":322},{"krate":0,"index":323}],"docs":"","sig":null,"attributes":[]},{"id":11,"kind":"Inherent","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.8.4\\src\\sys\\windows\\afd.rs","byte_start":13611641,"byte_end":13611652,"line_start":179,"line_end":179,"column_start":10,"column_end":21},"value":"","parent":null,"children":[{"krate":0,"index":763}],"docs":"","sig":null,"attributes":[]},{"id":12,"kind":"Inherent","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.8.4\\src\\sys\\windows\\afd.rs","byte_start":13611754,"byte_end":13611757,"line_start":185,"line_end":185,"column_start":10,"column_end":13},"value":"","parent":null,"children":[{"krate":0,"index":765}],"docs":"","sig":null,"attributes":[]},{"id":13,"kind":"Inherent","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.8.4\\src\\sys\\windows\\event.rs","byte_start":13614914,"byte_end":13614919,"line_start":17,"line_end":17,"column_start":6,"column_end":11},"value":"","parent":null,"children":[{"krate":0,"index":349},{"krate":0,"index":350},{"krate":0,"index":351},{"krate":0,"index":352},{"krate":0,"index":353}],"docs":"","sig":null,"attributes":[]},{"id":14,"kind":"Inherent","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.8.4\\src\\sys\\windows\\event.rs","byte_start":13618065,"byte_end":13618071,"line_start":128,"line_end":128,"column_start":6,"column_end":12},"value":"","parent":null,"children":[{"krate":0,"index":373},{"krate":0,"index":374},{"krate":0,"index":375},{"krate":0,"index":376},{"krate":0,"index":377},{"krate":0,"index":378}],"docs":"","sig":null,"attributes":[]},{"id":15,"kind":"Inherent","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.8.4\\src\\sys\\windows\\handle.rs","byte_start":13619188,"byte_end":13619194,"line_start":8,"line_end":8,"column_start":6,"column_end":12},"value":"","parent":null,"children":[{"krate":0,"index":398},{"krate":0,"index":399},{"krate":0,"index":400}],"docs":"","sig":null,"attributes":[]},{"id":16,"kind":"Direct","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.8.4\\src\\sys\\windows\\handle.rs","byte_start":13619546,"byte_end":13619552,"line_start":26,"line_end":26,"column_start":15,"column_end":21},"value":"","parent":null,"children":[{"krate":0,"index":402}],"docs":"","sig":null,"attributes":[]},{"id":17,"kind":"Inherent","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.8.4\\src\\sys\\windows\\io_status_block.rs","byte_start":13619895,"byte_end":13619908,"line_start":11,"line_end":11,"column_start":10,"column_end":23},"value":"","parent":null,"children":[{"krate":0,"index":786}],"docs":"","sig":null,"attributes":[]},{"id":18,"kind":"Direct","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.8.4\\src\\sys\\windows\\io_status_block.rs","byte_start":13620127,"byte_end":13620140,"line_start":21,"line_end":21,"column_start":22,"column_end":35},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":19,"kind":"Direct","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.8.4\\src\\sys\\windows\\io_status_block.rs","byte_start":13620160,"byte_end":13620173,"line_start":23,"line_end":23,"column_start":16,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":425},{"krate":0,"index":426}],"docs":"","sig":null,"attributes":[]},{"id":20,"kind":"Direct","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.8.4\\src\\sys\\windows\\io_status_block.rs","byte_start":13620293,"byte_end":13620306,"line_start":30,"line_end":30,"column_start":19,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":428}],"docs":"","sig":null,"attributes":[]},{"id":21,"kind":"Direct","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.8.4\\src\\sys\\windows\\io_status_block.rs","byte_start":13620409,"byte_end":13620422,"line_start":36,"line_end":36,"column_start":21,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":430}],"docs":"","sig":null,"attributes":[]},{"id":22,"kind":"Direct","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.8.4\\src\\sys\\windows\\iocp.rs","byte_start":13621488,"byte_end":13621504,"line_start":32,"line_end":32,"column_start":21,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":479}],"docs":"","sig":null,"attributes":[]},{"id":23,"kind":"Direct","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.8.4\\src\\sys\\windows\\iocp.rs","byte_start":13621656,"byte_end":13621672,"line_start":38,"line_end":38,"column_start":22,"column_end":38},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":24,"kind":"Direct","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.8.4\\src\\sys\\windows\\iocp.rs","byte_start":13621697,"byte_end":13621713,"line_start":39,"line_end":39,"column_start":22,"column_end":38},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":25,"kind":"Inherent","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.8.4\\src\\sys\\windows\\iocp.rs","byte_start":13621723,"byte_end":13621737,"line_start":41,"line_end":41,"column_start":6,"column_end":20},"value":"","parent":null,"children":[{"krate":0,"index":483},{"krate":0,"index":484},{"krate":0,"index":486},{"krate":0,"index":488}],"docs":"","sig":null,"attributes":[]},{"id":26,"kind":"Direct","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.8.4\\src\\sys\\windows\\iocp.rs","byte_start":13625359,"byte_end":13625373,"line_start":141,"line_end":141,"column_start":22,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":490}],"docs":"","sig":null,"attributes":[]},{"id":27,"kind":"Direct","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.8.4\\src\\sys\\windows\\iocp.rs","byte_start":13625490,"byte_end":13625504,"line_start":147,"line_end":147,"column_start":24,"column_end":38},"value":"","parent":null,"children":[{"krate":0,"index":492}],"docs":"","sig":null,"attributes":[]},{"id":28,"kind":"Direct","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.8.4\\src\\sys\\windows\\iocp.rs","byte_start":13625694,"byte_end":13625708,"line_start":155,"line_end":155,"column_start":24,"column_end":38},"value":"","parent":null,"children":[{"krate":0,"index":494}],"docs":"","sig":null,"attributes":[]},{"id":29,"kind":"Inherent","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.8.4\\src\\sys\\windows\\iocp.rs","byte_start":13625800,"byte_end":13625816,"line_start":161,"line_end":161,"column_start":6,"column_end":22},"value":"","parent":null,"children":[{"krate":0,"index":496},{"krate":0,"index":497},{"krate":0,"index":498},{"krate":0,"index":499},{"krate":0,"index":500},{"krate":0,"index":501},{"krate":0,"index":502}],"docs":"","sig":null,"attributes":[]},{"id":30,"kind":"Inherent","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.8.4\\src\\sys\\windows\\overlapped.rs","byte_start":13629741,"byte_end":13629751,"line_start":15,"line_end":15,"column_start":6,"column_end":16},"value":"","parent":null,"children":[{"krate":0,"index":525},{"krate":0,"index":526}],"docs":"","sig":null,"attributes":[]},{"id":31,"kind":"Direct","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.8.4\\src\\sys\\windows\\overlapped.rs","byte_start":13630084,"byte_end":13630094,"line_start":28,"line_end":28,"column_start":21,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":528}],"docs":"","sig":null,"attributes":[]},{"id":32,"kind":"Direct","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.8.4\\src\\sys\\windows\\overlapped.rs","byte_start":13630236,"byte_end":13630246,"line_start":34,"line_end":34,"column_start":22,"column_end":32},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":33,"kind":"Direct","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.8.4\\src\\sys\\windows\\overlapped.rs","byte_start":13630271,"byte_end":13630281,"line_start":35,"line_end":35,"column_start":22,"column_end":32},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":34,"kind":"Inherent","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.8.4\\src\\sys\\windows\\selector.rs","byte_start":13631291,"byte_end":13631299,"line_start":38,"line_end":38,"column_start":6,"column_end":14},"value":"","parent":null,"children":[{"krate":0,"index":619},{"krate":0,"index":620}],"docs":"","sig":null,"attributes":[]},{"id":35,"kind":"Inherent","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.8.4\\src\\sys\\windows\\selector.rs","byte_start":13631696,"byte_end":13631704,"line_start":55,"line_end":55,"column_start":10,"column_end":18},"value":"","parent":null,"children":[{"krate":0,"index":823},{"krate":0,"index":824}],"docs":"","sig":null,"attributes":[]},{"id":36,"kind":"Inherent","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.8.4\\src\\sys\\windows\\selector.rs","byte_start":13633109,"byte_end":13633118,"line_start":114,"line_end":114,"column_start":6,"column_end":15},"value":"","parent":null,"children":[{"krate":0,"index":623},{"krate":0,"index":624},{"krate":0,"index":625},{"krate":0,"index":626},{"krate":0,"index":627},{"krate":0,"index":628}],"docs":"","sig":null,"attributes":[]},{"id":37,"kind":"Inherent","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.8.4\\src\\sys\\windows\\selector.rs","byte_start":13639100,"byte_end":13639109,"line_start":261,"line_end":261,"column_start":10,"column_end":19},"value":"","parent":null,"children":[{"krate":0,"index":849},{"krate":0,"index":850}],"docs":"","sig":null,"attributes":[]},{"id":38,"kind":"Direct","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.8.4\\src\\sys\\windows\\selector.rs","byte_start":13640154,"byte_end":13640163,"line_start":291,"line_end":291,"column_start":15,"column_end":24},"value":"","parent":null,"children":[{"krate":0,"index":630}],"docs":"","sig":null,"attributes":[]},{"id":39,"kind":"Inherent","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.8.4\\src\\sys\\windows\\selector.rs","byte_start":13641883,"byte_end":13641891,"line_start":335,"line_end":335,"column_start":6,"column_end":14},"value":"","parent":null,"children":[{"krate":0,"index":635},{"krate":0,"index":637},{"krate":0,"index":638},{"krate":0,"index":639},{"krate":0,"index":640},{"krate":0,"index":641}],"docs":"","sig":null,"attributes":[]},{"id":40,"kind":"Inherent","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.8.4\\src\\sys\\windows\\selector.rs","byte_start":13643397,"byte_end":13643405,"line_start":387,"line_end":387,"column_start":10,"column_end":18},"value":"","parent":null,"children":[{"krate":0,"index":864},{"krate":0,"index":865},{"krate":0,"index":866}],"docs":"","sig":null,"attributes":[]},{"id":41,"kind":"Direct","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.8.4\\src\\sys\\windows\\selector.rs","byte_start":13644330,"byte_end":13644343,"line_start":422,"line_end":422,"column_start":22,"column_end":35},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":42,"kind":"Inherent","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.8.4\\src\\sys\\windows\\selector.rs","byte_start":13644353,"byte_end":13644366,"line_start":424,"line_end":424,"column_start":6,"column_end":19},"value":"","parent":null,"children":[{"krate":0,"index":644},{"krate":0,"index":646},{"krate":0,"index":647},{"krate":0,"index":648},{"krate":0,"index":650}],"docs":"","sig":null,"attributes":[]},{"id":43,"kind":"Inherent","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.8.4\\src\\sys\\windows\\selector.rs","byte_start":13648260,"byte_end":13648273,"line_start":545,"line_end":545,"column_start":10,"column_end":23},"value":"","parent":null,"children":[{"krate":0,"index":903},{"krate":0,"index":904},{"krate":0,"index":905},{"krate":0,"index":906},{"krate":0,"index":907}],"docs":"","sig":null,"attributes":[]},{"id":44,"kind":"Direct","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.8.4\\src\\sys\\windows\\selector.rs","byte_start":13653764,"byte_end":13653777,"line_start":694,"line_end":694,"column_start":15,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":652}],"docs":"","sig":null,"attributes":[]},{"id":45,"kind":"Inherent","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.8.4\\src\\sys\\windows\\net.rs","byte_start":13658068,"byte_end":13658083,"line_start":53,"line_end":53,"column_start":6,"column_end":21},"value":"","parent":null,"children":[{"krate":0,"index":982}],"docs":"","sig":null,"attributes":[]},{"id":46,"kind":"Inherent","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.8.4\\src\\sys\\windows\\named_pipe.rs","byte_start":13667326,"byte_end":13667331,"line_start":94,"line_end":94,"column_start":6,"column_end":11},"value":"","parent":null,"children":[{"krate":0,"index":1276},{"krate":0,"index":1277},{"krate":0,"index":1278},{"krate":0,"index":1279},{"krate":0,"index":1281},{"krate":0,"index":1282},{"krate":0,"index":1283},{"krate":0,"index":1284}],"docs":"","sig":null,"attributes":[]},{"id":47,"kind":"Inherent","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.8.4\\src\\sys\\windows\\named_pipe.rs","byte_start":13677127,"byte_end":13677136,"line_start":354,"line_end":354,"column_start":6,"column_end":15},"value":"","parent":null,"children":[{"krate":0,"index":1294},{"krate":0,"index":1299},{"krate":0,"index":1300},{"krate":0,"index":1301}],"docs":"","sig":null,"attributes":[]},{"id":48,"kind":"Direct","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.8.4\\src\\sys\\windows\\named_pipe.rs","byte_start":13681992,"byte_end":13682001,"line_start":472,"line_end":472,"column_start":24,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":1303}],"docs":"","sig":null,"attributes":[]},{"id":49,"kind":"Direct","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.8.4\\src\\sys\\windows\\named_pipe.rs","byte_start":13682741,"byte_end":13682750,"line_start":494,"line_end":494,"column_start":15,"column_end":24},"value":"","parent":null,"children":[{"krate":0,"index":1305}],"docs":"","sig":null,"attributes":[]},{"id":50,"kind":"Direct","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.8.4\\src\\sys\\windows\\named_pipe.rs","byte_start":13682892,"byte_end":13682901,"line_start":500,"line_end":500,"column_start":16,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":1307},{"krate":0,"index":1308}],"docs":"","sig":null,"attributes":[]},{"id":51,"kind":"Direct","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.8.4\\src\\sys\\windows\\named_pipe.rs","byte_start":13686169,"byte_end":13686178,"line_start":599,"line_end":599,"column_start":17,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":1317},{"krate":0,"index":1318},{"krate":0,"index":1319}],"docs":"","sig":null,"attributes":[]},{"id":52,"kind":"Direct","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.8.4\\src\\sys\\windows\\named_pipe.rs","byte_start":13687743,"byte_end":13687752,"line_start":659,"line_end":659,"column_start":22,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":1321}],"docs":"","sig":null,"attributes":[]},{"id":53,"kind":"Direct","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.8.4\\src\\sys\\windows\\named_pipe.rs","byte_start":13687872,"byte_end":13687881,"line_start":665,"line_end":665,"column_start":21,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":1323}],"docs":"","sig":null,"attributes":[]},{"id":54,"kind":"Direct","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.8.4\\src\\sys\\windows\\named_pipe.rs","byte_start":13688003,"byte_end":13688012,"line_start":671,"line_end":671,"column_start":15,"column_end":24},"value":"","parent":null,"children":[{"krate":0,"index":1325}],"docs":"","sig":null,"attributes":[]},{"id":55,"kind":"Inherent","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.8.4\\src\\sys\\windows\\named_pipe.rs","byte_start":13688522,"byte_end":13688527,"line_start":688,"line_end":688,"column_start":6,"column_end":11},"value":"","parent":null,"children":[{"krate":0,"index":1327},{"krate":0,"index":1328},{"krate":0,"index":1329},{"krate":0,"index":1330},{"krate":0,"index":1331},{"krate":0,"index":1332}],"docs":"","sig":null,"attributes":[]},{"id":56,"kind":"Inherent","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.8.4\\src\\sys\\windows\\named_pipe.rs","byte_start":13697083,"byte_end":13697085,"line_start":926,"line_end":926,"column_start":6,"column_end":8},"value":"","parent":null,"children":[{"krate":0,"index":1338},{"krate":0,"index":1339},{"krate":0,"index":1340}],"docs":"","sig":null,"attributes":[]},{"id":57,"kind":"Inherent","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.8.4\\src\\sys\\windows\\named_pipe.rs","byte_start":13698480,"byte_end":13698490,"line_start":972,"line_end":972,"column_start":6,"column_end":16},"value":"","parent":null,"children":[{"krate":0,"index":1344},{"krate":0,"index":1345},{"krate":0,"index":1347}],"docs":"","sig":null,"attributes":[]},{"id":58,"kind":"Inherent","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.8.4\\src\\sys\\windows\\waker.rs","byte_start":13655954,"byte_end":13655959,"line_start":15,"line_end":15,"column_start":6,"column_end":11},"value":"","parent":null,"children":[{"krate":0,"index":685},{"krate":0,"index":686}],"docs":"","sig":null,"attributes":[]},{"id":59,"kind":"Direct","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.8.4\\src\\sys\\windows\\mod.rs","byte_start":13602998,"byte_end":13603011,"line_start":62,"line_end":62,"column_start":19,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":1401}],"docs":"","sig":null,"attributes":[]},{"id":60,"kind":"Inherent","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.8.4\\src\\sys\\windows\\mod.rs","byte_start":13603457,"byte_end":13603470,"line_start":77,"line_end":77,"column_start":10,"column_end":23},"value":"","parent":null,"children":[{"krate":0,"index":1405},{"krate":0,"index":1406},{"krate":0,"index":1411},{"krate":0,"index":1413},{"krate":0,"index":1415}],"docs":"","sig":null,"attributes":[]},{"id":62,"kind":"Inherent","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.8.4\\src\\waker.rs","byte_start":54633,"byte_end":54638,"line_start":82,"line_end":82,"column_start":6,"column_end":11},"value":"","parent":null,"children":[{"krate":0,"index":112},{"krate":0,"index":114}],"docs":"","sig":null,"attributes":[]},{"id":63,"kind":"Inherent","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.8.4\\src\\event\\event.rs","byte_start":55736,"byte_end":55741,"line_start":21,"line_end":21,"column_start":6,"column_end":11},"value":"","parent":null,"children":[{"krate":0,"index":128},{"krate":0,"index":129},{"krate":0,"index":130},{"krate":0,"index":131},{"krate":0,"index":132},{"krate":0,"index":133},{"krate":0,"index":134},{"krate":0,"index":135},{"krate":0,"index":136},{"krate":0,"index":137}],"docs":"","sig":null,"attributes":[]},{"id":64,"kind":"Direct","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.8.4\\src\\event\\event.rs","byte_start":62909,"byte_end":62914,"line_start":202,"line_end":202,"column_start":21,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":139}],"docs":"","sig":null,"attributes":[]},{"id":65,"kind":"Direct","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.8.4\\src\\event\\event.rs","byte_start":63623,"byte_end":63635,"line_start":219,"line_end":219,"column_start":37,"column_end":49},"value":"","parent":null,"children":[{"krate":0,"index":146}],"docs":"","sig":null,"attributes":[]},{"id":66,"kind":"Inherent","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.8.4\\src\\event\\events.rs","byte_start":65998,"byte_end":66004,"line_start":81,"line_end":81,"column_start":6,"column_end":12},"value":"","parent":null,"children":[{"krate":0,"index":160},{"krate":0,"index":161},{"krate":0,"index":162},{"krate":0,"index":163},{"krate":0,"index":164},{"krate":0,"index":165}],"docs":"","sig":null,"attributes":[]},{"id":67,"kind":"Direct","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.8.4\\src\\event\\events.rs","byte_start":69120,"byte_end":69124,"line_start":203,"line_end":203,"column_start":23,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":173},{"krate":0,"index":174},{"krate":0,"index":175},{"krate":0,"index":176}],"docs":"","sig":null,"attributes":[]},{"id":68,"kind":"Direct","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.8.4\\src\\event\\events.rs","byte_start":69600,"byte_end":69606,"line_start":226,"line_end":226,"column_start":21,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":178}],"docs":"","sig":null,"attributes":[]},{"id":69,"kind":"Direct","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.8.4\\src\\event\\source.rs","byte_start":73770,"byte_end":73773,"line_start":114,"line_end":114,"column_start":20,"column_end":23},"value":"","parent":null,"children":[{"krate":0,"index":199},{"krate":0,"index":200},{"krate":0,"index":201}],"docs":"","sig":null,"attributes":[]},{"id":70,"kind":"Inherent","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.8.4\\src\\io_source.rs","byte_start":13700861,"byte_end":13700869,"line_start":69,"line_end":69,"column_start":9,"column_end":17},"value":"","parent":null,"children":[{"krate":0,"index":1504},{"krate":0,"index":1505},{"krate":0,"index":1508}],"docs":"","sig":null,"attributes":[]},{"id":71,"kind":"Direct","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.8.4\\src\\io_source.rs","byte_start":13702169,"byte_end":13702177,"line_start":114,"line_end":114,"column_start":19,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":1511},{"krate":0,"index":1512}],"docs":"","sig":null,"attributes":[]},{"id":72,"kind":"Direct","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.8.4\\src\\io_source.rs","byte_start":13702444,"byte_end":13702452,"line_start":126,"line_end":126,"column_start":22,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":1515}],"docs":"","sig":null,"attributes":[]},{"id":73,"kind":"Direct","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.8.4\\src\\io_source.rs","byte_start":13703570,"byte_end":13703578,"line_start":171,"line_end":171,"column_start":27,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":1518},{"krate":0,"index":1519},{"krate":0,"index":1520}],"docs":"","sig":null,"attributes":[]},{"id":74,"kind":"Direct","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.8.4\\src\\io_source.rs","byte_start":13705473,"byte_end":13705481,"line_start":243,"line_end":243,"column_start":24,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":1523}],"docs":"","sig":null,"attributes":[]},{"id":75,"kind":"Inherent","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.8.4\\src\\io_source.rs","byte_start":13705786,"byte_end":13705796,"line_start":260,"line_end":260,"column_start":6,"column_end":16},"value":"","parent":null,"children":[{"krate":0,"index":1525},{"krate":0,"index":1526},{"krate":0,"index":1527},{"krate":0,"index":1528},{"krate":0,"index":1529}],"docs":"","sig":null,"attributes":[]},{"id":76,"kind":"Direct","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.8.4\\src\\io_source.rs","byte_start":13708094,"byte_end":13708104,"line_start":328,"line_end":328,"column_start":16,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":1531}],"docs":"","sig":null,"attributes":[]},{"id":77,"kind":"Inherent","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.8.4\\src\\net\\tcp\\listener.rs","byte_start":13711408,"byte_end":13711419,"line_start":48,"line_end":48,"column_start":6,"column_end":17},"value":"","parent":null,"children":[{"krate":0,"index":1601},{"krate":0,"index":1602},{"krate":0,"index":1603},{"krate":0,"index":1606},{"krate":0,"index":1607},{"krate":0,"index":1608},{"krate":0,"index":1609}],"docs":"","sig":null,"attributes":[]},{"id":78,"kind":"Direct","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.8.4\\src\\net\\tcp\\listener.rs","byte_start":13714960,"byte_end":13714971,"line_start":139,"line_end":139,"column_start":24,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":1611},{"krate":0,"index":1612},{"krate":0,"index":1613}],"docs":"","sig":null,"attributes":[]},{"id":79,"kind":"Direct","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.8.4\\src\\net\\tcp\\listener.rs","byte_start":13715527,"byte_end":13715538,"line_start":163,"line_end":163,"column_start":21,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":1615}],"docs":"","sig":null,"attributes":[]},{"id":80,"kind":"Direct","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.8.4\\src\\net\\tcp\\listener.rs","byte_start":13716276,"byte_end":13716287,"line_start":197,"line_end":197,"column_start":24,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":1617}],"docs":"","sig":null,"attributes":[]},{"id":81,"kind":"Direct","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.8.4\\src\\net\\tcp\\listener.rs","byte_start":13716430,"byte_end":13716441,"line_start":204,"line_end":204,"column_start":22,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":1619}],"docs":"","sig":null,"attributes":[]},{"id":82,"kind":"Direct","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.8.4\\src\\net\\tcp\\listener.rs","byte_start":13716570,"byte_end":13716581,"line_start":211,"line_end":211,"column_start":24,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":1621}],"docs":"","sig":null,"attributes":[]},{"id":83,"kind":"Inherent","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.8.4\\src\\net\\tcp\\stream.rs","byte_start":13719173,"byte_end":13719182,"line_start":52,"line_end":52,"column_start":6,"column_end":15},"value":"","parent":null,"children":[{"krate":0,"index":1694},{"krate":0,"index":1695},{"krate":0,"index":1696},{"krate":0,"index":1697},{"krate":0,"index":1698},{"krate":0,"index":1699},{"krate":0,"index":1700},{"krate":0,"index":1701},{"krate":0,"index":1702},{"krate":0,"index":1703},{"krate":0,"index":1704},{"krate":0,"index":1705}],"docs":"","sig":null,"attributes":[]},{"id":84,"kind":"Direct","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.8.4\\src\\net\\tcp\\stream.rs","byte_start":13727678,"byte_end":13727687,"line_start":270,"line_end":270,"column_start":15,"column_end":24},"value":"","parent":null,"children":[{"krate":0,"index":1710},{"krate":0,"index":1712}],"docs":"","sig":null,"attributes":[]},{"id":85,"kind":"Direct","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.8.4\\src\\net\\tcp\\stream.rs","byte_start":13728299,"byte_end":13728308,"line_start":290,"line_end":290,"column_start":16,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":1721},{"krate":0,"index":1723},{"krate":0,"index":1725}],"docs":"","sig":null,"attributes":[]},{"id":86,"kind":"Direct","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.8.4\\src\\net\\tcp\\stream.rs","byte_start":13729121,"byte_end":13729130,"line_start":318,"line_end":318,"column_start":24,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":1736},{"krate":0,"index":1737},{"krate":0,"index":1738}],"docs":"","sig":null,"attributes":[]},{"id":87,"kind":"Direct","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.8.4\\src\\net\\tcp\\stream.rs","byte_start":13729686,"byte_end":13729695,"line_start":342,"line_end":342,"column_start":21,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":1740}],"docs":"","sig":null,"attributes":[]},{"id":88,"kind":"Direct","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.8.4\\src\\net\\tcp\\stream.rs","byte_start":13730421,"byte_end":13730430,"line_start":376,"line_end":376,"column_start":24,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":1742}],"docs":"","sig":null,"attributes":[]},{"id":89,"kind":"Direct","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.8.4\\src\\net\\tcp\\stream.rs","byte_start":13730573,"byte_end":13730582,"line_start":383,"line_end":383,"column_start":22,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":1744}],"docs":"","sig":null,"attributes":[]},{"id":90,"kind":"Direct","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.8.4\\src\\net\\tcp\\stream.rs","byte_start":13730711,"byte_end":13730720,"line_start":390,"line_end":390,"column_start":24,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":1746}],"docs":"","sig":null,"attributes":[]},{"id":91,"kind":"Inherent","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.8.4\\src\\net\\udp.rs","byte_start":13735085,"byte_end":13735094,"line_start":95,"line_end":95,"column_start":6,"column_end":15},"value":"","parent":null,"children":[{"krate":0,"index":1812},{"krate":0,"index":1813},{"krate":0,"index":1814},{"krate":0,"index":1815},{"krate":0,"index":1816},{"krate":0,"index":1818},{"krate":0,"index":1820},{"krate":0,"index":1822},{"krate":0,"index":1824},{"krate":0,"index":1826},{"krate":0,"index":1828},{"krate":0,"index":1829},{"krate":0,"index":1830},{"krate":0,"index":1831},{"krate":0,"index":1832},{"krate":0,"index":1833},{"krate":0,"index":1834},{"krate":0,"index":1835},{"krate":0,"index":1836},{"krate":0,"index":1837},{"krate":0,"index":1838},{"krate":0,"index":1839},{"krate":0,"index":1840},{"krate":0,"index":1841},{"krate":0,"index":1842},{"krate":0,"index":1843},{"krate":0,"index":1844},{"krate":0,"index":1845}],"docs":"","sig":null,"attributes":[]},{"id":92,"kind":"Direct","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.8.4\\src\\net\\udp.rs","byte_start":13753850,"byte_end":13753859,"line_start":615,"line_end":615,"column_start":24,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":1850},{"krate":0,"index":1851},{"krate":0,"index":1852}],"docs":"","sig":null,"attributes":[]},{"id":93,"kind":"Direct","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.8.4\\src\\net\\udp.rs","byte_start":13754415,"byte_end":13754424,"line_start":639,"line_end":639,"column_start":21,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":1854}],"docs":"","sig":null,"attributes":[]},{"id":94,"kind":"Direct","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.8.4\\src\\net\\udp.rs","byte_start":13755150,"byte_end":13755159,"line_start":673,"line_end":673,"column_start":24,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":1856}],"docs":"","sig":null,"attributes":[]},{"id":95,"kind":"Direct","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.8.4\\src\\net\\udp.rs","byte_start":13755302,"byte_end":13755311,"line_start":680,"line_end":680,"column_start":22,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":1858}],"docs":"","sig":null,"attributes":[]},{"id":96,"kind":"Direct","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.8.4\\src\\net\\udp.rs","byte_start":13755440,"byte_end":13755449,"line_start":687,"line_end":687,"column_start":24,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":1860}],"docs":"","sig":null,"attributes":[]}],"refs":[{"kind":"Mod","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.8.4\\src\\lib.rs","byte_start":1354,"byte_end":1359,"line_start":54,"line_end":54,"column_start":9,"column_end":14},"ref_id":{"krate":0,"index":115}},{"kind":"Mod","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.8.4\\src\\lib.rs","byte_start":1424,"byte_end":1427,"line_start":61,"line_end":61,"column_start":13,"column_end":16},"ref_id":{"krate":0,"index":1536}}],"macro_refs":[],"relations":[{"span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.8.4\\src\\interest.rs","byte_start":12398,"byte_end":12406,"line_start":36,"line_end":36,"column_start":6,"column_end":14},"kind":{"Impl":{"id":0}},"from":{"krate":0,"index":240},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.8.4\\src\\interest.rs","byte_start":15337,"byte_end":15345,"line_start":118,"line_end":118,"column_start":21,"column_end":29},"kind":{"Impl":{"id":1}},"from":{"krate":0,"index":240},"to":{"krate":2,"index":3189}},{"span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.8.4\\src\\interest.rs","byte_start":15488,"byte_end":15496,"line_start":127,"line_end":127,"column_start":27,"column_end":35},"kind":{"Impl":{"id":2}},"from":{"krate":0,"index":240},"to":{"krate":2,"index":3215}},{"span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.8.4\\src\\interest.rs","byte_start":15624,"byte_end":15632,"line_start":134,"line_end":134,"column_start":21,"column_end":29},"kind":{"Impl":{"id":3}},"from":{"krate":0,"index":240},"to":{"krate":2,"index":9685}},{"span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.8.4\\src\\poll.rs","byte_start":27834,"byte_end":27838,"line_start":258,"line_end":258,"column_start":6,"column_end":10},"kind":{"Impl":{"id":4}},"from":{"krate":0,"index":71},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.8.4\\src\\poll.rs","byte_start":33594,"byte_end":33598,"line_start":411,"line_end":411,"column_start":21,"column_end":25},"kind":{"Impl":{"id":5}},"from":{"krate":0,"index":71},"to":{"krate":2,"index":9685}},{"span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.8.4\\src\\poll.rs","byte_start":33722,"byte_end":33730,"line_start":417,"line_end":417,"column_start":6,"column_end":14},"kind":{"Impl":{"id":6}},"from":{"krate":0,"index":73},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.8.4\\src\\poll.rs","byte_start":43999,"byte_end":44007,"line_start":683,"line_end":683,"column_start":21,"column_end":29},"kind":{"Impl":{"id":7}},"from":{"krate":0,"index":73},"to":{"krate":2,"index":9685}},{"span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.8.4\\src\\sys\\windows\\afd.rs","byte_start":13607245,"byte_end":13607262,"line_start":46,"line_end":46,"column_start":22,"column_end":39},"kind":{"Impl":{"id":8}},"from":{"krate":0,"index":695},"to":{"krate":2,"index":3057}},{"span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.8.4\\src\\sys\\windows\\afd.rs","byte_start":13607475,"byte_end":13607486,"line_start":57,"line_end":57,"column_start":21,"column_end":32},"kind":{"Impl":{"id":9}},"from":{"krate":0,"index":313},"to":{"krate":2,"index":9685}},{"span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.8.4\\src\\sys\\windows\\afd.rs","byte_start":13607613,"byte_end":13607616,"line_start":63,"line_end":63,"column_start":6,"column_end":9},"kind":{"Impl":{"id":10}},"from":{"krate":0,"index":691},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.8.4\\src\\sys\\windows\\afd.rs","byte_start":13611641,"byte_end":13611652,"line_start":179,"line_end":179,"column_start":10,"column_end":21},"kind":{"Impl":{"id":11}},"from":{"krate":0,"index":313},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.8.4\\src\\sys\\windows\\afd.rs","byte_start":13611754,"byte_end":13611757,"line_start":185,"line_end":185,"column_start":10,"column_end":13},"kind":{"Impl":{"id":12}},"from":{"krate":0,"index":691},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.8.4\\src\\sys\\windows\\event.rs","byte_start":13614914,"byte_end":13614919,"line_start":17,"line_end":17,"column_start":6,"column_end":11},"kind":{"Impl":{"id":13}},"from":{"krate":0,"index":766},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.8.4\\src\\sys\\windows\\event.rs","byte_start":13618065,"byte_end":13618071,"line_start":128,"line_end":128,"column_start":6,"column_end":12},"kind":{"Impl":{"id":14}},"from":{"krate":0,"index":369},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.8.4\\src\\sys\\windows\\handle.rs","byte_start":13619188,"byte_end":13619194,"line_start":8,"line_end":8,"column_start":6,"column_end":12},"kind":{"Impl":{"id":15}},"from":{"krate":0,"index":776},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.8.4\\src\\sys\\windows\\handle.rs","byte_start":13619546,"byte_end":13619552,"line_start":26,"line_end":26,"column_start":15,"column_end":21},"kind":{"Impl":{"id":16}},"from":{"krate":0,"index":776},"to":{"krate":2,"index":3300}},{"span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.8.4\\src\\sys\\windows\\io_status_block.rs","byte_start":13619895,"byte_end":13619908,"line_start":11,"line_end":11,"column_start":10,"column_end":23},"kind":{"Impl":{"id":17}},"from":{"krate":0,"index":420},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.8.4\\src\\sys\\windows\\io_status_block.rs","byte_start":13620127,"byte_end":13620140,"line_start":21,"line_end":21,"column_start":22,"column_end":35},"kind":{"Impl":{"id":18}},"from":{"krate":0,"index":420},"to":{"krate":2,"index":3057}},{"span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.8.4\\src\\sys\\windows\\io_status_block.rs","byte_start":13620160,"byte_end":13620173,"line_start":23,"line_end":23,"column_start":16,"column_end":29},"kind":{"Impl":{"id":19}},"from":{"krate":0,"index":420},"to":{"krate":2,"index":3276}},{"span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.8.4\\src\\sys\\windows\\io_status_block.rs","byte_start":13620293,"byte_end":13620306,"line_start":30,"line_end":30,"column_start":19,"column_end":32},"kind":{"Impl":{"id":20}},"from":{"krate":0,"index":420},"to":{"krate":2,"index":3289}},{"span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.8.4\\src\\sys\\windows\\io_status_block.rs","byte_start":13620409,"byte_end":13620422,"line_start":36,"line_end":36,"column_start":21,"column_end":34},"kind":{"Impl":{"id":21}},"from":{"krate":0,"index":420},"to":{"krate":2,"index":9685}},{"span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.8.4\\src\\sys\\windows\\iocp.rs","byte_start":13621488,"byte_end":13621504,"line_start":32,"line_end":32,"column_start":21,"column_end":37},"kind":{"Impl":{"id":22}},"from":{"krate":0,"index":791},"to":{"krate":2,"index":9685}},{"span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.8.4\\src\\sys\\windows\\iocp.rs","byte_start":13621656,"byte_end":13621672,"line_start":38,"line_end":38,"column_start":22,"column_end":38},"kind":{"Impl":{"id":23}},"from":{"krate":0,"index":791},"to":{"krate":2,"index":3057}},{"span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.8.4\\src\\sys\\windows\\iocp.rs","byte_start":13621697,"byte_end":13621713,"line_start":39,"line_end":39,"column_start":22,"column_end":38},"kind":{"Impl":{"id":24}},"from":{"krate":0,"index":791},"to":{"krate":2,"index":3069}},{"span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.8.4\\src\\sys\\windows\\iocp.rs","byte_start":13621723,"byte_end":13621737,"line_start":41,"line_end":41,"column_start":6,"column_end":20},"kind":{"Impl":{"id":25}},"from":{"krate":0,"index":787},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.8.4\\src\\sys\\windows\\iocp.rs","byte_start":13625359,"byte_end":13625373,"line_start":141,"line_end":141,"column_start":22,"column_end":36},"kind":{"Impl":{"id":26}},"from":{"krate":0,"index":787},"to":{"krate":1,"index":6011}},{"span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.8.4\\src\\sys\\windows\\iocp.rs","byte_start":13625490,"byte_end":13625504,"line_start":147,"line_end":147,"column_start":24,"column_end":38},"kind":{"Impl":{"id":27}},"from":{"krate":0,"index":787},"to":{"krate":1,"index":6013}},{"span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.8.4\\src\\sys\\windows\\iocp.rs","byte_start":13625694,"byte_end":13625708,"line_start":155,"line_end":155,"column_start":24,"column_end":38},"kind":{"Impl":{"id":28}},"from":{"krate":0,"index":787},"to":{"krate":1,"index":6015}},{"span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.8.4\\src\\sys\\windows\\iocp.rs","byte_start":13625800,"byte_end":13625816,"line_start":161,"line_end":161,"column_start":6,"column_end":22},"kind":{"Impl":{"id":29}},"from":{"krate":0,"index":791},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.8.4\\src\\sys\\windows\\overlapped.rs","byte_start":13629741,"byte_end":13629751,"line_start":15,"line_end":15,"column_start":6,"column_end":16},"kind":{"Impl":{"id":30}},"from":{"krate":0,"index":521},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.8.4\\src\\sys\\windows\\overlapped.rs","byte_start":13630084,"byte_end":13630094,"line_start":28,"line_end":28,"column_start":21,"column_end":31},"kind":{"Impl":{"id":31}},"from":{"krate":0,"index":521},"to":{"krate":2,"index":9685}},{"span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.8.4\\src\\sys\\windows\\overlapped.rs","byte_start":13630236,"byte_end":13630246,"line_start":34,"line_end":34,"column_start":22,"column_end":32},"kind":{"Impl":{"id":32}},"from":{"krate":0,"index":521},"to":{"krate":2,"index":3057}},{"span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.8.4\\src\\sys\\windows\\overlapped.rs","byte_start":13630271,"byte_end":13630281,"line_start":35,"line_end":35,"column_start":22,"column_end":32},"kind":{"Impl":{"id":33}},"from":{"krate":0,"index":521},"to":{"krate":2,"index":3069}},{"span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.8.4\\src\\sys\\windows\\selector.rs","byte_start":13631291,"byte_end":13631299,"line_start":38,"line_end":38,"column_start":6,"column_end":14},"kind":{"Impl":{"id":34}},"from":{"krate":0,"index":816},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.8.4\\src\\sys\\windows\\selector.rs","byte_start":13631696,"byte_end":13631704,"line_start":55,"line_end":55,"column_start":10,"column_end":18},"kind":{"Impl":{"id":35}},"from":{"krate":0,"index":816},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.8.4\\src\\sys\\windows\\selector.rs","byte_start":13633109,"byte_end":13633118,"line_start":114,"line_end":114,"column_start":6,"column_end":15},"kind":{"Impl":{"id":36}},"from":{"krate":0,"index":834},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.8.4\\src\\sys\\windows\\selector.rs","byte_start":13639100,"byte_end":13639109,"line_start":261,"line_end":261,"column_start":10,"column_end":19},"kind":{"Impl":{"id":37}},"from":{"krate":0,"index":834},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.8.4\\src\\sys\\windows\\selector.rs","byte_start":13640154,"byte_end":13640163,"line_start":291,"line_end":291,"column_start":15,"column_end":24},"kind":{"Impl":{"id":38}},"from":{"krate":0,"index":834},"to":{"krate":2,"index":3300}},{"span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.8.4\\src\\sys\\windows\\selector.rs","byte_start":13641883,"byte_end":13641891,"line_start":335,"line_end":335,"column_start":6,"column_end":14},"kind":{"Impl":{"id":39}},"from":{"krate":0,"index":851},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.8.4\\src\\sys\\windows\\selector.rs","byte_start":13643397,"byte_end":13643405,"line_start":387,"line_end":387,"column_start":10,"column_end":18},"kind":{"Impl":{"id":40}},"from":{"krate":0,"index":851},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.8.4\\src\\sys\\windows\\selector.rs","byte_start":13644330,"byte_end":13644343,"line_start":422,"line_end":422,"column_start":22,"column_end":35},"kind":{"Impl":{"id":41}},"from":{"krate":0,"index":867},"to":{"krate":2,"index":3069}},{"span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.8.4\\src\\sys\\windows\\selector.rs","byte_start":13644353,"byte_end":13644366,"line_start":424,"line_end":424,"column_start":6,"column_end":19},"kind":{"Impl":{"id":42}},"from":{"krate":0,"index":867},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.8.4\\src\\sys\\windows\\selector.rs","byte_start":13648260,"byte_end":13648273,"line_start":545,"line_end":545,"column_start":10,"column_end":23},"kind":{"Impl":{"id":43}},"from":{"krate":0,"index":867},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.8.4\\src\\sys\\windows\\selector.rs","byte_start":13653764,"byte_end":13653777,"line_start":694,"line_end":694,"column_start":15,"column_end":28},"kind":{"Impl":{"id":44}},"from":{"krate":0,"index":867},"to":{"krate":2,"index":3300}},{"span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.8.4\\src\\sys\\windows\\net.rs","byte_start":13658068,"byte_end":13658083,"line_start":53,"line_end":53,"column_start":6,"column_end":21},"kind":{"Impl":{"id":45}},"from":{"krate":0,"index":978},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.8.4\\src\\sys\\windows\\named_pipe.rs","byte_start":13667326,"byte_end":13667331,"line_start":94,"line_end":94,"column_start":6,"column_end":11},"kind":{"Impl":{"id":46}},"from":{"krate":0,"index":1267},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.8.4\\src\\sys\\windows\\named_pipe.rs","byte_start":13677127,"byte_end":13677136,"line_start":354,"line_end":354,"column_start":6,"column_end":15},"kind":{"Impl":{"id":47}},"from":{"krate":0,"index":1265},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.8.4\\src\\sys\\windows\\named_pipe.rs","byte_start":13681992,"byte_end":13682001,"line_start":472,"line_end":472,"column_start":24,"column_end":33},"kind":{"Impl":{"id":48}},"from":{"krate":0,"index":1265},"to":{"krate":1,"index":6013}},{"span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.8.4\\src\\sys\\windows\\named_pipe.rs","byte_start":13682741,"byte_end":13682750,"line_start":494,"line_end":494,"column_start":15,"column_end":24},"kind":{"Impl":{"id":49}},"from":{"krate":0,"index":1265},"to":{"krate":1,"index":4723}},{"span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.8.4\\src\\sys\\windows\\named_pipe.rs","byte_start":13682892,"byte_end":13682901,"line_start":500,"line_end":500,"column_start":16,"column_end":25},"kind":{"Impl":{"id":50}},"from":{"krate":0,"index":1265},"to":{"krate":1,"index":4780}},{"span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.8.4\\src\\sys\\windows\\named_pipe.rs","byte_start":13686169,"byte_end":13686178,"line_start":599,"line_end":599,"column_start":17,"column_end":26},"kind":{"Impl":{"id":51}},"from":{"krate":0,"index":1265},"to":{"krate":0,"index":193}},{"span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.8.4\\src\\sys\\windows\\named_pipe.rs","byte_start":13687743,"byte_end":13687752,"line_start":659,"line_end":659,"column_start":22,"column_end":31},"kind":{"Impl":{"id":52}},"from":{"krate":0,"index":1265},"to":{"krate":1,"index":6011}},{"span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.8.4\\src\\sys\\windows\\named_pipe.rs","byte_start":13687872,"byte_end":13687881,"line_start":665,"line_end":665,"column_start":21,"column_end":30},"kind":{"Impl":{"id":53}},"from":{"krate":0,"index":1265},"to":{"krate":2,"index":9685}},{"span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.8.4\\src\\sys\\windows\\named_pipe.rs","byte_start":13688003,"byte_end":13688012,"line_start":671,"line_end":671,"column_start":15,"column_end":24},"kind":{"Impl":{"id":54}},"from":{"krate":0,"index":1265},"to":{"krate":2,"index":3300}},{"span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.8.4\\src\\sys\\windows\\named_pipe.rs","byte_start":13688522,"byte_end":13688527,"line_start":688,"line_end":688,"column_start":6,"column_end":11},"kind":{"Impl":{"id":55}},"from":{"krate":0,"index":1267},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.8.4\\src\\sys\\windows\\named_pipe.rs","byte_start":13697083,"byte_end":13697085,"line_start":926,"line_end":926,"column_start":6,"column_end":8},"kind":{"Impl":{"id":56}},"from":{"krate":0,"index":1285},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.8.4\\src\\sys\\windows\\named_pipe.rs","byte_start":13698480,"byte_end":13698490,"line_start":972,"line_end":972,"column_start":6,"column_end":16},"kind":{"Impl":{"id":57}},"from":{"krate":0,"index":1341},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.8.4\\src\\sys\\windows\\waker.rs","byte_start":13655954,"byte_end":13655959,"line_start":15,"line_end":15,"column_start":6,"column_end":11},"kind":{"Impl":{"id":58}},"from":{"krate":0,"index":1364},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.8.4\\src\\sys\\windows\\mod.rs","byte_start":13602998,"byte_end":13603011,"line_start":62,"line_end":62,"column_start":19,"column_end":32},"kind":{"Impl":{"id":59}},"from":{"krate":0,"index":1395},"to":{"krate":2,"index":3300}},{"span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.8.4\\src\\sys\\windows\\mod.rs","byte_start":13603457,"byte_end":13603470,"line_start":77,"line_end":77,"column_start":10,"column_end":23},"kind":{"Impl":{"id":60}},"from":{"krate":0,"index":1402},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.8.4\\src\\waker.rs","byte_start":54633,"byte_end":54638,"line_start":82,"line_end":82,"column_start":6,"column_end":11},"kind":{"Impl":{"id":62}},"from":{"krate":0,"index":1438},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.8.4\\src\\event\\event.rs","byte_start":55736,"byte_end":55741,"line_start":21,"line_end":21,"column_start":6,"column_end":11},"kind":{"Impl":{"id":63}},"from":{"krate":0,"index":1442},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.8.4\\src\\event\\event.rs","byte_start":62909,"byte_end":62914,"line_start":202,"line_end":202,"column_start":21,"column_end":26},"kind":{"Impl":{"id":64}},"from":{"krate":0,"index":1442},"to":{"krate":2,"index":9685}},{"span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.8.4\\src\\event\\event.rs","byte_start":63623,"byte_end":63635,"line_start":219,"line_end":219,"column_start":37,"column_end":49},"kind":{"Impl":{"id":65}},"from":{"krate":0,"index":140},"to":{"krate":2,"index":9685}},{"span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.8.4\\src\\event\\events.rs","byte_start":65998,"byte_end":66004,"line_start":81,"line_end":81,"column_start":6,"column_end":12},"kind":{"Impl":{"id":66}},"from":{"krate":0,"index":157},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.8.4\\src\\event\\events.rs","byte_start":69120,"byte_end":69124,"line_start":203,"line_end":203,"column_start":23,"column_end":27},"kind":{"Impl":{"id":67}},"from":{"krate":0,"index":1446},"to":{"krate":2,"index":7985}},{"span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.8.4\\src\\event\\events.rs","byte_start":69600,"byte_end":69606,"line_start":226,"line_end":226,"column_start":21,"column_end":27},"kind":{"Impl":{"id":68}},"from":{"krate":0,"index":157},"to":{"krate":2,"index":9685}},{"span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.8.4\\src\\event\\source.rs","byte_start":73770,"byte_end":73773,"line_start":114,"line_end":114,"column_start":20,"column_end":23},"kind":{"Impl":{"id":69}},"from":{"krate":5,"index":321},"to":{"krate":0,"index":193}},{"span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.8.4\\src\\io_source.rs","byte_start":13700861,"byte_end":13700869,"line_start":69,"line_end":69,"column_start":9,"column_end":17},"kind":{"Impl":{"id":70}},"from":{"krate":0,"index":1497},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.8.4\\src\\io_source.rs","byte_start":13702169,"byte_end":13702177,"line_start":114,"line_end":114,"column_start":19,"column_end":27},"kind":{"Impl":{"id":71}},"from":{"krate":0,"index":1497},"to":{"krate":2,"index":3276}},{"span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.8.4\\src\\io_source.rs","byte_start":13702444,"byte_end":13702452,"line_start":126,"line_end":126,"column_start":22,"column_end":30},"kind":{"Impl":{"id":72}},"from":{"krate":0,"index":1497},"to":{"krate":2,"index":3289}},{"span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.8.4\\src\\io_source.rs","byte_start":13703570,"byte_end":13703578,"line_start":171,"line_end":171,"column_start":27,"column_end":35},"kind":{"Impl":{"id":73}},"from":{"krate":0,"index":1497},"to":{"krate":0,"index":193}},{"span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.8.4\\src\\io_source.rs","byte_start":13705473,"byte_end":13705481,"line_start":243,"line_end":243,"column_start":24,"column_end":32},"kind":{"Impl":{"id":74}},"from":{"krate":0,"index":1497},"to":{"krate":2,"index":9685}},{"span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.8.4\\src\\io_source.rs","byte_start":13705786,"byte_end":13705796,"line_start":260,"line_end":260,"column_start":6,"column_end":16},"kind":{"Impl":{"id":75}},"from":{"krate":0,"index":1532},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.8.4\\src\\io_source.rs","byte_start":13708094,"byte_end":13708104,"line_start":328,"line_end":328,"column_start":16,"column_end":26},"kind":{"Impl":{"id":76}},"from":{"krate":0,"index":1532},"to":{"krate":2,"index":2679}},{"span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.8.4\\src\\net\\tcp\\listener.rs","byte_start":13711408,"byte_end":13711419,"line_start":48,"line_end":48,"column_start":6,"column_end":17},"kind":{"Impl":{"id":77}},"from":{"krate":0,"index":1598},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.8.4\\src\\net\\tcp\\listener.rs","byte_start":13714960,"byte_end":13714971,"line_start":139,"line_end":139,"column_start":24,"column_end":35},"kind":{"Impl":{"id":78}},"from":{"krate":0,"index":1598},"to":{"krate":0,"index":193}},{"span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.8.4\\src\\net\\tcp\\listener.rs","byte_start":13715527,"byte_end":13715538,"line_start":163,"line_end":163,"column_start":21,"column_end":32},"kind":{"Impl":{"id":79}},"from":{"krate":0,"index":1598},"to":{"krate":2,"index":9685}},{"span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.8.4\\src\\net\\tcp\\listener.rs","byte_start":13716276,"byte_end":13716287,"line_start":197,"line_end":197,"column_start":24,"column_end":35},"kind":{"Impl":{"id":80}},"from":{"krate":0,"index":1598},"to":{"krate":1,"index":6043}},{"span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.8.4\\src\\net\\tcp\\listener.rs","byte_start":13716430,"byte_end":13716441,"line_start":204,"line_end":204,"column_start":22,"column_end":33},"kind":{"Impl":{"id":81}},"from":{"krate":0,"index":1598},"to":{"krate":1,"index":6039}},{"span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.8.4\\src\\net\\tcp\\listener.rs","byte_start":13716570,"byte_end":13716581,"line_start":211,"line_end":211,"column_start":24,"column_end":35},"kind":{"Impl":{"id":82}},"from":{"krate":0,"index":1598},"to":{"krate":1,"index":6041}},{"span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.8.4\\src\\net\\tcp\\stream.rs","byte_start":13719173,"byte_end":13719182,"line_start":52,"line_end":52,"column_start":6,"column_end":15},"kind":{"Impl":{"id":83}},"from":{"krate":0,"index":1691},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.8.4\\src\\net\\tcp\\stream.rs","byte_start":13727678,"byte_end":13727687,"line_start":270,"line_end":270,"column_start":15,"column_end":24},"kind":{"Impl":{"id":84}},"from":{"krate":0,"index":1691},"to":{"krate":1,"index":4723}},{"span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.8.4\\src\\net\\tcp\\stream.rs","byte_start":13728299,"byte_end":13728308,"line_start":290,"line_end":290,"column_start":16,"column_end":25},"kind":{"Impl":{"id":85}},"from":{"krate":0,"index":1691},"to":{"krate":1,"index":4780}},{"span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.8.4\\src\\net\\tcp\\stream.rs","byte_start":13729121,"byte_end":13729130,"line_start":318,"line_end":318,"column_start":24,"column_end":33},"kind":{"Impl":{"id":86}},"from":{"krate":0,"index":1691},"to":{"krate":0,"index":193}},{"span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.8.4\\src\\net\\tcp\\stream.rs","byte_start":13729686,"byte_end":13729695,"line_start":342,"line_end":342,"column_start":21,"column_end":30},"kind":{"Impl":{"id":87}},"from":{"krate":0,"index":1691},"to":{"krate":2,"index":9685}},{"span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.8.4\\src\\net\\tcp\\stream.rs","byte_start":13730421,"byte_end":13730430,"line_start":376,"line_end":376,"column_start":24,"column_end":33},"kind":{"Impl":{"id":88}},"from":{"krate":0,"index":1691},"to":{"krate":1,"index":6043}},{"span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.8.4\\src\\net\\tcp\\stream.rs","byte_start":13730573,"byte_end":13730582,"line_start":383,"line_end":383,"column_start":22,"column_end":31},"kind":{"Impl":{"id":89}},"from":{"krate":0,"index":1691},"to":{"krate":1,"index":6039}},{"span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.8.4\\src\\net\\tcp\\stream.rs","byte_start":13730711,"byte_end":13730720,"line_start":390,"line_end":390,"column_start":24,"column_end":33},"kind":{"Impl":{"id":90}},"from":{"krate":0,"index":1691},"to":{"krate":1,"index":6041}},{"span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.8.4\\src\\net\\udp.rs","byte_start":13735085,"byte_end":13735094,"line_start":95,"line_end":95,"column_start":6,"column_end":15},"kind":{"Impl":{"id":91}},"from":{"krate":0,"index":1809},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.8.4\\src\\net\\udp.rs","byte_start":13753850,"byte_end":13753859,"line_start":615,"line_end":615,"column_start":24,"column_end":33},"kind":{"Impl":{"id":92}},"from":{"krate":0,"index":1809},"to":{"krate":0,"index":193}},{"span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.8.4\\src\\net\\udp.rs","byte_start":13754415,"byte_end":13754424,"line_start":639,"line_end":639,"column_start":21,"column_end":30},"kind":{"Impl":{"id":93}},"from":{"krate":0,"index":1809},"to":{"krate":2,"index":9685}},{"span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.8.4\\src\\net\\udp.rs","byte_start":13755150,"byte_end":13755159,"line_start":673,"line_end":673,"column_start":24,"column_end":33},"kind":{"Impl":{"id":94}},"from":{"krate":0,"index":1809},"to":{"krate":1,"index":6043}},{"span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.8.4\\src\\net\\udp.rs","byte_start":13755302,"byte_end":13755311,"line_start":680,"line_end":680,"column_start":22,"column_end":31},"kind":{"Impl":{"id":95}},"from":{"krate":0,"index":1809},"to":{"krate":1,"index":6039}},{"span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.8.4\\src\\net\\udp.rs","byte_start":13755440,"byte_end":13755449,"line_start":687,"line_end":687,"column_start":24,"column_end":33},"kind":{"Impl":{"id":96}},"from":{"krate":0,"index":1809},"to":{"krate":1,"index":6041}}]}