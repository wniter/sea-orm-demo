{"config":{"output_file":null,"full_docs":false,"pub_only":true,"reachable_only":true,"distro_crate":false,"signatures":false,"borrow_data":false},"version":"0.19.1","compilation":{"directory":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tower-0.4.13","program":"C:\\Users\\admin\\.rustup\\toolchains\\stable-x86_64-pc-windows-msvc\\bin\\rls.exe","arguments":["--crate-name","tower","--edition=2018","C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tower-0.4.13\\src\\lib.rs","--json=diagnostic-rendered-ansi,artifacts,future-incompat","--crate-type","lib","--emit=dep-info,metadata","-C","embed-bitcode=no","-C","debuginfo=2","--cfg","feature=\"__common\"","--cfg","feature=\"default\"","--cfg","feature=\"futures-core\"","--cfg","feature=\"futures-util\"","--cfg","feature=\"log\"","--cfg","feature=\"make\"","--cfg","feature=\"pin-project\"","--cfg","feature=\"pin-project-lite\"","--cfg","feature=\"tokio\"","--cfg","feature=\"tracing\"","--cfg","feature=\"util\"","-C","metadata=172eba46b1037254","-C","extra-filename=-172eba46b1037254","--out-dir","f:\\sea-orm-demo\\axum_examples\\async-graphql\\target\\rls\\debug\\deps","-L","dependency=f:\\sea-orm-demo\\axum_examples\\async-graphql\\target\\rls\\debug\\deps","--extern","futures_core=f:\\sea-orm-demo\\axum_examples\\async-graphql\\target\\rls\\debug\\deps\\libfutures_core-e34f210f395a45b5.rmeta","--extern","futures_util=f:\\sea-orm-demo\\axum_examples\\async-graphql\\target\\rls\\debug\\deps\\libfutures_util-4eabb3c6cea22602.rmeta","--extern","pin_project=f:\\sea-orm-demo\\axum_examples\\async-graphql\\target\\rls\\debug\\deps\\libpin_project-2b54ce4089ed2d94.rmeta","--extern","pin_project_lite=f:\\sea-orm-demo\\axum_examples\\async-graphql\\target\\rls\\debug\\deps\\libpin_project_lite-e22eb2e62c630ccc.rmeta","--extern","tokio=f:\\sea-orm-demo\\axum_examples\\async-graphql\\target\\rls\\debug\\deps\\libtokio-49a7f04a5e8c23c3.rmeta","--extern","tower_layer=f:\\sea-orm-demo\\axum_examples\\async-graphql\\target\\rls\\debug\\deps\\libtower_layer-5a8639b498ffc33c.rmeta","--extern","tower_service=f:\\sea-orm-demo\\axum_examples\\async-graphql\\target\\rls\\debug\\deps\\libtower_service-4ec35981d4bae4b7.rmeta","--extern","tracing=f:\\sea-orm-demo\\axum_examples\\async-graphql\\target\\rls\\debug\\deps\\libtracing-558180aae9c2804c.rmeta","--cap-lints","allow","-L","native=C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\windows_x86_64_msvc-0.36.1\\lib","--error-format=json","--sysroot","C:\\Users\\admin\\.rustup/toolchains/stable-x86_64-pc-windows-msvc"],"output":"f:\\sea-orm-demo\\axum_examples\\async-graphql\\target\\rls\\debug\\deps\\libtower-172eba46b1037254.rmeta"},"prelude":{"crate_id":{"name":"tower","disambiguator":[943706277944736391,0]},"crate_root":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tower-0.4.13\\src","external_crates":[{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tower-0.4.13\\src\\lib.rs","num":1,"id":{"name":"std","disambiguator":[13015713666403456114,0]}},{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tower-0.4.13\\src\\lib.rs","num":2,"id":{"name":"core","disambiguator":[1507510987272037120,0]}},{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tower-0.4.13\\src\\lib.rs","num":3,"id":{"name":"compiler_builtins","disambiguator":[3803325750332457499,0]}},{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tower-0.4.13\\src\\lib.rs","num":4,"id":{"name":"rustc_std_workspace_core","disambiguator":[4223354511651166533,0]}},{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tower-0.4.13\\src\\lib.rs","num":5,"id":{"name":"alloc","disambiguator":[15700094508901508366,0]}},{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tower-0.4.13\\src\\lib.rs","num":6,"id":{"name":"libc","disambiguator":[12632183332710247155,0]}},{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tower-0.4.13\\src\\lib.rs","num":7,"id":{"name":"unwind","disambiguator":[18262169243471273054,0]}},{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tower-0.4.13\\src\\lib.rs","num":8,"id":{"name":"cfg_if","disambiguator":[15664785966706829415,0]}},{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tower-0.4.13\\src\\lib.rs","num":9,"id":{"name":"miniz_oxide","disambiguator":[3895343934390880989,0]}},{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tower-0.4.13\\src\\lib.rs","num":10,"id":{"name":"rustc_std_workspace_alloc","disambiguator":[1841993658411810574,0]}},{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tower-0.4.13\\src\\lib.rs","num":11,"id":{"name":"adler","disambiguator":[1117248029108287081,0]}},{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tower-0.4.13\\src\\lib.rs","num":12,"id":{"name":"hashbrown","disambiguator":[14646112292732085519,0]}},{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tower-0.4.13\\src\\lib.rs","num":13,"id":{"name":"std_detect","disambiguator":[11979428506951486581,0]}},{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tower-0.4.13\\src\\lib.rs","num":14,"id":{"name":"rustc_demangle","disambiguator":[2104796995944127881,0]}},{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tower-0.4.13\\src\\lib.rs","num":15,"id":{"name":"panic_unwind","disambiguator":[4084207378877276393,0]}},{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tower-0.4.13\\src\\make\\make_connection.rs","num":16,"id":{"name":"tokio","disambiguator":[10585848036333243564,0]}},{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tower-0.4.13\\src\\make\\make_connection.rs","num":17,"id":{"name":"parking_lot","disambiguator":[2119401321036730487,0]}},{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tower-0.4.13\\src\\make\\make_connection.rs","num":18,"id":{"name":"lock_api","disambiguator":[2157842252132152726,0]}},{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tower-0.4.13\\src\\make\\make_connection.rs","num":19,"id":{"name":"scopeguard","disambiguator":[14791793103096291185,0]}},{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tower-0.4.13\\src\\make\\make_connection.rs","num":20,"id":{"name":"parking_lot_core","disambiguator":[8026415907765067914,0]}},{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tower-0.4.13\\src\\make\\make_connection.rs","num":21,"id":{"name":"smallvec","disambiguator":[9808925325785394637,0]}},{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tower-0.4.13\\src\\make\\make_connection.rs","num":22,"id":{"name":"cfg_if","disambiguator":[17941200006019888196,0]}},{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tower-0.4.13\\src\\make\\make_connection.rs","num":23,"id":{"name":"windows_sys","disambiguator":[8944581579481882201,0]}},{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tower-0.4.13\\src\\make\\make_connection.rs","num":24,"id":{"name":"winapi","disambiguator":[16001754856154498328,0]}},{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tower-0.4.13\\src\\util\\call_all\\common.rs","num":25,"id":{"name":"pin_project_lite","disambiguator":[11650812661830545456,0]}},{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tower-0.4.13\\src\\make\\make_connection.rs","num":26,"id":{"name":"mio","disambiguator":[14144391104112046288,0]}},{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tower-0.4.13\\src\\make\\make_connection.rs","num":27,"id":{"name":"log","disambiguator":[17080025455861879662,0]}},{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tower-0.4.13\\src\\make\\make_connection.rs","num":28,"id":{"name":"bytes","disambiguator":[11952186523175634956,0]}},{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tower-0.4.13\\src\\make\\make_connection.rs","num":29,"id":{"name":"serde","disambiguator":[1274656768426680720,0]}},{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tower-0.4.13\\src\\make\\make_connection.rs","num":30,"id":{"name":"serde_derive","disambiguator":[15781025730644043985,0]}},{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tower-0.4.13\\src\\make\\make_connection.rs","num":31,"id":{"name":"once_cell","disambiguator":[14722822818971705044,0]}},{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tower-0.4.13\\src\\make\\make_connection.rs","num":32,"id":{"name":"tokio_macros","disambiguator":[14295372323141367636,0]}},{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tower-0.4.13\\src\\make\\make_connection.rs","num":33,"id":{"name":"memchr","disambiguator":[11795001318777741512,0]}},{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tower-0.4.13\\src\\make\\make_connection.rs","num":34,"id":{"name":"socket2","disambiguator":[3978988309787425136,0]}},{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tower-0.4.13\\src\\make\\make_connection.rs","num":35,"id":{"name":"num_cpus","disambiguator":[9680463424726089930,0]}},{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tower-0.4.13\\src\\make\\make_connection.rs","num":36,"id":{"name":"tower_service","disambiguator":[10550438455357935049,0]}},{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tower-0.4.13\\src\\util\\and_then.rs","num":37,"id":{"name":"futures_core","disambiguator":[11080074677927752119,0]}},{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tower-0.4.13\\src\\util\\and_then.rs","num":38,"id":{"name":"futures_util","disambiguator":[10402221943807794593,0]}},{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tower-0.4.13\\src\\util\\and_then.rs","num":39,"id":{"name":"pin_utils","disambiguator":[13643175944386566012,0]}},{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tower-0.4.13\\src\\util\\and_then.rs","num":40,"id":{"name":"futures_task","disambiguator":[549887119324496450,0]}},{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tower-0.4.13\\src\\util\\and_then.rs","num":41,"id":{"name":"futures_sink","disambiguator":[8823577968076171608,0]}},{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tower-0.4.13\\src\\util\\and_then.rs","num":42,"id":{"name":"slab","disambiguator":[4770103539533495208,0]}},{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tower-0.4.13\\src\\util\\and_then.rs","num":43,"id":{"name":"futures_io","disambiguator":[10722248012823961366,0]}},{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tower-0.4.13\\src\\util\\and_then.rs","num":44,"id":{"name":"tower_layer","disambiguator":[2135094411813591526,0]}},{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tower-0.4.13\\src\\util\\either.rs","num":45,"id":{"name":"pin_project","disambiguator":[6403905162254589928,0]}},{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tower-0.4.13\\src\\util\\either.rs","num":46,"id":{"name":"pin_project_internal","disambiguator":[2718536964268315247,0]}}],"span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tower-0.4.13\\src\\lib.rs","byte_start":0,"byte_end":9561,"line_start":1,"line_end":242,"column_start":1,"column_end":62}},"imports":[{"kind":"Use","ref_id":{"krate":0,"index":30},"span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tower-0.4.13\\src\\make\\mod.rs","byte_start":10992,"byte_end":11006,"line_start":6,"line_end":6,"column_start":32,"column_end":46},"alias_span":null,"name":"MakeConnection","value":"","parent":{"krate":0,"index":5}},{"kind":"Use","ref_id":{"krate":0,"index":1602},"span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tower-0.4.13\\src\\make\\mod.rs","byte_start":11044,"byte_end":11050,"line_start":7,"line_end":7,"column_start":37,"column_end":43},"alias_span":null,"name":"Shared","value":"","parent":{"krate":0,"index":5}},{"kind":"Use","ref_id":{"krate":0,"index":148},"span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tower-0.4.13\\src\\make\\mod.rs","byte_start":11081,"byte_end":11090,"line_start":8,"line_end":8,"column_start":30,"column_end":39},"alias_span":null,"name":"AsService","value":"","parent":{"krate":0,"index":5}},{"kind":"Use","ref_id":{"krate":0,"index":125},"span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tower-0.4.13\\src\\make\\mod.rs","byte_start":11092,"byte_end":11103,"line_start":8,"line_end":8,"column_start":41,"column_end":52},"alias_span":null,"name":"IntoService","value":"","parent":{"krate":0,"index":5}},{"kind":"Use","ref_id":{"krate":0,"index":96},"span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tower-0.4.13\\src\\make\\mod.rs","byte_start":11105,"byte_end":11116,"line_start":8,"line_end":8,"column_start":54,"column_end":65},"alias_span":null,"name":"MakeService","value":"","parent":{"krate":0,"index":5}},{"kind":"Use","ref_id":{"krate":0,"index":1623},"span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tower-0.4.13\\src\\make\\mod.rs","byte_start":11200,"byte_end":11212,"line_start":13,"line_end":13,"column_start":42,"column_end":54},"alias_span":null,"name":"SharedFuture","value":"","parent":{"krate":0,"index":184}},{"kind":"Use","ref_id":{"krate":0,"index":287},"span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tower-0.4.13\\src\\util\\boxed\\mod.rs","byte_start":64162,"byte_end":64170,"line_start":40,"line_end":40,"column_start":23,"column_end":31},"alias_span":null,"name":"BoxLayer","value":"","parent":{"krate":0,"index":265}},{"kind":"Use","ref_id":{"krate":0,"index":351},"span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tower-0.4.13\\src\\util\\boxed\\mod.rs","byte_start":64178,"byte_end":64188,"line_start":40,"line_end":40,"column_start":39,"column_end":49},"alias_span":null,"name":"BoxService","value":"","parent":{"krate":0,"index":265}},{"kind":"Use","ref_id":{"krate":0,"index":410},"span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tower-0.4.13\\src\\util\\boxed\\mod.rs","byte_start":64198,"byte_end":64214,"line_start":40,"line_end":40,"column_start":59,"column_end":75},"alias_span":null,"name":"UnsyncBoxService","value":"","parent":{"krate":0,"index":265}},{"kind":"Use","ref_id":{"krate":0,"index":1795},"span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tower-0.4.13\\src\\util\\call_all\\mod.rs","byte_start":75596,"byte_end":75603,"line_start":11,"line_end":11,"column_start":25,"column_end":32},"alias_span":null,"name":"CallAll","value":"","parent":{"krate":0,"index":527}},{"kind":"Use","ref_id":{"krate":0,"index":1840},"span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tower-0.4.13\\src\\util\\call_all\\mod.rs","byte_start":75616,"byte_end":75632,"line_start":11,"line_end":11,"column_start":45,"column_end":61},"alias_span":null,"name":"CallAllUnordered","value":"","parent":{"krate":0,"index":527}},{"kind":"Use","ref_id":{"krate":0,"index":1656},"span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tower-0.4.13\\src\\util\\mod.rs","byte_start":24064,"byte_end":24071,"line_start":24,"line_end":24,"column_start":16,"column_end":23},"alias_span":null,"name":"AndThen","value":"","parent":{"krate":0,"index":188}},{"kind":"Use","ref_id":{"krate":0,"index":1714},"span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tower-0.4.13\\src\\util\\mod.rs","byte_start":24073,"byte_end":24085,"line_start":24,"line_end":24,"column_start":25,"column_end":37},"alias_span":null,"name":"AndThenLayer","value":"","parent":{"krate":0,"index":188}},{"kind":"Use","ref_id":{"krate":0,"index":287},"span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tower-0.4.13\\src\\util\\mod.rs","byte_start":24100,"byte_end":24108,"line_start":25,"line_end":25,"column_start":13,"column_end":21},"alias_span":null,"name":"BoxLayer","value":"","parent":{"krate":0,"index":188}},{"kind":"Use","ref_id":{"krate":0,"index":351},"span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tower-0.4.13\\src\\util\\mod.rs","byte_start":24110,"byte_end":24120,"line_start":25,"line_end":25,"column_start":23,"column_end":33},"alias_span":null,"name":"BoxService","value":"","parent":{"krate":0,"index":188}},{"kind":"Use","ref_id":{"krate":0,"index":410},"span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tower-0.4.13\\src\\util\\mod.rs","byte_start":24122,"byte_end":24138,"line_start":25,"line_end":25,"column_start":35,"column_end":51},"alias_span":null,"name":"UnsyncBoxService","value":"","parent":{"krate":0,"index":188}},{"kind":"Use","ref_id":{"krate":0,"index":486},"span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tower-0.4.13\\src\\util\\mod.rs","byte_start":24158,"byte_end":24173,"line_start":26,"line_end":26,"column_start":18,"column_end":33},"alias_span":null,"name":"BoxCloneService","value":"","parent":{"krate":0,"index":188}},{"kind":"Use","ref_id":{"krate":0,"index":1935},"span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tower-0.4.13\\src\\util\\mod.rs","byte_start":24187,"byte_end":24193,"line_start":27,"line_end":27,"column_start":13,"column_end":19},"alias_span":null,"name":"Either","value":"","parent":{"krate":0,"index":188}},{"kind":"Use","ref_id":{"krate":0,"index":748},"span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tower-0.4.13\\src\\util\\mod.rs","byte_start":24216,"byte_end":24230,"line_start":28,"line_end":28,"column_start":22,"column_end":36},"alias_span":null,"name":"future_service","value":"","parent":{"krate":0,"index":188}},{"kind":"Use","ref_id":{"krate":0,"index":1944},"span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tower-0.4.13\\src\\util\\mod.rs","byte_start":24232,"byte_end":24245,"line_start":28,"line_end":28,"column_start":38,"column_end":51},"alias_span":null,"name":"FutureService","value":"","parent":{"krate":0,"index":188}},{"kind":"Use","ref_id":{"krate":0,"index":1965},"span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tower-0.4.13\\src\\util\\mod.rs","byte_start":24262,"byte_end":24268,"line_start":29,"line_end":29,"column_start":15,"column_end":21},"alias_span":null,"name":"MapErr","value":"","parent":{"krate":0,"index":188}},{"kind":"Use","ref_id":{"krate":0,"index":1974},"span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tower-0.4.13\\src\\util\\mod.rs","byte_start":24270,"byte_end":24281,"line_start":29,"line_end":29,"column_start":23,"column_end":34},"alias_span":null,"name":"MapErrLayer","value":"","parent":{"krate":0,"index":188}},{"kind":"Use","ref_id":{"krate":0,"index":2199},"span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tower-0.4.13\\src\\util\\mod.rs","byte_start":24301,"byte_end":24310,"line_start":30,"line_end":30,"column_start":18,"column_end":27},"alias_span":null,"name":"MapFuture","value":"","parent":{"krate":0,"index":188}},{"kind":"Use","ref_id":{"krate":0,"index":2208},"span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tower-0.4.13\\src\\util\\mod.rs","byte_start":24312,"byte_end":24326,"line_start":30,"line_end":30,"column_start":29,"column_end":43},"alias_span":null,"name":"MapFutureLayer","value":"","parent":{"krate":0,"index":188}},{"kind":"Use","ref_id":{"krate":0,"index":2037},"span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tower-0.4.13\\src\\util\\mod.rs","byte_start":24347,"byte_end":24357,"line_start":31,"line_end":31,"column_start":19,"column_end":29},"alias_span":null,"name":"MapRequest","value":"","parent":{"krate":0,"index":188}},{"kind":"Use","ref_id":{"krate":0,"index":2046},"span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tower-0.4.13\\src\\util\\mod.rs","byte_start":24359,"byte_end":24374,"line_start":31,"line_end":31,"column_start":31,"column_end":46},"alias_span":null,"name":"MapRequestLayer","value":"","parent":{"krate":0,"index":188}},{"kind":"Use","ref_id":{"krate":0,"index":2055},"span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tower-0.4.13\\src\\util\\mod.rs","byte_start":24396,"byte_end":24407,"line_start":32,"line_end":32,"column_start":20,"column_end":31},"alias_span":null,"name":"MapResponse","value":"","parent":{"krate":0,"index":188}},{"kind":"Use","ref_id":{"krate":0,"index":2064},"span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tower-0.4.13\\src\\util\\mod.rs","byte_start":24409,"byte_end":24425,"line_start":32,"line_end":32,"column_start":33,"column_end":49},"alias_span":null,"name":"MapResponseLayer","value":"","parent":{"krate":0,"index":188}},{"kind":"Use","ref_id":{"krate":0,"index":2127},"span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tower-0.4.13\\src\\util\\mod.rs","byte_start":24445,"byte_end":24454,"line_start":33,"line_end":33,"column_start":18,"column_end":27},"alias_span":null,"name":"MapResult","value":"","parent":{"krate":0,"index":188}},{"kind":"Use","ref_id":{"krate":0,"index":2136},"span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tower-0.4.13\\src\\util\\mod.rs","byte_start":24456,"byte_end":24470,"line_start":33,"line_end":33,"column_start":29,"column_end":43},"alias_span":null,"name":"MapResultLayer","value":"","parent":{"krate":0,"index":188}},{"kind":"Use","ref_id":{"krate":0,"index":2214},"span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tower-0.4.13\\src\\util\\mod.rs","byte_start":24486,"byte_end":24493,"line_start":34,"line_end":34,"column_start":14,"column_end":21},"alias_span":null,"name":"Oneshot","value":"","parent":{"krate":0,"index":188}},{"kind":"Use","ref_id":{"krate":0,"index":2345},"span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tower-0.4.13\\src\\util\\mod.rs","byte_start":24509,"byte_end":24517,"line_start":35,"line_end":35,"column_start":15,"column_end":23},"alias_span":null,"name":"Optional","value":"","parent":{"krate":0,"index":188}},{"kind":"Use","ref_id":{"krate":0,"index":1196},"span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tower-0.4.13\\src\\util\\mod.rs","byte_start":24531,"byte_end":24536,"line_start":36,"line_end":36,"column_start":13,"column_end":18},"alias_span":null,"name":"Ready","value":"","parent":{"krate":0,"index":188}},{"kind":"Use","ref_id":{"krate":0,"index":1202},"span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tower-0.4.13\\src\\util\\mod.rs","byte_start":24538,"byte_end":24546,"line_start":36,"line_end":36,"column_start":20,"column_end":28},"alias_span":null,"name":"ReadyAnd","value":"","parent":{"krate":0,"index":188}},{"kind":"Use","ref_id":{"krate":0,"index":1175},"span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tower-0.4.13\\src\\util\\mod.rs","byte_start":24548,"byte_end":24560,"line_start":36,"line_end":36,"column_start":30,"column_end":42},"alias_span":null,"name":"ReadyOneshot","value":"","parent":{"krate":0,"index":188}},{"kind":"Use","ref_id":{"krate":0,"index":1243},"span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tower-0.4.13\\src\\util\\mod.rs","byte_start":24580,"byte_end":24590,"line_start":37,"line_end":37,"column_start":18,"column_end":28},"alias_span":null,"name":"service_fn","value":"","parent":{"krate":0,"index":188}},{"kind":"Use","ref_id":{"krate":0,"index":2351},"span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tower-0.4.13\\src\\util\\mod.rs","byte_start":24592,"byte_end":24601,"line_start":37,"line_end":37,"column_start":30,"column_end":39},"alias_span":null,"name":"ServiceFn","value":"","parent":{"krate":0,"index":188}},{"kind":"Use","ref_id":{"krate":0,"index":2359},"span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tower-0.4.13\\src\\util\\mod.rs","byte_start":24615,"byte_end":24619,"line_start":38,"line_end":38,"column_start":12,"column_end":16},"alias_span":null,"name":"Then","value":"","parent":{"krate":0,"index":188}},{"kind":"Use","ref_id":{"krate":0,"index":2368},"span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tower-0.4.13\\src\\util\\mod.rs","byte_start":24621,"byte_end":24630,"line_start":38,"line_end":38,"column_start":18,"column_end":27},"alias_span":null,"name":"ThenLayer","value":"","parent":{"krate":0,"index":188}},{"kind":"Use","ref_id":{"krate":0,"index":1795},"span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tower-0.4.13\\src\\util\\mod.rs","byte_start":24662,"byte_end":24669,"line_start":41,"line_end":41,"column_start":26,"column_end":33},"alias_span":null,"name":"CallAll","value":"","parent":{"krate":0,"index":188}},{"kind":"Use","ref_id":{"krate":0,"index":1840},"span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tower-0.4.13\\src\\util\\mod.rs","byte_start":24671,"byte_end":24687,"line_start":41,"line_end":41,"column_start":35,"column_end":51},"alias_span":null,"name":"CallAllUnordered","value":"","parent":{"krate":0,"index":188}},{"kind":"Use","ref_id":{"krate":0,"index":1075},"span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tower-0.4.13\\src\\util\\mod.rs","byte_start":24817,"byte_end":24822,"line_start":49,"line_end":49,"column_start":30,"column_end":35},"alias_span":null,"name":"optional","value":"","parent":{"krate":0,"index":1425}},{"kind":"Use","ref_id":{"krate":0,"index":1665},"span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tower-0.4.13\\src\\util\\mod.rs","byte_start":24907,"byte_end":24920,"line_start":55,"line_end":55,"column_start":30,"column_end":43},"alias_span":null,"name":"AndThenFuture","value":"","parent":{"krate":0,"index":1429}},{"kind":"Use","ref_id":{"krate":0,"index":1996},"span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tower-0.4.13\\src\\util\\mod.rs","byte_start":24950,"byte_end":24962,"line_start":56,"line_end":56,"column_start":29,"column_end":41},"alias_span":null,"name":"MapErrFuture","value":"","parent":{"krate":0,"index":1429}},{"kind":"Use","ref_id":{"krate":0,"index":2086},"span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tower-0.4.13\\src\\util\\mod.rs","byte_start":24997,"byte_end":25014,"line_start":57,"line_end":57,"column_start":34,"column_end":51},"alias_span":null,"name":"MapResponseFuture","value":"","parent":{"krate":0,"index":1429}},{"kind":"Use","ref_id":{"krate":0,"index":2158},"span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tower-0.4.13\\src\\util\\mod.rs","byte_start":25047,"byte_end":25062,"line_start":58,"line_end":58,"column_start":32,"column_end":47},"alias_span":null,"name":"MapResultFuture","value":"","parent":{"krate":0,"index":1429}},{"kind":"Use","ref_id":{"krate":0,"index":1088},"span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tower-0.4.13\\src\\util\\mod.rs","byte_start":25093,"byte_end":25099,"line_start":59,"line_end":59,"column_start":30,"column_end":36},"alias_span":null,"name":"optional","value":"","parent":{"krate":0,"index":1429}},{"kind":"Use","ref_id":{"krate":0,"index":2393},"span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tower-0.4.13\\src\\util\\mod.rs","byte_start":25138,"byte_end":25148,"line_start":60,"line_end":60,"column_start":26,"column_end":36},"alias_span":null,"name":"ThenFuture","value":"","parent":{"krate":0,"index":1429}},{"kind":"Use","ref_id":{"krate":44,"index":25},"span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tower-0.4.13\\src\\layer.rs","byte_start":150115,"byte_end":150123,"line_start":5,"line_end":5,"column_start":23,"column_end":31},"alias_span":null,"name":"layer_fn","value":"","parent":{"krate":0,"index":1560}},{"kind":"Use","ref_id":{"krate":44,"index":71},"span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tower-0.4.13\\src\\layer.rs","byte_start":150125,"byte_end":150130,"line_start":5,"line_end":5,"column_start":33,"column_end":38},"alias_span":null,"name":"Layer","value":"","parent":{"krate":0,"index":1560}},{"kind":"Use","ref_id":{"krate":44,"index":87},"span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tower-0.4.13\\src\\layer.rs","byte_start":150132,"byte_end":150139,"line_start":5,"line_end":5,"column_start":40,"column_end":47},"alias_span":null,"name":"LayerFn","value":"","parent":{"krate":0,"index":1560}},{"kind":"Use","ref_id":{"krate":44,"index":81},"span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tower-0.4.13\\src\\layer.rs","byte_start":150339,"byte_end":150347,"line_start":13,"line_end":13,"column_start":27,"column_end":35},"alias_span":null,"name":"Identity","value":"","parent":{"krate":0,"index":1571}},{"kind":"Use","ref_id":{"krate":44,"index":95},"span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tower-0.4.13\\src\\layer.rs","byte_start":150349,"byte_end":150354,"line_start":13,"line_end":13,"column_start":37,"column_end":42},"alias_span":null,"name":"Stack","value":"","parent":{"krate":0,"index":1571}},{"kind":"Use","ref_id":{"krate":0,"index":1243},"span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tower-0.4.13\\src\\lib.rs","byte_start":9097,"byte_end":9107,"line_start":223,"line_end":223,"column_start":22,"column_end":32},"alias_span":null,"name":"service_fn","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":1448},"span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tower-0.4.13\\src\\lib.rs","byte_start":9109,"byte_end":9119,"line_start":223,"line_end":223,"column_start":34,"column_end":44},"alias_span":null,"name":"ServiceExt","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":2442},"span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tower-0.4.13\\src\\lib.rs","byte_start":9162,"byte_end":9176,"line_start":226,"line_end":226,"column_start":25,"column_end":39},"alias_span":null,"name":"ServiceBuilder","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":96},"span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tower-0.4.13\\src\\lib.rs","byte_start":9287,"byte_end":9298,"line_start":230,"line_end":230,"column_start":22,"column_end":33},"alias_span":null,"name":"MakeService","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":44,"index":71},"span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tower-0.4.13\\src\\lib.rs","byte_start":9336,"byte_end":9341,"line_start":232,"line_end":232,"column_start":22,"column_end":27},"alias_span":null,"name":"Layer","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":36,"index":13},"span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tower-0.4.13\\src\\lib.rs","byte_start":9381,"byte_end":9388,"line_start":234,"line_end":234,"column_start":24,"column_end":31},"alias_span":null,"name":"Service","value":"","parent":{"krate":0,"index":0}}],"defs":[{"kind":"Mod","id":{"krate":0,"index":0},"span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tower-0.4.13\\src\\lib.rs","byte_start":0,"byte_end":9561,"line_start":1,"line_end":242,"column_start":1,"column_end":62},"name":"","qualname":"::","value":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tower-0.4.13\\src\\lib.rs","parent":null,"children":[{"krate":0,"index":1},{"krate":0,"index":2},{"krate":0,"index":3},{"krate":0,"index":5},{"krate":0,"index":188},{"krate":0,"index":1488},{"krate":0,"index":1560},{"krate":0,"index":1579},{"krate":0,"index":1580},{"krate":0,"index":1583},{"krate":0,"index":1586},{"krate":0,"index":1589},{"krate":0,"index":1592},{"krate":0,"index":1595},{"krate":0,"index":1598},{"krate":0,"index":1601}],"decl_id":null,"docs":" `async fn(Request) -> Result<Response, Error>`","sig":null,"attributes":[{"value":"warn(missing_debug_implementations, missing_docs, rust_2018_idioms,\nunreachable_pub)","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tower-0.4.13\\src\\lib.rs","byte_start":0,"byte_end":106,"line_start":1,"line_end":6,"column_start":1,"column_end":3}},{"value":"forbid(unsafe_code)","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tower-0.4.13\\src\\lib.rs","byte_start":107,"byte_end":130,"line_start":7,"line_end":7,"column_start":1,"column_end":24}},{"value":"allow(elided_lifetimes_in_paths, clippy :: type_complexity)","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tower-0.4.13\\src\\lib.rs","byte_start":131,"byte_end":192,"line_start":8,"line_end":8,"column_start":1,"column_end":62}},{"value":"/ `async fn(Request) -> Result<Response, Error>`","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tower-0.4.13\\src\\lib.rs","byte_start":332,"byte_end":382,"line_start":13,"line_end":13,"column_start":1,"column_end":51}},{"value":"/","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tower-0.4.13\\src\\lib.rs","byte_start":383,"byte_end":386,"line_start":14,"line_end":14,"column_start":1,"column_end":4}},{"value":"/ # Overview","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tower-0.4.13\\src\\lib.rs","byte_start":387,"byte_end":401,"line_start":15,"line_end":15,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tower-0.4.13\\src\\lib.rs","byte_start":402,"byte_end":405,"line_start":16,"line_end":16,"column_start":1,"column_end":4}},{"value":"/ Tower is a library of modular and reusable components for building","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tower-0.4.13\\src\\lib.rs","byte_start":406,"byte_end":476,"line_start":17,"line_end":17,"column_start":1,"column_end":71}},{"value":"/ robust networking clients and servers.","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tower-0.4.13\\src\\lib.rs","byte_start":477,"byte_end":519,"line_start":18,"line_end":18,"column_start":1,"column_end":43}},{"value":"/","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tower-0.4.13\\src\\lib.rs","byte_start":520,"byte_end":523,"line_start":19,"line_end":19,"column_start":1,"column_end":4}},{"value":"/ Tower provides a simple core abstraction, the [`Service`] trait, which","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tower-0.4.13\\src\\lib.rs","byte_start":524,"byte_end":598,"line_start":20,"line_end":20,"column_start":1,"column_end":75}},{"value":"/ represents an asynchronous function taking a request and returning either a","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tower-0.4.13\\src\\lib.rs","byte_start":599,"byte_end":678,"line_start":21,"line_end":21,"column_start":1,"column_end":80}},{"value":"/ response or an error. This abstraction can be used to model both clients and","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tower-0.4.13\\src\\lib.rs","byte_start":679,"byte_end":759,"line_start":22,"line_end":22,"column_start":1,"column_end":81}},{"value":"/ servers.","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tower-0.4.13\\src\\lib.rs","byte_start":760,"byte_end":772,"line_start":23,"line_end":23,"column_start":1,"column_end":13}},{"value":"/","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tower-0.4.13\\src\\lib.rs","byte_start":773,"byte_end":776,"line_start":24,"line_end":24,"column_start":1,"column_end":4}},{"value":"/ Generic components, like [timeouts], [rate limiting], and [load balancing],","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tower-0.4.13\\src\\lib.rs","byte_start":777,"byte_end":856,"line_start":25,"line_end":25,"column_start":1,"column_end":80}},{"value":"/ can be modeled as [`Service`]s that wrap some inner service and apply","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tower-0.4.13\\src\\lib.rs","byte_start":857,"byte_end":930,"line_start":26,"line_end":26,"column_start":1,"column_end":74}},{"value":"/ additional behavior before or after the inner service is called. This allows","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tower-0.4.13\\src\\lib.rs","byte_start":931,"byte_end":1011,"line_start":27,"line_end":27,"column_start":1,"column_end":81}},{"value":"/ implementing these components in a protocol-agnostic, composable way. Typically,","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tower-0.4.13\\src\\lib.rs","byte_start":1012,"byte_end":1096,"line_start":28,"line_end":28,"column_start":1,"column_end":85}},{"value":"/ such services are referred to as _middleware_.","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tower-0.4.13\\src\\lib.rs","byte_start":1097,"byte_end":1147,"line_start":29,"line_end":29,"column_start":1,"column_end":51}},{"value":"/","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tower-0.4.13\\src\\lib.rs","byte_start":1148,"byte_end":1151,"line_start":30,"line_end":30,"column_start":1,"column_end":4}},{"value":"/ An additional abstraction, the [`Layer`] trait, is used to compose","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tower-0.4.13\\src\\lib.rs","byte_start":1152,"byte_end":1222,"line_start":31,"line_end":31,"column_start":1,"column_end":71}},{"value":"/ middleware with [`Service`]s. If a [`Service`] can be thought of as an","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tower-0.4.13\\src\\lib.rs","byte_start":1223,"byte_end":1297,"line_start":32,"line_end":32,"column_start":1,"column_end":75}},{"value":"/ asynchronous function from a request type to a response type, a [`Layer`] is","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tower-0.4.13\\src\\lib.rs","byte_start":1298,"byte_end":1378,"line_start":33,"line_end":33,"column_start":1,"column_end":81}},{"value":"/ a function taking a [`Service`] of one type and returning a [`Service`] of a","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tower-0.4.13\\src\\lib.rs","byte_start":1379,"byte_end":1459,"line_start":34,"line_end":34,"column_start":1,"column_end":81}},{"value":"/ different type. The [`ServiceBuilder`] type is used to add middleware to a","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tower-0.4.13\\src\\lib.rs","byte_start":1460,"byte_end":1538,"line_start":35,"line_end":35,"column_start":1,"column_end":79}},{"value":"/ service by composing it with multiple [`Layer`]s.","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tower-0.4.13\\src\\lib.rs","byte_start":1539,"byte_end":1592,"line_start":36,"line_end":36,"column_start":1,"column_end":54}},{"value":"/","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tower-0.4.13\\src\\lib.rs","byte_start":1593,"byte_end":1596,"line_start":37,"line_end":37,"column_start":1,"column_end":4}},{"value":"/ ## The Tower Ecosystem","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tower-0.4.13\\src\\lib.rs","byte_start":1597,"byte_end":1623,"line_start":38,"line_end":38,"column_start":1,"column_end":27}},{"value":"/","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tower-0.4.13\\src\\lib.rs","byte_start":1624,"byte_end":1627,"line_start":39,"line_end":39,"column_start":1,"column_end":4}},{"value":"/ Tower is made up of the following crates:","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tower-0.4.13\\src\\lib.rs","byte_start":1628,"byte_end":1673,"line_start":40,"line_end":40,"column_start":1,"column_end":46}},{"value":"/","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tower-0.4.13\\src\\lib.rs","byte_start":1674,"byte_end":1677,"line_start":41,"line_end":41,"column_start":1,"column_end":4}},{"value":"/ * [`tower`] (this crate)","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tower-0.4.13\\src\\lib.rs","byte_start":1678,"byte_end":1706,"line_start":42,"line_end":42,"column_start":1,"column_end":29}},{"value":"/ * [`tower-service`]","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tower-0.4.13\\src\\lib.rs","byte_start":1707,"byte_end":1730,"line_start":43,"line_end":43,"column_start":1,"column_end":24}},{"value":"/ * [`tower-layer`]","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tower-0.4.13\\src\\lib.rs","byte_start":1731,"byte_end":1752,"line_start":44,"line_end":44,"column_start":1,"column_end":22}},{"value":"/ * [`tower-test`]","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tower-0.4.13\\src\\lib.rs","byte_start":1753,"byte_end":1773,"line_start":45,"line_end":45,"column_start":1,"column_end":21}},{"value":"/","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tower-0.4.13\\src\\lib.rs","byte_start":1774,"byte_end":1777,"line_start":46,"line_end":46,"column_start":1,"column_end":4}},{"value":"/ Since the [`Service`] and [`Layer`] traits are important integration points","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tower-0.4.13\\src\\lib.rs","byte_start":1778,"byte_end":1857,"line_start":47,"line_end":47,"column_start":1,"column_end":80}},{"value":"/ for all libraries using Tower, they are kept as stable as possible, and","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tower-0.4.13\\src\\lib.rs","byte_start":1858,"byte_end":1933,"line_start":48,"line_end":48,"column_start":1,"column_end":76}},{"value":"/ breaking changes are made rarely. Therefore, they are defined in separate","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tower-0.4.13\\src\\lib.rs","byte_start":1934,"byte_end":2011,"line_start":49,"line_end":49,"column_start":1,"column_end":78}},{"value":"/ crates, [`tower-service`] and [`tower-layer`]. This crate contains","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tower-0.4.13\\src\\lib.rs","byte_start":2012,"byte_end":2082,"line_start":50,"line_end":50,"column_start":1,"column_end":71}},{"value":"/ re-exports of those core traits, implementations of commonly-used","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tower-0.4.13\\src\\lib.rs","byte_start":2083,"byte_end":2152,"line_start":51,"line_end":51,"column_start":1,"column_end":70}},{"value":"/ middleware, and [utilities] for working with [`Service`]s and [`Layer`]s.","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tower-0.4.13\\src\\lib.rs","byte_start":2153,"byte_end":2230,"line_start":52,"line_end":52,"column_start":1,"column_end":78}},{"value":"/ Finally, the [`tower-test`] crate provides tools for testing programs using","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tower-0.4.13\\src\\lib.rs","byte_start":2231,"byte_end":2310,"line_start":53,"line_end":53,"column_start":1,"column_end":80}},{"value":"/ Tower.","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tower-0.4.13\\src\\lib.rs","byte_start":2311,"byte_end":2321,"line_start":54,"line_end":54,"column_start":1,"column_end":11}},{"value":"/","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tower-0.4.13\\src\\lib.rs","byte_start":2322,"byte_end":2325,"line_start":55,"line_end":55,"column_start":1,"column_end":4}},{"value":"/ # Usage","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tower-0.4.13\\src\\lib.rs","byte_start":2326,"byte_end":2337,"line_start":56,"line_end":56,"column_start":1,"column_end":12}},{"value":"/","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tower-0.4.13\\src\\lib.rs","byte_start":2338,"byte_end":2341,"line_start":57,"line_end":57,"column_start":1,"column_end":4}},{"value":"/ Tower provides an abstraction layer, and generic implementations of various","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tower-0.4.13\\src\\lib.rs","byte_start":2342,"byte_end":2421,"line_start":58,"line_end":58,"column_start":1,"column_end":80}},{"value":"/ middleware. This means that the `tower` crate on its own does *not* provide","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tower-0.4.13\\src\\lib.rs","byte_start":2422,"byte_end":2501,"line_start":59,"line_end":59,"column_start":1,"column_end":80}},{"value":"/ a working implementation of a network client or server. Instead, Tower's","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tower-0.4.13\\src\\lib.rs","byte_start":2502,"byte_end":2578,"line_start":60,"line_end":60,"column_start":1,"column_end":77}},{"value":"/ [`Service` trait][`Service`] provides an integration point between","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tower-0.4.13\\src\\lib.rs","byte_start":2579,"byte_end":2649,"line_start":61,"line_end":61,"column_start":1,"column_end":71}},{"value":"/ application code, libraries providing middleware implementations, and","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tower-0.4.13\\src\\lib.rs","byte_start":2650,"byte_end":2723,"line_start":62,"line_end":62,"column_start":1,"column_end":74}},{"value":"/ libraries that implement servers and/or clients for various network","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tower-0.4.13\\src\\lib.rs","byte_start":2724,"byte_end":2795,"line_start":63,"line_end":63,"column_start":1,"column_end":72}},{"value":"/ protocols.","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tower-0.4.13\\src\\lib.rs","byte_start":2796,"byte_end":2810,"line_start":64,"line_end":64,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tower-0.4.13\\src\\lib.rs","byte_start":2811,"byte_end":2814,"line_start":65,"line_end":65,"column_start":1,"column_end":4}},{"value":"/ Depending on your particular use case, you might use Tower in several ways:","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tower-0.4.13\\src\\lib.rs","byte_start":2815,"byte_end":2894,"line_start":66,"line_end":66,"column_start":1,"column_end":80}},{"value":"/","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tower-0.4.13\\src\\lib.rs","byte_start":2895,"byte_end":2898,"line_start":67,"line_end":67,"column_start":1,"column_end":4}},{"value":"/ * **Implementing application logic** for a networked program. You might","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tower-0.4.13\\src\\lib.rs","byte_start":2899,"byte_end":2974,"line_start":68,"line_end":68,"column_start":1,"column_end":76}},{"value":"/   use the [`Service`] trait to model your application's behavior, and use","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tower-0.4.13\\src\\lib.rs","byte_start":2975,"byte_end":3052,"line_start":69,"line_end":69,"column_start":1,"column_end":78}},{"value":"/   the middleware [provided by this crate](#modules) and by other libraries","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tower-0.4.13\\src\\lib.rs","byte_start":3053,"byte_end":3131,"line_start":70,"line_end":70,"column_start":1,"column_end":79}},{"value":"/   to add functionality to clients and servers provided by one or more","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tower-0.4.13\\src\\lib.rs","byte_start":3132,"byte_end":3205,"line_start":71,"line_end":71,"column_start":1,"column_end":74}},{"value":"/   protocol implementations.","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tower-0.4.13\\src\\lib.rs","byte_start":3206,"byte_end":3237,"line_start":72,"line_end":72,"column_start":1,"column_end":32}},{"value":"/ * **Implementing middleware** to add custom behavior to network clients and","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tower-0.4.13\\src\\lib.rs","byte_start":3238,"byte_end":3317,"line_start":73,"line_end":73,"column_start":1,"column_end":80}},{"value":"/   servers in a reusable manner. This might be general-purpose middleware","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tower-0.4.13\\src\\lib.rs","byte_start":3318,"byte_end":3394,"line_start":74,"line_end":74,"column_start":1,"column_end":77}},{"value":"/   (and if it is, please consider releasing your middleware as a library for","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tower-0.4.13\\src\\lib.rs","byte_start":3395,"byte_end":3474,"line_start":75,"line_end":75,"column_start":1,"column_end":80}},{"value":"/   other Tower users!) or application-specific behavior that needs to be","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tower-0.4.13\\src\\lib.rs","byte_start":3475,"byte_end":3550,"line_start":76,"line_end":76,"column_start":1,"column_end":76}},{"value":"/   shared between multiple clients or servers.","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tower-0.4.13\\src\\lib.rs","byte_start":3551,"byte_end":3600,"line_start":77,"line_end":77,"column_start":1,"column_end":50}},{"value":"/ * **Implementing a network protocol**. Libraries that implement network","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tower-0.4.13\\src\\lib.rs","byte_start":3601,"byte_end":3676,"line_start":78,"line_end":78,"column_start":1,"column_end":76}},{"value":"/   protocols (such as HTTP) can depend on `tower-service` to use the","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tower-0.4.13\\src\\lib.rs","byte_start":3677,"byte_end":3748,"line_start":79,"line_end":79,"column_start":1,"column_end":72}},{"value":"/   [`Service`] trait as an integration point between the protocol and user","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tower-0.4.13\\src\\lib.rs","byte_start":3749,"byte_end":3826,"line_start":80,"line_end":80,"column_start":1,"column_end":78}},{"value":"/   code. For example, a client for some protocol might implement [`Service`],","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tower-0.4.13\\src\\lib.rs","byte_start":3827,"byte_end":3907,"line_start":81,"line_end":81,"column_start":1,"column_end":81}},{"value":"/   allowing users to add arbitrary Tower middleware to those clients.","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tower-0.4.13\\src\\lib.rs","byte_start":3908,"byte_end":3980,"line_start":82,"line_end":82,"column_start":1,"column_end":73}},{"value":"/   Similarly, a server might be created from a user-provided [`Service`].","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tower-0.4.13\\src\\lib.rs","byte_start":3981,"byte_end":4057,"line_start":83,"line_end":83,"column_start":1,"column_end":77}},{"value":"/","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tower-0.4.13\\src\\lib.rs","byte_start":4058,"byte_end":4061,"line_start":84,"line_end":84,"column_start":1,"column_end":4}},{"value":"/   Additionally, when a network protocol requires functionality already","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tower-0.4.13\\src\\lib.rs","byte_start":4062,"byte_end":4136,"line_start":85,"line_end":85,"column_start":1,"column_end":75}},{"value":"/   provided by existing Tower middleware, a protocol implementation might use","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tower-0.4.13\\src\\lib.rs","byte_start":4137,"byte_end":4217,"line_start":86,"line_end":86,"column_start":1,"column_end":81}},{"value":"/   Tower middleware internally, as well as as an integration point.","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tower-0.4.13\\src\\lib.rs","byte_start":4218,"byte_end":4288,"line_start":87,"line_end":87,"column_start":1,"column_end":71}},{"value":"/","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tower-0.4.13\\src\\lib.rs","byte_start":4289,"byte_end":4292,"line_start":88,"line_end":88,"column_start":1,"column_end":4}},{"value":"/ ## Library Support","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tower-0.4.13\\src\\lib.rs","byte_start":4293,"byte_end":4315,"line_start":89,"line_end":89,"column_start":1,"column_end":23}},{"value":"/","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tower-0.4.13\\src\\lib.rs","byte_start":4316,"byte_end":4319,"line_start":90,"line_end":90,"column_start":1,"column_end":4}},{"value":"/ A number of third-party libraries support Tower and the [`Service`] trait.","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tower-0.4.13\\src\\lib.rs","byte_start":4320,"byte_end":4398,"line_start":91,"line_end":91,"column_start":1,"column_end":79}},{"value":"/ The following is an incomplete list of such libraries:","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tower-0.4.13\\src\\lib.rs","byte_start":4399,"byte_end":4457,"line_start":92,"line_end":92,"column_start":1,"column_end":59}},{"value":"/","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tower-0.4.13\\src\\lib.rs","byte_start":4458,"byte_end":4461,"line_start":93,"line_end":93,"column_start":1,"column_end":4}},{"value":"/ * [`hyper`]: A fast and correct low-level HTTP implementation.","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tower-0.4.13\\src\\lib.rs","byte_start":4462,"byte_end":4528,"line_start":94,"line_end":94,"column_start":1,"column_end":67}},{"value":"/ * [`tonic`]: A [gRPC-over-HTTP/2][grpc] implementation built on top of","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tower-0.4.13\\src\\lib.rs","byte_start":4529,"byte_end":4603,"line_start":95,"line_end":95,"column_start":1,"column_end":75}},{"value":"/   [`hyper`]. See [here][tonic-examples] for examples of using [`tonic`] with","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tower-0.4.13\\src\\lib.rs","byte_start":4604,"byte_end":4684,"line_start":96,"line_end":96,"column_start":1,"column_end":81}},{"value":"/   Tower.","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tower-0.4.13\\src\\lib.rs","byte_start":4685,"byte_end":4697,"line_start":97,"line_end":97,"column_start":1,"column_end":13}},{"value":"/ * [`warp`]: A lightweight, composable web framework. See","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tower-0.4.13\\src\\lib.rs","byte_start":4698,"byte_end":4758,"line_start":98,"line_end":98,"column_start":1,"column_end":61}},{"value":"/   [here][warp-service] for details on using [`warp`] with Tower.","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tower-0.4.13\\src\\lib.rs","byte_start":4759,"byte_end":4827,"line_start":99,"line_end":99,"column_start":1,"column_end":69}},{"value":"/ * [`tower-lsp`] and its fork, [`lspower`]: implementations of the [Language","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tower-0.4.13\\src\\lib.rs","byte_start":4828,"byte_end":4907,"line_start":100,"line_end":100,"column_start":1,"column_end":80}},{"value":"/   Server Protocol][lsp] based on Tower.","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tower-0.4.13\\src\\lib.rs","byte_start":4908,"byte_end":4951,"line_start":101,"line_end":101,"column_start":1,"column_end":44}},{"value":"/","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tower-0.4.13\\src\\lib.rs","byte_start":4952,"byte_end":4955,"line_start":102,"line_end":102,"column_start":1,"column_end":4}},{"value":"/ [`hyper`]: https://crates.io/crates/hyper","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tower-0.4.13\\src\\lib.rs","byte_start":4956,"byte_end":5001,"line_start":103,"line_end":103,"column_start":1,"column_end":46}},{"value":"/ [`tonic`]: https://crates.io/crates/tonic","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tower-0.4.13\\src\\lib.rs","byte_start":5002,"byte_end":5047,"line_start":104,"line_end":104,"column_start":1,"column_end":46}},{"value":"/ [tonic-examples]: https://github.com/hyperium/tonic/tree/master/examples/src/tower","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tower-0.4.13\\src\\lib.rs","byte_start":5048,"byte_end":5134,"line_start":105,"line_end":105,"column_start":1,"column_end":87}},{"value":"/ [grpc]: https://grpc.io","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tower-0.4.13\\src\\lib.rs","byte_start":5135,"byte_end":5162,"line_start":106,"line_end":106,"column_start":1,"column_end":28}},{"value":"/ [`warp`]: https://crates.io/crates/warp","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tower-0.4.13\\src\\lib.rs","byte_start":5163,"byte_end":5206,"line_start":107,"line_end":107,"column_start":1,"column_end":44}},{"value":"/ [warp-service]: https://docs.rs/warp/0.2.5/warp/fn.service.html","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tower-0.4.13\\src\\lib.rs","byte_start":5207,"byte_end":5274,"line_start":108,"line_end":108,"column_start":1,"column_end":68}},{"value":"/ [`tower-lsp`]: https://crates.io/crates/tower-lsp","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tower-0.4.13\\src\\lib.rs","byte_start":5275,"byte_end":5328,"line_start":109,"line_end":109,"column_start":1,"column_end":54}},{"value":"/ [`lspower`]: https://crates.io/crates/lspower","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tower-0.4.13\\src\\lib.rs","byte_start":5329,"byte_end":5378,"line_start":110,"line_end":110,"column_start":1,"column_end":50}},{"value":"/ [lsp]: https://microsoft.github.io/language-server-protocol/","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tower-0.4.13\\src\\lib.rs","byte_start":5379,"byte_end":5443,"line_start":111,"line_end":111,"column_start":1,"column_end":65}},{"value":"/","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tower-0.4.13\\src\\lib.rs","byte_start":5444,"byte_end":5447,"line_start":112,"line_end":112,"column_start":1,"column_end":4}},{"value":"/ If you're the maintainer of a crate that supports Tower, we'd love to add","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tower-0.4.13\\src\\lib.rs","byte_start":5448,"byte_end":5525,"line_start":113,"line_end":113,"column_start":1,"column_end":78}},{"value":"/ your crate to this list! Please [open a PR] adding a brief description of","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tower-0.4.13\\src\\lib.rs","byte_start":5526,"byte_end":5603,"line_start":114,"line_end":114,"column_start":1,"column_end":78}},{"value":"/ your library!","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tower-0.4.13\\src\\lib.rs","byte_start":5604,"byte_end":5621,"line_start":115,"line_end":115,"column_start":1,"column_end":18}},{"value":"/","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tower-0.4.13\\src\\lib.rs","byte_start":5622,"byte_end":5625,"line_start":116,"line_end":116,"column_start":1,"column_end":4}},{"value":"/ ## Getting Started","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tower-0.4.13\\src\\lib.rs","byte_start":5626,"byte_end":5648,"line_start":117,"line_end":117,"column_start":1,"column_end":23}},{"value":"/","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tower-0.4.13\\src\\lib.rs","byte_start":5649,"byte_end":5652,"line_start":118,"line_end":118,"column_start":1,"column_end":4}},{"value":"/ If you're brand new to Tower and want to start with the basics, we recommend you","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tower-0.4.13\\src\\lib.rs","byte_start":5653,"byte_end":5737,"line_start":119,"line_end":119,"column_start":1,"column_end":85}},{"value":"/ check out some of our [guides].","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tower-0.4.13\\src\\lib.rs","byte_start":5738,"byte_end":5773,"line_start":120,"line_end":120,"column_start":1,"column_end":36}},{"value":"/","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tower-0.4.13\\src\\lib.rs","byte_start":5774,"byte_end":5777,"line_start":121,"line_end":121,"column_start":1,"column_end":4}},{"value":"/ The various middleware implementations provided by this crate are feature","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tower-0.4.13\\src\\lib.rs","byte_start":5778,"byte_end":5855,"line_start":122,"line_end":122,"column_start":1,"column_end":78}},{"value":"/ flagged, so that users can only compile the parts of Tower they need. By","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tower-0.4.13\\src\\lib.rs","byte_start":5856,"byte_end":5932,"line_start":123,"line_end":123,"column_start":1,"column_end":77}},{"value":"/ default, all the optional middleware are disabled.","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tower-0.4.13\\src\\lib.rs","byte_start":5933,"byte_end":5987,"line_start":124,"line_end":124,"column_start":1,"column_end":55}},{"value":"/","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tower-0.4.13\\src\\lib.rs","byte_start":5988,"byte_end":5991,"line_start":125,"line_end":125,"column_start":1,"column_end":4}},{"value":"/ To get started using all of Tower's optional middleware, add this to your","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tower-0.4.13\\src\\lib.rs","byte_start":5992,"byte_end":6069,"line_start":126,"line_end":126,"column_start":1,"column_end":78}},{"value":"/ `Cargo.toml`:","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tower-0.4.13\\src\\lib.rs","byte_start":6070,"byte_end":6087,"line_start":127,"line_end":127,"column_start":1,"column_end":18}},{"value":"/","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tower-0.4.13\\src\\lib.rs","byte_start":6088,"byte_end":6091,"line_start":128,"line_end":128,"column_start":1,"column_end":4}},{"value":"/ ```toml","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tower-0.4.13\\src\\lib.rs","byte_start":6092,"byte_end":6103,"line_start":129,"line_end":129,"column_start":1,"column_end":12}},{"value":"/ tower = { version = \"0.4\", features = [\"full\"] }","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tower-0.4.13\\src\\lib.rs","byte_start":6104,"byte_end":6156,"line_start":130,"line_end":130,"column_start":1,"column_end":53}},{"value":"/ ```","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tower-0.4.13\\src\\lib.rs","byte_start":6157,"byte_end":6164,"line_start":131,"line_end":131,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tower-0.4.13\\src\\lib.rs","byte_start":6165,"byte_end":6168,"line_start":132,"line_end":132,"column_start":1,"column_end":4}},{"value":"/ Alternatively, you can only enable some features. For example, to enable","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tower-0.4.13\\src\\lib.rs","byte_start":6169,"byte_end":6245,"line_start":133,"line_end":133,"column_start":1,"column_end":77}},{"value":"/ only the [`retry`] and [`timeout`][timeouts] middleware, write:","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tower-0.4.13\\src\\lib.rs","byte_start":6246,"byte_end":6313,"line_start":134,"line_end":134,"column_start":1,"column_end":68}},{"value":"/","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tower-0.4.13\\src\\lib.rs","byte_start":6314,"byte_end":6317,"line_start":135,"line_end":135,"column_start":1,"column_end":4}},{"value":"/ ```toml","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tower-0.4.13\\src\\lib.rs","byte_start":6318,"byte_end":6329,"line_start":136,"line_end":136,"column_start":1,"column_end":12}},{"value":"/ tower = { version = \"0.4\", features = [\"retry\", \"timeout\"] }","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tower-0.4.13\\src\\lib.rs","byte_start":6330,"byte_end":6394,"line_start":137,"line_end":137,"column_start":1,"column_end":65}},{"value":"/ ```","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tower-0.4.13\\src\\lib.rs","byte_start":6395,"byte_end":6402,"line_start":138,"line_end":138,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tower-0.4.13\\src\\lib.rs","byte_start":6403,"byte_end":6406,"line_start":139,"line_end":139,"column_start":1,"column_end":4}},{"value":"/ See [here](#modules) for a complete list of all middleware provided by","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tower-0.4.13\\src\\lib.rs","byte_start":6407,"byte_end":6481,"line_start":140,"line_end":140,"column_start":1,"column_end":75}},{"value":"/ Tower.","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tower-0.4.13\\src\\lib.rs","byte_start":6482,"byte_end":6492,"line_start":141,"line_end":141,"column_start":1,"column_end":11}},{"value":"/","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tower-0.4.13\\src\\lib.rs","byte_start":6493,"byte_end":6496,"line_start":142,"line_end":142,"column_start":1,"column_end":4}},{"value":"/","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tower-0.4.13\\src\\lib.rs","byte_start":6497,"byte_end":6500,"line_start":143,"line_end":143,"column_start":1,"column_end":4}},{"value":"/ ## Supported Rust Versions","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tower-0.4.13\\src\\lib.rs","byte_start":6501,"byte_end":6531,"line_start":144,"line_end":144,"column_start":1,"column_end":31}},{"value":"/","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tower-0.4.13\\src\\lib.rs","byte_start":6532,"byte_end":6535,"line_start":145,"line_end":145,"column_start":1,"column_end":4}},{"value":"/ Tower will keep a rolling MSRV (minimum supported Rust version) policy of **at","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tower-0.4.13\\src\\lib.rs","byte_start":6536,"byte_end":6618,"line_start":146,"line_end":146,"column_start":1,"column_end":83}},{"value":"/ least** 6 months. When increasing the MSRV, the new Rust version must have been","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tower-0.4.13\\src\\lib.rs","byte_start":6619,"byte_end":6702,"line_start":147,"line_end":147,"column_start":1,"column_end":84}},{"value":"/ released at least six months ago. The current MSRV is 1.49.0.","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tower-0.4.13\\src\\lib.rs","byte_start":6703,"byte_end":6768,"line_start":148,"line_end":148,"column_start":1,"column_end":66}},{"value":"/","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tower-0.4.13\\src\\lib.rs","byte_start":6769,"byte_end":6772,"line_start":149,"line_end":149,"column_start":1,"column_end":4}},{"value":"/ [`Service`]: crate::Service","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tower-0.4.13\\src\\lib.rs","byte_start":6773,"byte_end":6804,"line_start":150,"line_end":150,"column_start":1,"column_end":32}},{"value":"/ [`Layer`]: crate::Layer","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tower-0.4.13\\src\\lib.rs","byte_start":6805,"byte_end":6832,"line_start":151,"line_end":151,"column_start":1,"column_end":28}},{"value":"/ [timeouts]: crate::timeout","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tower-0.4.13\\src\\lib.rs","byte_start":6833,"byte_end":6863,"line_start":152,"line_end":152,"column_start":1,"column_end":31}},{"value":"/ [rate limiting]: crate::limit::rate","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tower-0.4.13\\src\\lib.rs","byte_start":6864,"byte_end":6903,"line_start":153,"line_end":153,"column_start":1,"column_end":40}},{"value":"/ [load balancing]: crate::balance","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tower-0.4.13\\src\\lib.rs","byte_start":6904,"byte_end":6940,"line_start":154,"line_end":154,"column_start":1,"column_end":37}},{"value":"/ [`ServiceBuilder`]: crate::ServiceBuilder","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tower-0.4.13\\src\\lib.rs","byte_start":6941,"byte_end":6986,"line_start":155,"line_end":155,"column_start":1,"column_end":46}},{"value":"/ [utilities]: crate::ServiceExt","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tower-0.4.13\\src\\lib.rs","byte_start":6987,"byte_end":7021,"line_start":156,"line_end":156,"column_start":1,"column_end":35}},{"value":"/ [`tower`]: https://crates.io/crates/tower","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tower-0.4.13\\src\\lib.rs","byte_start":7022,"byte_end":7067,"line_start":157,"line_end":157,"column_start":1,"column_end":46}},{"value":"/ [`tower-service`]: https://crates.io/crates/tower-service","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tower-0.4.13\\src\\lib.rs","byte_start":7068,"byte_end":7129,"line_start":158,"line_end":158,"column_start":1,"column_end":62}},{"value":"/ [`tower-layer`]: https://crates.io/crates/tower-layer","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tower-0.4.13\\src\\lib.rs","byte_start":7130,"byte_end":7187,"line_start":159,"line_end":159,"column_start":1,"column_end":58}},{"value":"/ [`tower-test`]: https://crates.io/crates/tower-test","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tower-0.4.13\\src\\lib.rs","byte_start":7188,"byte_end":7243,"line_start":160,"line_end":160,"column_start":1,"column_end":56}},{"value":"/ [`retry`]: crate::retry","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tower-0.4.13\\src\\lib.rs","byte_start":7244,"byte_end":7271,"line_start":161,"line_end":161,"column_start":1,"column_end":28}},{"value":"/ [open a PR]: https://github.com/tower-rs/tower/compare","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tower-0.4.13\\src\\lib.rs","byte_start":7272,"byte_end":7330,"line_start":162,"line_end":162,"column_start":1,"column_end":59}},{"value":"/ [guides]: https://github.com/tower-rs/tower/tree/master/guides","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tower-0.4.13\\src\\lib.rs","byte_start":7331,"byte_end":7397,"line_start":163,"line_end":163,"column_start":1,"column_end":67}}]},{"kind":"Mod","id":{"krate":0,"index":5},"span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tower-0.4.13\\src\\make\\mod.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"make","qualname":"::make","value":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tower-0.4.13\\src\\make\\mod.rs","parent":null,"children":[{"krate":0,"index":6},{"krate":0,"index":48},{"krate":0,"index":168},{"krate":0,"index":171},{"krate":0,"index":174},{"krate":0,"index":175},{"krate":0,"index":178},{"krate":0,"index":181},{"krate":0,"index":184}],"decl_id":null,"docs":" Trait aliases for Services that produce specific types of Responses.\n","sig":null,"attributes":[{"value":"cfg(feature = \"make\")","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tower-0.4.13\\src\\lib.rs","byte_start":8186,"byte_end":8210,"line_start":192,"line_end":192,"column_start":1,"column_end":25}},{"value":"/ Trait aliases for Services that produce specific types of Responses.","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tower-0.4.13\\src\\make\\mod.rs","byte_start":10847,"byte_end":10919,"line_start":1,"line_end":1,"column_start":1,"column_end":73}}]},{"kind":"Trait","id":{"krate":0,"index":30},"span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tower-0.4.13\\src\\make\\make_connection.rs","byte_start":11672,"byte_end":11686,"line_start":12,"line_end":12,"column_start":11,"column_end":25},"name":"MakeConnection","qualname":"::make::make_connection::MakeConnection","value":"MakeConnection<Target>: Sealed<(Target,)>","parent":null,"children":[{"krate":0,"index":32},{"krate":0,"index":33},{"krate":0,"index":34},{"krate":0,"index":35},{"krate":0,"index":36}],"decl_id":null,"docs":" The [`MakeConnection`] trait is used to create transports.","sig":null,"attributes":[{"value":"/ The [`MakeConnection`] trait is used to create transports.","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tower-0.4.13\\src\\make\\make_connection.rs","byte_start":11370,"byte_end":11432,"line_start":7,"line_end":7,"column_start":1,"column_end":63}},{"value":"/","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tower-0.4.13\\src\\make\\make_connection.rs","byte_start":11433,"byte_end":11436,"line_start":8,"line_end":8,"column_start":1,"column_end":4}},{"value":"/ The goal of this service is to allow composable methods for creating","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tower-0.4.13\\src\\make\\make_connection.rs","byte_start":11437,"byte_end":11509,"line_start":9,"line_end":9,"column_start":1,"column_end":73}},{"value":"/ `AsyncRead + AsyncWrite` transports. This could mean creating a TLS","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tower-0.4.13\\src\\make\\make_connection.rs","byte_start":11510,"byte_end":11581,"line_start":10,"line_end":10,"column_start":1,"column_end":72}},{"value":"/ based connection or using some other method to authenticate the connection.","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tower-0.4.13\\src\\make\\make_connection.rs","byte_start":11582,"byte_end":11661,"line_start":11,"line_end":11,"column_start":1,"column_end":80}}]},{"kind":"Type","id":{"krate":0,"index":32},"span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tower-0.4.13\\src\\make\\make_connection.rs","byte_start":11772,"byte_end":11782,"line_start":14,"line_end":14,"column_start":10,"column_end":20},"name":"Connection","qualname":"::make::make_connection::MakeConnection::Connection","value":"type Connection: AsyncRead + AsyncWrite;","parent":{"krate":0,"index":30},"children":[],"decl_id":null,"docs":" The transport provided by this service\n","sig":null,"attributes":[{"value":"/ The transport provided by this service","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tower-0.4.13\\src\\make\\make_connection.rs","byte_start":11720,"byte_end":11762,"line_start":13,"line_end":13,"column_start":5,"column_end":47}}]},{"kind":"Type","id":{"krate":0,"index":33},"span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tower-0.4.13\\src\\make\\make_connection.rs","byte_start":11868,"byte_end":11873,"line_start":17,"line_end":17,"column_start":10,"column_end":15},"name":"Error","qualname":"::make::make_connection::MakeConnection::Error","value":"type Error;","parent":{"krate":0,"index":30},"children":[],"decl_id":null,"docs":" Errors produced by the connecting service\n","sig":null,"attributes":[{"value":"/ Errors produced by the connecting service","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tower-0.4.13\\src\\make\\make_connection.rs","byte_start":11813,"byte_end":11858,"line_start":16,"line_end":16,"column_start":5,"column_end":50}}]},{"kind":"Type","id":{"krate":0,"index":34},"span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tower-0.4.13\\src\\make\\make_connection.rs","byte_start":11943,"byte_end":11949,"line_start":20,"line_end":20,"column_start":10,"column_end":16},"name":"Future","qualname":"::make::make_connection::MakeConnection::Future","value":"type Future: Future<Output = Result<Self::Connection, Self::Error>>;","parent":{"krate":0,"index":30},"children":[],"decl_id":null,"docs":" The future that eventually produces the transport\n","sig":null,"attributes":[{"value":"/ The future that eventually produces the transport","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tower-0.4.13\\src\\make\\make_connection.rs","byte_start":11880,"byte_end":11933,"line_start":19,"line_end":19,"column_start":5,"column_end":58}}]},{"kind":"Method","id":{"krate":0,"index":35},"span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tower-0.4.13\\src\\make\\make_connection.rs","byte_start":12095,"byte_end":12105,"line_start":23,"line_end":23,"column_start":8,"column_end":18},"name":"poll_ready","qualname":"::make::make_connection::MakeConnection::poll_ready","value":"pub fn poll_ready(&mut Self, &mut Context) -> Poll<Result<(), Self::Error>>","parent":{"krate":0,"index":30},"children":[],"decl_id":null,"docs":" Returns `Poll::Ready(Ok(()))` when it is able to make more connections.\n","sig":null,"attributes":[{"value":"/ Returns `Poll::Ready(Ok(()))` when it is able to make more connections.","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tower-0.4.13\\src\\make\\make_connection.rs","byte_start":12012,"byte_end":12087,"line_start":22,"line_end":22,"column_start":5,"column_end":80}}]},{"kind":"Method","id":{"krate":0,"index":36},"span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tower-0.4.13\\src\\make\\make_connection.rs","byte_start":12235,"byte_end":12250,"line_start":26,"line_end":26,"column_start":8,"column_end":23},"name":"make_connection","qualname":"::make::make_connection::MakeConnection::make_connection","value":"pub fn make_connection(&mut Self, Target) -> Self::Future","parent":{"krate":0,"index":30},"children":[],"decl_id":null,"docs":" Connect and return a transport asynchronously\n","sig":null,"attributes":[{"value":"/ Connect and return a transport asynchronously","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tower-0.4.13\\src\\make\\make_connection.rs","byte_start":12178,"byte_end":12227,"line_start":25,"line_end":25,"column_start":5,"column_end":54}}]},{"kind":"Struct","id":{"krate":0,"index":1602},"span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tower-0.4.13\\src\\make\\make_service\\shared.rs","byte_start":21785,"byte_end":21791,"line_start":72,"line_end":72,"column_start":12,"column_end":18},"name":"Shared","qualname":"::make::make_service::shared::Shared","value":"Shared {  }","parent":null,"children":[{"krate":0,"index":1604}],"decl_id":null,"docs":" A [`MakeService`] that produces services by cloning an inner service.","sig":null,"attributes":[{"value":"/ A [`MakeService`] that produces services by cloning an inner service.","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tower-0.4.13\\src\\make\\make_service\\shared.rs","byte_start":19928,"byte_end":20001,"line_start":5,"line_end":5,"column_start":1,"column_end":74}},{"value":"/","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tower-0.4.13\\src\\make\\make_service\\shared.rs","byte_start":20002,"byte_end":20005,"line_start":6,"line_end":6,"column_start":1,"column_end":4}},{"value":"/ [`MakeService`]: super::MakeService","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tower-0.4.13\\src\\make\\make_service\\shared.rs","byte_start":20006,"byte_end":20045,"line_start":7,"line_end":7,"column_start":1,"column_end":40}},{"value":"/","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tower-0.4.13\\src\\make\\make_service\\shared.rs","byte_start":20046,"byte_end":20049,"line_start":8,"line_end":8,"column_start":1,"column_end":4}},{"value":"/ # Example","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tower-0.4.13\\src\\make\\make_service\\shared.rs","byte_start":20050,"byte_end":20063,"line_start":9,"line_end":9,"column_start":1,"column_end":14}},{"value":"/","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tower-0.4.13\\src\\make\\make_service\\shared.rs","byte_start":20064,"byte_end":20067,"line_start":10,"line_end":10,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tower-0.4.13\\src\\make\\make_service\\shared.rs","byte_start":20068,"byte_end":20075,"line_start":11,"line_end":11,"column_start":1,"column_end":8}},{"value":"/ # use std::task::{Context, Poll};","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tower-0.4.13\\src\\make\\make_service\\shared.rs","byte_start":20076,"byte_end":20113,"line_start":12,"line_end":12,"column_start":1,"column_end":38}},{"value":"/ # use std::pin::Pin;","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tower-0.4.13\\src\\make\\make_service\\shared.rs","byte_start":20114,"byte_end":20138,"line_start":13,"line_end":13,"column_start":1,"column_end":25}},{"value":"/ # use std::convert::Infallible;","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tower-0.4.13\\src\\make\\make_service\\shared.rs","byte_start":20139,"byte_end":20174,"line_start":14,"line_end":14,"column_start":1,"column_end":36}},{"value":"/ use tower::make::{MakeService, Shared};","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tower-0.4.13\\src\\make\\make_service\\shared.rs","byte_start":20175,"byte_end":20218,"line_start":15,"line_end":15,"column_start":1,"column_end":44}},{"value":"/ use tower::buffer::Buffer;","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tower-0.4.13\\src\\make\\make_service\\shared.rs","byte_start":20219,"byte_end":20249,"line_start":16,"line_end":16,"column_start":1,"column_end":31}},{"value":"/ use tower::Service;","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tower-0.4.13\\src\\make\\make_service\\shared.rs","byte_start":20250,"byte_end":20273,"line_start":17,"line_end":17,"column_start":1,"column_end":24}},{"value":"/ use futures::future::{Ready, ready};","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tower-0.4.13\\src\\make\\make_service\\shared.rs","byte_start":20274,"byte_end":20314,"line_start":18,"line_end":18,"column_start":1,"column_end":41}},{"value":"/","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tower-0.4.13\\src\\make\\make_service\\shared.rs","byte_start":20315,"byte_end":20318,"line_start":19,"line_end":19,"column_start":1,"column_end":4}},{"value":"/ // An example connection type","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tower-0.4.13\\src\\make\\make_service\\shared.rs","byte_start":20319,"byte_end":20352,"line_start":20,"line_end":20,"column_start":1,"column_end":34}},{"value":"/ struct Connection {}","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tower-0.4.13\\src\\make\\make_service\\shared.rs","byte_start":20353,"byte_end":20377,"line_start":21,"line_end":21,"column_start":1,"column_end":25}},{"value":"/","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tower-0.4.13\\src\\make\\make_service\\shared.rs","byte_start":20378,"byte_end":20381,"line_start":22,"line_end":22,"column_start":1,"column_end":4}},{"value":"/ // An example request type","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tower-0.4.13\\src\\make\\make_service\\shared.rs","byte_start":20382,"byte_end":20412,"line_start":23,"line_end":23,"column_start":1,"column_end":31}},{"value":"/ struct Request {}","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tower-0.4.13\\src\\make\\make_service\\shared.rs","byte_start":20413,"byte_end":20434,"line_start":24,"line_end":24,"column_start":1,"column_end":22}},{"value":"/","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tower-0.4.13\\src\\make\\make_service\\shared.rs","byte_start":20435,"byte_end":20438,"line_start":25,"line_end":25,"column_start":1,"column_end":4}},{"value":"/ // An example response type","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tower-0.4.13\\src\\make\\make_service\\shared.rs","byte_start":20439,"byte_end":20470,"line_start":26,"line_end":26,"column_start":1,"column_end":32}},{"value":"/ struct Response {}","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tower-0.4.13\\src\\make\\make_service\\shared.rs","byte_start":20471,"byte_end":20493,"line_start":27,"line_end":27,"column_start":1,"column_end":23}},{"value":"/","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tower-0.4.13\\src\\make\\make_service\\shared.rs","byte_start":20494,"byte_end":20497,"line_start":28,"line_end":28,"column_start":1,"column_end":4}},{"value":"/ // Some service that doesn't implement `Clone`","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tower-0.4.13\\src\\make\\make_service\\shared.rs","byte_start":20498,"byte_end":20548,"line_start":29,"line_end":29,"column_start":1,"column_end":51}},{"value":"/ struct MyService;","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tower-0.4.13\\src\\make\\make_service\\shared.rs","byte_start":20549,"byte_end":20570,"line_start":30,"line_end":30,"column_start":1,"column_end":22}},{"value":"/","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tower-0.4.13\\src\\make\\make_service\\shared.rs","byte_start":20571,"byte_end":20574,"line_start":31,"line_end":31,"column_start":1,"column_end":4}},{"value":"/ impl Service<Request> for MyService {","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tower-0.4.13\\src\\make\\make_service\\shared.rs","byte_start":20575,"byte_end":20616,"line_start":32,"line_end":32,"column_start":1,"column_end":42}},{"value":"/     type Response = Response;","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tower-0.4.13\\src\\make\\make_service\\shared.rs","byte_start":20617,"byte_end":20650,"line_start":33,"line_end":33,"column_start":1,"column_end":34}},{"value":"/     type Error = Infallible;","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tower-0.4.13\\src\\make\\make_service\\shared.rs","byte_start":20651,"byte_end":20683,"line_start":34,"line_end":34,"column_start":1,"column_end":33}},{"value":"/     type Future = Ready<Result<Response, Infallible>>;","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tower-0.4.13\\src\\make\\make_service\\shared.rs","byte_start":20684,"byte_end":20742,"line_start":35,"line_end":35,"column_start":1,"column_end":59}},{"value":"/","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tower-0.4.13\\src\\make\\make_service\\shared.rs","byte_start":20743,"byte_end":20746,"line_start":36,"line_end":36,"column_start":1,"column_end":4}},{"value":"/     fn poll_ready(&mut self, _cx: &mut Context<'_>) -> Poll<Result<(), Self::Error>> {","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tower-0.4.13\\src\\make\\make_service\\shared.rs","byte_start":20747,"byte_end":20837,"line_start":37,"line_end":37,"column_start":1,"column_end":91}},{"value":"/         Poll::Ready(Ok(()))","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tower-0.4.13\\src\\make\\make_service\\shared.rs","byte_start":20838,"byte_end":20869,"line_start":38,"line_end":38,"column_start":1,"column_end":32}},{"value":"/     }","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tower-0.4.13\\src\\make\\make_service\\shared.rs","byte_start":20870,"byte_end":20879,"line_start":39,"line_end":39,"column_start":1,"column_end":10}},{"value":"/","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tower-0.4.13\\src\\make\\make_service\\shared.rs","byte_start":20880,"byte_end":20883,"line_start":40,"line_end":40,"column_start":1,"column_end":4}},{"value":"/     fn call(&mut self, req: Request) -> Self::Future {","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tower-0.4.13\\src\\make\\make_service\\shared.rs","byte_start":20884,"byte_end":20942,"line_start":41,"line_end":41,"column_start":1,"column_end":59}},{"value":"/         ready(Ok(Response {}))","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tower-0.4.13\\src\\make\\make_service\\shared.rs","byte_start":20943,"byte_end":20977,"line_start":42,"line_end":42,"column_start":1,"column_end":35}},{"value":"/     }","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tower-0.4.13\\src\\make\\make_service\\shared.rs","byte_start":20978,"byte_end":20987,"line_start":43,"line_end":43,"column_start":1,"column_end":10}},{"value":"/ }","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tower-0.4.13\\src\\make\\make_service\\shared.rs","byte_start":20988,"byte_end":20993,"line_start":44,"line_end":44,"column_start":1,"column_end":6}},{"value":"/","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tower-0.4.13\\src\\make\\make_service\\shared.rs","byte_start":20994,"byte_end":20997,"line_start":45,"line_end":45,"column_start":1,"column_end":4}},{"value":"/ // Example function that runs a service by accepting new connections and using","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tower-0.4.13\\src\\make\\make_service\\shared.rs","byte_start":20998,"byte_end":21080,"line_start":46,"line_end":46,"column_start":1,"column_end":83}},{"value":"/ // `Make` to create new services that might be bound to the connection.","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tower-0.4.13\\src\\make\\make_service\\shared.rs","byte_start":21081,"byte_end":21156,"line_start":47,"line_end":47,"column_start":1,"column_end":76}},{"value":"/ //","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tower-0.4.13\\src\\make\\make_service\\shared.rs","byte_start":21157,"byte_end":21163,"line_start":48,"line_end":48,"column_start":1,"column_end":7}},{"value":"/ // This is similar to what you might find in hyper.","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tower-0.4.13\\src\\make\\make_service\\shared.rs","byte_start":21164,"byte_end":21219,"line_start":49,"line_end":49,"column_start":1,"column_end":56}},{"value":"/ async fn serve_make_service<Make>(make: Make)","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tower-0.4.13\\src\\make\\make_service\\shared.rs","byte_start":21220,"byte_end":21269,"line_start":50,"line_end":50,"column_start":1,"column_end":50}},{"value":"/ where","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tower-0.4.13\\src\\make\\make_service\\shared.rs","byte_start":21270,"byte_end":21279,"line_start":51,"line_end":51,"column_start":1,"column_end":10}},{"value":"/     Make: MakeService<Connection, Request>","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tower-0.4.13\\src\\make\\make_service\\shared.rs","byte_start":21280,"byte_end":21326,"line_start":52,"line_end":52,"column_start":1,"column_end":47}},{"value":"/ {","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tower-0.4.13\\src\\make\\make_service\\shared.rs","byte_start":21327,"byte_end":21332,"line_start":53,"line_end":53,"column_start":1,"column_end":6}},{"value":"/     // ...","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tower-0.4.13\\src\\make\\make_service\\shared.rs","byte_start":21333,"byte_end":21347,"line_start":54,"line_end":54,"column_start":1,"column_end":15}},{"value":"/ }","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tower-0.4.13\\src\\make\\make_service\\shared.rs","byte_start":21348,"byte_end":21353,"line_start":55,"line_end":55,"column_start":1,"column_end":6}},{"value":"/","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tower-0.4.13\\src\\make\\make_service\\shared.rs","byte_start":21354,"byte_end":21357,"line_start":56,"line_end":56,"column_start":1,"column_end":4}},{"value":"/ # async {","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tower-0.4.13\\src\\make\\make_service\\shared.rs","byte_start":21358,"byte_end":21371,"line_start":57,"line_end":57,"column_start":1,"column_end":14}},{"value":"/ // Our service","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tower-0.4.13\\src\\make\\make_service\\shared.rs","byte_start":21372,"byte_end":21390,"line_start":58,"line_end":58,"column_start":1,"column_end":19}},{"value":"/ let svc = MyService;","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tower-0.4.13\\src\\make\\make_service\\shared.rs","byte_start":21391,"byte_end":21415,"line_start":59,"line_end":59,"column_start":1,"column_end":25}},{"value":"/","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tower-0.4.13\\src\\make\\make_service\\shared.rs","byte_start":21416,"byte_end":21419,"line_start":60,"line_end":60,"column_start":1,"column_end":4}},{"value":"/ // Make it `Clone` by putting a channel in front","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tower-0.4.13\\src\\make\\make_service\\shared.rs","byte_start":21420,"byte_end":21472,"line_start":61,"line_end":61,"column_start":1,"column_end":53}},{"value":"/ let buffered = Buffer::new(svc, 1024);","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tower-0.4.13\\src\\make\\make_service\\shared.rs","byte_start":21473,"byte_end":21515,"line_start":62,"line_end":62,"column_start":1,"column_end":43}},{"value":"/","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tower-0.4.13\\src\\make\\make_service\\shared.rs","byte_start":21516,"byte_end":21519,"line_start":63,"line_end":63,"column_start":1,"column_end":4}},{"value":"/ // Convert it into a `MakeService`","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tower-0.4.13\\src\\make\\make_service\\shared.rs","byte_start":21520,"byte_end":21558,"line_start":64,"line_end":64,"column_start":1,"column_end":39}},{"value":"/ let make = Shared::new(buffered);","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tower-0.4.13\\src\\make\\make_service\\shared.rs","byte_start":21559,"byte_end":21596,"line_start":65,"line_end":65,"column_start":1,"column_end":38}},{"value":"/","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tower-0.4.13\\src\\make\\make_service\\shared.rs","byte_start":21597,"byte_end":21600,"line_start":66,"line_end":66,"column_start":1,"column_end":4}},{"value":"/ // Run the service and just ignore the `Connection`s as `MyService` doesn't need them","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tower-0.4.13\\src\\make\\make_service\\shared.rs","byte_start":21601,"byte_end":21690,"line_start":67,"line_end":67,"column_start":1,"column_end":90}},{"value":"/ serve_make_service(make).await;","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tower-0.4.13\\src\\make\\make_service\\shared.rs","byte_start":21691,"byte_end":21726,"line_start":68,"line_end":68,"column_start":1,"column_end":36}},{"value":"/ # };","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tower-0.4.13\\src\\make\\make_service\\shared.rs","byte_start":21727,"byte_end":21735,"line_start":69,"line_end":69,"column_start":1,"column_end":9}},{"value":"/ ```","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tower-0.4.13\\src\\make\\make_service\\shared.rs","byte_start":21736,"byte_end":21743,"line_start":70,"line_end":70,"column_start":1,"column_end":8}}]},{"kind":"Method","id":{"krate":0,"index":87},"span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tower-0.4.13\\src\\make\\make_service\\shared.rs","byte_start":21895,"byte_end":21898,"line_start":78,"line_end":78,"column_start":12,"column_end":15},"name":"new","qualname":"<Shared<S>>::new","value":"pub fn new(S) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Create a new [`Shared`] from a service.\n","sig":null,"attributes":[{"value":"/ Create a new [`Shared`] from a service.","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tower-0.4.13\\src\\make\\make_service\\shared.rs","byte_start":21840,"byte_end":21883,"line_start":77,"line_end":77,"column_start":5,"column_end":48}}]},{"kind":"Struct","id":{"krate":0,"index":1623},"span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tower-0.4.13\\src\\make\\make_service\\shared.rs","byte_start":22446,"byte_end":22458,"line_start":102,"line_end":102,"column_start":14,"column_end":26},"name":"SharedFuture","qualname":"::make::make_service::shared::SharedFuture","value":"SharedFuture {  }","parent":null,"children":[{"krate":0,"index":1625}],"decl_id":null,"docs":" Response future from [`Shared`] services.\n","sig":null,"attributes":[]},{"kind":"Trait","id":{"krate":0,"index":96},"span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tower-0.4.13\\src\\make\\make_service.rs","byte_start":13562,"byte_end":13573,"line_start":21,"line_end":21,"column_start":11,"column_end":22},"name":"MakeService","qualname":"::make::make_service::MakeService","value":"MakeService<Target, Request>: Sealed<(Target, Request)>","parent":null,"children":[{"krate":0,"index":99},{"krate":0,"index":100},{"krate":0,"index":101},{"krate":0,"index":102},{"krate":0,"index":103},{"krate":0,"index":104},{"krate":0,"index":105},{"krate":0,"index":106},{"krate":0,"index":107}],"decl_id":null,"docs":" Creates new [`Service`] values.","sig":null,"attributes":[{"value":"/ Creates new [`Service`] values.","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tower-0.4.13\\src\\make\\make_service.rs","byte_start":13090,"byte_end":13125,"line_start":12,"line_end":12,"column_start":1,"column_end":36}},{"value":"/","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tower-0.4.13\\src\\make\\make_service.rs","byte_start":13126,"byte_end":13129,"line_start":13,"line_end":13,"column_start":1,"column_end":4}},{"value":"/ Acts as a service factory. This is useful for cases where new [`Service`]","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tower-0.4.13\\src\\make\\make_service.rs","byte_start":13130,"byte_end":13207,"line_start":14,"line_end":14,"column_start":1,"column_end":78}},{"value":"/ values must be produced. One case is a TCP server listener. The listener","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tower-0.4.13\\src\\make\\make_service.rs","byte_start":13208,"byte_end":13284,"line_start":15,"line_end":15,"column_start":1,"column_end":77}},{"value":"/ accepts new TCP streams, obtains a new [`Service`] value using the","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tower-0.4.13\\src\\make\\make_service.rs","byte_start":13285,"byte_end":13355,"line_start":16,"line_end":16,"column_start":1,"column_end":71}},{"value":"/ [`MakeService`] trait, and uses that new [`Service`] value to process inbound","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tower-0.4.13\\src\\make\\make_service.rs","byte_start":13356,"byte_end":13437,"line_start":17,"line_end":17,"column_start":1,"column_end":82}},{"value":"/ requests on that new TCP stream.","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tower-0.4.13\\src\\make\\make_service.rs","byte_start":13438,"byte_end":13474,"line_start":18,"line_end":18,"column_start":1,"column_end":37}},{"value":"/","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tower-0.4.13\\src\\make\\make_service.rs","byte_start":13475,"byte_end":13478,"line_start":19,"line_end":19,"column_start":1,"column_end":4}},{"value":"/ This is essentially a trait alias for a [`Service`] of [`Service`]s.","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tower-0.4.13\\src\\make\\make_service.rs","byte_start":13479,"byte_end":13551,"line_start":20,"line_end":20,"column_start":1,"column_end":73}}]},{"kind":"Type","id":{"krate":0,"index":99},"span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tower-0.4.13\\src\\make\\make_service.rs","byte_start":13668,"byte_end":13676,"line_start":23,"line_end":23,"column_start":10,"column_end":18},"name":"Response","qualname":"::make::make_service::MakeService::Response","value":"type Response;","parent":{"krate":0,"index":96},"children":[],"decl_id":null,"docs":" Responses given by the service\n","sig":null,"attributes":[{"value":"/ Responses given by the service","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tower-0.4.13\\src\\make\\make_service.rs","byte_start":13624,"byte_end":13658,"line_start":22,"line_end":22,"column_start":5,"column_end":39}}]},{"kind":"Type","id":{"krate":0,"index":100},"span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tower-0.4.13\\src\\make\\make_service.rs","byte_start":13727,"byte_end":13732,"line_start":26,"line_end":26,"column_start":10,"column_end":15},"name":"Error","qualname":"::make::make_service::MakeService::Error","value":"type Error;","parent":{"krate":0,"index":96},"children":[],"decl_id":null,"docs":" Errors produced by the service\n","sig":null,"attributes":[{"value":"/ Errors produced by the service","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tower-0.4.13\\src\\make\\make_service.rs","byte_start":13683,"byte_end":13717,"line_start":25,"line_end":25,"column_start":5,"column_end":39}}]},{"kind":"Type","id":{"krate":0,"index":101},"span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tower-0.4.13\\src\\make\\make_service.rs","byte_start":13798,"byte_end":13805,"line_start":29,"line_end":29,"column_start":10,"column_end":17},"name":"Service","qualname":"::make::make_service::MakeService::Service","value":"type Service: Service<Request, Response = Self::Response, Error = Self::Error>;","parent":{"krate":0,"index":96},"children":[],"decl_id":null,"docs":" The [`Service`] value created by this factory\n","sig":null,"attributes":[{"value":"/ The [`Service`] value created by this factory","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tower-0.4.13\\src\\make\\make_service.rs","byte_start":13739,"byte_end":13788,"line_start":28,"line_end":28,"column_start":5,"column_end":54}}]},{"kind":"Type","id":{"krate":0,"index":102},"span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tower-0.4.13\\src\\make\\make_service.rs","byte_start":13933,"byte_end":13942,"line_start":32,"line_end":32,"column_start":10,"column_end":19},"name":"MakeError","qualname":"::make::make_service::MakeService::MakeError","value":"type MakeError;","parent":{"krate":0,"index":96},"children":[],"decl_id":null,"docs":" Errors produced while building a service.\n","sig":null,"attributes":[{"value":"/ Errors produced while building a service.","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tower-0.4.13\\src\\make\\make_service.rs","byte_start":13878,"byte_end":13923,"line_start":31,"line_end":31,"column_start":5,"column_end":50}}]},{"kind":"Type","id":{"krate":0,"index":103},"span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tower-0.4.13\\src\\make\\make_service.rs","byte_start":14002,"byte_end":14008,"line_start":35,"line_end":35,"column_start":10,"column_end":16},"name":"Future","qualname":"::make::make_service::MakeService::Future","value":"type Future: Future<Output = Result<Self::Service, Self::MakeError>>;","parent":{"krate":0,"index":96},"children":[],"decl_id":null,"docs":" The future of the [`Service`] instance.\n","sig":null,"attributes":[{"value":"/ The future of the [`Service`] instance.","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tower-0.4.13\\src\\make\\make_service.rs","byte_start":13949,"byte_end":13992,"line_start":34,"line_end":34,"column_start":5,"column_end":48}}]},{"kind":"Method","id":{"krate":0,"index":104},"span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tower-0.4.13\\src\\make\\make_service.rs","byte_start":14482,"byte_end":14492,"line_start":45,"line_end":45,"column_start":8,"column_end":18},"name":"poll_ready","qualname":"::make::make_service::MakeService::poll_ready","value":"pub fn poll_ready(&mut Self, &mut Context)\n-> Poll<Result<(), Self::MakeError>>","parent":{"krate":0,"index":96},"children":[],"decl_id":null,"docs":" Returns [`Poll::Ready`] when the factory is able to create more services.","sig":null,"attributes":[{"value":"/ Returns [`Poll::Ready`] when the factory is able to create more services.","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tower-0.4.13\\src\\make\\make_service.rs","byte_start":14072,"byte_end":14149,"line_start":37,"line_end":37,"column_start":5,"column_end":82}},{"value":"/","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tower-0.4.13\\src\\make\\make_service.rs","byte_start":14154,"byte_end":14157,"line_start":38,"line_end":38,"column_start":5,"column_end":8}},{"value":"/ If the service is at capacity, then [`Poll::Pending`] is returned and the task","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tower-0.4.13\\src\\make\\make_service.rs","byte_start":14162,"byte_end":14244,"line_start":39,"line_end":39,"column_start":5,"column_end":87}},{"value":"/ is notified when the service becomes ready again. This function is","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tower-0.4.13\\src\\make\\make_service.rs","byte_start":14249,"byte_end":14319,"line_start":40,"line_end":40,"column_start":5,"column_end":75}},{"value":"/ expected to be called while on a task.","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tower-0.4.13\\src\\make\\make_service.rs","byte_start":14324,"byte_end":14366,"line_start":41,"line_end":41,"column_start":5,"column_end":47}},{"value":"/","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tower-0.4.13\\src\\make\\make_service.rs","byte_start":14371,"byte_end":14374,"line_start":42,"line_end":42,"column_start":5,"column_end":8}},{"value":"/ [`Poll::Ready`]: std::task::Poll::Ready","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tower-0.4.13\\src\\make\\make_service.rs","byte_start":14379,"byte_end":14422,"line_start":43,"line_end":43,"column_start":5,"column_end":48}},{"value":"/ [`Poll::Pending`]: std::task::Poll::Pending","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tower-0.4.13\\src\\make\\make_service.rs","byte_start":14427,"byte_end":14474,"line_start":44,"line_end":44,"column_start":5,"column_end":52}}]},{"kind":"Method","id":{"krate":0,"index":105},"span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tower-0.4.13\\src\\make\\make_service.rs","byte_start":14634,"byte_end":14646,"line_start":48,"line_end":48,"column_start":8,"column_end":20},"name":"make_service","qualname":"::make::make_service::MakeService::make_service","value":"pub fn make_service(&mut Self, Target) -> Self::Future","parent":{"krate":0,"index":96},"children":[],"decl_id":null,"docs":" Create and return a new service value asynchronously.\n","sig":null,"attributes":[{"value":"/ Create and return a new service value asynchronously.","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tower-0.4.13\\src\\make\\make_service.rs","byte_start":14569,"byte_end":14626,"line_start":47,"line_end":47,"column_start":5,"column_end":62}}]},{"kind":"Method","id":{"krate":0,"index":106},"span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tower-0.4.13\\src\\make\\make_service.rs","byte_start":15559,"byte_end":15571,"line_start":79,"line_end":79,"column_start":8,"column_end":20},"name":"into_service","qualname":"::make::make_service::MakeService::into_service","value":"pub fn into_service(Self) -> IntoService<Self, Request> where Self: Sized","parent":{"krate":0,"index":96},"children":[],"decl_id":null,"docs":" Consume this [`MakeService`] and convert it into a [`Service`].","sig":null,"attributes":[{"value":"/ Consume this [`MakeService`] and convert it into a [`Service`].","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tower-0.4.13\\src\\make\\make_service.rs","byte_start":14696,"byte_end":14763,"line_start":50,"line_end":50,"column_start":5,"column_end":72}},{"value":"/","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tower-0.4.13\\src\\make\\make_service.rs","byte_start":14768,"byte_end":14771,"line_start":51,"line_end":51,"column_start":5,"column_end":8}},{"value":"/ # Example","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tower-0.4.13\\src\\make\\make_service.rs","byte_start":14776,"byte_end":14789,"line_start":52,"line_end":52,"column_start":5,"column_end":18}},{"value":"/ ```","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tower-0.4.13\\src\\make\\make_service.rs","byte_start":14794,"byte_end":14801,"line_start":53,"line_end":53,"column_start":5,"column_end":12}},{"value":"/ use std::convert::Infallible;","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tower-0.4.13\\src\\make\\make_service.rs","byte_start":14806,"byte_end":14839,"line_start":54,"line_end":54,"column_start":5,"column_end":38}},{"value":"/ use tower::Service;","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tower-0.4.13\\src\\make\\make_service.rs","byte_start":14844,"byte_end":14867,"line_start":55,"line_end":55,"column_start":5,"column_end":28}},{"value":"/ use tower::make::MakeService;","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tower-0.4.13\\src\\make\\make_service.rs","byte_start":14872,"byte_end":14905,"line_start":56,"line_end":56,"column_start":5,"column_end":38}},{"value":"/ use tower::service_fn;","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tower-0.4.13\\src\\make\\make_service.rs","byte_start":14910,"byte_end":14936,"line_start":57,"line_end":57,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tower-0.4.13\\src\\make\\make_service.rs","byte_start":14941,"byte_end":14944,"line_start":58,"line_end":58,"column_start":5,"column_end":8}},{"value":"/ # fn main() {","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tower-0.4.13\\src\\make\\make_service.rs","byte_start":14949,"byte_end":14966,"line_start":59,"line_end":59,"column_start":5,"column_end":22}},{"value":"/ # async {","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tower-0.4.13\\src\\make\\make_service.rs","byte_start":14971,"byte_end":14984,"line_start":60,"line_end":60,"column_start":5,"column_end":18}},{"value":"/ // A `MakeService`","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tower-0.4.13\\src\\make\\make_service.rs","byte_start":14989,"byte_end":15011,"line_start":61,"line_end":61,"column_start":5,"column_end":27}},{"value":"/ let make_service = service_fn(|make_req: ()| async {","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tower-0.4.13\\src\\make\\make_service.rs","byte_start":15016,"byte_end":15072,"line_start":62,"line_end":62,"column_start":5,"column_end":61}},{"value":"/     Ok::<_, Infallible>(service_fn(|req: String| async {","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tower-0.4.13\\src\\make\\make_service.rs","byte_start":15077,"byte_end":15137,"line_start":63,"line_end":63,"column_start":5,"column_end":65}},{"value":"/         Ok::<_, Infallible>(req)","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tower-0.4.13\\src\\make\\make_service.rs","byte_start":15142,"byte_end":15178,"line_start":64,"line_end":64,"column_start":5,"column_end":41}},{"value":"/     }))","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tower-0.4.13\\src\\make\\make_service.rs","byte_start":15183,"byte_end":15194,"line_start":65,"line_end":65,"column_start":5,"column_end":16}},{"value":"/ });","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tower-0.4.13\\src\\make\\make_service.rs","byte_start":15199,"byte_end":15206,"line_start":66,"line_end":66,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tower-0.4.13\\src\\make\\make_service.rs","byte_start":15211,"byte_end":15214,"line_start":67,"line_end":67,"column_start":5,"column_end":8}},{"value":"/ // Convert the `MakeService` into a `Service`","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tower-0.4.13\\src\\make\\make_service.rs","byte_start":15219,"byte_end":15268,"line_start":68,"line_end":68,"column_start":5,"column_end":54}},{"value":"/ let mut svc = make_service.into_service();","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tower-0.4.13\\src\\make\\make_service.rs","byte_start":15273,"byte_end":15319,"line_start":69,"line_end":69,"column_start":5,"column_end":51}},{"value":"/","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tower-0.4.13\\src\\make\\make_service.rs","byte_start":15324,"byte_end":15327,"line_start":70,"line_end":70,"column_start":5,"column_end":8}},{"value":"/ // Make a new service","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tower-0.4.13\\src\\make\\make_service.rs","byte_start":15332,"byte_end":15357,"line_start":71,"line_end":71,"column_start":5,"column_end":30}},{"value":"/ let mut new_svc = svc.call(()).await.unwrap();","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tower-0.4.13\\src\\make\\make_service.rs","byte_start":15362,"byte_end":15412,"line_start":72,"line_end":72,"column_start":5,"column_end":55}},{"value":"/","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tower-0.4.13\\src\\make\\make_service.rs","byte_start":15417,"byte_end":15420,"line_start":73,"line_end":73,"column_start":5,"column_end":8}},{"value":"/ // Call the service","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tower-0.4.13\\src\\make\\make_service.rs","byte_start":15425,"byte_end":15448,"line_start":74,"line_end":74,"column_start":5,"column_end":28}},{"value":"/ let res = new_svc.call(\"foo\".to_string()).await.unwrap();","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tower-0.4.13\\src\\make\\make_service.rs","byte_start":15453,"byte_end":15514,"line_start":75,"line_end":75,"column_start":5,"column_end":66}},{"value":"/ # };","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tower-0.4.13\\src\\make\\make_service.rs","byte_start":15519,"byte_end":15527,"line_start":76,"line_end":76,"column_start":5,"column_end":13}},{"value":"/ # }","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tower-0.4.13\\src\\make\\make_service.rs","byte_start":15532,"byte_end":15539,"line_start":77,"line_end":77,"column_start":5,"column_end":12}},{"value":"/ ```","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tower-0.4.13\\src\\make\\make_service.rs","byte_start":15544,"byte_end":15551,"line_start":78,"line_end":78,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":107},"span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tower-0.4.13\\src\\make\\make_service.rs","byte_start":16777,"byte_end":16787,"line_start":121,"line_end":121,"column_start":8,"column_end":18},"name":"as_service","qualname":"::make::make_service::MakeService::as_service","value":"pub fn as_service(&mut Self) -> AsService<, Self, Request> where Self: Sized","parent":{"krate":0,"index":96},"children":[],"decl_id":null,"docs":" Convert this [`MakeService`] into a [`Service`] without consuming the original [`MakeService`].","sig":null,"attributes":[{"value":"/ Convert this [`MakeService`] into a [`Service`] without consuming the original [`MakeService`].","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tower-0.4.13\\src\\make\\make_service.rs","byte_start":15746,"byte_end":15845,"line_start":89,"line_end":89,"column_start":5,"column_end":104}},{"value":"/","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tower-0.4.13\\src\\make\\make_service.rs","byte_start":15850,"byte_end":15853,"line_start":90,"line_end":90,"column_start":5,"column_end":8}},{"value":"/ # Example","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tower-0.4.13\\src\\make\\make_service.rs","byte_start":15858,"byte_end":15871,"line_start":91,"line_end":91,"column_start":5,"column_end":18}},{"value":"/ ```","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tower-0.4.13\\src\\make\\make_service.rs","byte_start":15876,"byte_end":15883,"line_start":92,"line_end":92,"column_start":5,"column_end":12}},{"value":"/ use std::convert::Infallible;","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tower-0.4.13\\src\\make\\make_service.rs","byte_start":15888,"byte_end":15921,"line_start":93,"line_end":93,"column_start":5,"column_end":38}},{"value":"/ use tower::Service;","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tower-0.4.13\\src\\make\\make_service.rs","byte_start":15926,"byte_end":15949,"line_start":94,"line_end":94,"column_start":5,"column_end":28}},{"value":"/ use tower::make::MakeService;","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tower-0.4.13\\src\\make\\make_service.rs","byte_start":15954,"byte_end":15987,"line_start":95,"line_end":95,"column_start":5,"column_end":38}},{"value":"/ use tower::service_fn;","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tower-0.4.13\\src\\make\\make_service.rs","byte_start":15992,"byte_end":16018,"line_start":96,"line_end":96,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tower-0.4.13\\src\\make\\make_service.rs","byte_start":16023,"byte_end":16026,"line_start":97,"line_end":97,"column_start":5,"column_end":8}},{"value":"/ # fn main() {","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tower-0.4.13\\src\\make\\make_service.rs","byte_start":16031,"byte_end":16048,"line_start":98,"line_end":98,"column_start":5,"column_end":22}},{"value":"/ # async {","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tower-0.4.13\\src\\make\\make_service.rs","byte_start":16053,"byte_end":16066,"line_start":99,"line_end":99,"column_start":5,"column_end":18}},{"value":"/ // A `MakeService`","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tower-0.4.13\\src\\make\\make_service.rs","byte_start":16071,"byte_end":16093,"line_start":100,"line_end":100,"column_start":5,"column_end":27}},{"value":"/ let mut make_service = service_fn(|make_req: ()| async {","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tower-0.4.13\\src\\make\\make_service.rs","byte_start":16098,"byte_end":16158,"line_start":101,"line_end":101,"column_start":5,"column_end":65}},{"value":"/     Ok::<_, Infallible>(service_fn(|req: String| async {","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tower-0.4.13\\src\\make\\make_service.rs","byte_start":16163,"byte_end":16223,"line_start":102,"line_end":102,"column_start":5,"column_end":65}},{"value":"/         Ok::<_, Infallible>(req)","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tower-0.4.13\\src\\make\\make_service.rs","byte_start":16228,"byte_end":16264,"line_start":103,"line_end":103,"column_start":5,"column_end":41}},{"value":"/     }))","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tower-0.4.13\\src\\make\\make_service.rs","byte_start":16269,"byte_end":16280,"line_start":104,"line_end":104,"column_start":5,"column_end":16}},{"value":"/ });","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tower-0.4.13\\src\\make\\make_service.rs","byte_start":16285,"byte_end":16292,"line_start":105,"line_end":105,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tower-0.4.13\\src\\make\\make_service.rs","byte_start":16297,"byte_end":16300,"line_start":106,"line_end":106,"column_start":5,"column_end":8}},{"value":"/ // Convert the `MakeService` into a `Service`","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tower-0.4.13\\src\\make\\make_service.rs","byte_start":16305,"byte_end":16354,"line_start":107,"line_end":107,"column_start":5,"column_end":54}},{"value":"/ let mut svc = make_service.as_service();","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tower-0.4.13\\src\\make\\make_service.rs","byte_start":16359,"byte_end":16403,"line_start":108,"line_end":108,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tower-0.4.13\\src\\make\\make_service.rs","byte_start":16408,"byte_end":16411,"line_start":109,"line_end":109,"column_start":5,"column_end":8}},{"value":"/ // Make a new service","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tower-0.4.13\\src\\make\\make_service.rs","byte_start":16416,"byte_end":16441,"line_start":110,"line_end":110,"column_start":5,"column_end":30}},{"value":"/ let mut new_svc = svc.call(()).await.unwrap();","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tower-0.4.13\\src\\make\\make_service.rs","byte_start":16446,"byte_end":16496,"line_start":111,"line_end":111,"column_start":5,"column_end":55}},{"value":"/","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tower-0.4.13\\src\\make\\make_service.rs","byte_start":16501,"byte_end":16504,"line_start":112,"line_end":112,"column_start":5,"column_end":8}},{"value":"/ // Call the service","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tower-0.4.13\\src\\make\\make_service.rs","byte_start":16509,"byte_end":16532,"line_start":113,"line_end":113,"column_start":5,"column_end":28}},{"value":"/ let res = new_svc.call(\"foo\".to_string()).await.unwrap();","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tower-0.4.13\\src\\make\\make_service.rs","byte_start":16537,"byte_end":16598,"line_start":114,"line_end":114,"column_start":5,"column_end":66}},{"value":"/","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tower-0.4.13\\src\\make\\make_service.rs","byte_start":16603,"byte_end":16606,"line_start":115,"line_end":115,"column_start":5,"column_end":8}},{"value":"/ // The original `MakeService` is still accessible","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tower-0.4.13\\src\\make\\make_service.rs","byte_start":16611,"byte_end":16664,"line_start":116,"line_end":116,"column_start":5,"column_end":58}},{"value":"/ let new_svc = make_service.make_service(()).await.unwrap();","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tower-0.4.13\\src\\make\\make_service.rs","byte_start":16669,"byte_end":16732,"line_start":117,"line_end":117,"column_start":5,"column_end":68}},{"value":"/ # };","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tower-0.4.13\\src\\make\\make_service.rs","byte_start":16737,"byte_end":16745,"line_start":118,"line_end":118,"column_start":5,"column_end":13}},{"value":"/ # }","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tower-0.4.13\\src\\make\\make_service.rs","byte_start":16750,"byte_end":16757,"line_start":119,"line_end":119,"column_start":5,"column_end":12}},{"value":"/ ```","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tower-0.4.13\\src\\make\\make_service.rs","byte_start":16762,"byte_end":16769,"line_start":120,"line_end":120,"column_start":5,"column_end":12}}]},{"kind":"Struct","id":{"krate":0,"index":125},"span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tower-0.4.13\\src\\make\\make_service.rs","byte_start":17800,"byte_end":17811,"line_start":164,"line_end":164,"column_start":12,"column_end":23},"name":"IntoService","qualname":"::make::make_service::IntoService","value":"IntoService {  }","parent":null,"children":[{"krate":0,"index":128},{"krate":0,"index":129}],"decl_id":null,"docs":" Service returned by [`MakeService::into_service`][into].","sig":null,"attributes":[{"value":"/ Service returned by [`MakeService::into_service`][into].","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tower-0.4.13\\src\\make\\make_service.rs","byte_start":17617,"byte_end":17677,"line_start":159,"line_end":159,"column_start":1,"column_end":61}},{"value":"/","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tower-0.4.13\\src\\make\\make_service.rs","byte_start":17678,"byte_end":17681,"line_start":160,"line_end":160,"column_start":1,"column_end":4}},{"value":"/ See the documentation on [`into_service`][into] for details.","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tower-0.4.13\\src\\make\\make_service.rs","byte_start":17682,"byte_end":17746,"line_start":161,"line_end":161,"column_start":1,"column_end":65}},{"value":"/","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tower-0.4.13\\src\\make\\make_service.rs","byte_start":17747,"byte_end":17750,"line_start":162,"line_end":162,"column_start":1,"column_end":4}},{"value":"/ [into]: MakeService::into_service","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tower-0.4.13\\src\\make\\make_service.rs","byte_start":17751,"byte_end":17788,"line_start":163,"line_end":163,"column_start":1,"column_end":38}}]},{"kind":"Struct","id":{"krate":0,"index":148},"span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tower-0.4.13\\src\\make\\make_service.rs","byte_start":19002,"byte_end":19011,"line_start":217,"line_end":217,"column_start":12,"column_end":21},"name":"AsService","qualname":"::make::make_service::AsService","value":"AsService {  }","parent":null,"children":[{"krate":0,"index":152},{"krate":0,"index":153}],"decl_id":null,"docs":" Service returned by [`MakeService::as_service`][as].","sig":null,"attributes":[{"value":"/ Service returned by [`MakeService::as_service`][as].","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tower-0.4.13\\src\\make\\make_service.rs","byte_start":18831,"byte_end":18887,"line_start":212,"line_end":212,"column_start":1,"column_end":57}},{"value":"/","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tower-0.4.13\\src\\make\\make_service.rs","byte_start":18888,"byte_end":18891,"line_start":213,"line_end":213,"column_start":1,"column_end":4}},{"value":"/ See the documentation on [`as_service`][as] for details.","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tower-0.4.13\\src\\make\\make_service.rs","byte_start":18892,"byte_end":18952,"line_start":214,"line_end":214,"column_start":1,"column_end":61}},{"value":"/","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tower-0.4.13\\src\\make\\make_service.rs","byte_start":18953,"byte_end":18956,"line_start":215,"line_end":215,"column_start":1,"column_end":4}},{"value":"/ [as]: MakeService::as_service","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tower-0.4.13\\src\\make\\make_service.rs","byte_start":18957,"byte_end":18990,"line_start":216,"line_end":216,"column_start":1,"column_end":34}}]},{"kind":"Mod","id":{"krate":0,"index":184},"span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tower-0.4.13\\src\\make\\mod.rs","byte_start":11128,"byte_end":11134,"line_start":10,"line_end":10,"column_start":9,"column_end":15},"name":"future","qualname":"::make::future","value":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tower-0.4.13\\src\\make\\mod.rs","parent":null,"children":[{"krate":0,"index":185}],"decl_id":null,"docs":" Future types\n","sig":null,"attributes":[{"value":"/ Future types","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tower-0.4.13\\src\\make\\mod.rs","byte_start":11141,"byte_end":11157,"line_start":11,"line_end":11,"column_start":5,"column_end":21}}]},{"kind":"Mod","id":{"krate":0,"index":188},"span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tower-0.4.13\\src\\util\\mod.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"util","qualname":"::util","value":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tower-0.4.13\\src\\util\\mod.rs","parent":null,"children":[{"krate":0,"index":189},{"krate":0,"index":265},{"krate":0,"index":458},{"krate":0,"index":527},{"krate":0,"index":675},{"krate":0,"index":727},{"krate":0,"index":775},{"krate":0,"index":826},{"krate":0,"index":870},{"krate":0,"index":921},{"krate":0,"index":973},{"krate":0,"index":1029},{"krate":0,"index":1074},{"krate":0,"index":1147},{"krate":0,"index":1226},{"krate":0,"index":1259},{"krate":0,"index":1316},{"krate":0,"index":1317},{"krate":0,"index":1318},{"krate":0,"index":1321},{"krate":0,"index":1324},{"krate":0,"index":1325},{"krate":0,"index":1328},{"krate":0,"index":1331},{"krate":0,"index":1334},{"krate":0,"index":1337},{"krate":0,"index":1340},{"krate":0,"index":1341},{"krate":0,"index":1344},{"krate":0,"index":1347},{"krate":0,"index":1348},{"krate":0,"index":1351},{"krate":0,"index":1354},{"krate":0,"index":1355},{"krate":0,"index":1358},{"krate":0,"index":1361},{"krate":0,"index":1362},{"krate":0,"index":1365},{"krate":0,"index":1368},{"krate":0,"index":1369},{"krate":0,"index":1372},{"krate":0,"index":1375},{"krate":0,"index":1376},{"krate":0,"index":1379},{"krate":0,"index":1382},{"krate":0,"index":1385},{"krate":0,"index":1388},{"krate":0,"index":1389},{"krate":0,"index":1392},{"krate":0,"index":1395},{"krate":0,"index":1398},{"krate":0,"index":1399},{"krate":0,"index":1402},{"krate":0,"index":1405},{"krate":0,"index":1406},{"krate":0,"index":1409},{"krate":0,"index":1412},{"krate":0,"index":1413},{"krate":0,"index":1416},{"krate":0,"index":1419},{"krate":0,"index":1422},{"krate":0,"index":1425},{"krate":0,"index":1429},{"krate":0,"index":1448},{"krate":0,"index":1483},{"krate":0,"index":1486}],"decl_id":null,"docs":" Various utility types and functions that are generally used with Tower.\n","sig":null,"attributes":[{"value":"cfg(feature = \"util\")","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tower-0.4.13\\src\\lib.rs","byte_start":8867,"byte_end":8891,"line_start":213,"line_end":213,"column_start":1,"column_end":25}},{"value":"/ Various utility types and functions that are generally used with Tower.","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tower-0.4.13\\src\\util\\mod.rs","byte_start":23700,"byte_end":23775,"line_start":1,"line_end":1,"column_start":1,"column_end":76}}]},{"kind":"Struct","id":{"krate":0,"index":1656},"span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tower-0.4.13\\src\\util\\and_then.rs","byte_start":59788,"byte_end":59795,"line_start":14,"line_end":14,"column_start":12,"column_end":19},"name":"AndThen","qualname":"::util::and_then::AndThen","value":"AndThen {  }","parent":null,"children":[{"krate":0,"index":1659},{"krate":0,"index":1660}],"decl_id":null,"docs":" Service returned by the [`and_then`] combinator.","sig":null,"attributes":[{"value":"/ Service returned by the [`and_then`] combinator.","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tower-0.4.13\\src\\util\\and_then.rs","byte_start":59651,"byte_end":59703,"line_start":10,"line_end":10,"column_start":1,"column_end":53}},{"value":"/","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tower-0.4.13\\src\\util\\and_then.rs","byte_start":59704,"byte_end":59707,"line_start":11,"line_end":11,"column_start":1,"column_end":4}},{"value":"/ [`and_then`]: crate::util::ServiceExt::and_then","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tower-0.4.13\\src\\util\\and_then.rs","byte_start":59708,"byte_end":59759,"line_start":12,"line_end":12,"column_start":1,"column_end":52}}]},{"kind":"Struct","id":{"krate":0,"index":1665},"span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tower-0.4.13\\src\\util\\and_then.rs","byte_start":60289,"byte_end":60302,"line_start":35,"line_end":35,"column_start":16,"column_end":29},"name":"AndThenFuture","qualname":"::util::and_then::AndThenFuture","value":"AndThenFuture {  }","parent":null,"children":[{"krate":0,"index":1669}],"decl_id":null,"docs":" Response future from [`AndThen`] services.","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":1714},"span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tower-0.4.13\\src\\util\\and_then.rs","byte_start":61362,"byte_end":61374,"line_start":71,"line_end":71,"column_start":12,"column_end":24},"name":"AndThenLayer","qualname":"::util::and_then::AndThenLayer","value":"AndThenLayer {  }","parent":null,"children":[{"krate":0,"index":1716}],"decl_id":null,"docs":" A [`Layer`] that produces a [`AndThen`] service.","sig":null,"attributes":[{"value":"/ A [`Layer`] that produces a [`AndThen`] service.","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tower-0.4.13\\src\\util\\and_then.rs","byte_start":61236,"byte_end":61288,"line_start":67,"line_end":67,"column_start":1,"column_end":53}},{"value":"/","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tower-0.4.13\\src\\util\\and_then.rs","byte_start":61289,"byte_end":61292,"line_start":68,"line_end":68,"column_start":1,"column_end":4}},{"value":"/ [`Layer`]: tower_layer::Layer","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tower-0.4.13\\src\\util\\and_then.rs","byte_start":61293,"byte_end":61326,"line_start":69,"line_end":69,"column_start":1,"column_end":34}}]},{"kind":"Method","id":{"krate":0,"index":245},"span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tower-0.4.13\\src\\util\\and_then.rs","byte_start":61472,"byte_end":61475,"line_start":77,"line_end":77,"column_start":12,"column_end":15},"name":"new","qualname":"<AndThen<S, F>>::new","value":"pub fn new(S, F) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Creates a new `AndThen` service.\n","sig":null,"attributes":[{"value":"/ Creates a new `AndThen` service.","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tower-0.4.13\\src\\util\\and_then.rs","byte_start":61424,"byte_end":61460,"line_start":76,"line_end":76,"column_start":5,"column_end":41}}]},{"kind":"Method","id":{"krate":0,"index":246},"span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tower-0.4.13\\src\\util\\and_then.rs","byte_start":61751,"byte_end":61756,"line_start":86,"line_end":86,"column_start":12,"column_end":17},"name":"layer","qualname":"<AndThen<S, F>>::layer","value":"pub fn layer(F) -> AndThenLayer<F>","parent":null,"children":[],"decl_id":null,"docs":" Returns a new [`Layer`] that produces [`AndThen`] services.","sig":null,"attributes":[{"value":"/ Returns a new [`Layer`] that produces [`AndThen`] services.","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tower-0.4.13\\src\\util\\and_then.rs","byte_start":61542,"byte_end":61605,"line_start":81,"line_end":81,"column_start":5,"column_end":68}},{"value":"/","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tower-0.4.13\\src\\util\\and_then.rs","byte_start":61610,"byte_end":61613,"line_start":82,"line_end":82,"column_start":5,"column_end":8}},{"value":"/ This is a convenience function that simply calls [`AndThenLayer::new`].","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tower-0.4.13\\src\\util\\and_then.rs","byte_start":61618,"byte_end":61693,"line_start":83,"line_end":83,"column_start":5,"column_end":80}},{"value":"/","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tower-0.4.13\\src\\util\\and_then.rs","byte_start":61698,"byte_end":61701,"line_start":84,"line_end":84,"column_start":5,"column_end":8}},{"value":"/ [`Layer`]: tower_layer::Layer","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tower-0.4.13\\src\\util\\and_then.rs","byte_start":61706,"byte_end":61739,"line_start":85,"line_end":85,"column_start":5,"column_end":38}}]},{"kind":"Method","id":{"krate":0,"index":259},"span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tower-0.4.13\\src\\util\\and_then.rs","byte_start":62506,"byte_end":62509,"line_start":113,"line_end":113,"column_start":12,"column_end":15},"name":"new","qualname":"<AndThenLayer<F>>::new","value":"pub fn new(F) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Creates a new [`AndThenLayer`] layer.\n","sig":null,"attributes":[{"value":"/ Creates a new [`AndThenLayer`] layer.","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tower-0.4.13\\src\\util\\and_then.rs","byte_start":62453,"byte_end":62494,"line_start":112,"line_end":112,"column_start":5,"column_end":46}}]},{"kind":"Struct","id":{"krate":0,"index":287},"span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tower-0.4.13\\src\\util\\boxed\\layer.rs","byte_start":65940,"byte_end":65948,"line_start":54,"line_end":54,"column_start":12,"column_end":20},"name":"BoxLayer","qualname":"::util::boxed::layer::BoxLayer","value":"BoxLayer {  }","parent":null,"children":[{"krate":0,"index":292}],"decl_id":null,"docs":" A boxed [`Layer`] trait object.","sig":null,"attributes":[{"value":"/ A boxed [`Layer`] trait object.","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tower-0.4.13\\src\\util\\boxed\\layer.rs","byte_start":64339,"byte_end":64374,"line_start":6,"line_end":6,"column_start":1,"column_end":36}},{"value":"/","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tower-0.4.13\\src\\util\\boxed\\layer.rs","byte_start":64375,"byte_end":64378,"line_start":7,"line_end":7,"column_start":1,"column_end":4}},{"value":"/ [`BoxLayer`] turns a layer into a trait object, allowing both the [`Layer`] itself","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tower-0.4.13\\src\\util\\boxed\\layer.rs","byte_start":64379,"byte_end":64465,"line_start":8,"line_end":8,"column_start":1,"column_end":87}},{"value":"/ and the output [`Service`] to be dynamic, while having consistent types.","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tower-0.4.13\\src\\util\\boxed\\layer.rs","byte_start":64466,"byte_end":64542,"line_start":9,"line_end":9,"column_start":1,"column_end":77}},{"value":"/","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tower-0.4.13\\src\\util\\boxed\\layer.rs","byte_start":64543,"byte_end":64546,"line_start":10,"line_end":10,"column_start":1,"column_end":4}},{"value":"/ This [`Layer`] produces [`BoxService`] instances erasing the type of the","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tower-0.4.13\\src\\util\\boxed\\layer.rs","byte_start":64547,"byte_end":64623,"line_start":11,"line_end":11,"column_start":1,"column_end":77}},{"value":"/ [`Service`] produced by the wrapped [`Layer`].","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tower-0.4.13\\src\\util\\boxed\\layer.rs","byte_start":64624,"byte_end":64674,"line_start":12,"line_end":12,"column_start":1,"column_end":51}},{"value":"/","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tower-0.4.13\\src\\util\\boxed\\layer.rs","byte_start":64675,"byte_end":64678,"line_start":13,"line_end":13,"column_start":1,"column_end":4}},{"value":"/ # Example","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tower-0.4.13\\src\\util\\boxed\\layer.rs","byte_start":64679,"byte_end":64692,"line_start":14,"line_end":14,"column_start":1,"column_end":14}},{"value":"/","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tower-0.4.13\\src\\util\\boxed\\layer.rs","byte_start":64693,"byte_end":64696,"line_start":15,"line_end":15,"column_start":1,"column_end":4}},{"value":"/ `BoxLayer` can, for example, be useful to create layers dynamically that otherwise wouldn't have","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tower-0.4.13\\src\\util\\boxed\\layer.rs","byte_start":64697,"byte_end":64797,"line_start":16,"line_end":16,"column_start":1,"column_end":101}},{"value":"/ the same types. In this example, we include a [`Timeout`] layer","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tower-0.4.13\\src\\util\\boxed\\layer.rs","byte_start":64798,"byte_end":64865,"line_start":17,"line_end":17,"column_start":1,"column_end":68}},{"value":"/ only if an environment variable is set. We can use `BoxLayer`","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tower-0.4.13\\src\\util\\boxed\\layer.rs","byte_start":64866,"byte_end":64931,"line_start":18,"line_end":18,"column_start":1,"column_end":66}},{"value":"/ to return a consistent type regardless of runtime configuration:","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tower-0.4.13\\src\\util\\boxed\\layer.rs","byte_start":64932,"byte_end":65000,"line_start":19,"line_end":19,"column_start":1,"column_end":69}},{"value":"/","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tower-0.4.13\\src\\util\\boxed\\layer.rs","byte_start":65001,"byte_end":65004,"line_start":20,"line_end":20,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tower-0.4.13\\src\\util\\boxed\\layer.rs","byte_start":65005,"byte_end":65012,"line_start":21,"line_end":21,"column_start":1,"column_end":8}},{"value":"/ use std::time::Duration;","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tower-0.4.13\\src\\util\\boxed\\layer.rs","byte_start":65013,"byte_end":65041,"line_start":22,"line_end":22,"column_start":1,"column_end":29}},{"value":"/ use tower::{Service, ServiceBuilder, BoxError, util::BoxLayer};","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tower-0.4.13\\src\\util\\boxed\\layer.rs","byte_start":65042,"byte_end":65109,"line_start":23,"line_end":23,"column_start":1,"column_end":68}},{"value":"/","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tower-0.4.13\\src\\util\\boxed\\layer.rs","byte_start":65110,"byte_end":65113,"line_start":24,"line_end":24,"column_start":1,"column_end":4}},{"value":"/ fn common_layer<S, T>() -> BoxLayer<S, T, S::Response, BoxError>","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tower-0.4.13\\src\\util\\boxed\\layer.rs","byte_start":65114,"byte_end":65182,"line_start":25,"line_end":25,"column_start":1,"column_end":69}},{"value":"/ where","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tower-0.4.13\\src\\util\\boxed\\layer.rs","byte_start":65183,"byte_end":65192,"line_start":26,"line_end":26,"column_start":1,"column_end":10}},{"value":"/     S: Service<T> + Send + 'static,","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tower-0.4.13\\src\\util\\boxed\\layer.rs","byte_start":65193,"byte_end":65232,"line_start":27,"line_end":27,"column_start":1,"column_end":40}},{"value":"/     S::Future: Send + 'static,","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tower-0.4.13\\src\\util\\boxed\\layer.rs","byte_start":65233,"byte_end":65267,"line_start":28,"line_end":28,"column_start":1,"column_end":35}},{"value":"/     S::Error: Into<BoxError> + 'static,","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tower-0.4.13\\src\\util\\boxed\\layer.rs","byte_start":65268,"byte_end":65311,"line_start":29,"line_end":29,"column_start":1,"column_end":44}},{"value":"/ {","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tower-0.4.13\\src\\util\\boxed\\layer.rs","byte_start":65312,"byte_end":65317,"line_start":30,"line_end":30,"column_start":1,"column_end":6}},{"value":"/     let builder = ServiceBuilder::new()","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tower-0.4.13\\src\\util\\boxed\\layer.rs","byte_start":65318,"byte_end":65361,"line_start":31,"line_end":31,"column_start":1,"column_end":44}},{"value":"/         .concurrency_limit(100);","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tower-0.4.13\\src\\util\\boxed\\layer.rs","byte_start":65362,"byte_end":65398,"line_start":32,"line_end":32,"column_start":1,"column_end":37}},{"value":"/","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tower-0.4.13\\src\\util\\boxed\\layer.rs","byte_start":65399,"byte_end":65402,"line_start":33,"line_end":33,"column_start":1,"column_end":4}},{"value":"/     if std::env::var(\"SET_TIMEOUT\").is_ok() {","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tower-0.4.13\\src\\util\\boxed\\layer.rs","byte_start":65403,"byte_end":65452,"line_start":34,"line_end":34,"column_start":1,"column_end":50}},{"value":"/         let layer = builder","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tower-0.4.13\\src\\util\\boxed\\layer.rs","byte_start":65453,"byte_end":65484,"line_start":35,"line_end":35,"column_start":1,"column_end":32}},{"value":"/             .timeout(Duration::from_secs(30))","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tower-0.4.13\\src\\util\\boxed\\layer.rs","byte_start":65485,"byte_end":65534,"line_start":36,"line_end":36,"column_start":1,"column_end":50}},{"value":"/             .into_inner();","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tower-0.4.13\\src\\util\\boxed\\layer.rs","byte_start":65535,"byte_end":65565,"line_start":37,"line_end":37,"column_start":1,"column_end":31}},{"value":"/","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tower-0.4.13\\src\\util\\boxed\\layer.rs","byte_start":65566,"byte_end":65569,"line_start":38,"line_end":38,"column_start":1,"column_end":4}},{"value":"/         BoxLayer::new(layer)","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tower-0.4.13\\src\\util\\boxed\\layer.rs","byte_start":65570,"byte_end":65602,"line_start":39,"line_end":39,"column_start":1,"column_end":33}},{"value":"/     } else {","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tower-0.4.13\\src\\util\\boxed\\layer.rs","byte_start":65603,"byte_end":65619,"line_start":40,"line_end":40,"column_start":1,"column_end":17}},{"value":"/         let layer = builder","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tower-0.4.13\\src\\util\\boxed\\layer.rs","byte_start":65620,"byte_end":65651,"line_start":41,"line_end":41,"column_start":1,"column_end":32}},{"value":"/             .map_err(Into::into)","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tower-0.4.13\\src\\util\\boxed\\layer.rs","byte_start":65652,"byte_end":65688,"line_start":42,"line_end":42,"column_start":1,"column_end":37}},{"value":"/             .into_inner();","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tower-0.4.13\\src\\util\\boxed\\layer.rs","byte_start":65689,"byte_end":65719,"line_start":43,"line_end":43,"column_start":1,"column_end":31}},{"value":"/","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tower-0.4.13\\src\\util\\boxed\\layer.rs","byte_start":65720,"byte_end":65723,"line_start":44,"line_end":44,"column_start":1,"column_end":4}},{"value":"/         BoxLayer::new(layer)","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tower-0.4.13\\src\\util\\boxed\\layer.rs","byte_start":65724,"byte_end":65756,"line_start":45,"line_end":45,"column_start":1,"column_end":33}},{"value":"/     }","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tower-0.4.13\\src\\util\\boxed\\layer.rs","byte_start":65757,"byte_end":65766,"line_start":46,"line_end":46,"column_start":1,"column_end":10}},{"value":"/ }","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tower-0.4.13\\src\\util\\boxed\\layer.rs","byte_start":65767,"byte_end":65772,"line_start":47,"line_end":47,"column_start":1,"column_end":6}},{"value":"/ ```","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tower-0.4.13\\src\\util\\boxed\\layer.rs","byte_start":65773,"byte_end":65780,"line_start":48,"line_end":48,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tower-0.4.13\\src\\util\\boxed\\layer.rs","byte_start":65781,"byte_end":65784,"line_start":49,"line_end":49,"column_start":1,"column_end":4}},{"value":"/ [`Layer`]: tower_layer::Layer","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tower-0.4.13\\src\\util\\boxed\\layer.rs","byte_start":65785,"byte_end":65818,"line_start":50,"line_end":50,"column_start":1,"column_end":34}},{"value":"/ [`Service`]: tower_service::Service","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tower-0.4.13\\src\\util\\boxed\\layer.rs","byte_start":65819,"byte_end":65858,"line_start":51,"line_end":51,"column_start":1,"column_end":40}},{"value":"/ [`BoxService`]: super::BoxService","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tower-0.4.13\\src\\util\\boxed\\layer.rs","byte_start":65859,"byte_end":65896,"line_start":52,"line_end":52,"column_start":1,"column_end":38}},{"value":"/ [`Timeout`]: crate::timeout","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tower-0.4.13\\src\\util\\boxed\\layer.rs","byte_start":65897,"byte_end":65928,"line_start":53,"line_end":53,"column_start":1,"column_end":32}}]},{"kind":"Method","id":{"krate":0,"index":298},"span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tower-0.4.13\\src\\util\\boxed\\layer.rs","byte_start":66141,"byte_end":66144,"line_start":60,"line_end":60,"column_start":12,"column_end":15},"name":"new","qualname":"<BoxLayer<In, T, U, E>>::new","value":"pub fn new<L>(L) -> Self where L: Layer<In> + Send + Sync + 'static,\nL::Service: Service<T, Response = U, Error = U> + Send + 'static,\n<L::Service as Service<T>>::Future: Send + 'static","parent":null,"children":[],"decl_id":null,"docs":" Create a new [`BoxLayer`].\n","sig":null,"attributes":[{"value":"/ Create a new [`BoxLayer`].","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tower-0.4.13\\src\\util\\boxed\\layer.rs","byte_start":66099,"byte_end":66129,"line_start":59,"line_end":59,"column_start":5,"column_end":35}}]},{"kind":"Struct","id":{"krate":0,"index":351},"span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tower-0.4.13\\src\\util\\boxed\\sync.rs","byte_start":67721,"byte_end":67731,"line_start":22,"line_end":22,"column_start":12,"column_end":22},"name":"BoxService","qualname":"::util::boxed::sync::BoxService","value":"BoxService {  }","parent":null,"children":[{"krate":0,"index":355}],"decl_id":null,"docs":" A boxed `Service + Send` trait object.","sig":null,"attributes":[{"value":"/ A boxed `Service + Send` trait object.","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tower-0.4.13\\src\\util\\boxed\\sync.rs","byte_start":67281,"byte_end":67323,"line_start":12,"line_end":12,"column_start":1,"column_end":43}},{"value":"/","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tower-0.4.13\\src\\util\\boxed\\sync.rs","byte_start":67324,"byte_end":67327,"line_start":13,"line_end":13,"column_start":1,"column_end":4}},{"value":"/ [`BoxService`] turns a service into a trait object, allowing the response","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tower-0.4.13\\src\\util\\boxed\\sync.rs","byte_start":67328,"byte_end":67405,"line_start":14,"line_end":14,"column_start":1,"column_end":78}},{"value":"/ future type to be dynamic. This type requires both the service and the","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tower-0.4.13\\src\\util\\boxed\\sync.rs","byte_start":67406,"byte_end":67480,"line_start":15,"line_end":15,"column_start":1,"column_end":75}},{"value":"/ response future to be [`Send`].","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tower-0.4.13\\src\\util\\boxed\\sync.rs","byte_start":67481,"byte_end":67516,"line_start":16,"line_end":16,"column_start":1,"column_end":36}},{"value":"/","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tower-0.4.13\\src\\util\\boxed\\sync.rs","byte_start":67517,"byte_end":67520,"line_start":17,"line_end":17,"column_start":1,"column_end":4}},{"value":"/ If you need a boxed [`Service`] that implements [`Clone`] consider using","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tower-0.4.13\\src\\util\\boxed\\sync.rs","byte_start":67521,"byte_end":67597,"line_start":18,"line_end":18,"column_start":1,"column_end":77}},{"value":"/ [`BoxCloneService`](crate::util::BoxCloneService).","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tower-0.4.13\\src\\util\\boxed\\sync.rs","byte_start":67598,"byte_end":67652,"line_start":19,"line_end":19,"column_start":1,"column_end":55}},{"value":"/","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tower-0.4.13\\src\\util\\boxed\\sync.rs","byte_start":67653,"byte_end":67656,"line_start":20,"line_end":20,"column_start":1,"column_end":4}},{"value":"/ See module level documentation for more details.","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tower-0.4.13\\src\\util\\boxed\\sync.rs","byte_start":67657,"byte_end":67709,"line_start":21,"line_end":21,"column_start":1,"column_end":53}}]},{"kind":"Method","id":{"krate":0,"index":363},"span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tower-0.4.13\\src\\util\\boxed\\sync.rs","byte_start":68132,"byte_end":68135,"line_start":34,"line_end":34,"column_start":12,"column_end":15},"name":"new","qualname":"<BoxService<T, U, E>>::new","value":"pub fn new<S>(S) -> Self where S: Service<T, Response = U, Error = U> + Send +\n'static, S::Future: Send + 'static","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"allow(missing_docs)","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tower-0.4.13\\src\\util\\boxed\\sync.rs","byte_start":68098,"byte_end":68120,"line_start":33,"line_end":33,"column_start":5,"column_end":27}}]},{"kind":"Method","id":{"krate":0,"index":366},"span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tower-0.4.13\\src\\util\\boxed\\sync.rs","byte_start":68536,"byte_end":68541,"line_start":47,"line_end":47,"column_start":12,"column_end":17},"name":"layer","qualname":"<BoxService<T, U, E>>::layer","value":"pub fn layer<S>() -> LayerFn<fn(: S) -> Self> where S: Service<T, Response =\nU, Error = U> + Send + 'static, S::Future: Send + 'static","parent":null,"children":[],"decl_id":null,"docs":" Returns a [`Layer`] for wrapping a [`Service`] in a [`BoxService`]\n middleware.","sig":null,"attributes":[{"value":"/ Returns a [`Layer`] for wrapping a [`Service`] in a [`BoxService`]","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tower-0.4.13\\src\\util\\boxed\\sync.rs","byte_start":68394,"byte_end":68464,"line_start":43,"line_end":43,"column_start":5,"column_end":75}},{"value":"/ middleware.","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tower-0.4.13\\src\\util\\boxed\\sync.rs","byte_start":68469,"byte_end":68484,"line_start":44,"line_end":44,"column_start":5,"column_end":20}},{"value":"/","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tower-0.4.13\\src\\util\\boxed\\sync.rs","byte_start":68489,"byte_end":68492,"line_start":45,"line_end":45,"column_start":5,"column_end":8}},{"value":"/ [`Layer`]: crate::Layer","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tower-0.4.13\\src\\util\\boxed\\sync.rs","byte_start":68497,"byte_end":68524,"line_start":46,"line_end":46,"column_start":5,"column_end":32}}]},{"kind":"Struct","id":{"krate":0,"index":410},"span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tower-0.4.13\\src\\util\\boxed\\unsync.rs","byte_start":69446,"byte_end":69462,"line_start":12,"line_end":12,"column_start":12,"column_end":28},"name":"UnsyncBoxService","qualname":"::util::boxed::unsync::UnsyncBoxService","value":"UnsyncBoxService {  }","parent":null,"children":[{"krate":0,"index":414}],"decl_id":null,"docs":" A boxed [`Service`] trait object.\n","sig":null,"attributes":[{"value":"/ A boxed [`Service`] trait object.","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tower-0.4.13\\src\\util\\boxed\\unsync.rs","byte_start":69397,"byte_end":69434,"line_start":11,"line_end":11,"column_start":1,"column_end":38}}]},{"kind":"Method","id":{"krate":0,"index":422},"span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tower-0.4.13\\src\\util\\boxed\\unsync.rs","byte_start":69932,"byte_end":69935,"line_start":29,"line_end":29,"column_start":12,"column_end":15},"name":"new","qualname":"<UnsyncBoxService<T, U, E>>::new","value":"pub fn new<S>(S) -> Self where S: Service<T, Response = U, Error = U> +\n'static, S::Future: 'static","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"allow(missing_docs)","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tower-0.4.13\\src\\util\\boxed\\unsync.rs","byte_start":69898,"byte_end":69920,"line_start":28,"line_end":28,"column_start":5,"column_end":27}}]},{"kind":"Method","id":{"krate":0,"index":424},"span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tower-0.4.13\\src\\util\\boxed\\unsync.rs","byte_start":70299,"byte_end":70304,"line_start":41,"line_end":41,"column_start":12,"column_end":17},"name":"layer","qualname":"<UnsyncBoxService<T, U, E>>::layer","value":"pub fn layer<S>() -> LayerFn<fn(: S) -> Self> where S: Service<T, Response =\nU, Error = U> + 'static, S::Future: 'static","parent":null,"children":[],"decl_id":null,"docs":" Returns a [`Layer`] for wrapping a [`Service`] in an [`UnsyncBoxService`] middleware.","sig":null,"attributes":[{"value":"/ Returns a [`Layer`] for wrapping a [`Service`] in an [`UnsyncBoxService`] middleware.","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tower-0.4.13\\src\\util\\boxed\\unsync.rs","byte_start":70158,"byte_end":70247,"line_start":38,"line_end":38,"column_start":5,"column_end":94}},{"value":"/","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tower-0.4.13\\src\\util\\boxed\\unsync.rs","byte_start":70252,"byte_end":70255,"line_start":39,"line_end":39,"column_start":5,"column_end":8}},{"value":"/ [`Layer`]: crate::Layer","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tower-0.4.13\\src\\util\\boxed\\unsync.rs","byte_start":70260,"byte_end":70287,"line_start":40,"line_end":40,"column_start":5,"column_end":32}}]},{"kind":"Struct","id":{"krate":0,"index":486},"span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tower-0.4.13\\src\\util\\boxed_clone.rs","byte_start":73204,"byte_end":73219,"line_start":58,"line_end":58,"column_start":12,"column_end":27},"name":"BoxCloneService","qualname":"::util::boxed_clone::BoxCloneService","value":"","parent":null,"children":[],"decl_id":null,"docs":" A [`Clone`] + [`Send`] boxed [`Service`].","sig":null,"attributes":[{"value":"/ A [`Clone`] + [`Send`] boxed [`Service`].","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tower-0.4.13\\src\\util\\boxed_clone.rs","byte_start":71695,"byte_end":71740,"line_start":10,"line_end":10,"column_start":1,"column_end":46}},{"value":"/","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tower-0.4.13\\src\\util\\boxed_clone.rs","byte_start":71741,"byte_end":71744,"line_start":11,"line_end":11,"column_start":1,"column_end":4}},{"value":"/ [`BoxCloneService`] turns a service into a trait object, allowing the","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tower-0.4.13\\src\\util\\boxed_clone.rs","byte_start":71745,"byte_end":71818,"line_start":12,"line_end":12,"column_start":1,"column_end":74}},{"value":"/ response future type to be dynamic, and allowing the service to be cloned.","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tower-0.4.13\\src\\util\\boxed_clone.rs","byte_start":71819,"byte_end":71897,"line_start":13,"line_end":13,"column_start":1,"column_end":79}},{"value":"/","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tower-0.4.13\\src\\util\\boxed_clone.rs","byte_start":71898,"byte_end":71901,"line_start":14,"line_end":14,"column_start":1,"column_end":4}},{"value":"/ This is similar to [`BoxService`](super::BoxService) except the resulting","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tower-0.4.13\\src\\util\\boxed_clone.rs","byte_start":71902,"byte_end":71979,"line_start":15,"line_end":15,"column_start":1,"column_end":78}},{"value":"/ service implements [`Clone`].","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tower-0.4.13\\src\\util\\boxed_clone.rs","byte_start":71980,"byte_end":72013,"line_start":16,"line_end":16,"column_start":1,"column_end":34}},{"value":"/","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tower-0.4.13\\src\\util\\boxed_clone.rs","byte_start":72014,"byte_end":72017,"line_start":17,"line_end":17,"column_start":1,"column_end":4}},{"value":"/ # Example","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tower-0.4.13\\src\\util\\boxed_clone.rs","byte_start":72018,"byte_end":72031,"line_start":18,"line_end":18,"column_start":1,"column_end":14}},{"value":"/","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tower-0.4.13\\src\\util\\boxed_clone.rs","byte_start":72032,"byte_end":72035,"line_start":19,"line_end":19,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tower-0.4.13\\src\\util\\boxed_clone.rs","byte_start":72036,"byte_end":72043,"line_start":20,"line_end":20,"column_start":1,"column_end":8}},{"value":"/ use tower::{Service, ServiceBuilder, BoxError, util::BoxCloneService};","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tower-0.4.13\\src\\util\\boxed_clone.rs","byte_start":72044,"byte_end":72118,"line_start":21,"line_end":21,"column_start":1,"column_end":75}},{"value":"/ use std::time::Duration;","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tower-0.4.13\\src\\util\\boxed_clone.rs","byte_start":72119,"byte_end":72147,"line_start":22,"line_end":22,"column_start":1,"column_end":29}},{"value":"/ #","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tower-0.4.13\\src\\util\\boxed_clone.rs","byte_start":72148,"byte_end":72153,"line_start":23,"line_end":23,"column_start":1,"column_end":6}},{"value":"/ # struct Request;","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tower-0.4.13\\src\\util\\boxed_clone.rs","byte_start":72154,"byte_end":72175,"line_start":24,"line_end":24,"column_start":1,"column_end":22}},{"value":"/ # struct Response;","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tower-0.4.13\\src\\util\\boxed_clone.rs","byte_start":72176,"byte_end":72198,"line_start":25,"line_end":25,"column_start":1,"column_end":23}},{"value":"/ # impl Response {","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tower-0.4.13\\src\\util\\boxed_clone.rs","byte_start":72199,"byte_end":72220,"line_start":26,"line_end":26,"column_start":1,"column_end":22}},{"value":"/ #     fn new() -> Self { Self }","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tower-0.4.13\\src\\util\\boxed_clone.rs","byte_start":72221,"byte_end":72256,"line_start":27,"line_end":27,"column_start":1,"column_end":36}},{"value":"/ # }","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tower-0.4.13\\src\\util\\boxed_clone.rs","byte_start":72257,"byte_end":72264,"line_start":28,"line_end":28,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tower-0.4.13\\src\\util\\boxed_clone.rs","byte_start":72265,"byte_end":72268,"line_start":29,"line_end":29,"column_start":1,"column_end":4}},{"value":"/ // This service has a complex type that is hard to name","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tower-0.4.13\\src\\util\\boxed_clone.rs","byte_start":72269,"byte_end":72328,"line_start":30,"line_end":30,"column_start":1,"column_end":60}},{"value":"/ let service = ServiceBuilder::new()","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tower-0.4.13\\src\\util\\boxed_clone.rs","byte_start":72329,"byte_end":72368,"line_start":31,"line_end":31,"column_start":1,"column_end":40}},{"value":"/     .map_request(|req| {","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tower-0.4.13\\src\\util\\boxed_clone.rs","byte_start":72369,"byte_end":72397,"line_start":32,"line_end":32,"column_start":1,"column_end":29}},{"value":"/         println!(\"received request\");","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tower-0.4.13\\src\\util\\boxed_clone.rs","byte_start":72398,"byte_end":72439,"line_start":33,"line_end":33,"column_start":1,"column_end":42}},{"value":"/         req","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tower-0.4.13\\src\\util\\boxed_clone.rs","byte_start":72440,"byte_end":72455,"line_start":34,"line_end":34,"column_start":1,"column_end":16}},{"value":"/     })","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tower-0.4.13\\src\\util\\boxed_clone.rs","byte_start":72456,"byte_end":72466,"line_start":35,"line_end":35,"column_start":1,"column_end":11}},{"value":"/     .map_response(|res| {","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tower-0.4.13\\src\\util\\boxed_clone.rs","byte_start":72467,"byte_end":72496,"line_start":36,"line_end":36,"column_start":1,"column_end":30}},{"value":"/         println!(\"response produced\");","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tower-0.4.13\\src\\util\\boxed_clone.rs","byte_start":72497,"byte_end":72539,"line_start":37,"line_end":37,"column_start":1,"column_end":43}},{"value":"/         res","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tower-0.4.13\\src\\util\\boxed_clone.rs","byte_start":72540,"byte_end":72555,"line_start":38,"line_end":38,"column_start":1,"column_end":16}},{"value":"/     })","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tower-0.4.13\\src\\util\\boxed_clone.rs","byte_start":72556,"byte_end":72566,"line_start":39,"line_end":39,"column_start":1,"column_end":11}},{"value":"/     .load_shed()","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tower-0.4.13\\src\\util\\boxed_clone.rs","byte_start":72567,"byte_end":72587,"line_start":40,"line_end":40,"column_start":1,"column_end":21}},{"value":"/     .concurrency_limit(64)","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tower-0.4.13\\src\\util\\boxed_clone.rs","byte_start":72588,"byte_end":72618,"line_start":41,"line_end":41,"column_start":1,"column_end":31}},{"value":"/     .timeout(Duration::from_secs(10))","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tower-0.4.13\\src\\util\\boxed_clone.rs","byte_start":72619,"byte_end":72660,"line_start":42,"line_end":42,"column_start":1,"column_end":42}},{"value":"/     .service_fn(|req: Request| async {","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tower-0.4.13\\src\\util\\boxed_clone.rs","byte_start":72661,"byte_end":72703,"line_start":43,"line_end":43,"column_start":1,"column_end":43}},{"value":"/         Ok::<_, BoxError>(Response::new())","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tower-0.4.13\\src\\util\\boxed_clone.rs","byte_start":72704,"byte_end":72750,"line_start":44,"line_end":44,"column_start":1,"column_end":47}},{"value":"/     });","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tower-0.4.13\\src\\util\\boxed_clone.rs","byte_start":72751,"byte_end":72762,"line_start":45,"line_end":45,"column_start":1,"column_end":12}},{"value":"/ # let service = assert_service(service);","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tower-0.4.13\\src\\util\\boxed_clone.rs","byte_start":72763,"byte_end":72807,"line_start":46,"line_end":46,"column_start":1,"column_end":45}},{"value":"/","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tower-0.4.13\\src\\util\\boxed_clone.rs","byte_start":72808,"byte_end":72811,"line_start":47,"line_end":47,"column_start":1,"column_end":4}},{"value":"/ // `BoxCloneService` will erase the type so it's nameable","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tower-0.4.13\\src\\util\\boxed_clone.rs","byte_start":72812,"byte_end":72873,"line_start":48,"line_end":48,"column_start":1,"column_end":62}},{"value":"/ let service: BoxCloneService<Request, Response, BoxError> = BoxCloneService::new(service);","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tower-0.4.13\\src\\util\\boxed_clone.rs","byte_start":72874,"byte_end":72968,"line_start":49,"line_end":49,"column_start":1,"column_end":95}},{"value":"/ # let service = assert_service(service);","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tower-0.4.13\\src\\util\\boxed_clone.rs","byte_start":72969,"byte_end":73013,"line_start":50,"line_end":50,"column_start":1,"column_end":45}},{"value":"/","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tower-0.4.13\\src\\util\\boxed_clone.rs","byte_start":73014,"byte_end":73017,"line_start":51,"line_end":51,"column_start":1,"column_end":4}},{"value":"/ // And we can still clone the service","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tower-0.4.13\\src\\util\\boxed_clone.rs","byte_start":73018,"byte_end":73059,"line_start":52,"line_end":52,"column_start":1,"column_end":42}},{"value":"/ let cloned_service = service.clone();","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tower-0.4.13\\src\\util\\boxed_clone.rs","byte_start":73060,"byte_end":73101,"line_start":53,"line_end":53,"column_start":1,"column_end":42}},{"value":"/ #","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tower-0.4.13\\src\\util\\boxed_clone.rs","byte_start":73102,"byte_end":73107,"line_start":54,"line_end":54,"column_start":1,"column_end":6}},{"value":"/ # fn assert_service<S, R>(svc: S) -> S","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tower-0.4.13\\src\\util\\boxed_clone.rs","byte_start":73108,"byte_end":73150,"line_start":55,"line_end":55,"column_start":1,"column_end":43}},{"value":"/ # where S: Service<R> { svc }","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tower-0.4.13\\src\\util\\boxed_clone.rs","byte_start":73151,"byte_end":73184,"line_start":56,"line_end":56,"column_start":1,"column_end":34}},{"value":"/ ```","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tower-0.4.13\\src\\util\\boxed_clone.rs","byte_start":73185,"byte_end":73192,"line_start":57,"line_end":57,"column_start":1,"column_end":8}}]},{"kind":"Method","id":{"krate":0,"index":496},"span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tower-0.4.13\\src\\util\\boxed_clone.rs","byte_start":73458,"byte_end":73461,"line_start":67,"line_end":67,"column_start":12,"column_end":15},"name":"new","qualname":"<BoxCloneService<T, U, E>>::new","value":"pub fn new<S>(S) -> Self where S: Service<T, Response = U, Error = U> +\nClone + Send + 'static, S::Future: Send + 'static","parent":null,"children":[],"decl_id":null,"docs":" Create a new `BoxCloneService`.\n","sig":null,"attributes":[{"value":"/ Create a new `BoxCloneService`.","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tower-0.4.13\\src\\util\\boxed_clone.rs","byte_start":73411,"byte_end":73446,"line_start":66,"line_end":66,"column_start":5,"column_end":40}}]},{"kind":"Method","id":{"krate":0,"index":499},"span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tower-0.4.13\\src\\util\\boxed_clone.rs","byte_start":73866,"byte_end":73871,"line_start":80,"line_end":80,"column_start":12,"column_end":17},"name":"layer","qualname":"<BoxCloneService<T, U, E>>::layer","value":"pub fn layer<S>() -> LayerFn<fn(: S) -> Self> where S: Service<T, Response =\nU, Error = U> + Clone + Send + 'static, S::Future: Send + 'static","parent":null,"children":[],"decl_id":null,"docs":" Returns a [`Layer`] for wrapping a [`Service`] in a [`BoxCloneService`]\n middleware.","sig":null,"attributes":[{"value":"/ Returns a [`Layer`] for wrapping a [`Service`] in a [`BoxCloneService`]","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tower-0.4.13\\src\\util\\boxed_clone.rs","byte_start":73719,"byte_end":73794,"line_start":76,"line_end":76,"column_start":5,"column_end":80}},{"value":"/ middleware.","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tower-0.4.13\\src\\util\\boxed_clone.rs","byte_start":73799,"byte_end":73814,"line_start":77,"line_end":77,"column_start":5,"column_end":20}},{"value":"/","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tower-0.4.13\\src\\util\\boxed_clone.rs","byte_start":73819,"byte_end":73822,"line_start":78,"line_end":78,"column_start":5,"column_end":8}},{"value":"/ [`Layer`]: crate::Layer","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tower-0.4.13\\src\\util\\boxed_clone.rs","byte_start":73827,"byte_end":73854,"line_start":79,"line_end":79,"column_start":5,"column_end":32}}]},{"kind":"Struct","id":{"krate":0,"index":1795},"span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tower-0.4.13\\src\\util\\call_all\\ordered.rs","byte_start":82457,"byte_end":82464,"line_start":88,"line_end":88,"column_start":16,"column_end":23},"name":"CallAll","qualname":"::util::call_all::ordered::CallAll","value":"CallAll {  }","parent":null,"children":[{"krate":0,"index":1798}],"decl_id":null,"docs":" This is a [`Stream`] of responses resulting from calling the wrapped [`Service`] for each\n request received on the wrapped [`Stream`].","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":608},"span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tower-0.4.13\\src\\util\\call_all\\ordered.rs","byte_start":83084,"byte_end":83087,"line_start":110,"line_end":110,"column_start":12,"column_end":15},"name":"new","qualname":"<CallAll<Svc, S>>::new","value":"pub fn new(Svc, S) -> CallAll<Svc, S>","parent":null,"children":[],"decl_id":null,"docs":" Create new [`CallAll`] combinator.","sig":null,"attributes":[{"value":"/ Create new [`CallAll`] combinator.","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tower-0.4.13\\src\\util\\call_all\\ordered.rs","byte_start":82754,"byte_end":82792,"line_start":104,"line_end":104,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tower-0.4.13\\src\\util\\call_all\\ordered.rs","byte_start":82797,"byte_end":82800,"line_start":105,"line_end":105,"column_start":5,"column_end":8}},{"value":"/ Each request yielded by `stream` is passed to `svc`, and the resulting responses are","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tower-0.4.13\\src\\util\\call_all\\ordered.rs","byte_start":82805,"byte_end":82893,"line_start":106,"line_end":106,"column_start":5,"column_end":93}},{"value":"/ yielded in the same order by the implementation of [`Stream`] for [`CallAll`].","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tower-0.4.13\\src\\util\\call_all\\ordered.rs","byte_start":82898,"byte_end":82980,"line_start":107,"line_end":107,"column_start":5,"column_end":87}},{"value":"/","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tower-0.4.13\\src\\util\\call_all\\ordered.rs","byte_start":82985,"byte_end":82988,"line_start":108,"line_end":108,"column_start":5,"column_end":8}},{"value":"/ [`Stream`]: https://docs.rs/futures/latest/futures/stream/trait.Stream.html","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tower-0.4.13\\src\\util\\call_all\\ordered.rs","byte_start":82993,"byte_end":83072,"line_start":109,"line_end":109,"column_start":5,"column_end":84}}]},{"kind":"Method","id":{"krate":0,"index":609},"span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tower-0.4.13\\src\\util\\call_all\\ordered.rs","byte_start":83459,"byte_end":83469,"line_start":123,"line_end":123,"column_start":12,"column_end":22},"name":"into_inner","qualname":"<CallAll<Svc, S>>::into_inner","value":"pub fn into_inner(Self) -> Svc","parent":null,"children":[],"decl_id":null,"docs":" Extract the wrapped [`Service`].","sig":null,"attributes":[{"value":"/ Extract the wrapped [`Service`].","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tower-0.4.13\\src\\util\\call_all\\ordered.rs","byte_start":83254,"byte_end":83290,"line_start":116,"line_end":116,"column_start":5,"column_end":41}},{"value":"/","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tower-0.4.13\\src\\util\\call_all\\ordered.rs","byte_start":83295,"byte_end":83298,"line_start":117,"line_end":117,"column_start":5,"column_end":8}},{"value":"/ # Panics","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tower-0.4.13\\src\\util\\call_all\\ordered.rs","byte_start":83303,"byte_end":83315,"line_start":118,"line_end":118,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tower-0.4.13\\src\\util\\call_all\\ordered.rs","byte_start":83320,"byte_end":83323,"line_start":119,"line_end":119,"column_start":5,"column_end":8}},{"value":"/ Panics if [`take_service`] was already called.","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tower-0.4.13\\src\\util\\call_all\\ordered.rs","byte_start":83328,"byte_end":83378,"line_start":120,"line_end":120,"column_start":5,"column_end":55}},{"value":"/","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tower-0.4.13\\src\\util\\call_all\\ordered.rs","byte_start":83383,"byte_end":83386,"line_start":121,"line_end":121,"column_start":5,"column_end":8}},{"value":"/ [`take_service`]: crate::util::CallAll::take_service","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tower-0.4.13\\src\\util\\call_all\\ordered.rs","byte_start":83391,"byte_end":83447,"line_start":122,"line_end":122,"column_start":5,"column_end":61}}]},{"kind":"Method","id":{"krate":0,"index":610},"span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tower-0.4.13\\src\\util\\call_all\\ordered.rs","byte_start":83825,"byte_end":83837,"line_start":136,"line_end":136,"column_start":12,"column_end":24},"name":"take_service","qualname":"<CallAll<Svc, S>>::take_service","value":"pub fn take_service(Pin<&mut Self>) -> Svc","parent":null,"children":[],"decl_id":null,"docs":" Extract the wrapped [`Service`].","sig":null,"attributes":[{"value":"/ Extract the wrapped [`Service`].","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tower-0.4.13\\src\\util\\call_all\\ordered.rs","byte_start":83528,"byte_end":83564,"line_start":127,"line_end":127,"column_start":5,"column_end":41}},{"value":"/","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tower-0.4.13\\src\\util\\call_all\\ordered.rs","byte_start":83569,"byte_end":83572,"line_start":128,"line_end":128,"column_start":5,"column_end":8}},{"value":"/ This [`CallAll`] can no longer be used after this function has been called.","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tower-0.4.13\\src\\util\\call_all\\ordered.rs","byte_start":83577,"byte_end":83656,"line_start":129,"line_end":129,"column_start":5,"column_end":84}},{"value":"/","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tower-0.4.13\\src\\util\\call_all\\ordered.rs","byte_start":83661,"byte_end":83664,"line_start":130,"line_end":130,"column_start":5,"column_end":8}},{"value":"/ # Panics","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tower-0.4.13\\src\\util\\call_all\\ordered.rs","byte_start":83669,"byte_end":83681,"line_start":131,"line_end":131,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tower-0.4.13\\src\\util\\call_all\\ordered.rs","byte_start":83686,"byte_end":83689,"line_start":132,"line_end":132,"column_start":5,"column_end":8}},{"value":"/ Panics if [`take_service`] was already called.","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tower-0.4.13\\src\\util\\call_all\\ordered.rs","byte_start":83694,"byte_end":83744,"line_start":133,"line_end":133,"column_start":5,"column_end":55}},{"value":"/","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tower-0.4.13\\src\\util\\call_all\\ordered.rs","byte_start":83749,"byte_end":83752,"line_start":134,"line_end":134,"column_start":5,"column_end":8}},{"value":"/ [`take_service`]: crate::util::CallAll::take_service","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tower-0.4.13\\src\\util\\call_all\\ordered.rs","byte_start":83757,"byte_end":83813,"line_start":135,"line_end":135,"column_start":5,"column_end":61}}]},{"kind":"Method","id":{"krate":0,"index":611},"span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tower-0.4.13\\src\\util\\call_all\\ordered.rs","byte_start":84206,"byte_end":84215,"line_start":149,"line_end":149,"column_start":12,"column_end":21},"name":"unordered","qualname":"<CallAll<Svc, S>>::unordered","value":"pub fn unordered(Self) -> super::CallAllUnordered<Svc, S>","parent":null,"children":[],"decl_id":null,"docs":" Return responses as they are ready, regardless of the initial order.","sig":null,"attributes":[{"value":"/ Return responses as they are ready, regardless of the initial order.","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tower-0.4.13\\src\\util\\call_all\\ordered.rs","byte_start":83924,"byte_end":83996,"line_start":140,"line_end":140,"column_start":5,"column_end":77}},{"value":"/","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tower-0.4.13\\src\\util\\call_all\\ordered.rs","byte_start":84001,"byte_end":84004,"line_start":141,"line_end":141,"column_start":5,"column_end":8}},{"value":"/ This function must be called before the stream is polled.","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tower-0.4.13\\src\\util\\call_all\\ordered.rs","byte_start":84009,"byte_end":84070,"line_start":142,"line_end":142,"column_start":5,"column_end":66}},{"value":"/","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tower-0.4.13\\src\\util\\call_all\\ordered.rs","byte_start":84075,"byte_end":84078,"line_start":143,"line_end":143,"column_start":5,"column_end":8}},{"value":"/ # Panics","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tower-0.4.13\\src\\util\\call_all\\ordered.rs","byte_start":84083,"byte_end":84095,"line_start":144,"line_end":144,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tower-0.4.13\\src\\util\\call_all\\ordered.rs","byte_start":84100,"byte_end":84103,"line_start":145,"line_end":145,"column_start":5,"column_end":8}},{"value":"/ Panics if [`poll`] was called.","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tower-0.4.13\\src\\util\\call_all\\ordered.rs","byte_start":84108,"byte_end":84142,"line_start":146,"line_end":146,"column_start":5,"column_end":39}},{"value":"/","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tower-0.4.13\\src\\util\\call_all\\ordered.rs","byte_start":84147,"byte_end":84150,"line_start":147,"line_end":147,"column_start":5,"column_end":8}},{"value":"/ [`poll`]: std::future::Future::poll","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tower-0.4.13\\src\\util\\call_all\\ordered.rs","byte_start":84155,"byte_end":84194,"line_start":148,"line_end":148,"column_start":5,"column_end":44}}]},{"kind":"Struct","id":{"krate":0,"index":1840},"span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tower-0.4.13\\src\\util\\call_all\\unordered.rs","byte_start":85764,"byte_end":85780,"line_start":25,"line_end":25,"column_start":16,"column_end":32},"name":"CallAllUnordered","qualname":"::util::call_all::unordered::CallAllUnordered","value":"CallAllUnordered {  }","parent":null,"children":[{"krate":0,"index":1843}],"decl_id":null,"docs":" A stream of responses received from the inner service in received order.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":655},"span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tower-0.4.13\\src\\util\\call_all\\unordered.rs","byte_start":86232,"byte_end":86235,"line_start":44,"line_end":44,"column_start":12,"column_end":15},"name":"new","qualname":"<CallAllUnordered<Svc, S>>::new","value":"pub fn new(Svc, S) -> CallAllUnordered<Svc, S>","parent":null,"children":[],"decl_id":null,"docs":" Create new [`CallAllUnordered`] combinator.","sig":null,"attributes":[{"value":"/ Create new [`CallAllUnordered`] combinator.","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tower-0.4.13\\src\\util\\call_all\\unordered.rs","byte_start":86081,"byte_end":86128,"line_start":41,"line_end":41,"column_start":5,"column_end":52}},{"value":"/","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tower-0.4.13\\src\\util\\call_all\\unordered.rs","byte_start":86133,"byte_end":86136,"line_start":42,"line_end":42,"column_start":5,"column_end":8}},{"value":"/ [`Stream`]: https://docs.rs/futures/latest/futures/stream/trait.Stream.html","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tower-0.4.13\\src\\util\\call_all\\unordered.rs","byte_start":86141,"byte_end":86220,"line_start":43,"line_end":43,"column_start":5,"column_end":84}}]},{"kind":"Method","id":{"krate":0,"index":656},"span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tower-0.4.13\\src\\util\\call_all\\unordered.rs","byte_start":86636,"byte_end":86646,"line_start":57,"line_end":57,"column_start":12,"column_end":22},"name":"into_inner","qualname":"<CallAllUnordered<Svc, S>>::into_inner","value":"pub fn into_inner(Self) -> Svc","parent":null,"children":[],"decl_id":null,"docs":" Extract the wrapped [`Service`].","sig":null,"attributes":[{"value":"/ Extract the wrapped [`Service`].","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tower-0.4.13\\src\\util\\call_all\\unordered.rs","byte_start":86422,"byte_end":86458,"line_start":50,"line_end":50,"column_start":5,"column_end":41}},{"value":"/","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tower-0.4.13\\src\\util\\call_all\\unordered.rs","byte_start":86463,"byte_end":86466,"line_start":51,"line_end":51,"column_start":5,"column_end":8}},{"value":"/ # Panics","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tower-0.4.13\\src\\util\\call_all\\unordered.rs","byte_start":86471,"byte_end":86483,"line_start":52,"line_end":52,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tower-0.4.13\\src\\util\\call_all\\unordered.rs","byte_start":86488,"byte_end":86491,"line_start":53,"line_end":53,"column_start":5,"column_end":8}},{"value":"/ Panics if [`take_service`] was already called.","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tower-0.4.13\\src\\util\\call_all\\unordered.rs","byte_start":86496,"byte_end":86546,"line_start":54,"line_end":54,"column_start":5,"column_end":55}},{"value":"/","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tower-0.4.13\\src\\util\\call_all\\unordered.rs","byte_start":86551,"byte_end":86554,"line_start":55,"line_end":55,"column_start":5,"column_end":8}},{"value":"/ [`take_service`]: crate::util::CallAllUnordered::take_service","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tower-0.4.13\\src\\util\\call_all\\unordered.rs","byte_start":86559,"byte_end":86624,"line_start":56,"line_end":56,"column_start":5,"column_end":70}}]},{"kind":"Method","id":{"krate":0,"index":657},"span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tower-0.4.13\\src\\util\\call_all\\unordered.rs","byte_start":87018,"byte_end":87030,"line_start":70,"line_end":70,"column_start":12,"column_end":24},"name":"take_service","qualname":"<CallAllUnordered<Svc, S>>::take_service","value":"pub fn take_service(Pin<&mut Self>) -> Svc","parent":null,"children":[],"decl_id":null,"docs":" Extract the wrapped `Service`.","sig":null,"attributes":[{"value":"/ Extract the wrapped `Service`.","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tower-0.4.13\\src\\util\\call_all\\unordered.rs","byte_start":86705,"byte_end":86739,"line_start":61,"line_end":61,"column_start":5,"column_end":39}},{"value":"/","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tower-0.4.13\\src\\util\\call_all\\unordered.rs","byte_start":86744,"byte_end":86747,"line_start":62,"line_end":62,"column_start":5,"column_end":8}},{"value":"/ This [`CallAllUnordered`] can no longer be used after this function has been called.","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tower-0.4.13\\src\\util\\call_all\\unordered.rs","byte_start":86752,"byte_end":86840,"line_start":63,"line_end":63,"column_start":5,"column_end":93}},{"value":"/","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tower-0.4.13\\src\\util\\call_all\\unordered.rs","byte_start":86845,"byte_end":86848,"line_start":64,"line_end":64,"column_start":5,"column_end":8}},{"value":"/ # Panics","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tower-0.4.13\\src\\util\\call_all\\unordered.rs","byte_start":86853,"byte_end":86865,"line_start":65,"line_end":65,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tower-0.4.13\\src\\util\\call_all\\unordered.rs","byte_start":86870,"byte_end":86873,"line_start":66,"line_end":66,"column_start":5,"column_end":8}},{"value":"/ Panics if [`take_service`] was already called.","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tower-0.4.13\\src\\util\\call_all\\unordered.rs","byte_start":86878,"byte_end":86928,"line_start":67,"line_end":67,"column_start":5,"column_end":55}},{"value":"/","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tower-0.4.13\\src\\util\\call_all\\unordered.rs","byte_start":86933,"byte_end":86936,"line_start":68,"line_end":68,"column_start":5,"column_end":8}},{"value":"/ [`take_service`]: crate::util::CallAllUnordered::take_service","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tower-0.4.13\\src\\util\\call_all\\unordered.rs","byte_start":86941,"byte_end":87006,"line_start":69,"line_end":69,"column_start":5,"column_end":70}}]},{"kind":"TupleVariant","id":{"krate":0,"index":1938},"span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tower-0.4.13\\src\\util\\either.rs","byte_start":88494,"byte_end":88495,"line_start":24,"line_end":24,"column_start":5,"column_end":6},"name":"A","qualname":"::util::either::Either::A","value":"Either::A(A)","parent":{"krate":0,"index":1935},"children":[],"decl_id":null,"docs":" One type of backing [`Service`].\n","sig":null,"attributes":[{"value":"/ One type of backing [`Service`].","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tower-0.4.13\\src\\util\\either.rs","byte_start":88453,"byte_end":88489,"line_start":23,"line_end":23,"column_start":5,"column_end":41}}]},{"kind":"TupleVariant","id":{"krate":0,"index":1940},"span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tower-0.4.13\\src\\util\\either.rs","byte_start":88558,"byte_end":88559,"line_start":26,"line_end":26,"column_start":5,"column_end":6},"name":"B","qualname":"::util::either::Either::B","value":"Either::B(B)","parent":{"krate":0,"index":1935},"children":[],"decl_id":null,"docs":" The other type of backing [`Service`].\n","sig":null,"attributes":[{"value":"/ The other type of backing [`Service`].","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tower-0.4.13\\src\\util\\either.rs","byte_start":88511,"byte_end":88553,"line_start":25,"line_end":25,"column_start":5,"column_end":47}}]},{"kind":"Enum","id":{"krate":0,"index":1935},"span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tower-0.4.13\\src\\util\\either.rs","byte_start":88434,"byte_end":88440,"line_start":22,"line_end":22,"column_start":10,"column_end":16},"name":"Either","qualname":"::util::either::Either","value":"pub enum Either<A, B> { A(A), B(B), }","parent":null,"children":[{"krate":0,"index":1938},{"krate":0,"index":1940}],"decl_id":null,"docs":" Combine two different service types into a single type.","sig":null,"attributes":[{"value":"pin(__private(project = EitherProj))","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tower-0.4.13\\src\\util\\either.rs","byte_start":88364,"byte_end":88400,"line_start":20,"line_end":20,"column_start":1,"column_end":37}}]},{"kind":"Struct","id":{"krate":0,"index":1910},"span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tower-0.4.13\\src\\util\\either.rs","byte_start":88434,"byte_end":88440,"line_start":22,"line_end":22,"column_start":10,"column_end":16},"name":"__Either","qualname":"::util::either::_::__Either","value":"__Either {  }","parent":null,"children":[{"krate":0,"index":1914},{"krate":0,"index":1915},{"krate":0,"index":1916}],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"allow(missing_debug_implementations)","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tower-0.4.13\\src\\util\\either.rs","byte_start":88364,"byte_end":88400,"line_start":20,"line_end":20,"column_start":1,"column_end":37}}]},{"kind":"Function","id":{"krate":0,"index":748},"span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tower-0.4.13\\src\\util\\future_service.rs","byte_start":92059,"byte_end":92073,"line_start":48,"line_end":48,"column_start":8,"column_end":22},"name":"future_service","qualname":"::util::future_service::future_service","value":"pub fn future_service<F, S, R, E>(F) -> FutureService<F, S> where\nF: Future<Output = Result<S, E>> + Unpin, S: Service<R, Error = E>","parent":null,"children":[],"decl_id":null,"docs":" Returns a new [`FutureService`] for the given future.","sig":null,"attributes":[{"value":"/ Returns a new [`FutureService`] for the given future.","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tower-0.4.13\\src\\util\\future_service.rs","byte_start":90505,"byte_end":90562,"line_start":9,"line_end":9,"column_start":1,"column_end":58}},{"value":"/","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tower-0.4.13\\src\\util\\future_service.rs","byte_start":90563,"byte_end":90566,"line_start":10,"line_end":10,"column_start":1,"column_end":4}},{"value":"/ A [`FutureService`] allows you to treat a future that resolves to a service as a service. This","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tower-0.4.13\\src\\util\\future_service.rs","byte_start":90567,"byte_end":90665,"line_start":11,"line_end":11,"column_start":1,"column_end":99}},{"value":"/ can be useful for services that are created asynchronously.","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tower-0.4.13\\src\\util\\future_service.rs","byte_start":90666,"byte_end":90729,"line_start":12,"line_end":12,"column_start":1,"column_end":64}},{"value":"/","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tower-0.4.13\\src\\util\\future_service.rs","byte_start":90730,"byte_end":90733,"line_start":13,"line_end":13,"column_start":1,"column_end":4}},{"value":"/ # Example","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tower-0.4.13\\src\\util\\future_service.rs","byte_start":90734,"byte_end":90747,"line_start":14,"line_end":14,"column_start":1,"column_end":14}},{"value":"/ ```","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tower-0.4.13\\src\\util\\future_service.rs","byte_start":90748,"byte_end":90755,"line_start":15,"line_end":15,"column_start":1,"column_end":8}},{"value":"/ use tower::{service_fn, Service, ServiceExt};","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tower-0.4.13\\src\\util\\future_service.rs","byte_start":90756,"byte_end":90805,"line_start":16,"line_end":16,"column_start":1,"column_end":50}},{"value":"/ use tower::util::future_service;","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tower-0.4.13\\src\\util\\future_service.rs","byte_start":90806,"byte_end":90842,"line_start":17,"line_end":17,"column_start":1,"column_end":37}},{"value":"/ use std::convert::Infallible;","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tower-0.4.13\\src\\util\\future_service.rs","byte_start":90843,"byte_end":90876,"line_start":18,"line_end":18,"column_start":1,"column_end":34}},{"value":"/","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tower-0.4.13\\src\\util\\future_service.rs","byte_start":90877,"byte_end":90880,"line_start":19,"line_end":19,"column_start":1,"column_end":4}},{"value":"/ # fn main() {","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tower-0.4.13\\src\\util\\future_service.rs","byte_start":90881,"byte_end":90898,"line_start":20,"line_end":20,"column_start":1,"column_end":18}},{"value":"/ # async {","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tower-0.4.13\\src\\util\\future_service.rs","byte_start":90899,"byte_end":90912,"line_start":21,"line_end":21,"column_start":1,"column_end":14}},{"value":"/ // A future which outputs a type implementing `Service`.","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tower-0.4.13\\src\\util\\future_service.rs","byte_start":90913,"byte_end":90973,"line_start":22,"line_end":22,"column_start":1,"column_end":61}},{"value":"/ let future_of_a_service = async {","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tower-0.4.13\\src\\util\\future_service.rs","byte_start":90974,"byte_end":91011,"line_start":23,"line_end":23,"column_start":1,"column_end":38}},{"value":"/     let svc = service_fn(|_req: ()| async { Ok::<_, Infallible>(\"ok\") });","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tower-0.4.13\\src\\util\\future_service.rs","byte_start":91012,"byte_end":91089,"line_start":24,"line_end":24,"column_start":1,"column_end":78}},{"value":"/     Ok::<_, Infallible>(svc)","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tower-0.4.13\\src\\util\\future_service.rs","byte_start":91090,"byte_end":91122,"line_start":25,"line_end":25,"column_start":1,"column_end":33}},{"value":"/ };","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tower-0.4.13\\src\\util\\future_service.rs","byte_start":91123,"byte_end":91129,"line_start":26,"line_end":26,"column_start":1,"column_end":7}},{"value":"/","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tower-0.4.13\\src\\util\\future_service.rs","byte_start":91130,"byte_end":91133,"line_start":27,"line_end":27,"column_start":1,"column_end":4}},{"value":"/ // Wrap the future with a `FutureService`, allowing it to be used","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tower-0.4.13\\src\\util\\future_service.rs","byte_start":91134,"byte_end":91203,"line_start":28,"line_end":28,"column_start":1,"column_end":70}},{"value":"/ // as a service without awaiting the future's completion:","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tower-0.4.13\\src\\util\\future_service.rs","byte_start":91204,"byte_end":91265,"line_start":29,"line_end":29,"column_start":1,"column_end":62}},{"value":"/ let mut svc = future_service(Box::pin(future_of_a_service));","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tower-0.4.13\\src\\util\\future_service.rs","byte_start":91266,"byte_end":91330,"line_start":30,"line_end":30,"column_start":1,"column_end":65}},{"value":"/","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tower-0.4.13\\src\\util\\future_service.rs","byte_start":91331,"byte_end":91334,"line_start":31,"line_end":31,"column_start":1,"column_end":4}},{"value":"/ // Now, when we wait for the service to become ready, it will","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tower-0.4.13\\src\\util\\future_service.rs","byte_start":91335,"byte_end":91400,"line_start":32,"line_end":32,"column_start":1,"column_end":66}},{"value":"/ // drive the future to completion internally.","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tower-0.4.13\\src\\util\\future_service.rs","byte_start":91401,"byte_end":91450,"line_start":33,"line_end":33,"column_start":1,"column_end":50}},{"value":"/ let svc = svc.ready().await.unwrap();","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tower-0.4.13\\src\\util\\future_service.rs","byte_start":91451,"byte_end":91492,"line_start":34,"line_end":34,"column_start":1,"column_end":42}},{"value":"/ let res = svc.call(()).await.unwrap();","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tower-0.4.13\\src\\util\\future_service.rs","byte_start":91493,"byte_end":91535,"line_start":35,"line_end":35,"column_start":1,"column_end":43}},{"value":"/ # };","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tower-0.4.13\\src\\util\\future_service.rs","byte_start":91536,"byte_end":91544,"line_start":36,"line_end":36,"column_start":1,"column_end":9}},{"value":"/ # }","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tower-0.4.13\\src\\util\\future_service.rs","byte_start":91545,"byte_end":91552,"line_start":37,"line_end":37,"column_start":1,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tower-0.4.13\\src\\util\\future_service.rs","byte_start":91553,"byte_end":91560,"line_start":38,"line_end":38,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tower-0.4.13\\src\\util\\future_service.rs","byte_start":91561,"byte_end":91564,"line_start":39,"line_end":39,"column_start":1,"column_end":4}},{"value":"/ # Regarding the [`Unpin`] bound","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tower-0.4.13\\src\\util\\future_service.rs","byte_start":91565,"byte_end":91600,"line_start":40,"line_end":40,"column_start":1,"column_end":36}},{"value":"/","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tower-0.4.13\\src\\util\\future_service.rs","byte_start":91601,"byte_end":91604,"line_start":41,"line_end":41,"column_start":1,"column_end":4}},{"value":"/ The [`Unpin`] bound on `F` is necessary because the future will be polled in","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tower-0.4.13\\src\\util\\future_service.rs","byte_start":91605,"byte_end":91685,"line_start":42,"line_end":42,"column_start":1,"column_end":81}},{"value":"/ [`Service::poll_ready`] which doesn't have a pinned receiver (it takes `&mut self` and not `self:","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tower-0.4.13\\src\\util\\future_service.rs","byte_start":91686,"byte_end":91787,"line_start":43,"line_end":43,"column_start":1,"column_end":102}},{"value":"/ Pin<&mut Self>`). So we cannot put the future into a `Pin` without requiring `Unpin`.","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tower-0.4.13\\src\\util\\future_service.rs","byte_start":91788,"byte_end":91877,"line_start":44,"line_end":44,"column_start":1,"column_end":90}},{"value":"/","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tower-0.4.13\\src\\util\\future_service.rs","byte_start":91878,"byte_end":91881,"line_start":45,"line_end":45,"column_start":1,"column_end":4}},{"value":"/ This will most likely come up if you're calling `future_service` with an async block. In that","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tower-0.4.13\\src\\util\\future_service.rs","byte_start":91882,"byte_end":91979,"line_start":46,"line_end":46,"column_start":1,"column_end":98}},{"value":"/ case you can use `Box::pin(async { ... })` as shown in the example.","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tower-0.4.13\\src\\util\\future_service.rs","byte_start":91980,"byte_end":92051,"line_start":47,"line_end":47,"column_start":1,"column_end":72}}]},{"kind":"Struct","id":{"krate":0,"index":1944},"span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tower-0.4.13\\src\\util\\future_service.rs","byte_start":92400,"byte_end":92413,"line_start":60,"line_end":60,"column_start":12,"column_end":25},"name":"FutureService","qualname":"::util::future_service::FutureService","value":"FutureService {  }","parent":null,"children":[{"krate":0,"index":1947}],"decl_id":null,"docs":" A type that implements [`Service`] for a [`Future`] that produces a [`Service`].","sig":null,"attributes":[{"value":"/ A type that implements [`Service`] for a [`Future`] that produces a [`Service`].","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tower-0.4.13\\src\\util\\future_service.rs","byte_start":92238,"byte_end":92322,"line_start":56,"line_end":56,"column_start":1,"column_end":85}},{"value":"/","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tower-0.4.13\\src\\util\\future_service.rs","byte_start":92323,"byte_end":92326,"line_start":57,"line_end":57,"column_start":1,"column_end":4}},{"value":"/ See [`future_service`] for more details.","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tower-0.4.13\\src\\util\\future_service.rs","byte_start":92327,"byte_end":92371,"line_start":58,"line_end":58,"column_start":1,"column_end":45}}]},{"kind":"Method","id":{"krate":0,"index":756},"span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tower-0.4.13\\src\\util\\future_service.rs","byte_start":94199,"byte_end":94202,"line_start":104,"line_end":104,"column_start":12,"column_end":15},"name":"new","qualname":"<FutureService<F, S>>::new","value":"pub fn new(F) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Returns a new [`FutureService`] for the given future.","sig":null,"attributes":[{"value":"/ Returns a new [`FutureService`] for the given future.","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tower-0.4.13\\src\\util\\future_service.rs","byte_start":92486,"byte_end":92543,"line_start":65,"line_end":65,"column_start":5,"column_end":62}},{"value":"/","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tower-0.4.13\\src\\util\\future_service.rs","byte_start":92548,"byte_end":92551,"line_start":66,"line_end":66,"column_start":5,"column_end":8}},{"value":"/ A [`FutureService`] allows you to treat a future that resolves to a service as a service. This","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tower-0.4.13\\src\\util\\future_service.rs","byte_start":92556,"byte_end":92654,"line_start":67,"line_end":67,"column_start":5,"column_end":103}},{"value":"/ can be useful for services that are created asynchronously.","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tower-0.4.13\\src\\util\\future_service.rs","byte_start":92659,"byte_end":92722,"line_start":68,"line_end":68,"column_start":5,"column_end":68}},{"value":"/","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tower-0.4.13\\src\\util\\future_service.rs","byte_start":92727,"byte_end":92730,"line_start":69,"line_end":69,"column_start":5,"column_end":8}},{"value":"/ # Example","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tower-0.4.13\\src\\util\\future_service.rs","byte_start":92735,"byte_end":92748,"line_start":70,"line_end":70,"column_start":5,"column_end":18}},{"value":"/ ```","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tower-0.4.13\\src\\util\\future_service.rs","byte_start":92753,"byte_end":92760,"line_start":71,"line_end":71,"column_start":5,"column_end":12}},{"value":"/ use tower::{service_fn, Service, ServiceExt};","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tower-0.4.13\\src\\util\\future_service.rs","byte_start":92765,"byte_end":92814,"line_start":72,"line_end":72,"column_start":5,"column_end":54}},{"value":"/ use tower::util::FutureService;","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tower-0.4.13\\src\\util\\future_service.rs","byte_start":92819,"byte_end":92854,"line_start":73,"line_end":73,"column_start":5,"column_end":40}},{"value":"/ use std::convert::Infallible;","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tower-0.4.13\\src\\util\\future_service.rs","byte_start":92859,"byte_end":92892,"line_start":74,"line_end":74,"column_start":5,"column_end":38}},{"value":"/","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tower-0.4.13\\src\\util\\future_service.rs","byte_start":92897,"byte_end":92900,"line_start":75,"line_end":75,"column_start":5,"column_end":8}},{"value":"/ # fn main() {","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tower-0.4.13\\src\\util\\future_service.rs","byte_start":92905,"byte_end":92922,"line_start":76,"line_end":76,"column_start":5,"column_end":22}},{"value":"/ # async {","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tower-0.4.13\\src\\util\\future_service.rs","byte_start":92927,"byte_end":92940,"line_start":77,"line_end":77,"column_start":5,"column_end":18}},{"value":"/ // A future which outputs a type implementing `Service`.","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tower-0.4.13\\src\\util\\future_service.rs","byte_start":92945,"byte_end":93005,"line_start":78,"line_end":78,"column_start":5,"column_end":65}},{"value":"/ let future_of_a_service = async {","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tower-0.4.13\\src\\util\\future_service.rs","byte_start":93010,"byte_end":93047,"line_start":79,"line_end":79,"column_start":5,"column_end":42}},{"value":"/     let svc = service_fn(|_req: ()| async { Ok::<_, Infallible>(\"ok\") });","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tower-0.4.13\\src\\util\\future_service.rs","byte_start":93052,"byte_end":93129,"line_start":80,"line_end":80,"column_start":5,"column_end":82}},{"value":"/     Ok::<_, Infallible>(svc)","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tower-0.4.13\\src\\util\\future_service.rs","byte_start":93134,"byte_end":93166,"line_start":81,"line_end":81,"column_start":5,"column_end":37}},{"value":"/ };","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tower-0.4.13\\src\\util\\future_service.rs","byte_start":93171,"byte_end":93177,"line_start":82,"line_end":82,"column_start":5,"column_end":11}},{"value":"/","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tower-0.4.13\\src\\util\\future_service.rs","byte_start":93182,"byte_end":93185,"line_start":83,"line_end":83,"column_start":5,"column_end":8}},{"value":"/ // Wrap the future with a `FutureService`, allowing it to be used","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tower-0.4.13\\src\\util\\future_service.rs","byte_start":93190,"byte_end":93259,"line_start":84,"line_end":84,"column_start":5,"column_end":74}},{"value":"/ // as a service without awaiting the future's completion:","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tower-0.4.13\\src\\util\\future_service.rs","byte_start":93264,"byte_end":93325,"line_start":85,"line_end":85,"column_start":5,"column_end":66}},{"value":"/ let mut svc = FutureService::new(Box::pin(future_of_a_service));","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tower-0.4.13\\src\\util\\future_service.rs","byte_start":93330,"byte_end":93398,"line_start":86,"line_end":86,"column_start":5,"column_end":73}},{"value":"/","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tower-0.4.13\\src\\util\\future_service.rs","byte_start":93403,"byte_end":93406,"line_start":87,"line_end":87,"column_start":5,"column_end":8}},{"value":"/ // Now, when we wait for the service to become ready, it will","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tower-0.4.13\\src\\util\\future_service.rs","byte_start":93411,"byte_end":93476,"line_start":88,"line_end":88,"column_start":5,"column_end":70}},{"value":"/ // drive the future to completion internally.","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tower-0.4.13\\src\\util\\future_service.rs","byte_start":93481,"byte_end":93530,"line_start":89,"line_end":89,"column_start":5,"column_end":54}},{"value":"/ let svc = svc.ready().await.unwrap();","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tower-0.4.13\\src\\util\\future_service.rs","byte_start":93535,"byte_end":93576,"line_start":90,"line_end":90,"column_start":5,"column_end":46}},{"value":"/ let res = svc.call(()).await.unwrap();","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tower-0.4.13\\src\\util\\future_service.rs","byte_start":93581,"byte_end":93623,"line_start":91,"line_end":91,"column_start":5,"column_end":47}},{"value":"/ # };","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tower-0.4.13\\src\\util\\future_service.rs","byte_start":93628,"byte_end":93636,"line_start":92,"line_end":92,"column_start":5,"column_end":13}},{"value":"/ # }","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tower-0.4.13\\src\\util\\future_service.rs","byte_start":93641,"byte_end":93648,"line_start":93,"line_end":93,"column_start":5,"column_end":12}},{"value":"/ ```","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tower-0.4.13\\src\\util\\future_service.rs","byte_start":93653,"byte_end":93660,"line_start":94,"line_end":94,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tower-0.4.13\\src\\util\\future_service.rs","byte_start":93665,"byte_end":93668,"line_start":95,"line_end":95,"column_start":5,"column_end":8}},{"value":"/ # Regarding the [`Unpin`] bound","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tower-0.4.13\\src\\util\\future_service.rs","byte_start":93673,"byte_end":93708,"line_start":96,"line_end":96,"column_start":5,"column_end":40}},{"value":"/","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tower-0.4.13\\src\\util\\future_service.rs","byte_start":93713,"byte_end":93716,"line_start":97,"line_end":97,"column_start":5,"column_end":8}},{"value":"/ The [`Unpin`] bound on `F` is necessary because the future will be polled in","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tower-0.4.13\\src\\util\\future_service.rs","byte_start":93721,"byte_end":93801,"line_start":98,"line_end":98,"column_start":5,"column_end":85}},{"value":"/ [`Service::poll_ready`] which doesn't have a pinned receiver (it takes `&mut self` and not `self:","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tower-0.4.13\\src\\util\\future_service.rs","byte_start":93806,"byte_end":93907,"line_start":99,"line_end":99,"column_start":5,"column_end":106}},{"value":"/ Pin<&mut Self>`). So we cannot put the future into a `Pin` without requiring `Unpin`.","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tower-0.4.13\\src\\util\\future_service.rs","byte_start":93912,"byte_end":94001,"line_start":100,"line_end":100,"column_start":5,"column_end":94}},{"value":"/","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tower-0.4.13\\src\\util\\future_service.rs","byte_start":94006,"byte_end":94009,"line_start":101,"line_end":101,"column_start":5,"column_end":8}},{"value":"/ This will most likely come up if you're calling `future_service` with an async block. In that","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tower-0.4.13\\src\\util\\future_service.rs","byte_start":94014,"byte_end":94111,"line_start":102,"line_end":102,"column_start":5,"column_end":102}},{"value":"/ case you can use `Box::pin(async { ... })` as shown in the example.","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tower-0.4.13\\src\\util\\future_service.rs","byte_start":94116,"byte_end":94187,"line_start":103,"line_end":103,"column_start":5,"column_end":76}}]},{"kind":"Struct","id":{"krate":0,"index":1965},"span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tower-0.4.13\\src\\util\\map_err.rs","byte_start":97510,"byte_end":97516,"line_start":11,"line_end":11,"column_start":12,"column_end":18},"name":"MapErr","qualname":"::util::map_err::MapErr","value":"MapErr {  }","parent":null,"children":[{"krate":0,"index":1968},{"krate":0,"index":1969}],"decl_id":null,"docs":" Service returned by the [`map_err`] combinator.","sig":null,"attributes":[{"value":"/ Service returned by the [`map_err`] combinator.","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tower-0.4.13\\src\\util\\map_err.rs","byte_start":97376,"byte_end":97427,"line_start":7,"line_end":7,"column_start":1,"column_end":52}},{"value":"/","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tower-0.4.13\\src\\util\\map_err.rs","byte_start":97428,"byte_end":97431,"line_start":8,"line_end":8,"column_start":1,"column_end":4}},{"value":"/ [`map_err`]: crate::util::ServiceExt::map_err","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tower-0.4.13\\src\\util\\map_err.rs","byte_start":97432,"byte_end":97481,"line_start":9,"line_end":9,"column_start":1,"column_end":50}}]},{"kind":"Struct","id":{"krate":0,"index":1974},"span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tower-0.4.13\\src\\util\\map_err.rs","byte_start":97983,"byte_end":97994,"line_start":32,"line_end":32,"column_start":12,"column_end":23},"name":"MapErrLayer","qualname":"::util::map_err::MapErrLayer","value":"MapErrLayer {  }","parent":null,"children":[{"krate":0,"index":1976}],"decl_id":null,"docs":" A [`Layer`] that produces [`MapErr`] services.","sig":null,"attributes":[{"value":"/ A [`Layer`] that produces [`MapErr`] services.","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tower-0.4.13\\src\\util\\map_err.rs","byte_start":97859,"byte_end":97909,"line_start":28,"line_end":28,"column_start":1,"column_end":51}},{"value":"/","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tower-0.4.13\\src\\util\\map_err.rs","byte_start":97910,"byte_end":97913,"line_start":29,"line_end":29,"column_start":1,"column_end":4}},{"value":"/ [`Layer`]: tower_layer::Layer","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tower-0.4.13\\src\\util\\map_err.rs","byte_start":97914,"byte_end":97947,"line_start":30,"line_end":30,"column_start":1,"column_end":34}}]},{"kind":"Struct","id":{"krate":0,"index":1996},"span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tower-0.4.13\\src\\util\\map_err.rs","byte_start":98141,"byte_end":98153,"line_start":40,"line_end":40,"column_start":14,"column_end":26},"name":"MapErrFuture","qualname":"::util::map_err::MapErrFuture","value":"MapErrFuture {  }","parent":null,"children":[{"krate":0,"index":1999}],"decl_id":null,"docs":" Response future from [`MapErr`] services.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":806},"span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tower-0.4.13\\src\\util\\map_err.rs","byte_start":98266,"byte_end":98269,"line_start":45,"line_end":45,"column_start":12,"column_end":15},"name":"new","qualname":"<MapErr<S, F>>::new","value":"pub fn new(S, F) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Creates a new [`MapErr`] service.\n","sig":null,"attributes":[{"value":"/ Creates a new [`MapErr`] service.","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tower-0.4.13\\src\\util\\map_err.rs","byte_start":98217,"byte_end":98254,"line_start":44,"line_end":44,"column_start":5,"column_end":42}}]},{"kind":"Method","id":{"krate":0,"index":807},"span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tower-0.4.13\\src\\util\\map_err.rs","byte_start":98542,"byte_end":98547,"line_start":54,"line_end":54,"column_start":12,"column_end":17},"name":"layer","qualname":"<MapErr<S, F>>::layer","value":"pub fn layer(F) -> MapErrLayer<F>","parent":null,"children":[],"decl_id":null,"docs":" Returns a new [`Layer`] that produces [`MapErr`] services.","sig":null,"attributes":[{"value":"/ Returns a new [`Layer`] that produces [`MapErr`] services.","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tower-0.4.13\\src\\util\\map_err.rs","byte_start":98335,"byte_end":98397,"line_start":49,"line_end":49,"column_start":5,"column_end":67}},{"value":"/","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tower-0.4.13\\src\\util\\map_err.rs","byte_start":98402,"byte_end":98405,"line_start":50,"line_end":50,"column_start":5,"column_end":8}},{"value":"/ This is a convenience function that simply calls [`MapErrLayer::new`].","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tower-0.4.13\\src\\util\\map_err.rs","byte_start":98410,"byte_end":98484,"line_start":51,"line_end":51,"column_start":5,"column_end":79}},{"value":"/","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tower-0.4.13\\src\\util\\map_err.rs","byte_start":98489,"byte_end":98492,"line_start":52,"line_end":52,"column_start":5,"column_end":8}},{"value":"/ [`Layer`]: tower_layer::Layer","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tower-0.4.13\\src\\util\\map_err.rs","byte_start":98497,"byte_end":98530,"line_start":53,"line_end":53,"column_start":5,"column_end":38}}]},{"kind":"Method","id":{"krate":0,"index":820},"span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tower-0.4.13\\src\\util\\map_err.rs","byte_start":99247,"byte_end":99250,"line_start":81,"line_end":81,"column_start":12,"column_end":15},"name":"new","qualname":"<MapErrLayer<F>>::new","value":"pub fn new(F) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Creates a new [`MapErrLayer`].\n","sig":null,"attributes":[{"value":"/ Creates a new [`MapErrLayer`].","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tower-0.4.13\\src\\util\\map_err.rs","byte_start":99201,"byte_end":99235,"line_start":80,"line_end":80,"column_start":5,"column_end":39}}]},{"kind":"Struct","id":{"krate":0,"index":2037},"span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tower-0.4.13\\src\\util\\map_request.rs","byte_start":99775,"byte_end":99785,"line_start":10,"line_end":10,"column_start":12,"column_end":22},"name":"MapRequest","qualname":"::util::map_request::MapRequest","value":"MapRequest {  }","parent":null,"children":[{"krate":0,"index":2040},{"krate":0,"index":2041}],"decl_id":null,"docs":" Service returned by the [`MapRequest`] combinator.","sig":null,"attributes":[{"value":"/ Service returned by the [`MapRequest`] combinator.","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tower-0.4.13\\src\\util\\map_request.rs","byte_start":99631,"byte_end":99685,"line_start":6,"line_end":6,"column_start":1,"column_end":55}},{"value":"/","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tower-0.4.13\\src\\util\\map_request.rs","byte_start":99686,"byte_end":99689,"line_start":7,"line_end":7,"column_start":1,"column_end":4}},{"value":"/ [`MapRequest`]: crate::util::ServiceExt::map_request","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tower-0.4.13\\src\\util\\map_request.rs","byte_start":99690,"byte_end":99746,"line_start":8,"line_end":8,"column_start":1,"column_end":57}}]},{"kind":"Method","id":{"krate":0,"index":850},"span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tower-0.4.13\\src\\util\\map_request.rs","byte_start":100223,"byte_end":100226,"line_start":29,"line_end":29,"column_start":12,"column_end":15},"name":"new","qualname":"<MapRequest<S, F>>::new","value":"pub fn new(S, F) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Creates a new [`MapRequest`] service.\n","sig":null,"attributes":[{"value":"/ Creates a new [`MapRequest`] service.","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tower-0.4.13\\src\\util\\map_request.rs","byte_start":100170,"byte_end":100211,"line_start":28,"line_end":28,"column_start":5,"column_end":46}}]},{"kind":"Method","id":{"krate":0,"index":851},"span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tower-0.4.13\\src\\util\\map_request.rs","byte_start":100511,"byte_end":100516,"line_start":38,"line_end":38,"column_start":12,"column_end":17},"name":"layer","qualname":"<MapRequest<S, F>>::layer","value":"pub fn layer(F) -> MapRequestLayer<F>","parent":null,"children":[],"decl_id":null,"docs":" Returns a new [`Layer`] that produces [`MapRequest`] services.","sig":null,"attributes":[{"value":"/ Returns a new [`Layer`] that produces [`MapRequest`] services.","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tower-0.4.13\\src\\util\\map_request.rs","byte_start":100296,"byte_end":100362,"line_start":33,"line_end":33,"column_start":5,"column_end":71}},{"value":"/","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tower-0.4.13\\src\\util\\map_request.rs","byte_start":100367,"byte_end":100370,"line_start":34,"line_end":34,"column_start":5,"column_end":8}},{"value":"/ This is a convenience function that simply calls [`MapRequestLayer::new`].","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tower-0.4.13\\src\\util\\map_request.rs","byte_start":100375,"byte_end":100453,"line_start":35,"line_end":35,"column_start":5,"column_end":83}},{"value":"/","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tower-0.4.13\\src\\util\\map_request.rs","byte_start":100458,"byte_end":100461,"line_start":36,"line_end":36,"column_start":5,"column_end":8}},{"value":"/ [`Layer`]: tower_layer::Layer","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tower-0.4.13\\src\\util\\map_request.rs","byte_start":100466,"byte_end":100499,"line_start":37,"line_end":37,"column_start":5,"column_end":38}}]},{"kind":"Struct","id":{"krate":0,"index":2046},"span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tower-0.4.13\\src\\util\\map_request.rs","byte_start":101163,"byte_end":101178,"line_start":67,"line_end":67,"column_start":12,"column_end":27},"name":"MapRequestLayer","qualname":"::util::map_request::MapRequestLayer","value":"MapRequestLayer {  }","parent":null,"children":[{"krate":0,"index":2048}],"decl_id":null,"docs":" A [`Layer`] that produces [`MapRequest`] services.","sig":null,"attributes":[{"value":"/ A [`Layer`] that produces [`MapRequest`] services.","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tower-0.4.13\\src\\util\\map_request.rs","byte_start":101035,"byte_end":101089,"line_start":63,"line_end":63,"column_start":1,"column_end":55}},{"value":"/","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tower-0.4.13\\src\\util\\map_request.rs","byte_start":101090,"byte_end":101093,"line_start":64,"line_end":64,"column_start":1,"column_end":4}},{"value":"/ [`Layer`]: tower_layer::Layer","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tower-0.4.13\\src\\util\\map_request.rs","byte_start":101094,"byte_end":101127,"line_start":65,"line_end":65,"column_start":1,"column_end":34}}]},{"kind":"Method","id":{"krate":0,"index":864},"span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tower-0.4.13\\src\\util\\map_request.rs","byte_start":101280,"byte_end":101283,"line_start":73,"line_end":73,"column_start":12,"column_end":15},"name":"new","qualname":"<MapRequestLayer<F>>::new","value":"pub fn new(F) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Creates a new [`MapRequestLayer`].\n","sig":null,"attributes":[{"value":"/ Creates a new [`MapRequestLayer`].","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tower-0.4.13\\src\\util\\map_request.rs","byte_start":101230,"byte_end":101268,"line_start":72,"line_end":72,"column_start":5,"column_end":43}}]},{"kind":"Struct","id":{"krate":0,"index":2055},"span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tower-0.4.13\\src\\util\\map_response.rs","byte_start":101878,"byte_end":101889,"line_start":11,"line_end":11,"column_start":12,"column_end":23},"name":"MapResponse","qualname":"::util::map_response::MapResponse","value":"MapResponse {  }","parent":null,"children":[{"krate":0,"index":2058},{"krate":0,"index":2059}],"decl_id":null,"docs":" Service returned by the [`map_response`] combinator.","sig":null,"attributes":[{"value":"/ Service returned by the [`map_response`] combinator.","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tower-0.4.13\\src\\util\\map_response.rs","byte_start":101729,"byte_end":101785,"line_start":7,"line_end":7,"column_start":1,"column_end":57}},{"value":"/","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tower-0.4.13\\src\\util\\map_response.rs","byte_start":101786,"byte_end":101789,"line_start":8,"line_end":8,"column_start":1,"column_end":4}},{"value":"/ [`map_response`]: crate::util::ServiceExt::map_response","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tower-0.4.13\\src\\util\\map_response.rs","byte_start":101790,"byte_end":101849,"line_start":9,"line_end":9,"column_start":1,"column_end":60}}]},{"kind":"Struct","id":{"krate":0,"index":2064},"span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tower-0.4.13\\src\\util\\map_response.rs","byte_start":102372,"byte_end":102388,"line_start":32,"line_end":32,"column_start":12,"column_end":28},"name":"MapResponseLayer","qualname":"::util::map_response::MapResponseLayer","value":"MapResponseLayer {  }","parent":null,"children":[{"krate":0,"index":2066}],"decl_id":null,"docs":" A [`Layer`] that produces a [`MapResponse`] service.","sig":null,"attributes":[{"value":"/ A [`Layer`] that produces a [`MapResponse`] service.","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tower-0.4.13\\src\\util\\map_response.rs","byte_start":102242,"byte_end":102298,"line_start":28,"line_end":28,"column_start":1,"column_end":57}},{"value":"/","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tower-0.4.13\\src\\util\\map_response.rs","byte_start":102299,"byte_end":102302,"line_start":29,"line_end":29,"column_start":1,"column_end":4}},{"value":"/ [`Layer`]: tower_layer::Layer","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tower-0.4.13\\src\\util\\map_response.rs","byte_start":102303,"byte_end":102336,"line_start":30,"line_end":30,"column_start":1,"column_end":34}}]},{"kind":"Struct","id":{"krate":0,"index":2086},"span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tower-0.4.13\\src\\util\\map_response.rs","byte_start":102550,"byte_end":102567,"line_start":40,"line_end":40,"column_start":14,"column_end":31},"name":"MapResponseFuture","qualname":"::util::map_response::MapResponseFuture","value":"MapResponseFuture {  }","parent":null,"children":[{"krate":0,"index":2089}],"decl_id":null,"docs":" Response future from [`MapResponse`] services.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":901},"span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tower-0.4.13\\src\\util\\map_response.rs","byte_start":102679,"byte_end":102682,"line_start":45,"line_end":45,"column_start":12,"column_end":15},"name":"new","qualname":"<MapResponse<S, F>>::new","value":"pub fn new(S, F) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Creates a new `MapResponse` service.\n","sig":null,"attributes":[{"value":"/ Creates a new `MapResponse` service.","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tower-0.4.13\\src\\util\\map_response.rs","byte_start":102627,"byte_end":102667,"line_start":44,"line_end":44,"column_start":5,"column_end":45}}]},{"kind":"Method","id":{"krate":0,"index":902},"span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tower-0.4.13\\src\\util\\map_response.rs","byte_start":102970,"byte_end":102975,"line_start":54,"line_end":54,"column_start":12,"column_end":17},"name":"layer","qualname":"<MapResponse<S, F>>::layer","value":"pub fn layer(F) -> MapResponseLayer<F>","parent":null,"children":[],"decl_id":null,"docs":" Returns a new [`Layer`] that produces [`MapResponse`] services.","sig":null,"attributes":[{"value":"/ Returns a new [`Layer`] that produces [`MapResponse`] services.","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tower-0.4.13\\src\\util\\map_response.rs","byte_start":102753,"byte_end":102820,"line_start":49,"line_end":49,"column_start":5,"column_end":72}},{"value":"/","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tower-0.4.13\\src\\util\\map_response.rs","byte_start":102825,"byte_end":102828,"line_start":50,"line_end":50,"column_start":5,"column_end":8}},{"value":"/ This is a convenience function that simply calls [`MapResponseLayer::new`].","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tower-0.4.13\\src\\util\\map_response.rs","byte_start":102833,"byte_end":102912,"line_start":51,"line_end":51,"column_start":5,"column_end":84}},{"value":"/","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tower-0.4.13\\src\\util\\map_response.rs","byte_start":102917,"byte_end":102920,"line_start":52,"line_end":52,"column_start":5,"column_end":8}},{"value":"/ [`Layer`]: tower_layer::Layer","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tower-0.4.13\\src\\util\\map_response.rs","byte_start":102925,"byte_end":102958,"line_start":53,"line_end":53,"column_start":5,"column_end":38}}]},{"kind":"Method","id":{"krate":0,"index":915},"span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tower-0.4.13\\src\\util\\map_response.rs","byte_start":103700,"byte_end":103703,"line_start":81,"line_end":81,"column_start":12,"column_end":15},"name":"new","qualname":"<MapResponseLayer<F>>::new","value":"pub fn new(F) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Creates a new [`MapResponseLayer`] layer.\n","sig":null,"attributes":[{"value":"/ Creates a new [`MapResponseLayer`] layer.","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tower-0.4.13\\src\\util\\map_response.rs","byte_start":103643,"byte_end":103688,"line_start":80,"line_end":80,"column_start":5,"column_end":50}}]},{"kind":"Struct","id":{"krate":0,"index":2127},"span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tower-0.4.13\\src\\util\\map_result.rs","byte_start":104291,"byte_end":104300,"line_start":11,"line_end":11,"column_start":12,"column_end":21},"name":"MapResult","qualname":"::util::map_result::MapResult","value":"MapResult {  }","parent":null,"children":[{"krate":0,"index":2130},{"krate":0,"index":2131}],"decl_id":null,"docs":" Service returned by the [`map_result`] combinator.","sig":null,"attributes":[{"value":"/ Service returned by the [`map_result`] combinator.","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tower-0.4.13\\src\\util\\map_result.rs","byte_start":104148,"byte_end":104202,"line_start":7,"line_end":7,"column_start":1,"column_end":55}},{"value":"/","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tower-0.4.13\\src\\util\\map_result.rs","byte_start":104203,"byte_end":104206,"line_start":8,"line_end":8,"column_start":1,"column_end":4}},{"value":"/ [`map_result`]: crate::util::ServiceExt::map_result","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tower-0.4.13\\src\\util\\map_result.rs","byte_start":104207,"byte_end":104262,"line_start":9,"line_end":9,"column_start":1,"column_end":56}}]},{"kind":"Struct","id":{"krate":0,"index":2136},"span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tower-0.4.13\\src\\util\\map_result.rs","byte_start":104777,"byte_end":104791,"line_start":32,"line_end":32,"column_start":12,"column_end":26},"name":"MapResultLayer","qualname":"::util::map_result::MapResultLayer","value":"MapResultLayer {  }","parent":null,"children":[{"krate":0,"index":2138}],"decl_id":null,"docs":" A [`Layer`] that produces a [`MapResult`] service.","sig":null,"attributes":[{"value":"/ A [`Layer`] that produces a [`MapResult`] service.","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tower-0.4.13\\src\\util\\map_result.rs","byte_start":104649,"byte_end":104703,"line_start":28,"line_end":28,"column_start":1,"column_end":55}},{"value":"/","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tower-0.4.13\\src\\util\\map_result.rs","byte_start":104704,"byte_end":104707,"line_start":29,"line_end":29,"column_start":1,"column_end":4}},{"value":"/ [`Layer`]: tower_layer::Layer","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tower-0.4.13\\src\\util\\map_result.rs","byte_start":104708,"byte_end":104741,"line_start":30,"line_end":30,"column_start":1,"column_end":34}}]},{"kind":"Struct","id":{"krate":0,"index":2158},"span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tower-0.4.13\\src\\util\\map_result.rs","byte_start":104947,"byte_end":104962,"line_start":40,"line_end":40,"column_start":14,"column_end":29},"name":"MapResultFuture","qualname":"::util::map_result::MapResultFuture","value":"MapResultFuture {  }","parent":null,"children":[{"krate":0,"index":2161}],"decl_id":null,"docs":" Response future from [`MapResult`] services.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":952},"span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tower-0.4.13\\src\\util\\map_result.rs","byte_start":105070,"byte_end":105073,"line_start":45,"line_end":45,"column_start":12,"column_end":15},"name":"new","qualname":"<MapResult<S, F>>::new","value":"pub fn new(S, F) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Creates a new [`MapResult`] service.\n","sig":null,"attributes":[{"value":"/ Creates a new [`MapResult`] service.","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tower-0.4.13\\src\\util\\map_result.rs","byte_start":105018,"byte_end":105058,"line_start":44,"line_end":44,"column_start":5,"column_end":45}}]},{"kind":"Method","id":{"krate":0,"index":953},"span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tower-0.4.13\\src\\util\\map_result.rs","byte_start":105355,"byte_end":105360,"line_start":54,"line_end":54,"column_start":12,"column_end":17},"name":"layer","qualname":"<MapResult<S, F>>::layer","value":"pub fn layer(F) -> MapResultLayer<F>","parent":null,"children":[],"decl_id":null,"docs":" Returns a new [`Layer`] that produces [`MapResult`] services.","sig":null,"attributes":[{"value":"/ Returns a new [`Layer`] that produces [`MapResult`] services.","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tower-0.4.13\\src\\util\\map_result.rs","byte_start":105142,"byte_end":105207,"line_start":49,"line_end":49,"column_start":5,"column_end":70}},{"value":"/","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tower-0.4.13\\src\\util\\map_result.rs","byte_start":105212,"byte_end":105215,"line_start":50,"line_end":50,"column_start":5,"column_end":8}},{"value":"/ This is a convenience function that simply calls [`MapResultLayer::new`].","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tower-0.4.13\\src\\util\\map_result.rs","byte_start":105220,"byte_end":105297,"line_start":51,"line_end":51,"column_start":5,"column_end":82}},{"value":"/","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tower-0.4.13\\src\\util\\map_result.rs","byte_start":105302,"byte_end":105305,"line_start":52,"line_end":52,"column_start":5,"column_end":8}},{"value":"/ [`Layer`]: tower_layer::Layer","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tower-0.4.13\\src\\util\\map_result.rs","byte_start":105310,"byte_end":105343,"line_start":53,"line_end":53,"column_start":5,"column_end":38}}]},{"kind":"Method","id":{"krate":0,"index":967},"span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tower-0.4.13\\src\\util\\map_result.rs","byte_start":106152,"byte_end":106155,"line_start":82,"line_end":82,"column_start":12,"column_end":15},"name":"new","qualname":"<MapResultLayer<F>>::new","value":"pub fn new(F) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Creates a new [`MapResultLayer`] layer.\n","sig":null,"attributes":[{"value":"/ Creates a new [`MapResultLayer`] layer.","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tower-0.4.13\\src\\util\\map_result.rs","byte_start":106097,"byte_end":106140,"line_start":81,"line_end":81,"column_start":5,"column_end":48}}]},{"kind":"Struct","id":{"krate":0,"index":2199},"span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tower-0.4.13\\src\\util\\map_future.rs","byte_start":106719,"byte_end":106728,"line_start":13,"line_end":13,"column_start":12,"column_end":21},"name":"MapFuture","qualname":"::util::map_future::MapFuture","value":"MapFuture {  }","parent":null,"children":[{"krate":0,"index":2202},{"krate":0,"index":2203}],"decl_id":null,"docs":" [`Service`] returned by the [`map_future`] combinator.","sig":null,"attributes":[{"value":"/ [`Service`] returned by the [`map_future`] combinator.","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tower-0.4.13\\src\\util\\map_future.rs","byte_start":106572,"byte_end":106630,"line_start":9,"line_end":9,"column_start":1,"column_end":59}},{"value":"/","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tower-0.4.13\\src\\util\\map_future.rs","byte_start":106631,"byte_end":106634,"line_start":10,"line_end":10,"column_start":1,"column_end":4}},{"value":"/ [`map_future`]: crate::util::ServiceExt::map_future","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tower-0.4.13\\src\\util\\map_future.rs","byte_start":106635,"byte_end":106690,"line_start":11,"line_end":11,"column_start":1,"column_end":56}}]},{"kind":"Method","id":{"krate":0,"index":997},"span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tower-0.4.13\\src\\util\\map_future.rs","byte_start":106849,"byte_end":106852,"line_start":20,"line_end":20,"column_start":12,"column_end":15},"name":"new","qualname":"<MapFuture<S, F>>::new","value":"pub fn new(S, F) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Creates a new [`MapFuture`] service.\n","sig":null,"attributes":[{"value":"/ Creates a new [`MapFuture`] service.","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tower-0.4.13\\src\\util\\map_future.rs","byte_start":106797,"byte_end":106837,"line_start":19,"line_end":19,"column_start":5,"column_end":45}}]},{"kind":"Method","id":{"krate":0,"index":998},"span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tower-0.4.13\\src\\util\\map_future.rs","byte_start":107129,"byte_end":107134,"line_start":29,"line_end":29,"column_start":12,"column_end":17},"name":"layer","qualname":"<MapFuture<S, F>>::layer","value":"pub fn layer(F) -> MapFutureLayer<F>","parent":null,"children":[],"decl_id":null,"docs":" Returns a new [`Layer`] that produces [`MapFuture`] services.","sig":null,"attributes":[{"value":"/ Returns a new [`Layer`] that produces [`MapFuture`] services.","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tower-0.4.13\\src\\util\\map_future.rs","byte_start":106916,"byte_end":106981,"line_start":24,"line_end":24,"column_start":5,"column_end":70}},{"value":"/","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tower-0.4.13\\src\\util\\map_future.rs","byte_start":106986,"byte_end":106989,"line_start":25,"line_end":25,"column_start":5,"column_end":8}},{"value":"/ This is a convenience function that simply calls [`MapFutureLayer::new`].","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tower-0.4.13\\src\\util\\map_future.rs","byte_start":106994,"byte_end":107071,"line_start":26,"line_end":26,"column_start":5,"column_end":82}},{"value":"/","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tower-0.4.13\\src\\util\\map_future.rs","byte_start":107076,"byte_end":107079,"line_start":27,"line_end":27,"column_start":5,"column_end":8}},{"value":"/ [`Layer`]: tower_layer::Layer","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tower-0.4.13\\src\\util\\map_future.rs","byte_start":107084,"byte_end":107117,"line_start":28,"line_end":28,"column_start":5,"column_end":38}}]},{"kind":"Method","id":{"krate":0,"index":999},"span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tower-0.4.13\\src\\util\\map_future.rs","byte_start":107258,"byte_end":107265,"line_start":34,"line_end":34,"column_start":12,"column_end":19},"name":"get_ref","qualname":"<MapFuture<S, F>>::get_ref","value":"pub fn get_ref(&Self) -> &S","parent":null,"children":[],"decl_id":null,"docs":" Get a reference to the inner service\n","sig":null,"attributes":[{"value":"/ Get a reference to the inner service","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tower-0.4.13\\src\\util\\map_future.rs","byte_start":107206,"byte_end":107246,"line_start":33,"line_end":33,"column_start":5,"column_end":45}}]},{"kind":"Method","id":{"krate":0,"index":1000},"span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tower-0.4.13\\src\\util\\map_future.rs","byte_start":107372,"byte_end":107379,"line_start":39,"line_end":39,"column_start":12,"column_end":19},"name":"get_mut","qualname":"<MapFuture<S, F>>::get_mut","value":"pub fn get_mut(&mut Self) -> &mut S","parent":null,"children":[],"decl_id":null,"docs":" Get a mutable reference to the inner service\n","sig":null,"attributes":[{"value":"/ Get a mutable reference to the inner service","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tower-0.4.13\\src\\util\\map_future.rs","byte_start":107312,"byte_end":107360,"line_start":38,"line_end":38,"column_start":5,"column_end":53}}]},{"kind":"Method","id":{"krate":0,"index":1001},"span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tower-0.4.13\\src\\util\\map_future.rs","byte_start":107497,"byte_end":107507,"line_start":44,"line_end":44,"column_start":12,"column_end":22},"name":"into_inner","qualname":"<MapFuture<S, F>>::into_inner","value":"pub fn into_inner(Self) -> S","parent":null,"children":[],"decl_id":null,"docs":" Consume `self`, returning the inner service\n","sig":null,"attributes":[{"value":"/ Consume `self`, returning the inner service","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tower-0.4.13\\src\\util\\map_future.rs","byte_start":107438,"byte_end":107485,"line_start":43,"line_end":43,"column_start":5,"column_end":52}}]},{"kind":"Struct","id":{"krate":0,"index":2208},"span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tower-0.4.13\\src\\util\\map_future.rs","byte_start":108472,"byte_end":108486,"line_start":85,"line_end":85,"column_start":12,"column_end":26},"name":"MapFutureLayer","qualname":"::util::map_future::MapFutureLayer","value":"MapFutureLayer {  }","parent":null,"children":[{"krate":0,"index":2210}],"decl_id":null,"docs":" A [`Layer`] that produces a [`MapFuture`] service.","sig":null,"attributes":[{"value":"/ A [`Layer`] that produces a [`MapFuture`] service.","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tower-0.4.13\\src\\util\\map_future.rs","byte_start":108351,"byte_end":108405,"line_start":81,"line_end":81,"column_start":1,"column_end":55}},{"value":"/","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tower-0.4.13\\src\\util\\map_future.rs","byte_start":108406,"byte_end":108409,"line_start":82,"line_end":82,"column_start":1,"column_end":4}},{"value":"/ [`Layer`]: tower_layer::Layer","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tower-0.4.13\\src\\util\\map_future.rs","byte_start":108410,"byte_end":108443,"line_start":83,"line_end":83,"column_start":1,"column_end":34}}]},{"kind":"Method","id":{"krate":0,"index":1020},"span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tower-0.4.13\\src\\util\\map_future.rs","byte_start":108592,"byte_end":108595,"line_start":91,"line_end":91,"column_start":12,"column_end":15},"name":"new","qualname":"<MapFutureLayer<F>>::new","value":"pub fn new(F) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Creates a new [`MapFutureLayer`] layer.\n","sig":null,"attributes":[{"value":"/ Creates a new [`MapFutureLayer`] layer.","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tower-0.4.13\\src\\util\\map_future.rs","byte_start":108537,"byte_end":108580,"line_start":90,"line_end":90,"column_start":5,"column_end":48}}]},{"kind":"Struct","id":{"krate":0,"index":2214},"span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tower-0.4.13\\src\\util\\oneshot.rs","byte_start":109520,"byte_end":109527,"line_start":16,"line_end":16,"column_start":16,"column_end":23},"name":"Oneshot","qualname":"::util::oneshot::Oneshot","value":"Oneshot {  }","parent":null,"children":[{"krate":0,"index":2217}],"decl_id":null,"docs":" A [`Future`] consuming a [`Service`] and request, waiting until the [`Service`]\n is ready, and then calling [`Service::call`] with the request, and\n waiting for that [`Future`].\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1068},"span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tower-0.4.13\\src\\util\\oneshot.rs","byte_start":110847,"byte_end":110850,"line_start":74,"line_end":74,"column_start":12,"column_end":15},"name":"new","qualname":"<Oneshot<S, Req>>::new","value":"pub fn new(S, Req) -> Self","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"allow(missing_docs)","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tower-0.4.13\\src\\util\\oneshot.rs","byte_start":110813,"byte_end":110835,"line_start":73,"line_end":73,"column_start":5,"column_end":27}}]},{"kind":"Mod","id":{"krate":0,"index":1075},"span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tower-0.4.13\\src\\util\\optional\\error.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"error","qualname":"::util::optional::error","value":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tower-0.4.13\\src\\util\\optional\\error.rs","parent":null,"children":[{"krate":0,"index":1076},{"krate":0,"index":1077},{"krate":0,"index":1080},{"krate":0,"index":2304},{"krate":0,"index":2307},{"krate":0,"index":1083},{"krate":0,"index":1085},{"krate":0,"index":1087}],"decl_id":null,"docs":" Error types for [`Optional`].\n","sig":null,"attributes":[{"value":"/ Error types for [`Optional`].","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tower-0.4.13\\src\\util\\optional\\mod.rs","byte_start":111964,"byte_end":111997,"line_start":5,"line_end":5,"column_start":1,"column_end":34}}]},{"kind":"Struct","id":{"krate":0,"index":2304},"span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tower-0.4.13\\src\\util\\optional\\error.rs","byte_start":113636,"byte_end":113640,"line_start":7,"line_end":7,"column_start":12,"column_end":16},"name":"None","qualname":"::util::optional::error::None","value":"","parent":null,"children":[],"decl_id":null,"docs":" Error returned if the inner [`Service`] has not been set.","sig":null,"attributes":[{"value":"/ Error returned if the inner [`Service`] has not been set.","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tower-0.4.13\\src\\util\\optional\\error.rs","byte_start":113510,"byte_end":113571,"line_start":3,"line_end":3,"column_start":1,"column_end":62}},{"value":"/","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tower-0.4.13\\src\\util\\optional\\error.rs","byte_start":113572,"byte_end":113575,"line_start":4,"line_end":4,"column_start":1,"column_end":4}},{"value":"/ [`Service`]: crate::Service","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tower-0.4.13\\src\\util\\optional\\error.rs","byte_start":113576,"byte_end":113607,"line_start":5,"line_end":5,"column_start":1,"column_end":32}}]},{"kind":"Mod","id":{"krate":0,"index":1088},"span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tower-0.4.13\\src\\util\\optional\\future.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"future","qualname":"::util::optional::future","value":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tower-0.4.13\\src\\util\\optional\\future.rs","parent":null,"children":[{"krate":0,"index":1089},{"krate":0,"index":1092},{"krate":0,"index":1095},{"krate":0,"index":1098},{"krate":0,"index":1099},{"krate":0,"index":1102},{"krate":0,"index":1105},{"krate":0,"index":1106},{"krate":0,"index":1109},{"krate":0,"index":2309},{"krate":0,"index":2312},{"krate":0,"index":2315},{"krate":0,"index":1112},{"krate":0,"index":1115}],"decl_id":null,"docs":" Future types for [`Optional`].\n","sig":null,"attributes":[{"value":"/ Future types for [`Optional`].","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tower-0.4.13\\src\\util\\optional\\mod.rs","byte_start":112013,"byte_end":112047,"line_start":7,"line_end":7,"column_start":1,"column_end":35}}]},{"kind":"Struct","id":{"krate":0,"index":2309},"span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tower-0.4.13\\src\\util\\optional\\future.rs","byte_start":114184,"byte_end":114198,"line_start":15,"line_end":15,"column_start":16,"column_end":30},"name":"ResponseFuture","qualname":"::util::optional::future::ResponseFuture","value":"ResponseFuture {  }","parent":null,"children":[{"krate":0,"index":2311}],"decl_id":null,"docs":" Response future returned by [`Optional`].","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":2345},"span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tower-0.4.13\\src\\util\\optional\\mod.rs","byte_start":112395,"byte_end":112403,"line_start":20,"line_end":20,"column_start":12,"column_end":20},"name":"Optional","qualname":"::util::optional::Optional","value":"Optional {  }","parent":null,"children":[{"krate":0,"index":2347}],"decl_id":null,"docs":" Optionally forwards requests to an inner service.","sig":null,"attributes":[{"value":"/ Optionally forwards requests to an inner service.","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tower-0.4.13\\src\\util\\optional\\mod.rs","byte_start":112160,"byte_end":112213,"line_start":14,"line_end":14,"column_start":1,"column_end":54}},{"value":"/","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tower-0.4.13\\src\\util\\optional\\mod.rs","byte_start":112214,"byte_end":112217,"line_start":15,"line_end":15,"column_start":1,"column_end":4}},{"value":"/ If the inner service is [`None`], [`optional::None`] is returned as the response.","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tower-0.4.13\\src\\util\\optional\\mod.rs","byte_start":112218,"byte_end":112303,"line_start":16,"line_end":16,"column_start":1,"column_end":86}},{"value":"/","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tower-0.4.13\\src\\util\\optional\\mod.rs","byte_start":112304,"byte_end":112307,"line_start":17,"line_end":17,"column_start":1,"column_end":4}},{"value":"/ [`optional::None`]: crate::util::error::optional::None","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tower-0.4.13\\src\\util\\optional\\mod.rs","byte_start":112308,"byte_end":112366,"line_start":18,"line_end":18,"column_start":1,"column_end":59}}]},{"kind":"Method","id":{"krate":0,"index":1136},"span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tower-0.4.13\\src\\util\\optional\\mod.rs","byte_start":112502,"byte_end":112505,"line_start":26,"line_end":26,"column_start":12,"column_end":15},"name":"new","qualname":"<Optional<T>>::new","value":"pub fn new<Request>(Option<T>) -> Optional<T> where T: Service<Request>,\nT::Error: Into<crate::BoxError>","parent":null,"children":[],"decl_id":null,"docs":" Create a new [`Optional`].\n","sig":null,"attributes":[{"value":"/ Create a new [`Optional`].","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tower-0.4.13\\src\\util\\optional\\mod.rs","byte_start":112460,"byte_end":112490,"line_start":25,"line_end":25,"column_start":5,"column_end":35}}]},{"kind":"Struct","id":{"krate":0,"index":1175},"span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tower-0.4.13\\src\\util\\ready.rs","byte_start":115270,"byte_end":115282,"line_start":16,"line_end":16,"column_start":12,"column_end":24},"name":"ReadyOneshot","qualname":"::util::ready::ReadyOneshot","value":"ReadyOneshot {  }","parent":null,"children":[{"krate":0,"index":1178},{"krate":0,"index":1179}],"decl_id":null,"docs":" A [`Future`] that yields the service when it is ready to accept a request.","sig":null,"attributes":[{"value":"/ A [`Future`] that yields the service when it is ready to accept a request.","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tower-0.4.13\\src\\util\\ready.rs","byte_start":115023,"byte_end":115101,"line_start":11,"line_end":11,"column_start":1,"column_end":79}},{"value":"/","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tower-0.4.13\\src\\util\\ready.rs","byte_start":115102,"byte_end":115105,"line_start":12,"line_end":12,"column_start":1,"column_end":4}},{"value":"/ [`ReadyOneshot`] values are produced by [`ServiceExt::ready_oneshot`].","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tower-0.4.13\\src\\util\\ready.rs","byte_start":115106,"byte_end":115180,"line_start":13,"line_end":13,"column_start":1,"column_end":75}},{"value":"/","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tower-0.4.13\\src\\util\\ready.rs","byte_start":115181,"byte_end":115184,"line_start":14,"line_end":14,"column_start":1,"column_end":4}},{"value":"/ [`ServiceExt::ready_oneshot`]: crate::util::ServiceExt::ready_oneshot","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tower-0.4.13\\src\\util\\ready.rs","byte_start":115185,"byte_end":115258,"line_start":15,"line_end":15,"column_start":1,"column_end":74}}]},{"kind":"Method","id":{"krate":0,"index":1186},"span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tower-0.4.13\\src\\util\\ready.rs","byte_start":115594,"byte_end":115597,"line_start":29,"line_end":29,"column_start":12,"column_end":15},"name":"new","qualname":"<ReadyOneshot<T, Request>>::new","value":"pub fn new(T) -> Self","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"allow(missing_docs)","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tower-0.4.13\\src\\util\\ready.rs","byte_start":115560,"byte_end":115582,"line_start":28,"line_end":28,"column_start":5,"column_end":27}}]},{"kind":"Struct","id":{"krate":0,"index":1196},"span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tower-0.4.13\\src\\util\\ready.rs","byte_start":116640,"byte_end":116645,"line_start":70,"line_end":70,"column_start":12,"column_end":17},"name":"Ready","qualname":"::util::ready::Ready","value":"","parent":null,"children":[],"decl_id":null,"docs":" A future that yields a mutable reference to the service when it is ready to accept a request.","sig":null,"attributes":[{"value":"/ A future that yields a mutable reference to the service when it is ready to accept a request.","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tower-0.4.13\\src\\util\\ready.rs","byte_start":116405,"byte_end":116502,"line_start":65,"line_end":65,"column_start":1,"column_end":98}},{"value":"/","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tower-0.4.13\\src\\util\\ready.rs","byte_start":116503,"byte_end":116506,"line_start":66,"line_end":66,"column_start":1,"column_end":4}},{"value":"/ [`Ready`] values are produced by [`ServiceExt::ready`].","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tower-0.4.13\\src\\util\\ready.rs","byte_start":116507,"byte_end":116566,"line_start":67,"line_end":67,"column_start":1,"column_end":60}},{"value":"/","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tower-0.4.13\\src\\util\\ready.rs","byte_start":116567,"byte_end":116570,"line_start":68,"line_end":68,"column_start":1,"column_end":4}},{"value":"/ [`ServiceExt::ready`]: crate::util::ServiceExt::ready","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tower-0.4.13\\src\\util\\ready.rs","byte_start":116571,"byte_end":116628,"line_start":69,"line_end":69,"column_start":1,"column_end":58}}]},{"kind":"Type","id":{"krate":0,"index":1202},"span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tower-0.4.13\\src\\util\\ready.rs","byte_start":117023,"byte_end":117031,"line_start":78,"line_end":78,"column_start":10,"column_end":18},"name":"ReadyAnd","qualname":"::util::ready::ReadyAnd","value":"Ready","parent":null,"children":[],"decl_id":null,"docs":" A future that yields a mutable reference to the service when it is ready to accept a request.","sig":null,"attributes":[{"value":"/ A future that yields a mutable reference to the service when it is ready to accept a request.","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tower-0.4.13\\src\\util\\ready.rs","byte_start":116698,"byte_end":116795,"line_start":72,"line_end":72,"column_start":1,"column_end":98}},{"value":"/","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tower-0.4.13\\src\\util\\ready.rs","byte_start":116796,"byte_end":116799,"line_start":73,"line_end":73,"column_start":1,"column_end":4}},{"value":"/ [`ReadyAnd`] values are produced by [`ServiceExt::ready_and`].","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tower-0.4.13\\src\\util\\ready.rs","byte_start":116800,"byte_end":116866,"line_start":74,"line_end":74,"column_start":1,"column_end":67}},{"value":"/","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tower-0.4.13\\src\\util\\ready.rs","byte_start":116867,"byte_end":116870,"line_start":75,"line_end":75,"column_start":1,"column_end":4}},{"value":"/ [`ServiceExt::ready_and`]: crate::util::ServiceExt::ready_and","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tower-0.4.13\\src\\util\\ready.rs","byte_start":116871,"byte_end":116936,"line_start":76,"line_end":76,"column_start":1,"column_end":66}},{"value":"deprecated(since = \"0.4.6\", note = \"Please use the Ready future instead\")","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tower-0.4.13\\src\\util\\ready.rs","byte_start":116937,"byte_end":117013,"line_start":77,"line_end":77,"column_start":1,"column_end":77}}]},{"kind":"Method","id":{"krate":0,"index":1214},"span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tower-0.4.13\\src\\util\\ready.rs","byte_start":117329,"byte_end":117332,"line_start":88,"line_end":88,"column_start":12,"column_end":15},"name":"new","qualname":"<Ready>::new","value":"pub fn new(&'a mut T) -> Self","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"allow(missing_docs)","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tower-0.4.13\\src\\util\\ready.rs","byte_start":117295,"byte_end":117317,"line_start":87,"line_end":87,"column_start":5,"column_end":27}}]},{"kind":"Function","id":{"krate":0,"index":1243},"span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tower-0.4.13\\src\\util\\service_fn.rs","byte_start":119003,"byte_end":119013,"line_start":46,"line_end":46,"column_start":8,"column_end":18},"name":"service_fn","qualname":"::util::service_fn::service_fn","value":"pub fn service_fn<T>(T) -> ServiceFn<T>","parent":null,"children":[],"decl_id":null,"docs":" Returns a new [`ServiceFn`] with the given closure.","sig":null,"attributes":[{"value":"/ Returns a new [`ServiceFn`] with the given closure.","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tower-0.4.13\\src\\util\\service_fn.rs","byte_start":117988,"byte_end":118043,"line_start":6,"line_end":6,"column_start":1,"column_end":56}},{"value":"/","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tower-0.4.13\\src\\util\\service_fn.rs","byte_start":118044,"byte_end":118047,"line_start":7,"line_end":7,"column_start":1,"column_end":4}},{"value":"/ This lets you build a [`Service`] from an async function that returns a [`Result`].","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tower-0.4.13\\src\\util\\service_fn.rs","byte_start":118048,"byte_end":118135,"line_start":8,"line_end":8,"column_start":1,"column_end":88}},{"value":"/","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tower-0.4.13\\src\\util\\service_fn.rs","byte_start":118136,"byte_end":118139,"line_start":9,"line_end":9,"column_start":1,"column_end":4}},{"value":"/ # Example","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tower-0.4.13\\src\\util\\service_fn.rs","byte_start":118140,"byte_end":118153,"line_start":10,"line_end":10,"column_start":1,"column_end":14}},{"value":"/","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tower-0.4.13\\src\\util\\service_fn.rs","byte_start":118154,"byte_end":118157,"line_start":11,"line_end":11,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tower-0.4.13\\src\\util\\service_fn.rs","byte_start":118158,"byte_end":118165,"line_start":12,"line_end":12,"column_start":1,"column_end":8}},{"value":"/ use tower::{service_fn, Service, ServiceExt, BoxError};","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tower-0.4.13\\src\\util\\service_fn.rs","byte_start":118166,"byte_end":118225,"line_start":13,"line_end":13,"column_start":1,"column_end":60}},{"value":"/ # struct Request;","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tower-0.4.13\\src\\util\\service_fn.rs","byte_start":118226,"byte_end":118247,"line_start":14,"line_end":14,"column_start":1,"column_end":22}},{"value":"/ # impl Request {","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tower-0.4.13\\src\\util\\service_fn.rs","byte_start":118248,"byte_end":118268,"line_start":15,"line_end":15,"column_start":1,"column_end":21}},{"value":"/ #     fn new() -> Self { Self }","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tower-0.4.13\\src\\util\\service_fn.rs","byte_start":118269,"byte_end":118304,"line_start":16,"line_end":16,"column_start":1,"column_end":36}},{"value":"/ # }","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tower-0.4.13\\src\\util\\service_fn.rs","byte_start":118305,"byte_end":118312,"line_start":17,"line_end":17,"column_start":1,"column_end":8}},{"value":"/ # struct Response(&'static str);","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tower-0.4.13\\src\\util\\service_fn.rs","byte_start":118313,"byte_end":118349,"line_start":18,"line_end":18,"column_start":1,"column_end":37}},{"value":"/ # impl Response {","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tower-0.4.13\\src\\util\\service_fn.rs","byte_start":118350,"byte_end":118371,"line_start":19,"line_end":19,"column_start":1,"column_end":22}},{"value":"/ #     fn new(body: &'static str) -> Self {","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tower-0.4.13\\src\\util\\service_fn.rs","byte_start":118372,"byte_end":118418,"line_start":20,"line_end":20,"column_start":1,"column_end":47}},{"value":"/ #         Self(body)","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tower-0.4.13\\src\\util\\service_fn.rs","byte_start":118419,"byte_end":118443,"line_start":21,"line_end":21,"column_start":1,"column_end":25}},{"value":"/ #     }","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tower-0.4.13\\src\\util\\service_fn.rs","byte_start":118444,"byte_end":118455,"line_start":22,"line_end":22,"column_start":1,"column_end":12}},{"value":"/ #     fn into_body(self) -> &'static str { self.0 }","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tower-0.4.13\\src\\util\\service_fn.rs","byte_start":118456,"byte_end":118511,"line_start":23,"line_end":23,"column_start":1,"column_end":56}},{"value":"/ # }","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tower-0.4.13\\src\\util\\service_fn.rs","byte_start":118512,"byte_end":118519,"line_start":24,"line_end":24,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tower-0.4.13\\src\\util\\service_fn.rs","byte_start":118520,"byte_end":118523,"line_start":25,"line_end":25,"column_start":1,"column_end":4}},{"value":"/ # #[tokio::main]","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tower-0.4.13\\src\\util\\service_fn.rs","byte_start":118524,"byte_end":118544,"line_start":26,"line_end":26,"column_start":1,"column_end":21}},{"value":"/ # async fn main() -> Result<(), BoxError> {","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tower-0.4.13\\src\\util\\service_fn.rs","byte_start":118545,"byte_end":118592,"line_start":27,"line_end":27,"column_start":1,"column_end":48}},{"value":"/ async fn handle(request: Request) -> Result<Response, BoxError> {","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tower-0.4.13\\src\\util\\service_fn.rs","byte_start":118593,"byte_end":118662,"line_start":28,"line_end":28,"column_start":1,"column_end":70}},{"value":"/     let response = Response::new(\"Hello, World!\");","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tower-0.4.13\\src\\util\\service_fn.rs","byte_start":118663,"byte_end":118717,"line_start":29,"line_end":29,"column_start":1,"column_end":55}},{"value":"/     Ok(response)","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tower-0.4.13\\src\\util\\service_fn.rs","byte_start":118718,"byte_end":118738,"line_start":30,"line_end":30,"column_start":1,"column_end":21}},{"value":"/ }","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tower-0.4.13\\src\\util\\service_fn.rs","byte_start":118739,"byte_end":118744,"line_start":31,"line_end":31,"column_start":1,"column_end":6}},{"value":"/","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tower-0.4.13\\src\\util\\service_fn.rs","byte_start":118745,"byte_end":118748,"line_start":32,"line_end":32,"column_start":1,"column_end":4}},{"value":"/ let mut service = service_fn(handle);","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tower-0.4.13\\src\\util\\service_fn.rs","byte_start":118749,"byte_end":118790,"line_start":33,"line_end":33,"column_start":1,"column_end":42}},{"value":"/","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tower-0.4.13\\src\\util\\service_fn.rs","byte_start":118791,"byte_end":118794,"line_start":34,"line_end":34,"column_start":1,"column_end":4}},{"value":"/ let response = service","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tower-0.4.13\\src\\util\\service_fn.rs","byte_start":118795,"byte_end":118821,"line_start":35,"line_end":35,"column_start":1,"column_end":27}},{"value":"/     .ready()","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tower-0.4.13\\src\\util\\service_fn.rs","byte_start":118822,"byte_end":118838,"line_start":36,"line_end":36,"column_start":1,"column_end":17}},{"value":"/     .await?","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tower-0.4.13\\src\\util\\service_fn.rs","byte_start":118839,"byte_end":118854,"line_start":37,"line_end":37,"column_start":1,"column_end":16}},{"value":"/     .call(Request::new())","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tower-0.4.13\\src\\util\\service_fn.rs","byte_start":118855,"byte_end":118884,"line_start":38,"line_end":38,"column_start":1,"column_end":30}},{"value":"/     .await?;","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tower-0.4.13\\src\\util\\service_fn.rs","byte_start":118885,"byte_end":118901,"line_start":39,"line_end":39,"column_start":1,"column_end":17}},{"value":"/","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tower-0.4.13\\src\\util\\service_fn.rs","byte_start":118902,"byte_end":118905,"line_start":40,"line_end":40,"column_start":1,"column_end":4}},{"value":"/ assert_eq!(\"Hello, World!\", response.into_body());","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tower-0.4.13\\src\\util\\service_fn.rs","byte_start":118906,"byte_end":118960,"line_start":41,"line_end":41,"column_start":1,"column_end":55}},{"value":"/ #","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tower-0.4.13\\src\\util\\service_fn.rs","byte_start":118961,"byte_end":118966,"line_start":42,"line_end":42,"column_start":1,"column_end":6}},{"value":"/ # Ok(())","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tower-0.4.13\\src\\util\\service_fn.rs","byte_start":118967,"byte_end":118979,"line_start":43,"line_end":43,"column_start":1,"column_end":13}},{"value":"/ # }","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tower-0.4.13\\src\\util\\service_fn.rs","byte_start":118980,"byte_end":118987,"line_start":44,"line_end":44,"column_start":1,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tower-0.4.13\\src\\util\\service_fn.rs","byte_start":118988,"byte_end":118995,"line_start":45,"line_end":45,"column_start":1,"column_end":8}}]},{"kind":"Struct","id":{"krate":0,"index":2351},"span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tower-0.4.13\\src\\util\\service_fn.rs","byte_start":119187,"byte_end":119196,"line_start":54,"line_end":54,"column_start":12,"column_end":21},"name":"ServiceFn","qualname":"::util::service_fn::ServiceFn","value":"ServiceFn {  }","parent":null,"children":[{"krate":0,"index":2353}],"decl_id":null,"docs":" A [`Service`] implemented by a closure.","sig":null,"attributes":[{"value":"/ A [`Service`] implemented by a closure.","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tower-0.4.13\\src\\util\\service_fn.rs","byte_start":119064,"byte_end":119107,"line_start":50,"line_end":50,"column_start":1,"column_end":44}},{"value":"/","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tower-0.4.13\\src\\util\\service_fn.rs","byte_start":119108,"byte_end":119111,"line_start":51,"line_end":51,"column_start":1,"column_end":4}},{"value":"/ See [`service_fn`] for more details.","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tower-0.4.13\\src\\util\\service_fn.rs","byte_start":119112,"byte_end":119152,"line_start":52,"line_end":52,"column_start":1,"column_end":41}}]},{"kind":"Struct","id":{"krate":0,"index":2359},"span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tower-0.4.13\\src\\util\\then.rs","byte_start":120136,"byte_end":120140,"line_start":14,"line_end":14,"column_start":12,"column_end":16},"name":"Then","qualname":"::util::then::Then","value":"Then {  }","parent":null,"children":[{"krate":0,"index":2362},{"krate":0,"index":2363}],"decl_id":null,"docs":" [`Service`] returned by the [`then`] combinator.","sig":null,"attributes":[{"value":"/ [`Service`] returned by the [`then`] combinator.","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tower-0.4.13\\src\\util\\then.rs","byte_start":120007,"byte_end":120059,"line_start":10,"line_end":10,"column_start":1,"column_end":53}},{"value":"/","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tower-0.4.13\\src\\util\\then.rs","byte_start":120060,"byte_end":120063,"line_start":11,"line_end":11,"column_start":1,"column_end":4}},{"value":"/ [`then`]: crate::util::ServiceExt::then","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tower-0.4.13\\src\\util\\then.rs","byte_start":120064,"byte_end":120107,"line_start":12,"line_end":12,"column_start":1,"column_end":44}}]},{"kind":"Struct","id":{"krate":0,"index":2368},"span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tower-0.4.13\\src\\util\\then.rs","byte_start":120602,"byte_end":120611,"line_start":35,"line_end":35,"column_start":12,"column_end":21},"name":"ThenLayer","qualname":"::util::then::ThenLayer","value":"ThenLayer {  }","parent":null,"children":[{"krate":0,"index":2370}],"decl_id":null,"docs":" A [`Layer`] that produces a [`Then`] service.","sig":null,"attributes":[{"value":"/ A [`Layer`] that produces a [`Then`] service.","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tower-0.4.13\\src\\util\\then.rs","byte_start":120479,"byte_end":120528,"line_start":31,"line_end":31,"column_start":1,"column_end":50}},{"value":"/","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tower-0.4.13\\src\\util\\then.rs","byte_start":120529,"byte_end":120532,"line_start":32,"line_end":32,"column_start":1,"column_end":4}},{"value":"/ [`Layer`]: tower_layer::Layer","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tower-0.4.13\\src\\util\\then.rs","byte_start":120533,"byte_end":120566,"line_start":33,"line_end":33,"column_start":1,"column_end":34}}]},{"kind":"Method","id":{"krate":0,"index":1294},"span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tower-0.4.13\\src\\util\\then.rs","byte_start":120703,"byte_end":120706,"line_start":41,"line_end":41,"column_start":12,"column_end":15},"name":"new","qualname":"<Then<S, F>>::new","value":"pub fn new(S, F) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Creates a new `Then` service.\n","sig":null,"attributes":[{"value":"/ Creates a new `Then` service.","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tower-0.4.13\\src\\util\\then.rs","byte_start":120658,"byte_end":120691,"line_start":40,"line_end":40,"column_start":5,"column_end":38}}]},{"kind":"Method","id":{"krate":0,"index":1295},"span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tower-0.4.13\\src\\util\\then.rs","byte_start":120973,"byte_end":120978,"line_start":50,"line_end":50,"column_start":12,"column_end":17},"name":"layer","qualname":"<Then<S, F>>::layer","value":"pub fn layer(F) -> ThenLayer<F>","parent":null,"children":[],"decl_id":null,"docs":" Returns a new [`Layer`] that produces [`Then`] services.","sig":null,"attributes":[{"value":"/ Returns a new [`Layer`] that produces [`Then`] services.","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tower-0.4.13\\src\\util\\then.rs","byte_start":120770,"byte_end":120830,"line_start":45,"line_end":45,"column_start":5,"column_end":65}},{"value":"/","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tower-0.4.13\\src\\util\\then.rs","byte_start":120835,"byte_end":120838,"line_start":46,"line_end":46,"column_start":5,"column_end":8}},{"value":"/ This is a convenience function that simply calls [`ThenLayer::new`].","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tower-0.4.13\\src\\util\\then.rs","byte_start":120843,"byte_end":120915,"line_start":47,"line_end":47,"column_start":5,"column_end":77}},{"value":"/","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tower-0.4.13\\src\\util\\then.rs","byte_start":120920,"byte_end":120923,"line_start":48,"line_end":48,"column_start":5,"column_end":8}},{"value":"/ [`Layer`]: tower_layer::Layer","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tower-0.4.13\\src\\util\\then.rs","byte_start":120928,"byte_end":120961,"line_start":49,"line_end":49,"column_start":5,"column_end":38}}]},{"kind":"Struct","id":{"krate":0,"index":2393},"span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tower-0.4.13\\src\\util\\then.rs","byte_start":121158,"byte_end":121168,"line_start":59,"line_end":59,"column_start":14,"column_end":24},"name":"ThenFuture","qualname":"::util::then::ThenFuture","value":"ThenFuture {  }","parent":null,"children":[{"krate":0,"index":2397}],"decl_id":null,"docs":" Response future from [`Then`] services.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1310},"span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tower-0.4.13\\src\\util\\then.rs","byte_start":121951,"byte_end":121954,"line_start":86,"line_end":86,"column_start":12,"column_end":15},"name":"new","qualname":"<ThenLayer<F>>::new","value":"pub fn new(F) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Creates a new [`ThenLayer`] layer.\n","sig":null,"attributes":[{"value":"/ Creates a new [`ThenLayer`] layer.","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tower-0.4.13\\src\\util\\then.rs","byte_start":121901,"byte_end":121939,"line_start":85,"line_end":85,"column_start":5,"column_end":43}}]},{"kind":"Mod","id":{"krate":0,"index":1425},"span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tower-0.4.13\\src\\util\\mod.rs","byte_start":24759,"byte_end":24764,"line_start":46,"line_end":46,"column_start":9,"column_end":14},"name":"error","qualname":"::util::error","value":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tower-0.4.13\\src\\util\\mod.rs","parent":null,"children":[{"krate":0,"index":1426}],"decl_id":null,"docs":" Error types\n","sig":null,"attributes":[{"value":"/ Error types","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tower-0.4.13\\src\\util\\mod.rs","byte_start":24771,"byte_end":24786,"line_start":47,"line_end":47,"column_start":5,"column_end":20}}]},{"kind":"Mod","id":{"krate":0,"index":1429},"span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tower-0.4.13\\src\\util\\mod.rs","byte_start":24847,"byte_end":24853,"line_start":52,"line_end":52,"column_start":9,"column_end":15},"name":"future","qualname":"::util::future","value":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tower-0.4.13\\src\\util\\mod.rs","parent":null,"children":[{"krate":0,"index":1430},{"krate":0,"index":1433},{"krate":0,"index":1436},{"krate":0,"index":1439},{"krate":0,"index":1442},{"krate":0,"index":1445}],"decl_id":null,"docs":" Future types\n","sig":null,"attributes":[{"value":"/ Future types","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tower-0.4.13\\src\\util\\mod.rs","byte_start":24860,"byte_end":24876,"line_start":53,"line_end":53,"column_start":5,"column_end":21}}]},{"kind":"Trait","id":{"krate":0,"index":1448},"span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tower-0.4.13\\src\\util\\mod.rs","byte_start":25252,"byte_end":25262,"line_start":65,"line_end":65,"column_start":11,"column_end":21},"name":"ServiceExt","qualname":"::util::ServiceExt","value":"ServiceExt<Request>: tower_service::Service<Request>","parent":null,"children":[{"krate":0,"index":1450},{"krate":0,"index":1451},{"krate":0,"index":1452},{"krate":0,"index":1453},{"krate":0,"index":1454},{"krate":0,"index":1456},{"krate":0,"index":1458},{"krate":0,"index":1461},{"krate":0,"index":1464},{"krate":0,"index":1468},{"krate":0,"index":1471},{"krate":0,"index":1476},{"krate":0,"index":1481},{"krate":0,"index":1482}],"decl_id":null,"docs":" An extension trait for `Service`s that provides a variety of convenient\n adapters\n","sig":null,"attributes":[{"value":"/ An extension trait for `Service`s that provides a variety of convenient","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tower-0.4.13\\src\\util\\mod.rs","byte_start":25153,"byte_end":25228,"line_start":63,"line_end":63,"column_start":1,"column_end":76}},{"value":"/ adapters","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tower-0.4.13\\src\\util\\mod.rs","byte_start":25229,"byte_end":25241,"line_start":64,"line_end":64,"column_start":1,"column_end":13}}]},{"kind":"Method","id":{"krate":0,"index":1450},"span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tower-0.4.13\\src\\util\\mod.rs","byte_start":25402,"byte_end":25407,"line_start":67,"line_end":67,"column_start":8,"column_end":13},"name":"ready","qualname":"::util::ServiceExt::ready","value":"pub fn ready(&mut Self) -> Ready<, Self, Request> where Self: Sized","parent":{"krate":0,"index":1448},"children":[],"decl_id":null,"docs":" Yields a mutable reference to the service when it is ready to accept a request.\n","sig":null,"attributes":[{"value":"/ Yields a mutable reference to the service when it is ready to accept a request.","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tower-0.4.13\\src\\util\\mod.rs","byte_start":25311,"byte_end":25394,"line_start":66,"line_end":66,"column_start":5,"column_end":88}}]},{"kind":"Method","id":{"krate":0,"index":1451},"span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tower-0.4.13\\src\\util\\mod.rs","byte_start":25753,"byte_end":25762,"line_start":80,"line_end":80,"column_start":8,"column_end":17},"name":"ready_and","qualname":"::util::ServiceExt::ready_and","value":"pub fn ready_and(&mut Self) -> ReadyAnd<, Self, Request> where Self: Sized","parent":{"krate":0,"index":1448},"children":[],"decl_id":null,"docs":" Yields a mutable reference to the service when it is ready to accept a request.\n","sig":null,"attributes":[{"value":"/ Yields a mutable reference to the service when it is ready to accept a request.","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tower-0.4.13\\src\\util\\mod.rs","byte_start":25520,"byte_end":25603,"line_start":74,"line_end":74,"column_start":5,"column_end":88}},{"value":"deprecated(since = \"0.4.6\", note =\n\"please use the `ServiceExt::ready` method instead\")","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tower-0.4.13\\src\\util\\mod.rs","byte_start":25608,"byte_end":25720,"line_start":75,"line_end":78,"column_start":5,"column_end":7}},{"value":"allow(deprecated)","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tower-0.4.13\\src\\util\\mod.rs","byte_start":25725,"byte_end":25745,"line_start":79,"line_end":79,"column_start":5,"column_end":25}}]},{"kind":"Method","id":{"krate":0,"index":1452},"span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tower-0.4.13\\src\\util\\mod.rs","byte_start":25949,"byte_end":25962,"line_start":88,"line_end":88,"column_start":8,"column_end":21},"name":"ready_oneshot","qualname":"::util::ServiceExt::ready_oneshot","value":"pub fn ready_oneshot(Self) -> ReadyOneshot<Self, Request> where Self: Sized","parent":{"krate":0,"index":1448},"children":[],"decl_id":null,"docs":" Yields the service when it is ready to accept a request.\n","sig":null,"attributes":[{"value":"/ Yields the service when it is ready to accept a request.","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tower-0.4.13\\src\\util\\mod.rs","byte_start":25881,"byte_end":25941,"line_start":87,"line_end":87,"column_start":5,"column_end":65}}]},{"kind":"Method","id":{"krate":0,"index":1453},"span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tower-0.4.13\\src\\util\\mod.rs","byte_start":26168,"byte_end":26175,"line_start":96,"line_end":96,"column_start":8,"column_end":15},"name":"oneshot","qualname":"::util::ServiceExt::oneshot","value":"pub fn oneshot(Self, Request) -> Oneshot<Self, Request> where Self: Sized","parent":{"krate":0,"index":1448},"children":[],"decl_id":null,"docs":" Consume this `Service`, calling with the providing request once it is ready.\n","sig":null,"attributes":[{"value":"/ Consume this `Service`, calling with the providing request once it is ready.","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tower-0.4.13\\src\\util\\mod.rs","byte_start":26080,"byte_end":26160,"line_start":95,"line_end":95,"column_start":5,"column_end":85}}]},{"kind":"Method","id":{"krate":0,"index":1454},"span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tower-0.4.13\\src\\util\\mod.rs","byte_start":26767,"byte_end":26775,"line_start":111,"line_end":111,"column_start":8,"column_end":16},"name":"call_all","qualname":"::util::ServiceExt::call_all","value":"pub fn call_all<S>(Self, S) -> CallAll<Self, S> where Self: Sized,\nSelf::Error: Into<crate::BoxError>, S: futures_core::Stream<Item = Request>","parent":{"krate":0,"index":1448},"children":[],"decl_id":null,"docs":" Process all requests from the given [`Stream`], and produce a [`Stream`] of their responses.","sig":null,"attributes":[{"value":"/ Process all requests from the given [`Stream`], and produce a [`Stream`] of their responses.","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tower-0.4.13\\src\\util\\mod.rs","byte_start":26302,"byte_end":26398,"line_start":103,"line_end":103,"column_start":5,"column_end":101}},{"value":"/","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tower-0.4.13\\src\\util\\mod.rs","byte_start":26403,"byte_end":26406,"line_start":104,"line_end":104,"column_start":5,"column_end":8}},{"value":"/ This is essentially [`Stream<Item = Request>`][stream] + `Self` => [`Stream<Item =","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tower-0.4.13\\src\\util\\mod.rs","byte_start":26411,"byte_end":26497,"line_start":105,"line_end":105,"column_start":5,"column_end":91}},{"value":"/ Response>`][stream]. See the documentation for [`CallAll`] for","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tower-0.4.13\\src\\util\\mod.rs","byte_start":26502,"byte_end":26568,"line_start":106,"line_end":106,"column_start":5,"column_end":71}},{"value":"/ details.","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tower-0.4.13\\src\\util\\mod.rs","byte_start":26573,"byte_end":26585,"line_start":107,"line_end":107,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tower-0.4.13\\src\\util\\mod.rs","byte_start":26590,"byte_end":26593,"line_start":108,"line_end":108,"column_start":5,"column_end":8}},{"value":"/ [`Stream`]: https://docs.rs/futures/latest/futures/stream/trait.Stream.html","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tower-0.4.13\\src\\util\\mod.rs","byte_start":26598,"byte_end":26677,"line_start":109,"line_end":109,"column_start":5,"column_end":84}},{"value":"/ [stream]: https://docs.rs/futures/latest/futures/stream/trait.Stream.html","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tower-0.4.13\\src\\util\\mod.rs","byte_start":26682,"byte_end":26759,"line_start":110,"line_end":110,"column_start":5,"column_end":82}}]},{"kind":"Method","id":{"krate":0,"index":1456},"span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tower-0.4.13\\src\\util\\mod.rs","byte_start":29048,"byte_end":29056,"line_start":180,"line_end":180,"column_start":8,"column_end":16},"name":"and_then","qualname":"::util::ServiceExt::and_then","value":"pub fn and_then<F>(Self, F) -> AndThen<Self, F> where Self: Sized, F: Clone","parent":{"krate":0,"index":1448},"children":[],"decl_id":null,"docs":" Executes a new future after this service's future resolves. This does\n not alter the behaviour of the [`poll_ready`] method.","sig":null,"attributes":[{"value":"/ Executes a new future after this service's future resolves. This does","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tower-0.4.13\\src\\util\\mod.rs","byte_start":26988,"byte_end":27061,"line_start":120,"line_end":120,"column_start":5,"column_end":78}},{"value":"/ not alter the behaviour of the [`poll_ready`] method.","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tower-0.4.13\\src\\util\\mod.rs","byte_start":27066,"byte_end":27123,"line_start":121,"line_end":121,"column_start":5,"column_end":62}},{"value":"/","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tower-0.4.13\\src\\util\\mod.rs","byte_start":27128,"byte_end":27131,"line_start":122,"line_end":122,"column_start":5,"column_end":8}},{"value":"/ This method can be used to change the [`Response`] type of the service","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tower-0.4.13\\src\\util\\mod.rs","byte_start":27136,"byte_end":27210,"line_start":123,"line_end":123,"column_start":5,"column_end":79}},{"value":"/ into a different type. You can use this method to chain along a computation once the","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tower-0.4.13\\src\\util\\mod.rs","byte_start":27215,"byte_end":27303,"line_start":124,"line_end":124,"column_start":5,"column_end":93}},{"value":"/ service's response has been resolved.","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tower-0.4.13\\src\\util\\mod.rs","byte_start":27308,"byte_end":27349,"line_start":125,"line_end":125,"column_start":5,"column_end":46}},{"value":"/","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tower-0.4.13\\src\\util\\mod.rs","byte_start":27354,"byte_end":27357,"line_start":126,"line_end":126,"column_start":5,"column_end":8}},{"value":"/ [`Response`]: crate::Service::Response","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tower-0.4.13\\src\\util\\mod.rs","byte_start":27362,"byte_end":27404,"line_start":127,"line_end":127,"column_start":5,"column_end":47}},{"value":"/ [`poll_ready`]: crate::Service::poll_ready","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tower-0.4.13\\src\\util\\mod.rs","byte_start":27409,"byte_end":27455,"line_start":128,"line_end":128,"column_start":5,"column_end":51}},{"value":"/","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tower-0.4.13\\src\\util\\mod.rs","byte_start":27460,"byte_end":27463,"line_start":129,"line_end":129,"column_start":5,"column_end":8}},{"value":"/ # Example","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tower-0.4.13\\src\\util\\mod.rs","byte_start":27468,"byte_end":27481,"line_start":130,"line_end":130,"column_start":5,"column_end":18}},{"value":"/ ```","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tower-0.4.13\\src\\util\\mod.rs","byte_start":27486,"byte_end":27493,"line_start":131,"line_end":131,"column_start":5,"column_end":12}},{"value":"/ # use std::task::{Poll, Context};","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tower-0.4.13\\src\\util\\mod.rs","byte_start":27498,"byte_end":27535,"line_start":132,"line_end":132,"column_start":5,"column_end":42}},{"value":"/ # use tower::{Service, ServiceExt};","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tower-0.4.13\\src\\util\\mod.rs","byte_start":27540,"byte_end":27579,"line_start":133,"line_end":133,"column_start":5,"column_end":44}},{"value":"/ #","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tower-0.4.13\\src\\util\\mod.rs","byte_start":27584,"byte_end":27589,"line_start":134,"line_end":134,"column_start":5,"column_end":10}},{"value":"/ # struct DatabaseService;","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tower-0.4.13\\src\\util\\mod.rs","byte_start":27594,"byte_end":27623,"line_start":135,"line_end":135,"column_start":5,"column_end":34}},{"value":"/ # impl DatabaseService {","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tower-0.4.13\\src\\util\\mod.rs","byte_start":27628,"byte_end":27656,"line_start":136,"line_end":136,"column_start":5,"column_end":33}},{"value":"/ #   fn new(address: &str) -> Self {","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tower-0.4.13\\src\\util\\mod.rs","byte_start":27661,"byte_end":27700,"line_start":137,"line_end":137,"column_start":5,"column_end":44}},{"value":"/ #       DatabaseService","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tower-0.4.13\\src\\util\\mod.rs","byte_start":27705,"byte_end":27732,"line_start":138,"line_end":138,"column_start":5,"column_end":32}},{"value":"/ #   }","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tower-0.4.13\\src\\util\\mod.rs","byte_start":27737,"byte_end":27746,"line_start":139,"line_end":139,"column_start":5,"column_end":14}},{"value":"/ # }","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tower-0.4.13\\src\\util\\mod.rs","byte_start":27751,"byte_end":27758,"line_start":140,"line_end":140,"column_start":5,"column_end":12}},{"value":"/ #","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tower-0.4.13\\src\\util\\mod.rs","byte_start":27763,"byte_end":27768,"line_start":141,"line_end":141,"column_start":5,"column_end":10}},{"value":"/ # struct Record {","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tower-0.4.13\\src\\util\\mod.rs","byte_start":27773,"byte_end":27794,"line_start":142,"line_end":142,"column_start":5,"column_end":26}},{"value":"/ #   pub name: String,","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tower-0.4.13\\src\\util\\mod.rs","byte_start":27799,"byte_end":27824,"line_start":143,"line_end":143,"column_start":5,"column_end":30}},{"value":"/ #   pub age: u16","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tower-0.4.13\\src\\util\\mod.rs","byte_start":27829,"byte_end":27849,"line_start":144,"line_end":144,"column_start":5,"column_end":25}},{"value":"/ # }","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tower-0.4.13\\src\\util\\mod.rs","byte_start":27854,"byte_end":27861,"line_start":145,"line_end":145,"column_start":5,"column_end":12}},{"value":"/ #","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tower-0.4.13\\src\\util\\mod.rs","byte_start":27866,"byte_end":27871,"line_start":146,"line_end":146,"column_start":5,"column_end":10}},{"value":"/ # impl Service<u32> for DatabaseService {","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tower-0.4.13\\src\\util\\mod.rs","byte_start":27876,"byte_end":27921,"line_start":147,"line_end":147,"column_start":5,"column_end":50}},{"value":"/ #   type Response = Record;","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tower-0.4.13\\src\\util\\mod.rs","byte_start":27926,"byte_end":27957,"line_start":148,"line_end":148,"column_start":5,"column_end":36}},{"value":"/ #   type Error = u8;","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tower-0.4.13\\src\\util\\mod.rs","byte_start":27962,"byte_end":27986,"line_start":149,"line_end":149,"column_start":5,"column_end":29}},{"value":"/ #   type Future = futures_util::future::Ready<Result<Record, u8>>;","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tower-0.4.13\\src\\util\\mod.rs","byte_start":27991,"byte_end":28061,"line_start":150,"line_end":150,"column_start":5,"column_end":75}},{"value":"/ #","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tower-0.4.13\\src\\util\\mod.rs","byte_start":28066,"byte_end":28071,"line_start":151,"line_end":151,"column_start":5,"column_end":10}},{"value":"/ #   fn poll_ready(&mut self, cx: &mut Context<'_>) -> Poll<Result<(), Self::Error>> {","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tower-0.4.13\\src\\util\\mod.rs","byte_start":28076,"byte_end":28165,"line_start":152,"line_end":152,"column_start":5,"column_end":94}},{"value":"/ #       Poll::Ready(Ok(()))","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tower-0.4.13\\src\\util\\mod.rs","byte_start":28170,"byte_end":28201,"line_start":153,"line_end":153,"column_start":5,"column_end":36}},{"value":"/ #   }","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tower-0.4.13\\src\\util\\mod.rs","byte_start":28206,"byte_end":28215,"line_start":154,"line_end":154,"column_start":5,"column_end":14}},{"value":"/ #","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tower-0.4.13\\src\\util\\mod.rs","byte_start":28220,"byte_end":28225,"line_start":155,"line_end":155,"column_start":5,"column_end":10}},{"value":"/ #   fn call(&mut self, request: u32) -> Self::Future {","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tower-0.4.13\\src\\util\\mod.rs","byte_start":28230,"byte_end":28288,"line_start":156,"line_end":156,"column_start":5,"column_end":63}},{"value":"/ #       futures_util::future::ready(Ok(Record { name: \"Jack\".into(), age: 32 }))","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tower-0.4.13\\src\\util\\mod.rs","byte_start":28293,"byte_end":28377,"line_start":157,"line_end":157,"column_start":5,"column_end":89}},{"value":"/ #   }","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tower-0.4.13\\src\\util\\mod.rs","byte_start":28382,"byte_end":28391,"line_start":158,"line_end":158,"column_start":5,"column_end":14}},{"value":"/ # }","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tower-0.4.13\\src\\util\\mod.rs","byte_start":28396,"byte_end":28403,"line_start":159,"line_end":159,"column_start":5,"column_end":12}},{"value":"/ #","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tower-0.4.13\\src\\util\\mod.rs","byte_start":28408,"byte_end":28413,"line_start":160,"line_end":160,"column_start":5,"column_end":10}},{"value":"/ # async fn avatar_lookup(name: String) -> Result<Vec<u8>, u8> { Ok(vec![]) }","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tower-0.4.13\\src\\util\\mod.rs","byte_start":28418,"byte_end":28498,"line_start":161,"line_end":161,"column_start":5,"column_end":85}},{"value":"/ #","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tower-0.4.13\\src\\util\\mod.rs","byte_start":28503,"byte_end":28508,"line_start":162,"line_end":162,"column_start":5,"column_end":10}},{"value":"/ # fn main() {","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tower-0.4.13\\src\\util\\mod.rs","byte_start":28513,"byte_end":28530,"line_start":163,"line_end":163,"column_start":5,"column_end":22}},{"value":"/ #    async {","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tower-0.4.13\\src\\util\\mod.rs","byte_start":28535,"byte_end":28551,"line_start":164,"line_end":164,"column_start":5,"column_end":21}},{"value":"/ // A service returning Result<Record, _>","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tower-0.4.13\\src\\util\\mod.rs","byte_start":28556,"byte_end":28600,"line_start":165,"line_end":165,"column_start":5,"column_end":49}},{"value":"/ let service = DatabaseService::new(\"127.0.0.1:8080\");","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tower-0.4.13\\src\\util\\mod.rs","byte_start":28605,"byte_end":28662,"line_start":166,"line_end":166,"column_start":5,"column_end":62}},{"value":"/","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tower-0.4.13\\src\\util\\mod.rs","byte_start":28667,"byte_end":28670,"line_start":167,"line_end":167,"column_start":5,"column_end":8}},{"value":"/ // Map the response into a new response","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tower-0.4.13\\src\\util\\mod.rs","byte_start":28675,"byte_end":28718,"line_start":168,"line_end":168,"column_start":5,"column_end":48}},{"value":"/ let mut new_service = service.and_then(|record: Record| async move {","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tower-0.4.13\\src\\util\\mod.rs","byte_start":28723,"byte_end":28795,"line_start":169,"line_end":169,"column_start":5,"column_end":77}},{"value":"/     let name = record.name;","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tower-0.4.13\\src\\util\\mod.rs","byte_start":28800,"byte_end":28831,"line_start":170,"line_end":170,"column_start":5,"column_end":36}},{"value":"/     avatar_lookup(name).await","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tower-0.4.13\\src\\util\\mod.rs","byte_start":28836,"byte_end":28869,"line_start":171,"line_end":171,"column_start":5,"column_end":38}},{"value":"/ });","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tower-0.4.13\\src\\util\\mod.rs","byte_start":28874,"byte_end":28881,"line_start":172,"line_end":172,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tower-0.4.13\\src\\util\\mod.rs","byte_start":28886,"byte_end":28889,"line_start":173,"line_end":173,"column_start":5,"column_end":8}},{"value":"/ // Call the new service","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tower-0.4.13\\src\\util\\mod.rs","byte_start":28894,"byte_end":28921,"line_start":174,"line_end":174,"column_start":5,"column_end":32}},{"value":"/ let id = 13;","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tower-0.4.13\\src\\util\\mod.rs","byte_start":28926,"byte_end":28942,"line_start":175,"line_end":175,"column_start":5,"column_end":21}},{"value":"/ let avatar = new_service.call(id).await.unwrap();","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tower-0.4.13\\src\\util\\mod.rs","byte_start":28947,"byte_end":29000,"line_start":176,"line_end":176,"column_start":5,"column_end":58}},{"value":"/ #    };","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tower-0.4.13\\src\\util\\mod.rs","byte_start":29005,"byte_end":29016,"line_start":177,"line_end":177,"column_start":5,"column_end":16}},{"value":"/ # }","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tower-0.4.13\\src\\util\\mod.rs","byte_start":29021,"byte_end":29028,"line_start":178,"line_end":178,"column_start":5,"column_end":12}},{"value":"/ ```","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tower-0.4.13\\src\\util\\mod.rs","byte_start":29033,"byte_end":29040,"line_start":179,"line_end":179,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":1458},"span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tower-0.4.13\\src\\util\\mod.rs","byte_start":31198,"byte_end":31210,"line_start":249,"line_end":249,"column_start":8,"column_end":20},"name":"map_response","qualname":"::util::ServiceExt::map_response","value":"pub fn map_response<F, Response>(Self, F) -> MapResponse<Self, F> where\nSelf: Sized, F: FnOnce(Self::Response) -> Response + Clone","parent":{"krate":0,"index":1448},"children":[],"decl_id":null,"docs":" Maps this service's response value to a different value. This does not\n alter the behaviour of the [`poll_ready`] method.","sig":null,"attributes":[{"value":"/ Maps this service's response value to a different value. This does not","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tower-0.4.13\\src\\util\\mod.rs","byte_start":29188,"byte_end":29262,"line_start":188,"line_end":188,"column_start":5,"column_end":79}},{"value":"/ alter the behaviour of the [`poll_ready`] method.","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tower-0.4.13\\src\\util\\mod.rs","byte_start":29267,"byte_end":29320,"line_start":189,"line_end":189,"column_start":5,"column_end":58}},{"value":"/","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tower-0.4.13\\src\\util\\mod.rs","byte_start":29325,"byte_end":29328,"line_start":190,"line_end":190,"column_start":5,"column_end":8}},{"value":"/ This method can be used to change the [`Response`] type of the service","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tower-0.4.13\\src\\util\\mod.rs","byte_start":29333,"byte_end":29407,"line_start":191,"line_end":191,"column_start":5,"column_end":79}},{"value":"/ into a different type. It is similar to the [`Result::map`]","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tower-0.4.13\\src\\util\\mod.rs","byte_start":29412,"byte_end":29475,"line_start":192,"line_end":192,"column_start":5,"column_end":68}},{"value":"/ method. You can use this method to chain along a computation once the","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tower-0.4.13\\src\\util\\mod.rs","byte_start":29480,"byte_end":29553,"line_start":193,"line_end":193,"column_start":5,"column_end":78}},{"value":"/ service's response has been resolved.","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tower-0.4.13\\src\\util\\mod.rs","byte_start":29558,"byte_end":29599,"line_start":194,"line_end":194,"column_start":5,"column_end":46}},{"value":"/","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tower-0.4.13\\src\\util\\mod.rs","byte_start":29604,"byte_end":29607,"line_start":195,"line_end":195,"column_start":5,"column_end":8}},{"value":"/ [`Response`]: crate::Service::Response","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tower-0.4.13\\src\\util\\mod.rs","byte_start":29612,"byte_end":29654,"line_start":196,"line_end":196,"column_start":5,"column_end":47}},{"value":"/ [`poll_ready`]: crate::Service::poll_ready","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tower-0.4.13\\src\\util\\mod.rs","byte_start":29659,"byte_end":29705,"line_start":197,"line_end":197,"column_start":5,"column_end":51}},{"value":"/","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tower-0.4.13\\src\\util\\mod.rs","byte_start":29710,"byte_end":29713,"line_start":198,"line_end":198,"column_start":5,"column_end":8}},{"value":"/ # Example","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tower-0.4.13\\src\\util\\mod.rs","byte_start":29718,"byte_end":29731,"line_start":199,"line_end":199,"column_start":5,"column_end":18}},{"value":"/ ```","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tower-0.4.13\\src\\util\\mod.rs","byte_start":29736,"byte_end":29743,"line_start":200,"line_end":200,"column_start":5,"column_end":12}},{"value":"/ # use std::task::{Poll, Context};","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tower-0.4.13\\src\\util\\mod.rs","byte_start":29748,"byte_end":29785,"line_start":201,"line_end":201,"column_start":5,"column_end":42}},{"value":"/ # use tower::{Service, ServiceExt};","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tower-0.4.13\\src\\util\\mod.rs","byte_start":29790,"byte_end":29829,"line_start":202,"line_end":202,"column_start":5,"column_end":44}},{"value":"/ #","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tower-0.4.13\\src\\util\\mod.rs","byte_start":29834,"byte_end":29839,"line_start":203,"line_end":203,"column_start":5,"column_end":10}},{"value":"/ # struct DatabaseService;","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tower-0.4.13\\src\\util\\mod.rs","byte_start":29844,"byte_end":29873,"line_start":204,"line_end":204,"column_start":5,"column_end":34}},{"value":"/ # impl DatabaseService {","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tower-0.4.13\\src\\util\\mod.rs","byte_start":29878,"byte_end":29906,"line_start":205,"line_end":205,"column_start":5,"column_end":33}},{"value":"/ #   fn new(address: &str) -> Self {","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tower-0.4.13\\src\\util\\mod.rs","byte_start":29911,"byte_end":29950,"line_start":206,"line_end":206,"column_start":5,"column_end":44}},{"value":"/ #       DatabaseService","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tower-0.4.13\\src\\util\\mod.rs","byte_start":29955,"byte_end":29982,"line_start":207,"line_end":207,"column_start":5,"column_end":32}},{"value":"/ #   }","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tower-0.4.13\\src\\util\\mod.rs","byte_start":29987,"byte_end":29996,"line_start":208,"line_end":208,"column_start":5,"column_end":14}},{"value":"/ # }","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tower-0.4.13\\src\\util\\mod.rs","byte_start":30001,"byte_end":30008,"line_start":209,"line_end":209,"column_start":5,"column_end":12}},{"value":"/ #","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tower-0.4.13\\src\\util\\mod.rs","byte_start":30013,"byte_end":30018,"line_start":210,"line_end":210,"column_start":5,"column_end":10}},{"value":"/ # struct Record {","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tower-0.4.13\\src\\util\\mod.rs","byte_start":30023,"byte_end":30044,"line_start":211,"line_end":211,"column_start":5,"column_end":26}},{"value":"/ #   pub name: String,","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tower-0.4.13\\src\\util\\mod.rs","byte_start":30049,"byte_end":30074,"line_start":212,"line_end":212,"column_start":5,"column_end":30}},{"value":"/ #   pub age: u16","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tower-0.4.13\\src\\util\\mod.rs","byte_start":30079,"byte_end":30099,"line_start":213,"line_end":213,"column_start":5,"column_end":25}},{"value":"/ # }","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tower-0.4.13\\src\\util\\mod.rs","byte_start":30104,"byte_end":30111,"line_start":214,"line_end":214,"column_start":5,"column_end":12}},{"value":"/ #","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tower-0.4.13\\src\\util\\mod.rs","byte_start":30116,"byte_end":30121,"line_start":215,"line_end":215,"column_start":5,"column_end":10}},{"value":"/ # impl Service<u32> for DatabaseService {","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tower-0.4.13\\src\\util\\mod.rs","byte_start":30126,"byte_end":30171,"line_start":216,"line_end":216,"column_start":5,"column_end":50}},{"value":"/ #   type Response = Record;","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tower-0.4.13\\src\\util\\mod.rs","byte_start":30176,"byte_end":30207,"line_start":217,"line_end":217,"column_start":5,"column_end":36}},{"value":"/ #   type Error = u8;","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tower-0.4.13\\src\\util\\mod.rs","byte_start":30212,"byte_end":30236,"line_start":218,"line_end":218,"column_start":5,"column_end":29}},{"value":"/ #   type Future = futures_util::future::Ready<Result<Record, u8>>;","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tower-0.4.13\\src\\util\\mod.rs","byte_start":30241,"byte_end":30311,"line_start":219,"line_end":219,"column_start":5,"column_end":75}},{"value":"/ #","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tower-0.4.13\\src\\util\\mod.rs","byte_start":30316,"byte_end":30321,"line_start":220,"line_end":220,"column_start":5,"column_end":10}},{"value":"/ #   fn poll_ready(&mut self, cx: &mut Context<'_>) -> Poll<Result<(), Self::Error>> {","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tower-0.4.13\\src\\util\\mod.rs","byte_start":30326,"byte_end":30415,"line_start":221,"line_end":221,"column_start":5,"column_end":94}},{"value":"/ #       Poll::Ready(Ok(()))","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tower-0.4.13\\src\\util\\mod.rs","byte_start":30420,"byte_end":30451,"line_start":222,"line_end":222,"column_start":5,"column_end":36}},{"value":"/ #   }","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tower-0.4.13\\src\\util\\mod.rs","byte_start":30456,"byte_end":30465,"line_start":223,"line_end":223,"column_start":5,"column_end":14}},{"value":"/ #","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tower-0.4.13\\src\\util\\mod.rs","byte_start":30470,"byte_end":30475,"line_start":224,"line_end":224,"column_start":5,"column_end":10}},{"value":"/ #   fn call(&mut self, request: u32) -> Self::Future {","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tower-0.4.13\\src\\util\\mod.rs","byte_start":30480,"byte_end":30538,"line_start":225,"line_end":225,"column_start":5,"column_end":63}},{"value":"/ #       futures_util::future::ready(Ok(Record { name: \"Jack\".into(), age: 32 }))","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tower-0.4.13\\src\\util\\mod.rs","byte_start":30543,"byte_end":30627,"line_start":226,"line_end":226,"column_start":5,"column_end":89}},{"value":"/ #   }","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tower-0.4.13\\src\\util\\mod.rs","byte_start":30632,"byte_end":30641,"line_start":227,"line_end":227,"column_start":5,"column_end":14}},{"value":"/ # }","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tower-0.4.13\\src\\util\\mod.rs","byte_start":30646,"byte_end":30653,"line_start":228,"line_end":228,"column_start":5,"column_end":12}},{"value":"/ #","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tower-0.4.13\\src\\util\\mod.rs","byte_start":30658,"byte_end":30663,"line_start":229,"line_end":229,"column_start":5,"column_end":10}},{"value":"/ # fn main() {","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tower-0.4.13\\src\\util\\mod.rs","byte_start":30668,"byte_end":30685,"line_start":230,"line_end":230,"column_start":5,"column_end":22}},{"value":"/ #    async {","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tower-0.4.13\\src\\util\\mod.rs","byte_start":30690,"byte_end":30706,"line_start":231,"line_end":231,"column_start":5,"column_end":21}},{"value":"/ // A service returning Result<Record, _>","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tower-0.4.13\\src\\util\\mod.rs","byte_start":30711,"byte_end":30755,"line_start":232,"line_end":232,"column_start":5,"column_end":49}},{"value":"/ let service = DatabaseService::new(\"127.0.0.1:8080\");","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tower-0.4.13\\src\\util\\mod.rs","byte_start":30760,"byte_end":30817,"line_start":233,"line_end":233,"column_start":5,"column_end":62}},{"value":"/","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tower-0.4.13\\src\\util\\mod.rs","byte_start":30822,"byte_end":30825,"line_start":234,"line_end":234,"column_start":5,"column_end":8}},{"value":"/ // Map the response into a new response","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tower-0.4.13\\src\\util\\mod.rs","byte_start":30830,"byte_end":30873,"line_start":235,"line_end":235,"column_start":5,"column_end":48}},{"value":"/ let mut new_service = service.map_response(|record| record.name);","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tower-0.4.13\\src\\util\\mod.rs","byte_start":30878,"byte_end":30947,"line_start":236,"line_end":236,"column_start":5,"column_end":74}},{"value":"/","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tower-0.4.13\\src\\util\\mod.rs","byte_start":30952,"byte_end":30955,"line_start":237,"line_end":237,"column_start":5,"column_end":8}},{"value":"/ // Call the new service","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tower-0.4.13\\src\\util\\mod.rs","byte_start":30960,"byte_end":30987,"line_start":238,"line_end":238,"column_start":5,"column_end":32}},{"value":"/ let id = 13;","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tower-0.4.13\\src\\util\\mod.rs","byte_start":30992,"byte_end":31008,"line_start":239,"line_end":239,"column_start":5,"column_end":21}},{"value":"/ let name = new_service","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tower-0.4.13\\src\\util\\mod.rs","byte_start":31013,"byte_end":31039,"line_start":240,"line_end":240,"column_start":5,"column_end":31}},{"value":"/     .ready()","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tower-0.4.13\\src\\util\\mod.rs","byte_start":31044,"byte_end":31060,"line_start":241,"line_end":241,"column_start":5,"column_end":21}},{"value":"/     .await?","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tower-0.4.13\\src\\util\\mod.rs","byte_start":31065,"byte_end":31080,"line_start":242,"line_end":242,"column_start":5,"column_end":20}},{"value":"/     .call(id)","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tower-0.4.13\\src\\util\\mod.rs","byte_start":31085,"byte_end":31102,"line_start":243,"line_end":243,"column_start":5,"column_end":22}},{"value":"/     .await?;","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tower-0.4.13\\src\\util\\mod.rs","byte_start":31107,"byte_end":31123,"line_start":244,"line_end":244,"column_start":5,"column_end":21}},{"value":"/ # Ok::<(), u8>(())","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tower-0.4.13\\src\\util\\mod.rs","byte_start":31128,"byte_end":31150,"line_start":245,"line_end":245,"column_start":5,"column_end":27}},{"value":"/ #    };","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tower-0.4.13\\src\\util\\mod.rs","byte_start":31155,"byte_end":31166,"line_start":246,"line_end":246,"column_start":5,"column_end":16}},{"value":"/ # }","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tower-0.4.13\\src\\util\\mod.rs","byte_start":31171,"byte_end":31178,"line_start":247,"line_end":247,"column_start":5,"column_end":12}},{"value":"/ ```","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tower-0.4.13\\src\\util\\mod.rs","byte_start":31183,"byte_end":31190,"line_start":248,"line_end":248,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":1461},"span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tower-0.4.13\\src\\util\\mod.rs","byte_start":33270,"byte_end":33277,"line_start":317,"line_end":317,"column_start":8,"column_end":15},"name":"map_err","qualname":"::util::ServiceExt::map_err","value":"pub fn map_err<F, Error>(Self, F) -> MapErr<Self, F> where Self: Sized,\nF: FnOnce(Self::Error) -> Error + Clone","parent":{"krate":0,"index":1448},"children":[],"decl_id":null,"docs":" Maps this service's error value to a different value. This does not\n alter the behaviour of the [`poll_ready`] method.","sig":null,"attributes":[{"value":"/ Maps this service's error value to a different value. This does not","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tower-0.4.13\\src\\util\\mod.rs","byte_start":31397,"byte_end":31468,"line_start":257,"line_end":257,"column_start":5,"column_end":76}},{"value":"/ alter the behaviour of the [`poll_ready`] method.","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tower-0.4.13\\src\\util\\mod.rs","byte_start":31473,"byte_end":31526,"line_start":258,"line_end":258,"column_start":5,"column_end":58}},{"value":"/","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tower-0.4.13\\src\\util\\mod.rs","byte_start":31531,"byte_end":31534,"line_start":259,"line_end":259,"column_start":5,"column_end":8}},{"value":"/ This method can be used to change the [`Error`] type of the service","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tower-0.4.13\\src\\util\\mod.rs","byte_start":31539,"byte_end":31610,"line_start":260,"line_end":260,"column_start":5,"column_end":76}},{"value":"/ into a different type. It is similar to the [`Result::map_err`] method.","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tower-0.4.13\\src\\util\\mod.rs","byte_start":31615,"byte_end":31690,"line_start":261,"line_end":261,"column_start":5,"column_end":80}},{"value":"/","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tower-0.4.13\\src\\util\\mod.rs","byte_start":31695,"byte_end":31698,"line_start":262,"line_end":262,"column_start":5,"column_end":8}},{"value":"/ [`Error`]: crate::Service::Error","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tower-0.4.13\\src\\util\\mod.rs","byte_start":31703,"byte_end":31739,"line_start":263,"line_end":263,"column_start":5,"column_end":41}},{"value":"/ [`poll_ready`]: crate::Service::poll_ready","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tower-0.4.13\\src\\util\\mod.rs","byte_start":31744,"byte_end":31790,"line_start":264,"line_end":264,"column_start":5,"column_end":51}},{"value":"/","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tower-0.4.13\\src\\util\\mod.rs","byte_start":31795,"byte_end":31798,"line_start":265,"line_end":265,"column_start":5,"column_end":8}},{"value":"/ # Example","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tower-0.4.13\\src\\util\\mod.rs","byte_start":31803,"byte_end":31816,"line_start":266,"line_end":266,"column_start":5,"column_end":18}},{"value":"/ ```","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tower-0.4.13\\src\\util\\mod.rs","byte_start":31821,"byte_end":31828,"line_start":267,"line_end":267,"column_start":5,"column_end":12}},{"value":"/ # use std::task::{Poll, Context};","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tower-0.4.13\\src\\util\\mod.rs","byte_start":31833,"byte_end":31870,"line_start":268,"line_end":268,"column_start":5,"column_end":42}},{"value":"/ # use tower::{Service, ServiceExt};","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tower-0.4.13\\src\\util\\mod.rs","byte_start":31875,"byte_end":31914,"line_start":269,"line_end":269,"column_start":5,"column_end":44}},{"value":"/ #","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tower-0.4.13\\src\\util\\mod.rs","byte_start":31919,"byte_end":31924,"line_start":270,"line_end":270,"column_start":5,"column_end":10}},{"value":"/ # struct DatabaseService;","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tower-0.4.13\\src\\util\\mod.rs","byte_start":31929,"byte_end":31958,"line_start":271,"line_end":271,"column_start":5,"column_end":34}},{"value":"/ # impl DatabaseService {","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tower-0.4.13\\src\\util\\mod.rs","byte_start":31963,"byte_end":31991,"line_start":272,"line_end":272,"column_start":5,"column_end":33}},{"value":"/ #   fn new(address: &str) -> Self {","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tower-0.4.13\\src\\util\\mod.rs","byte_start":31996,"byte_end":32035,"line_start":273,"line_end":273,"column_start":5,"column_end":44}},{"value":"/ #       DatabaseService","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tower-0.4.13\\src\\util\\mod.rs","byte_start":32040,"byte_end":32067,"line_start":274,"line_end":274,"column_start":5,"column_end":32}},{"value":"/ #   }","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tower-0.4.13\\src\\util\\mod.rs","byte_start":32072,"byte_end":32081,"line_start":275,"line_end":275,"column_start":5,"column_end":14}},{"value":"/ # }","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tower-0.4.13\\src\\util\\mod.rs","byte_start":32086,"byte_end":32093,"line_start":276,"line_end":276,"column_start":5,"column_end":12}},{"value":"/ #","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tower-0.4.13\\src\\util\\mod.rs","byte_start":32098,"byte_end":32103,"line_start":277,"line_end":277,"column_start":5,"column_end":10}},{"value":"/ # struct Error {","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tower-0.4.13\\src\\util\\mod.rs","byte_start":32108,"byte_end":32128,"line_start":278,"line_end":278,"column_start":5,"column_end":25}},{"value":"/ #   pub code: u32,","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tower-0.4.13\\src\\util\\mod.rs","byte_start":32133,"byte_end":32155,"line_start":279,"line_end":279,"column_start":5,"column_end":27}},{"value":"/ #   pub message: String","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tower-0.4.13\\src\\util\\mod.rs","byte_start":32160,"byte_end":32187,"line_start":280,"line_end":280,"column_start":5,"column_end":32}},{"value":"/ # }","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tower-0.4.13\\src\\util\\mod.rs","byte_start":32192,"byte_end":32199,"line_start":281,"line_end":281,"column_start":5,"column_end":12}},{"value":"/ #","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tower-0.4.13\\src\\util\\mod.rs","byte_start":32204,"byte_end":32209,"line_start":282,"line_end":282,"column_start":5,"column_end":10}},{"value":"/ # impl Service<u32> for DatabaseService {","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tower-0.4.13\\src\\util\\mod.rs","byte_start":32214,"byte_end":32259,"line_start":283,"line_end":283,"column_start":5,"column_end":50}},{"value":"/ #   type Response = String;","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tower-0.4.13\\src\\util\\mod.rs","byte_start":32264,"byte_end":32295,"line_start":284,"line_end":284,"column_start":5,"column_end":36}},{"value":"/ #   type Error = Error;","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tower-0.4.13\\src\\util\\mod.rs","byte_start":32300,"byte_end":32327,"line_start":285,"line_end":285,"column_start":5,"column_end":32}},{"value":"/ #   type Future = futures_util::future::Ready<Result<String, Error>>;","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tower-0.4.13\\src\\util\\mod.rs","byte_start":32332,"byte_end":32405,"line_start":286,"line_end":286,"column_start":5,"column_end":78}},{"value":"/ #","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tower-0.4.13\\src\\util\\mod.rs","byte_start":32410,"byte_end":32415,"line_start":287,"line_end":287,"column_start":5,"column_end":10}},{"value":"/ #   fn poll_ready(&mut self, cx: &mut Context<'_>) -> Poll<Result<(), Self::Error>> {","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tower-0.4.13\\src\\util\\mod.rs","byte_start":32420,"byte_end":32509,"line_start":288,"line_end":288,"column_start":5,"column_end":94}},{"value":"/ #       Poll::Ready(Ok(()))","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tower-0.4.13\\src\\util\\mod.rs","byte_start":32514,"byte_end":32545,"line_start":289,"line_end":289,"column_start":5,"column_end":36}},{"value":"/ #   }","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tower-0.4.13\\src\\util\\mod.rs","byte_start":32550,"byte_end":32559,"line_start":290,"line_end":290,"column_start":5,"column_end":14}},{"value":"/ #","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tower-0.4.13\\src\\util\\mod.rs","byte_start":32564,"byte_end":32569,"line_start":291,"line_end":291,"column_start":5,"column_end":10}},{"value":"/ #   fn call(&mut self, request: u32) -> Self::Future {","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tower-0.4.13\\src\\util\\mod.rs","byte_start":32574,"byte_end":32632,"line_start":292,"line_end":292,"column_start":5,"column_end":63}},{"value":"/ #       futures_util::future::ready(Ok(String::new()))","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tower-0.4.13\\src\\util\\mod.rs","byte_start":32637,"byte_end":32695,"line_start":293,"line_end":293,"column_start":5,"column_end":63}},{"value":"/ #   }","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tower-0.4.13\\src\\util\\mod.rs","byte_start":32700,"byte_end":32709,"line_start":294,"line_end":294,"column_start":5,"column_end":14}},{"value":"/ # }","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tower-0.4.13\\src\\util\\mod.rs","byte_start":32714,"byte_end":32721,"line_start":295,"line_end":295,"column_start":5,"column_end":12}},{"value":"/ #","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tower-0.4.13\\src\\util\\mod.rs","byte_start":32726,"byte_end":32731,"line_start":296,"line_end":296,"column_start":5,"column_end":10}},{"value":"/ # fn main() {","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tower-0.4.13\\src\\util\\mod.rs","byte_start":32736,"byte_end":32753,"line_start":297,"line_end":297,"column_start":5,"column_end":22}},{"value":"/ #   async {","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tower-0.4.13\\src\\util\\mod.rs","byte_start":32758,"byte_end":32773,"line_start":298,"line_end":298,"column_start":5,"column_end":20}},{"value":"/ // A service returning Result<_, Error>","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tower-0.4.13\\src\\util\\mod.rs","byte_start":32778,"byte_end":32821,"line_start":299,"line_end":299,"column_start":5,"column_end":48}},{"value":"/ let service = DatabaseService::new(\"127.0.0.1:8080\");","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tower-0.4.13\\src\\util\\mod.rs","byte_start":32826,"byte_end":32883,"line_start":300,"line_end":300,"column_start":5,"column_end":62}},{"value":"/","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tower-0.4.13\\src\\util\\mod.rs","byte_start":32888,"byte_end":32891,"line_start":301,"line_end":301,"column_start":5,"column_end":8}},{"value":"/ // Map the error to a new error","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tower-0.4.13\\src\\util\\mod.rs","byte_start":32896,"byte_end":32931,"line_start":302,"line_end":302,"column_start":5,"column_end":40}},{"value":"/ let mut new_service = service.map_err(|err| err.code);","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tower-0.4.13\\src\\util\\mod.rs","byte_start":32936,"byte_end":32994,"line_start":303,"line_end":303,"column_start":5,"column_end":63}},{"value":"/","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tower-0.4.13\\src\\util\\mod.rs","byte_start":32999,"byte_end":33002,"line_start":304,"line_end":304,"column_start":5,"column_end":8}},{"value":"/ // Call the new service","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tower-0.4.13\\src\\util\\mod.rs","byte_start":33007,"byte_end":33034,"line_start":305,"line_end":305,"column_start":5,"column_end":32}},{"value":"/ let id = 13;","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tower-0.4.13\\src\\util\\mod.rs","byte_start":33039,"byte_end":33055,"line_start":306,"line_end":306,"column_start":5,"column_end":21}},{"value":"/ let code = new_service","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tower-0.4.13\\src\\util\\mod.rs","byte_start":33060,"byte_end":33086,"line_start":307,"line_end":307,"column_start":5,"column_end":31}},{"value":"/     .ready()","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tower-0.4.13\\src\\util\\mod.rs","byte_start":33091,"byte_end":33107,"line_start":308,"line_end":308,"column_start":5,"column_end":21}},{"value":"/     .await?","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tower-0.4.13\\src\\util\\mod.rs","byte_start":33112,"byte_end":33127,"line_start":309,"line_end":309,"column_start":5,"column_end":20}},{"value":"/     .call(id)","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tower-0.4.13\\src\\util\\mod.rs","byte_start":33132,"byte_end":33149,"line_start":310,"line_end":310,"column_start":5,"column_end":22}},{"value":"/     .await","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tower-0.4.13\\src\\util\\mod.rs","byte_start":33154,"byte_end":33168,"line_start":311,"line_end":311,"column_start":5,"column_end":19}},{"value":"/     .unwrap_err();","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tower-0.4.13\\src\\util\\mod.rs","byte_start":33173,"byte_end":33195,"line_start":312,"line_end":312,"column_start":5,"column_end":27}},{"value":"/ # Ok::<(), u32>(())","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tower-0.4.13\\src\\util\\mod.rs","byte_start":33200,"byte_end":33223,"line_start":313,"line_end":313,"column_start":5,"column_end":28}},{"value":"/ #   };","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tower-0.4.13\\src\\util\\mod.rs","byte_start":33228,"byte_end":33238,"line_start":314,"line_end":314,"column_start":5,"column_end":15}},{"value":"/ # }","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tower-0.4.13\\src\\util\\mod.rs","byte_start":33243,"byte_end":33250,"line_start":315,"line_end":315,"column_start":5,"column_end":12}},{"value":"/ ```","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tower-0.4.13\\src\\util\\mod.rs","byte_start":33255,"byte_end":33262,"line_start":316,"line_end":316,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":1464},"span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tower-0.4.13\\src\\util\\mod.rs","byte_start":41311,"byte_end":41321,"line_start":546,"line_end":546,"column_start":8,"column_end":18},"name":"map_result","qualname":"::util::ServiceExt::map_result","value":"pub fn map_result<F, Response, Error>(Self, F) -> MapResult<Self, F> where\nSelf: Sized, Error: From<Self::Error>,\nF: FnOnce(Result<Self::Response, Self::Error>) -> Result<Response, Error> +\nClone","parent":{"krate":0,"index":1448},"children":[],"decl_id":null,"docs":" Maps this service's result type (`Result<Self::Response, Self::Error>`)\n to a different value, regardless of whether the future succeeds or\n fails.","sig":null,"attributes":[{"value":"/ Maps this service's result type (`Result<Self::Response, Self::Error>`)","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tower-0.4.13\\src\\util\\mod.rs","byte_start":33445,"byte_end":33520,"line_start":325,"line_end":325,"column_start":5,"column_end":80}},{"value":"/ to a different value, regardless of whether the future succeeds or","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tower-0.4.13\\src\\util\\mod.rs","byte_start":33525,"byte_end":33595,"line_start":326,"line_end":326,"column_start":5,"column_end":75}},{"value":"/ fails.","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tower-0.4.13\\src\\util\\mod.rs","byte_start":33600,"byte_end":33610,"line_start":327,"line_end":327,"column_start":5,"column_end":15}},{"value":"/","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tower-0.4.13\\src\\util\\mod.rs","byte_start":33615,"byte_end":33618,"line_start":328,"line_end":328,"column_start":5,"column_end":8}},{"value":"/ This is similar to the [`map_response`] and [`map_err`] combinators,","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tower-0.4.13\\src\\util\\mod.rs","byte_start":33623,"byte_end":33695,"line_start":329,"line_end":329,"column_start":5,"column_end":77}},{"value":"/ except that the *same* function is invoked when the service's future","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tower-0.4.13\\src\\util\\mod.rs","byte_start":33700,"byte_end":33772,"line_start":330,"line_end":330,"column_start":5,"column_end":77}},{"value":"/ completes, whether it completes successfully or fails. This function","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tower-0.4.13\\src\\util\\mod.rs","byte_start":33777,"byte_end":33849,"line_start":331,"line_end":331,"column_start":5,"column_end":77}},{"value":"/ takes the [`Result`] returned by the service's future, and returns a","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tower-0.4.13\\src\\util\\mod.rs","byte_start":33854,"byte_end":33926,"line_start":332,"line_end":332,"column_start":5,"column_end":77}},{"value":"/ [`Result`].","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tower-0.4.13\\src\\util\\mod.rs","byte_start":33931,"byte_end":33946,"line_start":333,"line_end":333,"column_start":5,"column_end":20}},{"value":"/","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tower-0.4.13\\src\\util\\mod.rs","byte_start":33951,"byte_end":33954,"line_start":334,"line_end":334,"column_start":5,"column_end":8}},{"value":"/ Like the standard library's [`Result::and_then`], this method can be","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tower-0.4.13\\src\\util\\mod.rs","byte_start":33959,"byte_end":34031,"line_start":335,"line_end":335,"column_start":5,"column_end":77}},{"value":"/ used to implement control flow based on `Result` values. For example, it","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tower-0.4.13\\src\\util\\mod.rs","byte_start":34036,"byte_end":34112,"line_start":336,"line_end":336,"column_start":5,"column_end":81}},{"value":"/ may be used to implement error recovery, by turning some [`Err`]","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tower-0.4.13\\src\\util\\mod.rs","byte_start":34117,"byte_end":34185,"line_start":337,"line_end":337,"column_start":5,"column_end":73}},{"value":"/ responses from the service into [`Ok`] responses. Similarly, some","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tower-0.4.13\\src\\util\\mod.rs","byte_start":34190,"byte_end":34259,"line_start":338,"line_end":338,"column_start":5,"column_end":74}},{"value":"/ successful responses from the service could be rejected, by returning an","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tower-0.4.13\\src\\util\\mod.rs","byte_start":34264,"byte_end":34340,"line_start":339,"line_end":339,"column_start":5,"column_end":81}},{"value":"/ [`Err`] conditionally, depending on the value inside the [`Ok`.] Finally,","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tower-0.4.13\\src\\util\\mod.rs","byte_start":34345,"byte_end":34422,"line_start":340,"line_end":340,"column_start":5,"column_end":82}},{"value":"/ this method can also be used to implement behaviors that must run when a","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tower-0.4.13\\src\\util\\mod.rs","byte_start":34427,"byte_end":34503,"line_start":341,"line_end":341,"column_start":5,"column_end":81}},{"value":"/ service's future completes, regardless of whether it succeeded or failed.","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tower-0.4.13\\src\\util\\mod.rs","byte_start":34508,"byte_end":34585,"line_start":342,"line_end":342,"column_start":5,"column_end":82}},{"value":"/","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tower-0.4.13\\src\\util\\mod.rs","byte_start":34590,"byte_end":34593,"line_start":343,"line_end":343,"column_start":5,"column_end":8}},{"value":"/ This method can be used to change the [`Response`] type of the service","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tower-0.4.13\\src\\util\\mod.rs","byte_start":34598,"byte_end":34672,"line_start":344,"line_end":344,"column_start":5,"column_end":79}},{"value":"/ into a different type. It can also be used to change the [`Error`] type","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tower-0.4.13\\src\\util\\mod.rs","byte_start":34677,"byte_end":34752,"line_start":345,"line_end":345,"column_start":5,"column_end":80}},{"value":"/ of the service. However, because the [`map_result`] function is not applied","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tower-0.4.13\\src\\util\\mod.rs","byte_start":34757,"byte_end":34836,"line_start":346,"line_end":346,"column_start":5,"column_end":84}},{"value":"/ to the errors returned by the service's [`poll_ready`] method, it must","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tower-0.4.13\\src\\util\\mod.rs","byte_start":34841,"byte_end":34915,"line_start":347,"line_end":347,"column_start":5,"column_end":79}},{"value":"/ be possible to convert the service's [`Error`] type into the error type","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tower-0.4.13\\src\\util\\mod.rs","byte_start":34920,"byte_end":34995,"line_start":348,"line_end":348,"column_start":5,"column_end":80}},{"value":"/ returned by the [`map_result`] function. This is trivial when the function","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tower-0.4.13\\src\\util\\mod.rs","byte_start":35000,"byte_end":35078,"line_start":349,"line_end":349,"column_start":5,"column_end":83}},{"value":"/ returns the same error type as the service, but in other cases, it can","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tower-0.4.13\\src\\util\\mod.rs","byte_start":35083,"byte_end":35157,"line_start":350,"line_end":350,"column_start":5,"column_end":79}},{"value":"/ be useful to use [`BoxError`] to erase differing error types.","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tower-0.4.13\\src\\util\\mod.rs","byte_start":35162,"byte_end":35227,"line_start":351,"line_end":351,"column_start":5,"column_end":70}},{"value":"/","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tower-0.4.13\\src\\util\\mod.rs","byte_start":35232,"byte_end":35235,"line_start":352,"line_end":352,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tower-0.4.13\\src\\util\\mod.rs","byte_start":35240,"byte_end":35254,"line_start":353,"line_end":353,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tower-0.4.13\\src\\util\\mod.rs","byte_start":35259,"byte_end":35262,"line_start":354,"line_end":354,"column_start":5,"column_end":8}},{"value":"/ Recovering from certain errors:","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tower-0.4.13\\src\\util\\mod.rs","byte_start":35267,"byte_end":35302,"line_start":355,"line_end":355,"column_start":5,"column_end":40}},{"value":"/","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tower-0.4.13\\src\\util\\mod.rs","byte_start":35307,"byte_end":35310,"line_start":356,"line_end":356,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tower-0.4.13\\src\\util\\mod.rs","byte_start":35315,"byte_end":35322,"line_start":357,"line_end":357,"column_start":5,"column_end":12}},{"value":"/ # use std::task::{Poll, Context};","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tower-0.4.13\\src\\util\\mod.rs","byte_start":35327,"byte_end":35364,"line_start":358,"line_end":358,"column_start":5,"column_end":42}},{"value":"/ # use tower::{Service, ServiceExt};","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tower-0.4.13\\src\\util\\mod.rs","byte_start":35369,"byte_end":35408,"line_start":359,"line_end":359,"column_start":5,"column_end":44}},{"value":"/ #","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tower-0.4.13\\src\\util\\mod.rs","byte_start":35413,"byte_end":35418,"line_start":360,"line_end":360,"column_start":5,"column_end":10}},{"value":"/ # struct DatabaseService;","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tower-0.4.13\\src\\util\\mod.rs","byte_start":35423,"byte_end":35452,"line_start":361,"line_end":361,"column_start":5,"column_end":34}},{"value":"/ # impl DatabaseService {","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tower-0.4.13\\src\\util\\mod.rs","byte_start":35457,"byte_end":35485,"line_start":362,"line_end":362,"column_start":5,"column_end":33}},{"value":"/ #   fn new(address: &str) -> Self {","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tower-0.4.13\\src\\util\\mod.rs","byte_start":35490,"byte_end":35529,"line_start":363,"line_end":363,"column_start":5,"column_end":44}},{"value":"/ #       DatabaseService","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tower-0.4.13\\src\\util\\mod.rs","byte_start":35534,"byte_end":35561,"line_start":364,"line_end":364,"column_start":5,"column_end":32}},{"value":"/ #   }","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tower-0.4.13\\src\\util\\mod.rs","byte_start":35566,"byte_end":35575,"line_start":365,"line_end":365,"column_start":5,"column_end":14}},{"value":"/ # }","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tower-0.4.13\\src\\util\\mod.rs","byte_start":35580,"byte_end":35587,"line_start":366,"line_end":366,"column_start":5,"column_end":12}},{"value":"/ #","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tower-0.4.13\\src\\util\\mod.rs","byte_start":35592,"byte_end":35597,"line_start":367,"line_end":367,"column_start":5,"column_end":10}},{"value":"/ # struct Record {","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tower-0.4.13\\src\\util\\mod.rs","byte_start":35602,"byte_end":35623,"line_start":368,"line_end":368,"column_start":5,"column_end":26}},{"value":"/ #   pub name: String,","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tower-0.4.13\\src\\util\\mod.rs","byte_start":35628,"byte_end":35653,"line_start":369,"line_end":369,"column_start":5,"column_end":30}},{"value":"/ #   pub age: u16","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tower-0.4.13\\src\\util\\mod.rs","byte_start":35658,"byte_end":35678,"line_start":370,"line_end":370,"column_start":5,"column_end":25}},{"value":"/ # }","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tower-0.4.13\\src\\util\\mod.rs","byte_start":35683,"byte_end":35690,"line_start":371,"line_end":371,"column_start":5,"column_end":12}},{"value":"/ # #[derive(Debug)]","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tower-0.4.13\\src\\util\\mod.rs","byte_start":35695,"byte_end":35717,"line_start":372,"line_end":372,"column_start":5,"column_end":27}},{"value":"/ # enum DbError {","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tower-0.4.13\\src\\util\\mod.rs","byte_start":35722,"byte_end":35742,"line_start":373,"line_end":373,"column_start":5,"column_end":25}},{"value":"/ #   Parse(std::num::ParseIntError),","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tower-0.4.13\\src\\util\\mod.rs","byte_start":35747,"byte_end":35786,"line_start":374,"line_end":374,"column_start":5,"column_end":44}},{"value":"/ #   NoRecordsFound,","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tower-0.4.13\\src\\util\\mod.rs","byte_start":35791,"byte_end":35814,"line_start":375,"line_end":375,"column_start":5,"column_end":28}},{"value":"/ # }","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tower-0.4.13\\src\\util\\mod.rs","byte_start":35819,"byte_end":35826,"line_start":376,"line_end":376,"column_start":5,"column_end":12}},{"value":"/ #","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tower-0.4.13\\src\\util\\mod.rs","byte_start":35831,"byte_end":35836,"line_start":377,"line_end":377,"column_start":5,"column_end":10}},{"value":"/ # impl Service<u32> for DatabaseService {","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tower-0.4.13\\src\\util\\mod.rs","byte_start":35841,"byte_end":35886,"line_start":378,"line_end":378,"column_start":5,"column_end":50}},{"value":"/ #   type Response = Vec<Record>;","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tower-0.4.13\\src\\util\\mod.rs","byte_start":35891,"byte_end":35927,"line_start":379,"line_end":379,"column_start":5,"column_end":41}},{"value":"/ #   type Error = DbError;","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tower-0.4.13\\src\\util\\mod.rs","byte_start":35932,"byte_end":35961,"line_start":380,"line_end":380,"column_start":5,"column_end":34}},{"value":"/ #   type Future = futures_util::future::Ready<Result<Vec<Record>, DbError>>;","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tower-0.4.13\\src\\util\\mod.rs","byte_start":35966,"byte_end":36046,"line_start":381,"line_end":381,"column_start":5,"column_end":85}},{"value":"/ #","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tower-0.4.13\\src\\util\\mod.rs","byte_start":36051,"byte_end":36056,"line_start":382,"line_end":382,"column_start":5,"column_end":10}},{"value":"/ #   fn poll_ready(&mut self, cx: &mut Context<'_>) -> Poll<Result<(), Self::Error>> {","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tower-0.4.13\\src\\util\\mod.rs","byte_start":36061,"byte_end":36150,"line_start":383,"line_end":383,"column_start":5,"column_end":94}},{"value":"/ #       Poll::Ready(Ok(()))","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tower-0.4.13\\src\\util\\mod.rs","byte_start":36155,"byte_end":36186,"line_start":384,"line_end":384,"column_start":5,"column_end":36}},{"value":"/ #   }","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tower-0.4.13\\src\\util\\mod.rs","byte_start":36191,"byte_end":36200,"line_start":385,"line_end":385,"column_start":5,"column_end":14}},{"value":"/ #","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tower-0.4.13\\src\\util\\mod.rs","byte_start":36205,"byte_end":36210,"line_start":386,"line_end":386,"column_start":5,"column_end":10}},{"value":"/ #   fn call(&mut self, request: u32) -> Self::Future {","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tower-0.4.13\\src\\util\\mod.rs","byte_start":36215,"byte_end":36273,"line_start":387,"line_end":387,"column_start":5,"column_end":63}},{"value":"/ #       futures_util::future::ready(Ok(vec![Record { name: \"Jack\".into(), age: 32 }]))","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tower-0.4.13\\src\\util\\mod.rs","byte_start":36278,"byte_end":36368,"line_start":388,"line_end":388,"column_start":5,"column_end":95}},{"value":"/ #   }","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tower-0.4.13\\src\\util\\mod.rs","byte_start":36373,"byte_end":36382,"line_start":389,"line_end":389,"column_start":5,"column_end":14}},{"value":"/ # }","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tower-0.4.13\\src\\util\\mod.rs","byte_start":36387,"byte_end":36394,"line_start":390,"line_end":390,"column_start":5,"column_end":12}},{"value":"/ #","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tower-0.4.13\\src\\util\\mod.rs","byte_start":36399,"byte_end":36404,"line_start":391,"line_end":391,"column_start":5,"column_end":10}},{"value":"/ # fn main() {","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tower-0.4.13\\src\\util\\mod.rs","byte_start":36409,"byte_end":36426,"line_start":392,"line_end":392,"column_start":5,"column_end":22}},{"value":"/ #    async {","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tower-0.4.13\\src\\util\\mod.rs","byte_start":36431,"byte_end":36447,"line_start":393,"line_end":393,"column_start":5,"column_end":21}},{"value":"/ // A service returning Result<Vec<Record>, DbError>","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tower-0.4.13\\src\\util\\mod.rs","byte_start":36452,"byte_end":36507,"line_start":394,"line_end":394,"column_start":5,"column_end":60}},{"value":"/ let service = DatabaseService::new(\"127.0.0.1:8080\");","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tower-0.4.13\\src\\util\\mod.rs","byte_start":36512,"byte_end":36569,"line_start":395,"line_end":395,"column_start":5,"column_end":62}},{"value":"/","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tower-0.4.13\\src\\util\\mod.rs","byte_start":36574,"byte_end":36577,"line_start":396,"line_end":396,"column_start":5,"column_end":8}},{"value":"/ // If the database returns no records for the query, we just want an empty `Vec`.","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tower-0.4.13\\src\\util\\mod.rs","byte_start":36582,"byte_end":36667,"line_start":397,"line_end":397,"column_start":5,"column_end":90}},{"value":"/ let mut new_service = service.map_result(|result| match result {","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tower-0.4.13\\src\\util\\mod.rs","byte_start":36672,"byte_end":36740,"line_start":398,"line_end":398,"column_start":5,"column_end":73}},{"value":"/     // If the error indicates that no records matched the query, return an empty","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tower-0.4.13\\src\\util\\mod.rs","byte_start":36745,"byte_end":36829,"line_start":399,"line_end":399,"column_start":5,"column_end":89}},{"value":"/     // `Vec` instead.","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tower-0.4.13\\src\\util\\mod.rs","byte_start":36834,"byte_end":36859,"line_start":400,"line_end":400,"column_start":5,"column_end":30}},{"value":"/     Err(DbError::NoRecordsFound) => Ok(Vec::new()),","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tower-0.4.13\\src\\util\\mod.rs","byte_start":36864,"byte_end":36919,"line_start":401,"line_end":401,"column_start":5,"column_end":60}},{"value":"/     // Propagate all other responses (`Ok` and `Err`) unchanged","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tower-0.4.13\\src\\util\\mod.rs","byte_start":36924,"byte_end":36991,"line_start":402,"line_end":402,"column_start":5,"column_end":72}},{"value":"/     x => x,","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tower-0.4.13\\src\\util\\mod.rs","byte_start":36996,"byte_end":37011,"line_start":403,"line_end":403,"column_start":5,"column_end":20}},{"value":"/ });","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tower-0.4.13\\src\\util\\mod.rs","byte_start":37016,"byte_end":37023,"line_start":404,"line_end":404,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tower-0.4.13\\src\\util\\mod.rs","byte_start":37028,"byte_end":37031,"line_start":405,"line_end":405,"column_start":5,"column_end":8}},{"value":"/ // Call the new service","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tower-0.4.13\\src\\util\\mod.rs","byte_start":37036,"byte_end":37063,"line_start":406,"line_end":406,"column_start":5,"column_end":32}},{"value":"/ let id = 13;","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tower-0.4.13\\src\\util\\mod.rs","byte_start":37068,"byte_end":37084,"line_start":407,"line_end":407,"column_start":5,"column_end":21}},{"value":"/ let name = new_service","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tower-0.4.13\\src\\util\\mod.rs","byte_start":37089,"byte_end":37115,"line_start":408,"line_end":408,"column_start":5,"column_end":31}},{"value":"/     .ready()","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tower-0.4.13\\src\\util\\mod.rs","byte_start":37120,"byte_end":37136,"line_start":409,"line_end":409,"column_start":5,"column_end":21}},{"value":"/     .await?","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tower-0.4.13\\src\\util\\mod.rs","byte_start":37141,"byte_end":37156,"line_start":410,"line_end":410,"column_start":5,"column_end":20}},{"value":"/     .call(id)","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tower-0.4.13\\src\\util\\mod.rs","byte_start":37161,"byte_end":37178,"line_start":411,"line_end":411,"column_start":5,"column_end":22}},{"value":"/     .await?;","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tower-0.4.13\\src\\util\\mod.rs","byte_start":37183,"byte_end":37199,"line_start":412,"line_end":412,"column_start":5,"column_end":21}},{"value":"/ # Ok::<(), DbError>(())","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tower-0.4.13\\src\\util\\mod.rs","byte_start":37204,"byte_end":37231,"line_start":413,"line_end":413,"column_start":5,"column_end":32}},{"value":"/ #    };","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tower-0.4.13\\src\\util\\mod.rs","byte_start":37236,"byte_end":37247,"line_start":414,"line_end":414,"column_start":5,"column_end":16}},{"value":"/ # }","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tower-0.4.13\\src\\util\\mod.rs","byte_start":37252,"byte_end":37259,"line_start":415,"line_end":415,"column_start":5,"column_end":12}},{"value":"/ ```","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tower-0.4.13\\src\\util\\mod.rs","byte_start":37264,"byte_end":37271,"line_start":416,"line_end":416,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tower-0.4.13\\src\\util\\mod.rs","byte_start":37276,"byte_end":37279,"line_start":417,"line_end":417,"column_start":5,"column_end":8}},{"value":"/ Rejecting some `Ok` responses:","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tower-0.4.13\\src\\util\\mod.rs","byte_start":37284,"byte_end":37318,"line_start":418,"line_end":418,"column_start":5,"column_end":39}},{"value":"/","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tower-0.4.13\\src\\util\\mod.rs","byte_start":37323,"byte_end":37326,"line_start":419,"line_end":419,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tower-0.4.13\\src\\util\\mod.rs","byte_start":37331,"byte_end":37338,"line_start":420,"line_end":420,"column_start":5,"column_end":12}},{"value":"/ # use std::task::{Poll, Context};","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tower-0.4.13\\src\\util\\mod.rs","byte_start":37343,"byte_end":37380,"line_start":421,"line_end":421,"column_start":5,"column_end":42}},{"value":"/ # use tower::{Service, ServiceExt};","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tower-0.4.13\\src\\util\\mod.rs","byte_start":37385,"byte_end":37424,"line_start":422,"line_end":422,"column_start":5,"column_end":44}},{"value":"/ #","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tower-0.4.13\\src\\util\\mod.rs","byte_start":37429,"byte_end":37434,"line_start":423,"line_end":423,"column_start":5,"column_end":10}},{"value":"/ # struct DatabaseService;","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tower-0.4.13\\src\\util\\mod.rs","byte_start":37439,"byte_end":37468,"line_start":424,"line_end":424,"column_start":5,"column_end":34}},{"value":"/ # impl DatabaseService {","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tower-0.4.13\\src\\util\\mod.rs","byte_start":37473,"byte_end":37501,"line_start":425,"line_end":425,"column_start":5,"column_end":33}},{"value":"/ #   fn new(address: &str) -> Self {","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tower-0.4.13\\src\\util\\mod.rs","byte_start":37506,"byte_end":37545,"line_start":426,"line_end":426,"column_start":5,"column_end":44}},{"value":"/ #       DatabaseService","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tower-0.4.13\\src\\util\\mod.rs","byte_start":37550,"byte_end":37577,"line_start":427,"line_end":427,"column_start":5,"column_end":32}},{"value":"/ #   }","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tower-0.4.13\\src\\util\\mod.rs","byte_start":37582,"byte_end":37591,"line_start":428,"line_end":428,"column_start":5,"column_end":14}},{"value":"/ # }","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tower-0.4.13\\src\\util\\mod.rs","byte_start":37596,"byte_end":37603,"line_start":429,"line_end":429,"column_start":5,"column_end":12}},{"value":"/ #","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tower-0.4.13\\src\\util\\mod.rs","byte_start":37608,"byte_end":37613,"line_start":430,"line_end":430,"column_start":5,"column_end":10}},{"value":"/ # struct Record {","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tower-0.4.13\\src\\util\\mod.rs","byte_start":37618,"byte_end":37639,"line_start":431,"line_end":431,"column_start":5,"column_end":26}},{"value":"/ #   pub name: String,","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tower-0.4.13\\src\\util\\mod.rs","byte_start":37644,"byte_end":37669,"line_start":432,"line_end":432,"column_start":5,"column_end":30}},{"value":"/ #   pub age: u16","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tower-0.4.13\\src\\util\\mod.rs","byte_start":37674,"byte_end":37694,"line_start":433,"line_end":433,"column_start":5,"column_end":25}},{"value":"/ # }","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tower-0.4.13\\src\\util\\mod.rs","byte_start":37699,"byte_end":37706,"line_start":434,"line_end":434,"column_start":5,"column_end":12}},{"value":"/ # type DbError = String;","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tower-0.4.13\\src\\util\\mod.rs","byte_start":37711,"byte_end":37739,"line_start":435,"line_end":435,"column_start":5,"column_end":33}},{"value":"/ # type AppError = String;","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tower-0.4.13\\src\\util\\mod.rs","byte_start":37744,"byte_end":37773,"line_start":436,"line_end":436,"column_start":5,"column_end":34}},{"value":"/ #","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tower-0.4.13\\src\\util\\mod.rs","byte_start":37778,"byte_end":37783,"line_start":437,"line_end":437,"column_start":5,"column_end":10}},{"value":"/ # impl Service<u32> for DatabaseService {","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tower-0.4.13\\src\\util\\mod.rs","byte_start":37788,"byte_end":37833,"line_start":438,"line_end":438,"column_start":5,"column_end":50}},{"value":"/ #   type Response = Record;","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tower-0.4.13\\src\\util\\mod.rs","byte_start":37838,"byte_end":37869,"line_start":439,"line_end":439,"column_start":5,"column_end":36}},{"value":"/ #   type Error = DbError;","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tower-0.4.13\\src\\util\\mod.rs","byte_start":37874,"byte_end":37903,"line_start":440,"line_end":440,"column_start":5,"column_end":34}},{"value":"/ #   type Future = futures_util::future::Ready<Result<Record, DbError>>;","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tower-0.4.13\\src\\util\\mod.rs","byte_start":37908,"byte_end":37983,"line_start":441,"line_end":441,"column_start":5,"column_end":80}},{"value":"/ #","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tower-0.4.13\\src\\util\\mod.rs","byte_start":37988,"byte_end":37993,"line_start":442,"line_end":442,"column_start":5,"column_end":10}},{"value":"/ #   fn poll_ready(&mut self, cx: &mut Context<'_>) -> Poll<Result<(), Self::Error>> {","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tower-0.4.13\\src\\util\\mod.rs","byte_start":37998,"byte_end":38087,"line_start":443,"line_end":443,"column_start":5,"column_end":94}},{"value":"/ #       Poll::Ready(Ok(()))","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tower-0.4.13\\src\\util\\mod.rs","byte_start":38092,"byte_end":38123,"line_start":444,"line_end":444,"column_start":5,"column_end":36}},{"value":"/ #   }","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tower-0.4.13\\src\\util\\mod.rs","byte_start":38128,"byte_end":38137,"line_start":445,"line_end":445,"column_start":5,"column_end":14}},{"value":"/ #","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tower-0.4.13\\src\\util\\mod.rs","byte_start":38142,"byte_end":38147,"line_start":446,"line_end":446,"column_start":5,"column_end":10}},{"value":"/ #   fn call(&mut self, request: u32) -> Self::Future {","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tower-0.4.13\\src\\util\\mod.rs","byte_start":38152,"byte_end":38210,"line_start":447,"line_end":447,"column_start":5,"column_end":63}},{"value":"/ #       futures_util::future::ready(Ok(Record { name: \"Jack\".into(), age: 32 }))","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tower-0.4.13\\src\\util\\mod.rs","byte_start":38215,"byte_end":38299,"line_start":448,"line_end":448,"column_start":5,"column_end":89}},{"value":"/ #   }","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tower-0.4.13\\src\\util\\mod.rs","byte_start":38304,"byte_end":38313,"line_start":449,"line_end":449,"column_start":5,"column_end":14}},{"value":"/ # }","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tower-0.4.13\\src\\util\\mod.rs","byte_start":38318,"byte_end":38325,"line_start":450,"line_end":450,"column_start":5,"column_end":12}},{"value":"/ #","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tower-0.4.13\\src\\util\\mod.rs","byte_start":38330,"byte_end":38335,"line_start":451,"line_end":451,"column_start":5,"column_end":10}},{"value":"/ # fn main() {","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tower-0.4.13\\src\\util\\mod.rs","byte_start":38340,"byte_end":38357,"line_start":452,"line_end":452,"column_start":5,"column_end":22}},{"value":"/ #    async {","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tower-0.4.13\\src\\util\\mod.rs","byte_start":38362,"byte_end":38378,"line_start":453,"line_end":453,"column_start":5,"column_end":21}},{"value":"/ use tower::BoxError;","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tower-0.4.13\\src\\util\\mod.rs","byte_start":38383,"byte_end":38407,"line_start":454,"line_end":454,"column_start":5,"column_end":29}},{"value":"/","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tower-0.4.13\\src\\util\\mod.rs","byte_start":38412,"byte_end":38415,"line_start":455,"line_end":455,"column_start":5,"column_end":8}},{"value":"/ // A service returning Result<Record, DbError>","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tower-0.4.13\\src\\util\\mod.rs","byte_start":38420,"byte_end":38470,"line_start":456,"line_end":456,"column_start":5,"column_end":55}},{"value":"/ let service = DatabaseService::new(\"127.0.0.1:8080\");","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tower-0.4.13\\src\\util\\mod.rs","byte_start":38475,"byte_end":38532,"line_start":457,"line_end":457,"column_start":5,"column_end":62}},{"value":"/","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tower-0.4.13\\src\\util\\mod.rs","byte_start":38537,"byte_end":38540,"line_start":458,"line_end":458,"column_start":5,"column_end":8}},{"value":"/ // If the user is zero years old, return an error.","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tower-0.4.13\\src\\util\\mod.rs","byte_start":38545,"byte_end":38599,"line_start":459,"line_end":459,"column_start":5,"column_end":59}},{"value":"/ let mut new_service = service.map_result(|result| {","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tower-0.4.13\\src\\util\\mod.rs","byte_start":38604,"byte_end":38659,"line_start":460,"line_end":460,"column_start":5,"column_end":60}},{"value":"/    let record = result?;","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tower-0.4.13\\src\\util\\mod.rs","byte_start":38664,"byte_end":38692,"line_start":461,"line_end":461,"column_start":5,"column_end":33}},{"value":"/","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tower-0.4.13\\src\\util\\mod.rs","byte_start":38697,"byte_end":38700,"line_start":462,"line_end":462,"column_start":5,"column_end":8}},{"value":"/    if record.age == 0 {","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tower-0.4.13\\src\\util\\mod.rs","byte_start":38705,"byte_end":38732,"line_start":463,"line_end":463,"column_start":5,"column_end":32}},{"value":"/         // Users must have been born to use our app!","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tower-0.4.13\\src\\util\\mod.rs","byte_start":38737,"byte_end":38793,"line_start":464,"line_end":464,"column_start":5,"column_end":61}},{"value":"/         let app_error = AppError::from(\"users cannot be 0 years old!\");","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tower-0.4.13\\src\\util\\mod.rs","byte_start":38798,"byte_end":38873,"line_start":465,"line_end":465,"column_start":5,"column_end":80}},{"value":"/","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tower-0.4.13\\src\\util\\mod.rs","byte_start":38878,"byte_end":38881,"line_start":466,"line_end":466,"column_start":5,"column_end":8}},{"value":"/         // Box the error to erase its type (as it can be an `AppError`","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tower-0.4.13\\src\\util\\mod.rs","byte_start":38886,"byte_end":38960,"line_start":467,"line_end":467,"column_start":5,"column_end":79}},{"value":"/         // *or* the inner service's `DbError`).","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tower-0.4.13\\src\\util\\mod.rs","byte_start":38965,"byte_end":39016,"line_start":468,"line_end":468,"column_start":5,"column_end":56}},{"value":"/         return Err(BoxError::from(app_error));","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tower-0.4.13\\src\\util\\mod.rs","byte_start":39021,"byte_end":39071,"line_start":469,"line_end":469,"column_start":5,"column_end":55}},{"value":"/     }","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tower-0.4.13\\src\\util\\mod.rs","byte_start":39076,"byte_end":39085,"line_start":470,"line_end":470,"column_start":5,"column_end":14}},{"value":"/","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tower-0.4.13\\src\\util\\mod.rs","byte_start":39090,"byte_end":39093,"line_start":471,"line_end":471,"column_start":5,"column_end":8}},{"value":"/     // Otherwise, return the record.","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tower-0.4.13\\src\\util\\mod.rs","byte_start":39098,"byte_end":39138,"line_start":472,"line_end":472,"column_start":5,"column_end":45}},{"value":"/     Ok(record)","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tower-0.4.13\\src\\util\\mod.rs","byte_start":39143,"byte_end":39161,"line_start":473,"line_end":473,"column_start":5,"column_end":23}},{"value":"/ });","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tower-0.4.13\\src\\util\\mod.rs","byte_start":39166,"byte_end":39173,"line_start":474,"line_end":474,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tower-0.4.13\\src\\util\\mod.rs","byte_start":39178,"byte_end":39181,"line_start":475,"line_end":475,"column_start":5,"column_end":8}},{"value":"/ // Call the new service","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tower-0.4.13\\src\\util\\mod.rs","byte_start":39186,"byte_end":39213,"line_start":476,"line_end":476,"column_start":5,"column_end":32}},{"value":"/ let id = 13;","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tower-0.4.13\\src\\util\\mod.rs","byte_start":39218,"byte_end":39234,"line_start":477,"line_end":477,"column_start":5,"column_end":21}},{"value":"/ let record = new_service","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tower-0.4.13\\src\\util\\mod.rs","byte_start":39239,"byte_end":39267,"line_start":478,"line_end":478,"column_start":5,"column_end":33}},{"value":"/     .ready()","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tower-0.4.13\\src\\util\\mod.rs","byte_start":39272,"byte_end":39288,"line_start":479,"line_end":479,"column_start":5,"column_end":21}},{"value":"/     .await?","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tower-0.4.13\\src\\util\\mod.rs","byte_start":39293,"byte_end":39308,"line_start":480,"line_end":480,"column_start":5,"column_end":20}},{"value":"/     .call(id)","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tower-0.4.13\\src\\util\\mod.rs","byte_start":39313,"byte_end":39330,"line_start":481,"line_end":481,"column_start":5,"column_end":22}},{"value":"/     .await?;","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tower-0.4.13\\src\\util\\mod.rs","byte_start":39335,"byte_end":39351,"line_start":482,"line_end":482,"column_start":5,"column_end":21}},{"value":"/ # Ok::<(), BoxError>(())","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tower-0.4.13\\src\\util\\mod.rs","byte_start":39356,"byte_end":39384,"line_start":483,"line_end":483,"column_start":5,"column_end":33}},{"value":"/ #    };","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tower-0.4.13\\src\\util\\mod.rs","byte_start":39389,"byte_end":39400,"line_start":484,"line_end":484,"column_start":5,"column_end":16}},{"value":"/ # }","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tower-0.4.13\\src\\util\\mod.rs","byte_start":39405,"byte_end":39412,"line_start":485,"line_end":485,"column_start":5,"column_end":12}},{"value":"/ ```","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tower-0.4.13\\src\\util\\mod.rs","byte_start":39417,"byte_end":39424,"line_start":486,"line_end":486,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tower-0.4.13\\src\\util\\mod.rs","byte_start":39429,"byte_end":39432,"line_start":487,"line_end":487,"column_start":5,"column_end":8}},{"value":"/ Performing an action that must be run for both successes and failures:","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tower-0.4.13\\src\\util\\mod.rs","byte_start":39437,"byte_end":39511,"line_start":488,"line_end":488,"column_start":5,"column_end":79}},{"value":"/","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tower-0.4.13\\src\\util\\mod.rs","byte_start":39516,"byte_end":39519,"line_start":489,"line_end":489,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tower-0.4.13\\src\\util\\mod.rs","byte_start":39524,"byte_end":39531,"line_start":490,"line_end":490,"column_start":5,"column_end":12}},{"value":"/ # use std::convert::TryFrom;","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tower-0.4.13\\src\\util\\mod.rs","byte_start":39536,"byte_end":39568,"line_start":491,"line_end":491,"column_start":5,"column_end":37}},{"value":"/ # use std::task::{Poll, Context};","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tower-0.4.13\\src\\util\\mod.rs","byte_start":39573,"byte_end":39610,"line_start":492,"line_end":492,"column_start":5,"column_end":42}},{"value":"/ # use tower::{Service, ServiceExt};","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tower-0.4.13\\src\\util\\mod.rs","byte_start":39615,"byte_end":39654,"line_start":493,"line_end":493,"column_start":5,"column_end":44}},{"value":"/ #","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tower-0.4.13\\src\\util\\mod.rs","byte_start":39659,"byte_end":39664,"line_start":494,"line_end":494,"column_start":5,"column_end":10}},{"value":"/ # struct DatabaseService;","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tower-0.4.13\\src\\util\\mod.rs","byte_start":39669,"byte_end":39698,"line_start":495,"line_end":495,"column_start":5,"column_end":34}},{"value":"/ # impl DatabaseService {","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tower-0.4.13\\src\\util\\mod.rs","byte_start":39703,"byte_end":39731,"line_start":496,"line_end":496,"column_start":5,"column_end":33}},{"value":"/ #   fn new(address: &str) -> Self {","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tower-0.4.13\\src\\util\\mod.rs","byte_start":39736,"byte_end":39775,"line_start":497,"line_end":497,"column_start":5,"column_end":44}},{"value":"/ #       DatabaseService","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tower-0.4.13\\src\\util\\mod.rs","byte_start":39780,"byte_end":39807,"line_start":498,"line_end":498,"column_start":5,"column_end":32}},{"value":"/ #   }","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tower-0.4.13\\src\\util\\mod.rs","byte_start":39812,"byte_end":39821,"line_start":499,"line_end":499,"column_start":5,"column_end":14}},{"value":"/ # }","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tower-0.4.13\\src\\util\\mod.rs","byte_start":39826,"byte_end":39833,"line_start":500,"line_end":500,"column_start":5,"column_end":12}},{"value":"/ #","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tower-0.4.13\\src\\util\\mod.rs","byte_start":39838,"byte_end":39843,"line_start":501,"line_end":501,"column_start":5,"column_end":10}},{"value":"/ # impl Service<u32> for DatabaseService {","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tower-0.4.13\\src\\util\\mod.rs","byte_start":39848,"byte_end":39893,"line_start":502,"line_end":502,"column_start":5,"column_end":50}},{"value":"/ #   type Response = String;","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tower-0.4.13\\src\\util\\mod.rs","byte_start":39898,"byte_end":39929,"line_start":503,"line_end":503,"column_start":5,"column_end":36}},{"value":"/ #   type Error = u8;","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tower-0.4.13\\src\\util\\mod.rs","byte_start":39934,"byte_end":39958,"line_start":504,"line_end":504,"column_start":5,"column_end":29}},{"value":"/ #   type Future = futures_util::future::Ready<Result<String, u8>>;","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tower-0.4.13\\src\\util\\mod.rs","byte_start":39963,"byte_end":40033,"line_start":505,"line_end":505,"column_start":5,"column_end":75}},{"value":"/ #","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tower-0.4.13\\src\\util\\mod.rs","byte_start":40038,"byte_end":40043,"line_start":506,"line_end":506,"column_start":5,"column_end":10}},{"value":"/ #   fn poll_ready(&mut self, cx: &mut Context<'_>) -> Poll<Result<(), Self::Error>> {","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tower-0.4.13\\src\\util\\mod.rs","byte_start":40048,"byte_end":40137,"line_start":507,"line_end":507,"column_start":5,"column_end":94}},{"value":"/ #       Poll::Ready(Ok(()))","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tower-0.4.13\\src\\util\\mod.rs","byte_start":40142,"byte_end":40173,"line_start":508,"line_end":508,"column_start":5,"column_end":36}},{"value":"/ #   }","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tower-0.4.13\\src\\util\\mod.rs","byte_start":40178,"byte_end":40187,"line_start":509,"line_end":509,"column_start":5,"column_end":14}},{"value":"/ #","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tower-0.4.13\\src\\util\\mod.rs","byte_start":40192,"byte_end":40197,"line_start":510,"line_end":510,"column_start":5,"column_end":10}},{"value":"/ #   fn call(&mut self, request: u32) -> Self::Future {","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tower-0.4.13\\src\\util\\mod.rs","byte_start":40202,"byte_end":40260,"line_start":511,"line_end":511,"column_start":5,"column_end":63}},{"value":"/ #       futures_util::future::ready(Ok(String::new()))","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tower-0.4.13\\src\\util\\mod.rs","byte_start":40265,"byte_end":40323,"line_start":512,"line_end":512,"column_start":5,"column_end":63}},{"value":"/ #   }","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tower-0.4.13\\src\\util\\mod.rs","byte_start":40328,"byte_end":40337,"line_start":513,"line_end":513,"column_start":5,"column_end":14}},{"value":"/ # }","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tower-0.4.13\\src\\util\\mod.rs","byte_start":40342,"byte_end":40349,"line_start":514,"line_end":514,"column_start":5,"column_end":12}},{"value":"/ #","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tower-0.4.13\\src\\util\\mod.rs","byte_start":40354,"byte_end":40359,"line_start":515,"line_end":515,"column_start":5,"column_end":10}},{"value":"/ # fn main() {","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tower-0.4.13\\src\\util\\mod.rs","byte_start":40364,"byte_end":40381,"line_start":516,"line_end":516,"column_start":5,"column_end":22}},{"value":"/ #   async {","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tower-0.4.13\\src\\util\\mod.rs","byte_start":40386,"byte_end":40401,"line_start":517,"line_end":517,"column_start":5,"column_end":20}},{"value":"/ // A service returning Result<Record, DbError>","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tower-0.4.13\\src\\util\\mod.rs","byte_start":40406,"byte_end":40456,"line_start":518,"line_end":518,"column_start":5,"column_end":55}},{"value":"/ let service = DatabaseService::new(\"127.0.0.1:8080\");","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tower-0.4.13\\src\\util\\mod.rs","byte_start":40461,"byte_end":40518,"line_start":519,"line_end":519,"column_start":5,"column_end":62}},{"value":"/","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tower-0.4.13\\src\\util\\mod.rs","byte_start":40523,"byte_end":40526,"line_start":520,"line_end":520,"column_start":5,"column_end":8}},{"value":"/ // Print a message whenever a query completes.","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tower-0.4.13\\src\\util\\mod.rs","byte_start":40531,"byte_end":40581,"line_start":521,"line_end":521,"column_start":5,"column_end":55}},{"value":"/ let mut new_service = service.map_result(|result| {","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tower-0.4.13\\src\\util\\mod.rs","byte_start":40586,"byte_end":40641,"line_start":522,"line_end":522,"column_start":5,"column_end":60}},{"value":"/     println!(\"query completed; success={}\", result.is_ok());","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tower-0.4.13\\src\\util\\mod.rs","byte_start":40646,"byte_end":40710,"line_start":523,"line_end":523,"column_start":5,"column_end":69}},{"value":"/     result","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tower-0.4.13\\src\\util\\mod.rs","byte_start":40715,"byte_end":40729,"line_start":524,"line_end":524,"column_start":5,"column_end":19}},{"value":"/ });","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tower-0.4.13\\src\\util\\mod.rs","byte_start":40734,"byte_end":40741,"line_start":525,"line_end":525,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tower-0.4.13\\src\\util\\mod.rs","byte_start":40746,"byte_end":40749,"line_start":526,"line_end":526,"column_start":5,"column_end":8}},{"value":"/ // Call the new service","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tower-0.4.13\\src\\util\\mod.rs","byte_start":40754,"byte_end":40781,"line_start":527,"line_end":527,"column_start":5,"column_end":32}},{"value":"/ let id = 13;","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tower-0.4.13\\src\\util\\mod.rs","byte_start":40786,"byte_end":40802,"line_start":528,"line_end":528,"column_start":5,"column_end":21}},{"value":"/ let response = new_service","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tower-0.4.13\\src\\util\\mod.rs","byte_start":40807,"byte_end":40837,"line_start":529,"line_end":529,"column_start":5,"column_end":35}},{"value":"/     .ready()","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tower-0.4.13\\src\\util\\mod.rs","byte_start":40842,"byte_end":40858,"line_start":530,"line_end":530,"column_start":5,"column_end":21}},{"value":"/     .await?","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tower-0.4.13\\src\\util\\mod.rs","byte_start":40863,"byte_end":40878,"line_start":531,"line_end":531,"column_start":5,"column_end":20}},{"value":"/     .call(id)","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tower-0.4.13\\src\\util\\mod.rs","byte_start":40883,"byte_end":40900,"line_start":532,"line_end":532,"column_start":5,"column_end":22}},{"value":"/     .await;","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tower-0.4.13\\src\\util\\mod.rs","byte_start":40905,"byte_end":40920,"line_start":533,"line_end":533,"column_start":5,"column_end":20}},{"value":"/ # response","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tower-0.4.13\\src\\util\\mod.rs","byte_start":40925,"byte_end":40939,"line_start":534,"line_end":534,"column_start":5,"column_end":19}},{"value":"/ #    };","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tower-0.4.13\\src\\util\\mod.rs","byte_start":40944,"byte_end":40955,"line_start":535,"line_end":535,"column_start":5,"column_end":16}},{"value":"/ # }","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tower-0.4.13\\src\\util\\mod.rs","byte_start":40960,"byte_end":40967,"line_start":536,"line_end":536,"column_start":5,"column_end":12}},{"value":"/ ```","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tower-0.4.13\\src\\util\\mod.rs","byte_start":40972,"byte_end":40979,"line_start":537,"line_end":537,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tower-0.4.13\\src\\util\\mod.rs","byte_start":40984,"byte_end":40987,"line_start":538,"line_end":538,"column_start":5,"column_end":8}},{"value":"/ [`map_response`]: ServiceExt::map_response","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tower-0.4.13\\src\\util\\mod.rs","byte_start":40992,"byte_end":41038,"line_start":539,"line_end":539,"column_start":5,"column_end":51}},{"value":"/ [`map_err`]: ServiceExt::map_err","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tower-0.4.13\\src\\util\\mod.rs","byte_start":41043,"byte_end":41079,"line_start":540,"line_end":540,"column_start":5,"column_end":41}},{"value":"/ [`map_result`]: ServiceExt::map_result","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tower-0.4.13\\src\\util\\mod.rs","byte_start":41084,"byte_end":41126,"line_start":541,"line_end":541,"column_start":5,"column_end":47}},{"value":"/ [`Error`]: crate::Service::Error","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tower-0.4.13\\src\\util\\mod.rs","byte_start":41131,"byte_end":41167,"line_start":542,"line_end":542,"column_start":5,"column_end":41}},{"value":"/ [`Response`]: crate::Service::Response","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tower-0.4.13\\src\\util\\mod.rs","byte_start":41172,"byte_end":41214,"line_start":543,"line_end":543,"column_start":5,"column_end":47}},{"value":"/ [`poll_ready`]: crate::Service::poll_ready","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tower-0.4.13\\src\\util\\mod.rs","byte_start":41219,"byte_end":41265,"line_start":544,"line_end":544,"column_start":5,"column_end":51}},{"value":"/ [`BoxError`]: crate::BoxError","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tower-0.4.13\\src\\util\\mod.rs","byte_start":41270,"byte_end":41303,"line_start":545,"line_end":545,"column_start":5,"column_end":38}}]},{"kind":"Method","id":{"krate":0,"index":1468},"span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tower-0.4.13\\src\\util\\mod.rs","byte_start":43175,"byte_end":43186,"line_start":606,"line_end":606,"column_start":8,"column_end":19},"name":"map_request","qualname":"::util::ServiceExt::map_request","value":"pub fn map_request<F, NewRequest>(Self, F) -> MapRequest<Self, F> where\nSelf: Sized, F: FnMut(NewRequest) -> Request","parent":{"krate":0,"index":1448},"children":[],"decl_id":null,"docs":" Composes a function *in front of* the service.","sig":null,"attributes":[{"value":"/ Composes a function *in front of* the service.","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tower-0.4.13\\src\\util\\mod.rs","byte_start":41581,"byte_end":41631,"line_start":555,"line_end":555,"column_start":5,"column_end":55}},{"value":"/","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tower-0.4.13\\src\\util\\mod.rs","byte_start":41636,"byte_end":41639,"line_start":556,"line_end":556,"column_start":5,"column_end":8}},{"value":"/ This adapter produces a new service that passes each value through the","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tower-0.4.13\\src\\util\\mod.rs","byte_start":41644,"byte_end":41718,"line_start":557,"line_end":557,"column_start":5,"column_end":79}},{"value":"/ given function `f` before sending it to `self`.","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tower-0.4.13\\src\\util\\mod.rs","byte_start":41723,"byte_end":41774,"line_start":558,"line_end":558,"column_start":5,"column_end":56}},{"value":"/","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tower-0.4.13\\src\\util\\mod.rs","byte_start":41779,"byte_end":41782,"line_start":559,"line_end":559,"column_start":5,"column_end":8}},{"value":"/ # Example","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tower-0.4.13\\src\\util\\mod.rs","byte_start":41787,"byte_end":41800,"line_start":560,"line_end":560,"column_start":5,"column_end":18}},{"value":"/ ```","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tower-0.4.13\\src\\util\\mod.rs","byte_start":41805,"byte_end":41812,"line_start":561,"line_end":561,"column_start":5,"column_end":12}},{"value":"/ # use std::convert::TryFrom;","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tower-0.4.13\\src\\util\\mod.rs","byte_start":41817,"byte_end":41849,"line_start":562,"line_end":562,"column_start":5,"column_end":37}},{"value":"/ # use std::task::{Poll, Context};","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tower-0.4.13\\src\\util\\mod.rs","byte_start":41854,"byte_end":41891,"line_start":563,"line_end":563,"column_start":5,"column_end":42}},{"value":"/ # use tower::{Service, ServiceExt};","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tower-0.4.13\\src\\util\\mod.rs","byte_start":41896,"byte_end":41935,"line_start":564,"line_end":564,"column_start":5,"column_end":44}},{"value":"/ #","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tower-0.4.13\\src\\util\\mod.rs","byte_start":41940,"byte_end":41945,"line_start":565,"line_end":565,"column_start":5,"column_end":10}},{"value":"/ # struct DatabaseService;","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tower-0.4.13\\src\\util\\mod.rs","byte_start":41950,"byte_end":41979,"line_start":566,"line_end":566,"column_start":5,"column_end":34}},{"value":"/ # impl DatabaseService {","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tower-0.4.13\\src\\util\\mod.rs","byte_start":41984,"byte_end":42012,"line_start":567,"line_end":567,"column_start":5,"column_end":33}},{"value":"/ #   fn new(address: &str) -> Self {","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tower-0.4.13\\src\\util\\mod.rs","byte_start":42017,"byte_end":42056,"line_start":568,"line_end":568,"column_start":5,"column_end":44}},{"value":"/ #       DatabaseService","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tower-0.4.13\\src\\util\\mod.rs","byte_start":42061,"byte_end":42088,"line_start":569,"line_end":569,"column_start":5,"column_end":32}},{"value":"/ #   }","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tower-0.4.13\\src\\util\\mod.rs","byte_start":42093,"byte_end":42102,"line_start":570,"line_end":570,"column_start":5,"column_end":14}},{"value":"/ # }","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tower-0.4.13\\src\\util\\mod.rs","byte_start":42107,"byte_end":42114,"line_start":571,"line_end":571,"column_start":5,"column_end":12}},{"value":"/ #","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tower-0.4.13\\src\\util\\mod.rs","byte_start":42119,"byte_end":42124,"line_start":572,"line_end":572,"column_start":5,"column_end":10}},{"value":"/ # impl Service<String> for DatabaseService {","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tower-0.4.13\\src\\util\\mod.rs","byte_start":42129,"byte_end":42177,"line_start":573,"line_end":573,"column_start":5,"column_end":53}},{"value":"/ #   type Response = String;","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tower-0.4.13\\src\\util\\mod.rs","byte_start":42182,"byte_end":42213,"line_start":574,"line_end":574,"column_start":5,"column_end":36}},{"value":"/ #   type Error = u8;","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tower-0.4.13\\src\\util\\mod.rs","byte_start":42218,"byte_end":42242,"line_start":575,"line_end":575,"column_start":5,"column_end":29}},{"value":"/ #   type Future = futures_util::future::Ready<Result<String, u8>>;","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tower-0.4.13\\src\\util\\mod.rs","byte_start":42247,"byte_end":42317,"line_start":576,"line_end":576,"column_start":5,"column_end":75}},{"value":"/ #","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tower-0.4.13\\src\\util\\mod.rs","byte_start":42322,"byte_end":42327,"line_start":577,"line_end":577,"column_start":5,"column_end":10}},{"value":"/ #   fn poll_ready(&mut self, cx: &mut Context<'_>) -> Poll<Result<(), Self::Error>> {","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tower-0.4.13\\src\\util\\mod.rs","byte_start":42332,"byte_end":42421,"line_start":578,"line_end":578,"column_start":5,"column_end":94}},{"value":"/ #       Poll::Ready(Ok(()))","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tower-0.4.13\\src\\util\\mod.rs","byte_start":42426,"byte_end":42457,"line_start":579,"line_end":579,"column_start":5,"column_end":36}},{"value":"/ #   }","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tower-0.4.13\\src\\util\\mod.rs","byte_start":42462,"byte_end":42471,"line_start":580,"line_end":580,"column_start":5,"column_end":14}},{"value":"/ #","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tower-0.4.13\\src\\util\\mod.rs","byte_start":42476,"byte_end":42481,"line_start":581,"line_end":581,"column_start":5,"column_end":10}},{"value":"/ #   fn call(&mut self, request: String) -> Self::Future {","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tower-0.4.13\\src\\util\\mod.rs","byte_start":42486,"byte_end":42547,"line_start":582,"line_end":582,"column_start":5,"column_end":66}},{"value":"/ #       futures_util::future::ready(Ok(String::new()))","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tower-0.4.13\\src\\util\\mod.rs","byte_start":42552,"byte_end":42610,"line_start":583,"line_end":583,"column_start":5,"column_end":63}},{"value":"/ #   }","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tower-0.4.13\\src\\util\\mod.rs","byte_start":42615,"byte_end":42624,"line_start":584,"line_end":584,"column_start":5,"column_end":14}},{"value":"/ # }","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tower-0.4.13\\src\\util\\mod.rs","byte_start":42629,"byte_end":42636,"line_start":585,"line_end":585,"column_start":5,"column_end":12}},{"value":"/ #","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tower-0.4.13\\src\\util\\mod.rs","byte_start":42641,"byte_end":42646,"line_start":586,"line_end":586,"column_start":5,"column_end":10}},{"value":"/ # fn main() {","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tower-0.4.13\\src\\util\\mod.rs","byte_start":42651,"byte_end":42668,"line_start":587,"line_end":587,"column_start":5,"column_end":22}},{"value":"/ #   async {","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tower-0.4.13\\src\\util\\mod.rs","byte_start":42673,"byte_end":42688,"line_start":588,"line_end":588,"column_start":5,"column_end":20}},{"value":"/ // A service taking a String as a request","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tower-0.4.13\\src\\util\\mod.rs","byte_start":42693,"byte_end":42738,"line_start":589,"line_end":589,"column_start":5,"column_end":50}},{"value":"/ let service = DatabaseService::new(\"127.0.0.1:8080\");","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tower-0.4.13\\src\\util\\mod.rs","byte_start":42743,"byte_end":42800,"line_start":590,"line_end":590,"column_start":5,"column_end":62}},{"value":"/","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tower-0.4.13\\src\\util\\mod.rs","byte_start":42805,"byte_end":42808,"line_start":591,"line_end":591,"column_start":5,"column_end":8}},{"value":"/ // Map the request to a new request","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tower-0.4.13\\src\\util\\mod.rs","byte_start":42813,"byte_end":42852,"line_start":592,"line_end":592,"column_start":5,"column_end":44}},{"value":"/ let mut new_service = service.map_request(|id: u32| id.to_string());","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tower-0.4.13\\src\\util\\mod.rs","byte_start":42857,"byte_end":42929,"line_start":593,"line_end":593,"column_start":5,"column_end":77}},{"value":"/","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tower-0.4.13\\src\\util\\mod.rs","byte_start":42934,"byte_end":42937,"line_start":594,"line_end":594,"column_start":5,"column_end":8}},{"value":"/ // Call the new service","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tower-0.4.13\\src\\util\\mod.rs","byte_start":42942,"byte_end":42969,"line_start":595,"line_end":595,"column_start":5,"column_end":32}},{"value":"/ let id = 13;","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tower-0.4.13\\src\\util\\mod.rs","byte_start":42974,"byte_end":42990,"line_start":596,"line_end":596,"column_start":5,"column_end":21}},{"value":"/ let response = new_service","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tower-0.4.13\\src\\util\\mod.rs","byte_start":42995,"byte_end":43025,"line_start":597,"line_end":597,"column_start":5,"column_end":35}},{"value":"/     .ready()","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tower-0.4.13\\src\\util\\mod.rs","byte_start":43030,"byte_end":43046,"line_start":598,"line_end":598,"column_start":5,"column_end":21}},{"value":"/     .await?","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tower-0.4.13\\src\\util\\mod.rs","byte_start":43051,"byte_end":43066,"line_start":599,"line_end":599,"column_start":5,"column_end":20}},{"value":"/     .call(id)","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tower-0.4.13\\src\\util\\mod.rs","byte_start":43071,"byte_end":43088,"line_start":600,"line_end":600,"column_start":5,"column_end":22}},{"value":"/     .await;","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tower-0.4.13\\src\\util\\mod.rs","byte_start":43093,"byte_end":43108,"line_start":601,"line_end":601,"column_start":5,"column_end":20}},{"value":"/ # response","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tower-0.4.13\\src\\util\\mod.rs","byte_start":43113,"byte_end":43127,"line_start":602,"line_end":602,"column_start":5,"column_end":19}},{"value":"/ #    };","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tower-0.4.13\\src\\util\\mod.rs","byte_start":43132,"byte_end":43143,"line_start":603,"line_end":603,"column_start":5,"column_end":16}},{"value":"/ # }","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tower-0.4.13\\src\\util\\mod.rs","byte_start":43148,"byte_end":43155,"line_start":604,"line_end":604,"column_start":5,"column_end":12}},{"value":"/ ```","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tower-0.4.13\\src\\util\\mod.rs","byte_start":43160,"byte_end":43167,"line_start":605,"line_end":605,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":1471},"span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tower-0.4.13\\src\\util\\mod.rs","byte_start":52825,"byte_end":52829,"line_start":873,"line_end":873,"column_start":8,"column_end":12},"name":"then","qualname":"::util::ServiceExt::then","value":"pub fn then<F, Response, Error, Fut>(Self, F) -> Then<Self, F> where\nSelf: Sized, Error: From<Self::Error>,\nF: FnOnce(Result<Self::Response, Self::Error>) -> Fut + Clone,\nFut: Future<Output = Result<Response, Error>>","parent":{"krate":0,"index":1448},"children":[],"decl_id":null,"docs":" Composes an asynchronous function *after* this service.","sig":null,"attributes":[{"value":"/ Composes an asynchronous function *after* this service.","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tower-0.4.13\\src\\util\\mod.rs","byte_start":48711,"byte_end":48770,"line_start":775,"line_end":775,"column_start":5,"column_end":64}},{"value":"/","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tower-0.4.13\\src\\util\\mod.rs","byte_start":48775,"byte_end":48778,"line_start":776,"line_end":776,"column_start":5,"column_end":8}},{"value":"/ This takes a function or closure returning a future, and returns a new","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tower-0.4.13\\src\\util\\mod.rs","byte_start":48783,"byte_end":48857,"line_start":777,"line_end":777,"column_start":5,"column_end":79}},{"value":"/ `Service` that chains that function after this service's [`Future`]. The","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tower-0.4.13\\src\\util\\mod.rs","byte_start":48862,"byte_end":48938,"line_start":778,"line_end":778,"column_start":5,"column_end":81}},{"value":"/ new `Service`'s future will consist of this service's future, followed","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tower-0.4.13\\src\\util\\mod.rs","byte_start":48943,"byte_end":49017,"line_start":779,"line_end":779,"column_start":5,"column_end":79}},{"value":"/ by the future returned by calling the chained function with the future's","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tower-0.4.13\\src\\util\\mod.rs","byte_start":49022,"byte_end":49098,"line_start":780,"line_end":780,"column_start":5,"column_end":81}},{"value":"/ [`Output`] type. The chained function is called regardless of whether","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tower-0.4.13\\src\\util\\mod.rs","byte_start":49103,"byte_end":49176,"line_start":781,"line_end":781,"column_start":5,"column_end":78}},{"value":"/ this service's future completes with a successful response or with an","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tower-0.4.13\\src\\util\\mod.rs","byte_start":49181,"byte_end":49254,"line_start":782,"line_end":782,"column_start":5,"column_end":78}},{"value":"/ error.","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tower-0.4.13\\src\\util\\mod.rs","byte_start":49259,"byte_end":49269,"line_start":783,"line_end":783,"column_start":5,"column_end":15}},{"value":"/","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tower-0.4.13\\src\\util\\mod.rs","byte_start":49274,"byte_end":49277,"line_start":784,"line_end":784,"column_start":5,"column_end":8}},{"value":"/ This method can be thought of as an equivalent to the [`futures`","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tower-0.4.13\\src\\util\\mod.rs","byte_start":49282,"byte_end":49350,"line_start":785,"line_end":785,"column_start":5,"column_end":73}},{"value":"/ crate]'s [`FutureExt::then`] combinator, but acting on `Service`s that","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tower-0.4.13\\src\\util\\mod.rs","byte_start":49355,"byte_end":49429,"line_start":786,"line_end":786,"column_start":5,"column_end":79}},{"value":"/ _return_ futures, rather than on an individual future. Similarly to that","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tower-0.4.13\\src\\util\\mod.rs","byte_start":49434,"byte_end":49510,"line_start":787,"line_end":787,"column_start":5,"column_end":81}},{"value":"/ combinator, [`ServiceExt::then`] can be used to implement asynchronous","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tower-0.4.13\\src\\util\\mod.rs","byte_start":49515,"byte_end":49589,"line_start":788,"line_end":788,"column_start":5,"column_end":79}},{"value":"/ error recovery, by calling some asynchronous function with errors","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tower-0.4.13\\src\\util\\mod.rs","byte_start":49594,"byte_end":49663,"line_start":789,"line_end":789,"column_start":5,"column_end":74}},{"value":"/ returned by this service. Alternatively, it may also be used to call a","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tower-0.4.13\\src\\util\\mod.rs","byte_start":49668,"byte_end":49742,"line_start":790,"line_end":790,"column_start":5,"column_end":79}},{"value":"/ fallible async function with the successful response of this service.","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tower-0.4.13\\src\\util\\mod.rs","byte_start":49747,"byte_end":49820,"line_start":791,"line_end":791,"column_start":5,"column_end":78}},{"value":"/","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tower-0.4.13\\src\\util\\mod.rs","byte_start":49825,"byte_end":49828,"line_start":792,"line_end":792,"column_start":5,"column_end":8}},{"value":"/ This method can be used to change the [`Response`] type of the service","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tower-0.4.13\\src\\util\\mod.rs","byte_start":49833,"byte_end":49907,"line_start":793,"line_end":793,"column_start":5,"column_end":79}},{"value":"/ into a different type. It can also be used to change the [`Error`] type","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tower-0.4.13\\src\\util\\mod.rs","byte_start":49912,"byte_end":49987,"line_start":794,"line_end":794,"column_start":5,"column_end":80}},{"value":"/ of the service. However, because the `then` function is not applied","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tower-0.4.13\\src\\util\\mod.rs","byte_start":49992,"byte_end":50063,"line_start":795,"line_end":795,"column_start":5,"column_end":76}},{"value":"/ to the errors returned by the service's [`poll_ready`] method, it must","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tower-0.4.13\\src\\util\\mod.rs","byte_start":50068,"byte_end":50142,"line_start":796,"line_end":796,"column_start":5,"column_end":79}},{"value":"/ be possible to convert the service's [`Error`] type into the error type","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tower-0.4.13\\src\\util\\mod.rs","byte_start":50147,"byte_end":50222,"line_start":797,"line_end":797,"column_start":5,"column_end":80}},{"value":"/ returned by the `then` future. This is trivial when the function","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tower-0.4.13\\src\\util\\mod.rs","byte_start":50227,"byte_end":50295,"line_start":798,"line_end":798,"column_start":5,"column_end":73}},{"value":"/ returns the same error type as the service, but in other cases, it can","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tower-0.4.13\\src\\util\\mod.rs","byte_start":50300,"byte_end":50374,"line_start":799,"line_end":799,"column_start":5,"column_end":79}},{"value":"/ be useful to use [`BoxError`] to erase differing error types.","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tower-0.4.13\\src\\util\\mod.rs","byte_start":50379,"byte_end":50444,"line_start":800,"line_end":800,"column_start":5,"column_end":70}},{"value":"/","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tower-0.4.13\\src\\util\\mod.rs","byte_start":50449,"byte_end":50452,"line_start":801,"line_end":801,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tower-0.4.13\\src\\util\\mod.rs","byte_start":50457,"byte_end":50471,"line_start":802,"line_end":802,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tower-0.4.13\\src\\util\\mod.rs","byte_start":50476,"byte_end":50479,"line_start":803,"line_end":803,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tower-0.4.13\\src\\util\\mod.rs","byte_start":50484,"byte_end":50491,"line_start":804,"line_end":804,"column_start":5,"column_end":12}},{"value":"/ # use std::task::{Poll, Context};","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tower-0.4.13\\src\\util\\mod.rs","byte_start":50496,"byte_end":50533,"line_start":805,"line_end":805,"column_start":5,"column_end":42}},{"value":"/ # use tower::{Service, ServiceExt};","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tower-0.4.13\\src\\util\\mod.rs","byte_start":50538,"byte_end":50577,"line_start":806,"line_end":806,"column_start":5,"column_end":44}},{"value":"/ #","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tower-0.4.13\\src\\util\\mod.rs","byte_start":50582,"byte_end":50587,"line_start":807,"line_end":807,"column_start":5,"column_end":10}},{"value":"/ # struct DatabaseService;","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tower-0.4.13\\src\\util\\mod.rs","byte_start":50592,"byte_end":50621,"line_start":808,"line_end":808,"column_start":5,"column_end":34}},{"value":"/ # impl DatabaseService {","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tower-0.4.13\\src\\util\\mod.rs","byte_start":50626,"byte_end":50654,"line_start":809,"line_end":809,"column_start":5,"column_end":33}},{"value":"/ #   fn new(address: &str) -> Self {","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tower-0.4.13\\src\\util\\mod.rs","byte_start":50659,"byte_end":50698,"line_start":810,"line_end":810,"column_start":5,"column_end":44}},{"value":"/ #       DatabaseService","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tower-0.4.13\\src\\util\\mod.rs","byte_start":50703,"byte_end":50730,"line_start":811,"line_end":811,"column_start":5,"column_end":32}},{"value":"/ #   }","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tower-0.4.13\\src\\util\\mod.rs","byte_start":50735,"byte_end":50744,"line_start":812,"line_end":812,"column_start":5,"column_end":14}},{"value":"/ # }","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tower-0.4.13\\src\\util\\mod.rs","byte_start":50749,"byte_end":50756,"line_start":813,"line_end":813,"column_start":5,"column_end":12}},{"value":"/ #","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tower-0.4.13\\src\\util\\mod.rs","byte_start":50761,"byte_end":50766,"line_start":814,"line_end":814,"column_start":5,"column_end":10}},{"value":"/ # type Record = ();","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tower-0.4.13\\src\\util\\mod.rs","byte_start":50771,"byte_end":50794,"line_start":815,"line_end":815,"column_start":5,"column_end":28}},{"value":"/ # type DbError = ();","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tower-0.4.13\\src\\util\\mod.rs","byte_start":50799,"byte_end":50823,"line_start":816,"line_end":816,"column_start":5,"column_end":29}},{"value":"/ #","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tower-0.4.13\\src\\util\\mod.rs","byte_start":50828,"byte_end":50833,"line_start":817,"line_end":817,"column_start":5,"column_end":10}},{"value":"/ # impl Service<u32> for DatabaseService {","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tower-0.4.13\\src\\util\\mod.rs","byte_start":50838,"byte_end":50883,"line_start":818,"line_end":818,"column_start":5,"column_end":50}},{"value":"/ #   type Response = Record;","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tower-0.4.13\\src\\util\\mod.rs","byte_start":50888,"byte_end":50919,"line_start":819,"line_end":819,"column_start":5,"column_end":36}},{"value":"/ #   type Error = DbError;","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tower-0.4.13\\src\\util\\mod.rs","byte_start":50924,"byte_end":50953,"line_start":820,"line_end":820,"column_start":5,"column_end":34}},{"value":"/ #   type Future = futures_util::future::Ready<Result<Record, DbError>>;","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tower-0.4.13\\src\\util\\mod.rs","byte_start":50958,"byte_end":51033,"line_start":821,"line_end":821,"column_start":5,"column_end":80}},{"value":"/ #","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tower-0.4.13\\src\\util\\mod.rs","byte_start":51038,"byte_end":51043,"line_start":822,"line_end":822,"column_start":5,"column_end":10}},{"value":"/ #   fn poll_ready(&mut self, cx: &mut Context<'_>) -> Poll<Result<(), Self::Error>> {","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tower-0.4.13\\src\\util\\mod.rs","byte_start":51048,"byte_end":51137,"line_start":823,"line_end":823,"column_start":5,"column_end":94}},{"value":"/ #       Poll::Ready(Ok(()))","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tower-0.4.13\\src\\util\\mod.rs","byte_start":51142,"byte_end":51173,"line_start":824,"line_end":824,"column_start":5,"column_end":36}},{"value":"/ #   }","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tower-0.4.13\\src\\util\\mod.rs","byte_start":51178,"byte_end":51187,"line_start":825,"line_end":825,"column_start":5,"column_end":14}},{"value":"/ #","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tower-0.4.13\\src\\util\\mod.rs","byte_start":51192,"byte_end":51197,"line_start":826,"line_end":826,"column_start":5,"column_end":10}},{"value":"/ #   fn call(&mut self, request: u32) -> Self::Future {","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tower-0.4.13\\src\\util\\mod.rs","byte_start":51202,"byte_end":51260,"line_start":827,"line_end":827,"column_start":5,"column_end":63}},{"value":"/ #       futures_util::future::ready(Ok(()))","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tower-0.4.13\\src\\util\\mod.rs","byte_start":51265,"byte_end":51312,"line_start":828,"line_end":828,"column_start":5,"column_end":52}},{"value":"/ #   }","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tower-0.4.13\\src\\util\\mod.rs","byte_start":51317,"byte_end":51326,"line_start":829,"line_end":829,"column_start":5,"column_end":14}},{"value":"/ # }","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tower-0.4.13\\src\\util\\mod.rs","byte_start":51331,"byte_end":51338,"line_start":830,"line_end":830,"column_start":5,"column_end":12}},{"value":"/ #","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tower-0.4.13\\src\\util\\mod.rs","byte_start":51343,"byte_end":51348,"line_start":831,"line_end":831,"column_start":5,"column_end":10}},{"value":"/ # fn main() {","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tower-0.4.13\\src\\util\\mod.rs","byte_start":51353,"byte_end":51370,"line_start":832,"line_end":832,"column_start":5,"column_end":22}},{"value":"/ // A service returning Result<Record, DbError>","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tower-0.4.13\\src\\util\\mod.rs","byte_start":51375,"byte_end":51425,"line_start":833,"line_end":833,"column_start":5,"column_end":55}},{"value":"/ let service = DatabaseService::new(\"127.0.0.1:8080\");","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tower-0.4.13\\src\\util\\mod.rs","byte_start":51430,"byte_end":51487,"line_start":834,"line_end":834,"column_start":5,"column_end":62}},{"value":"/","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tower-0.4.13\\src\\util\\mod.rs","byte_start":51492,"byte_end":51495,"line_start":835,"line_end":835,"column_start":5,"column_end":8}},{"value":"/ // An async function that attempts to recover from errors returned by the","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tower-0.4.13\\src\\util\\mod.rs","byte_start":51500,"byte_end":51577,"line_start":836,"line_end":836,"column_start":5,"column_end":82}},{"value":"/ // database.","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tower-0.4.13\\src\\util\\mod.rs","byte_start":51582,"byte_end":51598,"line_start":837,"line_end":837,"column_start":5,"column_end":21}},{"value":"/ async fn recover_from_error(error: DbError) -> Result<Record, DbError> {","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tower-0.4.13\\src\\util\\mod.rs","byte_start":51603,"byte_end":51679,"line_start":838,"line_end":838,"column_start":5,"column_end":81}},{"value":"/     // ...","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tower-0.4.13\\src\\util\\mod.rs","byte_start":51684,"byte_end":51698,"line_start":839,"line_end":839,"column_start":5,"column_end":19}},{"value":"/     # Ok(())","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tower-0.4.13\\src\\util\\mod.rs","byte_start":51703,"byte_end":51719,"line_start":840,"line_end":840,"column_start":5,"column_end":21}},{"value":"/ }","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tower-0.4.13\\src\\util\\mod.rs","byte_start":51724,"byte_end":51729,"line_start":841,"line_end":841,"column_start":5,"column_end":10}},{"value":"/ #    async {","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tower-0.4.13\\src\\util\\mod.rs","byte_start":51734,"byte_end":51750,"line_start":842,"line_end":842,"column_start":5,"column_end":21}},{"value":"/","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tower-0.4.13\\src\\util\\mod.rs","byte_start":51755,"byte_end":51758,"line_start":843,"line_end":843,"column_start":5,"column_end":8}},{"value":"/ // If the database service returns an error, attempt to recover by","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tower-0.4.13\\src\\util\\mod.rs","byte_start":51763,"byte_end":51833,"line_start":844,"line_end":844,"column_start":5,"column_end":75}},{"value":"/ // calling `recover_from_error`. Otherwise, return the successful response.","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tower-0.4.13\\src\\util\\mod.rs","byte_start":51838,"byte_end":51917,"line_start":845,"line_end":845,"column_start":5,"column_end":84}},{"value":"/ let mut new_service = service.then(|result| async move {","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tower-0.4.13\\src\\util\\mod.rs","byte_start":51922,"byte_end":51982,"line_start":846,"line_end":846,"column_start":5,"column_end":65}},{"value":"/     match result {","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tower-0.4.13\\src\\util\\mod.rs","byte_start":51987,"byte_end":52009,"line_start":847,"line_end":847,"column_start":5,"column_end":27}},{"value":"/         Ok(record) => Ok(record),","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tower-0.4.13\\src\\util\\mod.rs","byte_start":52014,"byte_end":52051,"line_start":848,"line_end":848,"column_start":5,"column_end":42}},{"value":"/         Err(e) => recover_from_error(e).await,","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tower-0.4.13\\src\\util\\mod.rs","byte_start":52056,"byte_end":52106,"line_start":849,"line_end":849,"column_start":5,"column_end":55}},{"value":"/     }","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tower-0.4.13\\src\\util\\mod.rs","byte_start":52111,"byte_end":52120,"line_start":850,"line_end":850,"column_start":5,"column_end":14}},{"value":"/ });","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tower-0.4.13\\src\\util\\mod.rs","byte_start":52125,"byte_end":52132,"line_start":851,"line_end":851,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tower-0.4.13\\src\\util\\mod.rs","byte_start":52137,"byte_end":52140,"line_start":852,"line_end":852,"column_start":5,"column_end":8}},{"value":"/ // Call the new service","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tower-0.4.13\\src\\util\\mod.rs","byte_start":52145,"byte_end":52172,"line_start":853,"line_end":853,"column_start":5,"column_end":32}},{"value":"/ let id = 13;","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tower-0.4.13\\src\\util\\mod.rs","byte_start":52177,"byte_end":52193,"line_start":854,"line_end":854,"column_start":5,"column_end":21}},{"value":"/ let record = new_service","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tower-0.4.13\\src\\util\\mod.rs","byte_start":52198,"byte_end":52226,"line_start":855,"line_end":855,"column_start":5,"column_end":33}},{"value":"/     .ready()","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tower-0.4.13\\src\\util\\mod.rs","byte_start":52231,"byte_end":52247,"line_start":856,"line_end":856,"column_start":5,"column_end":21}},{"value":"/     .await?","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tower-0.4.13\\src\\util\\mod.rs","byte_start":52252,"byte_end":52267,"line_start":857,"line_end":857,"column_start":5,"column_end":20}},{"value":"/     .call(id)","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tower-0.4.13\\src\\util\\mod.rs","byte_start":52272,"byte_end":52289,"line_start":858,"line_end":858,"column_start":5,"column_end":22}},{"value":"/     .await?;","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tower-0.4.13\\src\\util\\mod.rs","byte_start":52294,"byte_end":52310,"line_start":859,"line_end":859,"column_start":5,"column_end":21}},{"value":"/ # Ok::<(), DbError>(())","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tower-0.4.13\\src\\util\\mod.rs","byte_start":52315,"byte_end":52342,"line_start":860,"line_end":860,"column_start":5,"column_end":32}},{"value":"/ #    };","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tower-0.4.13\\src\\util\\mod.rs","byte_start":52347,"byte_end":52358,"line_start":861,"line_end":861,"column_start":5,"column_end":16}},{"value":"/ # }","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tower-0.4.13\\src\\util\\mod.rs","byte_start":52363,"byte_end":52370,"line_start":862,"line_end":862,"column_start":5,"column_end":12}},{"value":"/ ```","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tower-0.4.13\\src\\util\\mod.rs","byte_start":52375,"byte_end":52382,"line_start":863,"line_end":863,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tower-0.4.13\\src\\util\\mod.rs","byte_start":52387,"byte_end":52390,"line_start":864,"line_end":864,"column_start":5,"column_end":8}},{"value":"/ [`Future`]: crate::Service::Future","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tower-0.4.13\\src\\util\\mod.rs","byte_start":52395,"byte_end":52433,"line_start":865,"line_end":865,"column_start":5,"column_end":43}},{"value":"/ [`Output`]: std::future::Future::Output","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tower-0.4.13\\src\\util\\mod.rs","byte_start":52438,"byte_end":52481,"line_start":866,"line_end":866,"column_start":5,"column_end":48}},{"value":"/ [`futures` crate]: https://docs.rs/futures","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tower-0.4.13\\src\\util\\mod.rs","byte_start":52486,"byte_end":52532,"line_start":867,"line_end":867,"column_start":5,"column_end":51}},{"value":"/ [`FutureExt::then`]: https://docs.rs/futures/latest/futures/future/trait.FutureExt.html#method.then","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tower-0.4.13\\src\\util\\mod.rs","byte_start":52537,"byte_end":52640,"line_start":868,"line_end":868,"column_start":5,"column_end":108}},{"value":"/ [`Error`]: crate::Service::Error","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tower-0.4.13\\src\\util\\mod.rs","byte_start":52645,"byte_end":52681,"line_start":869,"line_end":869,"column_start":5,"column_end":41}},{"value":"/ [`Response`]: crate::Service::Response","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tower-0.4.13\\src\\util\\mod.rs","byte_start":52686,"byte_end":52728,"line_start":870,"line_end":870,"column_start":5,"column_end":47}},{"value":"/ [`poll_ready`]: crate::Service::poll_ready","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tower-0.4.13\\src\\util\\mod.rs","byte_start":52733,"byte_end":52779,"line_start":871,"line_end":871,"column_start":5,"column_end":51}},{"value":"/ [`BoxError`]: crate::BoxError","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tower-0.4.13\\src\\util\\mod.rs","byte_start":52784,"byte_end":52817,"line_start":872,"line_end":872,"column_start":5,"column_end":38}}]},{"kind":"Method","id":{"krate":0,"index":1476},"span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tower-0.4.13\\src\\util\\mod.rs","byte_start":55202,"byte_end":55212,"line_start":947,"line_end":947,"column_start":8,"column_end":18},"name":"map_future","qualname":"::util::ServiceExt::map_future","value":"pub fn map_future<F, Fut, Response, Error>(Self, F) -> MapFuture<Self, F>\nwhere Self: Sized, F: FnMut(Self::Future) -> Fut, Error: From<Self::Error>,\nFut: Future<Output = Result<Response, Error>>","parent":{"krate":0,"index":1448},"children":[],"decl_id":null,"docs":" Composes a function that transforms futures produced by the service.","sig":null,"attributes":[{"value":"/ Composes a function that transforms futures produced by the service.","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tower-0.4.13\\src\\util\\mod.rs","byte_start":53119,"byte_end":53191,"line_start":883,"line_end":883,"column_start":5,"column_end":77}},{"value":"/","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tower-0.4.13\\src\\util\\mod.rs","byte_start":53196,"byte_end":53199,"line_start":884,"line_end":884,"column_start":5,"column_end":8}},{"value":"/ This takes a function or closure returning a future computed from the future returned by","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tower-0.4.13\\src\\util\\mod.rs","byte_start":53204,"byte_end":53296,"line_start":885,"line_end":885,"column_start":5,"column_end":97}},{"value":"/ the service's [`call`] method, as opposed to the responses produced by the future.","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tower-0.4.13\\src\\util\\mod.rs","byte_start":53301,"byte_end":53387,"line_start":886,"line_end":886,"column_start":5,"column_end":91}},{"value":"/","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tower-0.4.13\\src\\util\\mod.rs","byte_start":53392,"byte_end":53395,"line_start":887,"line_end":887,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tower-0.4.13\\src\\util\\mod.rs","byte_start":53400,"byte_end":53414,"line_start":888,"line_end":888,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tower-0.4.13\\src\\util\\mod.rs","byte_start":53419,"byte_end":53422,"line_start":889,"line_end":889,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tower-0.4.13\\src\\util\\mod.rs","byte_start":53427,"byte_end":53434,"line_start":890,"line_end":890,"column_start":5,"column_end":12}},{"value":"/ # use std::task::{Poll, Context};","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tower-0.4.13\\src\\util\\mod.rs","byte_start":53439,"byte_end":53476,"line_start":891,"line_end":891,"column_start":5,"column_end":42}},{"value":"/ # use tower::{Service, ServiceExt, BoxError};","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tower-0.4.13\\src\\util\\mod.rs","byte_start":53481,"byte_end":53530,"line_start":892,"line_end":892,"column_start":5,"column_end":54}},{"value":"/ #","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tower-0.4.13\\src\\util\\mod.rs","byte_start":53535,"byte_end":53540,"line_start":893,"line_end":893,"column_start":5,"column_end":10}},{"value":"/ # struct DatabaseService;","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tower-0.4.13\\src\\util\\mod.rs","byte_start":53545,"byte_end":53574,"line_start":894,"line_end":894,"column_start":5,"column_end":34}},{"value":"/ # impl DatabaseService {","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tower-0.4.13\\src\\util\\mod.rs","byte_start":53579,"byte_end":53607,"line_start":895,"line_end":895,"column_start":5,"column_end":33}},{"value":"/ #   fn new(address: &str) -> Self {","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tower-0.4.13\\src\\util\\mod.rs","byte_start":53612,"byte_end":53651,"line_start":896,"line_end":896,"column_start":5,"column_end":44}},{"value":"/ #       DatabaseService","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tower-0.4.13\\src\\util\\mod.rs","byte_start":53656,"byte_end":53683,"line_start":897,"line_end":897,"column_start":5,"column_end":32}},{"value":"/ #   }","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tower-0.4.13\\src\\util\\mod.rs","byte_start":53688,"byte_end":53697,"line_start":898,"line_end":898,"column_start":5,"column_end":14}},{"value":"/ # }","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tower-0.4.13\\src\\util\\mod.rs","byte_start":53702,"byte_end":53709,"line_start":899,"line_end":899,"column_start":5,"column_end":12}},{"value":"/ #","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tower-0.4.13\\src\\util\\mod.rs","byte_start":53714,"byte_end":53719,"line_start":900,"line_end":900,"column_start":5,"column_end":10}},{"value":"/ # type Record = ();","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tower-0.4.13\\src\\util\\mod.rs","byte_start":53724,"byte_end":53747,"line_start":901,"line_end":901,"column_start":5,"column_end":28}},{"value":"/ # type DbError = crate::BoxError;","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tower-0.4.13\\src\\util\\mod.rs","byte_start":53752,"byte_end":53789,"line_start":902,"line_end":902,"column_start":5,"column_end":42}},{"value":"/ #","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tower-0.4.13\\src\\util\\mod.rs","byte_start":53794,"byte_end":53799,"line_start":903,"line_end":903,"column_start":5,"column_end":10}},{"value":"/ # impl Service<u32> for DatabaseService {","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tower-0.4.13\\src\\util\\mod.rs","byte_start":53804,"byte_end":53849,"line_start":904,"line_end":904,"column_start":5,"column_end":50}},{"value":"/ #   type Response = Record;","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tower-0.4.13\\src\\util\\mod.rs","byte_start":53854,"byte_end":53885,"line_start":905,"line_end":905,"column_start":5,"column_end":36}},{"value":"/ #   type Error = DbError;","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tower-0.4.13\\src\\util\\mod.rs","byte_start":53890,"byte_end":53919,"line_start":906,"line_end":906,"column_start":5,"column_end":34}},{"value":"/ #   type Future = futures_util::future::Ready<Result<Record, DbError>>;","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tower-0.4.13\\src\\util\\mod.rs","byte_start":53924,"byte_end":53999,"line_start":907,"line_end":907,"column_start":5,"column_end":80}},{"value":"/ #","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tower-0.4.13\\src\\util\\mod.rs","byte_start":54004,"byte_end":54009,"line_start":908,"line_end":908,"column_start":5,"column_end":10}},{"value":"/ #   fn poll_ready(&mut self, cx: &mut Context<'_>) -> Poll<Result<(), Self::Error>> {","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tower-0.4.13\\src\\util\\mod.rs","byte_start":54014,"byte_end":54103,"line_start":909,"line_end":909,"column_start":5,"column_end":94}},{"value":"/ #       Poll::Ready(Ok(()))","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tower-0.4.13\\src\\util\\mod.rs","byte_start":54108,"byte_end":54139,"line_start":910,"line_end":910,"column_start":5,"column_end":36}},{"value":"/ #   }","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tower-0.4.13\\src\\util\\mod.rs","byte_start":54144,"byte_end":54153,"line_start":911,"line_end":911,"column_start":5,"column_end":14}},{"value":"/ #","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tower-0.4.13\\src\\util\\mod.rs","byte_start":54158,"byte_end":54163,"line_start":912,"line_end":912,"column_start":5,"column_end":10}},{"value":"/ #   fn call(&mut self, request: u32) -> Self::Future {","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tower-0.4.13\\src\\util\\mod.rs","byte_start":54168,"byte_end":54226,"line_start":913,"line_end":913,"column_start":5,"column_end":63}},{"value":"/ #       futures_util::future::ready(Ok(()))","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tower-0.4.13\\src\\util\\mod.rs","byte_start":54231,"byte_end":54278,"line_start":914,"line_end":914,"column_start":5,"column_end":52}},{"value":"/ #   }","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tower-0.4.13\\src\\util\\mod.rs","byte_start":54283,"byte_end":54292,"line_start":915,"line_end":915,"column_start":5,"column_end":14}},{"value":"/ # }","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tower-0.4.13\\src\\util\\mod.rs","byte_start":54297,"byte_end":54304,"line_start":916,"line_end":916,"column_start":5,"column_end":12}},{"value":"/ #","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tower-0.4.13\\src\\util\\mod.rs","byte_start":54309,"byte_end":54314,"line_start":917,"line_end":917,"column_start":5,"column_end":10}},{"value":"/ # fn main() {","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tower-0.4.13\\src\\util\\mod.rs","byte_start":54319,"byte_end":54336,"line_start":918,"line_end":918,"column_start":5,"column_end":22}},{"value":"/ use std::time::Duration;","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tower-0.4.13\\src\\util\\mod.rs","byte_start":54341,"byte_end":54369,"line_start":919,"line_end":919,"column_start":5,"column_end":33}},{"value":"/ use tokio::time::timeout;","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tower-0.4.13\\src\\util\\mod.rs","byte_start":54374,"byte_end":54403,"line_start":920,"line_end":920,"column_start":5,"column_end":34}},{"value":"/","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tower-0.4.13\\src\\util\\mod.rs","byte_start":54408,"byte_end":54411,"line_start":921,"line_end":921,"column_start":5,"column_end":8}},{"value":"/ // A service returning Result<Record, DbError>","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tower-0.4.13\\src\\util\\mod.rs","byte_start":54416,"byte_end":54466,"line_start":922,"line_end":922,"column_start":5,"column_end":55}},{"value":"/ let service = DatabaseService::new(\"127.0.0.1:8080\");","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tower-0.4.13\\src\\util\\mod.rs","byte_start":54471,"byte_end":54528,"line_start":923,"line_end":923,"column_start":5,"column_end":62}},{"value":"/ #    async {","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tower-0.4.13\\src\\util\\mod.rs","byte_start":54533,"byte_end":54549,"line_start":924,"line_end":924,"column_start":5,"column_end":21}},{"value":"/","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tower-0.4.13\\src\\util\\mod.rs","byte_start":54554,"byte_end":54557,"line_start":925,"line_end":925,"column_start":5,"column_end":8}},{"value":"/ let mut new_service = service.map_future(|future| async move {","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tower-0.4.13\\src\\util\\mod.rs","byte_start":54562,"byte_end":54628,"line_start":926,"line_end":926,"column_start":5,"column_end":71}},{"value":"/     let res = timeout(Duration::from_secs(1), future).await?;","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tower-0.4.13\\src\\util\\mod.rs","byte_start":54633,"byte_end":54698,"line_start":927,"line_end":927,"column_start":5,"column_end":70}},{"value":"/     Ok::<_, BoxError>(res)","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tower-0.4.13\\src\\util\\mod.rs","byte_start":54703,"byte_end":54733,"line_start":928,"line_end":928,"column_start":5,"column_end":35}},{"value":"/ });","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tower-0.4.13\\src\\util\\mod.rs","byte_start":54738,"byte_end":54745,"line_start":929,"line_end":929,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tower-0.4.13\\src\\util\\mod.rs","byte_start":54750,"byte_end":54753,"line_start":930,"line_end":930,"column_start":5,"column_end":8}},{"value":"/ // Call the new service","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tower-0.4.13\\src\\util\\mod.rs","byte_start":54758,"byte_end":54785,"line_start":931,"line_end":931,"column_start":5,"column_end":32}},{"value":"/ let id = 13;","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tower-0.4.13\\src\\util\\mod.rs","byte_start":54790,"byte_end":54806,"line_start":932,"line_end":932,"column_start":5,"column_end":21}},{"value":"/ let record = new_service","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tower-0.4.13\\src\\util\\mod.rs","byte_start":54811,"byte_end":54839,"line_start":933,"line_end":933,"column_start":5,"column_end":33}},{"value":"/     .ready()","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tower-0.4.13\\src\\util\\mod.rs","byte_start":54844,"byte_end":54860,"line_start":934,"line_end":934,"column_start":5,"column_end":21}},{"value":"/     .await?","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tower-0.4.13\\src\\util\\mod.rs","byte_start":54865,"byte_end":54880,"line_start":935,"line_end":935,"column_start":5,"column_end":20}},{"value":"/     .call(id)","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tower-0.4.13\\src\\util\\mod.rs","byte_start":54885,"byte_end":54902,"line_start":936,"line_end":936,"column_start":5,"column_end":22}},{"value":"/     .await?;","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tower-0.4.13\\src\\util\\mod.rs","byte_start":54907,"byte_end":54923,"line_start":937,"line_end":937,"column_start":5,"column_end":21}},{"value":"/ # Ok::<(), BoxError>(())","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tower-0.4.13\\src\\util\\mod.rs","byte_start":54928,"byte_end":54956,"line_start":938,"line_end":938,"column_start":5,"column_end":33}},{"value":"/ #    };","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tower-0.4.13\\src\\util\\mod.rs","byte_start":54961,"byte_end":54972,"line_start":939,"line_end":939,"column_start":5,"column_end":16}},{"value":"/ # }","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tower-0.4.13\\src\\util\\mod.rs","byte_start":54977,"byte_end":54984,"line_start":940,"line_end":940,"column_start":5,"column_end":12}},{"value":"/ ```","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tower-0.4.13\\src\\util\\mod.rs","byte_start":54989,"byte_end":54996,"line_start":941,"line_end":941,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tower-0.4.13\\src\\util\\mod.rs","byte_start":55001,"byte_end":55004,"line_start":942,"line_end":942,"column_start":5,"column_end":8}},{"value":"/ Note that normally you wouldn't implement timeouts like this and instead use [`Timeout`].","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tower-0.4.13\\src\\util\\mod.rs","byte_start":55009,"byte_end":55102,"line_start":943,"line_end":943,"column_start":5,"column_end":98}},{"value":"/","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tower-0.4.13\\src\\util\\mod.rs","byte_start":55107,"byte_end":55110,"line_start":944,"line_end":944,"column_start":5,"column_end":8}},{"value":"/ [`call`]: crate::Service::call","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tower-0.4.13\\src\\util\\mod.rs","byte_start":55115,"byte_end":55149,"line_start":945,"line_end":945,"column_start":5,"column_end":39}},{"value":"/ [`Timeout`]: crate::timeout::Timeout","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tower-0.4.13\\src\\util\\mod.rs","byte_start":55154,"byte_end":55194,"line_start":946,"line_end":946,"column_start":5,"column_end":45}}]},{"kind":"Method","id":{"krate":0,"index":1481},"span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tower-0.4.13\\src\\util\\mod.rs","byte_start":56750,"byte_end":56755,"line_start":997,"line_end":997,"column_start":8,"column_end":13},"name":"boxed","qualname":"::util::ServiceExt::boxed","value":"pub fn boxed(Self) -> BoxService<Request, Self::Response, Self::Error> where\nSelf: Sized + Send + 'static, Self::Future: Send + 'static","parent":{"krate":0,"index":1448},"children":[],"decl_id":null,"docs":" Convert the service into a [`Service`] + [`Send`] trait object.","sig":null,"attributes":[{"value":"/ Convert the service into a [`Service`] + [`Send`] trait object.","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tower-0.4.13\\src\\util\\mod.rs","byte_start":55480,"byte_end":55547,"line_start":957,"line_end":957,"column_start":5,"column_end":72}},{"value":"/","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tower-0.4.13\\src\\util\\mod.rs","byte_start":55552,"byte_end":55555,"line_start":958,"line_end":958,"column_start":5,"column_end":8}},{"value":"/ See [`BoxService`] for more details.","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tower-0.4.13\\src\\util\\mod.rs","byte_start":55560,"byte_end":55600,"line_start":959,"line_end":959,"column_start":5,"column_end":45}},{"value":"/","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tower-0.4.13\\src\\util\\mod.rs","byte_start":55605,"byte_end":55608,"line_start":960,"line_end":960,"column_start":5,"column_end":8}},{"value":"/ If `Self` implements the [`Clone`] trait, the [`boxed_clone`] method","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tower-0.4.13\\src\\util\\mod.rs","byte_start":55613,"byte_end":55685,"line_start":961,"line_end":961,"column_start":5,"column_end":77}},{"value":"/ can be used instead, to produce a boxed service which will also","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tower-0.4.13\\src\\util\\mod.rs","byte_start":55690,"byte_end":55757,"line_start":962,"line_end":962,"column_start":5,"column_end":72}},{"value":"/ implement [`Clone`].","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tower-0.4.13\\src\\util\\mod.rs","byte_start":55762,"byte_end":55786,"line_start":963,"line_end":963,"column_start":5,"column_end":29}},{"value":"/","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tower-0.4.13\\src\\util\\mod.rs","byte_start":55791,"byte_end":55794,"line_start":964,"line_end":964,"column_start":5,"column_end":8}},{"value":"/ # Example","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tower-0.4.13\\src\\util\\mod.rs","byte_start":55799,"byte_end":55812,"line_start":965,"line_end":965,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tower-0.4.13\\src\\util\\mod.rs","byte_start":55817,"byte_end":55820,"line_start":966,"line_end":966,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tower-0.4.13\\src\\util\\mod.rs","byte_start":55825,"byte_end":55832,"line_start":967,"line_end":967,"column_start":5,"column_end":12}},{"value":"/ use tower::{Service, ServiceExt, BoxError, service_fn, util::BoxService};","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tower-0.4.13\\src\\util\\mod.rs","byte_start":55837,"byte_end":55914,"line_start":968,"line_end":968,"column_start":5,"column_end":82}},{"value":"/ #","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tower-0.4.13\\src\\util\\mod.rs","byte_start":55919,"byte_end":55924,"line_start":969,"line_end":969,"column_start":5,"column_end":10}},{"value":"/ # struct Request;","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tower-0.4.13\\src\\util\\mod.rs","byte_start":55929,"byte_end":55950,"line_start":970,"line_end":970,"column_start":5,"column_end":26}},{"value":"/ # struct Response;","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tower-0.4.13\\src\\util\\mod.rs","byte_start":55955,"byte_end":55977,"line_start":971,"line_end":971,"column_start":5,"column_end":27}},{"value":"/ # impl Response {","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tower-0.4.13\\src\\util\\mod.rs","byte_start":55982,"byte_end":56003,"line_start":972,"line_end":972,"column_start":5,"column_end":26}},{"value":"/ #     fn new() -> Self { Self }","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tower-0.4.13\\src\\util\\mod.rs","byte_start":56008,"byte_end":56043,"line_start":973,"line_end":973,"column_start":5,"column_end":40}},{"value":"/ # }","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tower-0.4.13\\src\\util\\mod.rs","byte_start":56048,"byte_end":56055,"line_start":974,"line_end":974,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tower-0.4.13\\src\\util\\mod.rs","byte_start":56060,"byte_end":56063,"line_start":975,"line_end":975,"column_start":5,"column_end":8}},{"value":"/ let service = service_fn(|req: Request| async {","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tower-0.4.13\\src\\util\\mod.rs","byte_start":56068,"byte_end":56119,"line_start":976,"line_end":976,"column_start":5,"column_end":56}},{"value":"/     Ok::<_, BoxError>(Response::new())","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tower-0.4.13\\src\\util\\mod.rs","byte_start":56124,"byte_end":56166,"line_start":977,"line_end":977,"column_start":5,"column_end":47}},{"value":"/ });","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tower-0.4.13\\src\\util\\mod.rs","byte_start":56171,"byte_end":56178,"line_start":978,"line_end":978,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tower-0.4.13\\src\\util\\mod.rs","byte_start":56183,"byte_end":56186,"line_start":979,"line_end":979,"column_start":5,"column_end":8}},{"value":"/ let service: BoxService<Request, Response, BoxError> = service","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tower-0.4.13\\src\\util\\mod.rs","byte_start":56191,"byte_end":56257,"line_start":980,"line_end":980,"column_start":5,"column_end":71}},{"value":"/     .map_request(|req| {","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tower-0.4.13\\src\\util\\mod.rs","byte_start":56262,"byte_end":56290,"line_start":981,"line_end":981,"column_start":5,"column_end":33}},{"value":"/         println!(\"received request\");","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tower-0.4.13\\src\\util\\mod.rs","byte_start":56295,"byte_end":56336,"line_start":982,"line_end":982,"column_start":5,"column_end":46}},{"value":"/         req","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tower-0.4.13\\src\\util\\mod.rs","byte_start":56341,"byte_end":56356,"line_start":983,"line_end":983,"column_start":5,"column_end":20}},{"value":"/     })","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tower-0.4.13\\src\\util\\mod.rs","byte_start":56361,"byte_end":56371,"line_start":984,"line_end":984,"column_start":5,"column_end":15}},{"value":"/     .map_response(|res| {","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tower-0.4.13\\src\\util\\mod.rs","byte_start":56376,"byte_end":56405,"line_start":985,"line_end":985,"column_start":5,"column_end":34}},{"value":"/         println!(\"response produced\");","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tower-0.4.13\\src\\util\\mod.rs","byte_start":56410,"byte_end":56452,"line_start":986,"line_end":986,"column_start":5,"column_end":47}},{"value":"/         res","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tower-0.4.13\\src\\util\\mod.rs","byte_start":56457,"byte_end":56472,"line_start":987,"line_end":987,"column_start":5,"column_end":20}},{"value":"/     })","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tower-0.4.13\\src\\util\\mod.rs","byte_start":56477,"byte_end":56487,"line_start":988,"line_end":988,"column_start":5,"column_end":15}},{"value":"/     .boxed();","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tower-0.4.13\\src\\util\\mod.rs","byte_start":56492,"byte_end":56509,"line_start":989,"line_end":989,"column_start":5,"column_end":22}},{"value":"/ # let service = assert_service(service);","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tower-0.4.13\\src\\util\\mod.rs","byte_start":56514,"byte_end":56558,"line_start":990,"line_end":990,"column_start":5,"column_end":49}},{"value":"/ # fn assert_service<S, R>(svc: S) -> S","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tower-0.4.13\\src\\util\\mod.rs","byte_start":56563,"byte_end":56605,"line_start":991,"line_end":991,"column_start":5,"column_end":47}},{"value":"/ # where S: Service<R> { svc }","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tower-0.4.13\\src\\util\\mod.rs","byte_start":56610,"byte_end":56643,"line_start":992,"line_end":992,"column_start":5,"column_end":38}},{"value":"/ ```","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tower-0.4.13\\src\\util\\mod.rs","byte_start":56648,"byte_end":56655,"line_start":993,"line_end":993,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tower-0.4.13\\src\\util\\mod.rs","byte_start":56660,"byte_end":56663,"line_start":994,"line_end":994,"column_start":5,"column_end":8}},{"value":"/ [`Service`]: crate::Service","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tower-0.4.13\\src\\util\\mod.rs","byte_start":56668,"byte_end":56699,"line_start":995,"line_end":995,"column_start":5,"column_end":36}},{"value":"/ [`boxed_clone`]: Self::boxed_clone","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tower-0.4.13\\src\\util\\mod.rs","byte_start":56704,"byte_end":56742,"line_start":996,"line_end":996,"column_start":5,"column_end":43}}]},{"kind":"Method","id":{"krate":0,"index":1482},"span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tower-0.4.13\\src\\util\\mod.rs","byte_start":58294,"byte_end":58305,"line_start":1046,"line_end":1046,"column_start":8,"column_end":19},"name":"boxed_clone","qualname":"::util::ServiceExt::boxed_clone","value":"pub fn boxed_clone(Self)\n-> BoxCloneService<Request, Self::Response, Self::Error> where Self: Clone +\nSized + Send + 'static, Self::Future: Send + 'static","parent":{"krate":0,"index":1448},"children":[],"decl_id":null,"docs":" Convert the service into a [`Service`] + [`Clone`] + [`Send`] trait object.","sig":null,"attributes":[{"value":"/ Convert the service into a [`Service`] + [`Clone`] + [`Send`] trait object.","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tower-0.4.13\\src\\util\\mod.rs","byte_start":56947,"byte_end":57026,"line_start":1005,"line_end":1005,"column_start":5,"column_end":84}},{"value":"/","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tower-0.4.13\\src\\util\\mod.rs","byte_start":57031,"byte_end":57034,"line_start":1006,"line_end":1006,"column_start":5,"column_end":8}},{"value":"/ This is similar to the [`boxed`] method, but it requires that `Self` implement","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tower-0.4.13\\src\\util\\mod.rs","byte_start":57039,"byte_end":57121,"line_start":1007,"line_end":1007,"column_start":5,"column_end":87}},{"value":"/ [`Clone`], and the returned boxed service implements [`Clone`].","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tower-0.4.13\\src\\util\\mod.rs","byte_start":57126,"byte_end":57193,"line_start":1008,"line_end":1008,"column_start":5,"column_end":72}},{"value":"/ See [`BoxCloneService`] for more details.","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tower-0.4.13\\src\\util\\mod.rs","byte_start":57198,"byte_end":57243,"line_start":1009,"line_end":1009,"column_start":5,"column_end":50}},{"value":"/","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tower-0.4.13\\src\\util\\mod.rs","byte_start":57248,"byte_end":57251,"line_start":1010,"line_end":1010,"column_start":5,"column_end":8}},{"value":"/ # Example","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tower-0.4.13\\src\\util\\mod.rs","byte_start":57256,"byte_end":57269,"line_start":1011,"line_end":1011,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tower-0.4.13\\src\\util\\mod.rs","byte_start":57274,"byte_end":57277,"line_start":1012,"line_end":1012,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tower-0.4.13\\src\\util\\mod.rs","byte_start":57282,"byte_end":57289,"line_start":1013,"line_end":1013,"column_start":5,"column_end":12}},{"value":"/ use tower::{Service, ServiceExt, BoxError, service_fn, util::BoxCloneService};","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tower-0.4.13\\src\\util\\mod.rs","byte_start":57294,"byte_end":57376,"line_start":1014,"line_end":1014,"column_start":5,"column_end":87}},{"value":"/ #","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tower-0.4.13\\src\\util\\mod.rs","byte_start":57381,"byte_end":57386,"line_start":1015,"line_end":1015,"column_start":5,"column_end":10}},{"value":"/ # struct Request;","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tower-0.4.13\\src\\util\\mod.rs","byte_start":57391,"byte_end":57412,"line_start":1016,"line_end":1016,"column_start":5,"column_end":26}},{"value":"/ # struct Response;","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tower-0.4.13\\src\\util\\mod.rs","byte_start":57417,"byte_end":57439,"line_start":1017,"line_end":1017,"column_start":5,"column_end":27}},{"value":"/ # impl Response {","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tower-0.4.13\\src\\util\\mod.rs","byte_start":57444,"byte_end":57465,"line_start":1018,"line_end":1018,"column_start":5,"column_end":26}},{"value":"/ #     fn new() -> Self { Self }","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tower-0.4.13\\src\\util\\mod.rs","byte_start":57470,"byte_end":57505,"line_start":1019,"line_end":1019,"column_start":5,"column_end":40}},{"value":"/ # }","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tower-0.4.13\\src\\util\\mod.rs","byte_start":57510,"byte_end":57517,"line_start":1020,"line_end":1020,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tower-0.4.13\\src\\util\\mod.rs","byte_start":57522,"byte_end":57525,"line_start":1021,"line_end":1021,"column_start":5,"column_end":8}},{"value":"/ let service = service_fn(|req: Request| async {","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tower-0.4.13\\src\\util\\mod.rs","byte_start":57530,"byte_end":57581,"line_start":1022,"line_end":1022,"column_start":5,"column_end":56}},{"value":"/     Ok::<_, BoxError>(Response::new())","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tower-0.4.13\\src\\util\\mod.rs","byte_start":57586,"byte_end":57628,"line_start":1023,"line_end":1023,"column_start":5,"column_end":47}},{"value":"/ });","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tower-0.4.13\\src\\util\\mod.rs","byte_start":57633,"byte_end":57640,"line_start":1024,"line_end":1024,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tower-0.4.13\\src\\util\\mod.rs","byte_start":57645,"byte_end":57648,"line_start":1025,"line_end":1025,"column_start":5,"column_end":8}},{"value":"/ let service: BoxCloneService<Request, Response, BoxError> = service","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tower-0.4.13\\src\\util\\mod.rs","byte_start":57653,"byte_end":57724,"line_start":1026,"line_end":1026,"column_start":5,"column_end":76}},{"value":"/     .map_request(|req| {","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tower-0.4.13\\src\\util\\mod.rs","byte_start":57729,"byte_end":57757,"line_start":1027,"line_end":1027,"column_start":5,"column_end":33}},{"value":"/         println!(\"received request\");","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tower-0.4.13\\src\\util\\mod.rs","byte_start":57762,"byte_end":57803,"line_start":1028,"line_end":1028,"column_start":5,"column_end":46}},{"value":"/         req","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tower-0.4.13\\src\\util\\mod.rs","byte_start":57808,"byte_end":57823,"line_start":1029,"line_end":1029,"column_start":5,"column_end":20}},{"value":"/     })","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tower-0.4.13\\src\\util\\mod.rs","byte_start":57828,"byte_end":57838,"line_start":1030,"line_end":1030,"column_start":5,"column_end":15}},{"value":"/     .map_response(|res| {","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tower-0.4.13\\src\\util\\mod.rs","byte_start":57843,"byte_end":57872,"line_start":1031,"line_end":1031,"column_start":5,"column_end":34}},{"value":"/         println!(\"response produced\");","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tower-0.4.13\\src\\util\\mod.rs","byte_start":57877,"byte_end":57919,"line_start":1032,"line_end":1032,"column_start":5,"column_end":47}},{"value":"/         res","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tower-0.4.13\\src\\util\\mod.rs","byte_start":57924,"byte_end":57939,"line_start":1033,"line_end":1033,"column_start":5,"column_end":20}},{"value":"/     })","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tower-0.4.13\\src\\util\\mod.rs","byte_start":57944,"byte_end":57954,"line_start":1034,"line_end":1034,"column_start":5,"column_end":15}},{"value":"/     .boxed_clone();","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tower-0.4.13\\src\\util\\mod.rs","byte_start":57959,"byte_end":57982,"line_start":1035,"line_end":1035,"column_start":5,"column_end":28}},{"value":"/","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tower-0.4.13\\src\\util\\mod.rs","byte_start":57987,"byte_end":57990,"line_start":1036,"line_end":1036,"column_start":5,"column_end":8}},{"value":"/ // The boxed service can still be cloned.","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tower-0.4.13\\src\\util\\mod.rs","byte_start":57995,"byte_end":58040,"line_start":1037,"line_end":1037,"column_start":5,"column_end":50}},{"value":"/ service.clone();","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tower-0.4.13\\src\\util\\mod.rs","byte_start":58045,"byte_end":58065,"line_start":1038,"line_end":1038,"column_start":5,"column_end":25}},{"value":"/ # let service = assert_service(service);","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tower-0.4.13\\src\\util\\mod.rs","byte_start":58070,"byte_end":58114,"line_start":1039,"line_end":1039,"column_start":5,"column_end":49}},{"value":"/ # fn assert_service<S, R>(svc: S) -> S","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tower-0.4.13\\src\\util\\mod.rs","byte_start":58119,"byte_end":58161,"line_start":1040,"line_end":1040,"column_start":5,"column_end":47}},{"value":"/ # where S: Service<R> { svc }","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tower-0.4.13\\src\\util\\mod.rs","byte_start":58166,"byte_end":58199,"line_start":1041,"line_end":1041,"column_start":5,"column_end":38}},{"value":"/ ```","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tower-0.4.13\\src\\util\\mod.rs","byte_start":58204,"byte_end":58211,"line_start":1042,"line_end":1042,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tower-0.4.13\\src\\util\\mod.rs","byte_start":58216,"byte_end":58219,"line_start":1043,"line_end":1043,"column_start":5,"column_end":8}},{"value":"/ [`Service`]: crate::Service","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tower-0.4.13\\src\\util\\mod.rs","byte_start":58224,"byte_end":58255,"line_start":1044,"line_end":1044,"column_start":5,"column_end":36}},{"value":"/ [`boxed`]: Self::boxed","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tower-0.4.13\\src\\util\\mod.rs","byte_start":58260,"byte_end":58286,"line_start":1045,"line_end":1045,"column_start":5,"column_end":31}}]},{"kind":"Function","id":{"krate":0,"index":1486},"span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tower-0.4.13\\src\\util\\mod.rs","byte_start":59263,"byte_end":59275,"line_start":1077,"line_end":1077,"column_start":8,"column_end":20},"name":"option_layer","qualname":"::util::option_layer","value":"pub fn option_layer<L>(Option<L>) -> Either<L, Identity>","parent":null,"children":[],"decl_id":null,"docs":" Convert an `Option<Layer>` into a [`Layer`].","sig":null,"attributes":[{"value":"/ Convert an `Option<Layer>` into a [`Layer`].","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tower-0.4.13\\src\\util\\mod.rs","byte_start":58609,"byte_end":58657,"line_start":1057,"line_end":1057,"column_start":1,"column_end":49}},{"value":"/","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tower-0.4.13\\src\\util\\mod.rs","byte_start":58658,"byte_end":58661,"line_start":1058,"line_end":1058,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tower-0.4.13\\src\\util\\mod.rs","byte_start":58662,"byte_end":58669,"line_start":1059,"line_end":1059,"column_start":1,"column_end":8}},{"value":"/ # use std::time::Duration;","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tower-0.4.13\\src\\util\\mod.rs","byte_start":58670,"byte_end":58700,"line_start":1060,"line_end":1060,"column_start":1,"column_end":31}},{"value":"/ # use tower::Service;","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tower-0.4.13\\src\\util\\mod.rs","byte_start":58701,"byte_end":58726,"line_start":1061,"line_end":1061,"column_start":1,"column_end":26}},{"value":"/ # use tower::builder::ServiceBuilder;","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tower-0.4.13\\src\\util\\mod.rs","byte_start":58727,"byte_end":58768,"line_start":1062,"line_end":1062,"column_start":1,"column_end":42}},{"value":"/ use tower::util::option_layer;","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tower-0.4.13\\src\\util\\mod.rs","byte_start":58769,"byte_end":58803,"line_start":1063,"line_end":1063,"column_start":1,"column_end":35}},{"value":"/ # use tower::timeout::TimeoutLayer;","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tower-0.4.13\\src\\util\\mod.rs","byte_start":58804,"byte_end":58843,"line_start":1064,"line_end":1064,"column_start":1,"column_end":40}},{"value":"/ # async fn wrap<S>(svc: S) where S: Service<(), Error = &'static str> + 'static + Send, S::Future: Send {","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tower-0.4.13\\src\\util\\mod.rs","byte_start":58844,"byte_end":58953,"line_start":1065,"line_end":1065,"column_start":1,"column_end":110}},{"value":"/ # let timeout = Some(Duration::new(10, 0));","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tower-0.4.13\\src\\util\\mod.rs","byte_start":58954,"byte_end":59001,"line_start":1066,"line_end":1066,"column_start":1,"column_end":48}},{"value":"/ // Layer to apply a timeout if configured","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tower-0.4.13\\src\\util\\mod.rs","byte_start":59002,"byte_end":59047,"line_start":1067,"line_end":1067,"column_start":1,"column_end":46}},{"value":"/ let maybe_timeout = option_layer(timeout.map(TimeoutLayer::new));","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tower-0.4.13\\src\\util\\mod.rs","byte_start":59048,"byte_end":59117,"line_start":1068,"line_end":1068,"column_start":1,"column_end":70}},{"value":"/","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tower-0.4.13\\src\\util\\mod.rs","byte_start":59118,"byte_end":59121,"line_start":1069,"line_end":1069,"column_start":1,"column_end":4}},{"value":"/ ServiceBuilder::new()","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tower-0.4.13\\src\\util\\mod.rs","byte_start":59122,"byte_end":59147,"line_start":1070,"line_end":1070,"column_start":1,"column_end":26}},{"value":"/     .layer(maybe_timeout)","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tower-0.4.13\\src\\util\\mod.rs","byte_start":59148,"byte_end":59177,"line_start":1071,"line_end":1071,"column_start":1,"column_end":30}},{"value":"/     .service(svc);","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tower-0.4.13\\src\\util\\mod.rs","byte_start":59178,"byte_end":59200,"line_start":1072,"line_end":1072,"column_start":1,"column_end":23}},{"value":"/ # }","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tower-0.4.13\\src\\util\\mod.rs","byte_start":59201,"byte_end":59208,"line_start":1073,"line_end":1073,"column_start":1,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tower-0.4.13\\src\\util\\mod.rs","byte_start":59209,"byte_end":59216,"line_start":1074,"line_end":1074,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tower-0.4.13\\src\\util\\mod.rs","byte_start":59217,"byte_end":59220,"line_start":1075,"line_end":1075,"column_start":1,"column_end":4}},{"value":"/ [`Layer`]: crate::layer::Layer","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tower-0.4.13\\src\\util\\mod.rs","byte_start":59221,"byte_end":59255,"line_start":1076,"line_end":1076,"column_start":1,"column_end":35}}]},{"kind":"Mod","id":{"krate":0,"index":1488},"span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tower-0.4.13\\src\\builder\\mod.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"builder","qualname":"::builder","value":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tower-0.4.13\\src\\builder\\mod.rs","parent":null,"children":[{"krate":0,"index":1489},{"krate":0,"index":1490},{"krate":0,"index":1493},{"krate":0,"index":1496},{"krate":0,"index":1499},{"krate":0,"index":1502},{"krate":0,"index":2442},{"krate":0,"index":2445},{"krate":0,"index":1505},{"krate":0,"index":1507},{"krate":0,"index":1509},{"krate":0,"index":1552},{"krate":0,"index":1555}],"decl_id":null,"docs":" Builder types to compose layers and services\n","sig":null,"attributes":[{"value":"/ Builder types to compose layers and services","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tower-0.4.13\\src\\builder\\mod.rs","byte_start":122228,"byte_end":122276,"line_start":1,"line_end":1,"column_start":1,"column_end":49}}]},{"kind":"Struct","id":{"krate":0,"index":2442},"span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tower-0.4.13\\src\\builder\\mod.rs","byte_start":125760,"byte_end":125774,"line_start":106,"line_end":106,"column_start":12,"column_end":26},"name":"ServiceBuilder","qualname":"::builder::ServiceBuilder","value":"ServiceBuilder {  }","parent":null,"children":[{"krate":0,"index":2444}],"decl_id":null,"docs":" Declaratively construct [`Service`] values.","sig":null,"attributes":[{"value":"/ Declaratively construct [`Service`] values.","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tower-0.4.13\\src\\builder\\mod.rs","byte_start":122365,"byte_end":122412,"line_start":8,"line_end":8,"column_start":1,"column_end":48}},{"value":"/","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tower-0.4.13\\src\\builder\\mod.rs","byte_start":122413,"byte_end":122416,"line_start":9,"line_end":9,"column_start":1,"column_end":4}},{"value":"/ [`ServiceBuilder`] provides a [builder-like interface][builder] for composing","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tower-0.4.13\\src\\builder\\mod.rs","byte_start":122417,"byte_end":122498,"line_start":10,"line_end":10,"column_start":1,"column_end":82}},{"value":"/ layers to be applied to a [`Service`].","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tower-0.4.13\\src\\builder\\mod.rs","byte_start":122499,"byte_end":122541,"line_start":11,"line_end":11,"column_start":1,"column_end":43}},{"value":"/","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tower-0.4.13\\src\\builder\\mod.rs","byte_start":122542,"byte_end":122545,"line_start":12,"line_end":12,"column_start":1,"column_end":4}},{"value":"/ # Service","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tower-0.4.13\\src\\builder\\mod.rs","byte_start":122546,"byte_end":122559,"line_start":13,"line_end":13,"column_start":1,"column_end":14}},{"value":"/","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tower-0.4.13\\src\\builder\\mod.rs","byte_start":122560,"byte_end":122563,"line_start":14,"line_end":14,"column_start":1,"column_end":4}},{"value":"/ A [`Service`] is a trait representing an asynchronous function of a request","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tower-0.4.13\\src\\builder\\mod.rs","byte_start":122564,"byte_end":122643,"line_start":15,"line_end":15,"column_start":1,"column_end":80}},{"value":"/ to a response. It is similar to `async fn(Request) -> Result<Response, Error>`.","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tower-0.4.13\\src\\builder\\mod.rs","byte_start":122644,"byte_end":122727,"line_start":16,"line_end":16,"column_start":1,"column_end":84}},{"value":"/","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tower-0.4.13\\src\\builder\\mod.rs","byte_start":122728,"byte_end":122731,"line_start":17,"line_end":17,"column_start":1,"column_end":4}},{"value":"/ A [`Service`] is typically bound to a single transport, such as a TCP","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tower-0.4.13\\src\\builder\\mod.rs","byte_start":122732,"byte_end":122805,"line_start":18,"line_end":18,"column_start":1,"column_end":74}},{"value":"/ connection.  It defines how _all_ inbound or outbound requests are handled","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tower-0.4.13\\src\\builder\\mod.rs","byte_start":122806,"byte_end":122884,"line_start":19,"line_end":19,"column_start":1,"column_end":79}},{"value":"/ by that connection.","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tower-0.4.13\\src\\builder\\mod.rs","byte_start":122885,"byte_end":122908,"line_start":20,"line_end":20,"column_start":1,"column_end":24}},{"value":"/","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tower-0.4.13\\src\\builder\\mod.rs","byte_start":122909,"byte_end":122912,"line_start":21,"line_end":21,"column_start":1,"column_end":4}},{"value":"/ [builder]: https://doc.rust-lang.org/1.0.0/style/ownership/builders.html","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tower-0.4.13\\src\\builder\\mod.rs","byte_start":122913,"byte_end":122989,"line_start":22,"line_end":22,"column_start":1,"column_end":77}},{"value":"/","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tower-0.4.13\\src\\builder\\mod.rs","byte_start":122990,"byte_end":122993,"line_start":23,"line_end":23,"column_start":1,"column_end":4}},{"value":"/ # Order","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tower-0.4.13\\src\\builder\\mod.rs","byte_start":122994,"byte_end":123005,"line_start":24,"line_end":24,"column_start":1,"column_end":12}},{"value":"/","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tower-0.4.13\\src\\builder\\mod.rs","byte_start":123006,"byte_end":123009,"line_start":25,"line_end":25,"column_start":1,"column_end":4}},{"value":"/ The order in which layers are added impacts how requests are handled. Layers","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tower-0.4.13\\src\\builder\\mod.rs","byte_start":123010,"byte_end":123090,"line_start":26,"line_end":26,"column_start":1,"column_end":81}},{"value":"/ that are added first will be called with the request first. The argument to","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tower-0.4.13\\src\\builder\\mod.rs","byte_start":123091,"byte_end":123170,"line_start":27,"line_end":27,"column_start":1,"column_end":80}},{"value":"/ `service` will be last to see the request.","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tower-0.4.13\\src\\builder\\mod.rs","byte_start":123171,"byte_end":123217,"line_start":28,"line_end":28,"column_start":1,"column_end":47}},{"value":"/","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tower-0.4.13\\src\\builder\\mod.rs","byte_start":123218,"byte_end":123221,"line_start":29,"line_end":29,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tower-0.4.13\\src\\builder\\mod.rs","byte_start":123222,"byte_end":123229,"line_start":30,"line_end":30,"column_start":1,"column_end":8}},{"value":"/ # // this (and other) doctest is ignored because we don't have a way","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tower-0.4.13\\src\\builder\\mod.rs","byte_start":123230,"byte_end":123302,"line_start":31,"line_end":31,"column_start":1,"column_end":73}},{"value":"/ # // to say that it should only be run with cfg(feature = \"...\")","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tower-0.4.13\\src\\builder\\mod.rs","byte_start":123303,"byte_end":123371,"line_start":32,"line_end":32,"column_start":1,"column_end":69}},{"value":"/ # use tower::Service;","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tower-0.4.13\\src\\builder\\mod.rs","byte_start":123372,"byte_end":123397,"line_start":33,"line_end":33,"column_start":1,"column_end":26}},{"value":"/ # use tower::builder::ServiceBuilder;","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tower-0.4.13\\src\\builder\\mod.rs","byte_start":123398,"byte_end":123439,"line_start":34,"line_end":34,"column_start":1,"column_end":42}},{"value":"/ # #[cfg(all(feature = \"buffer\", feature = \"limit\"))]","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tower-0.4.13\\src\\builder\\mod.rs","byte_start":123440,"byte_end":123496,"line_start":35,"line_end":35,"column_start":1,"column_end":57}},{"value":"/ # async fn wrap<S>(svc: S) where S: Service<(), Error = &'static str> + 'static + Send, S::Future: Send {","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tower-0.4.13\\src\\builder\\mod.rs","byte_start":123497,"byte_end":123606,"line_start":36,"line_end":36,"column_start":1,"column_end":110}},{"value":"/ ServiceBuilder::new()","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tower-0.4.13\\src\\builder\\mod.rs","byte_start":123607,"byte_end":123632,"line_start":37,"line_end":37,"column_start":1,"column_end":26}},{"value":"/     .buffer(100)","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tower-0.4.13\\src\\builder\\mod.rs","byte_start":123633,"byte_end":123653,"line_start":38,"line_end":38,"column_start":1,"column_end":21}},{"value":"/     .concurrency_limit(10)","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tower-0.4.13\\src\\builder\\mod.rs","byte_start":123654,"byte_end":123684,"line_start":39,"line_end":39,"column_start":1,"column_end":31}},{"value":"/     .service(svc)","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tower-0.4.13\\src\\builder\\mod.rs","byte_start":123685,"byte_end":123706,"line_start":40,"line_end":40,"column_start":1,"column_end":22}},{"value":"/ # ;","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tower-0.4.13\\src\\builder\\mod.rs","byte_start":123707,"byte_end":123714,"line_start":41,"line_end":41,"column_start":1,"column_end":8}},{"value":"/ # }","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tower-0.4.13\\src\\builder\\mod.rs","byte_start":123715,"byte_end":123722,"line_start":42,"line_end":42,"column_start":1,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tower-0.4.13\\src\\builder\\mod.rs","byte_start":123723,"byte_end":123730,"line_start":43,"line_end":43,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tower-0.4.13\\src\\builder\\mod.rs","byte_start":123731,"byte_end":123734,"line_start":44,"line_end":44,"column_start":1,"column_end":4}},{"value":"/ In the above example, the buffer layer receives the request first followed","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tower-0.4.13\\src\\builder\\mod.rs","byte_start":123735,"byte_end":123813,"line_start":45,"line_end":45,"column_start":1,"column_end":79}},{"value":"/ by `concurrency_limit`. `buffer` enables up to 100 request to be in-flight","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tower-0.4.13\\src\\builder\\mod.rs","byte_start":123814,"byte_end":123892,"line_start":46,"line_end":46,"column_start":1,"column_end":79}},{"value":"/ **on top of** the requests that have already been forwarded to the next","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tower-0.4.13\\src\\builder\\mod.rs","byte_start":123893,"byte_end":123968,"line_start":47,"line_end":47,"column_start":1,"column_end":76}},{"value":"/ layer. Combined with `concurrency_limit`, this allows up to 110 requests to be","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tower-0.4.13\\src\\builder\\mod.rs","byte_start":123969,"byte_end":124051,"line_start":48,"line_end":48,"column_start":1,"column_end":83}},{"value":"/ in-flight.","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tower-0.4.13\\src\\builder\\mod.rs","byte_start":124052,"byte_end":124066,"line_start":49,"line_end":49,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tower-0.4.13\\src\\builder\\mod.rs","byte_start":124067,"byte_end":124070,"line_start":50,"line_end":50,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tower-0.4.13\\src\\builder\\mod.rs","byte_start":124071,"byte_end":124078,"line_start":51,"line_end":51,"column_start":1,"column_end":8}},{"value":"/ # use tower::Service;","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tower-0.4.13\\src\\builder\\mod.rs","byte_start":124079,"byte_end":124104,"line_start":52,"line_end":52,"column_start":1,"column_end":26}},{"value":"/ # use tower::builder::ServiceBuilder;","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tower-0.4.13\\src\\builder\\mod.rs","byte_start":124105,"byte_end":124146,"line_start":53,"line_end":53,"column_start":1,"column_end":42}},{"value":"/ # #[cfg(all(feature = \"buffer\", feature = \"limit\"))]","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tower-0.4.13\\src\\builder\\mod.rs","byte_start":124147,"byte_end":124203,"line_start":54,"line_end":54,"column_start":1,"column_end":57}},{"value":"/ # async fn wrap<S>(svc: S) where S: Service<(), Error = &'static str> + 'static + Send, S::Future: Send {","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tower-0.4.13\\src\\builder\\mod.rs","byte_start":124204,"byte_end":124313,"line_start":55,"line_end":55,"column_start":1,"column_end":110}},{"value":"/ ServiceBuilder::new()","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tower-0.4.13\\src\\builder\\mod.rs","byte_start":124314,"byte_end":124339,"line_start":56,"line_end":56,"column_start":1,"column_end":26}},{"value":"/     .concurrency_limit(10)","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tower-0.4.13\\src\\builder\\mod.rs","byte_start":124340,"byte_end":124370,"line_start":57,"line_end":57,"column_start":1,"column_end":31}},{"value":"/     .buffer(100)","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tower-0.4.13\\src\\builder\\mod.rs","byte_start":124371,"byte_end":124391,"line_start":58,"line_end":58,"column_start":1,"column_end":21}},{"value":"/     .service(svc)","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tower-0.4.13\\src\\builder\\mod.rs","byte_start":124392,"byte_end":124413,"line_start":59,"line_end":59,"column_start":1,"column_end":22}},{"value":"/ # ;","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tower-0.4.13\\src\\builder\\mod.rs","byte_start":124414,"byte_end":124421,"line_start":60,"line_end":60,"column_start":1,"column_end":8}},{"value":"/ # }","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tower-0.4.13\\src\\builder\\mod.rs","byte_start":124422,"byte_end":124429,"line_start":61,"line_end":61,"column_start":1,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tower-0.4.13\\src\\builder\\mod.rs","byte_start":124430,"byte_end":124437,"line_start":62,"line_end":62,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tower-0.4.13\\src\\builder\\mod.rs","byte_start":124438,"byte_end":124441,"line_start":63,"line_end":63,"column_start":1,"column_end":4}},{"value":"/ The above example is similar, but the order of layers is reversed. Now,","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tower-0.4.13\\src\\builder\\mod.rs","byte_start":124442,"byte_end":124517,"line_start":64,"line_end":64,"column_start":1,"column_end":76}},{"value":"/ `concurrency_limit` applies first and only allows 10 requests to be in-flight","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tower-0.4.13\\src\\builder\\mod.rs","byte_start":124518,"byte_end":124599,"line_start":65,"line_end":65,"column_start":1,"column_end":82}},{"value":"/ total.","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tower-0.4.13\\src\\builder\\mod.rs","byte_start":124600,"byte_end":124610,"line_start":66,"line_end":66,"column_start":1,"column_end":11}},{"value":"/","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tower-0.4.13\\src\\builder\\mod.rs","byte_start":124611,"byte_end":124614,"line_start":67,"line_end":67,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tower-0.4.13\\src\\builder\\mod.rs","byte_start":124615,"byte_end":124629,"line_start":68,"line_end":68,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tower-0.4.13\\src\\builder\\mod.rs","byte_start":124630,"byte_end":124633,"line_start":69,"line_end":69,"column_start":1,"column_end":4}},{"value":"/ A [`Service`] stack with a single layer:","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tower-0.4.13\\src\\builder\\mod.rs","byte_start":124634,"byte_end":124678,"line_start":70,"line_end":70,"column_start":1,"column_end":45}},{"value":"/","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tower-0.4.13\\src\\builder\\mod.rs","byte_start":124679,"byte_end":124682,"line_start":71,"line_end":71,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tower-0.4.13\\src\\builder\\mod.rs","byte_start":124683,"byte_end":124690,"line_start":72,"line_end":72,"column_start":1,"column_end":8}},{"value":"/ # use tower::Service;","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tower-0.4.13\\src\\builder\\mod.rs","byte_start":124691,"byte_end":124716,"line_start":73,"line_end":73,"column_start":1,"column_end":26}},{"value":"/ # use tower::builder::ServiceBuilder;","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tower-0.4.13\\src\\builder\\mod.rs","byte_start":124717,"byte_end":124758,"line_start":74,"line_end":74,"column_start":1,"column_end":42}},{"value":"/ # #[cfg(feature = \"limit\")]","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tower-0.4.13\\src\\builder\\mod.rs","byte_start":124759,"byte_end":124790,"line_start":75,"line_end":75,"column_start":1,"column_end":32}},{"value":"/ # use tower::limit::concurrency::ConcurrencyLimitLayer;","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tower-0.4.13\\src\\builder\\mod.rs","byte_start":124791,"byte_end":124850,"line_start":76,"line_end":76,"column_start":1,"column_end":60}},{"value":"/ # #[cfg(feature = \"limit\")]","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tower-0.4.13\\src\\builder\\mod.rs","byte_start":124851,"byte_end":124882,"line_start":77,"line_end":77,"column_start":1,"column_end":32}},{"value":"/ # async fn wrap<S>(svc: S) where S: Service<(), Error = &'static str> + 'static + Send, S::Future: Send {","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tower-0.4.13\\src\\builder\\mod.rs","byte_start":124883,"byte_end":124992,"line_start":78,"line_end":78,"column_start":1,"column_end":110}},{"value":"/ ServiceBuilder::new()","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tower-0.4.13\\src\\builder\\mod.rs","byte_start":124993,"byte_end":125018,"line_start":79,"line_end":79,"column_start":1,"column_end":26}},{"value":"/     .concurrency_limit(5)","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tower-0.4.13\\src\\builder\\mod.rs","byte_start":125019,"byte_end":125048,"line_start":80,"line_end":80,"column_start":1,"column_end":30}},{"value":"/     .service(svc);","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tower-0.4.13\\src\\builder\\mod.rs","byte_start":125049,"byte_end":125071,"line_start":81,"line_end":81,"column_start":1,"column_end":23}},{"value":"/ # ;","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tower-0.4.13\\src\\builder\\mod.rs","byte_start":125072,"byte_end":125079,"line_start":82,"line_end":82,"column_start":1,"column_end":8}},{"value":"/ # }","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tower-0.4.13\\src\\builder\\mod.rs","byte_start":125080,"byte_end":125087,"line_start":83,"line_end":83,"column_start":1,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tower-0.4.13\\src\\builder\\mod.rs","byte_start":125088,"byte_end":125095,"line_start":84,"line_end":84,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tower-0.4.13\\src\\builder\\mod.rs","byte_start":125096,"byte_end":125099,"line_start":85,"line_end":85,"column_start":1,"column_end":4}},{"value":"/ A [`Service`] stack with _multiple_ layers that contain rate limiting,","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tower-0.4.13\\src\\builder\\mod.rs","byte_start":125100,"byte_end":125174,"line_start":86,"line_end":86,"column_start":1,"column_end":75}},{"value":"/ in-flight request limits, and a channel-backed, clonable [`Service`]:","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tower-0.4.13\\src\\builder\\mod.rs","byte_start":125175,"byte_end":125248,"line_start":87,"line_end":87,"column_start":1,"column_end":74}},{"value":"/","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tower-0.4.13\\src\\builder\\mod.rs","byte_start":125249,"byte_end":125252,"line_start":88,"line_end":88,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tower-0.4.13\\src\\builder\\mod.rs","byte_start":125253,"byte_end":125260,"line_start":89,"line_end":89,"column_start":1,"column_end":8}},{"value":"/ # use tower::Service;","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tower-0.4.13\\src\\builder\\mod.rs","byte_start":125261,"byte_end":125286,"line_start":90,"line_end":90,"column_start":1,"column_end":26}},{"value":"/ # use tower::builder::ServiceBuilder;","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tower-0.4.13\\src\\builder\\mod.rs","byte_start":125287,"byte_end":125328,"line_start":91,"line_end":91,"column_start":1,"column_end":42}},{"value":"/ # use std::time::Duration;","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tower-0.4.13\\src\\builder\\mod.rs","byte_start":125329,"byte_end":125359,"line_start":92,"line_end":92,"column_start":1,"column_end":31}},{"value":"/ # #[cfg(all(feature = \"buffer\", feature = \"limit\"))]","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tower-0.4.13\\src\\builder\\mod.rs","byte_start":125360,"byte_end":125416,"line_start":93,"line_end":93,"column_start":1,"column_end":57}},{"value":"/ # async fn wrap<S>(svc: S) where S: Service<(), Error = &'static str> + 'static + Send, S::Future: Send {","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tower-0.4.13\\src\\builder\\mod.rs","byte_start":125417,"byte_end":125526,"line_start":94,"line_end":94,"column_start":1,"column_end":110}},{"value":"/ ServiceBuilder::new()","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tower-0.4.13\\src\\builder\\mod.rs","byte_start":125527,"byte_end":125552,"line_start":95,"line_end":95,"column_start":1,"column_end":26}},{"value":"/     .buffer(5)","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tower-0.4.13\\src\\builder\\mod.rs","byte_start":125553,"byte_end":125571,"line_start":96,"line_end":96,"column_start":1,"column_end":19}},{"value":"/     .concurrency_limit(5)","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tower-0.4.13\\src\\builder\\mod.rs","byte_start":125572,"byte_end":125601,"line_start":97,"line_end":97,"column_start":1,"column_end":30}},{"value":"/     .rate_limit(5, Duration::from_secs(1))","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tower-0.4.13\\src\\builder\\mod.rs","byte_start":125602,"byte_end":125648,"line_start":98,"line_end":98,"column_start":1,"column_end":47}},{"value":"/     .service(svc);","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tower-0.4.13\\src\\builder\\mod.rs","byte_start":125649,"byte_end":125671,"line_start":99,"line_end":99,"column_start":1,"column_end":23}},{"value":"/ # ;","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tower-0.4.13\\src\\builder\\mod.rs","byte_start":125672,"byte_end":125679,"line_start":100,"line_end":100,"column_start":1,"column_end":8}},{"value":"/ # }","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tower-0.4.13\\src\\builder\\mod.rs","byte_start":125680,"byte_end":125687,"line_start":101,"line_end":101,"column_start":1,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tower-0.4.13\\src\\builder\\mod.rs","byte_start":125688,"byte_end":125695,"line_start":102,"line_end":102,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tower-0.4.13\\src\\builder\\mod.rs","byte_start":125696,"byte_end":125699,"line_start":103,"line_end":103,"column_start":1,"column_end":4}},{"value":"/ [`Service`]: crate::Service","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tower-0.4.13\\src\\builder\\mod.rs","byte_start":125700,"byte_end":125731,"line_start":104,"line_end":104,"column_start":1,"column_end":32}}]},{"kind":"Method","id":{"krate":0,"index":1508},"span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tower-0.4.13\\src\\builder\\mod.rs","byte_start":125981,"byte_end":125984,"line_start":118,"line_end":118,"column_start":12,"column_end":15},"name":"new","qualname":"<ServiceBuilder<Identity>>::new","value":"pub fn new() -> Self","parent":null,"children":[],"decl_id":null,"docs":" Create a new [`ServiceBuilder`].\n","sig":null,"attributes":[{"value":"/ Create a new [`ServiceBuilder`].","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tower-0.4.13\\src\\builder\\mod.rs","byte_start":125933,"byte_end":125969,"line_start":117,"line_end":117,"column_start":5,"column_end":41}}]},{"kind":"Method","id":{"krate":0,"index":1511},"span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tower-0.4.13\\src\\builder\\mod.rs","byte_start":126376,"byte_end":126381,"line_start":132,"line_end":132,"column_start":12,"column_end":17},"name":"layer","qualname":"<ServiceBuilder<L>>::layer","value":"pub fn layer<T>(Self, T) -> ServiceBuilder<Stack<T, L>>","parent":null,"children":[],"decl_id":null,"docs":" Add a new layer `T` into the [`ServiceBuilder`].","sig":null,"attributes":[{"value":"/ Add a new layer `T` into the [`ServiceBuilder`].","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tower-0.4.13\\src\\builder\\mod.rs","byte_start":126109,"byte_end":126161,"line_start":126,"line_end":126,"column_start":5,"column_end":57}},{"value":"/","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tower-0.4.13\\src\\builder\\mod.rs","byte_start":126166,"byte_end":126169,"line_start":127,"line_end":127,"column_start":5,"column_end":8}},{"value":"/ This wraps the inner service with the service provided by a user-defined","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tower-0.4.13\\src\\builder\\mod.rs","byte_start":126174,"byte_end":126250,"line_start":128,"line_end":128,"column_start":5,"column_end":81}},{"value":"/ [`Layer`]. The provided layer must implement the [`Layer`] trait.","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tower-0.4.13\\src\\builder\\mod.rs","byte_start":126255,"byte_end":126324,"line_start":129,"line_end":129,"column_start":5,"column_end":74}},{"value":"/","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tower-0.4.13\\src\\builder\\mod.rs","byte_start":126329,"byte_end":126332,"line_start":130,"line_end":130,"column_start":5,"column_end":8}},{"value":"/ [`Layer`]: crate::Layer","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tower-0.4.13\\src\\builder\\mod.rs","byte_start":126337,"byte_end":126364,"line_start":131,"line_end":131,"column_start":5,"column_end":32}}]},{"kind":"Method","id":{"krate":0,"index":1513},"span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tower-0.4.13\\src\\builder\\mod.rs","byte_start":127218,"byte_end":127230,"line_start":156,"line_end":156,"column_start":12,"column_end":24},"name":"option_layer","qualname":"<ServiceBuilder<L>>::option_layer","value":"pub fn option_layer<T>(Self, Option<T>)\n-> ServiceBuilder<Stack<crate::util::Either<T, Identity>, L>>","parent":null,"children":[],"decl_id":null,"docs":" Optionally add a new layer `T` into the [`ServiceBuilder`].","sig":null,"attributes":[{"value":"/ Optionally add a new layer `T` into the [`ServiceBuilder`].","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tower-0.4.13\\src\\builder\\mod.rs","byte_start":126530,"byte_end":126593,"line_start":138,"line_end":138,"column_start":5,"column_end":68}},{"value":"/","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tower-0.4.13\\src\\builder\\mod.rs","byte_start":126598,"byte_end":126601,"line_start":139,"line_end":139,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tower-0.4.13\\src\\builder\\mod.rs","byte_start":126606,"byte_end":126613,"line_start":140,"line_end":140,"column_start":5,"column_end":12}},{"value":"/ # use std::time::Duration;","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tower-0.4.13\\src\\builder\\mod.rs","byte_start":126618,"byte_end":126648,"line_start":141,"line_end":141,"column_start":5,"column_end":35}},{"value":"/ # use tower::Service;","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tower-0.4.13\\src\\builder\\mod.rs","byte_start":126653,"byte_end":126678,"line_start":142,"line_end":142,"column_start":5,"column_end":30}},{"value":"/ # use tower::builder::ServiceBuilder;","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tower-0.4.13\\src\\builder\\mod.rs","byte_start":126683,"byte_end":126724,"line_start":143,"line_end":143,"column_start":5,"column_end":46}},{"value":"/ # use tower::timeout::TimeoutLayer;","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tower-0.4.13\\src\\builder\\mod.rs","byte_start":126729,"byte_end":126768,"line_start":144,"line_end":144,"column_start":5,"column_end":44}},{"value":"/ # async fn wrap<S>(svc: S) where S: Service<(), Error = &'static str> + 'static + Send, S::Future: Send {","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tower-0.4.13\\src\\builder\\mod.rs","byte_start":126773,"byte_end":126882,"line_start":145,"line_end":145,"column_start":5,"column_end":114}},{"value":"/ # let timeout = Some(Duration::new(10, 0));","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tower-0.4.13\\src\\builder\\mod.rs","byte_start":126887,"byte_end":126934,"line_start":146,"line_end":146,"column_start":5,"column_end":52}},{"value":"/ // Apply a timeout if configured","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tower-0.4.13\\src\\builder\\mod.rs","byte_start":126939,"byte_end":126975,"line_start":147,"line_end":147,"column_start":5,"column_end":41}},{"value":"/ ServiceBuilder::new()","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tower-0.4.13\\src\\builder\\mod.rs","byte_start":126980,"byte_end":127005,"line_start":148,"line_end":148,"column_start":5,"column_end":30}},{"value":"/     .option_layer(timeout.map(TimeoutLayer::new))","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tower-0.4.13\\src\\builder\\mod.rs","byte_start":127010,"byte_end":127063,"line_start":149,"line_end":149,"column_start":5,"column_end":58}},{"value":"/     .service(svc)","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tower-0.4.13\\src\\builder\\mod.rs","byte_start":127068,"byte_end":127089,"line_start":150,"line_end":150,"column_start":5,"column_end":26}},{"value":"/ # ;","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tower-0.4.13\\src\\builder\\mod.rs","byte_start":127094,"byte_end":127101,"line_start":151,"line_end":151,"column_start":5,"column_end":12}},{"value":"/ # }","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tower-0.4.13\\src\\builder\\mod.rs","byte_start":127106,"byte_end":127113,"line_start":152,"line_end":152,"column_start":5,"column_end":12}},{"value":"/ ```","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tower-0.4.13\\src\\builder\\mod.rs","byte_start":127118,"byte_end":127125,"line_start":153,"line_end":153,"column_start":5,"column_end":12}},{"value":"cfg(feature = \"util\")","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tower-0.4.13\\src\\builder\\mod.rs","byte_start":127130,"byte_end":127154,"line_start":154,"line_end":154,"column_start":5,"column_end":29}}]},{"kind":"Method","id":{"krate":0,"index":1515},"span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tower-0.4.13\\src\\builder\\mod.rs","byte_start":127640,"byte_end":127648,"line_start":168,"line_end":168,"column_start":12,"column_end":20},"name":"layer_fn","qualname":"<ServiceBuilder<L>>::layer_fn","value":"pub fn layer_fn<F>(Self, F)\n-> ServiceBuilder<Stack<crate::layer::LayerFn<F>, L>>","parent":null,"children":[],"decl_id":null,"docs":" Add a [`Layer`] built from a function that accepts a service and returns another service.","sig":null,"attributes":[{"value":"/ Add a [`Layer`] built from a function that accepts a service and returns another service.","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tower-0.4.13\\src\\builder\\mod.rs","byte_start":127409,"byte_end":127502,"line_start":163,"line_end":163,"column_start":5,"column_end":98}},{"value":"/","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tower-0.4.13\\src\\builder\\mod.rs","byte_start":127507,"byte_end":127510,"line_start":164,"line_end":164,"column_start":5,"column_end":8}},{"value":"/ See the documentation for [`layer_fn`] for more details.","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tower-0.4.13\\src\\builder\\mod.rs","byte_start":127515,"byte_end":127575,"line_start":165,"line_end":165,"column_start":5,"column_end":65}},{"value":"/","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tower-0.4.13\\src\\builder\\mod.rs","byte_start":127580,"byte_end":127583,"line_start":166,"line_end":166,"column_start":5,"column_end":8}},{"value":"/ [`layer_fn`]: crate::layer::layer_fn","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tower-0.4.13\\src\\builder\\mod.rs","byte_start":127588,"byte_end":127628,"line_start":167,"line_end":167,"column_start":5,"column_end":45}}]},{"kind":"Method","id":{"krate":0,"index":1517},"span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tower-0.4.13\\src\\builder\\mod.rs","byte_start":134900,"byte_end":134911,"line_start":375,"line_end":375,"column_start":12,"column_end":23},"name":"map_request","qualname":"<ServiceBuilder<L>>::map_request","value":"pub fn map_request<F, R1, R2>(Self, F)\n-> ServiceBuilder<Stack<crate::util::MapRequestLayer<F>, L>> where\nF: FnMut(R1) -> R2 + Clone","parent":null,"children":[],"decl_id":null,"docs":" Map one request type to another.","sig":null,"attributes":[{"value":"/ Map one request type to another.","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tower-0.4.13\\src\\builder\\mod.rs","byte_start":132921,"byte_end":132957,"line_start":313,"line_end":313,"column_start":5,"column_end":41}},{"value":"/","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tower-0.4.13\\src\\builder\\mod.rs","byte_start":132962,"byte_end":132965,"line_start":314,"line_end":314,"column_start":5,"column_end":8}},{"value":"/ This wraps the inner service with an instance of the [`MapRequest`]","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tower-0.4.13\\src\\builder\\mod.rs","byte_start":132970,"byte_end":133041,"line_start":315,"line_end":315,"column_start":5,"column_end":76}},{"value":"/ middleware.","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tower-0.4.13\\src\\builder\\mod.rs","byte_start":133046,"byte_end":133061,"line_start":316,"line_end":316,"column_start":5,"column_end":20}},{"value":"/","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tower-0.4.13\\src\\builder\\mod.rs","byte_start":133066,"byte_end":133069,"line_start":317,"line_end":317,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tower-0.4.13\\src\\builder\\mod.rs","byte_start":133074,"byte_end":133088,"line_start":318,"line_end":318,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tower-0.4.13\\src\\builder\\mod.rs","byte_start":133093,"byte_end":133096,"line_start":319,"line_end":319,"column_start":5,"column_end":8}},{"value":"/ Changing the type of a request:","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tower-0.4.13\\src\\builder\\mod.rs","byte_start":133101,"byte_end":133136,"line_start":320,"line_end":320,"column_start":5,"column_end":40}},{"value":"/","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tower-0.4.13\\src\\builder\\mod.rs","byte_start":133141,"byte_end":133144,"line_start":321,"line_end":321,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tower-0.4.13\\src\\builder\\mod.rs","byte_start":133149,"byte_end":133160,"line_start":322,"line_end":322,"column_start":5,"column_end":16}},{"value":"/ use tower::ServiceBuilder;","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tower-0.4.13\\src\\builder\\mod.rs","byte_start":133165,"byte_end":133195,"line_start":323,"line_end":323,"column_start":5,"column_end":35}},{"value":"/ use tower::ServiceExt;","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tower-0.4.13\\src\\builder\\mod.rs","byte_start":133200,"byte_end":133226,"line_start":324,"line_end":324,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tower-0.4.13\\src\\builder\\mod.rs","byte_start":133231,"byte_end":133234,"line_start":325,"line_end":325,"column_start":5,"column_end":8}},{"value":"/ # #[tokio::main]","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tower-0.4.13\\src\\builder\\mod.rs","byte_start":133239,"byte_end":133259,"line_start":326,"line_end":326,"column_start":5,"column_end":25}},{"value":"/ # async fn main() -> Result<(), ()> {","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tower-0.4.13\\src\\builder\\mod.rs","byte_start":133264,"byte_end":133305,"line_start":327,"line_end":327,"column_start":5,"column_end":46}},{"value":"/ // Suppose we have some `Service` whose request type is `String`:","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tower-0.4.13\\src\\builder\\mod.rs","byte_start":133310,"byte_end":133379,"line_start":328,"line_end":328,"column_start":5,"column_end":74}},{"value":"/ let string_svc = tower::service_fn(|request: String| async move {","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tower-0.4.13\\src\\builder\\mod.rs","byte_start":133384,"byte_end":133453,"line_start":329,"line_end":329,"column_start":5,"column_end":74}},{"value":"/     println!(\"request: {}\", request);","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tower-0.4.13\\src\\builder\\mod.rs","byte_start":133458,"byte_end":133499,"line_start":330,"line_end":330,"column_start":5,"column_end":46}},{"value":"/     Ok(())","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tower-0.4.13\\src\\builder\\mod.rs","byte_start":133504,"byte_end":133518,"line_start":331,"line_end":331,"column_start":5,"column_end":19}},{"value":"/ });","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tower-0.4.13\\src\\builder\\mod.rs","byte_start":133523,"byte_end":133530,"line_start":332,"line_end":332,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tower-0.4.13\\src\\builder\\mod.rs","byte_start":133535,"byte_end":133538,"line_start":333,"line_end":333,"column_start":5,"column_end":8}},{"value":"/ // ...but we want to call that service with a `usize`. What do we do?","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tower-0.4.13\\src\\builder\\mod.rs","byte_start":133543,"byte_end":133616,"line_start":334,"line_end":334,"column_start":5,"column_end":78}},{"value":"/","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tower-0.4.13\\src\\builder\\mod.rs","byte_start":133621,"byte_end":133624,"line_start":335,"line_end":335,"column_start":5,"column_end":8}},{"value":"/ let usize_svc = ServiceBuilder::new()","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tower-0.4.13\\src\\builder\\mod.rs","byte_start":133629,"byte_end":133670,"line_start":336,"line_end":336,"column_start":5,"column_end":46}},{"value":"/      // Add a middlware that converts the request type to a `String`:","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tower-0.4.13\\src\\builder\\mod.rs","byte_start":133675,"byte_end":133748,"line_start":337,"line_end":337,"column_start":5,"column_end":78}},{"value":"/     .map_request(|request: usize| format!(\"{}\", request))","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tower-0.4.13\\src\\builder\\mod.rs","byte_start":133753,"byte_end":133814,"line_start":338,"line_end":338,"column_start":5,"column_end":66}},{"value":"/     // ...and wrap the string service with that middleware:","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tower-0.4.13\\src\\builder\\mod.rs","byte_start":133819,"byte_end":133882,"line_start":339,"line_end":339,"column_start":5,"column_end":68}},{"value":"/     .service(string_svc);","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tower-0.4.13\\src\\builder\\mod.rs","byte_start":133887,"byte_end":133916,"line_start":340,"line_end":340,"column_start":5,"column_end":34}},{"value":"/","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tower-0.4.13\\src\\builder\\mod.rs","byte_start":133921,"byte_end":133924,"line_start":341,"line_end":341,"column_start":5,"column_end":8}},{"value":"/ // Now, we can call that service with a `usize`:","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tower-0.4.13\\src\\builder\\mod.rs","byte_start":133929,"byte_end":133981,"line_start":342,"line_end":342,"column_start":5,"column_end":57}},{"value":"/ usize_svc.oneshot(42).await?;","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tower-0.4.13\\src\\builder\\mod.rs","byte_start":133986,"byte_end":134019,"line_start":343,"line_end":343,"column_start":5,"column_end":38}},{"value":"/ # Ok(())","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tower-0.4.13\\src\\builder\\mod.rs","byte_start":134024,"byte_end":134036,"line_start":344,"line_end":344,"column_start":5,"column_end":17}},{"value":"/ # }","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tower-0.4.13\\src\\builder\\mod.rs","byte_start":134041,"byte_end":134048,"line_start":345,"line_end":345,"column_start":5,"column_end":12}},{"value":"/ ```","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tower-0.4.13\\src\\builder\\mod.rs","byte_start":134053,"byte_end":134060,"line_start":346,"line_end":346,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tower-0.4.13\\src\\builder\\mod.rs","byte_start":134065,"byte_end":134068,"line_start":347,"line_end":347,"column_start":5,"column_end":8}},{"value":"/ Modifying the request value:","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tower-0.4.13\\src\\builder\\mod.rs","byte_start":134073,"byte_end":134105,"line_start":348,"line_end":348,"column_start":5,"column_end":37}},{"value":"/","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tower-0.4.13\\src\\builder\\mod.rs","byte_start":134110,"byte_end":134113,"line_start":349,"line_end":349,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tower-0.4.13\\src\\builder\\mod.rs","byte_start":134118,"byte_end":134129,"line_start":350,"line_end":350,"column_start":5,"column_end":16}},{"value":"/ use tower::ServiceBuilder;","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tower-0.4.13\\src\\builder\\mod.rs","byte_start":134134,"byte_end":134164,"line_start":351,"line_end":351,"column_start":5,"column_end":35}},{"value":"/ use tower::ServiceExt;","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tower-0.4.13\\src\\builder\\mod.rs","byte_start":134169,"byte_end":134195,"line_start":352,"line_end":352,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tower-0.4.13\\src\\builder\\mod.rs","byte_start":134200,"byte_end":134203,"line_start":353,"line_end":353,"column_start":5,"column_end":8}},{"value":"/ # #[tokio::main]","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tower-0.4.13\\src\\builder\\mod.rs","byte_start":134208,"byte_end":134228,"line_start":354,"line_end":354,"column_start":5,"column_end":25}},{"value":"/ # async fn main() -> Result<(), ()> {","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tower-0.4.13\\src\\builder\\mod.rs","byte_start":134233,"byte_end":134274,"line_start":355,"line_end":355,"column_start":5,"column_end":46}},{"value":"/ // A service that takes a number and returns it:","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tower-0.4.13\\src\\builder\\mod.rs","byte_start":134279,"byte_end":134331,"line_start":356,"line_end":356,"column_start":5,"column_end":57}},{"value":"/ let svc = tower::service_fn(|request: usize| async move {","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tower-0.4.13\\src\\builder\\mod.rs","byte_start":134336,"byte_end":134397,"line_start":357,"line_end":357,"column_start":5,"column_end":66}},{"value":"/    Ok(request)","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tower-0.4.13\\src\\builder\\mod.rs","byte_start":134402,"byte_end":134420,"line_start":358,"line_end":358,"column_start":5,"column_end":23}},{"value":"/ });","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tower-0.4.13\\src\\builder\\mod.rs","byte_start":134425,"byte_end":134432,"line_start":359,"line_end":359,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tower-0.4.13\\src\\builder\\mod.rs","byte_start":134437,"byte_end":134440,"line_start":360,"line_end":360,"column_start":5,"column_end":8}},{"value":"/ let svc = ServiceBuilder::new()","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tower-0.4.13\\src\\builder\\mod.rs","byte_start":134445,"byte_end":134480,"line_start":361,"line_end":361,"column_start":5,"column_end":40}},{"value":"/      // Add a middleware that adds 1 to each request","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tower-0.4.13\\src\\builder\\mod.rs","byte_start":134485,"byte_end":134541,"line_start":362,"line_end":362,"column_start":5,"column_end":61}},{"value":"/     .map_request(|request: usize| request + 1)","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tower-0.4.13\\src\\builder\\mod.rs","byte_start":134546,"byte_end":134596,"line_start":363,"line_end":363,"column_start":5,"column_end":55}},{"value":"/     .service(svc);","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tower-0.4.13\\src\\builder\\mod.rs","byte_start":134601,"byte_end":134623,"line_start":364,"line_end":364,"column_start":5,"column_end":27}},{"value":"/","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tower-0.4.13\\src\\builder\\mod.rs","byte_start":134628,"byte_end":134631,"line_start":365,"line_end":365,"column_start":5,"column_end":8}},{"value":"/ let response = svc.oneshot(1).await?;","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tower-0.4.13\\src\\builder\\mod.rs","byte_start":134636,"byte_end":134677,"line_start":366,"line_end":366,"column_start":5,"column_end":46}},{"value":"/ assert_eq!(response, 2);","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tower-0.4.13\\src\\builder\\mod.rs","byte_start":134682,"byte_end":134710,"line_start":367,"line_end":367,"column_start":5,"column_end":33}},{"value":"/ # Ok(())","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tower-0.4.13\\src\\builder\\mod.rs","byte_start":134715,"byte_end":134727,"line_start":368,"line_end":368,"column_start":5,"column_end":17}},{"value":"/ # }","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tower-0.4.13\\src\\builder\\mod.rs","byte_start":134732,"byte_end":134739,"line_start":369,"line_end":369,"column_start":5,"column_end":12}},{"value":"/ ```","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tower-0.4.13\\src\\builder\\mod.rs","byte_start":134744,"byte_end":134751,"line_start":370,"line_end":370,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tower-0.4.13\\src\\builder\\mod.rs","byte_start":134756,"byte_end":134759,"line_start":371,"line_end":371,"column_start":5,"column_end":8}},{"value":"/ [`MapRequest`]: crate::util::MapRequest","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tower-0.4.13\\src\\builder\\mod.rs","byte_start":134764,"byte_end":134807,"line_start":372,"line_end":372,"column_start":5,"column_end":48}},{"value":"cfg(feature = \"util\")","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tower-0.4.13\\src\\builder\\mod.rs","byte_start":134812,"byte_end":134836,"line_start":373,"line_end":373,"column_start":5,"column_end":29}}]},{"kind":"Method","id":{"krate":0,"index":1521},"span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tower-0.4.13\\src\\builder\\mod.rs","byte_start":135594,"byte_end":135606,"line_start":396,"line_end":396,"column_start":12,"column_end":24},"name":"map_response","qualname":"<ServiceBuilder<L>>::map_response","value":"pub fn map_response<F>(Self, F)\n-> ServiceBuilder<Stack<crate::util::MapResponseLayer<F>, L>>","parent":null,"children":[],"decl_id":null,"docs":" Map one response type to another.","sig":null,"attributes":[{"value":"/ Map one response type to another.","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tower-0.4.13\\src\\builder\\mod.rs","byte_start":135139,"byte_end":135176,"line_start":385,"line_end":385,"column_start":5,"column_end":42}},{"value":"/","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tower-0.4.13\\src\\builder\\mod.rs","byte_start":135181,"byte_end":135184,"line_start":386,"line_end":386,"column_start":5,"column_end":8}},{"value":"/ This wraps the inner service with an instance of the [`MapResponse`]","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tower-0.4.13\\src\\builder\\mod.rs","byte_start":135189,"byte_end":135261,"line_start":387,"line_end":387,"column_start":5,"column_end":77}},{"value":"/ middleware.","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tower-0.4.13\\src\\builder\\mod.rs","byte_start":135266,"byte_end":135281,"line_start":388,"line_end":388,"column_start":5,"column_end":20}},{"value":"/","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tower-0.4.13\\src\\builder\\mod.rs","byte_start":135286,"byte_end":135289,"line_start":389,"line_end":389,"column_start":5,"column_end":8}},{"value":"/ See the documentation for the [`map_response` combinator] for details.","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tower-0.4.13\\src\\builder\\mod.rs","byte_start":135294,"byte_end":135368,"line_start":390,"line_end":390,"column_start":5,"column_end":79}},{"value":"/","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tower-0.4.13\\src\\builder\\mod.rs","byte_start":135373,"byte_end":135376,"line_start":391,"line_end":391,"column_start":5,"column_end":8}},{"value":"/ [`MapResponse`]: crate::util::MapResponse","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tower-0.4.13\\src\\builder\\mod.rs","byte_start":135381,"byte_end":135426,"line_start":392,"line_end":392,"column_start":5,"column_end":50}},{"value":"/ [`map_response` combinator]: crate::util::ServiceExt::map_response","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tower-0.4.13\\src\\builder\\mod.rs","byte_start":135431,"byte_end":135501,"line_start":393,"line_end":393,"column_start":5,"column_end":75}},{"value":"cfg(feature = \"util\")","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tower-0.4.13\\src\\builder\\mod.rs","byte_start":135506,"byte_end":135530,"line_start":394,"line_end":394,"column_start":5,"column_end":29}}]},{"kind":"Method","id":{"krate":0,"index":1523},"span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tower-0.4.13\\src\\builder\\mod.rs","byte_start":136200,"byte_end":136207,"line_start":414,"line_end":414,"column_start":12,"column_end":19},"name":"map_err","qualname":"<ServiceBuilder<L>>::map_err","value":"pub fn map_err<F>(Self, F)\n-> ServiceBuilder<Stack<crate::util::MapErrLayer<F>, L>>","parent":null,"children":[],"decl_id":null,"docs":" Map one error type to another.","sig":null,"attributes":[{"value":"/ Map one error type to another.","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tower-0.4.13\\src\\builder\\mod.rs","byte_start":135778,"byte_end":135812,"line_start":403,"line_end":403,"column_start":5,"column_end":39}},{"value":"/","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tower-0.4.13\\src\\builder\\mod.rs","byte_start":135817,"byte_end":135820,"line_start":404,"line_end":404,"column_start":5,"column_end":8}},{"value":"/ This wraps the inner service with an instance of the [`MapErr`]","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tower-0.4.13\\src\\builder\\mod.rs","byte_start":135825,"byte_end":135892,"line_start":405,"line_end":405,"column_start":5,"column_end":72}},{"value":"/ middleware.","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tower-0.4.13\\src\\builder\\mod.rs","byte_start":135897,"byte_end":135912,"line_start":406,"line_end":406,"column_start":5,"column_end":20}},{"value":"/","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tower-0.4.13\\src\\builder\\mod.rs","byte_start":135917,"byte_end":135920,"line_start":407,"line_end":407,"column_start":5,"column_end":8}},{"value":"/ See the documentation for the [`map_err` combinator] for details.","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tower-0.4.13\\src\\builder\\mod.rs","byte_start":135925,"byte_end":135994,"line_start":408,"line_end":408,"column_start":5,"column_end":74}},{"value":"/","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tower-0.4.13\\src\\builder\\mod.rs","byte_start":135999,"byte_end":136002,"line_start":409,"line_end":409,"column_start":5,"column_end":8}},{"value":"/ [`MapErr`]: crate::util::MapErr","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tower-0.4.13\\src\\builder\\mod.rs","byte_start":136007,"byte_end":136042,"line_start":410,"line_end":410,"column_start":5,"column_end":40}},{"value":"/ [`map_err` combinator]: crate::util::ServiceExt::map_err","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tower-0.4.13\\src\\builder\\mod.rs","byte_start":136047,"byte_end":136107,"line_start":411,"line_end":411,"column_start":5,"column_end":65}},{"value":"cfg(feature = \"util\")","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tower-0.4.13\\src\\builder\\mod.rs","byte_start":136112,"byte_end":136136,"line_start":412,"line_end":412,"column_start":5,"column_end":29}}]},{"kind":"Method","id":{"krate":0,"index":1525},"span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tower-0.4.13\\src\\builder\\mod.rs","byte_start":136820,"byte_end":136830,"line_start":428,"line_end":428,"column_start":12,"column_end":22},"name":"map_future","qualname":"<ServiceBuilder<L>>::map_future","value":"pub fn map_future<F>(Self, F)\n-> ServiceBuilder<Stack<crate::util::MapFutureLayer<F>, L>>","parent":null,"children":[],"decl_id":null,"docs":" Composes a function that transforms futures produced by the service.","sig":null,"attributes":[{"value":"/ Composes a function that transforms futures produced by the service.","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tower-0.4.13\\src\\builder\\mod.rs","byte_start":136346,"byte_end":136418,"line_start":418,"line_end":418,"column_start":5,"column_end":77}},{"value":"/","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tower-0.4.13\\src\\builder\\mod.rs","byte_start":136423,"byte_end":136426,"line_start":419,"line_end":419,"column_start":5,"column_end":8}},{"value":"/ This wraps the inner service with an instance of the [`MapFutureLayer`] middleware.","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tower-0.4.13\\src\\builder\\mod.rs","byte_start":136431,"byte_end":136518,"line_start":420,"line_end":420,"column_start":5,"column_end":92}},{"value":"/","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tower-0.4.13\\src\\builder\\mod.rs","byte_start":136523,"byte_end":136526,"line_start":421,"line_end":421,"column_start":5,"column_end":8}},{"value":"/ See the documentation for the [`map_future`] combinator for details.","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tower-0.4.13\\src\\builder\\mod.rs","byte_start":136531,"byte_end":136603,"line_start":422,"line_end":422,"column_start":5,"column_end":77}},{"value":"/","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tower-0.4.13\\src\\builder\\mod.rs","byte_start":136608,"byte_end":136611,"line_start":423,"line_end":423,"column_start":5,"column_end":8}},{"value":"/ [`MapFutureLayer`]: crate::util::MapFutureLayer","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tower-0.4.13\\src\\builder\\mod.rs","byte_start":136616,"byte_end":136667,"line_start":424,"line_end":424,"column_start":5,"column_end":56}},{"value":"/ [`map_future`]: crate::util::ServiceExt::map_future","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tower-0.4.13\\src\\builder\\mod.rs","byte_start":136672,"byte_end":136727,"line_start":425,"line_end":425,"column_start":5,"column_end":60}},{"value":"cfg(feature = \"util\")","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tower-0.4.13\\src\\builder\\mod.rs","byte_start":136732,"byte_end":136756,"line_start":426,"line_end":426,"column_start":5,"column_end":29}}]},{"kind":"Method","id":{"krate":0,"index":1527},"span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tower-0.4.13\\src\\builder\\mod.rs","byte_start":137895,"byte_end":137899,"line_start":452,"line_end":452,"column_start":12,"column_end":16},"name":"then","qualname":"<ServiceBuilder<L>>::then","value":"pub fn then<F>(Self, F) -> ServiceBuilder<Stack<crate::util::ThenLayer<F>, L>>","parent":null,"children":[],"decl_id":null,"docs":" Apply an asynchronous function after the service, regardless of whether the future\n succeeds or fails.","sig":null,"attributes":[{"value":"/ Apply an asynchronous function after the service, regardless of whether the future","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tower-0.4.13\\src\\builder\\mod.rs","byte_start":136975,"byte_end":137061,"line_start":432,"line_end":432,"column_start":5,"column_end":91}},{"value":"/ succeeds or fails.","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tower-0.4.13\\src\\builder\\mod.rs","byte_start":137066,"byte_end":137088,"line_start":433,"line_end":433,"column_start":5,"column_end":27}},{"value":"/","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tower-0.4.13\\src\\builder\\mod.rs","byte_start":137093,"byte_end":137096,"line_start":434,"line_end":434,"column_start":5,"column_end":8}},{"value":"/ This wraps the inner service with an instance of the [`Then`]","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tower-0.4.13\\src\\builder\\mod.rs","byte_start":137101,"byte_end":137166,"line_start":435,"line_end":435,"column_start":5,"column_end":70}},{"value":"/ middleware.","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tower-0.4.13\\src\\builder\\mod.rs","byte_start":137171,"byte_end":137186,"line_start":436,"line_end":436,"column_start":5,"column_end":20}},{"value":"/","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tower-0.4.13\\src\\builder\\mod.rs","byte_start":137191,"byte_end":137194,"line_start":437,"line_end":437,"column_start":5,"column_end":8}},{"value":"/ This is similar to the [`map_response`] and [`map_err`] functions,","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tower-0.4.13\\src\\builder\\mod.rs","byte_start":137199,"byte_end":137269,"line_start":438,"line_end":438,"column_start":5,"column_end":75}},{"value":"/ except that the *same* function is invoked when the service's future","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tower-0.4.13\\src\\builder\\mod.rs","byte_start":137274,"byte_end":137346,"line_start":439,"line_end":439,"column_start":5,"column_end":77}},{"value":"/ completes, whether it completes successfully or fails. This function","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tower-0.4.13\\src\\builder\\mod.rs","byte_start":137351,"byte_end":137423,"line_start":440,"line_end":440,"column_start":5,"column_end":77}},{"value":"/ takes the [`Result`] returned by the service's future, and returns a","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tower-0.4.13\\src\\builder\\mod.rs","byte_start":137428,"byte_end":137500,"line_start":441,"line_end":441,"column_start":5,"column_end":77}},{"value":"/ [`Result`].","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tower-0.4.13\\src\\builder\\mod.rs","byte_start":137505,"byte_end":137520,"line_start":442,"line_end":442,"column_start":5,"column_end":20}},{"value":"/","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tower-0.4.13\\src\\builder\\mod.rs","byte_start":137525,"byte_end":137528,"line_start":443,"line_end":443,"column_start":5,"column_end":8}},{"value":"/ See the documentation for the [`then` combinator] for details.","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tower-0.4.13\\src\\builder\\mod.rs","byte_start":137533,"byte_end":137599,"line_start":444,"line_end":444,"column_start":5,"column_end":71}},{"value":"/","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tower-0.4.13\\src\\builder\\mod.rs","byte_start":137604,"byte_end":137607,"line_start":445,"line_end":445,"column_start":5,"column_end":8}},{"value":"/ [`Then`]: crate::util::Then","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tower-0.4.13\\src\\builder\\mod.rs","byte_start":137612,"byte_end":137643,"line_start":446,"line_end":446,"column_start":5,"column_end":36}},{"value":"/ [`then` combinator]: crate::util::ServiceExt::then","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tower-0.4.13\\src\\builder\\mod.rs","byte_start":137648,"byte_end":137702,"line_start":447,"line_end":447,"column_start":5,"column_end":59}},{"value":"/ [`map_response`]: ServiceBuilder::map_response","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tower-0.4.13\\src\\builder\\mod.rs","byte_start":137707,"byte_end":137757,"line_start":448,"line_end":448,"column_start":5,"column_end":55}},{"value":"/ [`map_err`]: ServiceBuilder::map_err","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tower-0.4.13\\src\\builder\\mod.rs","byte_start":137762,"byte_end":137802,"line_start":449,"line_end":449,"column_start":5,"column_end":45}},{"value":"cfg(feature = \"util\")","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tower-0.4.13\\src\\builder\\mod.rs","byte_start":137807,"byte_end":137831,"line_start":450,"line_end":450,"column_start":5,"column_end":29}}]},{"kind":"Method","id":{"krate":0,"index":1529},"span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tower-0.4.13\\src\\builder\\mod.rs","byte_start":138887,"byte_end":138895,"line_start":474,"line_end":474,"column_start":12,"column_end":20},"name":"and_then","qualname":"<ServiceBuilder<L>>::and_then","value":"pub fn and_then<F>(Self, F)\n-> ServiceBuilder<Stack<crate::util::AndThenLayer<F>, L>>","parent":null,"children":[],"decl_id":null,"docs":" Executes a new future after this service's future resolves. This does\n not alter the behaviour of the [`poll_ready`] method.","sig":null,"attributes":[{"value":"/ Executes a new future after this service's future resolves. This does","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tower-0.4.13\\src\\builder\\mod.rs","byte_start":138034,"byte_end":138107,"line_start":456,"line_end":456,"column_start":5,"column_end":78}},{"value":"/ not alter the behaviour of the [`poll_ready`] method.","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tower-0.4.13\\src\\builder\\mod.rs","byte_start":138112,"byte_end":138169,"line_start":457,"line_end":457,"column_start":5,"column_end":62}},{"value":"/","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tower-0.4.13\\src\\builder\\mod.rs","byte_start":138174,"byte_end":138177,"line_start":458,"line_end":458,"column_start":5,"column_end":8}},{"value":"/ This method can be used to change the [`Response`] type of the service","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tower-0.4.13\\src\\builder\\mod.rs","byte_start":138182,"byte_end":138256,"line_start":459,"line_end":459,"column_start":5,"column_end":79}},{"value":"/ into a different type. You can use this method to chain along a computation once the","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tower-0.4.13\\src\\builder\\mod.rs","byte_start":138261,"byte_end":138349,"line_start":460,"line_end":460,"column_start":5,"column_end":93}},{"value":"/ service's response has been resolved.","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tower-0.4.13\\src\\builder\\mod.rs","byte_start":138354,"byte_end":138395,"line_start":461,"line_end":461,"column_start":5,"column_end":46}},{"value":"/","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tower-0.4.13\\src\\builder\\mod.rs","byte_start":138400,"byte_end":138403,"line_start":462,"line_end":462,"column_start":5,"column_end":8}},{"value":"/ This wraps the inner service with an instance of the [`AndThen`]","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tower-0.4.13\\src\\builder\\mod.rs","byte_start":138408,"byte_end":138476,"line_start":463,"line_end":463,"column_start":5,"column_end":73}},{"value":"/ middleware.","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tower-0.4.13\\src\\builder\\mod.rs","byte_start":138481,"byte_end":138496,"line_start":464,"line_end":464,"column_start":5,"column_end":20}},{"value":"/","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tower-0.4.13\\src\\builder\\mod.rs","byte_start":138501,"byte_end":138504,"line_start":465,"line_end":465,"column_start":5,"column_end":8}},{"value":"/ See the documentation for the [`and_then` combinator] for details.","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tower-0.4.13\\src\\builder\\mod.rs","byte_start":138509,"byte_end":138579,"line_start":466,"line_end":466,"column_start":5,"column_end":75}},{"value":"/","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tower-0.4.13\\src\\builder\\mod.rs","byte_start":138584,"byte_end":138587,"line_start":467,"line_end":467,"column_start":5,"column_end":8}},{"value":"/ [`Response`]: crate::Service::Response","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tower-0.4.13\\src\\builder\\mod.rs","byte_start":138592,"byte_end":138634,"line_start":468,"line_end":468,"column_start":5,"column_end":47}},{"value":"/ [`poll_ready`]: crate::Service::poll_ready","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tower-0.4.13\\src\\builder\\mod.rs","byte_start":138639,"byte_end":138685,"line_start":469,"line_end":469,"column_start":5,"column_end":51}},{"value":"/ [`and_then` combinator]: crate::util::ServiceExt::and_then","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tower-0.4.13\\src\\builder\\mod.rs","byte_start":138690,"byte_end":138752,"line_start":470,"line_end":470,"column_start":5,"column_end":67}},{"value":"/ [`AndThen`]: crate::util::AndThen","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tower-0.4.13\\src\\builder\\mod.rs","byte_start":138757,"byte_end":138794,"line_start":471,"line_end":471,"column_start":5,"column_end":42}},{"value":"cfg(feature = \"util\")","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tower-0.4.13\\src\\builder\\mod.rs","byte_start":138799,"byte_end":138823,"line_start":472,"line_end":472,"column_start":5,"column_end":29}}]},{"kind":"Method","id":{"krate":0,"index":1531},"span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tower-0.4.13\\src\\builder\\mod.rs","byte_start":139607,"byte_end":139617,"line_start":491,"line_end":491,"column_start":12,"column_end":22},"name":"map_result","qualname":"<ServiceBuilder<L>>::map_result","value":"pub fn map_result<F>(Self, F)\n-> ServiceBuilder<Stack<crate::util::MapResultLayer<F>, L>>","parent":null,"children":[],"decl_id":null,"docs":" Maps this service's result type (`Result<Self::Response, Self::Error>`)\n to a different value, regardless of whether the future succeeds or\n fails.","sig":null,"attributes":[{"value":"/ Maps this service's result type (`Result<Self::Response, Self::Error>`)","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tower-0.4.13\\src\\builder\\mod.rs","byte_start":139036,"byte_end":139111,"line_start":478,"line_end":478,"column_start":5,"column_end":80}},{"value":"/ to a different value, regardless of whether the future succeeds or","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tower-0.4.13\\src\\builder\\mod.rs","byte_start":139116,"byte_end":139186,"line_start":479,"line_end":479,"column_start":5,"column_end":75}},{"value":"/ fails.","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tower-0.4.13\\src\\builder\\mod.rs","byte_start":139191,"byte_end":139201,"line_start":480,"line_end":480,"column_start":5,"column_end":15}},{"value":"/","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tower-0.4.13\\src\\builder\\mod.rs","byte_start":139206,"byte_end":139209,"line_start":481,"line_end":481,"column_start":5,"column_end":8}},{"value":"/ This wraps the inner service with an instance of the [`MapResult`]","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tower-0.4.13\\src\\builder\\mod.rs","byte_start":139214,"byte_end":139284,"line_start":482,"line_end":482,"column_start":5,"column_end":75}},{"value":"/ middleware.","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tower-0.4.13\\src\\builder\\mod.rs","byte_start":139289,"byte_end":139304,"line_start":483,"line_end":483,"column_start":5,"column_end":20}},{"value":"/","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tower-0.4.13\\src\\builder\\mod.rs","byte_start":139309,"byte_end":139312,"line_start":484,"line_end":484,"column_start":5,"column_end":8}},{"value":"/ See the documentation for the [`map_result` combinator] for details.","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tower-0.4.13\\src\\builder\\mod.rs","byte_start":139317,"byte_end":139389,"line_start":485,"line_end":485,"column_start":5,"column_end":77}},{"value":"/","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tower-0.4.13\\src\\builder\\mod.rs","byte_start":139394,"byte_end":139397,"line_start":486,"line_end":486,"column_start":5,"column_end":8}},{"value":"/ [`map_result` combinator]: crate::util::ServiceExt::map_result","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tower-0.4.13\\src\\builder\\mod.rs","byte_start":139402,"byte_end":139468,"line_start":487,"line_end":487,"column_start":5,"column_end":71}},{"value":"/ [`MapResult`]: crate::util::MapResult","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tower-0.4.13\\src\\builder\\mod.rs","byte_start":139473,"byte_end":139514,"line_start":488,"line_end":488,"column_start":5,"column_end":46}},{"value":"cfg(feature = \"util\")","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tower-0.4.13\\src\\builder\\mod.rs","byte_start":139519,"byte_end":139543,"line_start":489,"line_end":489,"column_start":5,"column_end":29}}]},{"kind":"Method","id":{"krate":0,"index":1533},"span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tower-0.4.13\\src\\builder\\mod.rs","byte_start":139824,"byte_end":139834,"line_start":496,"line_end":496,"column_start":12,"column_end":22},"name":"into_inner","qualname":"<ServiceBuilder<L>>::into_inner","value":"pub fn into_inner(Self) -> L","parent":null,"children":[],"decl_id":null,"docs":" Returns the underlying `Layer` implementation.\n","sig":null,"attributes":[{"value":"/ Returns the underlying `Layer` implementation.","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tower-0.4.13\\src\\builder\\mod.rs","byte_start":139762,"byte_end":139812,"line_start":495,"line_end":495,"column_start":5,"column_end":55}}]},{"kind":"Method","id":{"krate":0,"index":1534},"span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tower-0.4.13\\src\\builder\\mod.rs","byte_start":140098,"byte_end":140105,"line_start":505,"line_end":505,"column_start":12,"column_end":19},"name":"service","qualname":"<ServiceBuilder<L>>::service","value":"pub fn service<S>(&Self, S) -> L::Service where L: Layer<S>","parent":null,"children":[],"decl_id":null,"docs":" Wrap the service `S` with the middleware provided by this\n [`ServiceBuilder`]'s [`Layer`]'s, returning a new [`Service`].","sig":null,"attributes":[{"value":"/ Wrap the service `S` with the middleware provided by this","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tower-0.4.13\\src\\builder\\mod.rs","byte_start":139878,"byte_end":139939,"line_start":500,"line_end":500,"column_start":5,"column_end":66}},{"value":"/ [`ServiceBuilder`]'s [`Layer`]'s, returning a new [`Service`].","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tower-0.4.13\\src\\builder\\mod.rs","byte_start":139944,"byte_end":140010,"line_start":501,"line_end":501,"column_start":5,"column_end":71}},{"value":"/","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tower-0.4.13\\src\\builder\\mod.rs","byte_start":140015,"byte_end":140018,"line_start":502,"line_end":502,"column_start":5,"column_end":8}},{"value":"/ [`Layer`]: crate::Layer","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tower-0.4.13\\src\\builder\\mod.rs","byte_start":140023,"byte_end":140050,"line_start":503,"line_end":503,"column_start":5,"column_end":32}},{"value":"/ [`Service`]: crate::Service","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tower-0.4.13\\src\\builder\\mod.rs","byte_start":140055,"byte_end":140086,"line_start":504,"line_end":504,"column_start":5,"column_end":36}}]},{"kind":"Method","id":{"krate":0,"index":1536},"span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tower-0.4.13\\src\\builder\\mod.rs","byte_start":141651,"byte_end":141661,"line_start":557,"line_end":557,"column_start":12,"column_end":22},"name":"service_fn","qualname":"<ServiceBuilder<L>>::service_fn","value":"pub fn service_fn<F>(Self, F) -> L::Service where\nL: Layer<crate::util::ServiceFn<F>>","parent":null,"children":[],"decl_id":null,"docs":" Wrap the async function `F` with the middleware provided by this [`ServiceBuilder`]'s\n [`Layer`]s, returning a new [`Service`].","sig":null,"attributes":[{"value":"/ Wrap the async function `F` with the middleware provided by this [`ServiceBuilder`]'s","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tower-0.4.13\\src\\builder\\mod.rs","byte_start":140224,"byte_end":140313,"line_start":512,"line_end":512,"column_start":5,"column_end":94}},{"value":"/ [`Layer`]s, returning a new [`Service`].","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tower-0.4.13\\src\\builder\\mod.rs","byte_start":140318,"byte_end":140362,"line_start":513,"line_end":513,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tower-0.4.13\\src\\builder\\mod.rs","byte_start":140367,"byte_end":140370,"line_start":514,"line_end":514,"column_start":5,"column_end":8}},{"value":"/ This is a convenience method which is equivalent to calling","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tower-0.4.13\\src\\builder\\mod.rs","byte_start":140375,"byte_end":140438,"line_start":515,"line_end":515,"column_start":5,"column_end":68}},{"value":"/ [`ServiceBuilder::service`] with a [`service_fn`], like this:","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tower-0.4.13\\src\\builder\\mod.rs","byte_start":140443,"byte_end":140508,"line_start":516,"line_end":516,"column_start":5,"column_end":70}},{"value":"/","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tower-0.4.13\\src\\builder\\mod.rs","byte_start":140513,"byte_end":140516,"line_start":517,"line_end":517,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tower-0.4.13\\src\\builder\\mod.rs","byte_start":140521,"byte_end":140532,"line_start":518,"line_end":518,"column_start":5,"column_end":16}},{"value":"/ # use tower::{ServiceBuilder, service_fn};","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tower-0.4.13\\src\\builder\\mod.rs","byte_start":140537,"byte_end":140583,"line_start":519,"line_end":519,"column_start":5,"column_end":51}},{"value":"/ # async fn handler_fn(_: ()) -> Result<(), ()> { Ok(()) }","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tower-0.4.13\\src\\builder\\mod.rs","byte_start":140588,"byte_end":140649,"line_start":520,"line_end":520,"column_start":5,"column_end":66}},{"value":"/ # let _ = {","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tower-0.4.13\\src\\builder\\mod.rs","byte_start":140654,"byte_end":140669,"line_start":521,"line_end":521,"column_start":5,"column_end":20}},{"value":"/ ServiceBuilder::new()","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tower-0.4.13\\src\\builder\\mod.rs","byte_start":140674,"byte_end":140699,"line_start":522,"line_end":522,"column_start":5,"column_end":30}},{"value":"/     // ...","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tower-0.4.13\\src\\builder\\mod.rs","byte_start":140704,"byte_end":140718,"line_start":523,"line_end":523,"column_start":5,"column_end":19}},{"value":"/     .service(service_fn(handler_fn))","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tower-0.4.13\\src\\builder\\mod.rs","byte_start":140723,"byte_end":140763,"line_start":524,"line_end":524,"column_start":5,"column_end":45}},{"value":"/ # };","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tower-0.4.13\\src\\builder\\mod.rs","byte_start":140768,"byte_end":140776,"line_start":525,"line_end":525,"column_start":5,"column_end":13}},{"value":"/ ```","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tower-0.4.13\\src\\builder\\mod.rs","byte_start":140781,"byte_end":140788,"line_start":526,"line_end":526,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tower-0.4.13\\src\\builder\\mod.rs","byte_start":140793,"byte_end":140796,"line_start":527,"line_end":527,"column_start":5,"column_end":8}},{"value":"/ # Example","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tower-0.4.13\\src\\builder\\mod.rs","byte_start":140801,"byte_end":140814,"line_start":528,"line_end":528,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tower-0.4.13\\src\\builder\\mod.rs","byte_start":140819,"byte_end":140822,"line_start":529,"line_end":529,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tower-0.4.13\\src\\builder\\mod.rs","byte_start":140827,"byte_end":140838,"line_start":530,"line_end":530,"column_start":5,"column_end":16}},{"value":"/ use std::time::Duration;","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tower-0.4.13\\src\\builder\\mod.rs","byte_start":140843,"byte_end":140871,"line_start":531,"line_end":531,"column_start":5,"column_end":33}},{"value":"/ use tower::{ServiceBuilder, ServiceExt, BoxError, service_fn};","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tower-0.4.13\\src\\builder\\mod.rs","byte_start":140876,"byte_end":140942,"line_start":532,"line_end":532,"column_start":5,"column_end":71}},{"value":"/","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tower-0.4.13\\src\\builder\\mod.rs","byte_start":140947,"byte_end":140950,"line_start":533,"line_end":533,"column_start":5,"column_end":8}},{"value":"/ # #[tokio::main]","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tower-0.4.13\\src\\builder\\mod.rs","byte_start":140955,"byte_end":140975,"line_start":534,"line_end":534,"column_start":5,"column_end":25}},{"value":"/ # async fn main() -> Result<(), BoxError> {","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tower-0.4.13\\src\\builder\\mod.rs","byte_start":140980,"byte_end":141027,"line_start":535,"line_end":535,"column_start":5,"column_end":52}},{"value":"/ async fn handle(request: &'static str) -> Result<&'static str, BoxError> {","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tower-0.4.13\\src\\builder\\mod.rs","byte_start":141032,"byte_end":141110,"line_start":536,"line_end":536,"column_start":5,"column_end":83}},{"value":"/    Ok(request)","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tower-0.4.13\\src\\builder\\mod.rs","byte_start":141115,"byte_end":141133,"line_start":537,"line_end":537,"column_start":5,"column_end":23}},{"value":"/ }","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tower-0.4.13\\src\\builder\\mod.rs","byte_start":141138,"byte_end":141143,"line_start":538,"line_end":538,"column_start":5,"column_end":10}},{"value":"/","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tower-0.4.13\\src\\builder\\mod.rs","byte_start":141148,"byte_end":141151,"line_start":539,"line_end":539,"column_start":5,"column_end":8}},{"value":"/ let svc = ServiceBuilder::new()","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tower-0.4.13\\src\\builder\\mod.rs","byte_start":141156,"byte_end":141191,"line_start":540,"line_end":540,"column_start":5,"column_end":40}},{"value":"/     .buffer(1024)","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tower-0.4.13\\src\\builder\\mod.rs","byte_start":141196,"byte_end":141217,"line_start":541,"line_end":541,"column_start":5,"column_end":26}},{"value":"/     .timeout(Duration::from_secs(10))","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tower-0.4.13\\src\\builder\\mod.rs","byte_start":141222,"byte_end":141263,"line_start":542,"line_end":542,"column_start":5,"column_end":46}},{"value":"/     .service_fn(handle);","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tower-0.4.13\\src\\builder\\mod.rs","byte_start":141268,"byte_end":141296,"line_start":543,"line_end":543,"column_start":5,"column_end":33}},{"value":"/","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tower-0.4.13\\src\\builder\\mod.rs","byte_start":141301,"byte_end":141304,"line_start":544,"line_end":544,"column_start":5,"column_end":8}},{"value":"/ let response = svc.oneshot(\"foo\").await?;","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tower-0.4.13\\src\\builder\\mod.rs","byte_start":141309,"byte_end":141354,"line_start":545,"line_end":545,"column_start":5,"column_end":50}},{"value":"/","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tower-0.4.13\\src\\builder\\mod.rs","byte_start":141359,"byte_end":141362,"line_start":546,"line_end":546,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(response, \"foo\");","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tower-0.4.13\\src\\builder\\mod.rs","byte_start":141367,"byte_end":141399,"line_start":547,"line_end":547,"column_start":5,"column_end":37}},{"value":"/ # Ok(())","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tower-0.4.13\\src\\builder\\mod.rs","byte_start":141404,"byte_end":141416,"line_start":548,"line_end":548,"column_start":5,"column_end":17}},{"value":"/ # }","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tower-0.4.13\\src\\builder\\mod.rs","byte_start":141421,"byte_end":141428,"line_start":549,"line_end":549,"column_start":5,"column_end":12}},{"value":"/ ```","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tower-0.4.13\\src\\builder\\mod.rs","byte_start":141433,"byte_end":141440,"line_start":550,"line_end":550,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tower-0.4.13\\src\\builder\\mod.rs","byte_start":141445,"byte_end":141448,"line_start":551,"line_end":551,"column_start":5,"column_end":8}},{"value":"/ [`Layer`]: crate::Layer","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tower-0.4.13\\src\\builder\\mod.rs","byte_start":141453,"byte_end":141480,"line_start":552,"line_end":552,"column_start":5,"column_end":32}},{"value":"/ [`Service`]: crate::Service","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tower-0.4.13\\src\\builder\\mod.rs","byte_start":141485,"byte_end":141516,"line_start":553,"line_end":553,"column_start":5,"column_end":36}},{"value":"/ [`service_fn`]: crate::service_fn","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tower-0.4.13\\src\\builder\\mod.rs","byte_start":141521,"byte_end":141558,"line_start":554,"line_end":554,"column_start":5,"column_end":42}},{"value":"cfg(feature = \"util\")","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tower-0.4.13\\src\\builder\\mod.rs","byte_start":141563,"byte_end":141587,"line_start":555,"line_end":555,"column_start":5,"column_end":29}}]},{"kind":"Method","id":{"krate":0,"index":1538},"span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tower-0.4.13\\src\\builder\\mod.rs","byte_start":142673,"byte_end":142684,"line_start":590,"line_end":590,"column_start":12,"column_end":23},"name":"check_clone","qualname":"<ServiceBuilder<L>>::check_clone","value":"pub fn check_clone(Self) -> Self where Self: Clone","parent":null,"children":[],"decl_id":null,"docs":" Check that the builder implements `Clone`.","sig":null,"attributes":[{"value":"/ Check that the builder implements `Clone`.","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tower-0.4.13\\src\\builder\\mod.rs","byte_start":141812,"byte_end":141858,"line_start":564,"line_end":564,"column_start":5,"column_end":51}},{"value":"/","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tower-0.4.13\\src\\builder\\mod.rs","byte_start":141863,"byte_end":141866,"line_start":565,"line_end":565,"column_start":5,"column_end":8}},{"value":"/ This can be useful when debugging type errors in `ServiceBuilder`s with lots of layers.","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tower-0.4.13\\src\\builder\\mod.rs","byte_start":141871,"byte_end":141962,"line_start":566,"line_end":566,"column_start":5,"column_end":96}},{"value":"/","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tower-0.4.13\\src\\builder\\mod.rs","byte_start":141967,"byte_end":141970,"line_start":567,"line_end":567,"column_start":5,"column_end":8}},{"value":"/ Doesn't actually change the builder but serves as a type check.","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tower-0.4.13\\src\\builder\\mod.rs","byte_start":141975,"byte_end":142042,"line_start":568,"line_end":568,"column_start":5,"column_end":72}},{"value":"/","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tower-0.4.13\\src\\builder\\mod.rs","byte_start":142047,"byte_end":142050,"line_start":569,"line_end":569,"column_start":5,"column_end":8}},{"value":"/ # Example","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tower-0.4.13\\src\\builder\\mod.rs","byte_start":142055,"byte_end":142068,"line_start":570,"line_end":570,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tower-0.4.13\\src\\builder\\mod.rs","byte_start":142073,"byte_end":142076,"line_start":571,"line_end":571,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tower-0.4.13\\src\\builder\\mod.rs","byte_start":142081,"byte_end":142092,"line_start":572,"line_end":572,"column_start":5,"column_end":16}},{"value":"/ use tower::ServiceBuilder;","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tower-0.4.13\\src\\builder\\mod.rs","byte_start":142097,"byte_end":142127,"line_start":573,"line_end":573,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tower-0.4.13\\src\\builder\\mod.rs","byte_start":142132,"byte_end":142135,"line_start":574,"line_end":574,"column_start":5,"column_end":8}},{"value":"/ let builder = ServiceBuilder::new()","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tower-0.4.13\\src\\builder\\mod.rs","byte_start":142140,"byte_end":142179,"line_start":575,"line_end":575,"column_start":5,"column_end":44}},{"value":"/     // Do something before processing the request","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tower-0.4.13\\src\\builder\\mod.rs","byte_start":142184,"byte_end":142237,"line_start":576,"line_end":576,"column_start":5,"column_end":58}},{"value":"/     .map_request(|request: String| {","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tower-0.4.13\\src\\builder\\mod.rs","byte_start":142242,"byte_end":142282,"line_start":577,"line_end":577,"column_start":5,"column_end":45}},{"value":"/         println!(\"got request!\");","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tower-0.4.13\\src\\builder\\mod.rs","byte_start":142287,"byte_end":142324,"line_start":578,"line_end":578,"column_start":5,"column_end":42}},{"value":"/         request","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tower-0.4.13\\src\\builder\\mod.rs","byte_start":142329,"byte_end":142348,"line_start":579,"line_end":579,"column_start":5,"column_end":24}},{"value":"/     })","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tower-0.4.13\\src\\builder\\mod.rs","byte_start":142353,"byte_end":142363,"line_start":580,"line_end":580,"column_start":5,"column_end":15}},{"value":"/     // Ensure our `ServiceBuilder` can be cloned","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tower-0.4.13\\src\\builder\\mod.rs","byte_start":142368,"byte_end":142420,"line_start":581,"line_end":581,"column_start":5,"column_end":57}},{"value":"/     .check_clone()","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tower-0.4.13\\src\\builder\\mod.rs","byte_start":142425,"byte_end":142447,"line_start":582,"line_end":582,"column_start":5,"column_end":27}},{"value":"/     // Do something after processing the request","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tower-0.4.13\\src\\builder\\mod.rs","byte_start":142452,"byte_end":142504,"line_start":583,"line_end":583,"column_start":5,"column_end":57}},{"value":"/     .map_response(|response: String| {","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tower-0.4.13\\src\\builder\\mod.rs","byte_start":142509,"byte_end":142551,"line_start":584,"line_end":584,"column_start":5,"column_end":47}},{"value":"/         println!(\"got response!\");","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tower-0.4.13\\src\\builder\\mod.rs","byte_start":142556,"byte_end":142594,"line_start":585,"line_end":585,"column_start":5,"column_end":43}},{"value":"/         response","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tower-0.4.13\\src\\builder\\mod.rs","byte_start":142599,"byte_end":142619,"line_start":586,"line_end":586,"column_start":5,"column_end":25}},{"value":"/     });","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tower-0.4.13\\src\\builder\\mod.rs","byte_start":142624,"byte_end":142635,"line_start":587,"line_end":587,"column_start":5,"column_end":16}},{"value":"/ ```","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tower-0.4.13\\src\\builder\\mod.rs","byte_start":142640,"byte_end":142647,"line_start":588,"line_end":588,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tower-0.4.13\\src\\builder\\mod.rs","byte_start":142652,"byte_end":142661,"line_start":589,"line_end":589,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":1539},"span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tower-0.4.13\\src\\builder\\mod.rs","byte_start":143799,"byte_end":143818,"line_start":627,"line_end":627,"column_start":12,"column_end":31},"name":"check_service_clone","qualname":"<ServiceBuilder<L>>::check_service_clone","value":"pub fn check_service_clone<S>(Self) -> Self where L: Layer<S>,\nL::Service: Clone","parent":null,"children":[],"decl_id":null,"docs":" Check that the builder when given a service of type `S` produces a service that implements\n `Clone`.","sig":null,"attributes":[{"value":"/ Check that the builder when given a service of type `S` produces a service that implements","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tower-0.4.13\\src\\builder\\mod.rs","byte_start":142760,"byte_end":142854,"line_start":597,"line_end":597,"column_start":5,"column_end":99}},{"value":"/ `Clone`.","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tower-0.4.13\\src\\builder\\mod.rs","byte_start":142859,"byte_end":142871,"line_start":598,"line_end":598,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tower-0.4.13\\src\\builder\\mod.rs","byte_start":142876,"byte_end":142879,"line_start":599,"line_end":599,"column_start":5,"column_end":8}},{"value":"/ This can be useful when debugging type errors in `ServiceBuilder`s with lots of layers.","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tower-0.4.13\\src\\builder\\mod.rs","byte_start":142884,"byte_end":142975,"line_start":600,"line_end":600,"column_start":5,"column_end":96}},{"value":"/","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tower-0.4.13\\src\\builder\\mod.rs","byte_start":142980,"byte_end":142983,"line_start":601,"line_end":601,"column_start":5,"column_end":8}},{"value":"/ Doesn't actually change the builder but serves as a type check.","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tower-0.4.13\\src\\builder\\mod.rs","byte_start":142988,"byte_end":143055,"line_start":602,"line_end":602,"column_start":5,"column_end":72}},{"value":"/","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tower-0.4.13\\src\\builder\\mod.rs","byte_start":143060,"byte_end":143063,"line_start":603,"line_end":603,"column_start":5,"column_end":8}},{"value":"/ # Example","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tower-0.4.13\\src\\builder\\mod.rs","byte_start":143068,"byte_end":143081,"line_start":604,"line_end":604,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tower-0.4.13\\src\\builder\\mod.rs","byte_start":143086,"byte_end":143089,"line_start":605,"line_end":605,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tower-0.4.13\\src\\builder\\mod.rs","byte_start":143094,"byte_end":143105,"line_start":606,"line_end":606,"column_start":5,"column_end":16}},{"value":"/ use tower::ServiceBuilder;","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tower-0.4.13\\src\\builder\\mod.rs","byte_start":143110,"byte_end":143140,"line_start":607,"line_end":607,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tower-0.4.13\\src\\builder\\mod.rs","byte_start":143145,"byte_end":143148,"line_start":608,"line_end":608,"column_start":5,"column_end":8}},{"value":"/ # #[derive(Clone)]","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tower-0.4.13\\src\\builder\\mod.rs","byte_start":143153,"byte_end":143175,"line_start":609,"line_end":609,"column_start":5,"column_end":27}},{"value":"/ # struct MyService;","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tower-0.4.13\\src\\builder\\mod.rs","byte_start":143180,"byte_end":143203,"line_start":610,"line_end":610,"column_start":5,"column_end":28}},{"value":"/ #","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tower-0.4.13\\src\\builder\\mod.rs","byte_start":143208,"byte_end":143213,"line_start":611,"line_end":611,"column_start":5,"column_end":10}},{"value":"/ let builder = ServiceBuilder::new()","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tower-0.4.13\\src\\builder\\mod.rs","byte_start":143218,"byte_end":143257,"line_start":612,"line_end":612,"column_start":5,"column_end":44}},{"value":"/     // Do something before processing the request","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tower-0.4.13\\src\\builder\\mod.rs","byte_start":143262,"byte_end":143315,"line_start":613,"line_end":613,"column_start":5,"column_end":58}},{"value":"/     .map_request(|request: String| {","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tower-0.4.13\\src\\builder\\mod.rs","byte_start":143320,"byte_end":143360,"line_start":614,"line_end":614,"column_start":5,"column_end":45}},{"value":"/         println!(\"got request!\");","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tower-0.4.13\\src\\builder\\mod.rs","byte_start":143365,"byte_end":143402,"line_start":615,"line_end":615,"column_start":5,"column_end":42}},{"value":"/         request","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tower-0.4.13\\src\\builder\\mod.rs","byte_start":143407,"byte_end":143426,"line_start":616,"line_end":616,"column_start":5,"column_end":24}},{"value":"/     })","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tower-0.4.13\\src\\builder\\mod.rs","byte_start":143431,"byte_end":143441,"line_start":617,"line_end":617,"column_start":5,"column_end":15}},{"value":"/     // Ensure that the service produced when given a `MyService` implements","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tower-0.4.13\\src\\builder\\mod.rs","byte_start":143446,"byte_end":143525,"line_start":618,"line_end":618,"column_start":5,"column_end":84}},{"value":"/     .check_service_clone::<MyService>()","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tower-0.4.13\\src\\builder\\mod.rs","byte_start":143530,"byte_end":143573,"line_start":619,"line_end":619,"column_start":5,"column_end":48}},{"value":"/     // Do something after processing the request","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tower-0.4.13\\src\\builder\\mod.rs","byte_start":143578,"byte_end":143630,"line_start":620,"line_end":620,"column_start":5,"column_end":57}},{"value":"/     .map_response(|response: String| {","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tower-0.4.13\\src\\builder\\mod.rs","byte_start":143635,"byte_end":143677,"line_start":621,"line_end":621,"column_start":5,"column_end":47}},{"value":"/         println!(\"got response!\");","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tower-0.4.13\\src\\builder\\mod.rs","byte_start":143682,"byte_end":143720,"line_start":622,"line_end":622,"column_start":5,"column_end":43}},{"value":"/         response","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tower-0.4.13\\src\\builder\\mod.rs","byte_start":143725,"byte_end":143745,"line_start":623,"line_end":623,"column_start":5,"column_end":25}},{"value":"/     });","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tower-0.4.13\\src\\builder\\mod.rs","byte_start":143750,"byte_end":143761,"line_start":624,"line_end":624,"column_start":5,"column_end":16}},{"value":"/ ```","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tower-0.4.13\\src\\builder\\mod.rs","byte_start":143766,"byte_end":143773,"line_start":625,"line_end":625,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tower-0.4.13\\src\\builder\\mod.rs","byte_start":143778,"byte_end":143787,"line_start":626,"line_end":626,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":1541},"span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tower-0.4.13\\src\\builder\\mod.rs","byte_start":145687,"byte_end":145700,"line_start":684,"line_end":684,"column_start":12,"column_end":25},"name":"check_service","qualname":"<ServiceBuilder<L>>::check_service","value":"pub fn check_service<S, T, U, E>(Self) -> Self where L: Layer<S>,\nL::Service: Service<T, Response = U, Error = U>","parent":null,"children":[],"decl_id":null,"docs":" Check that the builder when given a service of type `S` produces a service with the given\n request, response, and error types.","sig":null,"attributes":[{"value":"/ Check that the builder when given a service of type `S` produces a service with the given","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tower-0.4.13\\src\\builder\\mod.rs","byte_start":143924,"byte_end":144017,"line_start":635,"line_end":635,"column_start":5,"column_end":98}},{"value":"/ request, response, and error types.","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tower-0.4.13\\src\\builder\\mod.rs","byte_start":144022,"byte_end":144061,"line_start":636,"line_end":636,"column_start":5,"column_end":44}},{"value":"/","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tower-0.4.13\\src\\builder\\mod.rs","byte_start":144066,"byte_end":144069,"line_start":637,"line_end":637,"column_start":5,"column_end":8}},{"value":"/ This can be useful when debugging type errors in `ServiceBuilder`s with lots of layers.","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tower-0.4.13\\src\\builder\\mod.rs","byte_start":144074,"byte_end":144165,"line_start":638,"line_end":638,"column_start":5,"column_end":96}},{"value":"/","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tower-0.4.13\\src\\builder\\mod.rs","byte_start":144170,"byte_end":144173,"line_start":639,"line_end":639,"column_start":5,"column_end":8}},{"value":"/ Doesn't actually change the builder but serves as a type check.","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tower-0.4.13\\src\\builder\\mod.rs","byte_start":144178,"byte_end":144245,"line_start":640,"line_end":640,"column_start":5,"column_end":72}},{"value":"/","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tower-0.4.13\\src\\builder\\mod.rs","byte_start":144250,"byte_end":144253,"line_start":641,"line_end":641,"column_start":5,"column_end":8}},{"value":"/ # Example","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tower-0.4.13\\src\\builder\\mod.rs","byte_start":144258,"byte_end":144271,"line_start":642,"line_end":642,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tower-0.4.13\\src\\builder\\mod.rs","byte_start":144276,"byte_end":144279,"line_start":643,"line_end":643,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tower-0.4.13\\src\\builder\\mod.rs","byte_start":144284,"byte_end":144295,"line_start":644,"line_end":644,"column_start":5,"column_end":16}},{"value":"/ use tower::ServiceBuilder;","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tower-0.4.13\\src\\builder\\mod.rs","byte_start":144300,"byte_end":144330,"line_start":645,"line_end":645,"column_start":5,"column_end":35}},{"value":"/ use std::task::{Poll, Context};","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tower-0.4.13\\src\\builder\\mod.rs","byte_start":144335,"byte_end":144370,"line_start":646,"line_end":646,"column_start":5,"column_end":40}},{"value":"/ use tower::{Service, ServiceExt};","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tower-0.4.13\\src\\builder\\mod.rs","byte_start":144375,"byte_end":144412,"line_start":647,"line_end":647,"column_start":5,"column_end":42}},{"value":"/","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tower-0.4.13\\src\\builder\\mod.rs","byte_start":144417,"byte_end":144420,"line_start":648,"line_end":648,"column_start":5,"column_end":8}},{"value":"/ // An example service","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tower-0.4.13\\src\\builder\\mod.rs","byte_start":144425,"byte_end":144450,"line_start":649,"line_end":649,"column_start":5,"column_end":30}},{"value":"/ struct MyService;","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tower-0.4.13\\src\\builder\\mod.rs","byte_start":144455,"byte_end":144476,"line_start":650,"line_end":650,"column_start":5,"column_end":26}},{"value":"/","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tower-0.4.13\\src\\builder\\mod.rs","byte_start":144481,"byte_end":144484,"line_start":651,"line_end":651,"column_start":5,"column_end":8}},{"value":"/ impl Service<Request> for MyService {","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tower-0.4.13\\src\\builder\\mod.rs","byte_start":144489,"byte_end":144530,"line_start":652,"line_end":652,"column_start":5,"column_end":46}},{"value":"/   type Response = Response;","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tower-0.4.13\\src\\builder\\mod.rs","byte_start":144535,"byte_end":144566,"line_start":653,"line_end":653,"column_start":5,"column_end":36}},{"value":"/   type Error = Error;","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tower-0.4.13\\src\\builder\\mod.rs","byte_start":144571,"byte_end":144596,"line_start":654,"line_end":654,"column_start":5,"column_end":30}},{"value":"/   type Future = futures_util::future::Ready<Result<Response, Error>>;","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tower-0.4.13\\src\\builder\\mod.rs","byte_start":144601,"byte_end":144674,"line_start":655,"line_end":655,"column_start":5,"column_end":78}},{"value":"/","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tower-0.4.13\\src\\builder\\mod.rs","byte_start":144679,"byte_end":144682,"line_start":656,"line_end":656,"column_start":5,"column_end":8}},{"value":"/   fn poll_ready(&mut self, cx: &mut Context<'_>) -> Poll<Result<(), Self::Error>> {","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tower-0.4.13\\src\\builder\\mod.rs","byte_start":144687,"byte_end":144774,"line_start":657,"line_end":657,"column_start":5,"column_end":92}},{"value":"/       // ...","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tower-0.4.13\\src\\builder\\mod.rs","byte_start":144779,"byte_end":144795,"line_start":658,"line_end":658,"column_start":5,"column_end":21}},{"value":"/       # todo!()","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tower-0.4.13\\src\\builder\\mod.rs","byte_start":144800,"byte_end":144819,"line_start":659,"line_end":659,"column_start":5,"column_end":24}},{"value":"/   }","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tower-0.4.13\\src\\builder\\mod.rs","byte_start":144824,"byte_end":144831,"line_start":660,"line_end":660,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tower-0.4.13\\src\\builder\\mod.rs","byte_start":144836,"byte_end":144839,"line_start":661,"line_end":661,"column_start":5,"column_end":8}},{"value":"/   fn call(&mut self, request: Request) -> Self::Future {","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tower-0.4.13\\src\\builder\\mod.rs","byte_start":144844,"byte_end":144904,"line_start":662,"line_end":662,"column_start":5,"column_end":65}},{"value":"/       // ...","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tower-0.4.13\\src\\builder\\mod.rs","byte_start":144909,"byte_end":144925,"line_start":663,"line_end":663,"column_start":5,"column_end":21}},{"value":"/       # todo!()","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tower-0.4.13\\src\\builder\\mod.rs","byte_start":144930,"byte_end":144949,"line_start":664,"line_end":664,"column_start":5,"column_end":24}},{"value":"/   }","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tower-0.4.13\\src\\builder\\mod.rs","byte_start":144954,"byte_end":144961,"line_start":665,"line_end":665,"column_start":5,"column_end":12}},{"value":"/ }","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tower-0.4.13\\src\\builder\\mod.rs","byte_start":144966,"byte_end":144971,"line_start":666,"line_end":666,"column_start":5,"column_end":10}},{"value":"/","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tower-0.4.13\\src\\builder\\mod.rs","byte_start":144976,"byte_end":144979,"line_start":667,"line_end":667,"column_start":5,"column_end":8}},{"value":"/ struct Request;","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tower-0.4.13\\src\\builder\\mod.rs","byte_start":144984,"byte_end":145003,"line_start":668,"line_end":668,"column_start":5,"column_end":24}},{"value":"/ struct Response;","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tower-0.4.13\\src\\builder\\mod.rs","byte_start":145008,"byte_end":145028,"line_start":669,"line_end":669,"column_start":5,"column_end":25}},{"value":"/ struct Error;","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tower-0.4.13\\src\\builder\\mod.rs","byte_start":145033,"byte_end":145050,"line_start":670,"line_end":670,"column_start":5,"column_end":22}},{"value":"/","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tower-0.4.13\\src\\builder\\mod.rs","byte_start":145055,"byte_end":145058,"line_start":671,"line_end":671,"column_start":5,"column_end":8}},{"value":"/ struct WrappedResponse(Response);","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tower-0.4.13\\src\\builder\\mod.rs","byte_start":145063,"byte_end":145100,"line_start":672,"line_end":672,"column_start":5,"column_end":42}},{"value":"/","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tower-0.4.13\\src\\builder\\mod.rs","byte_start":145105,"byte_end":145108,"line_start":673,"line_end":673,"column_start":5,"column_end":8}},{"value":"/ let builder = ServiceBuilder::new()","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tower-0.4.13\\src\\builder\\mod.rs","byte_start":145113,"byte_end":145152,"line_start":674,"line_end":674,"column_start":5,"column_end":44}},{"value":"/     // At this point in the builder if given a `MyService` it produces a service that","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tower-0.4.13\\src\\builder\\mod.rs","byte_start":145157,"byte_end":145246,"line_start":675,"line_end":675,"column_start":5,"column_end":94}},{"value":"/     // accepts `Request`s, produces `Response`s, and fails with `Error`s","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tower-0.4.13\\src\\builder\\mod.rs","byte_start":145251,"byte_end":145327,"line_start":676,"line_end":676,"column_start":5,"column_end":81}},{"value":"/     .check_service::<MyService, Request, Response, Error>()","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tower-0.4.13\\src\\builder\\mod.rs","byte_start":145332,"byte_end":145395,"line_start":677,"line_end":677,"column_start":5,"column_end":68}},{"value":"/     // Wrap responses in `WrappedResponse`","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tower-0.4.13\\src\\builder\\mod.rs","byte_start":145400,"byte_end":145446,"line_start":678,"line_end":678,"column_start":5,"column_end":51}},{"value":"/     .map_response(|response: Response| WrappedResponse(response))","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tower-0.4.13\\src\\builder\\mod.rs","byte_start":145451,"byte_end":145520,"line_start":679,"line_end":679,"column_start":5,"column_end":74}},{"value":"/     // Now the response type will be `WrappedResponse`","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tower-0.4.13\\src\\builder\\mod.rs","byte_start":145525,"byte_end":145583,"line_start":680,"line_end":680,"column_start":5,"column_end":63}},{"value":"/     .check_service::<MyService, _, WrappedResponse, _>();","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tower-0.4.13\\src\\builder\\mod.rs","byte_start":145588,"byte_end":145649,"line_start":681,"line_end":681,"column_start":5,"column_end":66}},{"value":"/ ```","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tower-0.4.13\\src\\builder\\mod.rs","byte_start":145654,"byte_end":145661,"line_start":682,"line_end":682,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tower-0.4.13\\src\\builder\\mod.rs","byte_start":145666,"byte_end":145675,"line_start":683,"line_end":683,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":1546},"span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tower-0.4.13\\src\\builder\\mod.rs","byte_start":146924,"byte_end":146929,"line_start":724,"line_end":724,"column_start":12,"column_end":17},"name":"boxed","qualname":"<ServiceBuilder<L>>::boxed","value":"pub fn boxed<S, R>(Self)\n->\n    ServiceBuilder<Stack<tower_layer::LayerFn<fn(: L::Service)\n        ->\n            crate::util::BoxService<R, <L::Service as Service<R>>::Response,\n            <L::Service as Service<R>>::Error>>, L>> where L: Layer<S>,\nL::Service: Service<R> + Send + 'static,\n<L::Service as Service<R>>::Future: Send + 'static","parent":null,"children":[],"decl_id":null,"docs":" This wraps the inner service with the [`Layer`] returned by [`BoxService::layer()`].","sig":null,"attributes":[{"value":"/ This wraps the inner service with the [`Layer`] returned by [`BoxService::layer()`].","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tower-0.4.13\\src\\builder\\mod.rs","byte_start":145845,"byte_end":145933,"line_start":692,"line_end":692,"column_start":5,"column_end":93}},{"value":"/","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tower-0.4.13\\src\\builder\\mod.rs","byte_start":145938,"byte_end":145941,"line_start":693,"line_end":693,"column_start":5,"column_end":8}},{"value":"/ See that method for more details.","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tower-0.4.13\\src\\builder\\mod.rs","byte_start":145946,"byte_end":145983,"line_start":694,"line_end":694,"column_start":5,"column_end":42}},{"value":"/","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tower-0.4.13\\src\\builder\\mod.rs","byte_start":145988,"byte_end":145991,"line_start":695,"line_end":695,"column_start":5,"column_end":8}},{"value":"/ # Example","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tower-0.4.13\\src\\builder\\mod.rs","byte_start":145996,"byte_end":146009,"line_start":696,"line_end":696,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tower-0.4.13\\src\\builder\\mod.rs","byte_start":146014,"byte_end":146017,"line_start":697,"line_end":697,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tower-0.4.13\\src\\builder\\mod.rs","byte_start":146022,"byte_end":146029,"line_start":698,"line_end":698,"column_start":5,"column_end":12}},{"value":"/ use tower::{Service, ServiceBuilder, BoxError, util::BoxService};","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tower-0.4.13\\src\\builder\\mod.rs","byte_start":146034,"byte_end":146103,"line_start":699,"line_end":699,"column_start":5,"column_end":74}},{"value":"/ use std::time::Duration;","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tower-0.4.13\\src\\builder\\mod.rs","byte_start":146108,"byte_end":146136,"line_start":700,"line_end":700,"column_start":5,"column_end":33}},{"value":"/ #","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tower-0.4.13\\src\\builder\\mod.rs","byte_start":146141,"byte_end":146146,"line_start":701,"line_end":701,"column_start":5,"column_end":10}},{"value":"/ # struct Request;","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tower-0.4.13\\src\\builder\\mod.rs","byte_start":146151,"byte_end":146172,"line_start":702,"line_end":702,"column_start":5,"column_end":26}},{"value":"/ # struct Response;","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tower-0.4.13\\src\\builder\\mod.rs","byte_start":146177,"byte_end":146199,"line_start":703,"line_end":703,"column_start":5,"column_end":27}},{"value":"/ # impl Response {","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tower-0.4.13\\src\\builder\\mod.rs","byte_start":146204,"byte_end":146225,"line_start":704,"line_end":704,"column_start":5,"column_end":26}},{"value":"/ #     fn new() -> Self { Self }","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tower-0.4.13\\src\\builder\\mod.rs","byte_start":146230,"byte_end":146265,"line_start":705,"line_end":705,"column_start":5,"column_end":40}},{"value":"/ # }","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tower-0.4.13\\src\\builder\\mod.rs","byte_start":146270,"byte_end":146277,"line_start":706,"line_end":706,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tower-0.4.13\\src\\builder\\mod.rs","byte_start":146282,"byte_end":146285,"line_start":707,"line_end":707,"column_start":5,"column_end":8}},{"value":"/ let service: BoxService<Request, Response, BoxError> = ServiceBuilder::new()","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tower-0.4.13\\src\\builder\\mod.rs","byte_start":146290,"byte_end":146370,"line_start":708,"line_end":708,"column_start":5,"column_end":85}},{"value":"/     .boxed()","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tower-0.4.13\\src\\builder\\mod.rs","byte_start":146375,"byte_end":146391,"line_start":709,"line_end":709,"column_start":5,"column_end":21}},{"value":"/     .load_shed()","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tower-0.4.13\\src\\builder\\mod.rs","byte_start":146396,"byte_end":146416,"line_start":710,"line_end":710,"column_start":5,"column_end":25}},{"value":"/     .concurrency_limit(64)","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tower-0.4.13\\src\\builder\\mod.rs","byte_start":146421,"byte_end":146451,"line_start":711,"line_end":711,"column_start":5,"column_end":35}},{"value":"/     .timeout(Duration::from_secs(10))","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tower-0.4.13\\src\\builder\\mod.rs","byte_start":146456,"byte_end":146497,"line_start":712,"line_end":712,"column_start":5,"column_end":46}},{"value":"/     .service_fn(|req: Request| async {","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tower-0.4.13\\src\\builder\\mod.rs","byte_start":146502,"byte_end":146544,"line_start":713,"line_end":713,"column_start":5,"column_end":47}},{"value":"/         Ok::<_, BoxError>(Response::new())","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tower-0.4.13\\src\\builder\\mod.rs","byte_start":146549,"byte_end":146595,"line_start":714,"line_end":714,"column_start":5,"column_end":51}},{"value":"/     });","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tower-0.4.13\\src\\builder\\mod.rs","byte_start":146600,"byte_end":146611,"line_start":715,"line_end":715,"column_start":5,"column_end":16}},{"value":"/ # let service = assert_service(service);","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tower-0.4.13\\src\\builder\\mod.rs","byte_start":146616,"byte_end":146660,"line_start":716,"line_end":716,"column_start":5,"column_end":49}},{"value":"/ # fn assert_service<S, R>(svc: S) -> S","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tower-0.4.13\\src\\builder\\mod.rs","byte_start":146665,"byte_end":146707,"line_start":717,"line_end":717,"column_start":5,"column_end":47}},{"value":"/ # where S: Service<R> { svc }","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tower-0.4.13\\src\\builder\\mod.rs","byte_start":146712,"byte_end":146745,"line_start":718,"line_end":718,"column_start":5,"column_end":38}},{"value":"/ ```","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tower-0.4.13\\src\\builder\\mod.rs","byte_start":146750,"byte_end":146757,"line_start":719,"line_end":719,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tower-0.4.13\\src\\builder\\mod.rs","byte_start":146762,"byte_end":146765,"line_start":720,"line_end":720,"column_start":5,"column_end":8}},{"value":"/ [`BoxService::layer()`]: crate::util::BoxService::layer()","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tower-0.4.13\\src\\builder\\mod.rs","byte_start":146770,"byte_end":146831,"line_start":721,"line_end":721,"column_start":5,"column_end":66}},{"value":"cfg(feature = \"util\")","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tower-0.4.13\\src\\builder\\mod.rs","byte_start":146836,"byte_end":146860,"line_start":722,"line_end":722,"column_start":5,"column_end":29}}]},{"kind":"Method","id":{"krate":0,"index":1549},"span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tower-0.4.13\\src\\builder\\mod.rs","byte_start":148992,"byte_end":149003,"line_start":788,"line_end":788,"column_start":12,"column_end":23},"name":"boxed_clone","qualname":"<ServiceBuilder<L>>::boxed_clone","value":"pub fn boxed_clone<S, R>(Self)\n->\n    ServiceBuilder<Stack<tower_layer::LayerFn<fn(: L::Service)\n        ->\n            crate::util::BoxCloneService<R,\n            <L::Service as Service<R>>::Response,\n            <L::Service as Service<R>>::Error>>, L>> where L: Layer<S>,\nL::Service: Service<R> + Clone + Send + 'static,\n<L::Service as Service<R>>::Future: Send + 'static","parent":null,"children":[],"decl_id":null,"docs":" This wraps the inner service with the [`Layer`] returned by [`BoxCloneService::layer()`].","sig":null,"attributes":[{"value":"/ This wraps the inner service with the [`Layer`] returned by [`BoxCloneService::layer()`].","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tower-0.4.13\\src\\builder\\mod.rs","byte_start":147535,"byte_end":147628,"line_start":748,"line_end":748,"column_start":5,"column_end":98}},{"value":"/","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tower-0.4.13\\src\\builder\\mod.rs","byte_start":147633,"byte_end":147636,"line_start":749,"line_end":749,"column_start":5,"column_end":8}},{"value":"/ This is similar to the [`boxed`] method, but it requires that `Self` implement","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tower-0.4.13\\src\\builder\\mod.rs","byte_start":147641,"byte_end":147723,"line_start":750,"line_end":750,"column_start":5,"column_end":87}},{"value":"/ [`Clone`], and the returned boxed service implements [`Clone`].","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tower-0.4.13\\src\\builder\\mod.rs","byte_start":147728,"byte_end":147795,"line_start":751,"line_end":751,"column_start":5,"column_end":72}},{"value":"/","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tower-0.4.13\\src\\builder\\mod.rs","byte_start":147800,"byte_end":147803,"line_start":752,"line_end":752,"column_start":5,"column_end":8}},{"value":"/ See [`BoxCloneService`] for more details.","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tower-0.4.13\\src\\builder\\mod.rs","byte_start":147808,"byte_end":147853,"line_start":753,"line_end":753,"column_start":5,"column_end":50}},{"value":"/","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tower-0.4.13\\src\\builder\\mod.rs","byte_start":147858,"byte_end":147861,"line_start":754,"line_end":754,"column_start":5,"column_end":8}},{"value":"/ # Example","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tower-0.4.13\\src\\builder\\mod.rs","byte_start":147866,"byte_end":147879,"line_start":755,"line_end":755,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tower-0.4.13\\src\\builder\\mod.rs","byte_start":147884,"byte_end":147887,"line_start":756,"line_end":756,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tower-0.4.13\\src\\builder\\mod.rs","byte_start":147892,"byte_end":147899,"line_start":757,"line_end":757,"column_start":5,"column_end":12}},{"value":"/ use tower::{Service, ServiceBuilder, BoxError, util::BoxCloneService};","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tower-0.4.13\\src\\builder\\mod.rs","byte_start":147904,"byte_end":147978,"line_start":758,"line_end":758,"column_start":5,"column_end":79}},{"value":"/ use std::time::Duration;","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tower-0.4.13\\src\\builder\\mod.rs","byte_start":147983,"byte_end":148011,"line_start":759,"line_end":759,"column_start":5,"column_end":33}},{"value":"/ #","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tower-0.4.13\\src\\builder\\mod.rs","byte_start":148016,"byte_end":148021,"line_start":760,"line_end":760,"column_start":5,"column_end":10}},{"value":"/ # struct Request;","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tower-0.4.13\\src\\builder\\mod.rs","byte_start":148026,"byte_end":148047,"line_start":761,"line_end":761,"column_start":5,"column_end":26}},{"value":"/ # struct Response;","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tower-0.4.13\\src\\builder\\mod.rs","byte_start":148052,"byte_end":148074,"line_start":762,"line_end":762,"column_start":5,"column_end":27}},{"value":"/ # impl Response {","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tower-0.4.13\\src\\builder\\mod.rs","byte_start":148079,"byte_end":148100,"line_start":763,"line_end":763,"column_start":5,"column_end":26}},{"value":"/ #     fn new() -> Self { Self }","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tower-0.4.13\\src\\builder\\mod.rs","byte_start":148105,"byte_end":148140,"line_start":764,"line_end":764,"column_start":5,"column_end":40}},{"value":"/ # }","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tower-0.4.13\\src\\builder\\mod.rs","byte_start":148145,"byte_end":148152,"line_start":765,"line_end":765,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tower-0.4.13\\src\\builder\\mod.rs","byte_start":148157,"byte_end":148160,"line_start":766,"line_end":766,"column_start":5,"column_end":8}},{"value":"/ let service: BoxCloneService<Request, Response, BoxError> = ServiceBuilder::new()","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tower-0.4.13\\src\\builder\\mod.rs","byte_start":148165,"byte_end":148250,"line_start":767,"line_end":767,"column_start":5,"column_end":90}},{"value":"/     .boxed_clone()","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tower-0.4.13\\src\\builder\\mod.rs","byte_start":148255,"byte_end":148277,"line_start":768,"line_end":768,"column_start":5,"column_end":27}},{"value":"/     .load_shed()","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tower-0.4.13\\src\\builder\\mod.rs","byte_start":148282,"byte_end":148302,"line_start":769,"line_end":769,"column_start":5,"column_end":25}},{"value":"/     .concurrency_limit(64)","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tower-0.4.13\\src\\builder\\mod.rs","byte_start":148307,"byte_end":148337,"line_start":770,"line_end":770,"column_start":5,"column_end":35}},{"value":"/     .timeout(Duration::from_secs(10))","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tower-0.4.13\\src\\builder\\mod.rs","byte_start":148342,"byte_end":148383,"line_start":771,"line_end":771,"column_start":5,"column_end":46}},{"value":"/     .service_fn(|req: Request| async {","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tower-0.4.13\\src\\builder\\mod.rs","byte_start":148388,"byte_end":148430,"line_start":772,"line_end":772,"column_start":5,"column_end":47}},{"value":"/         Ok::<_, BoxError>(Response::new())","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tower-0.4.13\\src\\builder\\mod.rs","byte_start":148435,"byte_end":148481,"line_start":773,"line_end":773,"column_start":5,"column_end":51}},{"value":"/     });","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tower-0.4.13\\src\\builder\\mod.rs","byte_start":148486,"byte_end":148497,"line_start":774,"line_end":774,"column_start":5,"column_end":16}},{"value":"/ # let service = assert_service(service);","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tower-0.4.13\\src\\builder\\mod.rs","byte_start":148502,"byte_end":148546,"line_start":775,"line_end":775,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tower-0.4.13\\src\\builder\\mod.rs","byte_start":148551,"byte_end":148554,"line_start":776,"line_end":776,"column_start":5,"column_end":8}},{"value":"/ // The boxed service can still be cloned.","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tower-0.4.13\\src\\builder\\mod.rs","byte_start":148559,"byte_end":148604,"line_start":777,"line_end":777,"column_start":5,"column_end":50}},{"value":"/ service.clone();","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tower-0.4.13\\src\\builder\\mod.rs","byte_start":148609,"byte_end":148629,"line_start":778,"line_end":778,"column_start":5,"column_end":25}},{"value":"/ # fn assert_service<S, R>(svc: S) -> S","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tower-0.4.13\\src\\builder\\mod.rs","byte_start":148634,"byte_end":148676,"line_start":779,"line_end":779,"column_start":5,"column_end":47}},{"value":"/ # where S: Service<R> { svc }","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tower-0.4.13\\src\\builder\\mod.rs","byte_start":148681,"byte_end":148714,"line_start":780,"line_end":780,"column_start":5,"column_end":38}},{"value":"/ ```","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tower-0.4.13\\src\\builder\\mod.rs","byte_start":148719,"byte_end":148726,"line_start":781,"line_end":781,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tower-0.4.13\\src\\builder\\mod.rs","byte_start":148731,"byte_end":148734,"line_start":782,"line_end":782,"column_start":5,"column_end":8}},{"value":"/ [`BoxCloneService::layer()`]: crate::util::BoxCloneService::layer()","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tower-0.4.13\\src\\builder\\mod.rs","byte_start":148739,"byte_end":148810,"line_start":783,"line_end":783,"column_start":5,"column_end":76}},{"value":"/ [`BoxCloneService`]: crate::util::BoxCloneService","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tower-0.4.13\\src\\builder\\mod.rs","byte_start":148815,"byte_end":148868,"line_start":784,"line_end":784,"column_start":5,"column_end":58}},{"value":"/ [`boxed`]: Self::boxed","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tower-0.4.13\\src\\builder\\mod.rs","byte_start":148873,"byte_end":148899,"line_start":785,"line_end":785,"column_start":5,"column_end":31}},{"value":"cfg(feature = \"util\")","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tower-0.4.13\\src\\builder\\mod.rs","byte_start":148904,"byte_end":148928,"line_start":786,"line_end":786,"column_start":5,"column_end":29}}]},{"kind":"Mod","id":{"krate":0,"index":1560},"span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tower-0.4.13\\src\\layer.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"layer","qualname":"::layer","value":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tower-0.4.13\\src\\layer.rs","parent":null,"children":[{"krate":0,"index":1561},{"krate":0,"index":1562},{"krate":0,"index":1565},{"krate":0,"index":1568},{"krate":0,"index":1571}],"decl_id":null,"docs":" A collection of [`Layer`] based tower services","sig":null,"attributes":[{"value":"/ A collection of [`Layer`] based tower services","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tower-0.4.13\\src\\layer.rs","byte_start":150009,"byte_end":150059,"line_start":1,"line_end":1,"column_start":1,"column_end":51}},{"value":"/","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tower-0.4.13\\src\\layer.rs","byte_start":150060,"byte_end":150063,"line_start":2,"line_end":2,"column_start":1,"column_end":4}},{"value":"/ [`Layer`]: crate::Layer","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tower-0.4.13\\src\\layer.rs","byte_start":150064,"byte_end":150091,"line_start":3,"line_end":3,"column_start":1,"column_end":28}}]},{"kind":"Mod","id":{"krate":0,"index":1571},"span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tower-0.4.13\\src\\layer.rs","byte_start":150306,"byte_end":150310,"line_start":12,"line_end":12,"column_start":9,"column_end":13},"name":"util","qualname":"::layer::util","value":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tower-0.4.13\\src\\layer.rs","parent":null,"children":[{"krate":0,"index":1572},{"krate":0,"index":1573},{"krate":0,"index":1576}],"decl_id":null,"docs":" Utilities for combining layers","sig":null,"attributes":[{"value":"/ Utilities for combining layers","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tower-0.4.13\\src\\layer.rs","byte_start":150143,"byte_end":150177,"line_start":7,"line_end":7,"column_start":1,"column_end":35}},{"value":"/","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tower-0.4.13\\src\\layer.rs","byte_start":150178,"byte_end":150181,"line_start":8,"line_end":8,"column_start":1,"column_end":4}},{"value":"/ [`Identity`]: crate::layer::util::Identity","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tower-0.4.13\\src\\layer.rs","byte_start":150182,"byte_end":150228,"line_start":9,"line_end":9,"column_start":1,"column_end":47}},{"value":"/ [`Layer`]: crate::Layer","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tower-0.4.13\\src\\layer.rs","byte_start":150229,"byte_end":150256,"line_start":10,"line_end":10,"column_start":1,"column_end":28}},{"value":"/ [`Stack`]: crate::layer::util::Stack","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tower-0.4.13\\src\\layer.rs","byte_start":150257,"byte_end":150297,"line_start":11,"line_end":11,"column_start":1,"column_end":41}}]},{"kind":"Trait","id":{"krate":0,"index":1599},"span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tower-0.4.13\\src\\lib.rs","byte_start":9444,"byte_end":9450,"line_start":238,"line_end":238,"column_start":15,"column_end":21},"name":"Sealed","qualname":"::sealed::Sealed","value":"Sealed<T>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Type","id":{"krate":0,"index":1601},"span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tower-0.4.13\\src\\lib.rs","byte_start":9509,"byte_end":9517,"line_start":242,"line_end":242,"column_start":10,"column_end":18},"name":"BoxError","qualname":"::BoxError","value":"Box<dyn std::error::Error + Send + Sync>","parent":null,"children":[],"decl_id":null,"docs":" Alias for a type-erased error type.\n","sig":null,"attributes":[{"value":"/ Alias for a type-erased error type.","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tower-0.4.13\\src\\lib.rs","byte_start":9460,"byte_end":9499,"line_start":241,"line_end":241,"column_start":1,"column_end":40}}]}],"impls":[{"id":0,"kind":"Direct","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tower-0.4.13\\src\\make\\make_connection.rs","byte_start":12336,"byte_end":12337,"line_start":29,"line_end":29,"column_start":39,"column_end":40},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":1,"kind":"Direct","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tower-0.4.13\\src\\make\\make_connection.rs","byte_start":12410,"byte_end":12411,"line_start":31,"line_end":31,"column_start":44,"column_end":45},"value":"","parent":null,"children":[{"krate":0,"index":43},{"krate":0,"index":44},{"krate":0,"index":45},{"krate":0,"index":46},{"krate":0,"index":47}],"docs":"","sig":null,"attributes":[]},{"id":2,"kind":"Inherent","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tower-0.4.13\\src\\make\\make_service\\shared.rs","byte_start":21824,"byte_end":21830,"line_start":76,"line_end":76,"column_start":9,"column_end":15},"value":"","parent":null,"children":[{"krate":0,"index":87}],"docs":"","sig":null,"attributes":[]},{"id":3,"kind":"Direct","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tower-0.4.13\\src\\make\\make_service\\shared.rs","byte_start":21981,"byte_end":21987,"line_start":83,"line_end":83,"column_start":27,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":91},{"krate":0,"index":92},{"krate":0,"index":93},{"krate":0,"index":94},{"krate":0,"index":95}],"docs":"","sig":null,"attributes":[]},{"id":4,"kind":"Direct","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tower-0.4.13\\src\\make\\make_service.rs","byte_start":17019,"byte_end":17020,"line_start":132,"line_end":132,"column_start":59,"column_end":60},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":5,"kind":"Direct","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tower-0.4.13\\src\\make\\make_service.rs","byte_start":17156,"byte_end":17157,"line_start":139,"line_end":139,"column_start":62,"column_end":63},"value":"","parent":null,"children":[{"krate":0,"index":118},{"krate":0,"index":119},{"krate":0,"index":120},{"krate":0,"index":121},{"krate":0,"index":122},{"krate":0,"index":123},{"krate":0,"index":124}],"docs":"","sig":null,"attributes":[]},{"id":6,"kind":"Direct","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tower-0.4.13\\src\\make\\make_service.rs","byte_start":17904,"byte_end":17915,"line_start":169,"line_end":169,"column_start":28,"column_end":39},"value":"","parent":null,"children":[{"krate":0,"index":133}],"docs":"","sig":null,"attributes":[]},{"id":7,"kind":"Direct","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tower-0.4.13\\src\\make\\make_service.rs","byte_start":18117,"byte_end":18128,"line_start":181,"line_end":181,"column_start":33,"column_end":44},"value":"","parent":null,"children":[{"krate":0,"index":137}],"docs":"","sig":null,"attributes":[]},{"id":8,"kind":"Direct","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tower-0.4.13\\src\\make\\make_service.rs","byte_start":18387,"byte_end":18398,"line_start":192,"line_end":192,"column_start":49,"column_end":60},"value":"","parent":null,"children":[{"krate":0,"index":143},{"krate":0,"index":144},{"krate":0,"index":145},{"krate":0,"index":146},{"krate":0,"index":147}],"docs":"","sig":null,"attributes":[]},{"id":9,"kind":"Direct","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tower-0.4.13\\src\\make\\make_service.rs","byte_start":19121,"byte_end":19130,"line_start":222,"line_end":222,"column_start":33,"column_end":42},"value":"","parent":null,"children":[{"krate":0,"index":157}],"docs":"","sig":null,"attributes":[]},{"id":10,"kind":"Direct","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tower-0.4.13\\src\\make\\make_service.rs","byte_start":19391,"byte_end":19400,"line_start":233,"line_end":233,"column_start":49,"column_end":58},"value":"","parent":null,"children":[{"krate":0,"index":163},{"krate":0,"index":164},{"krate":0,"index":165},{"krate":0,"index":166},{"krate":0,"index":167}],"docs":"","sig":null,"attributes":[]},{"id":11,"kind":"Direct","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tower-0.4.13\\src\\util\\and_then.rs","byte_start":59857,"byte_end":59864,"line_start":19,"line_end":19,"column_start":27,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":225}],"docs":"","sig":null,"attributes":[]},{"id":12,"kind":"Inherent","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tower-0.4.13\\src\\util\\and_then.rs","byte_start":60449,"byte_end":60462,"line_start":41,"line_end":41,"column_start":28,"column_end":41},"value":"","parent":null,"children":[{"krate":0,"index":230}],"docs":"","sig":null,"attributes":[]},{"id":13,"kind":"Direct","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tower-0.4.13\\src\\util\\and_then.rs","byte_start":60650,"byte_end":60663,"line_start":47,"line_end":47,"column_start":48,"column_end":61},"value":"","parent":null,"children":[{"krate":0,"index":235}],"docs":"","sig":null,"attributes":[]},{"id":14,"kind":"Direct","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tower-0.4.13\\src\\util\\and_then.rs","byte_start":60899,"byte_end":60912,"line_start":55,"line_end":55,"column_start":39,"column_end":52},"value":"","parent":null,"children":[{"krate":0,"index":240},{"krate":0,"index":241}],"docs":"","sig":null,"attributes":[]},{"id":15,"kind":"Inherent","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tower-0.4.13\\src\\util\\and_then.rs","byte_start":61404,"byte_end":61411,"line_start":75,"line_end":75,"column_start":12,"column_end":19},"value":"","parent":null,"children":[{"krate":0,"index":245},{"krate":0,"index":246}],"docs":"","sig":null,"attributes":[]},{"id":16,"kind":"Direct","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tower-0.4.13\\src\\util\\and_then.rs","byte_start":61866,"byte_end":61873,"line_start":91,"line_end":91,"column_start":47,"column_end":54},"value":"","parent":null,"children":[{"krate":0,"index":252},{"krate":0,"index":253},{"krate":0,"index":254},{"krate":0,"index":255},{"krate":0,"index":256}],"docs":"","sig":null,"attributes":[]},{"id":17,"kind":"Inherent","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tower-0.4.13\\src\\util\\and_then.rs","byte_start":62431,"byte_end":62443,"line_start":111,"line_end":111,"column_start":9,"column_end":21},"value":"","parent":null,"children":[{"krate":0,"index":259}],"docs":"","sig":null,"attributes":[]},{"id":18,"kind":"Direct","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tower-0.4.13\\src\\util\\and_then.rs","byte_start":62586,"byte_end":62598,"line_start":118,"line_end":118,"column_start":25,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":263},{"krate":0,"index":264}],"docs":"","sig":null,"attributes":[]},{"id":19,"kind":"Inherent","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tower-0.4.13\\src\\util\\boxed\\layer.rs","byte_start":66071,"byte_end":66079,"line_start":58,"line_end":58,"column_start":19,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":298}],"docs":"","sig":null,"attributes":[]},{"id":20,"kind":"Direct","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tower-0.4.13\\src\\util\\boxed\\layer.rs","byte_start":66612,"byte_end":66620,"line_start":77,"line_end":77,"column_start":33,"column_end":41},"value":"","parent":null,"children":[{"krate":0,"index":306},{"krate":0,"index":307}],"docs":"","sig":null,"attributes":[]},{"id":21,"kind":"Direct","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tower-0.4.13\\src\\util\\boxed\\layer.rs","byte_start":66796,"byte_end":66804,"line_start":85,"line_end":85,"column_start":29,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":313}],"docs":"","sig":null,"attributes":[]},{"id":22,"kind":"Direct","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tower-0.4.13\\src\\util\\boxed\\layer.rs","byte_start":66961,"byte_end":66969,"line_start":93,"line_end":93,"column_start":34,"column_end":42},"value":"","parent":null,"children":[{"krate":0,"index":319}],"docs":"","sig":null,"attributes":[]},{"id":23,"kind":"Inherent","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tower-0.4.13\\src\\util\\boxed\\sync.rs","byte_start":68072,"byte_end":68082,"line_start":32,"line_end":32,"column_start":15,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":363},{"krate":0,"index":366}],"docs":"","sig":null,"attributes":[]},{"id":24,"kind":"Direct","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tower-0.4.13\\src\\util\\boxed\\sync.rs","byte_start":68755,"byte_end":68765,"line_start":56,"line_end":56,"column_start":30,"column_end":40},"value":"","parent":null,"children":[{"krate":0,"index":372},{"krate":0,"index":373},{"krate":0,"index":374},{"krate":0,"index":375},{"krate":0,"index":376}],"docs":"","sig":null,"attributes":[]},{"id":25,"kind":"Direct","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tower-0.4.13\\src\\util\\boxed\\sync.rs","byte_start":69100,"byte_end":69110,"line_start":70,"line_end":70,"column_start":30,"column_end":40},"value":"","parent":null,"children":[{"krate":0,"index":381}],"docs":"","sig":null,"attributes":[]},{"id":26,"kind":"Inherent","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tower-0.4.13\\src\\util\\boxed\\unsync.rs","byte_start":69866,"byte_end":69882,"line_start":27,"line_end":27,"column_start":15,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":422},{"krate":0,"index":424}],"docs":"","sig":null,"attributes":[]},{"id":27,"kind":"Direct","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tower-0.4.13\\src\\util\\boxed\\unsync.rs","byte_start":70504,"byte_end":70520,"line_start":50,"line_end":50,"column_start":30,"column_end":46},"value":"","parent":null,"children":[{"krate":0,"index":430},{"krate":0,"index":431},{"krate":0,"index":432},{"krate":0,"index":433},{"krate":0,"index":434}],"docs":"","sig":null,"attributes":[]},{"id":28,"kind":"Direct","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tower-0.4.13\\src\\util\\boxed\\unsync.rs","byte_start":70867,"byte_end":70883,"line_start":64,"line_end":64,"column_start":30,"column_end":46},"value":"","parent":null,"children":[{"krate":0,"index":439}],"docs":"","sig":null,"attributes":[]},{"id":29,"kind":"Direct","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tower-0.4.13\\src\\util\\boxed\\unsync.rs","byte_start":71057,"byte_end":71068,"line_start":70,"line_end":70,"column_start":39,"column_end":50},"value":"","parent":null,"children":[{"krate":0,"index":443},{"krate":0,"index":444},{"krate":0,"index":445},{"krate":0,"index":446},{"krate":0,"index":447}],"docs":"","sig":null,"attributes":[]},{"id":30,"kind":"Inherent","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tower-0.4.13\\src\\util\\boxed_clone.rs","byte_start":73380,"byte_end":73395,"line_start":65,"line_end":65,"column_start":15,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":496},{"krate":0,"index":499}],"docs":"","sig":null,"attributes":[]},{"id":31,"kind":"Direct","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tower-0.4.13\\src\\util\\boxed_clone.rs","byte_start":74093,"byte_end":74108,"line_start":89,"line_end":89,"column_start":30,"column_end":45},"value":"","parent":null,"children":[{"krate":0,"index":505},{"krate":0,"index":506},{"krate":0,"index":507},{"krate":0,"index":508},{"krate":0,"index":509}],"docs":"","sig":null,"attributes":[]},{"id":32,"kind":"Direct","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tower-0.4.13\\src\\util\\boxed_clone.rs","byte_start":74472,"byte_end":74487,"line_start":105,"line_end":105,"column_start":25,"column_end":40},"value":"","parent":null,"children":[{"krate":0,"index":514}],"docs":"","sig":null,"attributes":[]},{"id":33,"kind":"Direct","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tower-0.4.13\\src\\util\\boxed_clone.rs","byte_start":74814,"byte_end":74815,"line_start":120,"line_end":120,"column_start":32,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":521}],"docs":"","sig":null,"attributes":[]},{"id":34,"kind":"Direct","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tower-0.4.13\\src\\util\\boxed_clone.rs","byte_start":75079,"byte_end":75094,"line_start":132,"line_end":132,"column_start":30,"column_end":45},"value":"","parent":null,"children":[{"krate":0,"index":526}],"docs":"","sig":null,"attributes":[]},{"id":35,"kind":"Inherent","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tower-0.4.13\\src\\util\\call_all\\common.rs","byte_start":76272,"byte_end":76279,"line_start":30,"line_end":30,"column_start":17,"column_end":24},"value":"","parent":null,"children":[{"krate":0,"index":565},{"krate":0,"index":566},{"krate":0,"index":567},{"krate":0,"index":568}],"docs":"","sig":null,"attributes":[]},{"id":36,"kind":"Direct","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tower-0.4.13\\src\\util\\call_all\\common.rs","byte_start":77242,"byte_end":77249,"line_start":66,"line_end":66,"column_start":28,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":573},{"krate":0,"index":574}],"docs":"","sig":null,"attributes":[]},{"id":37,"kind":"Inherent","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tower-0.4.13\\src\\util\\call_all\\ordered.rs","byte_start":82645,"byte_end":82652,"line_start":98,"line_end":98,"column_start":14,"column_end":21},"value":"","parent":null,"children":[{"krate":0,"index":608},{"krate":0,"index":609},{"krate":0,"index":610},{"krate":0,"index":611}],"docs":"","sig":null,"attributes":[]},{"id":38,"kind":"Direct","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tower-0.4.13\\src\\util\\call_all\\ordered.rs","byte_start":84323,"byte_end":84330,"line_start":154,"line_end":154,"column_start":25,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":615},{"krate":0,"index":616}],"docs":"","sig":null,"attributes":[]},{"id":39,"kind":"Direct","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tower-0.4.13\\src\\util\\call_all\\ordered.rs","byte_start":84665,"byte_end":84679,"line_start":167,"line_end":167,"column_start":38,"column_end":52},"value":"","parent":null,"children":[{"krate":0,"index":619},{"krate":0,"index":620},{"krate":0,"index":621}],"docs":"","sig":null,"attributes":[]},{"id":40,"kind":"Inherent","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tower-0.4.13\\src\\util\\call_all\\unordered.rs","byte_start":85963,"byte_end":85979,"line_start":35,"line_end":35,"column_start":14,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":655},{"krate":0,"index":656},{"krate":0,"index":657}],"docs":"","sig":null,"attributes":[]},{"id":41,"kind":"Direct","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tower-0.4.13\\src\\util\\call_all\\unordered.rs","byte_start":87139,"byte_end":87155,"line_start":75,"line_end":75,"column_start":25,"column_end":41},"value":"","parent":null,"children":[{"krate":0,"index":661},{"krate":0,"index":662}],"docs":"","sig":null,"attributes":[]},{"id":42,"kind":"Direct","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tower-0.4.13\\src\\util\\call_all\\unordered.rs","byte_start":87490,"byte_end":87506,"line_start":88,"line_end":88,"column_start":38,"column_end":54},"value":"","parent":null,"children":[{"krate":0,"index":665},{"krate":0,"index":666},{"krate":0,"index":667}],"docs":"","sig":null,"attributes":[]},{"id":48,"kind":"Direct","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tower-0.4.13\\src\\util\\either.rs","byte_start":88615,"byte_end":88621,"line_start":29,"line_end":29,"column_start":42,"column_end":48},"value":"","parent":null,"children":[{"krate":0,"index":706},{"krate":0,"index":707},{"krate":0,"index":708},{"krate":0,"index":709},{"krate":0,"index":711}],"docs":"","sig":null,"attributes":[]},{"id":49,"kind":"Direct","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tower-0.4.13\\src\\util\\either.rs","byte_start":89512,"byte_end":89518,"line_start":59,"line_end":59,"column_start":34,"column_end":40},"value":"","parent":null,"children":[{"krate":0,"index":719},{"krate":0,"index":720}],"docs":"","sig":null,"attributes":[]},{"id":50,"kind":"Direct","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tower-0.4.13\\src\\util\\either.rs","byte_start":90065,"byte_end":90071,"line_start":76,"line_end":76,"column_start":28,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":725},{"krate":0,"index":726}],"docs":"","sig":null,"attributes":[]},{"id":51,"kind":"Inherent","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tower-0.4.13\\src\\util\\future_service.rs","byte_start":92460,"byte_end":92473,"line_start":64,"line_end":64,"column_start":12,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":756}],"docs":"","sig":null,"attributes":[]},{"id":52,"kind":"Direct","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tower-0.4.13\\src\\util\\future_service.rs","byte_start":94326,"byte_end":94339,"line_start":111,"line_end":111,"column_start":27,"column_end":40},"value":"","parent":null,"children":[{"krate":0,"index":760}],"docs":"","sig":null,"attributes":[]},{"id":53,"kind":"Direct","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tower-0.4.13\\src\\util\\future_service.rs","byte_start":94666,"byte_end":94671,"line_start":128,"line_end":128,"column_start":27,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":764}],"docs":"","sig":null,"attributes":[]},{"id":54,"kind":"Direct","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tower-0.4.13\\src\\util\\future_service.rs","byte_start":95109,"byte_end":95122,"line_start":143,"line_end":143,"column_start":33,"column_end":46},"value":"","parent":null,"children":[{"krate":0,"index":770},{"krate":0,"index":771},{"krate":0,"index":772},{"krate":0,"index":773},{"krate":0,"index":774}],"docs":"","sig":null,"attributes":[]},{"id":55,"kind":"Direct","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tower-0.4.13\\src\\util\\map_err.rs","byte_start":97578,"byte_end":97584,"line_start":16,"line_end":16,"column_start":27,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":802}],"docs":"","sig":null,"attributes":[]},{"id":56,"kind":"Inherent","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tower-0.4.13\\src\\util\\map_err.rs","byte_start":98198,"byte_end":98204,"line_start":43,"line_end":43,"column_start":12,"column_end":18},"value":"","parent":null,"children":[{"krate":0,"index":806},{"krate":0,"index":807}],"docs":"","sig":null,"attributes":[]},{"id":57,"kind":"Direct","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tower-0.4.13\\src\\util\\map_err.rs","byte_start":98657,"byte_end":98663,"line_start":59,"line_end":59,"column_start":49,"column_end":55},"value":"","parent":null,"children":[{"krate":0,"index":813},{"krate":0,"index":814},{"krate":0,"index":815},{"krate":0,"index":816},{"krate":0,"index":817}],"docs":"","sig":null,"attributes":[]},{"id":58,"kind":"Inherent","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tower-0.4.13\\src\\util\\map_err.rs","byte_start":99180,"byte_end":99191,"line_start":79,"line_end":79,"column_start":9,"column_end":20},"value":"","parent":null,"children":[{"krate":0,"index":820}],"docs":"","sig":null,"attributes":[]},{"id":59,"kind":"Direct","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tower-0.4.13\\src\\util\\map_err.rs","byte_start":99326,"byte_end":99337,"line_start":86,"line_end":86,"column_start":25,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":824},{"krate":0,"index":825}],"docs":"","sig":null,"attributes":[]},{"id":60,"kind":"Direct","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tower-0.4.13\\src\\util\\map_request.rs","byte_start":99847,"byte_end":99857,"line_start":15,"line_end":15,"column_start":27,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":846}],"docs":"","sig":null,"attributes":[]},{"id":61,"kind":"Inherent","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tower-0.4.13\\src\\util\\map_request.rs","byte_start":100147,"byte_end":100157,"line_start":27,"line_end":27,"column_start":12,"column_end":22},"value":"","parent":null,"children":[{"krate":0,"index":850},{"krate":0,"index":851}],"docs":"","sig":null,"attributes":[]},{"id":62,"kind":"Direct","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tower-0.4.13\\src\\util\\map_request.rs","byte_start":100621,"byte_end":100631,"line_start":43,"line_end":43,"column_start":36,"column_end":46},"value":"","parent":null,"children":[{"krate":0,"index":857},{"krate":0,"index":858},{"krate":0,"index":859},{"krate":0,"index":860},{"krate":0,"index":861}],"docs":"","sig":null,"attributes":[]},{"id":63,"kind":"Inherent","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tower-0.4.13\\src\\util\\map_request.rs","byte_start":101205,"byte_end":101220,"line_start":71,"line_end":71,"column_start":9,"column_end":24},"value":"","parent":null,"children":[{"krate":0,"index":864}],"docs":"","sig":null,"attributes":[]},{"id":64,"kind":"Direct","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tower-0.4.13\\src\\util\\map_request.rs","byte_start":101363,"byte_end":101378,"line_start":78,"line_end":78,"column_start":25,"column_end":40},"value":"","parent":null,"children":[{"krate":0,"index":868},{"krate":0,"index":869}],"docs":"","sig":null,"attributes":[]},{"id":65,"kind":"Direct","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tower-0.4.13\\src\\util\\map_response.rs","byte_start":101951,"byte_end":101962,"line_start":16,"line_end":16,"column_start":27,"column_end":38},"value":"","parent":null,"children":[{"krate":0,"index":897}],"docs":"","sig":null,"attributes":[]},{"id":66,"kind":"Inherent","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tower-0.4.13\\src\\util\\map_response.rs","byte_start":102603,"byte_end":102614,"line_start":43,"line_end":43,"column_start":12,"column_end":23},"value":"","parent":null,"children":[{"krate":0,"index":901},{"krate":0,"index":902}],"docs":"","sig":null,"attributes":[]},{"id":67,"kind":"Direct","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tower-0.4.13\\src\\util\\map_response.rs","byte_start":103098,"byte_end":103109,"line_start":59,"line_end":59,"column_start":52,"column_end":63},"value":"","parent":null,"children":[{"krate":0,"index":908},{"krate":0,"index":909},{"krate":0,"index":910},{"krate":0,"index":911},{"krate":0,"index":912}],"docs":"","sig":null,"attributes":[]},{"id":68,"kind":"Inherent","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tower-0.4.13\\src\\util\\map_response.rs","byte_start":103617,"byte_end":103633,"line_start":79,"line_end":79,"column_start":9,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":915}],"docs":"","sig":null,"attributes":[]},{"id":69,"kind":"Direct","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tower-0.4.13\\src\\util\\map_response.rs","byte_start":103784,"byte_end":103800,"line_start":86,"line_end":86,"column_start":25,"column_end":41},"value":"","parent":null,"children":[{"krate":0,"index":919},{"krate":0,"index":920}],"docs":"","sig":null,"attributes":[]},{"id":70,"kind":"Direct","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tower-0.4.13\\src\\util\\map_result.rs","byte_start":104362,"byte_end":104371,"line_start":16,"line_end":16,"column_start":27,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":948}],"docs":"","sig":null,"attributes":[]},{"id":71,"kind":"Inherent","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tower-0.4.13\\src\\util\\map_result.rs","byte_start":104996,"byte_end":105005,"line_start":43,"line_end":43,"column_start":12,"column_end":21},"value":"","parent":null,"children":[{"krate":0,"index":952},{"krate":0,"index":953}],"docs":"","sig":null,"attributes":[]},{"id":72,"kind":"Direct","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tower-0.4.13\\src\\util\\map_result.rs","byte_start":105486,"byte_end":105495,"line_start":59,"line_end":59,"column_start":59,"column_end":68},"value":"","parent":null,"children":[{"krate":0,"index":960},{"krate":0,"index":961},{"krate":0,"index":962},{"krate":0,"index":963},{"krate":0,"index":964}],"docs":"","sig":null,"attributes":[]},{"id":73,"kind":"Inherent","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tower-0.4.13\\src\\util\\map_result.rs","byte_start":106073,"byte_end":106087,"line_start":80,"line_end":80,"column_start":9,"column_end":23},"value":"","parent":null,"children":[{"krate":0,"index":967}],"docs":"","sig":null,"attributes":[]},{"id":74,"kind":"Direct","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tower-0.4.13\\src\\util\\map_result.rs","byte_start":106234,"byte_end":106248,"line_start":87,"line_end":87,"column_start":25,"column_end":39},"value":"","parent":null,"children":[{"krate":0,"index":971},{"krate":0,"index":972}],"docs":"","sig":null,"attributes":[]},{"id":75,"kind":"Inherent","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tower-0.4.13\\src\\util\\map_future.rs","byte_start":106775,"byte_end":106784,"line_start":18,"line_end":18,"column_start":12,"column_end":21},"value":"","parent":null,"children":[{"krate":0,"index":997},{"krate":0,"index":998},{"krate":0,"index":999},{"krate":0,"index":1000},{"krate":0,"index":1001}],"docs":"","sig":null,"attributes":[]},{"id":76,"kind":"Direct","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tower-0.4.13\\src\\util\\map_future.rs","byte_start":107589,"byte_end":107598,"line_start":49,"line_end":49,"column_start":41,"column_end":50},"value":"","parent":null,"children":[{"krate":0,"index":1009},{"krate":0,"index":1010},{"krate":0,"index":1011},{"krate":0,"index":1012},{"krate":0,"index":1013}],"docs":"","sig":null,"attributes":[]},{"id":77,"kind":"Direct","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tower-0.4.13\\src\\util\\map_future.rs","byte_start":108064,"byte_end":108073,"line_start":69,"line_end":69,"column_start":27,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":1017}],"docs":"","sig":null,"attributes":[]},{"id":78,"kind":"Inherent","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tower-0.4.13\\src\\util\\map_future.rs","byte_start":108513,"byte_end":108527,"line_start":89,"line_end":89,"column_start":9,"column_end":23},"value":"","parent":null,"children":[{"krate":0,"index":1020}],"docs":"","sig":null,"attributes":[]},{"id":79,"kind":"Direct","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tower-0.4.13\\src\\util\\map_future.rs","byte_start":108664,"byte_end":108678,"line_start":96,"line_end":96,"column_start":25,"column_end":39},"value":"","parent":null,"children":[{"krate":0,"index":1024},{"krate":0,"index":1025}],"docs":"","sig":null,"attributes":[]},{"id":80,"kind":"Direct","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tower-0.4.13\\src\\util\\map_future.rs","byte_start":108868,"byte_end":108882,"line_start":107,"line_end":107,"column_start":24,"column_end":38},"value":"","parent":null,"children":[{"krate":0,"index":1028}],"docs":"","sig":null,"attributes":[]},{"id":81,"kind":"Inherent","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tower-0.4.13\\src\\util\\oneshot.rs","byte_start":109892,"byte_end":109897,"line_start":37,"line_end":37,"column_start":28,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":1059},{"krate":0,"index":1060}],"docs":"","sig":null,"attributes":[]},{"id":82,"kind":"Direct","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tower-0.4.13\\src\\util\\oneshot.rs","byte_start":110110,"byte_end":110115,"line_start":47,"line_end":47,"column_start":29,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":1064}],"docs":"","sig":null,"attributes":[]},{"id":83,"kind":"Inherent","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tower-0.4.13\\src\\util\\oneshot.rs","byte_start":110764,"byte_end":110771,"line_start":69,"line_end":69,"column_start":14,"column_end":21},"value":"","parent":null,"children":[{"krate":0,"index":1068}],"docs":"","sig":null,"attributes":[]},{"id":84,"kind":"Direct","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tower-0.4.13\\src\\util\\oneshot.rs","byte_start":110993,"byte_end":111000,"line_start":81,"line_end":81,"column_start":25,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":1072},{"krate":0,"index":1073}],"docs":"","sig":null,"attributes":[]},{"id":85,"kind":"Inherent","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tower-0.4.13\\src\\util\\optional\\error.rs","byte_start":113652,"byte_end":113656,"line_start":9,"line_end":9,"column_start":6,"column_end":10},"value":"","parent":null,"children":[{"krate":0,"index":1084}],"docs":"","sig":null,"attributes":[]},{"id":86,"kind":"Direct","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tower-0.4.13\\src\\util\\optional\\error.rs","byte_start":113741,"byte_end":113745,"line_start":15,"line_end":15,"column_start":23,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":1086}],"docs":"","sig":null,"attributes":[]},{"id":87,"kind":"Direct","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tower-0.4.13\\src\\util\\optional\\error.rs","byte_start":113868,"byte_end":113872,"line_start":21,"line_end":21,"column_start":23,"column_end":27},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":88,"kind":"Inherent","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tower-0.4.13\\src\\util\\optional\\future.rs","byte_start":114262,"byte_end":114276,"line_start":21,"line_end":21,"column_start":9,"column_end":23},"value":"","parent":null,"children":[{"krate":0,"index":1114}],"docs":"","sig":null,"attributes":[]},{"id":89,"kind":"Direct","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tower-0.4.13\\src\\util\\optional\\future.rs","byte_start":114412,"byte_end":114426,"line_start":27,"line_end":27,"column_start":26,"column_end":40},"value":"","parent":null,"children":[{"krate":0,"index":1119},{"krate":0,"index":1120}],"docs":"","sig":null,"attributes":[]},{"id":90,"kind":"Inherent","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tower-0.4.13\\src\\util\\optional\\mod.rs","byte_start":112442,"byte_end":112450,"line_start":24,"line_end":24,"column_start":9,"column_end":17},"value":"","parent":null,"children":[{"krate":0,"index":1136}],"docs":"","sig":null,"attributes":[]},{"id":91,"kind":"Direct","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tower-0.4.13\\src\\util\\optional\\mod.rs","byte_start":112708,"byte_end":112716,"line_start":35,"line_end":35,"column_start":39,"column_end":47},"value":"","parent":null,"children":[{"krate":0,"index":1141},{"krate":0,"index":1142},{"krate":0,"index":1143},{"krate":0,"index":1144},{"krate":0,"index":1145}],"docs":"","sig":null,"attributes":[]},{"id":92,"kind":"Direct","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tower-0.4.13\\src\\util\\ready.rs","byte_start":115452,"byte_end":115464,"line_start":22,"line_end":22,"column_start":28,"column_end":40},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":93,"kind":"Inherent","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tower-0.4.13\\src\\util\\ready.rs","byte_start":115498,"byte_end":115510,"line_start":24,"line_end":24,"column_start":18,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":1186}],"docs":"","sig":null,"attributes":[]},{"id":94,"kind":"Direct","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tower-0.4.13\\src\\util\\ready.rs","byte_start":115745,"byte_end":115757,"line_start":37,"line_end":37,"column_start":29,"column_end":41},"value":"","parent":null,"children":[{"krate":0,"index":1190},{"krate":0,"index":1191}],"docs":"","sig":null,"attributes":[]},{"id":95,"kind":"Direct","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tower-0.4.13\\src\\util\\ready.rs","byte_start":116183,"byte_end":116195,"line_start":54,"line_end":54,"column_start":33,"column_end":45},"value":"","parent":null,"children":[{"krate":0,"index":1195}],"docs":"","sig":null,"attributes":[]},{"id":96,"kind":"Direct","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tower-0.4.13\\src\\util\\ready.rs","byte_start":117189,"byte_end":117194,"line_start":81,"line_end":81,"column_start":32,"column_end":37},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":97,"kind":"Inherent","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tower-0.4.13\\src\\util\\ready.rs","byte_start":117236,"byte_end":117241,"line_start":83,"line_end":83,"column_start":22,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":1214}],"docs":"","sig":null,"attributes":[]},{"id":98,"kind":"Direct","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tower-0.4.13\\src\\util\\ready.rs","byte_start":117445,"byte_end":117450,"line_start":93,"line_end":93,"column_start":33,"column_end":38},"value":"","parent":null,"children":[{"krate":0,"index":1219},{"krate":0,"index":1220}],"docs":"","sig":null,"attributes":[]},{"id":99,"kind":"Direct","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tower-0.4.13\\src\\util\\ready.rs","byte_start":117716,"byte_end":117721,"line_start":104,"line_end":104,"column_start":37,"column_end":42},"value":"","parent":null,"children":[{"krate":0,"index":1225}],"docs":"","sig":null,"attributes":[]},{"id":100,"kind":"Direct","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tower-0.4.13\\src\\util\\service_fn.rs","byte_start":119238,"byte_end":119247,"line_start":58,"line_end":58,"column_start":24,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":1247}],"docs":"","sig":null,"attributes":[]},{"id":101,"kind":"Direct","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tower-0.4.13\\src\\util\\service_fn.rs","byte_start":119503,"byte_end":119512,"line_start":66,"line_end":66,"column_start":48,"column_end":57},"value":"","parent":null,"children":[{"krate":0,"index":1254},{"krate":0,"index":1255},{"krate":0,"index":1256},{"krate":0,"index":1257},{"krate":0,"index":1258}],"docs":"","sig":null,"attributes":[]},{"id":102,"kind":"Direct","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tower-0.4.13\\src\\util\\then.rs","byte_start":120202,"byte_end":120206,"line_start":19,"line_end":19,"column_start":27,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":1290}],"docs":"","sig":null,"attributes":[]},{"id":103,"kind":"Inherent","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tower-0.4.13\\src\\util\\then.rs","byte_start":120641,"byte_end":120645,"line_start":39,"line_end":39,"column_start":12,"column_end":16},"value":"","parent":null,"children":[{"krate":0,"index":1294},{"krate":0,"index":1295}],"docs":"","sig":null,"attributes":[]},{"id":104,"kind":"Direct","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tower-0.4.13\\src\\util\\then.rs","byte_start":121273,"byte_end":121277,"line_start":62,"line_end":62,"column_start":64,"column_end":68},"value":"","parent":null,"children":[{"krate":0,"index":1303},{"krate":0,"index":1304},{"krate":0,"index":1305},{"krate":0,"index":1306},{"krate":0,"index":1307}],"docs":"","sig":null,"attributes":[]},{"id":105,"kind":"Inherent","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tower-0.4.13\\src\\util\\then.rs","byte_start":121882,"byte_end":121891,"line_start":84,"line_end":84,"column_start":9,"column_end":18},"value":"","parent":null,"children":[{"krate":0,"index":1310}],"docs":"","sig":null,"attributes":[]},{"id":106,"kind":"Direct","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tower-0.4.13\\src\\util\\then.rs","byte_start":122028,"byte_end":122037,"line_start":91,"line_end":91,"column_start":25,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":1314},{"krate":0,"index":1315}],"docs":"","sig":null,"attributes":[]},{"id":107,"kind":"Direct","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tower-0.4.13\\src\\util\\mod.rs","byte_start":58562,"byte_end":58563,"line_start":1055,"line_end":1055,"column_start":50,"column_end":51},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":108,"kind":"Direct","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tower-0.4.13\\src\\builder\\mod.rs","byte_start":125814,"byte_end":125828,"line_start":110,"line_end":110,"column_start":18,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":1506}],"docs":"","sig":null,"attributes":[]},{"id":109,"kind":"Inherent","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tower-0.4.13\\src\\builder\\mod.rs","byte_start":125902,"byte_end":125916,"line_start":116,"line_end":116,"column_start":6,"column_end":20},"value":"","parent":null,"children":[{"krate":0,"index":1508}],"docs":"","sig":null,"attributes":[]},{"id":110,"kind":"Inherent","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tower-0.4.13\\src\\builder\\mod.rs","byte_start":126085,"byte_end":126099,"line_start":125,"line_end":125,"column_start":9,"column_end":23},"value":"","parent":null,"children":[{"krate":0,"index":1511},{"krate":0,"index":1513},{"krate":0,"index":1515},{"krate":0,"index":1517},{"krate":0,"index":1521},{"krate":0,"index":1523},{"krate":0,"index":1525},{"krate":0,"index":1527},{"krate":0,"index":1529},{"krate":0,"index":1531},{"krate":0,"index":1533},{"krate":0,"index":1534},{"krate":0,"index":1536},{"krate":0,"index":1538},{"krate":0,"index":1539},{"krate":0,"index":1541},{"krate":0,"index":1546},{"krate":0,"index":1549}],"docs":"","sig":null,"attributes":[]},{"id":111,"kind":"Direct","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tower-0.4.13\\src\\builder\\mod.rs","byte_start":149660,"byte_end":149674,"line_start":813,"line_end":813,"column_start":36,"column_end":50},"value":"","parent":null,"children":[{"krate":0,"index":1554}],"docs":"","sig":null,"attributes":[]},{"id":112,"kind":"Direct","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tower-0.4.13\\src\\builder\\mod.rs","byte_start":149844,"byte_end":149858,"line_start":819,"line_end":819,"column_start":25,"column_end":39},"value":"","parent":null,"children":[{"krate":0,"index":1558},{"krate":0,"index":1559}],"docs":"","sig":null,"attributes":[]}],"refs":[{"kind":"Mod","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tower-0.4.13\\src\\lib.rs","byte_start":8267,"byte_end":8271,"line_start":194,"line_end":194,"column_start":9,"column_end":13},"ref_id":{"krate":0,"index":5}},{"kind":"Mod","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tower-0.4.13\\src\\lib.rs","byte_start":8948,"byte_end":8952,"line_start":215,"line_end":215,"column_start":9,"column_end":13},"ref_id":{"krate":0,"index":188}},{"kind":"Mod","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tower-0.4.13\\src\\util\\optional\\mod.rs","byte_start":112006,"byte_end":112011,"line_start":6,"line_end":6,"column_start":9,"column_end":14},"ref_id":{"krate":0,"index":1075}},{"kind":"Mod","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tower-0.4.13\\src\\util\\optional\\mod.rs","byte_start":112056,"byte_end":112062,"line_start":8,"line_end":8,"column_start":9,"column_end":15},"ref_id":{"krate":0,"index":1088}},{"kind":"Mod","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tower-0.4.13\\src\\lib.rs","byte_start":8963,"byte_end":8970,"line_start":217,"line_end":217,"column_start":9,"column_end":16},"ref_id":{"krate":0,"index":1488}},{"kind":"Mod","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tower-0.4.13\\src\\lib.rs","byte_start":8980,"byte_end":8985,"line_start":218,"line_end":218,"column_start":9,"column_end":14},"ref_id":{"krate":0,"index":1560}}],"macro_refs":[],"relations":[{"span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tower-0.4.13\\src\\make\\make_connection.rs","byte_start":11696,"byte_end":11702,"line_start":12,"line_end":12,"column_start":35,"column_end":41},"kind":"SuperTrait","from":{"krate":0,"index":1599},"to":{"krate":0,"index":30}},{"span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tower-0.4.13\\src\\make\\make_connection.rs","byte_start":12336,"byte_end":12337,"line_start":29,"line_end":29,"column_start":39,"column_end":40},"kind":{"Impl":{"id":0}},"from":{"krate":0,"index":38},"to":{"krate":0,"index":1599}},{"span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tower-0.4.13\\src\\make\\make_connection.rs","byte_start":12410,"byte_end":12411,"line_start":31,"line_end":31,"column_start":44,"column_end":45},"kind":{"Impl":{"id":1}},"from":{"krate":0,"index":41},"to":{"krate":0,"index":30}},{"span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tower-0.4.13\\src\\make\\make_service\\shared.rs","byte_start":21824,"byte_end":21830,"line_start":76,"line_end":76,"column_start":9,"column_end":15},"kind":{"Impl":{"id":2}},"from":{"krate":0,"index":1602},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tower-0.4.13\\src\\make\\make_service\\shared.rs","byte_start":21981,"byte_end":21987,"line_start":83,"line_end":83,"column_start":27,"column_end":33},"kind":{"Impl":{"id":3}},"from":{"krate":0,"index":1602},"to":{"krate":36,"index":13}},{"span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tower-0.4.13\\src\\make\\make_service.rs","byte_start":13592,"byte_end":13598,"line_start":21,"line_end":21,"column_start":41,"column_end":47},"kind":"SuperTrait","from":{"krate":0,"index":1599},"to":{"krate":0,"index":96}},{"span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tower-0.4.13\\src\\make\\make_service.rs","byte_start":17019,"byte_end":17020,"line_start":132,"line_end":132,"column_start":59,"column_end":60},"kind":{"Impl":{"id":4}},"from":{"krate":0,"index":109},"to":{"krate":0,"index":1599}},{"span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tower-0.4.13\\src\\make\\make_service.rs","byte_start":17156,"byte_end":17157,"line_start":139,"line_end":139,"column_start":62,"column_end":63},"kind":{"Impl":{"id":5}},"from":{"krate":0,"index":114},"to":{"krate":0,"index":96}},{"span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tower-0.4.13\\src\\make\\make_service.rs","byte_start":17904,"byte_end":17915,"line_start":169,"line_end":169,"column_start":28,"column_end":39},"kind":{"Impl":{"id":6}},"from":{"krate":0,"index":125},"to":{"krate":2,"index":2679}},{"span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tower-0.4.13\\src\\make\\make_service.rs","byte_start":18117,"byte_end":18128,"line_start":181,"line_end":181,"column_start":33,"column_end":44},"kind":{"Impl":{"id":7}},"from":{"krate":0,"index":125},"to":{"krate":2,"index":9685}},{"span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tower-0.4.13\\src\\make\\make_service.rs","byte_start":18387,"byte_end":18398,"line_start":192,"line_end":192,"column_start":49,"column_end":60},"kind":{"Impl":{"id":8}},"from":{"krate":0,"index":125},"to":{"krate":36,"index":13}},{"span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tower-0.4.13\\src\\make\\make_service.rs","byte_start":19121,"byte_end":19130,"line_start":222,"line_end":222,"column_start":33,"column_end":42},"kind":{"Impl":{"id":9}},"from":{"krate":0,"index":148},"to":{"krate":2,"index":9685}},{"span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tower-0.4.13\\src\\make\\make_service.rs","byte_start":19391,"byte_end":19400,"line_start":233,"line_end":233,"column_start":49,"column_end":58},"kind":{"Impl":{"id":10}},"from":{"krate":0,"index":148},"to":{"krate":36,"index":13}},{"span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tower-0.4.13\\src\\util\\and_then.rs","byte_start":59857,"byte_end":59864,"line_start":19,"line_end":19,"column_start":27,"column_end":34},"kind":{"Impl":{"id":11}},"from":{"krate":0,"index":1656},"to":{"krate":2,"index":9685}},{"span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tower-0.4.13\\src\\util\\and_then.rs","byte_start":60449,"byte_end":60462,"line_start":41,"line_end":41,"column_start":28,"column_end":41},"kind":{"Impl":{"id":12}},"from":{"krate":0,"index":1665},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tower-0.4.13\\src\\util\\and_then.rs","byte_start":60650,"byte_end":60663,"line_start":47,"line_end":47,"column_start":48,"column_end":61},"kind":{"Impl":{"id":13}},"from":{"krate":0,"index":1665},"to":{"krate":2,"index":9685}},{"span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tower-0.4.13\\src\\util\\and_then.rs","byte_start":60899,"byte_end":60912,"line_start":55,"line_end":55,"column_start":39,"column_end":52},"kind":{"Impl":{"id":14}},"from":{"krate":0,"index":1665},"to":{"krate":2,"index":13098}},{"span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tower-0.4.13\\src\\util\\and_then.rs","byte_start":61404,"byte_end":61411,"line_start":75,"line_end":75,"column_start":12,"column_end":19},"kind":{"Impl":{"id":15}},"from":{"krate":0,"index":1656},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tower-0.4.13\\src\\util\\and_then.rs","byte_start":61866,"byte_end":61873,"line_start":91,"line_end":91,"column_start":47,"column_end":54},"kind":{"Impl":{"id":16}},"from":{"krate":0,"index":1656},"to":{"krate":36,"index":13}},{"span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tower-0.4.13\\src\\util\\and_then.rs","byte_start":62431,"byte_end":62443,"line_start":111,"line_end":111,"column_start":9,"column_end":21},"kind":{"Impl":{"id":17}},"from":{"krate":0,"index":1714},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tower-0.4.13\\src\\util\\and_then.rs","byte_start":62586,"byte_end":62598,"line_start":118,"line_end":118,"column_start":25,"column_end":37},"kind":{"Impl":{"id":18}},"from":{"krate":0,"index":1714},"to":{"krate":44,"index":71}},{"span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tower-0.4.13\\src\\util\\boxed\\layer.rs","byte_start":66071,"byte_end":66079,"line_start":58,"line_end":58,"column_start":19,"column_end":27},"kind":{"Impl":{"id":19}},"from":{"krate":0,"index":287},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tower-0.4.13\\src\\util\\boxed\\layer.rs","byte_start":66612,"byte_end":66620,"line_start":77,"line_end":77,"column_start":33,"column_end":41},"kind":{"Impl":{"id":20}},"from":{"krate":0,"index":287},"to":{"krate":44,"index":71}},{"span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tower-0.4.13\\src\\util\\boxed\\layer.rs","byte_start":66796,"byte_end":66804,"line_start":85,"line_end":85,"column_start":29,"column_end":37},"kind":{"Impl":{"id":21}},"from":{"krate":0,"index":287},"to":{"krate":2,"index":2679}},{"span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tower-0.4.13\\src\\util\\boxed\\layer.rs","byte_start":66961,"byte_end":66969,"line_start":93,"line_end":93,"column_start":34,"column_end":42},"kind":{"Impl":{"id":22}},"from":{"krate":0,"index":287},"to":{"krate":2,"index":9685}},{"span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tower-0.4.13\\src\\util\\boxed\\sync.rs","byte_start":68072,"byte_end":68082,"line_start":32,"line_end":32,"column_start":15,"column_end":25},"kind":{"Impl":{"id":23}},"from":{"krate":0,"index":351},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tower-0.4.13\\src\\util\\boxed\\sync.rs","byte_start":68755,"byte_end":68765,"line_start":56,"line_end":56,"column_start":30,"column_end":40},"kind":{"Impl":{"id":24}},"from":{"krate":0,"index":351},"to":{"krate":36,"index":13}},{"span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tower-0.4.13\\src\\util\\boxed\\sync.rs","byte_start":69100,"byte_end":69110,"line_start":70,"line_end":70,"column_start":30,"column_end":40},"kind":{"Impl":{"id":25}},"from":{"krate":0,"index":351},"to":{"krate":2,"index":9685}},{"span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tower-0.4.13\\src\\util\\boxed\\unsync.rs","byte_start":69866,"byte_end":69882,"line_start":27,"line_end":27,"column_start":15,"column_end":31},"kind":{"Impl":{"id":26}},"from":{"krate":0,"index":410},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tower-0.4.13\\src\\util\\boxed\\unsync.rs","byte_start":70504,"byte_end":70520,"line_start":50,"line_end":50,"column_start":30,"column_end":46},"kind":{"Impl":{"id":27}},"from":{"krate":0,"index":410},"to":{"krate":36,"index":13}},{"span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tower-0.4.13\\src\\util\\boxed\\unsync.rs","byte_start":70867,"byte_end":70883,"line_start":64,"line_end":64,"column_start":30,"column_end":46},"kind":{"Impl":{"id":28}},"from":{"krate":0,"index":410},"to":{"krate":2,"index":9685}},{"span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tower-0.4.13\\src\\util\\boxed\\unsync.rs","byte_start":71057,"byte_end":71068,"line_start":70,"line_end":70,"column_start":39,"column_end":50},"kind":{"Impl":{"id":29}},"from":{"krate":0,"index":1723},"to":{"krate":36,"index":13}},{"span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tower-0.4.13\\src\\util\\boxed_clone.rs","byte_start":73380,"byte_end":73395,"line_start":65,"line_end":65,"column_start":15,"column_end":30},"kind":{"Impl":{"id":30}},"from":{"krate":0,"index":486},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tower-0.4.13\\src\\util\\boxed_clone.rs","byte_start":74093,"byte_end":74108,"line_start":89,"line_end":89,"column_start":30,"column_end":45},"kind":{"Impl":{"id":31}},"from":{"krate":0,"index":486},"to":{"krate":36,"index":13}},{"span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tower-0.4.13\\src\\util\\boxed_clone.rs","byte_start":74472,"byte_end":74487,"line_start":105,"line_end":105,"column_start":25,"column_end":40},"kind":{"Impl":{"id":32}},"from":{"krate":0,"index":486},"to":{"krate":2,"index":2679}},{"span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tower-0.4.13\\src\\util\\boxed_clone.rs","byte_start":74594,"byte_end":74601,"line_start":111,"line_end":111,"column_start":24,"column_end":31},"kind":"SuperTrait","from":{"krate":36,"index":13},"to":{"krate":0,"index":515}},{"span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tower-0.4.13\\src\\util\\boxed_clone.rs","byte_start":74814,"byte_end":74815,"line_start":120,"line_end":120,"column_start":32,"column_end":33},"kind":{"Impl":{"id":33}},"from":{"krate":0,"index":520},"to":{"krate":0,"index":515}},{"span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tower-0.4.13\\src\\util\\boxed_clone.rs","byte_start":75079,"byte_end":75094,"line_start":132,"line_end":132,"column_start":30,"column_end":45},"kind":{"Impl":{"id":34}},"from":{"krate":0,"index":486},"to":{"krate":2,"index":9685}},{"span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tower-0.4.13\\src\\util\\call_all\\common.rs","byte_start":76272,"byte_end":76279,"line_start":30,"line_end":30,"column_start":17,"column_end":24},"kind":{"Impl":{"id":35}},"from":{"krate":0,"index":1729},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tower-0.4.13\\src\\util\\call_all\\common.rs","byte_start":77242,"byte_end":77249,"line_start":66,"line_end":66,"column_start":28,"column_end":35},"kind":{"Impl":{"id":36}},"from":{"krate":0,"index":1729},"to":{"krate":37,"index":96}},{"span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tower-0.4.13\\src\\util\\call_all\\ordered.rs","byte_start":82645,"byte_end":82652,"line_start":98,"line_end":98,"column_start":14,"column_end":21},"kind":{"Impl":{"id":37}},"from":{"krate":0,"index":1795},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tower-0.4.13\\src\\util\\call_all\\ordered.rs","byte_start":84323,"byte_end":84330,"line_start":154,"line_end":154,"column_start":25,"column_end":32},"kind":{"Impl":{"id":38}},"from":{"krate":0,"index":1795},"to":{"krate":37,"index":96}},{"span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tower-0.4.13\\src\\util\\call_all\\ordered.rs","byte_start":84665,"byte_end":84679,"line_start":167,"line_end":167,"column_start":38,"column_end":52},"kind":{"Impl":{"id":39}},"from":{"krate":38,"index":6376},"to":{"krate":0,"index":556}},{"span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tower-0.4.13\\src\\util\\call_all\\unordered.rs","byte_start":85963,"byte_end":85979,"line_start":35,"line_end":35,"column_start":14,"column_end":30},"kind":{"Impl":{"id":40}},"from":{"krate":0,"index":1840},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tower-0.4.13\\src\\util\\call_all\\unordered.rs","byte_start":87139,"byte_end":87155,"line_start":75,"line_end":75,"column_start":25,"column_end":41},"kind":{"Impl":{"id":41}},"from":{"krate":0,"index":1840},"to":{"krate":37,"index":96}},{"span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tower-0.4.13\\src\\util\\call_all\\unordered.rs","byte_start":87490,"byte_end":87506,"line_start":88,"line_end":88,"column_start":38,"column_end":54},"kind":{"Impl":{"id":42}},"from":{"krate":38,"index":6734},"to":{"krate":0,"index":556}},{"span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tower-0.4.13\\src\\util\\either.rs","byte_start":88615,"byte_end":88621,"line_start":29,"line_end":29,"column_start":42,"column_end":48},"kind":{"Impl":{"id":48}},"from":{"krate":0,"index":1935},"to":{"krate":36,"index":13}},{"span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tower-0.4.13\\src\\util\\either.rs","byte_start":89512,"byte_end":89518,"line_start":59,"line_end":59,"column_start":34,"column_end":40},"kind":{"Impl":{"id":49}},"from":{"krate":0,"index":1935},"to":{"krate":2,"index":13098}},{"span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tower-0.4.13\\src\\util\\either.rs","byte_start":90065,"byte_end":90071,"line_start":76,"line_end":76,"column_start":28,"column_end":34},"kind":{"Impl":{"id":50}},"from":{"krate":0,"index":1935},"to":{"krate":44,"index":71}},{"span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tower-0.4.13\\src\\util\\future_service.rs","byte_start":92460,"byte_end":92473,"line_start":64,"line_end":64,"column_start":12,"column_end":25},"kind":{"Impl":{"id":51}},"from":{"krate":0,"index":1944},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tower-0.4.13\\src\\util\\future_service.rs","byte_start":94326,"byte_end":94339,"line_start":111,"line_end":111,"column_start":27,"column_end":40},"kind":{"Impl":{"id":52}},"from":{"krate":0,"index":1944},"to":{"krate":2,"index":9685}},{"span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tower-0.4.13\\src\\util\\future_service.rs","byte_start":94666,"byte_end":94671,"line_start":128,"line_end":128,"column_start":27,"column_end":32},"kind":{"Impl":{"id":53}},"from":{"krate":0,"index":1952},"to":{"krate":2,"index":9685}},{"span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tower-0.4.13\\src\\util\\future_service.rs","byte_start":95109,"byte_end":95122,"line_start":143,"line_end":143,"column_start":33,"column_end":46},"kind":{"Impl":{"id":54}},"from":{"krate":0,"index":1944},"to":{"krate":36,"index":13}},{"span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tower-0.4.13\\src\\util\\map_err.rs","byte_start":97578,"byte_end":97584,"line_start":16,"line_end":16,"column_start":27,"column_end":33},"kind":{"Impl":{"id":55}},"from":{"krate":0,"index":1965},"to":{"krate":2,"index":9685}},{"span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tower-0.4.13\\src\\util\\map_err.rs","byte_start":98198,"byte_end":98204,"line_start":43,"line_end":43,"column_start":12,"column_end":18},"kind":{"Impl":{"id":56}},"from":{"krate":0,"index":1965},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tower-0.4.13\\src\\util\\map_err.rs","byte_start":98657,"byte_end":98663,"line_start":59,"line_end":59,"column_start":49,"column_end":55},"kind":{"Impl":{"id":57}},"from":{"krate":0,"index":1965},"to":{"krate":36,"index":13}},{"span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tower-0.4.13\\src\\util\\map_err.rs","byte_start":99180,"byte_end":99191,"line_start":79,"line_end":79,"column_start":9,"column_end":20},"kind":{"Impl":{"id":58}},"from":{"krate":0,"index":1974},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tower-0.4.13\\src\\util\\map_err.rs","byte_start":99326,"byte_end":99337,"line_start":86,"line_end":86,"column_start":25,"column_end":36},"kind":{"Impl":{"id":59}},"from":{"krate":0,"index":1974},"to":{"krate":44,"index":71}},{"span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tower-0.4.13\\src\\util\\map_request.rs","byte_start":99847,"byte_end":99857,"line_start":15,"line_end":15,"column_start":27,"column_end":37},"kind":{"Impl":{"id":60}},"from":{"krate":0,"index":2037},"to":{"krate":2,"index":9685}},{"span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tower-0.4.13\\src\\util\\map_request.rs","byte_start":100147,"byte_end":100157,"line_start":27,"line_end":27,"column_start":12,"column_end":22},"kind":{"Impl":{"id":61}},"from":{"krate":0,"index":2037},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tower-0.4.13\\src\\util\\map_request.rs","byte_start":100621,"byte_end":100631,"line_start":43,"line_end":43,"column_start":36,"column_end":46},"kind":{"Impl":{"id":62}},"from":{"krate":0,"index":2037},"to":{"krate":36,"index":13}},{"span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tower-0.4.13\\src\\util\\map_request.rs","byte_start":101205,"byte_end":101220,"line_start":71,"line_end":71,"column_start":9,"column_end":24},"kind":{"Impl":{"id":63}},"from":{"krate":0,"index":2046},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tower-0.4.13\\src\\util\\map_request.rs","byte_start":101363,"byte_end":101378,"line_start":78,"line_end":78,"column_start":25,"column_end":40},"kind":{"Impl":{"id":64}},"from":{"krate":0,"index":2046},"to":{"krate":44,"index":71}},{"span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tower-0.4.13\\src\\util\\map_response.rs","byte_start":101951,"byte_end":101962,"line_start":16,"line_end":16,"column_start":27,"column_end":38},"kind":{"Impl":{"id":65}},"from":{"krate":0,"index":2055},"to":{"krate":2,"index":9685}},{"span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tower-0.4.13\\src\\util\\map_response.rs","byte_start":102603,"byte_end":102614,"line_start":43,"line_end":43,"column_start":12,"column_end":23},"kind":{"Impl":{"id":66}},"from":{"krate":0,"index":2055},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tower-0.4.13\\src\\util\\map_response.rs","byte_start":103098,"byte_end":103109,"line_start":59,"line_end":59,"column_start":52,"column_end":63},"kind":{"Impl":{"id":67}},"from":{"krate":0,"index":2055},"to":{"krate":36,"index":13}},{"span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tower-0.4.13\\src\\util\\map_response.rs","byte_start":103617,"byte_end":103633,"line_start":79,"line_end":79,"column_start":9,"column_end":25},"kind":{"Impl":{"id":68}},"from":{"krate":0,"index":2064},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tower-0.4.13\\src\\util\\map_response.rs","byte_start":103784,"byte_end":103800,"line_start":86,"line_end":86,"column_start":25,"column_end":41},"kind":{"Impl":{"id":69}},"from":{"krate":0,"index":2064},"to":{"krate":44,"index":71}},{"span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tower-0.4.13\\src\\util\\map_result.rs","byte_start":104362,"byte_end":104371,"line_start":16,"line_end":16,"column_start":27,"column_end":36},"kind":{"Impl":{"id":70}},"from":{"krate":0,"index":2127},"to":{"krate":2,"index":9685}},{"span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tower-0.4.13\\src\\util\\map_result.rs","byte_start":104996,"byte_end":105005,"line_start":43,"line_end":43,"column_start":12,"column_end":21},"kind":{"Impl":{"id":71}},"from":{"krate":0,"index":2127},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tower-0.4.13\\src\\util\\map_result.rs","byte_start":105486,"byte_end":105495,"line_start":59,"line_end":59,"column_start":59,"column_end":68},"kind":{"Impl":{"id":72}},"from":{"krate":0,"index":2127},"to":{"krate":36,"index":13}},{"span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tower-0.4.13\\src\\util\\map_result.rs","byte_start":106073,"byte_end":106087,"line_start":80,"line_end":80,"column_start":9,"column_end":23},"kind":{"Impl":{"id":73}},"from":{"krate":0,"index":2136},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tower-0.4.13\\src\\util\\map_result.rs","byte_start":106234,"byte_end":106248,"line_start":87,"line_end":87,"column_start":25,"column_end":39},"kind":{"Impl":{"id":74}},"from":{"krate":0,"index":2136},"to":{"krate":44,"index":71}},{"span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tower-0.4.13\\src\\util\\map_future.rs","byte_start":106775,"byte_end":106784,"line_start":18,"line_end":18,"column_start":12,"column_end":21},"kind":{"Impl":{"id":75}},"from":{"krate":0,"index":2199},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tower-0.4.13\\src\\util\\map_future.rs","byte_start":107589,"byte_end":107598,"line_start":49,"line_end":49,"column_start":41,"column_end":50},"kind":{"Impl":{"id":76}},"from":{"krate":0,"index":2199},"to":{"krate":36,"index":13}},{"span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tower-0.4.13\\src\\util\\map_future.rs","byte_start":108064,"byte_end":108073,"line_start":69,"line_end":69,"column_start":27,"column_end":36},"kind":{"Impl":{"id":77}},"from":{"krate":0,"index":2199},"to":{"krate":2,"index":9685}},{"span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tower-0.4.13\\src\\util\\map_future.rs","byte_start":108513,"byte_end":108527,"line_start":89,"line_end":89,"column_start":9,"column_end":23},"kind":{"Impl":{"id":78}},"from":{"krate":0,"index":2208},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tower-0.4.13\\src\\util\\map_future.rs","byte_start":108664,"byte_end":108678,"line_start":96,"line_end":96,"column_start":25,"column_end":39},"kind":{"Impl":{"id":79}},"from":{"krate":0,"index":2208},"to":{"krate":44,"index":71}},{"span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tower-0.4.13\\src\\util\\map_future.rs","byte_start":108868,"byte_end":108882,"line_start":107,"line_end":107,"column_start":24,"column_end":38},"kind":{"Impl":{"id":80}},"from":{"krate":0,"index":2208},"to":{"krate":2,"index":9685}},{"span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tower-0.4.13\\src\\util\\oneshot.rs","byte_start":109892,"byte_end":109897,"line_start":37,"line_end":37,"column_start":28,"column_end":33},"kind":{"Impl":{"id":81}},"from":{"krate":0,"index":2259},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tower-0.4.13\\src\\util\\oneshot.rs","byte_start":110110,"byte_end":110115,"line_start":47,"line_end":47,"column_start":29,"column_end":34},"kind":{"Impl":{"id":82}},"from":{"krate":0,"index":2259},"to":{"krate":2,"index":9685}},{"span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tower-0.4.13\\src\\util\\oneshot.rs","byte_start":110764,"byte_end":110771,"line_start":69,"line_end":69,"column_start":14,"column_end":21},"kind":{"Impl":{"id":83}},"from":{"krate":0,"index":2214},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tower-0.4.13\\src\\util\\oneshot.rs","byte_start":110993,"byte_end":111000,"line_start":81,"line_end":81,"column_start":25,"column_end":32},"kind":{"Impl":{"id":84}},"from":{"krate":0,"index":2214},"to":{"krate":2,"index":13098}},{"span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tower-0.4.13\\src\\util\\optional\\error.rs","byte_start":113652,"byte_end":113656,"line_start":9,"line_end":9,"column_start":6,"column_end":10},"kind":{"Impl":{"id":85}},"from":{"krate":0,"index":2304},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tower-0.4.13\\src\\util\\optional\\error.rs","byte_start":113741,"byte_end":113745,"line_start":15,"line_end":15,"column_start":23,"column_end":27},"kind":{"Impl":{"id":86}},"from":{"krate":0,"index":2304},"to":{"krate":2,"index":9692}},{"span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tower-0.4.13\\src\\util\\optional\\error.rs","byte_start":113868,"byte_end":113872,"line_start":21,"line_end":21,"column_start":23,"column_end":27},"kind":{"Impl":{"id":87}},"from":{"krate":0,"index":2304},"to":{"krate":1,"index":2546}},{"span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tower-0.4.13\\src\\util\\optional\\future.rs","byte_start":114262,"byte_end":114276,"line_start":21,"line_end":21,"column_start":9,"column_end":23},"kind":{"Impl":{"id":88}},"from":{"krate":0,"index":2309},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tower-0.4.13\\src\\util\\optional\\future.rs","byte_start":114412,"byte_end":114426,"line_start":27,"line_end":27,"column_start":26,"column_end":40},"kind":{"Impl":{"id":89}},"from":{"krate":0,"index":2309},"to":{"krate":2,"index":13098}},{"span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tower-0.4.13\\src\\util\\optional\\mod.rs","byte_start":112442,"byte_end":112450,"line_start":24,"line_end":24,"column_start":9,"column_end":17},"kind":{"Impl":{"id":90}},"from":{"krate":0,"index":2345},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tower-0.4.13\\src\\util\\optional\\mod.rs","byte_start":112708,"byte_end":112716,"line_start":35,"line_end":35,"column_start":39,"column_end":47},"kind":{"Impl":{"id":91}},"from":{"krate":0,"index":2345},"to":{"krate":36,"index":13}},{"span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tower-0.4.13\\src\\util\\ready.rs","byte_start":115452,"byte_end":115464,"line_start":22,"line_end":22,"column_start":28,"column_end":40},"kind":{"Impl":{"id":92}},"from":{"krate":0,"index":1175},"to":{"krate":2,"index":3098}},{"span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tower-0.4.13\\src\\util\\ready.rs","byte_start":115498,"byte_end":115510,"line_start":24,"line_end":24,"column_start":18,"column_end":30},"kind":{"Impl":{"id":93}},"from":{"krate":0,"index":1175},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tower-0.4.13\\src\\util\\ready.rs","byte_start":115745,"byte_end":115757,"line_start":37,"line_end":37,"column_start":29,"column_end":41},"kind":{"Impl":{"id":94}},"from":{"krate":0,"index":1175},"to":{"krate":2,"index":13098}},{"span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tower-0.4.13\\src\\util\\ready.rs","byte_start":116183,"byte_end":116195,"line_start":54,"line_end":54,"column_start":33,"column_end":45},"kind":{"Impl":{"id":95}},"from":{"krate":0,"index":1175},"to":{"krate":2,"index":9685}},{"span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tower-0.4.13\\src\\util\\ready.rs","byte_start":117189,"byte_end":117194,"line_start":81,"line_end":81,"column_start":32,"column_end":37},"kind":{"Impl":{"id":96}},"from":{"krate":0,"index":1196},"to":{"krate":2,"index":3098}},{"span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tower-0.4.13\\src\\util\\ready.rs","byte_start":117236,"byte_end":117241,"line_start":83,"line_end":83,"column_start":22,"column_end":27},"kind":{"Impl":{"id":97}},"from":{"krate":0,"index":1196},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tower-0.4.13\\src\\util\\ready.rs","byte_start":117445,"byte_end":117450,"line_start":93,"line_end":93,"column_start":33,"column_end":38},"kind":{"Impl":{"id":98}},"from":{"krate":0,"index":1196},"to":{"krate":2,"index":13098}},{"span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tower-0.4.13\\src\\util\\ready.rs","byte_start":117716,"byte_end":117721,"line_start":104,"line_end":104,"column_start":37,"column_end":42},"kind":{"Impl":{"id":99}},"from":{"krate":0,"index":1196},"to":{"krate":2,"index":9685}},{"span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tower-0.4.13\\src\\util\\service_fn.rs","byte_start":119238,"byte_end":119247,"line_start":58,"line_end":58,"column_start":24,"column_end":33},"kind":{"Impl":{"id":100}},"from":{"krate":0,"index":2351},"to":{"krate":2,"index":9685}},{"span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tower-0.4.13\\src\\util\\service_fn.rs","byte_start":119503,"byte_end":119512,"line_start":66,"line_end":66,"column_start":48,"column_end":57},"kind":{"Impl":{"id":101}},"from":{"krate":0,"index":2351},"to":{"krate":36,"index":13}},{"span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tower-0.4.13\\src\\util\\then.rs","byte_start":120202,"byte_end":120206,"line_start":19,"line_end":19,"column_start":27,"column_end":31},"kind":{"Impl":{"id":102}},"from":{"krate":0,"index":2359},"to":{"krate":2,"index":9685}},{"span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tower-0.4.13\\src\\util\\then.rs","byte_start":120641,"byte_end":120645,"line_start":39,"line_end":39,"column_start":12,"column_end":16},"kind":{"Impl":{"id":103}},"from":{"krate":0,"index":2359},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tower-0.4.13\\src\\util\\then.rs","byte_start":121273,"byte_end":121277,"line_start":62,"line_end":62,"column_start":64,"column_end":68},"kind":{"Impl":{"id":104}},"from":{"krate":0,"index":2359},"to":{"krate":36,"index":13}},{"span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tower-0.4.13\\src\\util\\then.rs","byte_start":121882,"byte_end":121891,"line_start":84,"line_end":84,"column_start":9,"column_end":18},"kind":{"Impl":{"id":105}},"from":{"krate":0,"index":2368},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tower-0.4.13\\src\\util\\then.rs","byte_start":122028,"byte_end":122037,"line_start":91,"line_end":91,"column_start":25,"column_end":34},"kind":{"Impl":{"id":106}},"from":{"krate":0,"index":2368},"to":{"krate":44,"index":71}},{"span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tower-0.4.13\\src\\util\\mod.rs","byte_start":25288,"byte_end":25295,"line_start":65,"line_end":65,"column_start":47,"column_end":54},"kind":"SuperTrait","from":{"krate":36,"index":13},"to":{"krate":0,"index":1448}},{"span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tower-0.4.13\\src\\util\\mod.rs","byte_start":58562,"byte_end":58563,"line_start":1055,"line_end":1055,"column_start":50,"column_end":51},"kind":{"Impl":{"id":107}},"from":{"krate":0,"index":1484},"to":{"krate":0,"index":1448}},{"span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tower-0.4.13\\src\\builder\\mod.rs","byte_start":125814,"byte_end":125828,"line_start":110,"line_end":110,"column_start":18,"column_end":32},"kind":{"Impl":{"id":108}},"from":{"krate":0,"index":2442},"to":{"krate":2,"index":3035}},{"span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tower-0.4.13\\src\\builder\\mod.rs","byte_start":125902,"byte_end":125916,"line_start":116,"line_end":116,"column_start":6,"column_end":20},"kind":{"Impl":{"id":109}},"from":{"krate":0,"index":2442},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tower-0.4.13\\src\\builder\\mod.rs","byte_start":126085,"byte_end":126099,"line_start":125,"line_end":125,"column_start":9,"column_end":23},"kind":{"Impl":{"id":110}},"from":{"krate":0,"index":2442},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tower-0.4.13\\src\\builder\\mod.rs","byte_start":149660,"byte_end":149674,"line_start":813,"line_end":813,"column_start":36,"column_end":50},"kind":{"Impl":{"id":111}},"from":{"krate":0,"index":2442},"to":{"krate":2,"index":9685}},{"span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tower-0.4.13\\src\\builder\\mod.rs","byte_start":149844,"byte_end":149858,"line_start":819,"line_end":819,"column_start":25,"column_end":39},"kind":{"Impl":{"id":112}},"from":{"krate":0,"index":2442},"to":{"krate":44,"index":71}}]}