{"config":{"output_file":null,"full_docs":false,"pub_only":true,"reachable_only":true,"distro_crate":false,"signatures":false,"borrow_data":false},"version":"0.19.1","compilation":{"directory":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\spin-0.9.4","program":"C:\\Users\\admin\\.rustup\\toolchains\\stable-x86_64-pc-windows-msvc\\bin\\rls.exe","arguments":["--crate-name","spin","C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\spin-0.9.4\\src\\lib.rs","--json=diagnostic-rendered-ansi,artifacts,future-incompat","--crate-type","lib","--emit=dep-info,metadata","-C","embed-bitcode=no","-C","debuginfo=2","--cfg","feature=\"mutex\"","--cfg","feature=\"spin_mutex\"","-C","metadata=85c47999290bfd31","-C","extra-filename=-85c47999290bfd31","--out-dir","f:\\sea-orm-demo\\axum_examples\\async-graphql\\target\\rls\\debug\\deps","-L","dependency=f:\\sea-orm-demo\\axum_examples\\async-graphql\\target\\rls\\debug\\deps","--cap-lints","allow","--error-format=json","--sysroot","C:\\Users\\admin\\.rustup/toolchains/stable-x86_64-pc-windows-msvc"],"output":"f:\\sea-orm-demo\\axum_examples\\async-graphql\\target\\rls\\debug\\deps\\libspin-85c47999290bfd31.rmeta"},"prelude":{"crate_id":{"name":"spin","disambiguator":[13995618666353748491,0]},"crate_root":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\spin-0.9.4\\src","external_crates":[{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\spin-0.9.4\\src\\lib.rs","num":1,"id":{"name":"core","disambiguator":[1507510987272037120,0]}},{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\spin-0.9.4\\src\\lib.rs","num":2,"id":{"name":"compiler_builtins","disambiguator":[3803325750332457499,0]}},{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\spin-0.9.4\\src\\lib.rs","num":3,"id":{"name":"rustc_std_workspace_core","disambiguator":[4223354511651166533,0]}}],"span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\spin-0.9.4\\src\\lib.rs","byte_start":0,"byte_end":8957,"line_start":1,"line_end":194,"column_start":1,"column_end":2}},"imports":[{"kind":"Use","ref_id":{"krate":0,"index":40},"span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\spin-0.9.4\\src\\mutex.rs","byte_start":9827,"byte_end":9836,"line_start":21,"line_end":21,"column_start":22,"column_end":31},"alias_span":null,"name":"SpinMutex","value":"","parent":{"krate":0,"index":7}},{"kind":"Use","ref_id":{"krate":0,"index":46},"span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\spin-0.9.4\\src\\mutex.rs","byte_start":9838,"byte_end":9852,"line_start":21,"line_end":21,"column_start":33,"column_end":47},"alias_span":null,"name":"SpinMutexGuard","value":"","parent":{"krate":0,"index":7}},{"kind":"Use","ref_id":{"krate":0,"index":154},"span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\spin-0.9.4\\src\\lib.rs","byte_start":3064,"byte_end":3074,"line_start":90,"line_end":90,"column_start":16,"column_end":26},"alias_span":null,"name":"MutexGuard","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":211},"span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\spin-0.9.4\\src\\lib.rs","byte_start":3202,"byte_end":3206,"line_start":94,"line_end":94,"column_start":17,"column_end":21},"alias_span":null,"name":"Spin","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":212},"span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\spin-0.9.4\\src\\lib.rs","byte_start":3202,"byte_end":3206,"line_start":94,"line_end":94,"column_start":17,"column_end":21},"alias_span":null,"name":"Spin","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":209},"span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\spin-0.9.4\\src\\lib.rs","byte_start":3208,"byte_end":3221,"line_start":94,"line_end":94,"column_start":23,"column_end":36},"alias_span":null,"name":"RelaxStrategy","value":"","parent":{"krate":0,"index":0}}],"defs":[{"kind":"Mod","id":{"krate":0,"index":0},"span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\spin-0.9.4\\src\\lib.rs","byte_start":0,"byte_end":8957,"line_start":1,"line_end":194,"column_start":1,"column_end":2},"name":"","qualname":"::","value":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\spin-0.9.4\\src\\lib.rs","parent":null,"children":[{"krate":0,"index":1},{"krate":0,"index":2},{"krate":0,"index":3},{"krate":0,"index":4},{"krate":0,"index":7},{"krate":0,"index":208},{"krate":0,"index":219},{"krate":0,"index":222},{"krate":0,"index":223},{"krate":0,"index":224},{"krate":0,"index":226},{"krate":0,"index":229}],"decl_id":null,"docs":" This crate provides [spin-based](https://en.wikipedia.org/wiki/Spinlock) versions of the\n primitives in `std::sync` and `std::lazy`. Because synchronization is done through spinning,\n the primitives are suitable for use in `no_std` environments.","sig":null,"attributes":[{"value":"no_std","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\spin-0.9.4\\src\\lib.rs","byte_start":50,"byte_end":56,"line_start":1,"line_end":1,"column_start":51,"column_end":57}},{"value":"deny(missing_docs)","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\spin-0.9.4\\src\\lib.rs","byte_start":98,"byte_end":120,"line_start":3,"line_end":3,"column_start":1,"column_end":23}},{"value":"/ This crate provides [spin-based](https://en.wikipedia.org/wiki/Spinlock) versions of the","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\spin-0.9.4\\src\\lib.rs","byte_start":122,"byte_end":214,"line_start":5,"line_end":5,"column_start":1,"column_end":93}},{"value":"/ primitives in `std::sync` and `std::lazy`. Because synchronization is done through spinning,","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\spin-0.9.4\\src\\lib.rs","byte_start":215,"byte_end":311,"line_start":6,"line_end":6,"column_start":1,"column_end":97}},{"value":"/ the primitives are suitable for use in `no_std` environments.","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\spin-0.9.4\\src\\lib.rs","byte_start":312,"byte_end":377,"line_start":7,"line_end":7,"column_start":1,"column_end":66}},{"value":"/","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\spin-0.9.4\\src\\lib.rs","byte_start":378,"byte_end":381,"line_start":8,"line_end":8,"column_start":1,"column_end":4}},{"value":"/ # Features","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\spin-0.9.4\\src\\lib.rs","byte_start":382,"byte_end":396,"line_start":9,"line_end":9,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\spin-0.9.4\\src\\lib.rs","byte_start":397,"byte_end":400,"line_start":10,"line_end":10,"column_start":1,"column_end":4}},{"value":"/ - `Mutex`, `RwLock`, `Once`/`SyncOnceCell`, and `SyncLazy` equivalents","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\spin-0.9.4\\src\\lib.rs","byte_start":401,"byte_end":475,"line_start":11,"line_end":11,"column_start":1,"column_end":75}},{"value":"/","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\spin-0.9.4\\src\\lib.rs","byte_start":476,"byte_end":479,"line_start":12,"line_end":12,"column_start":1,"column_end":4}},{"value":"/ - Support for `no_std` environments","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\spin-0.9.4\\src\\lib.rs","byte_start":480,"byte_end":519,"line_start":13,"line_end":13,"column_start":1,"column_end":40}},{"value":"/","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\spin-0.9.4\\src\\lib.rs","byte_start":520,"byte_end":523,"line_start":14,"line_end":14,"column_start":1,"column_end":4}},{"value":"/ - [`lock_api`](https://crates.io/crates/lock_api) compatibility","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\spin-0.9.4\\src\\lib.rs","byte_start":524,"byte_end":591,"line_start":15,"line_end":15,"column_start":1,"column_end":68}},{"value":"/","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\spin-0.9.4\\src\\lib.rs","byte_start":592,"byte_end":595,"line_start":16,"line_end":16,"column_start":1,"column_end":4}},{"value":"/ - Upgradeable `RwLock` guards","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\spin-0.9.4\\src\\lib.rs","byte_start":596,"byte_end":629,"line_start":17,"line_end":17,"column_start":1,"column_end":34}},{"value":"/","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\spin-0.9.4\\src\\lib.rs","byte_start":630,"byte_end":633,"line_start":18,"line_end":18,"column_start":1,"column_end":4}},{"value":"/ - Guards can be sent and shared between threads","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\spin-0.9.4\\src\\lib.rs","byte_start":634,"byte_end":685,"line_start":19,"line_end":19,"column_start":1,"column_end":52}},{"value":"/","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\spin-0.9.4\\src\\lib.rs","byte_start":686,"byte_end":689,"line_start":20,"line_end":20,"column_start":1,"column_end":4}},{"value":"/ - Guard leaking","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\spin-0.9.4\\src\\lib.rs","byte_start":690,"byte_end":709,"line_start":21,"line_end":21,"column_start":1,"column_end":20}},{"value":"/","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\spin-0.9.4\\src\\lib.rs","byte_start":710,"byte_end":713,"line_start":22,"line_end":22,"column_start":1,"column_end":4}},{"value":"/ - Ticket locks","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\spin-0.9.4\\src\\lib.rs","byte_start":714,"byte_end":732,"line_start":23,"line_end":23,"column_start":1,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\spin-0.9.4\\src\\lib.rs","byte_start":733,"byte_end":736,"line_start":24,"line_end":24,"column_start":1,"column_end":4}},{"value":"/ - Different strategies for dealing with contention","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\spin-0.9.4\\src\\lib.rs","byte_start":737,"byte_end":791,"line_start":25,"line_end":25,"column_start":1,"column_end":55}},{"value":"/","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\spin-0.9.4\\src\\lib.rs","byte_start":792,"byte_end":795,"line_start":26,"line_end":26,"column_start":1,"column_end":4}},{"value":"/ # Relationship with `std::sync`","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\spin-0.9.4\\src\\lib.rs","byte_start":796,"byte_end":831,"line_start":27,"line_end":27,"column_start":1,"column_end":36}},{"value":"/","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\spin-0.9.4\\src\\lib.rs","byte_start":832,"byte_end":835,"line_start":28,"line_end":28,"column_start":1,"column_end":4}},{"value":"/ While `spin` is not a drop-in replacement for `std::sync` (and","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\spin-0.9.4\\src\\lib.rs","byte_start":836,"byte_end":902,"line_start":29,"line_end":29,"column_start":1,"column_end":67}},{"value":"/ [should not be considered as such](https://matklad.github.io/2020/01/02/spinlocks-considered-harmful.html))","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\spin-0.9.4\\src\\lib.rs","byte_start":903,"byte_end":1014,"line_start":30,"line_end":30,"column_start":1,"column_end":112}},{"value":"/ an effort is made to keep this crate reasonably consistent with `std::sync`.","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\spin-0.9.4\\src\\lib.rs","byte_start":1015,"byte_end":1095,"line_start":31,"line_end":31,"column_start":1,"column_end":81}},{"value":"/","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\spin-0.9.4\\src\\lib.rs","byte_start":1096,"byte_end":1099,"line_start":32,"line_end":32,"column_start":1,"column_end":4}},{"value":"/ Many of the types defined in this crate have 'additional capabilities' when compared to `std::sync`:","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\spin-0.9.4\\src\\lib.rs","byte_start":1100,"byte_end":1204,"line_start":33,"line_end":33,"column_start":1,"column_end":105}},{"value":"/","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\spin-0.9.4\\src\\lib.rs","byte_start":1205,"byte_end":1208,"line_start":34,"line_end":34,"column_start":1,"column_end":4}},{"value":"/ - Because spinning does not depend on the thread-driven model of `std::sync`, guards ([`MutexGuard`],","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\spin-0.9.4\\src\\lib.rs","byte_start":1209,"byte_end":1314,"line_start":35,"line_end":35,"column_start":1,"column_end":106}},{"value":"/   [`RwLockReadGuard`], [`RwLockWriteGuard`], etc.) may be sent and shared between threads.","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\spin-0.9.4\\src\\lib.rs","byte_start":1315,"byte_end":1409,"line_start":36,"line_end":36,"column_start":1,"column_end":95}},{"value":"/","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\spin-0.9.4\\src\\lib.rs","byte_start":1410,"byte_end":1413,"line_start":37,"line_end":37,"column_start":1,"column_end":4}},{"value":"/ - [`RwLockUpgradableGuard`] supports being upgraded into a [`RwLockWriteGuard`].","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\spin-0.9.4\\src\\lib.rs","byte_start":1414,"byte_end":1498,"line_start":38,"line_end":38,"column_start":1,"column_end":85}},{"value":"/","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\spin-0.9.4\\src\\lib.rs","byte_start":1499,"byte_end":1502,"line_start":39,"line_end":39,"column_start":1,"column_end":4}},{"value":"/ - Guards support [leaking](https://doc.rust-lang.org/nomicon/leaking.html).","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\spin-0.9.4\\src\\lib.rs","byte_start":1503,"byte_end":1582,"line_start":40,"line_end":40,"column_start":1,"column_end":80}},{"value":"/","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\spin-0.9.4\\src\\lib.rs","byte_start":1583,"byte_end":1586,"line_start":41,"line_end":41,"column_start":1,"column_end":4}},{"value":"/ - [`Once`] owns the value returned by its `call_once` initializer.","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\spin-0.9.4\\src\\lib.rs","byte_start":1587,"byte_end":1657,"line_start":42,"line_end":42,"column_start":1,"column_end":71}},{"value":"/","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\spin-0.9.4\\src\\lib.rs","byte_start":1658,"byte_end":1661,"line_start":43,"line_end":43,"column_start":1,"column_end":4}},{"value":"/ - [`RwLock`] supports counting readers and writers.","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\spin-0.9.4\\src\\lib.rs","byte_start":1662,"byte_end":1717,"line_start":44,"line_end":44,"column_start":1,"column_end":56}},{"value":"/","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\spin-0.9.4\\src\\lib.rs","byte_start":1718,"byte_end":1721,"line_start":45,"line_end":45,"column_start":1,"column_end":4}},{"value":"/ Conversely, the types in this crate do not have some of the features `std::sync` has:","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\spin-0.9.4\\src\\lib.rs","byte_start":1722,"byte_end":1811,"line_start":46,"line_end":46,"column_start":1,"column_end":90}},{"value":"/","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\spin-0.9.4\\src\\lib.rs","byte_start":1812,"byte_end":1815,"line_start":47,"line_end":47,"column_start":1,"column_end":4}},{"value":"/ - Locks do not track [panic poisoning](https://doc.rust-lang.org/nomicon/poisoning.html).","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\spin-0.9.4\\src\\lib.rs","byte_start":1816,"byte_end":1909,"line_start":48,"line_end":48,"column_start":1,"column_end":94}},{"value":"/","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\spin-0.9.4\\src\\lib.rs","byte_start":1910,"byte_end":1913,"line_start":49,"line_end":49,"column_start":1,"column_end":4}},{"value":"/ ## Feature flags","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\spin-0.9.4\\src\\lib.rs","byte_start":1914,"byte_end":1934,"line_start":50,"line_end":50,"column_start":1,"column_end":21}},{"value":"/","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\spin-0.9.4\\src\\lib.rs","byte_start":1935,"byte_end":1938,"line_start":51,"line_end":51,"column_start":1,"column_end":4}},{"value":"/ The crate comes with a few feature flags that you may wish to use.","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\spin-0.9.4\\src\\lib.rs","byte_start":1939,"byte_end":2009,"line_start":52,"line_end":52,"column_start":1,"column_end":71}},{"value":"/","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\spin-0.9.4\\src\\lib.rs","byte_start":2010,"byte_end":2013,"line_start":53,"line_end":53,"column_start":1,"column_end":4}},{"value":"/ - `lock_api` enables support for [`lock_api`](https://crates.io/crates/lock_api)","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\spin-0.9.4\\src\\lib.rs","byte_start":2014,"byte_end":2098,"line_start":54,"line_end":54,"column_start":1,"column_end":85}},{"value":"/","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\spin-0.9.4\\src\\lib.rs","byte_start":2099,"byte_end":2102,"line_start":55,"line_end":55,"column_start":1,"column_end":4}},{"value":"/ - `ticket_mutex` uses a ticket lock for the implementation of `Mutex`","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\spin-0.9.4\\src\\lib.rs","byte_start":2103,"byte_end":2176,"line_start":56,"line_end":56,"column_start":1,"column_end":74}},{"value":"/","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\spin-0.9.4\\src\\lib.rs","byte_start":2177,"byte_end":2180,"line_start":57,"line_end":57,"column_start":1,"column_end":4}},{"value":"/ - `std` enables support for thread yielding instead of spinning","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\spin-0.9.4\\src\\lib.rs","byte_start":2181,"byte_end":2248,"line_start":58,"line_end":58,"column_start":1,"column_end":68}}]},{"kind":"Mod","id":{"krate":0,"index":7},"span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\spin-0.9.4\\src\\mutex.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"mutex","qualname":"::mutex","value":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\spin-0.9.4\\src\\mutex.rs","parent":null,"children":[{"krate":0,"index":8},{"krate":0,"index":113},{"krate":0,"index":114},{"krate":0,"index":117},{"krate":0,"index":120},{"krate":0,"index":121},{"krate":0,"index":124},{"krate":0,"index":125},{"krate":0,"index":128},{"krate":0,"index":131},{"krate":0,"index":132},{"krate":0,"index":135},{"krate":0,"index":136},{"krate":0,"index":138},{"krate":0,"index":141},{"krate":0,"index":144},{"krate":0,"index":148},{"krate":0,"index":151},{"krate":0,"index":154},{"krate":0,"index":158},{"krate":0,"index":163},{"krate":0,"index":167},{"krate":0,"index":175},{"krate":0,"index":179},{"krate":0,"index":183},{"krate":0,"index":187},{"krate":0,"index":191},{"krate":0,"index":195},{"krate":0,"index":199},{"krate":0,"index":204}],"decl_id":null,"docs":" Locks that have the same behaviour as a mutex.","sig":null,"attributes":[{"value":"cfg(feature = \"mutex\")","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\spin-0.9.4\\src\\lib.rs","byte_start":2688,"byte_end":2713,"line_start":77,"line_end":77,"column_start":1,"column_end":26}},{"value":"/ Locks that have the same behaviour as a mutex.","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\spin-0.9.4\\src\\mutex.rs","byte_start":8959,"byte_end":9009,"line_start":1,"line_end":1,"column_start":1,"column_end":51}},{"value":"/","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\spin-0.9.4\\src\\mutex.rs","byte_start":9010,"byte_end":9013,"line_start":2,"line_end":2,"column_start":1,"column_end":4}},{"value":"/ The [`Mutex`] in the root of the crate, can be configured using the `ticket_mutex` feature.","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\spin-0.9.4\\src\\mutex.rs","byte_start":9014,"byte_end":9109,"line_start":3,"line_end":3,"column_start":1,"column_end":96}},{"value":"/ If it's enabled, [`TicketMutex`] and [`TicketMutexGuard`] will be re-exported as [`Mutex`]","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\spin-0.9.4\\src\\mutex.rs","byte_start":9110,"byte_end":9204,"line_start":4,"line_end":4,"column_start":1,"column_end":95}},{"value":"/ and [`MutexGuard`], otherwise the [`SpinMutex`] and guard will be re-exported.","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\spin-0.9.4\\src\\mutex.rs","byte_start":9205,"byte_end":9287,"line_start":5,"line_end":5,"column_start":1,"column_end":83}},{"value":"/","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\spin-0.9.4\\src\\mutex.rs","byte_start":9288,"byte_end":9291,"line_start":6,"line_end":6,"column_start":1,"column_end":4}},{"value":"/ `ticket_mutex` is disabled by default.","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\spin-0.9.4\\src\\mutex.rs","byte_start":9292,"byte_end":9334,"line_start":7,"line_end":7,"column_start":1,"column_end":43}},{"value":"/","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\spin-0.9.4\\src\\mutex.rs","byte_start":9335,"byte_end":9338,"line_start":8,"line_end":8,"column_start":1,"column_end":4}},{"value":"/ [`Mutex`]: ../struct.Mutex.html","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\spin-0.9.4\\src\\mutex.rs","byte_start":9339,"byte_end":9374,"line_start":9,"line_end":9,"column_start":1,"column_end":36}},{"value":"/ [`MutexGuard`]: ../struct.MutexGuard.html","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\spin-0.9.4\\src\\mutex.rs","byte_start":9375,"byte_end":9420,"line_start":10,"line_end":10,"column_start":1,"column_end":46}},{"value":"/ [`TicketMutex`]: ./struct.TicketMutex.html","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\spin-0.9.4\\src\\mutex.rs","byte_start":9421,"byte_end":9467,"line_start":11,"line_end":11,"column_start":1,"column_end":47}},{"value":"/ [`TicketMutexGuard`]: ./struct.TicketMutexGuard.html","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\spin-0.9.4\\src\\mutex.rs","byte_start":9468,"byte_end":9524,"line_start":12,"line_end":12,"column_start":1,"column_end":57}},{"value":"/ [`SpinMutex`]: ./struct.SpinMutex.html","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\spin-0.9.4\\src\\mutex.rs","byte_start":9525,"byte_end":9567,"line_start":13,"line_end":13,"column_start":1,"column_end":43}},{"value":"/ [`SpinMutexGuard`]: ./struct.SpinMutexGuard.html","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\spin-0.9.4\\src\\mutex.rs","byte_start":9568,"byte_end":9620,"line_start":14,"line_end":14,"column_start":1,"column_end":53}}]},{"kind":"Mod","id":{"krate":0,"index":8},"span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\spin-0.9.4\\src\\mutex\\spin.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"spin","qualname":"::mutex::spin","value":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\spin-0.9.4\\src\\mutex\\spin.rs","parent":null,"children":[{"krate":0,"index":9},{"krate":0,"index":10},{"krate":0,"index":13},{"krate":0,"index":16},{"krate":0,"index":17},{"krate":0,"index":20},{"krate":0,"index":23},{"krate":0,"index":24},{"krate":0,"index":26},{"krate":0,"index":27},{"krate":0,"index":28},{"krate":0,"index":31},{"krate":0,"index":34},{"krate":0,"index":37},{"krate":0,"index":38},{"krate":0,"index":40},{"krate":0,"index":46},{"krate":0,"index":51},{"krate":0,"index":54},{"krate":0,"index":57},{"krate":0,"index":63},{"krate":0,"index":67},{"krate":0,"index":74},{"krate":0,"index":80},{"krate":0,"index":84},{"krate":0,"index":88},{"krate":0,"index":92},{"krate":0,"index":96},{"krate":0,"index":100},{"krate":0,"index":105},{"krate":0,"index":109}],"decl_id":null,"docs":" A naïve spinning mutex.","sig":null,"attributes":[{"value":"cfg(feature = \"spin_mutex\")","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\spin-0.9.4\\src\\mutex.rs","byte_start":9622,"byte_end":9652,"line_start":16,"line_end":16,"column_start":1,"column_end":31}},{"value":"/ A naïve spinning mutex.","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\spin-0.9.4\\src\\mutex\\spin.rs","byte_start":18390,"byte_end":18418,"line_start":1,"line_end":1,"column_start":1,"column_end":28}},{"value":"/","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\spin-0.9.4\\src\\mutex\\spin.rs","byte_start":18419,"byte_end":18422,"line_start":2,"line_end":2,"column_start":1,"column_end":4}},{"value":"/ Waiting threads hammer an atomic variable until it becomes available. Best-case latency is low, but worst-case","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\spin-0.9.4\\src\\mutex\\spin.rs","byte_start":18423,"byte_end":18537,"line_start":3,"line_end":3,"column_start":1,"column_end":115}},{"value":"/ latency is theoretically infinite.","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\spin-0.9.4\\src\\mutex\\spin.rs","byte_start":18538,"byte_end":18576,"line_start":4,"line_end":4,"column_start":1,"column_end":39}}]},{"kind":"Struct","id":{"krate":0,"index":40},"span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\spin-0.9.4\\src\\mutex\\spin.rs","byte_start":19914,"byte_end":19923,"line_start":64,"line_end":64,"column_start":12,"column_end":21},"name":"SpinMutex","qualname":"::mutex::spin::SpinMutex","value":"SpinMutex {  }","parent":null,"children":[{"krate":0,"index":43},{"krate":0,"index":44},{"krate":0,"index":45}],"decl_id":null,"docs":" A [spin lock](https://en.m.wikipedia.org/wiki/Spinlock) providing mutually exclusive access to data.","sig":null,"attributes":[{"value":"/ A [spin lock](https://en.m.wikipedia.org/wiki/Spinlock) providing mutually exclusive access to data.","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\spin-0.9.4\\src\\mutex\\spin.rs","byte_start":18754,"byte_end":18858,"line_start":17,"line_end":17,"column_start":1,"column_end":105}},{"value":"/","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\spin-0.9.4\\src\\mutex\\spin.rs","byte_start":18859,"byte_end":18862,"line_start":18,"line_end":18,"column_start":1,"column_end":4}},{"value":"/ # Example","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\spin-0.9.4\\src\\mutex\\spin.rs","byte_start":18863,"byte_end":18876,"line_start":19,"line_end":19,"column_start":1,"column_end":14}},{"value":"/","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\spin-0.9.4\\src\\mutex\\spin.rs","byte_start":18877,"byte_end":18880,"line_start":20,"line_end":20,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\spin-0.9.4\\src\\mutex\\spin.rs","byte_start":18881,"byte_end":18888,"line_start":21,"line_end":21,"column_start":1,"column_end":8}},{"value":"/ use spin;","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\spin-0.9.4\\src\\mutex\\spin.rs","byte_start":18889,"byte_end":18902,"line_start":22,"line_end":22,"column_start":1,"column_end":14}},{"value":"/","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\spin-0.9.4\\src\\mutex\\spin.rs","byte_start":18903,"byte_end":18906,"line_start":23,"line_end":23,"column_start":1,"column_end":4}},{"value":"/ let lock = spin::mutex::SpinMutex::<_>::new(0);","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\spin-0.9.4\\src\\mutex\\spin.rs","byte_start":18907,"byte_end":18958,"line_start":24,"line_end":24,"column_start":1,"column_end":52}},{"value":"/","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\spin-0.9.4\\src\\mutex\\spin.rs","byte_start":18959,"byte_end":18962,"line_start":25,"line_end":25,"column_start":1,"column_end":4}},{"value":"/ // Modify the data","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\spin-0.9.4\\src\\mutex\\spin.rs","byte_start":18963,"byte_end":18985,"line_start":26,"line_end":26,"column_start":1,"column_end":23}},{"value":"/ *lock.lock() = 2;","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\spin-0.9.4\\src\\mutex\\spin.rs","byte_start":18986,"byte_end":19007,"line_start":27,"line_end":27,"column_start":1,"column_end":22}},{"value":"/","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\spin-0.9.4\\src\\mutex\\spin.rs","byte_start":19008,"byte_end":19011,"line_start":28,"line_end":28,"column_start":1,"column_end":4}},{"value":"/ // Read the data","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\spin-0.9.4\\src\\mutex\\spin.rs","byte_start":19012,"byte_end":19032,"line_start":29,"line_end":29,"column_start":1,"column_end":21}},{"value":"/ let answer = *lock.lock();","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\spin-0.9.4\\src\\mutex\\spin.rs","byte_start":19033,"byte_end":19063,"line_start":30,"line_end":30,"column_start":1,"column_end":31}},{"value":"/ assert_eq!(answer, 2);","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\spin-0.9.4\\src\\mutex\\spin.rs","byte_start":19064,"byte_end":19090,"line_start":31,"line_end":31,"column_start":1,"column_end":27}},{"value":"/ ```","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\spin-0.9.4\\src\\mutex\\spin.rs","byte_start":19091,"byte_end":19098,"line_start":32,"line_end":32,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\spin-0.9.4\\src\\mutex\\spin.rs","byte_start":19099,"byte_end":19102,"line_start":33,"line_end":33,"column_start":1,"column_end":4}},{"value":"/ # Thread safety example","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\spin-0.9.4\\src\\mutex\\spin.rs","byte_start":19103,"byte_end":19130,"line_start":34,"line_end":34,"column_start":1,"column_end":28}},{"value":"/","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\spin-0.9.4\\src\\mutex\\spin.rs","byte_start":19131,"byte_end":19134,"line_start":35,"line_end":35,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\spin-0.9.4\\src\\mutex\\spin.rs","byte_start":19135,"byte_end":19142,"line_start":36,"line_end":36,"column_start":1,"column_end":8}},{"value":"/ use spin;","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\spin-0.9.4\\src\\mutex\\spin.rs","byte_start":19143,"byte_end":19156,"line_start":37,"line_end":37,"column_start":1,"column_end":14}},{"value":"/ use std::sync::{Arc, Barrier};","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\spin-0.9.4\\src\\mutex\\spin.rs","byte_start":19157,"byte_end":19191,"line_start":38,"line_end":38,"column_start":1,"column_end":35}},{"value":"/","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\spin-0.9.4\\src\\mutex\\spin.rs","byte_start":19192,"byte_end":19195,"line_start":39,"line_end":39,"column_start":1,"column_end":4}},{"value":"/ let thread_count = 1000;","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\spin-0.9.4\\src\\mutex\\spin.rs","byte_start":19196,"byte_end":19224,"line_start":40,"line_end":40,"column_start":1,"column_end":29}},{"value":"/ let spin_mutex = Arc::new(spin::mutex::SpinMutex::<_>::new(0));","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\spin-0.9.4\\src\\mutex\\spin.rs","byte_start":19225,"byte_end":19292,"line_start":41,"line_end":41,"column_start":1,"column_end":68}},{"value":"/","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\spin-0.9.4\\src\\mutex\\spin.rs","byte_start":19293,"byte_end":19296,"line_start":42,"line_end":42,"column_start":1,"column_end":4}},{"value":"/ // We use a barrier to ensure the readout happens after all writing","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\spin-0.9.4\\src\\mutex\\spin.rs","byte_start":19297,"byte_end":19368,"line_start":43,"line_end":43,"column_start":1,"column_end":72}},{"value":"/ let barrier = Arc::new(Barrier::new(thread_count + 1));","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\spin-0.9.4\\src\\mutex\\spin.rs","byte_start":19369,"byte_end":19428,"line_start":44,"line_end":44,"column_start":1,"column_end":60}},{"value":"/","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\spin-0.9.4\\src\\mutex\\spin.rs","byte_start":19429,"byte_end":19432,"line_start":45,"line_end":45,"column_start":1,"column_end":4}},{"value":"/ for _ in (0..thread_count) {","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\spin-0.9.4\\src\\mutex\\spin.rs","byte_start":19433,"byte_end":19465,"line_start":46,"line_end":46,"column_start":1,"column_end":33}},{"value":"/     let my_barrier = barrier.clone();","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\spin-0.9.4\\src\\mutex\\spin.rs","byte_start":19466,"byte_end":19507,"line_start":47,"line_end":47,"column_start":1,"column_end":42}},{"value":"/     let my_lock = spin_mutex.clone();","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\spin-0.9.4\\src\\mutex\\spin.rs","byte_start":19508,"byte_end":19549,"line_start":48,"line_end":48,"column_start":1,"column_end":42}},{"value":"/     std::thread::spawn(move || {","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\spin-0.9.4\\src\\mutex\\spin.rs","byte_start":19550,"byte_end":19586,"line_start":49,"line_end":49,"column_start":1,"column_end":37}},{"value":"/         let mut guard = my_lock.lock();","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\spin-0.9.4\\src\\mutex\\spin.rs","byte_start":19587,"byte_end":19630,"line_start":50,"line_end":50,"column_start":1,"column_end":44}},{"value":"/         *guard += 1;","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\spin-0.9.4\\src\\mutex\\spin.rs","byte_start":19631,"byte_end":19655,"line_start":51,"line_end":51,"column_start":1,"column_end":25}},{"value":"/","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\spin-0.9.4\\src\\mutex\\spin.rs","byte_start":19656,"byte_end":19659,"line_start":52,"line_end":52,"column_start":1,"column_end":4}},{"value":"/         // Release the lock to prevent a deadlock","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\spin-0.9.4\\src\\mutex\\spin.rs","byte_start":19660,"byte_end":19713,"line_start":53,"line_end":53,"column_start":1,"column_end":54}},{"value":"/         drop(guard);","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\spin-0.9.4\\src\\mutex\\spin.rs","byte_start":19714,"byte_end":19738,"line_start":54,"line_end":54,"column_start":1,"column_end":25}},{"value":"/         my_barrier.wait();","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\spin-0.9.4\\src\\mutex\\spin.rs","byte_start":19739,"byte_end":19769,"line_start":55,"line_end":55,"column_start":1,"column_end":31}},{"value":"/     });","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\spin-0.9.4\\src\\mutex\\spin.rs","byte_start":19770,"byte_end":19781,"line_start":56,"line_end":56,"column_start":1,"column_end":12}},{"value":"/ }","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\spin-0.9.4\\src\\mutex\\spin.rs","byte_start":19782,"byte_end":19787,"line_start":57,"line_end":57,"column_start":1,"column_end":6}},{"value":"/","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\spin-0.9.4\\src\\mutex\\spin.rs","byte_start":19788,"byte_end":19791,"line_start":58,"line_end":58,"column_start":1,"column_end":4}},{"value":"/ barrier.wait();","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\spin-0.9.4\\src\\mutex\\spin.rs","byte_start":19792,"byte_end":19811,"line_start":59,"line_end":59,"column_start":1,"column_end":20}},{"value":"/","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\spin-0.9.4\\src\\mutex\\spin.rs","byte_start":19812,"byte_end":19815,"line_start":60,"line_end":60,"column_start":1,"column_end":4}},{"value":"/ let answer = { *spin_mutex.lock() };","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\spin-0.9.4\\src\\mutex\\spin.rs","byte_start":19816,"byte_end":19856,"line_start":61,"line_end":61,"column_start":1,"column_end":41}},{"value":"/ assert_eq!(answer, thread_count);","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\spin-0.9.4\\src\\mutex\\spin.rs","byte_start":19857,"byte_end":19894,"line_start":62,"line_end":62,"column_start":1,"column_end":38}},{"value":"/ ```","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\spin-0.9.4\\src\\mutex\\spin.rs","byte_start":19895,"byte_end":19902,"line_start":63,"line_end":63,"column_start":1,"column_end":8}}]},{"kind":"Struct","id":{"krate":0,"index":46},"span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\spin-0.9.4\\src\\mutex\\spin.rs","byte_start":20163,"byte_end":20177,"line_start":73,"line_end":73,"column_start":12,"column_end":26},"name":"SpinMutexGuard","qualname":"::mutex::spin::SpinMutexGuard","value":"SpinMutexGuard {  }","parent":null,"children":[{"krate":0,"index":49},{"krate":0,"index":50}],"decl_id":null,"docs":" A guard that provides mutable data access.","sig":null,"attributes":[{"value":"/ A guard that provides mutable data access.","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\spin-0.9.4\\src\\mutex\\spin.rs","byte_start":20037,"byte_end":20083,"line_start":70,"line_end":70,"column_start":1,"column_end":47}},{"value":"/","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\spin-0.9.4\\src\\mutex\\spin.rs","byte_start":20084,"byte_end":20087,"line_start":71,"line_end":71,"column_start":1,"column_end":4}},{"value":"/ When the guard falls out of scope it will release the lock.","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\spin-0.9.4\\src\\mutex\\spin.rs","byte_start":20088,"byte_end":20151,"line_start":72,"line_end":72,"column_start":1,"column_end":64}}]},{"kind":"Method","id":{"krate":0,"index":60},"span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\spin-0.9.4\\src\\mutex\\spin.rs","byte_start":20850,"byte_end":20853,"line_start":99,"line_end":99,"column_start":18,"column_end":21},"name":"new","qualname":"<SpinMutex<T, R>>::new","value":"pub const fn new(T) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Creates a new [`SpinMutex`] wrapping the supplied data.","sig":null,"attributes":[{"value":"/ Creates a new [`SpinMutex`] wrapping the supplied data.","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\spin-0.9.4\\src\\mutex\\spin.rs","byte_start":20449,"byte_end":20508,"line_start":83,"line_end":83,"column_start":5,"column_end":64}},{"value":"/","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\spin-0.9.4\\src\\mutex\\spin.rs","byte_start":20513,"byte_end":20516,"line_start":84,"line_end":84,"column_start":5,"column_end":8}},{"value":"/ # Example","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\spin-0.9.4\\src\\mutex\\spin.rs","byte_start":20521,"byte_end":20534,"line_start":85,"line_end":85,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\spin-0.9.4\\src\\mutex\\spin.rs","byte_start":20539,"byte_end":20542,"line_start":86,"line_end":86,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\spin-0.9.4\\src\\mutex\\spin.rs","byte_start":20547,"byte_end":20554,"line_start":87,"line_end":87,"column_start":5,"column_end":12}},{"value":"/ use spin::mutex::SpinMutex;","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\spin-0.9.4\\src\\mutex\\spin.rs","byte_start":20559,"byte_end":20590,"line_start":88,"line_end":88,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\spin-0.9.4\\src\\mutex\\spin.rs","byte_start":20595,"byte_end":20598,"line_start":89,"line_end":89,"column_start":5,"column_end":8}},{"value":"/ static MUTEX: SpinMutex<()> = SpinMutex::<_>::new(());","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\spin-0.9.4\\src\\mutex\\spin.rs","byte_start":20603,"byte_end":20661,"line_start":90,"line_end":90,"column_start":5,"column_end":63}},{"value":"/","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\spin-0.9.4\\src\\mutex\\spin.rs","byte_start":20666,"byte_end":20669,"line_start":91,"line_end":91,"column_start":5,"column_end":8}},{"value":"/ fn demo() {","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\spin-0.9.4\\src\\mutex\\spin.rs","byte_start":20674,"byte_end":20689,"line_start":92,"line_end":92,"column_start":5,"column_end":20}},{"value":"/     let lock = MUTEX.lock();","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\spin-0.9.4\\src\\mutex\\spin.rs","byte_start":20694,"byte_end":20726,"line_start":93,"line_end":93,"column_start":5,"column_end":37}},{"value":"/     // do something with lock","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\spin-0.9.4\\src\\mutex\\spin.rs","byte_start":20731,"byte_end":20764,"line_start":94,"line_end":94,"column_start":5,"column_end":38}},{"value":"/     drop(lock);","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\spin-0.9.4\\src\\mutex\\spin.rs","byte_start":20769,"byte_end":20788,"line_start":95,"line_end":95,"column_start":5,"column_end":24}},{"value":"/ }","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\spin-0.9.4\\src\\mutex\\spin.rs","byte_start":20793,"byte_end":20798,"line_start":96,"line_end":96,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\spin-0.9.4\\src\\mutex\\spin.rs","byte_start":20803,"byte_end":20810,"line_start":97,"line_end":97,"column_start":5,"column_end":12}},{"value":"inline(always)","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\spin-0.9.4\\src\\mutex\\spin.rs","byte_start":20815,"byte_end":20832,"line_start":98,"line_end":98,"column_start":5,"column_end":22}}]},{"kind":"Method","id":{"krate":0,"index":61},"span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\spin-0.9.4\\src\\mutex\\spin.rs","byte_start":21287,"byte_end":21297,"line_start":116,"line_end":116,"column_start":12,"column_end":22},"name":"into_inner","qualname":"<SpinMutex<T, R>>::into_inner","value":"pub fn into_inner(Self) -> T","parent":null,"children":[],"decl_id":null,"docs":" Consumes this [`SpinMutex`] and unwraps the underlying data.","sig":null,"attributes":[{"value":"/ Consumes this [`SpinMutex`] and unwraps the underlying data.","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\spin-0.9.4\\src\\mutex\\spin.rs","byte_start":21031,"byte_end":21095,"line_start":107,"line_end":107,"column_start":5,"column_end":69}},{"value":"/","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\spin-0.9.4\\src\\mutex\\spin.rs","byte_start":21100,"byte_end":21103,"line_start":108,"line_end":108,"column_start":5,"column_end":8}},{"value":"/ # Example","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\spin-0.9.4\\src\\mutex\\spin.rs","byte_start":21108,"byte_end":21121,"line_start":109,"line_end":109,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\spin-0.9.4\\src\\mutex\\spin.rs","byte_start":21126,"byte_end":21129,"line_start":110,"line_end":110,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\spin-0.9.4\\src\\mutex\\spin.rs","byte_start":21134,"byte_end":21141,"line_start":111,"line_end":111,"column_start":5,"column_end":12}},{"value":"/ let lock = spin::mutex::SpinMutex::<_>::new(42);","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\spin-0.9.4\\src\\mutex\\spin.rs","byte_start":21146,"byte_end":21198,"line_start":112,"line_end":112,"column_start":5,"column_end":57}},{"value":"/ assert_eq!(42, lock.into_inner());","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\spin-0.9.4\\src\\mutex\\spin.rs","byte_start":21203,"byte_end":21241,"line_start":113,"line_end":113,"column_start":5,"column_end":43}},{"value":"/ ```","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\spin-0.9.4\\src\\mutex\\spin.rs","byte_start":21246,"byte_end":21253,"line_start":114,"line_end":114,"column_start":5,"column_end":12}},{"value":"inline(always)","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\spin-0.9.4\\src\\mutex\\spin.rs","byte_start":21258,"byte_end":21275,"line_start":115,"line_end":115,"column_start":5,"column_end":22}}]},{"kind":"Method","id":{"krate":0,"index":62},"span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\spin-0.9.4\\src\\mutex\\spin.rs","byte_start":22171,"byte_end":22181,"line_start":145,"line_end":145,"column_start":12,"column_end":22},"name":"as_mut_ptr","qualname":"<SpinMutex<T, R>>::as_mut_ptr","value":"pub fn as_mut_ptr(&Self) -> *mut T","parent":null,"children":[],"decl_id":null,"docs":" Returns a mutable pointer to the underlying data.","sig":null,"attributes":[{"value":"/ Returns a mutable pointer to the underlying data.","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\spin-0.9.4\\src\\mutex\\spin.rs","byte_start":21511,"byte_end":21564,"line_start":123,"line_end":123,"column_start":5,"column_end":58}},{"value":"/","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\spin-0.9.4\\src\\mutex\\spin.rs","byte_start":21569,"byte_end":21572,"line_start":124,"line_end":124,"column_start":5,"column_end":8}},{"value":"/ This is mostly meant to be used for applications which require manual unlocking, but where","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\spin-0.9.4\\src\\mutex\\spin.rs","byte_start":21577,"byte_end":21671,"line_start":125,"line_end":125,"column_start":5,"column_end":99}},{"value":"/ storing both the lock and the pointer to the inner data gets inefficient.","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\spin-0.9.4\\src\\mutex\\spin.rs","byte_start":21676,"byte_end":21753,"line_start":126,"line_end":126,"column_start":5,"column_end":82}},{"value":"/","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\spin-0.9.4\\src\\mutex\\spin.rs","byte_start":21758,"byte_end":21761,"line_start":127,"line_end":127,"column_start":5,"column_end":8}},{"value":"/ # Example","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\spin-0.9.4\\src\\mutex\\spin.rs","byte_start":21766,"byte_end":21779,"line_start":128,"line_end":128,"column_start":5,"column_end":18}},{"value":"/ ```","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\spin-0.9.4\\src\\mutex\\spin.rs","byte_start":21784,"byte_end":21791,"line_start":129,"line_end":129,"column_start":5,"column_end":12}},{"value":"/ let lock = spin::mutex::SpinMutex::<_>::new(42);","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\spin-0.9.4\\src\\mutex\\spin.rs","byte_start":21796,"byte_end":21848,"line_start":130,"line_end":130,"column_start":5,"column_end":57}},{"value":"/","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\spin-0.9.4\\src\\mutex\\spin.rs","byte_start":21853,"byte_end":21856,"line_start":131,"line_end":131,"column_start":5,"column_end":8}},{"value":"/ unsafe {","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\spin-0.9.4\\src\\mutex\\spin.rs","byte_start":21861,"byte_end":21873,"line_start":132,"line_end":132,"column_start":5,"column_end":17}},{"value":"/     core::mem::forget(lock.lock());","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\spin-0.9.4\\src\\mutex\\spin.rs","byte_start":21878,"byte_end":21917,"line_start":133,"line_end":133,"column_start":5,"column_end":44}},{"value":"/","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\spin-0.9.4\\src\\mutex\\spin.rs","byte_start":21922,"byte_end":21925,"line_start":134,"line_end":134,"column_start":5,"column_end":8}},{"value":"/     assert_eq!(lock.as_mut_ptr().read(), 42);","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\spin-0.9.4\\src\\mutex\\spin.rs","byte_start":21930,"byte_end":21979,"line_start":135,"line_end":135,"column_start":5,"column_end":54}},{"value":"/     lock.as_mut_ptr().write(58);","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\spin-0.9.4\\src\\mutex\\spin.rs","byte_start":21984,"byte_end":22020,"line_start":136,"line_end":136,"column_start":5,"column_end":41}},{"value":"/","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\spin-0.9.4\\src\\mutex\\spin.rs","byte_start":22025,"byte_end":22028,"line_start":137,"line_end":137,"column_start":5,"column_end":8}},{"value":"/     lock.force_unlock();","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\spin-0.9.4\\src\\mutex\\spin.rs","byte_start":22033,"byte_end":22061,"line_start":138,"line_end":138,"column_start":5,"column_end":33}},{"value":"/ }","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\spin-0.9.4\\src\\mutex\\spin.rs","byte_start":22066,"byte_end":22071,"line_start":139,"line_end":139,"column_start":5,"column_end":10}},{"value":"/","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\spin-0.9.4\\src\\mutex\\spin.rs","byte_start":22076,"byte_end":22079,"line_start":140,"line_end":140,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(*lock.lock(), 58);","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\spin-0.9.4\\src\\mutex\\spin.rs","byte_start":22084,"byte_end":22117,"line_start":141,"line_end":141,"column_start":5,"column_end":38}},{"value":"/","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\spin-0.9.4\\src\\mutex\\spin.rs","byte_start":22122,"byte_end":22125,"line_start":142,"line_end":142,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\spin-0.9.4\\src\\mutex\\spin.rs","byte_start":22130,"byte_end":22137,"line_start":143,"line_end":143,"column_start":5,"column_end":12}},{"value":"inline(always)","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\spin-0.9.4\\src\\mutex\\spin.rs","byte_start":22142,"byte_end":22159,"line_start":144,"line_end":144,"column_start":5,"column_end":22}}]},{"kind":"Method","id":{"krate":0,"index":66},"span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\spin-0.9.4\\src\\mutex\\spin.rs","byte_start":22862,"byte_end":22866,"line_start":166,"line_end":166,"column_start":12,"column_end":16},"name":"lock","qualname":"<SpinMutex<T, R>>::lock","value":"pub fn lock(&Self) -> SpinMutexGuard<, T>","parent":null,"children":[],"decl_id":null,"docs":" Locks the [`SpinMutex`] and returns a guard that permits access to the inner data.","sig":null,"attributes":[{"value":"/ Locks the [`SpinMutex`] and returns a guard that permits access to the inner data.","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\spin-0.9.4\\src\\mutex\\spin.rs","byte_start":22290,"byte_end":22376,"line_start":151,"line_end":151,"column_start":5,"column_end":91}},{"value":"/","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\spin-0.9.4\\src\\mutex\\spin.rs","byte_start":22381,"byte_end":22384,"line_start":152,"line_end":152,"column_start":5,"column_end":8}},{"value":"/ The returned value may be dereferenced for data access","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\spin-0.9.4\\src\\mutex\\spin.rs","byte_start":22389,"byte_end":22447,"line_start":153,"line_end":153,"column_start":5,"column_end":63}},{"value":"/ and the lock will be dropped when the guard falls out of scope.","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\spin-0.9.4\\src\\mutex\\spin.rs","byte_start":22452,"byte_end":22519,"line_start":154,"line_end":154,"column_start":5,"column_end":72}},{"value":"/","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\spin-0.9.4\\src\\mutex\\spin.rs","byte_start":22524,"byte_end":22527,"line_start":155,"line_end":155,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\spin-0.9.4\\src\\mutex\\spin.rs","byte_start":22532,"byte_end":22539,"line_start":156,"line_end":156,"column_start":5,"column_end":12}},{"value":"/ let lock = spin::mutex::SpinMutex::<_>::new(0);","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\spin-0.9.4\\src\\mutex\\spin.rs","byte_start":22544,"byte_end":22595,"line_start":157,"line_end":157,"column_start":5,"column_end":56}},{"value":"/ {","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\spin-0.9.4\\src\\mutex\\spin.rs","byte_start":22600,"byte_end":22605,"line_start":158,"line_end":158,"column_start":5,"column_end":10}},{"value":"/     let mut data = lock.lock();","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\spin-0.9.4\\src\\mutex\\spin.rs","byte_start":22610,"byte_end":22645,"line_start":159,"line_end":159,"column_start":5,"column_end":40}},{"value":"/     // The lock is now locked and the data can be accessed","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\spin-0.9.4\\src\\mutex\\spin.rs","byte_start":22650,"byte_end":22712,"line_start":160,"line_end":160,"column_start":5,"column_end":67}},{"value":"/     *data += 1;","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\spin-0.9.4\\src\\mutex\\spin.rs","byte_start":22717,"byte_end":22736,"line_start":161,"line_end":161,"column_start":5,"column_end":24}},{"value":"/     // The lock is implicitly dropped at the end of the scope","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\spin-0.9.4\\src\\mutex\\spin.rs","byte_start":22741,"byte_end":22806,"line_start":162,"line_end":162,"column_start":5,"column_end":70}},{"value":"/ }","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\spin-0.9.4\\src\\mutex\\spin.rs","byte_start":22811,"byte_end":22816,"line_start":163,"line_end":163,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\spin-0.9.4\\src\\mutex\\spin.rs","byte_start":22821,"byte_end":22828,"line_start":164,"line_end":164,"column_start":5,"column_end":12}},{"value":"inline(always)","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\spin-0.9.4\\src\\mutex\\spin.rs","byte_start":22833,"byte_end":22850,"line_start":165,"line_end":165,"column_start":5,"column_end":22}}]},{"kind":"Method","id":{"krate":0,"index":70},"span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\spin-0.9.4\\src\\mutex\\spin.rs","byte_start":23814,"byte_end":23823,"line_start":191,"line_end":191,"column_start":12,"column_end":21},"name":"is_locked","qualname":"<SpinMutex<T, R>>::is_locked","value":"pub fn is_locked(&Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Returns `true` if the lock is currently held.","sig":null,"attributes":[{"value":"/ Returns `true` if the lock is currently held.","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\spin-0.9.4\\src\\mutex\\spin.rs","byte_start":23464,"byte_end":23513,"line_start":184,"line_end":184,"column_start":5,"column_end":54}},{"value":"/","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\spin-0.9.4\\src\\mutex\\spin.rs","byte_start":23518,"byte_end":23521,"line_start":185,"line_end":185,"column_start":5,"column_end":8}},{"value":"/ # Safety","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\spin-0.9.4\\src\\mutex\\spin.rs","byte_start":23526,"byte_end":23538,"line_start":186,"line_end":186,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\spin-0.9.4\\src\\mutex\\spin.rs","byte_start":23543,"byte_end":23546,"line_start":187,"line_end":187,"column_start":5,"column_end":8}},{"value":"/ This function provides no synchronization guarantees and so its result should be considered 'out of date'","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\spin-0.9.4\\src\\mutex\\spin.rs","byte_start":23551,"byte_end":23660,"line_start":188,"line_end":188,"column_start":5,"column_end":114}},{"value":"/ the instant it is called. Do not use it for synchronization purposes. However, it may be useful as a heuristic.","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\spin-0.9.4\\src\\mutex\\spin.rs","byte_start":23665,"byte_end":23780,"line_start":189,"line_end":189,"column_start":5,"column_end":120}},{"value":"inline(always)","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\spin-0.9.4\\src\\mutex\\spin.rs","byte_start":23785,"byte_end":23802,"line_start":190,"line_end":190,"column_start":5,"column_end":22}}]},{"kind":"Method","id":{"krate":0,"index":71},"span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\spin-0.9.4\\src\\mutex\\spin.rs","byte_start":24218,"byte_end":24230,"line_start":203,"line_end":203,"column_start":19,"column_end":31},"name":"force_unlock","qualname":"<SpinMutex<T, R>>::force_unlock","value":"pub unsafe fn force_unlock(&Self)","parent":null,"children":[],"decl_id":null,"docs":" Force unlock this [`SpinMutex`].","sig":null,"attributes":[{"value":"/ Force unlock this [`SpinMutex`].","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\spin-0.9.4\\src\\mutex\\spin.rs","byte_start":23894,"byte_end":23930,"line_start":195,"line_end":195,"column_start":5,"column_end":41}},{"value":"/","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\spin-0.9.4\\src\\mutex\\spin.rs","byte_start":23935,"byte_end":23938,"line_start":196,"line_end":196,"column_start":5,"column_end":8}},{"value":"/ # Safety","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\spin-0.9.4\\src\\mutex\\spin.rs","byte_start":23943,"byte_end":23955,"line_start":197,"line_end":197,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\spin-0.9.4\\src\\mutex\\spin.rs","byte_start":23960,"byte_end":23963,"line_start":198,"line_end":198,"column_start":5,"column_end":8}},{"value":"/ This is *extremely* unsafe if the lock is not held by the current","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\spin-0.9.4\\src\\mutex\\spin.rs","byte_start":23968,"byte_end":24037,"line_start":199,"line_end":199,"column_start":5,"column_end":74}},{"value":"/ thread. However, this can be useful in some instances for exposing the","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\spin-0.9.4\\src\\mutex\\spin.rs","byte_start":24042,"byte_end":24116,"line_start":200,"line_end":200,"column_start":5,"column_end":79}},{"value":"/ lock to FFI that doesn't know how to deal with RAII.","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\spin-0.9.4\\src\\mutex\\spin.rs","byte_start":24121,"byte_end":24177,"line_start":201,"line_end":201,"column_start":5,"column_end":61}},{"value":"inline(always)","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\spin-0.9.4\\src\\mutex\\spin.rs","byte_start":24182,"byte_end":24199,"line_start":202,"line_end":202,"column_start":5,"column_end":22}}]},{"kind":"Method","id":{"krate":0,"index":72},"span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\spin-0.9.4\\src\\mutex\\spin.rs","byte_start":24773,"byte_end":24781,"line_start":222,"line_end":222,"column_start":12,"column_end":20},"name":"try_lock","qualname":"<SpinMutex<T, R>>::try_lock","value":"pub fn try_lock(&Self) -> Option<SpinMutexGuard<, T>>","parent":null,"children":[],"decl_id":null,"docs":" Try to lock this [`SpinMutex`], returning a lock guard if successful.","sig":null,"attributes":[{"value":"/ Try to lock this [`SpinMutex`], returning a lock guard if successful.","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\spin-0.9.4\\src\\mutex\\spin.rs","byte_start":24302,"byte_end":24375,"line_start":207,"line_end":207,"column_start":5,"column_end":78}},{"value":"/","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\spin-0.9.4\\src\\mutex\\spin.rs","byte_start":24380,"byte_end":24383,"line_start":208,"line_end":208,"column_start":5,"column_end":8}},{"value":"/ # Example","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\spin-0.9.4\\src\\mutex\\spin.rs","byte_start":24388,"byte_end":24401,"line_start":209,"line_end":209,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\spin-0.9.4\\src\\mutex\\spin.rs","byte_start":24406,"byte_end":24409,"line_start":210,"line_end":210,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\spin-0.9.4\\src\\mutex\\spin.rs","byte_start":24414,"byte_end":24421,"line_start":211,"line_end":211,"column_start":5,"column_end":12}},{"value":"/ let lock = spin::mutex::SpinMutex::<_>::new(42);","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\spin-0.9.4\\src\\mutex\\spin.rs","byte_start":24426,"byte_end":24478,"line_start":212,"line_end":212,"column_start":5,"column_end":57}},{"value":"/","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\spin-0.9.4\\src\\mutex\\spin.rs","byte_start":24483,"byte_end":24486,"line_start":213,"line_end":213,"column_start":5,"column_end":8}},{"value":"/ let maybe_guard = lock.try_lock();","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\spin-0.9.4\\src\\mutex\\spin.rs","byte_start":24491,"byte_end":24529,"line_start":214,"line_end":214,"column_start":5,"column_end":43}},{"value":"/ assert!(maybe_guard.is_some());","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\spin-0.9.4\\src\\mutex\\spin.rs","byte_start":24534,"byte_end":24569,"line_start":215,"line_end":215,"column_start":5,"column_end":40}},{"value":"/","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\spin-0.9.4\\src\\mutex\\spin.rs","byte_start":24574,"byte_end":24577,"line_start":216,"line_end":216,"column_start":5,"column_end":8}},{"value":"/ // `maybe_guard` is still held, so the second call fails","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\spin-0.9.4\\src\\mutex\\spin.rs","byte_start":24582,"byte_end":24642,"line_start":217,"line_end":217,"column_start":5,"column_end":65}},{"value":"/ let maybe_guard2 = lock.try_lock();","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\spin-0.9.4\\src\\mutex\\spin.rs","byte_start":24647,"byte_end":24686,"line_start":218,"line_end":218,"column_start":5,"column_end":44}},{"value":"/ assert!(maybe_guard2.is_none());","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\spin-0.9.4\\src\\mutex\\spin.rs","byte_start":24691,"byte_end":24727,"line_start":219,"line_end":219,"column_start":5,"column_end":41}},{"value":"/ ```","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\spin-0.9.4\\src\\mutex\\spin.rs","byte_start":24732,"byte_end":24739,"line_start":220,"line_end":220,"column_start":5,"column_end":12}},{"value":"inline(always)","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\spin-0.9.4\\src\\mutex\\spin.rs","byte_start":24744,"byte_end":24761,"line_start":221,"line_end":221,"column_start":5,"column_end":22}}]},{"kind":"Method","id":{"krate":0,"index":73},"span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\spin-0.9.4\\src\\mutex\\spin.rs","byte_start":25833,"byte_end":25840,"line_start":249,"line_end":249,"column_start":12,"column_end":19},"name":"get_mut","qualname":"<SpinMutex<T, R>>::get_mut","value":"pub fn get_mut(&mut Self) -> &mut T","parent":null,"children":[],"decl_id":null,"docs":" Returns a mutable reference to the underlying data.","sig":null,"attributes":[{"value":"/ Returns a mutable reference to the underlying data.","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\spin-0.9.4\\src\\mutex\\spin.rs","byte_start":25272,"byte_end":25327,"line_start":235,"line_end":235,"column_start":5,"column_end":60}},{"value":"/","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\spin-0.9.4\\src\\mutex\\spin.rs","byte_start":25332,"byte_end":25335,"line_start":236,"line_end":236,"column_start":5,"column_end":8}},{"value":"/ Since this call borrows the [`SpinMutex`] mutably, and a mutable reference is guaranteed to be exclusive in","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\spin-0.9.4\\src\\mutex\\spin.rs","byte_start":25340,"byte_end":25451,"line_start":237,"line_end":237,"column_start":5,"column_end":116}},{"value":"/ Rust, no actual locking needs to take place -- the mutable borrow statically guarantees no locks exist. As","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\spin-0.9.4\\src\\mutex\\spin.rs","byte_start":25456,"byte_end":25566,"line_start":238,"line_end":238,"column_start":5,"column_end":115}},{"value":"/ such, this is a 'zero-cost' operation.","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\spin-0.9.4\\src\\mutex\\spin.rs","byte_start":25571,"byte_end":25613,"line_start":239,"line_end":239,"column_start":5,"column_end":47}},{"value":"/","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\spin-0.9.4\\src\\mutex\\spin.rs","byte_start":25618,"byte_end":25621,"line_start":240,"line_end":240,"column_start":5,"column_end":8}},{"value":"/ # Example","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\spin-0.9.4\\src\\mutex\\spin.rs","byte_start":25626,"byte_end":25639,"line_start":241,"line_end":241,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\spin-0.9.4\\src\\mutex\\spin.rs","byte_start":25644,"byte_end":25647,"line_start":242,"line_end":242,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\spin-0.9.4\\src\\mutex\\spin.rs","byte_start":25652,"byte_end":25659,"line_start":243,"line_end":243,"column_start":5,"column_end":12}},{"value":"/ let mut lock = spin::mutex::SpinMutex::<_>::new(0);","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\spin-0.9.4\\src\\mutex\\spin.rs","byte_start":25664,"byte_end":25719,"line_start":244,"line_end":244,"column_start":5,"column_end":60}},{"value":"/ *lock.get_mut() = 10;","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\spin-0.9.4\\src\\mutex\\spin.rs","byte_start":25724,"byte_end":25749,"line_start":245,"line_end":245,"column_start":5,"column_end":30}},{"value":"/ assert_eq!(*lock.lock(), 10);","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\spin-0.9.4\\src\\mutex\\spin.rs","byte_start":25754,"byte_end":25787,"line_start":246,"line_end":246,"column_start":5,"column_end":38}},{"value":"/ ```","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\spin-0.9.4\\src\\mutex\\spin.rs","byte_start":25792,"byte_end":25799,"line_start":247,"line_end":247,"column_start":5,"column_end":12}},{"value":"inline(always)","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\spin-0.9.4\\src\\mutex\\spin.rs","byte_start":25804,"byte_end":25821,"line_start":248,"line_end":248,"column_start":5,"column_end":22}}]},{"kind":"Method","id":{"krate":0,"index":91},"span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\spin-0.9.4\\src\\mutex\\spin.rs","byte_start":27150,"byte_end":27154,"line_start":293,"line_end":293,"column_start":12,"column_end":16},"name":"leak","qualname":"<SpinMutexGuard>::leak","value":"pub fn leak(Self) -> &'a mut T","parent":null,"children":[],"decl_id":null,"docs":" Leak the lock guard, yielding a mutable reference to the underlying data.","sig":null,"attributes":[{"value":"/ Leak the lock guard, yielding a mutable reference to the underlying data.","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\spin-0.9.4\\src\\mutex\\spin.rs","byte_start":26715,"byte_end":26792,"line_start":280,"line_end":280,"column_start":5,"column_end":82}},{"value":"/","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\spin-0.9.4\\src\\mutex\\spin.rs","byte_start":26797,"byte_end":26800,"line_start":281,"line_end":281,"column_start":5,"column_end":8}},{"value":"/ Note that this function will permanently lock the original [`SpinMutex`].","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\spin-0.9.4\\src\\mutex\\spin.rs","byte_start":26805,"byte_end":26882,"line_start":282,"line_end":282,"column_start":5,"column_end":82}},{"value":"/","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\spin-0.9.4\\src\\mutex\\spin.rs","byte_start":26887,"byte_end":26890,"line_start":283,"line_end":283,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\spin-0.9.4\\src\\mutex\\spin.rs","byte_start":26895,"byte_end":26902,"line_start":284,"line_end":284,"column_start":5,"column_end":12}},{"value":"/ let mylock = spin::mutex::SpinMutex::<_>::new(0);","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\spin-0.9.4\\src\\mutex\\spin.rs","byte_start":26907,"byte_end":26960,"line_start":285,"line_end":285,"column_start":5,"column_end":58}},{"value":"/","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\spin-0.9.4\\src\\mutex\\spin.rs","byte_start":26965,"byte_end":26968,"line_start":286,"line_end":286,"column_start":5,"column_end":8}},{"value":"/ let data: &mut i32 = spin::mutex::SpinMutexGuard::leak(mylock.lock());","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\spin-0.9.4\\src\\mutex\\spin.rs","byte_start":26973,"byte_end":27047,"line_start":287,"line_end":287,"column_start":5,"column_end":79}},{"value":"/","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\spin-0.9.4\\src\\mutex\\spin.rs","byte_start":27052,"byte_end":27055,"line_start":288,"line_end":288,"column_start":5,"column_end":8}},{"value":"/ *data = 1;","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\spin-0.9.4\\src\\mutex\\spin.rs","byte_start":27060,"byte_end":27074,"line_start":289,"line_end":289,"column_start":5,"column_end":19}},{"value":"/ assert_eq!(*data, 1);","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\spin-0.9.4\\src\\mutex\\spin.rs","byte_start":27079,"byte_end":27104,"line_start":290,"line_end":290,"column_start":5,"column_end":30}},{"value":"/ ```","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\spin-0.9.4\\src\\mutex\\spin.rs","byte_start":27109,"byte_end":27116,"line_start":291,"line_end":291,"column_start":5,"column_end":12}},{"value":"inline(always)","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\spin-0.9.4\\src\\mutex\\spin.rs","byte_start":27121,"byte_end":27138,"line_start":292,"line_end":292,"column_start":5,"column_end":22}}]},{"kind":"Struct","id":{"krate":0,"index":144},"span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\spin-0.9.4\\src\\mutex.rs","byte_start":12150,"byte_end":12155,"line_start":99,"line_end":99,"column_start":12,"column_end":17},"name":"Mutex","qualname":"::mutex::Mutex","value":"Mutex {  }","parent":null,"children":[{"krate":0,"index":147}],"decl_id":null,"docs":" A spin-based lock providing mutually exclusive access to data.","sig":null,"attributes":[{"value":"/ A spin-based lock providing mutually exclusive access to data.","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\spin-0.9.4\\src\\mutex.rs","byte_start":10897,"byte_end":10963,"line_start":49,"line_end":49,"column_start":1,"column_end":67}},{"value":"/","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\spin-0.9.4\\src\\mutex.rs","byte_start":10964,"byte_end":10967,"line_start":50,"line_end":50,"column_start":1,"column_end":4}},{"value":"/ The implementation uses either a ticket mutex or a regular spin mutex depending on whether the `spin_mutex` or","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\spin-0.9.4\\src\\mutex.rs","byte_start":10968,"byte_end":11082,"line_start":51,"line_end":51,"column_start":1,"column_end":115}},{"value":"/ `ticket_mutex` feature flag is enabled.","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\spin-0.9.4\\src\\mutex.rs","byte_start":11083,"byte_end":11126,"line_start":52,"line_end":52,"column_start":1,"column_end":44}},{"value":"/","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\spin-0.9.4\\src\\mutex.rs","byte_start":11127,"byte_end":11130,"line_start":53,"line_end":53,"column_start":1,"column_end":4}},{"value":"/ # Example","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\spin-0.9.4\\src\\mutex.rs","byte_start":11131,"byte_end":11144,"line_start":54,"line_end":54,"column_start":1,"column_end":14}},{"value":"/","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\spin-0.9.4\\src\\mutex.rs","byte_start":11145,"byte_end":11148,"line_start":55,"line_end":55,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\spin-0.9.4\\src\\mutex.rs","byte_start":11149,"byte_end":11156,"line_start":56,"line_end":56,"column_start":1,"column_end":8}},{"value":"/ use spin;","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\spin-0.9.4\\src\\mutex.rs","byte_start":11157,"byte_end":11170,"line_start":57,"line_end":57,"column_start":1,"column_end":14}},{"value":"/","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\spin-0.9.4\\src\\mutex.rs","byte_start":11171,"byte_end":11174,"line_start":58,"line_end":58,"column_start":1,"column_end":4}},{"value":"/ let lock = spin::Mutex::new(0);","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\spin-0.9.4\\src\\mutex.rs","byte_start":11175,"byte_end":11210,"line_start":59,"line_end":59,"column_start":1,"column_end":36}},{"value":"/","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\spin-0.9.4\\src\\mutex.rs","byte_start":11211,"byte_end":11214,"line_start":60,"line_end":60,"column_start":1,"column_end":4}},{"value":"/ // Modify the data","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\spin-0.9.4\\src\\mutex.rs","byte_start":11215,"byte_end":11237,"line_start":61,"line_end":61,"column_start":1,"column_end":23}},{"value":"/ *lock.lock() = 2;","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\spin-0.9.4\\src\\mutex.rs","byte_start":11238,"byte_end":11259,"line_start":62,"line_end":62,"column_start":1,"column_end":22}},{"value":"/","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\spin-0.9.4\\src\\mutex.rs","byte_start":11260,"byte_end":11263,"line_start":63,"line_end":63,"column_start":1,"column_end":4}},{"value":"/ // Read the data","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\spin-0.9.4\\src\\mutex.rs","byte_start":11264,"byte_end":11284,"line_start":64,"line_end":64,"column_start":1,"column_end":21}},{"value":"/ let answer = *lock.lock();","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\spin-0.9.4\\src\\mutex.rs","byte_start":11285,"byte_end":11315,"line_start":65,"line_end":65,"column_start":1,"column_end":31}},{"value":"/ assert_eq!(answer, 2);","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\spin-0.9.4\\src\\mutex.rs","byte_start":11316,"byte_end":11342,"line_start":66,"line_end":66,"column_start":1,"column_end":27}},{"value":"/ ```","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\spin-0.9.4\\src\\mutex.rs","byte_start":11343,"byte_end":11350,"line_start":67,"line_end":67,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\spin-0.9.4\\src\\mutex.rs","byte_start":11351,"byte_end":11354,"line_start":68,"line_end":68,"column_start":1,"column_end":4}},{"value":"/ # Thread safety example","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\spin-0.9.4\\src\\mutex.rs","byte_start":11355,"byte_end":11382,"line_start":69,"line_end":69,"column_start":1,"column_end":28}},{"value":"/","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\spin-0.9.4\\src\\mutex.rs","byte_start":11383,"byte_end":11386,"line_start":70,"line_end":70,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\spin-0.9.4\\src\\mutex.rs","byte_start":11387,"byte_end":11394,"line_start":71,"line_end":71,"column_start":1,"column_end":8}},{"value":"/ use spin;","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\spin-0.9.4\\src\\mutex.rs","byte_start":11395,"byte_end":11408,"line_start":72,"line_end":72,"column_start":1,"column_end":14}},{"value":"/ use std::sync::{Arc, Barrier};","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\spin-0.9.4\\src\\mutex.rs","byte_start":11409,"byte_end":11443,"line_start":73,"line_end":73,"column_start":1,"column_end":35}},{"value":"/","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\spin-0.9.4\\src\\mutex.rs","byte_start":11444,"byte_end":11447,"line_start":74,"line_end":74,"column_start":1,"column_end":4}},{"value":"/ let thread_count = 1000;","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\spin-0.9.4\\src\\mutex.rs","byte_start":11448,"byte_end":11476,"line_start":75,"line_end":75,"column_start":1,"column_end":29}},{"value":"/ let spin_mutex = Arc::new(spin::Mutex::new(0));","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\spin-0.9.4\\src\\mutex.rs","byte_start":11477,"byte_end":11528,"line_start":76,"line_end":76,"column_start":1,"column_end":52}},{"value":"/","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\spin-0.9.4\\src\\mutex.rs","byte_start":11529,"byte_end":11532,"line_start":77,"line_end":77,"column_start":1,"column_end":4}},{"value":"/ // We use a barrier to ensure the readout happens after all writing","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\spin-0.9.4\\src\\mutex.rs","byte_start":11533,"byte_end":11604,"line_start":78,"line_end":78,"column_start":1,"column_end":72}},{"value":"/ let barrier = Arc::new(Barrier::new(thread_count + 1));","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\spin-0.9.4\\src\\mutex.rs","byte_start":11605,"byte_end":11664,"line_start":79,"line_end":79,"column_start":1,"column_end":60}},{"value":"/","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\spin-0.9.4\\src\\mutex.rs","byte_start":11665,"byte_end":11668,"line_start":80,"line_end":80,"column_start":1,"column_end":4}},{"value":"/ for _ in (0..thread_count) {","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\spin-0.9.4\\src\\mutex.rs","byte_start":11669,"byte_end":11701,"line_start":81,"line_end":81,"column_start":1,"column_end":33}},{"value":"/     let my_barrier = barrier.clone();","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\spin-0.9.4\\src\\mutex.rs","byte_start":11702,"byte_end":11743,"line_start":82,"line_end":82,"column_start":1,"column_end":42}},{"value":"/     let my_lock = spin_mutex.clone();","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\spin-0.9.4\\src\\mutex.rs","byte_start":11744,"byte_end":11785,"line_start":83,"line_end":83,"column_start":1,"column_end":42}},{"value":"/     std::thread::spawn(move || {","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\spin-0.9.4\\src\\mutex.rs","byte_start":11786,"byte_end":11822,"line_start":84,"line_end":84,"column_start":1,"column_end":37}},{"value":"/         let mut guard = my_lock.lock();","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\spin-0.9.4\\src\\mutex.rs","byte_start":11823,"byte_end":11866,"line_start":85,"line_end":85,"column_start":1,"column_end":44}},{"value":"/         *guard += 1;","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\spin-0.9.4\\src\\mutex.rs","byte_start":11867,"byte_end":11891,"line_start":86,"line_end":86,"column_start":1,"column_end":25}},{"value":"/","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\spin-0.9.4\\src\\mutex.rs","byte_start":11892,"byte_end":11895,"line_start":87,"line_end":87,"column_start":1,"column_end":4}},{"value":"/         // Release the lock to prevent a deadlock","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\spin-0.9.4\\src\\mutex.rs","byte_start":11896,"byte_end":11949,"line_start":88,"line_end":88,"column_start":1,"column_end":54}},{"value":"/         drop(guard);","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\spin-0.9.4\\src\\mutex.rs","byte_start":11950,"byte_end":11974,"line_start":89,"line_end":89,"column_start":1,"column_end":25}},{"value":"/         my_barrier.wait();","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\spin-0.9.4\\src\\mutex.rs","byte_start":11975,"byte_end":12005,"line_start":90,"line_end":90,"column_start":1,"column_end":31}},{"value":"/     });","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\spin-0.9.4\\src\\mutex.rs","byte_start":12006,"byte_end":12017,"line_start":91,"line_end":91,"column_start":1,"column_end":12}},{"value":"/ }","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\spin-0.9.4\\src\\mutex.rs","byte_start":12018,"byte_end":12023,"line_start":92,"line_end":92,"column_start":1,"column_end":6}},{"value":"/","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\spin-0.9.4\\src\\mutex.rs","byte_start":12024,"byte_end":12027,"line_start":93,"line_end":93,"column_start":1,"column_end":4}},{"value":"/ barrier.wait();","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\spin-0.9.4\\src\\mutex.rs","byte_start":12028,"byte_end":12047,"line_start":94,"line_end":94,"column_start":1,"column_end":20}},{"value":"/","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\spin-0.9.4\\src\\mutex.rs","byte_start":12048,"byte_end":12051,"line_start":95,"line_end":95,"column_start":1,"column_end":4}},{"value":"/ let answer = { *spin_mutex.lock() };","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\spin-0.9.4\\src\\mutex.rs","byte_start":12052,"byte_end":12092,"line_start":96,"line_end":96,"column_start":1,"column_end":41}},{"value":"/ assert_eq!(answer, thread_count);","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\spin-0.9.4\\src\\mutex.rs","byte_start":12093,"byte_end":12130,"line_start":97,"line_end":97,"column_start":1,"column_end":38}},{"value":"/ ```","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\spin-0.9.4\\src\\mutex.rs","byte_start":12131,"byte_end":12138,"line_start":98,"line_end":98,"column_start":1,"column_end":8}}]},{"kind":"Struct","id":{"krate":0,"index":154},"span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\spin-0.9.4\\src\\mutex.rs","byte_start":12634,"byte_end":12644,"line_start":113,"line_end":113,"column_start":12,"column_end":22},"name":"MutexGuard","qualname":"::mutex::MutexGuard","value":"MutexGuard {  }","parent":null,"children":[{"krate":0,"index":157}],"decl_id":null,"docs":" A generic guard that will protect some data access and\n uses either a ticket lock or a normal spin mutex.","sig":null,"attributes":[{"value":"/ A generic guard that will protect some data access and","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\spin-0.9.4\\src\\mutex.rs","byte_start":12326,"byte_end":12384,"line_start":106,"line_end":106,"column_start":1,"column_end":59}},{"value":"/ uses either a ticket lock or a normal spin mutex.","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\spin-0.9.4\\src\\mutex.rs","byte_start":12385,"byte_end":12438,"line_start":107,"line_end":107,"column_start":1,"column_end":54}},{"value":"/","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\spin-0.9.4\\src\\mutex.rs","byte_start":12439,"byte_end":12442,"line_start":108,"line_end":108,"column_start":1,"column_end":4}},{"value":"/ For more info see [`TicketMutexGuard`] or [`SpinMutexGuard`].","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\spin-0.9.4\\src\\mutex.rs","byte_start":12443,"byte_end":12508,"line_start":109,"line_end":109,"column_start":1,"column_end":66}},{"value":"/","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\spin-0.9.4\\src\\mutex.rs","byte_start":12509,"byte_end":12512,"line_start":110,"line_end":110,"column_start":1,"column_end":4}},{"value":"/ [`TicketMutexGuard`]: ./struct.TicketMutexGuard.html","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\spin-0.9.4\\src\\mutex.rs","byte_start":12513,"byte_end":12569,"line_start":111,"line_end":111,"column_start":1,"column_end":57}},{"value":"/ [`SpinMutexGuard`]: ./struct.SpinMutexGuard.html","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\spin-0.9.4\\src\\mutex.rs","byte_start":12570,"byte_end":12622,"line_start":112,"line_end":112,"column_start":1,"column_end":53}}]},{"kind":"Method","id":{"krate":0,"index":161},"span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\spin-0.9.4\\src\\mutex.rs","byte_start":13107,"byte_end":13110,"line_start":134,"line_end":134,"column_start":18,"column_end":21},"name":"new","qualname":"<Mutex<T, R>>::new","value":"pub const fn new(T) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Creates a new [`Mutex`] wrapping the supplied data.","sig":null,"attributes":[{"value":"/ Creates a new [`Mutex`] wrapping the supplied data.","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\spin-0.9.4\\src\\mutex.rs","byte_start":12734,"byte_end":12789,"line_start":118,"line_end":118,"column_start":5,"column_end":60}},{"value":"/","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\spin-0.9.4\\src\\mutex.rs","byte_start":12794,"byte_end":12797,"line_start":119,"line_end":119,"column_start":5,"column_end":8}},{"value":"/ # Example","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\spin-0.9.4\\src\\mutex.rs","byte_start":12802,"byte_end":12815,"line_start":120,"line_end":120,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\spin-0.9.4\\src\\mutex.rs","byte_start":12820,"byte_end":12823,"line_start":121,"line_end":121,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\spin-0.9.4\\src\\mutex.rs","byte_start":12828,"byte_end":12835,"line_start":122,"line_end":122,"column_start":5,"column_end":12}},{"value":"/ use spin::Mutex;","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\spin-0.9.4\\src\\mutex.rs","byte_start":12840,"byte_end":12860,"line_start":123,"line_end":123,"column_start":5,"column_end":25}},{"value":"/","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\spin-0.9.4\\src\\mutex.rs","byte_start":12865,"byte_end":12868,"line_start":124,"line_end":124,"column_start":5,"column_end":8}},{"value":"/ static MUTEX: Mutex<()> = Mutex::new(());","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\spin-0.9.4\\src\\mutex.rs","byte_start":12873,"byte_end":12918,"line_start":125,"line_end":125,"column_start":5,"column_end":50}},{"value":"/","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\spin-0.9.4\\src\\mutex.rs","byte_start":12923,"byte_end":12926,"line_start":126,"line_end":126,"column_start":5,"column_end":8}},{"value":"/ fn demo() {","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\spin-0.9.4\\src\\mutex.rs","byte_start":12931,"byte_end":12946,"line_start":127,"line_end":127,"column_start":5,"column_end":20}},{"value":"/     let lock = MUTEX.lock();","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\spin-0.9.4\\src\\mutex.rs","byte_start":12951,"byte_end":12983,"line_start":128,"line_end":128,"column_start":5,"column_end":37}},{"value":"/     // do something with lock","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\spin-0.9.4\\src\\mutex.rs","byte_start":12988,"byte_end":13021,"line_start":129,"line_end":129,"column_start":5,"column_end":38}},{"value":"/     drop(lock);","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\spin-0.9.4\\src\\mutex.rs","byte_start":13026,"byte_end":13045,"line_start":130,"line_end":130,"column_start":5,"column_end":24}},{"value":"/ }","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\spin-0.9.4\\src\\mutex.rs","byte_start":13050,"byte_end":13055,"line_start":131,"line_end":131,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\spin-0.9.4\\src\\mutex.rs","byte_start":13060,"byte_end":13067,"line_start":132,"line_end":132,"column_start":5,"column_end":12}},{"value":"inline(always)","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\spin-0.9.4\\src\\mutex.rs","byte_start":13072,"byte_end":13089,"line_start":133,"line_end":133,"column_start":5,"column_end":22}}]},{"kind":"Method","id":{"krate":0,"index":162},"span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\spin-0.9.4\\src\\mutex.rs","byte_start":13425,"byte_end":13435,"line_start":147,"line_end":147,"column_start":12,"column_end":22},"name":"into_inner","qualname":"<Mutex<T, R>>::into_inner","value":"pub fn into_inner(Self) -> T","parent":null,"children":[],"decl_id":null,"docs":" Consumes this [`Mutex`] and unwraps the underlying data.","sig":null,"attributes":[{"value":"/ Consumes this [`Mutex`] and unwraps the underlying data.","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\spin-0.9.4\\src\\mutex.rs","byte_start":13189,"byte_end":13249,"line_start":138,"line_end":138,"column_start":5,"column_end":65}},{"value":"/","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\spin-0.9.4\\src\\mutex.rs","byte_start":13254,"byte_end":13257,"line_start":139,"line_end":139,"column_start":5,"column_end":8}},{"value":"/ # Example","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\spin-0.9.4\\src\\mutex.rs","byte_start":13262,"byte_end":13275,"line_start":140,"line_end":140,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\spin-0.9.4\\src\\mutex.rs","byte_start":13280,"byte_end":13283,"line_start":141,"line_end":141,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\spin-0.9.4\\src\\mutex.rs","byte_start":13288,"byte_end":13295,"line_start":142,"line_end":142,"column_start":5,"column_end":12}},{"value":"/ let lock = spin::Mutex::new(42);","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\spin-0.9.4\\src\\mutex.rs","byte_start":13300,"byte_end":13336,"line_start":143,"line_end":143,"column_start":5,"column_end":41}},{"value":"/ assert_eq!(42, lock.into_inner());","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\spin-0.9.4\\src\\mutex.rs","byte_start":13341,"byte_end":13379,"line_start":144,"line_end":144,"column_start":5,"column_end":43}},{"value":"/ ```","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\spin-0.9.4\\src\\mutex.rs","byte_start":13384,"byte_end":13391,"line_start":145,"line_end":145,"column_start":5,"column_end":12}},{"value":"inline(always)","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\spin-0.9.4\\src\\mutex.rs","byte_start":13396,"byte_end":13413,"line_start":146,"line_end":146,"column_start":5,"column_end":22}}]},{"kind":"Method","id":{"krate":0,"index":166},"span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\spin-0.9.4\\src\\mutex.rs","byte_start":14094,"byte_end":14098,"line_start":168,"line_end":168,"column_start":12,"column_end":16},"name":"lock","qualname":"<Mutex<T, R>>::lock","value":"pub fn lock(&Self) -> MutexGuard<, T>","parent":null,"children":[],"decl_id":null,"docs":" Locks the [`Mutex`] and returns a guard that permits access to the inner data.","sig":null,"attributes":[{"value":"/ Locks the [`Mutex`] and returns a guard that permits access to the inner data.","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\spin-0.9.4\\src\\mutex.rs","byte_start":13542,"byte_end":13624,"line_start":153,"line_end":153,"column_start":5,"column_end":87}},{"value":"/","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\spin-0.9.4\\src\\mutex.rs","byte_start":13629,"byte_end":13632,"line_start":154,"line_end":154,"column_start":5,"column_end":8}},{"value":"/ The returned value may be dereferenced for data access","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\spin-0.9.4\\src\\mutex.rs","byte_start":13637,"byte_end":13695,"line_start":155,"line_end":155,"column_start":5,"column_end":63}},{"value":"/ and the lock will be dropped when the guard falls out of scope.","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\spin-0.9.4\\src\\mutex.rs","byte_start":13700,"byte_end":13767,"line_start":156,"line_end":156,"column_start":5,"column_end":72}},{"value":"/","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\spin-0.9.4\\src\\mutex.rs","byte_start":13772,"byte_end":13775,"line_start":157,"line_end":157,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\spin-0.9.4\\src\\mutex.rs","byte_start":13780,"byte_end":13787,"line_start":158,"line_end":158,"column_start":5,"column_end":12}},{"value":"/ let lock = spin::Mutex::new(0);","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\spin-0.9.4\\src\\mutex.rs","byte_start":13792,"byte_end":13827,"line_start":159,"line_end":159,"column_start":5,"column_end":40}},{"value":"/ {","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\spin-0.9.4\\src\\mutex.rs","byte_start":13832,"byte_end":13837,"line_start":160,"line_end":160,"column_start":5,"column_end":10}},{"value":"/     let mut data = lock.lock();","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\spin-0.9.4\\src\\mutex.rs","byte_start":13842,"byte_end":13877,"line_start":161,"line_end":161,"column_start":5,"column_end":40}},{"value":"/     // The lock is now locked and the data can be accessed","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\spin-0.9.4\\src\\mutex.rs","byte_start":13882,"byte_end":13944,"line_start":162,"line_end":162,"column_start":5,"column_end":67}},{"value":"/     *data += 1;","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\spin-0.9.4\\src\\mutex.rs","byte_start":13949,"byte_end":13968,"line_start":163,"line_end":163,"column_start":5,"column_end":24}},{"value":"/     // The lock is implicitly dropped at the end of the scope","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\spin-0.9.4\\src\\mutex.rs","byte_start":13973,"byte_end":14038,"line_start":164,"line_end":164,"column_start":5,"column_end":70}},{"value":"/ }","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\spin-0.9.4\\src\\mutex.rs","byte_start":14043,"byte_end":14048,"line_start":165,"line_end":165,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\spin-0.9.4\\src\\mutex.rs","byte_start":14053,"byte_end":14060,"line_start":166,"line_end":166,"column_start":5,"column_end":12}},{"value":"inline(always)","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\spin-0.9.4\\src\\mutex.rs","byte_start":14065,"byte_end":14082,"line_start":167,"line_end":167,"column_start":5,"column_end":22}}]},{"kind":"Method","id":{"krate":0,"index":170},"span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\spin-0.9.4\\src\\mutex.rs","byte_start":14590,"byte_end":14599,"line_start":183,"line_end":183,"column_start":12,"column_end":21},"name":"is_locked","qualname":"<Mutex<T, R>>::is_locked","value":"pub fn is_locked(&Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Returns `true` if the lock is currently held.","sig":null,"attributes":[{"value":"/ Returns `true` if the lock is currently held.","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\spin-0.9.4\\src\\mutex.rs","byte_start":14240,"byte_end":14289,"line_start":176,"line_end":176,"column_start":5,"column_end":54}},{"value":"/","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\spin-0.9.4\\src\\mutex.rs","byte_start":14294,"byte_end":14297,"line_start":177,"line_end":177,"column_start":5,"column_end":8}},{"value":"/ # Safety","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\spin-0.9.4\\src\\mutex.rs","byte_start":14302,"byte_end":14314,"line_start":178,"line_end":178,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\spin-0.9.4\\src\\mutex.rs","byte_start":14319,"byte_end":14322,"line_start":179,"line_end":179,"column_start":5,"column_end":8}},{"value":"/ This function provides no synchronization guarantees and so its result should be considered 'out of date'","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\spin-0.9.4\\src\\mutex.rs","byte_start":14327,"byte_end":14436,"line_start":180,"line_end":180,"column_start":5,"column_end":114}},{"value":"/ the instant it is called. Do not use it for synchronization purposes. However, it may be useful as a heuristic.","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\spin-0.9.4\\src\\mutex.rs","byte_start":14441,"byte_end":14556,"line_start":181,"line_end":181,"column_start":5,"column_end":120}},{"value":"inline(always)","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\spin-0.9.4\\src\\mutex.rs","byte_start":14561,"byte_end":14578,"line_start":182,"line_end":182,"column_start":5,"column_end":22}}]},{"kind":"Method","id":{"krate":0,"index":171},"span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\spin-0.9.4\\src\\mutex.rs","byte_start":14979,"byte_end":14991,"line_start":195,"line_end":195,"column_start":19,"column_end":31},"name":"force_unlock","qualname":"<Mutex<T, R>>::force_unlock","value":"pub unsafe fn force_unlock(&Self)","parent":null,"children":[],"decl_id":null,"docs":" Force unlock this [`Mutex`].","sig":null,"attributes":[{"value":"/ Force unlock this [`Mutex`].","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\spin-0.9.4\\src\\mutex.rs","byte_start":14659,"byte_end":14691,"line_start":187,"line_end":187,"column_start":5,"column_end":37}},{"value":"/","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\spin-0.9.4\\src\\mutex.rs","byte_start":14696,"byte_end":14699,"line_start":188,"line_end":188,"column_start":5,"column_end":8}},{"value":"/ # Safety","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\spin-0.9.4\\src\\mutex.rs","byte_start":14704,"byte_end":14716,"line_start":189,"line_end":189,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\spin-0.9.4\\src\\mutex.rs","byte_start":14721,"byte_end":14724,"line_start":190,"line_end":190,"column_start":5,"column_end":8}},{"value":"/ This is *extremely* unsafe if the lock is not held by the current","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\spin-0.9.4\\src\\mutex.rs","byte_start":14729,"byte_end":14798,"line_start":191,"line_end":191,"column_start":5,"column_end":74}},{"value":"/ thread. However, this can be useful in some instances for exposing the","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\spin-0.9.4\\src\\mutex.rs","byte_start":14803,"byte_end":14877,"line_start":192,"line_end":192,"column_start":5,"column_end":79}},{"value":"/ lock to FFI that doesn't know how to deal with RAII.","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\spin-0.9.4\\src\\mutex.rs","byte_start":14882,"byte_end":14938,"line_start":193,"line_end":193,"column_start":5,"column_end":61}},{"value":"inline(always)","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\spin-0.9.4\\src\\mutex.rs","byte_start":14943,"byte_end":14960,"line_start":194,"line_end":194,"column_start":5,"column_end":22}}]},{"kind":"Method","id":{"krate":0,"index":172},"span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\spin-0.9.4\\src\\mutex.rs","byte_start":15497,"byte_end":15505,"line_start":214,"line_end":214,"column_start":12,"column_end":20},"name":"try_lock","qualname":"<Mutex<T, R>>::try_lock","value":"pub fn try_lock(&Self) -> Option<MutexGuard<, T>>","parent":null,"children":[],"decl_id":null,"docs":" Try to lock this [`Mutex`], returning a lock guard if successful.","sig":null,"attributes":[{"value":"/ Try to lock this [`Mutex`], returning a lock guard if successful.","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\spin-0.9.4\\src\\mutex.rs","byte_start":15046,"byte_end":15115,"line_start":199,"line_end":199,"column_start":5,"column_end":74}},{"value":"/","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\spin-0.9.4\\src\\mutex.rs","byte_start":15120,"byte_end":15123,"line_start":200,"line_end":200,"column_start":5,"column_end":8}},{"value":"/ # Example","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\spin-0.9.4\\src\\mutex.rs","byte_start":15128,"byte_end":15141,"line_start":201,"line_end":201,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\spin-0.9.4\\src\\mutex.rs","byte_start":15146,"byte_end":15149,"line_start":202,"line_end":202,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\spin-0.9.4\\src\\mutex.rs","byte_start":15154,"byte_end":15161,"line_start":203,"line_end":203,"column_start":5,"column_end":12}},{"value":"/ let lock = spin::Mutex::new(42);","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\spin-0.9.4\\src\\mutex.rs","byte_start":15166,"byte_end":15202,"line_start":204,"line_end":204,"column_start":5,"column_end":41}},{"value":"/","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\spin-0.9.4\\src\\mutex.rs","byte_start":15207,"byte_end":15210,"line_start":205,"line_end":205,"column_start":5,"column_end":8}},{"value":"/ let maybe_guard = lock.try_lock();","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\spin-0.9.4\\src\\mutex.rs","byte_start":15215,"byte_end":15253,"line_start":206,"line_end":206,"column_start":5,"column_end":43}},{"value":"/ assert!(maybe_guard.is_some());","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\spin-0.9.4\\src\\mutex.rs","byte_start":15258,"byte_end":15293,"line_start":207,"line_end":207,"column_start":5,"column_end":40}},{"value":"/","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\spin-0.9.4\\src\\mutex.rs","byte_start":15298,"byte_end":15301,"line_start":208,"line_end":208,"column_start":5,"column_end":8}},{"value":"/ // `maybe_guard` is still held, so the second call fails","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\spin-0.9.4\\src\\mutex.rs","byte_start":15306,"byte_end":15366,"line_start":209,"line_end":209,"column_start":5,"column_end":65}},{"value":"/ let maybe_guard2 = lock.try_lock();","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\spin-0.9.4\\src\\mutex.rs","byte_start":15371,"byte_end":15410,"line_start":210,"line_end":210,"column_start":5,"column_end":44}},{"value":"/ assert!(maybe_guard2.is_none());","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\spin-0.9.4\\src\\mutex.rs","byte_start":15415,"byte_end":15451,"line_start":211,"line_end":211,"column_start":5,"column_end":41}},{"value":"/ ```","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\spin-0.9.4\\src\\mutex.rs","byte_start":15456,"byte_end":15463,"line_start":212,"line_end":212,"column_start":5,"column_end":12}},{"value":"inline(always)","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\spin-0.9.4\\src\\mutex.rs","byte_start":15468,"byte_end":15485,"line_start":213,"line_end":213,"column_start":5,"column_end":22}}]},{"kind":"Method","id":{"krate":0,"index":174},"span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\spin-0.9.4\\src\\mutex.rs","byte_start":16189,"byte_end":16196,"line_start":234,"line_end":234,"column_start":12,"column_end":19},"name":"get_mut","qualname":"<Mutex<T, R>>::get_mut","value":"pub fn get_mut(&mut Self) -> &mut T","parent":null,"children":[],"decl_id":null,"docs":" Returns a mutable reference to the underlying data.","sig":null,"attributes":[{"value":"/ Returns a mutable reference to the underlying data.","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\spin-0.9.4\\src\\mutex.rs","byte_start":15648,"byte_end":15703,"line_start":220,"line_end":220,"column_start":5,"column_end":60}},{"value":"/","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\spin-0.9.4\\src\\mutex.rs","byte_start":15708,"byte_end":15711,"line_start":221,"line_end":221,"column_start":5,"column_end":8}},{"value":"/ Since this call borrows the [`Mutex`] mutably, and a mutable reference is guaranteed to be exclusive in Rust,","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\spin-0.9.4\\src\\mutex.rs","byte_start":15716,"byte_end":15829,"line_start":222,"line_end":222,"column_start":5,"column_end":118}},{"value":"/ no actual locking needs to take place -- the mutable borrow statically guarantees no locks exist. As such,","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\spin-0.9.4\\src\\mutex.rs","byte_start":15834,"byte_end":15944,"line_start":223,"line_end":223,"column_start":5,"column_end":115}},{"value":"/ this is a 'zero-cost' operation.","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\spin-0.9.4\\src\\mutex.rs","byte_start":15949,"byte_end":15985,"line_start":224,"line_end":224,"column_start":5,"column_end":41}},{"value":"/","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\spin-0.9.4\\src\\mutex.rs","byte_start":15990,"byte_end":15993,"line_start":225,"line_end":225,"column_start":5,"column_end":8}},{"value":"/ # Example","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\spin-0.9.4\\src\\mutex.rs","byte_start":15998,"byte_end":16011,"line_start":226,"line_end":226,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\spin-0.9.4\\src\\mutex.rs","byte_start":16016,"byte_end":16019,"line_start":227,"line_end":227,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\spin-0.9.4\\src\\mutex.rs","byte_start":16024,"byte_end":16031,"line_start":228,"line_end":228,"column_start":5,"column_end":12}},{"value":"/ let mut lock = spin::Mutex::new(0);","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\spin-0.9.4\\src\\mutex.rs","byte_start":16036,"byte_end":16075,"line_start":229,"line_end":229,"column_start":5,"column_end":44}},{"value":"/ *lock.get_mut() = 10;","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\spin-0.9.4\\src\\mutex.rs","byte_start":16080,"byte_end":16105,"line_start":230,"line_end":230,"column_start":5,"column_end":30}},{"value":"/ assert_eq!(*lock.lock(), 10);","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\spin-0.9.4\\src\\mutex.rs","byte_start":16110,"byte_end":16143,"line_start":231,"line_end":231,"column_start":5,"column_end":38}},{"value":"/ ```","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\spin-0.9.4\\src\\mutex.rs","byte_start":16148,"byte_end":16155,"line_start":232,"line_end":232,"column_start":5,"column_end":12}},{"value":"inline(always)","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\spin-0.9.4\\src\\mutex.rs","byte_start":16160,"byte_end":16177,"line_start":233,"line_end":233,"column_start":5,"column_end":22}}]},{"kind":"Method","id":{"krate":0,"index":190},"span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\spin-0.9.4\\src\\mutex.rs","byte_start":17105,"byte_end":17109,"line_start":271,"line_end":271,"column_start":12,"column_end":16},"name":"leak","qualname":"<MutexGuard>::leak","value":"pub fn leak(Self) -> &'a mut T","parent":null,"children":[],"decl_id":null,"docs":" Leak the lock guard, yielding a mutable reference to the underlying data.","sig":null,"attributes":[{"value":"/ Leak the lock guard, yielding a mutable reference to the underlying data.","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\spin-0.9.4\\src\\mutex.rs","byte_start":16701,"byte_end":16778,"line_start":258,"line_end":258,"column_start":5,"column_end":82}},{"value":"/","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\spin-0.9.4\\src\\mutex.rs","byte_start":16783,"byte_end":16786,"line_start":259,"line_end":259,"column_start":5,"column_end":8}},{"value":"/ Note that this function will permanently lock the original [`Mutex`].","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\spin-0.9.4\\src\\mutex.rs","byte_start":16791,"byte_end":16864,"line_start":260,"line_end":260,"column_start":5,"column_end":78}},{"value":"/","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\spin-0.9.4\\src\\mutex.rs","byte_start":16869,"byte_end":16872,"line_start":261,"line_end":261,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\spin-0.9.4\\src\\mutex.rs","byte_start":16877,"byte_end":16884,"line_start":262,"line_end":262,"column_start":5,"column_end":12}},{"value":"/ let mylock = spin::Mutex::new(0);","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\spin-0.9.4\\src\\mutex.rs","byte_start":16889,"byte_end":16926,"line_start":263,"line_end":263,"column_start":5,"column_end":42}},{"value":"/","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\spin-0.9.4\\src\\mutex.rs","byte_start":16931,"byte_end":16934,"line_start":264,"line_end":264,"column_start":5,"column_end":8}},{"value":"/ let data: &mut i32 = spin::MutexGuard::leak(mylock.lock());","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\spin-0.9.4\\src\\mutex.rs","byte_start":16939,"byte_end":17002,"line_start":265,"line_end":265,"column_start":5,"column_end":68}},{"value":"/","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\spin-0.9.4\\src\\mutex.rs","byte_start":17007,"byte_end":17010,"line_start":266,"line_end":266,"column_start":5,"column_end":8}},{"value":"/ *data = 1;","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\spin-0.9.4\\src\\mutex.rs","byte_start":17015,"byte_end":17029,"line_start":267,"line_end":267,"column_start":5,"column_end":19}},{"value":"/ assert_eq!(*data, 1);","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\spin-0.9.4\\src\\mutex.rs","byte_start":17034,"byte_end":17059,"line_start":268,"line_end":268,"column_start":5,"column_end":30}},{"value":"/ ```","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\spin-0.9.4\\src\\mutex.rs","byte_start":17064,"byte_end":17071,"line_start":269,"line_end":269,"column_start":5,"column_end":12}},{"value":"inline(always)","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\spin-0.9.4\\src\\mutex.rs","byte_start":17076,"byte_end":17093,"line_start":270,"line_end":270,"column_start":5,"column_end":22}}]},{"kind":"Mod","id":{"krate":0,"index":208},"span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\spin-0.9.4\\src\\relax.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"relax","qualname":"::relax","value":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\spin-0.9.4\\src\\relax.rs","parent":null,"children":[{"krate":0,"index":209},{"krate":0,"index":211},{"krate":0,"index":213},{"krate":0,"index":215},{"krate":0,"index":217}],"decl_id":null,"docs":" Strategies that determine the behaviour of locks when encountering contention.\n","sig":null,"attributes":[{"value":"/ Strategies that determine the behaviour of locks when encountering contention.","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\spin-0.9.4\\src\\relax.rs","byte_start":32901,"byte_end":32983,"line_start":1,"line_end":1,"column_start":1,"column_end":83}}]},{"kind":"Trait","id":{"krate":0,"index":209},"span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\spin-0.9.4\\src\\relax.rs","byte_start":33049,"byte_end":33062,"line_start":4,"line_end":4,"column_start":11,"column_end":24},"name":"RelaxStrategy","qualname":"::relax::RelaxStrategy","value":"RelaxStrategy","parent":null,"children":[{"krate":0,"index":210}],"decl_id":null,"docs":" A trait implemented by spinning relax strategies.\n","sig":null,"attributes":[{"value":"/ A trait implemented by spinning relax strategies.","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\spin-0.9.4\\src\\relax.rs","byte_start":32985,"byte_end":33038,"line_start":3,"line_end":3,"column_start":1,"column_end":54}}]},{"kind":"Method","id":{"krate":0,"index":210},"span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\spin-0.9.4\\src\\relax.rs","byte_start":33142,"byte_end":33147,"line_start":6,"line_end":6,"column_start":8,"column_end":13},"name":"relax","qualname":"::relax::RelaxStrategy::relax","value":"pub fn relax()","parent":{"krate":0,"index":209},"children":[],"decl_id":null,"docs":" Perform the relaxing operation during a period of contention.\n","sig":null,"attributes":[{"value":"/ Perform the relaxing operation during a period of contention.","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\spin-0.9.4\\src\\relax.rs","byte_start":33069,"byte_end":33134,"line_start":5,"line_end":5,"column_start":5,"column_end":70}}]},{"kind":"Struct","id":{"krate":0,"index":211},"span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\spin-0.9.4\\src\\relax.rs","byte_start":34122,"byte_end":34126,"line_start":21,"line_end":21,"column_start":12,"column_end":16},"name":"Spin","qualname":"::relax::Spin","value":"","parent":null,"children":[],"decl_id":null,"docs":" A strategy that rapidly spins while informing the CPU that it should power down non-essential components via\n [`core::hint::spin_loop`].","sig":null,"attributes":[{"value":"/ A strategy that rapidly spins while informing the CPU that it should power down non-essential components via","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\spin-0.9.4\\src\\relax.rs","byte_start":33154,"byte_end":33266,"line_start":9,"line_end":9,"column_start":1,"column_end":113}},{"value":"/ [`core::hint::spin_loop`].","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\spin-0.9.4\\src\\relax.rs","byte_start":33267,"byte_end":33297,"line_start":10,"line_end":10,"column_start":1,"column_end":31}},{"value":"/","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\spin-0.9.4\\src\\relax.rs","byte_start":33298,"byte_end":33301,"line_start":11,"line_end":11,"column_start":1,"column_end":4}},{"value":"/ Note that spinning is a 'dumb' strategy and most schedulers cannot correctly differentiate it from useful work,","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\spin-0.9.4\\src\\relax.rs","byte_start":33302,"byte_end":33417,"line_start":12,"line_end":12,"column_start":1,"column_end":116}},{"value":"/ thereby misallocating even more CPU time to the spinning process. This is known as","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\spin-0.9.4\\src\\relax.rs","byte_start":33418,"byte_end":33504,"line_start":13,"line_end":13,"column_start":1,"column_end":87}},{"value":"/ ['priority inversion'](https://matklad.github.io/2020/01/02/spinlocks-considered-harmful.html).","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\spin-0.9.4\\src\\relax.rs","byte_start":33505,"byte_end":33604,"line_start":14,"line_end":14,"column_start":1,"column_end":100}},{"value":"/","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\spin-0.9.4\\src\\relax.rs","byte_start":33605,"byte_end":33608,"line_start":15,"line_end":15,"column_start":1,"column_end":4}},{"value":"/ If you see signs that priority inversion is occurring, consider switching to [`Yield`] or, even better, not using a","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\spin-0.9.4\\src\\relax.rs","byte_start":33609,"byte_end":33728,"line_start":16,"line_end":16,"column_start":1,"column_end":120}},{"value":"/ spinlock at all and opting for a proper scheduler-aware lock. Remember also that different targets, operating","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\spin-0.9.4\\src\\relax.rs","byte_start":33729,"byte_end":33842,"line_start":17,"line_end":17,"column_start":1,"column_end":114}},{"value":"/ systems, schedulers, and even the same scheduler with different workloads will exhibit different behaviour. Just","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\spin-0.9.4\\src\\relax.rs","byte_start":33843,"byte_end":33959,"line_start":18,"line_end":18,"column_start":1,"column_end":117}},{"value":"/ because priority inversion isn't occurring in your tests does not mean that it will not occur. Use a scheduler-","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\spin-0.9.4\\src\\relax.rs","byte_start":33960,"byte_end":34075,"line_start":19,"line_end":19,"column_start":1,"column_end":116}},{"value":"/ aware lock if at all possible.","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\spin-0.9.4\\src\\relax.rs","byte_start":34076,"byte_end":34110,"line_start":20,"line_end":20,"column_start":1,"column_end":35}}]},{"kind":"Struct","id":{"krate":0,"index":215},"span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\spin-0.9.4\\src\\relax.rs","byte_start":35335,"byte_end":35339,"line_start":53,"line_end":53,"column_start":12,"column_end":16},"name":"Loop","qualname":"::relax::Loop","value":"","parent":null,"children":[],"decl_id":null,"docs":" A strategy that rapidly spins, without telling the CPU to do any powering down.","sig":null,"attributes":[{"value":"/ A strategy that rapidly spins, without telling the CPU to do any powering down.","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\spin-0.9.4\\src\\relax.rs","byte_start":34939,"byte_end":35022,"line_start":48,"line_end":48,"column_start":1,"column_end":84}},{"value":"/","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\spin-0.9.4\\src\\relax.rs","byte_start":35023,"byte_end":35026,"line_start":49,"line_end":49,"column_start":1,"column_end":4}},{"value":"/ You almost certainly do not want to use this. Use [`Spin`] instead. It exists for completeness and for targets","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\spin-0.9.4\\src\\relax.rs","byte_start":35027,"byte_end":35141,"line_start":50,"line_end":50,"column_start":1,"column_end":115}},{"value":"/ that, for some reason, miscompile or do not support spin hint intrinsics despite attempting to generate code for","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\spin-0.9.4\\src\\relax.rs","byte_start":35142,"byte_end":35258,"line_start":51,"line_end":51,"column_start":1,"column_end":117}},{"value":"/ them (i.e: this is a workaround for possible compiler bugs).","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\spin-0.9.4\\src\\relax.rs","byte_start":35259,"byte_end":35323,"line_start":52,"line_end":52,"column_start":1,"column_end":65}}]},{"kind":"Type","id":{"krate":0,"index":229},"span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\spin-0.9.4\\src\\lib.rs","byte_start":4972,"byte_end":4977,"line_start":125,"line_end":125,"column_start":10,"column_end":15},"name":"Mutex","qualname":"::Mutex","value":"crate::mutex::Mutex<T>","parent":null,"children":[],"decl_id":null,"docs":" A primitive that synchronizes the execution of multiple threads. See [`mutex::Mutex`] for documentation.","sig":null,"attributes":[{"value":"/ A primitive that synchronizes the execution of multiple threads. See [`mutex::Mutex`] for documentation.","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\spin-0.9.4\\src\\lib.rs","byte_start":4562,"byte_end":4670,"line_start":119,"line_end":119,"column_start":1,"column_end":109}},{"value":"/","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\spin-0.9.4\\src\\lib.rs","byte_start":4671,"byte_end":4674,"line_start":120,"line_end":120,"column_start":1,"column_end":4}},{"value":"/ A note for advanced users: this alias exists to avoid subtle type inference errors due to the default relax","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\spin-0.9.4\\src\\lib.rs","byte_start":4675,"byte_end":4786,"line_start":121,"line_end":121,"column_start":1,"column_end":112}},{"value":"/ strategy type parameter. If you need a non-default relax strategy, use the fully-qualified path.","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\spin-0.9.4\\src\\lib.rs","byte_start":4787,"byte_end":4887,"line_start":122,"line_end":122,"column_start":1,"column_end":101}},{"value":"cfg(feature = \"mutex\")","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\spin-0.9.4\\src\\lib.rs","byte_start":4888,"byte_end":4913,"line_start":123,"line_end":123,"column_start":1,"column_end":26}}]}],"impls":[{"id":0,"kind":"Direct","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\spin-0.9.4\\src\\mutex\\spin.rs","byte_start":20335,"byte_end":20344,"line_start":79,"line_end":79,"column_start":43,"column_end":52},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":1,"kind":"Direct","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\spin-0.9.4\\src\\mutex\\spin.rs","byte_start":20396,"byte_end":20405,"line_start":80,"line_end":80,"column_start":43,"column_end":52},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":2,"kind":"Inherent","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\spin-0.9.4\\src\\mutex\\spin.rs","byte_start":20427,"byte_end":20436,"line_start":82,"line_end":82,"column_start":12,"column_end":21},"value":"","parent":null,"children":[{"krate":0,"index":60},{"krate":0,"index":61},{"krate":0,"index":62}],"docs":"","sig":null,"attributes":[]},{"id":3,"kind":"Inherent","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\spin-0.9.4\\src\\mutex\\spin.rs","byte_start":22268,"byte_end":22277,"line_start":150,"line_end":150,"column_start":35,"column_end":44},"value":"","parent":null,"children":[{"krate":0,"index":66}],"docs":"","sig":null,"attributes":[]},{"id":4,"kind":"Inherent","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\spin-0.9.4\\src\\mutex\\spin.rs","byte_start":23442,"byte_end":23451,"line_start":183,"line_end":183,"column_start":20,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":70},{"krate":0,"index":71},{"krate":0,"index":72},{"krate":0,"index":73}],"docs":"","sig":null,"attributes":[]},{"id":5,"kind":"Direct","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\spin-0.9.4\\src\\mutex\\spin.rs","byte_start":26092,"byte_end":26101,"line_start":256,"line_end":256,"column_start":48,"column_end":57},"value":"","parent":null,"children":[{"krate":0,"index":77}],"docs":"","sig":null,"attributes":[]},{"id":6,"kind":"Direct","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\spin-0.9.4\\src\\mutex\\spin.rs","byte_start":26470,"byte_end":26479,"line_start":267,"line_end":267,"column_start":42,"column_end":51},"value":"","parent":null,"children":[{"krate":0,"index":83}],"docs":"","sig":null,"attributes":[]},{"id":7,"kind":"Direct","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\spin-0.9.4\\src\\mutex\\spin.rs","byte_start":26585,"byte_end":26594,"line_start":273,"line_end":273,"column_start":24,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":87}],"docs":"","sig":null,"attributes":[]},{"id":8,"kind":"Inherent","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\spin-0.9.4\\src\\mutex\\spin.rs","byte_start":26687,"byte_end":26701,"line_start":279,"line_end":279,"column_start":21,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":91}],"docs":"","sig":null,"attributes":[]},{"id":9,"kind":"Direct","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\spin-0.9.4\\src\\mutex\\spin.rs","byte_start":27406,"byte_end":27420,"line_start":300,"line_end":300,"column_start":49,"column_end":63},"value":"","parent":null,"children":[{"krate":0,"index":95}],"docs":"","sig":null,"attributes":[]},{"id":10,"kind":"Direct","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\spin-0.9.4\\src\\mutex\\spin.rs","byte_start":27586,"byte_end":27600,"line_start":306,"line_end":306,"column_start":53,"column_end":67},"value":"","parent":null,"children":[{"krate":0,"index":99}],"docs":"","sig":null,"attributes":[]},{"id":11,"kind":"Direct","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\spin-0.9.4\\src\\mutex\\spin.rs","byte_start":27746,"byte_end":27760,"line_start":312,"line_end":312,"column_start":31,"column_end":45},"value":"","parent":null,"children":[{"krate":0,"index":103},{"krate":0,"index":104}],"docs":"","sig":null,"attributes":[]},{"id":12,"kind":"Direct","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\spin-0.9.4\\src\\mutex\\spin.rs","byte_start":27879,"byte_end":27893,"line_start":319,"line_end":319,"column_start":34,"column_end":48},"value":"","parent":null,"children":[{"krate":0,"index":108}],"docs":"","sig":null,"attributes":[]},{"id":13,"kind":"Direct","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\spin-0.9.4\\src\\mutex\\spin.rs","byte_start":27999,"byte_end":28013,"line_start":325,"line_end":325,"column_start":30,"column_end":44},"value":"","parent":null,"children":[{"krate":0,"index":112}],"docs":"","sig":null,"attributes":[]},{"id":14,"kind":"Direct","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\spin-0.9.4\\src\\mutex.rs","byte_start":12253,"byte_end":12258,"line_start":103,"line_end":103,"column_start":43,"column_end":48},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":15,"kind":"Direct","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\spin-0.9.4\\src\\mutex.rs","byte_start":12310,"byte_end":12315,"line_start":104,"line_end":104,"column_start":43,"column_end":48},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":16,"kind":"Inherent","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\spin-0.9.4\\src\\mutex.rs","byte_start":12716,"byte_end":12721,"line_start":117,"line_end":117,"column_start":12,"column_end":17},"value":"","parent":null,"children":[{"krate":0,"index":161},{"krate":0,"index":162}],"docs":"","sig":null,"attributes":[]},{"id":17,"kind":"Inherent","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\spin-0.9.4\\src\\mutex.rs","byte_start":13524,"byte_end":13529,"line_start":152,"line_end":152,"column_start":35,"column_end":40},"value":"","parent":null,"children":[{"krate":0,"index":166}],"docs":"","sig":null,"attributes":[]},{"id":18,"kind":"Inherent","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\spin-0.9.4\\src\\mutex.rs","byte_start":14222,"byte_end":14227,"line_start":175,"line_end":175,"column_start":20,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":170},{"krate":0,"index":171},{"krate":0,"index":172},{"krate":0,"index":174}],"docs":"","sig":null,"attributes":[]},{"id":19,"kind":"Direct","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\spin-0.9.4\\src\\mutex.rs","byte_start":16305,"byte_end":16310,"line_start":239,"line_end":239,"column_start":48,"column_end":53},"value":"","parent":null,"children":[{"krate":0,"index":178}],"docs":"","sig":null,"attributes":[]},{"id":20,"kind":"Direct","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\spin-0.9.4\\src\\mutex.rs","byte_start":16468,"byte_end":16473,"line_start":245,"line_end":245,"column_start":42,"column_end":47},"value":"","parent":null,"children":[{"krate":0,"index":182}],"docs":"","sig":null,"attributes":[]},{"id":21,"kind":"Direct","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\spin-0.9.4\\src\\mutex.rs","byte_start":16579,"byte_end":16584,"line_start":251,"line_end":251,"column_start":24,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":186}],"docs":"","sig":null,"attributes":[]},{"id":22,"kind":"Inherent","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\spin-0.9.4\\src\\mutex.rs","byte_start":16677,"byte_end":16687,"line_start":257,"line_end":257,"column_start":21,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":190}],"docs":"","sig":null,"attributes":[]},{"id":23,"kind":"Direct","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\spin-0.9.4\\src\\mutex.rs","byte_start":17236,"byte_end":17246,"line_start":276,"line_end":276,"column_start":49,"column_end":59},"value":"","parent":null,"children":[{"krate":0,"index":194}],"docs":"","sig":null,"attributes":[]},{"id":24,"kind":"Direct","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\spin-0.9.4\\src\\mutex.rs","byte_start":17412,"byte_end":17422,"line_start":282,"line_end":282,"column_start":53,"column_end":63},"value":"","parent":null,"children":[{"krate":0,"index":198}],"docs":"","sig":null,"attributes":[]},{"id":25,"kind":"Direct","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\spin-0.9.4\\src\\mutex.rs","byte_start":17568,"byte_end":17578,"line_start":288,"line_end":288,"column_start":31,"column_end":41},"value":"","parent":null,"children":[{"krate":0,"index":202},{"krate":0,"index":203}],"docs":"","sig":null,"attributes":[]},{"id":26,"kind":"Direct","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\spin-0.9.4\\src\\mutex.rs","byte_start":17700,"byte_end":17710,"line_start":295,"line_end":295,"column_start":34,"column_end":44},"value":"","parent":null,"children":[{"krate":0,"index":207}],"docs":"","sig":null,"attributes":[]},{"id":27,"kind":"Direct","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\spin-0.9.4\\src\\relax.rs","byte_start":34152,"byte_end":34156,"line_start":23,"line_end":23,"column_start":24,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":214}],"docs":"","sig":null,"attributes":[]},{"id":28,"kind":"Direct","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\spin-0.9.4\\src\\relax.rs","byte_start":35365,"byte_end":35369,"line_start":55,"line_end":55,"column_start":24,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":218}],"docs":"","sig":null,"attributes":[]}],"refs":[{"kind":"Mod","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\spin-0.9.4\\src\\lib.rs","byte_start":2771,"byte_end":2776,"line_start":79,"line_end":79,"column_start":9,"column_end":14},"ref_id":{"krate":0,"index":7}},{"kind":"Mod","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\spin-0.9.4\\src\\mutex.rs","byte_start":9715,"byte_end":9719,"line_start":18,"line_end":18,"column_start":9,"column_end":13},"ref_id":{"krate":0,"index":8}},{"kind":"Mod","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\spin-0.9.4\\src\\lib.rs","byte_start":2966,"byte_end":2971,"line_start":86,"line_end":86,"column_start":9,"column_end":14},"ref_id":{"krate":0,"index":208}}],"macro_refs":[],"relations":[{"span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\spin-0.9.4\\src\\mutex\\spin.rs","byte_start":20335,"byte_end":20344,"line_start":79,"line_end":79,"column_start":43,"column_end":52},"kind":{"Impl":{"id":0}},"from":{"krate":0,"index":40},"to":{"krate":1,"index":3069}},{"span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\spin-0.9.4\\src\\mutex\\spin.rs","byte_start":20396,"byte_end":20405,"line_start":80,"line_end":80,"column_start":43,"column_end":52},"kind":{"Impl":{"id":1}},"from":{"krate":0,"index":40},"to":{"krate":1,"index":3057}},{"span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\spin-0.9.4\\src\\mutex\\spin.rs","byte_start":20427,"byte_end":20436,"line_start":82,"line_end":82,"column_start":12,"column_end":21},"kind":{"Impl":{"id":2}},"from":{"krate":0,"index":40},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\spin-0.9.4\\src\\mutex\\spin.rs","byte_start":22268,"byte_end":22277,"line_start":150,"line_end":150,"column_start":35,"column_end":44},"kind":{"Impl":{"id":3}},"from":{"krate":0,"index":40},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\spin-0.9.4\\src\\mutex\\spin.rs","byte_start":23442,"byte_end":23451,"line_start":183,"line_end":183,"column_start":20,"column_end":29},"kind":{"Impl":{"id":4}},"from":{"krate":0,"index":40},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\spin-0.9.4\\src\\mutex\\spin.rs","byte_start":26092,"byte_end":26101,"line_start":256,"line_end":256,"column_start":48,"column_end":57},"kind":{"Impl":{"id":5}},"from":{"krate":0,"index":40},"to":{"krate":1,"index":9685}},{"span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\spin-0.9.4\\src\\mutex\\spin.rs","byte_start":26470,"byte_end":26479,"line_start":267,"line_end":267,"column_start":42,"column_end":51},"kind":{"Impl":{"id":6}},"from":{"krate":0,"index":40},"to":{"krate":1,"index":3035}},{"span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\spin-0.9.4\\src\\mutex\\spin.rs","byte_start":26585,"byte_end":26594,"line_start":273,"line_end":273,"column_start":24,"column_end":33},"kind":{"Impl":{"id":7}},"from":{"krate":0,"index":40},"to":{"krate":1,"index":2963}},{"span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\spin-0.9.4\\src\\mutex\\spin.rs","byte_start":26687,"byte_end":26701,"line_start":279,"line_end":279,"column_start":21,"column_end":35},"kind":{"Impl":{"id":8}},"from":{"krate":0,"index":46},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\spin-0.9.4\\src\\mutex\\spin.rs","byte_start":27406,"byte_end":27420,"line_start":300,"line_end":300,"column_start":49,"column_end":63},"kind":{"Impl":{"id":9}},"from":{"krate":0,"index":46},"to":{"krate":1,"index":9685}},{"span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\spin-0.9.4\\src\\mutex\\spin.rs","byte_start":27586,"byte_end":27600,"line_start":306,"line_end":306,"column_start":53,"column_end":67},"kind":{"Impl":{"id":10}},"from":{"krate":0,"index":46},"to":{"krate":1,"index":9692}},{"span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\spin-0.9.4\\src\\mutex\\spin.rs","byte_start":27746,"byte_end":27760,"line_start":312,"line_end":312,"column_start":31,"column_end":45},"kind":{"Impl":{"id":11}},"from":{"krate":0,"index":46},"to":{"krate":1,"index":3276}},{"span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\spin-0.9.4\\src\\mutex\\spin.rs","byte_start":27879,"byte_end":27893,"line_start":319,"line_end":319,"column_start":34,"column_end":48},"kind":{"Impl":{"id":12}},"from":{"krate":0,"index":46},"to":{"krate":1,"index":3289}},{"span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\spin-0.9.4\\src\\mutex\\spin.rs","byte_start":27999,"byte_end":28013,"line_start":325,"line_end":325,"column_start":30,"column_end":44},"kind":{"Impl":{"id":13}},"from":{"krate":0,"index":46},"to":{"krate":1,"index":3300}},{"span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\spin-0.9.4\\src\\mutex.rs","byte_start":12253,"byte_end":12258,"line_start":103,"line_end":103,"column_start":43,"column_end":48},"kind":{"Impl":{"id":14}},"from":{"krate":0,"index":144},"to":{"krate":1,"index":3069}},{"span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\spin-0.9.4\\src\\mutex.rs","byte_start":12310,"byte_end":12315,"line_start":104,"line_end":104,"column_start":43,"column_end":48},"kind":{"Impl":{"id":15}},"from":{"krate":0,"index":144},"to":{"krate":1,"index":3057}},{"span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\spin-0.9.4\\src\\mutex.rs","byte_start":12716,"byte_end":12721,"line_start":117,"line_end":117,"column_start":12,"column_end":17},"kind":{"Impl":{"id":16}},"from":{"krate":0,"index":144},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\spin-0.9.4\\src\\mutex.rs","byte_start":13524,"byte_end":13529,"line_start":152,"line_end":152,"column_start":35,"column_end":40},"kind":{"Impl":{"id":17}},"from":{"krate":0,"index":144},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\spin-0.9.4\\src\\mutex.rs","byte_start":14222,"byte_end":14227,"line_start":175,"line_end":175,"column_start":20,"column_end":25},"kind":{"Impl":{"id":18}},"from":{"krate":0,"index":144},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\spin-0.9.4\\src\\mutex.rs","byte_start":16305,"byte_end":16310,"line_start":239,"line_end":239,"column_start":48,"column_end":53},"kind":{"Impl":{"id":19}},"from":{"krate":0,"index":144},"to":{"krate":1,"index":9685}},{"span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\spin-0.9.4\\src\\mutex.rs","byte_start":16468,"byte_end":16473,"line_start":245,"line_end":245,"column_start":42,"column_end":47},"kind":{"Impl":{"id":20}},"from":{"krate":0,"index":144},"to":{"krate":1,"index":3035}},{"span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\spin-0.9.4\\src\\mutex.rs","byte_start":16579,"byte_end":16584,"line_start":251,"line_end":251,"column_start":24,"column_end":29},"kind":{"Impl":{"id":21}},"from":{"krate":0,"index":144},"to":{"krate":1,"index":2963}},{"span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\spin-0.9.4\\src\\mutex.rs","byte_start":16677,"byte_end":16687,"line_start":257,"line_end":257,"column_start":21,"column_end":31},"kind":{"Impl":{"id":22}},"from":{"krate":0,"index":154},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\spin-0.9.4\\src\\mutex.rs","byte_start":17236,"byte_end":17246,"line_start":276,"line_end":276,"column_start":49,"column_end":59},"kind":{"Impl":{"id":23}},"from":{"krate":0,"index":154},"to":{"krate":1,"index":9685}},{"span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\spin-0.9.4\\src\\mutex.rs","byte_start":17412,"byte_end":17422,"line_start":282,"line_end":282,"column_start":53,"column_end":63},"kind":{"Impl":{"id":24}},"from":{"krate":0,"index":154},"to":{"krate":1,"index":9692}},{"span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\spin-0.9.4\\src\\mutex.rs","byte_start":17568,"byte_end":17578,"line_start":288,"line_end":288,"column_start":31,"column_end":41},"kind":{"Impl":{"id":25}},"from":{"krate":0,"index":154},"to":{"krate":1,"index":3276}},{"span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\spin-0.9.4\\src\\mutex.rs","byte_start":17700,"byte_end":17710,"line_start":295,"line_end":295,"column_start":34,"column_end":44},"kind":{"Impl":{"id":26}},"from":{"krate":0,"index":154},"to":{"krate":1,"index":3289}},{"span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\spin-0.9.4\\src\\relax.rs","byte_start":34152,"byte_end":34156,"line_start":23,"line_end":23,"column_start":24,"column_end":28},"kind":{"Impl":{"id":27}},"from":{"krate":0,"index":211},"to":{"krate":0,"index":209}},{"span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\spin-0.9.4\\src\\relax.rs","byte_start":35365,"byte_end":35369,"line_start":55,"line_end":55,"column_start":24,"column_end":28},"kind":{"Impl":{"id":28}},"from":{"krate":0,"index":215},"to":{"krate":0,"index":209}}]}