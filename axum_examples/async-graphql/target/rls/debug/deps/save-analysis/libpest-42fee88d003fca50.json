{"config":{"output_file":null,"full_docs":false,"pub_only":true,"reachable_only":true,"distro_crate":false,"signatures":false,"borrow_data":false},"version":"0.19.1","compilation":{"directory":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pest-2.2.1","program":"C:\\Users\\admin\\.rustup\\toolchains\\stable-x86_64-pc-windows-msvc\\bin\\rls.exe","arguments":["--crate-name","pest","--edition=2018","C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pest-2.2.1\\src\\lib.rs","--json=diagnostic-rendered-ansi,artifacts,future-incompat","--crate-type","lib","--emit=dep-info,metadata,link","-C","embed-bitcode=no","-C","debuginfo=2","--cfg","feature=\"default\"","--cfg","feature=\"std\"","--cfg","feature=\"thiserror\"","-C","metadata=42fee88d003fca50","-C","extra-filename=-42fee88d003fca50","--out-dir","f:\\sea-orm-demo\\axum_examples\\async-graphql\\target\\rls\\debug\\deps","-L","dependency=f:\\sea-orm-demo\\axum_examples\\async-graphql\\target\\rls\\debug\\deps","--extern","thiserror=f:\\sea-orm-demo\\axum_examples\\async-graphql\\target\\rls\\debug\\deps\\libthiserror-6233eb4863c65df8.rmeta","--extern","ucd_trie=f:\\sea-orm-demo\\axum_examples\\async-graphql\\target\\rls\\debug\\deps\\libucd_trie-36fd5f480c2ecec0.rmeta","--cap-lints","allow","--error-format=json","--sysroot","C:\\Users\\admin\\.rustup/toolchains/stable-x86_64-pc-windows-msvc"],"output":"f:\\sea-orm-demo\\axum_examples\\async-graphql\\target\\rls\\debug\\deps\\libpest-42fee88d003fca50.rmeta"},"prelude":{"crate_id":{"name":"pest","disambiguator":[11517885792441335486,0]},"crate_root":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pest-2.2.1\\src","external_crates":[{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pest-2.2.1\\src\\lib.rs","num":1,"id":{"name":"core","disambiguator":[1507510987272037120,0]}},{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pest-2.2.1\\src\\lib.rs","num":2,"id":{"name":"compiler_builtins","disambiguator":[3803325750332457499,0]}},{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pest-2.2.1\\src\\lib.rs","num":3,"id":{"name":"rustc_std_workspace_core","disambiguator":[4223354511651166533,0]}},{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pest-2.2.1\\src\\lib.rs","num":4,"id":{"name":"alloc","disambiguator":[15700094508901508366,0]}},{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pest-2.2.1\\src\\lib.rs","num":5,"id":{"name":"std","disambiguator":[13015713666403456114,0]}},{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pest-2.2.1\\src\\lib.rs","num":6,"id":{"name":"libc","disambiguator":[12632183332710247155,0]}},{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pest-2.2.1\\src\\lib.rs","num":7,"id":{"name":"unwind","disambiguator":[18262169243471273054,0]}},{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pest-2.2.1\\src\\lib.rs","num":8,"id":{"name":"cfg_if","disambiguator":[15664785966706829415,0]}},{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pest-2.2.1\\src\\lib.rs","num":9,"id":{"name":"miniz_oxide","disambiguator":[3895343934390880989,0]}},{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pest-2.2.1\\src\\lib.rs","num":10,"id":{"name":"rustc_std_workspace_alloc","disambiguator":[1841993658411810574,0]}},{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pest-2.2.1\\src\\lib.rs","num":11,"id":{"name":"adler","disambiguator":[1117248029108287081,0]}},{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pest-2.2.1\\src\\lib.rs","num":12,"id":{"name":"hashbrown","disambiguator":[14646112292732085519,0]}},{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pest-2.2.1\\src\\lib.rs","num":13,"id":{"name":"std_detect","disambiguator":[11979428506951486581,0]}},{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pest-2.2.1\\src\\lib.rs","num":14,"id":{"name":"rustc_demangle","disambiguator":[2104796995944127881,0]}},{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pest-2.2.1\\src\\lib.rs","num":15,"id":{"name":"panic_unwind","disambiguator":[4084207378877276393,0]}},{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pest-2.2.1\\src\\lib.rs","num":16,"id":{"name":"ucd_trie","disambiguator":[9478197013699307798,0]}},{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pest-2.2.1\\src\\error.rs","num":17,"id":{"name":"thiserror","disambiguator":[12533433158700258579,0]}},{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pest-2.2.1\\src\\error.rs","num":18,"id":{"name":"thiserror_impl","disambiguator":[15055098114464983270,0]}}],"span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pest-2.2.1\\src\\lib.rs","byte_start":406,"byte_end":3531,"line_start":9,"line_end":107,"column_start":1,"column_end":58}},"imports":[{"kind":"Use","ref_id":{"krate":0,"index":433},"span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pest-2.2.1\\src\\lib.rs","byte_start":2643,"byte_end":2649,"line_start":77,"line_end":77,"column_start":24,"column_end":30},"alias_span":null,"name":"Parser","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":484},"span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pest-2.2.1\\src\\lib.rs","byte_start":2681,"byte_end":2686,"line_start":78,"line_end":78,"column_start":31,"column_end":36},"alias_span":null,"name":"state","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":926},"span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pest-2.2.1\\src\\lib.rs","byte_start":2688,"byte_end":2697,"line_start":78,"line_end":78,"column_start":38,"column_end":47},"alias_span":null,"name":"Atomicity","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":908},"span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pest-2.2.1\\src\\lib.rs","byte_start":2699,"byte_end":2708,"line_start":78,"line_end":78,"column_start":49,"column_end":58},"alias_span":null,"name":"Lookahead","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":944},"span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pest-2.2.1\\src\\lib.rs","byte_start":2710,"byte_end":2718,"line_start":78,"line_end":78,"column_start":60,"column_end":68},"alias_span":null,"name":"MatchDir","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":482},"span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pest-2.2.1\\src\\lib.rs","byte_start":2720,"byte_end":2731,"line_start":78,"line_end":78,"column_start":70,"column_end":81},"alias_span":null,"name":"ParseResult","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":960},"span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pest-2.2.1\\src\\lib.rs","byte_start":2733,"byte_end":2744,"line_start":78,"line_end":78,"column_start":83,"column_end":94},"alias_span":null,"name":"ParserState","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":975},"span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pest-2.2.1\\src\\lib.rs","byte_start":2772,"byte_end":2780,"line_start":79,"line_end":79,"column_start":26,"column_end":34},"alias_span":null,"name":"Position","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":699},"span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pest-2.2.1\\src\\lib.rs","byte_start":2804,"byte_end":2809,"line_start":80,"line_end":80,"column_start":23,"column_end":28},"alias_span":null,"name":"Lines","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":1014},"span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pest-2.2.1\\src\\lib.rs","byte_start":2811,"byte_end":2815,"line_start":80,"line_end":80,"column_start":30,"column_end":34},"alias_span":null,"name":"Span","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":1043},"span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pest-2.2.1\\src\\lib.rs","byte_start":2840,"byte_end":2845,"line_start":81,"line_end":81,"column_start":23,"column_end":28},"alias_span":null,"name":"Token","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":137},"span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pest-2.2.1\\src\\iterators\\mod.rs","byte_start":30495,"byte_end":30504,"line_start":18,"line_end":18,"column_start":27,"column_end":36},"alias_span":null,"name":"FlatPairs","value":"","parent":{"krate":0,"index":106}},{"kind":"Use","ref_id":{"krate":0,"index":862},"span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pest-2.2.1\\src\\iterators\\mod.rs","byte_start":30526,"byte_end":30530,"line_start":19,"line_end":19,"column_start":21,"column_end":25},"alias_span":null,"name":"Pair","value":"","parent":{"krate":0,"index":106}},{"kind":"Use","ref_id":{"krate":0,"index":873},"span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pest-2.2.1\\src\\iterators\\mod.rs","byte_start":30553,"byte_end":30558,"line_start":20,"line_end":20,"column_start":22,"column_end":27},"alias_span":null,"name":"Pairs","value":"","parent":{"krate":0,"index":106}},{"kind":"Use","ref_id":{"krate":0,"index":897},"span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pest-2.2.1\\src\\iterators\\mod.rs","byte_start":30636,"byte_end":30642,"line_start":22,"line_end":22,"column_start":23,"column_end":29},"alias_span":null,"name":"Tokens","value":"","parent":{"krate":0,"index":106}}],"defs":[{"kind":"Mod","id":{"krate":0,"index":0},"span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pest-2.2.1\\src\\lib.rs","byte_start":406,"byte_end":3531,"line_start":9,"line_end":107,"column_start":1,"column_end":58},"name":"","qualname":"::","value":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pest-2.2.1\\src\\lib.rs","parent":null,"children":[{"krate":0,"index":1},{"krate":0,"index":2},{"krate":0,"index":3},{"krate":0,"index":4},{"krate":0,"index":5},{"krate":0,"index":6},{"krate":0,"index":7},{"krate":0,"index":10},{"krate":0,"index":11},{"krate":0,"index":14},{"krate":0,"index":17},{"krate":0,"index":20},{"krate":0,"index":23},{"krate":0,"index":26},{"krate":0,"index":29},{"krate":0,"index":32},{"krate":0,"index":33},{"krate":0,"index":36},{"krate":0,"index":39},{"krate":0,"index":42},{"krate":0,"index":43},{"krate":0,"index":45},{"krate":0,"index":46},{"krate":0,"index":48},{"krate":0,"index":106},{"krate":0,"index":419},{"krate":0,"index":423},{"krate":0,"index":436},{"krate":0,"index":534},{"krate":0,"index":605},{"krate":0,"index":656},{"krate":0,"index":707},{"krate":0,"index":737},{"krate":0,"index":741},{"krate":0,"index":749},{"krate":0,"index":750}],"decl_id":null,"docs":" # pest. The Elegant Parser","sig":null,"attributes":[{"value":"no_std","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pest-2.2.1\\src\\lib.rs","byte_start":406,"byte_end":416,"line_start":9,"line_end":9,"column_start":1,"column_end":11}},{"value":"/ # pest. The Elegant Parser","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pest-2.2.1\\src\\lib.rs","byte_start":418,"byte_end":448,"line_start":11,"line_end":11,"column_start":1,"column_end":31}},{"value":"/","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pest-2.2.1\\src\\lib.rs","byte_start":449,"byte_end":452,"line_start":12,"line_end":12,"column_start":1,"column_end":4}},{"value":"/ pest is a general purpose parser written in Rust with a focus on accessibility, correctness,","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pest-2.2.1\\src\\lib.rs","byte_start":453,"byte_end":549,"line_start":13,"line_end":13,"column_start":1,"column_end":97}},{"value":"/ and performance. It uses parsing expression grammars (or [PEG]) as input, which are similar in","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pest-2.2.1\\src\\lib.rs","byte_start":550,"byte_end":648,"line_start":14,"line_end":14,"column_start":1,"column_end":99}},{"value":"/ spirit to regular expressions, but which offer the enhanced expressivity needed to parse","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pest-2.2.1\\src\\lib.rs","byte_start":649,"byte_end":741,"line_start":15,"line_end":15,"column_start":1,"column_end":93}},{"value":"/ complex languages.","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pest-2.2.1\\src\\lib.rs","byte_start":742,"byte_end":764,"line_start":16,"line_end":16,"column_start":1,"column_end":23}},{"value":"/","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pest-2.2.1\\src\\lib.rs","byte_start":765,"byte_end":768,"line_start":17,"line_end":17,"column_start":1,"column_end":4}},{"value":"/ [PEG]: https://en.wikipedia.org/wiki/Parsing_expression_grammar","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pest-2.2.1\\src\\lib.rs","byte_start":769,"byte_end":836,"line_start":18,"line_end":18,"column_start":1,"column_end":68}},{"value":"/","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pest-2.2.1\\src\\lib.rs","byte_start":837,"byte_end":840,"line_start":19,"line_end":19,"column_start":1,"column_end":4}},{"value":"/ ## Getting started","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pest-2.2.1\\src\\lib.rs","byte_start":841,"byte_end":863,"line_start":20,"line_end":20,"column_start":1,"column_end":23}},{"value":"/","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pest-2.2.1\\src\\lib.rs","byte_start":864,"byte_end":867,"line_start":21,"line_end":21,"column_start":1,"column_end":4}},{"value":"/ The recommended way to start parsing with pest is to read the official [book].","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pest-2.2.1\\src\\lib.rs","byte_start":868,"byte_end":950,"line_start":22,"line_end":22,"column_start":1,"column_end":83}},{"value":"/","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pest-2.2.1\\src\\lib.rs","byte_start":951,"byte_end":954,"line_start":23,"line_end":23,"column_start":1,"column_end":4}},{"value":"/ Other helpful resources:","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pest-2.2.1\\src\\lib.rs","byte_start":955,"byte_end":983,"line_start":24,"line_end":24,"column_start":1,"column_end":29}},{"value":"/","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pest-2.2.1\\src\\lib.rs","byte_start":984,"byte_end":987,"line_start":25,"line_end":25,"column_start":1,"column_end":4}},{"value":"/ * API reference on [docs.rs]","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pest-2.2.1\\src\\lib.rs","byte_start":988,"byte_end":1020,"line_start":26,"line_end":26,"column_start":1,"column_end":33}},{"value":"/ * play with grammars and share them on our [fiddle]","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pest-2.2.1\\src\\lib.rs","byte_start":1021,"byte_end":1076,"line_start":27,"line_end":27,"column_start":1,"column_end":56}},{"value":"/ * leave feedback, ask questions, or greet us on [Gitter]","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pest-2.2.1\\src\\lib.rs","byte_start":1077,"byte_end":1137,"line_start":28,"line_end":28,"column_start":1,"column_end":61}},{"value":"/","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pest-2.2.1\\src\\lib.rs","byte_start":1138,"byte_end":1141,"line_start":29,"line_end":29,"column_start":1,"column_end":4}},{"value":"/ [book]: https://pest-parser.github.io/book","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pest-2.2.1\\src\\lib.rs","byte_start":1142,"byte_end":1188,"line_start":30,"line_end":30,"column_start":1,"column_end":47}},{"value":"/ [docs.rs]: https://docs.rs/pest","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pest-2.2.1\\src\\lib.rs","byte_start":1189,"byte_end":1224,"line_start":31,"line_end":31,"column_start":1,"column_end":36}},{"value":"/ [fiddle]: https://pest-parser.github.io/#editor","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pest-2.2.1\\src\\lib.rs","byte_start":1225,"byte_end":1276,"line_start":32,"line_end":32,"column_start":1,"column_end":52}},{"value":"/ [Gitter]: https://gitter.im/dragostis/pest","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pest-2.2.1\\src\\lib.rs","byte_start":1277,"byte_end":1323,"line_start":33,"line_end":33,"column_start":1,"column_end":47}},{"value":"/","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pest-2.2.1\\src\\lib.rs","byte_start":1324,"byte_end":1327,"line_start":34,"line_end":34,"column_start":1,"column_end":4}},{"value":"/ ## Usage","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pest-2.2.1\\src\\lib.rs","byte_start":1328,"byte_end":1340,"line_start":35,"line_end":35,"column_start":1,"column_end":13}},{"value":"/","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pest-2.2.1\\src\\lib.rs","byte_start":1341,"byte_end":1344,"line_start":36,"line_end":36,"column_start":1,"column_end":4}},{"value":"/ The core of pest is the trait [`Parser`], which provides an interface to the parsing","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pest-2.2.1\\src\\lib.rs","byte_start":1345,"byte_end":1433,"line_start":37,"line_end":37,"column_start":1,"column_end":89}},{"value":"/ functionality.","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pest-2.2.1\\src\\lib.rs","byte_start":1434,"byte_end":1452,"line_start":38,"line_end":38,"column_start":1,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pest-2.2.1\\src\\lib.rs","byte_start":1453,"byte_end":1456,"line_start":39,"line_end":39,"column_start":1,"column_end":4}},{"value":"/ The accompanying crate `pest_derive` can automatically generate a [`Parser`] from a PEG","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pest-2.2.1\\src\\lib.rs","byte_start":1457,"byte_end":1548,"line_start":40,"line_end":40,"column_start":1,"column_end":92}},{"value":"/ grammar. Using `pest_derive` is highly encouraged, but it is also possible to implement","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pest-2.2.1\\src\\lib.rs","byte_start":1549,"byte_end":1640,"line_start":41,"line_end":41,"column_start":1,"column_end":92}},{"value":"/ [`Parser`] manually if required.","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pest-2.2.1\\src\\lib.rs","byte_start":1641,"byte_end":1677,"line_start":42,"line_end":42,"column_start":1,"column_end":37}},{"value":"/","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pest-2.2.1\\src\\lib.rs","byte_start":1678,"byte_end":1681,"line_start":43,"line_end":43,"column_start":1,"column_end":4}},{"value":"/ ## `.pest` files","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pest-2.2.1\\src\\lib.rs","byte_start":1682,"byte_end":1702,"line_start":44,"line_end":44,"column_start":1,"column_end":21}},{"value":"/","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pest-2.2.1\\src\\lib.rs","byte_start":1703,"byte_end":1706,"line_start":45,"line_end":45,"column_start":1,"column_end":4}},{"value":"/ Grammar definitions reside in custom `.pest` files located in the crate `src` directory.","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pest-2.2.1\\src\\lib.rs","byte_start":1707,"byte_end":1799,"line_start":46,"line_end":46,"column_start":1,"column_end":93}},{"value":"/ Parsers are automatically generated from these files using `#[derive(Parser)]` and a special","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pest-2.2.1\\src\\lib.rs","byte_start":1800,"byte_end":1896,"line_start":47,"line_end":47,"column_start":1,"column_end":97}},{"value":"/ `#[grammar = \"...\"]` attribute on a dummy struct.","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pest-2.2.1\\src\\lib.rs","byte_start":1897,"byte_end":1950,"line_start":48,"line_end":48,"column_start":1,"column_end":54}},{"value":"/","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pest-2.2.1\\src\\lib.rs","byte_start":1951,"byte_end":1954,"line_start":49,"line_end":49,"column_start":1,"column_end":4}},{"value":"/ ```ignore","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pest-2.2.1\\src\\lib.rs","byte_start":1955,"byte_end":1968,"line_start":50,"line_end":50,"column_start":1,"column_end":14}},{"value":"/ #[derive(Parser)]","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pest-2.2.1\\src\\lib.rs","byte_start":1969,"byte_end":1990,"line_start":51,"line_end":51,"column_start":1,"column_end":22}},{"value":"/ #[grammar = \"path/to/my_grammar.pest\"] // relative to src","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pest-2.2.1\\src\\lib.rs","byte_start":1991,"byte_end":2052,"line_start":52,"line_end":52,"column_start":1,"column_end":62}},{"value":"/ struct MyParser;","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pest-2.2.1\\src\\lib.rs","byte_start":2053,"byte_end":2073,"line_start":53,"line_end":53,"column_start":1,"column_end":21}},{"value":"/ ```","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pest-2.2.1\\src\\lib.rs","byte_start":2074,"byte_end":2081,"line_start":54,"line_end":54,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pest-2.2.1\\src\\lib.rs","byte_start":2082,"byte_end":2085,"line_start":55,"line_end":55,"column_start":1,"column_end":4}},{"value":"/ The syntax of `.pest` files is documented in the [`pest_derive` crate].","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pest-2.2.1\\src\\lib.rs","byte_start":2086,"byte_end":2161,"line_start":56,"line_end":56,"column_start":1,"column_end":76}},{"value":"/","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pest-2.2.1\\src\\lib.rs","byte_start":2162,"byte_end":2165,"line_start":57,"line_end":57,"column_start":1,"column_end":4}},{"value":"/ ## Inline grammars","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pest-2.2.1\\src\\lib.rs","byte_start":2166,"byte_end":2188,"line_start":58,"line_end":58,"column_start":1,"column_end":23}},{"value":"/","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pest-2.2.1\\src\\lib.rs","byte_start":2189,"byte_end":2192,"line_start":59,"line_end":59,"column_start":1,"column_end":4}},{"value":"/ Grammars can also be inlined by using the `#[grammar_inline = \"...\"]` attribute.","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pest-2.2.1\\src\\lib.rs","byte_start":2193,"byte_end":2277,"line_start":60,"line_end":60,"column_start":1,"column_end":85}},{"value":"/","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pest-2.2.1\\src\\lib.rs","byte_start":2278,"byte_end":2281,"line_start":61,"line_end":61,"column_start":1,"column_end":4}},{"value":"/ [`Parser`]: trait.Parser.html","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pest-2.2.1\\src\\lib.rs","byte_start":2282,"byte_end":2315,"line_start":62,"line_end":62,"column_start":1,"column_end":34}},{"value":"/ [`pest_derive` crate]: https://docs.rs/pest_derive/","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pest-2.2.1\\src\\lib.rs","byte_start":2316,"byte_end":2371,"line_start":63,"line_end":63,"column_start":1,"column_end":56}}]},{"kind":"Mod","id":{"krate":0,"index":48},"span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pest-2.2.1\\src\\error.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"error","qualname":"::error","value":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pest-2.2.1\\src\\error.rs","parent":null,"children":[{"krate":0,"index":49},{"krate":0,"index":52},{"krate":0,"index":55},{"krate":0,"index":58},{"krate":0,"index":61},{"krate":0,"index":64},{"krate":0,"index":67},{"krate":0,"index":70},{"krate":0,"index":73},{"krate":0,"index":76},{"krate":0,"index":79},{"krate":0,"index":778},{"krate":0,"index":773},{"krate":0,"index":775},{"krate":0,"index":752},{"krate":0,"index":755},{"krate":0,"index":758},{"krate":0,"index":760},{"krate":0,"index":763},{"krate":0,"index":767},{"krate":0,"index":769},{"krate":0,"index":807},{"krate":0,"index":809},{"krate":0,"index":811},{"krate":0,"index":786},{"krate":0,"index":789},{"krate":0,"index":792},{"krate":0,"index":794},{"krate":0,"index":797},{"krate":0,"index":801},{"krate":0,"index":803},{"krate":0,"index":819},{"krate":0,"index":826},{"krate":0,"index":828},{"krate":0,"index":830},{"krate":0,"index":831},{"krate":0,"index":833},{"krate":0,"index":836},{"krate":0,"index":837},{"krate":0,"index":840},{"krate":0,"index":848},{"krate":0,"index":850},{"krate":0,"index":852},{"krate":0,"index":853},{"krate":0,"index":855},{"krate":0,"index":858},{"krate":0,"index":859},{"krate":0,"index":82},{"krate":0,"index":101},{"krate":0,"index":105}],"decl_id":null,"docs":" Types for different kinds of parsing failures.\n","sig":null,"attributes":[{"value":"/ Types for different kinds of parsing failures.","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pest-2.2.1\\src\\error.rs","byte_start":3940,"byte_end":3990,"line_start":10,"line_end":10,"column_start":1,"column_end":51}}]},{"kind":"Struct","id":{"krate":0,"index":778},"span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pest-2.2.1\\src\\error.rs","byte_start":4445,"byte_end":4450,"line_start":29,"line_end":29,"column_start":12,"column_end":17},"name":"Error","qualname":"::error::Error","value":"Error { variant, location, line_col }","parent":null,"children":[{"krate":0,"index":780},{"krate":0,"index":781},{"krate":0,"index":782},{"krate":0,"index":783},{"krate":0,"index":784},{"krate":0,"index":785}],"decl_id":null,"docs":" Parse-related error type.\n","sig":null,"attributes":[{"value":"/ Parse-related error type.","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pest-2.2.1\\src\\error.rs","byte_start":4247,"byte_end":4276,"line_start":25,"line_end":25,"column_start":1,"column_end":30}},{"value":"error(\"{}\", self.format())","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pest-2.2.1\\src\\error.rs","byte_start":4405,"byte_end":4431,"line_start":28,"line_end":28,"column_start":29,"column_end":55}}]},{"kind":"Field","id":{"krate":0,"index":780},"span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pest-2.2.1\\src\\error.rs","byte_start":4503,"byte_end":4510,"line_start":31,"line_end":31,"column_start":9,"column_end":16},"name":"variant","qualname":"::error::Error::variant","value":"error::ErrorVariant<R>","parent":{"krate":0,"index":778},"children":[],"decl_id":null,"docs":" Variant of the error\n","sig":null,"attributes":[{"value":"/ Variant of the error","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pest-2.2.1\\src\\error.rs","byte_start":4470,"byte_end":4494,"line_start":30,"line_end":30,"column_start":5,"column_end":29}}]},{"kind":"Field","id":{"krate":0,"index":781},"span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pest-2.2.1\\src\\error.rs","byte_start":4578,"byte_end":4586,"line_start":33,"line_end":33,"column_start":9,"column_end":17},"name":"location","qualname":"::error::Error::location","value":"error::InputLocation","parent":{"krate":0,"index":778},"children":[],"decl_id":null,"docs":" Location within the input string\n","sig":null,"attributes":[{"value":"/ Location within the input string","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pest-2.2.1\\src\\error.rs","byte_start":4533,"byte_end":4569,"line_start":32,"line_end":32,"column_start":5,"column_end":41}}]},{"kind":"Field","id":{"krate":0,"index":782},"span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pest-2.2.1\\src\\error.rs","byte_start":4655,"byte_end":4663,"line_start":35,"line_end":35,"column_start":9,"column_end":17},"name":"line_col","qualname":"::error::Error::line_col","value":"error::LineColLocation","parent":{"krate":0,"index":778},"children":[],"decl_id":null,"docs":" Line/column within the input string\n","sig":null,"attributes":[{"value":"/ Line/column within the input string","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pest-2.2.1\\src\\error.rs","byte_start":4607,"byte_end":4646,"line_start":34,"line_end":34,"column_start":5,"column_end":44}}]},{"kind":"StructVariant","id":{"krate":0,"index":814},"span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pest-2.2.1\\src\\error.rs","byte_start":5091,"byte_end":5103,"line_start":47,"line_end":47,"column_start":5,"column_end":17},"name":"ParsingError","qualname":"::error::ErrorVariant::ParsingError","value":"ErrorVariant::ParsingError { positives, negatives }","parent":{"krate":0,"index":807},"children":[],"decl_id":null,"docs":" Generated parsing error with expected and unexpected `Rule`s\n","sig":null,"attributes":[{"value":"/ Generated parsing error with expected and unexpected `Rule`s","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pest-2.2.1\\src\\error.rs","byte_start":4945,"byte_end":5009,"line_start":45,"line_end":45,"column_start":5,"column_end":69}},{"value":"error(\"parsing error: {}\", self.message())","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pest-2.2.1\\src\\error.rs","byte_start":5042,"byte_end":5084,"line_start":46,"line_end":46,"column_start":33,"column_end":75}}]},{"kind":"StructVariant","id":{"krate":0,"index":817},"span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pest-2.2.1\\src\\error.rs","byte_start":5329,"byte_end":5340,"line_start":55,"line_end":55,"column_start":5,"column_end":16},"name":"CustomError","qualname":"::error::ErrorVariant::CustomError","value":"ErrorVariant::CustomError { message }","parent":{"krate":0,"index":807},"children":[],"decl_id":null,"docs":" Custom error with a message\n","sig":null,"attributes":[{"value":"/ Custom error with a message","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pest-2.2.1\\src\\error.rs","byte_start":5231,"byte_end":5262,"line_start":53,"line_end":53,"column_start":5,"column_end":36}},{"value":"error(\"{}\", self.message())","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pest-2.2.1\\src\\error.rs","byte_start":5295,"byte_end":5322,"line_start":54,"line_end":54,"column_start":33,"column_end":60}}]},{"kind":"Enum","id":{"krate":0,"index":807},"span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pest-2.2.1\\src\\error.rs","byte_start":4913,"byte_end":4925,"line_start":44,"line_end":44,"column_start":10,"column_end":22},"name":"ErrorVariant","qualname":"::error::ErrorVariant","value":"pub enum ErrorVariant<R: RuleType> {\n    ParsingError {\n            positives: Vec<R>,\n            negatives: Vec<R>,\n        },\n    CustomError {\n            message: String,\n        },\n}","parent":null,"children":[{"krate":0,"index":814},{"krate":0,"index":817}],"decl_id":null,"docs":" Different kinds of parsing errors.\n","sig":null,"attributes":[{"value":"/ Different kinds of parsing errors.","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pest-2.2.1\\src\\error.rs","byte_start":4765,"byte_end":4803,"line_start":41,"line_end":41,"column_start":1,"column_end":39}}]},{"kind":"TupleVariant","id":{"krate":0,"index":820},"span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pest-2.2.1\\src\\error.rs","byte_start":5570,"byte_end":5573,"line_start":65,"line_end":65,"column_start":5,"column_end":8},"name":"Pos","qualname":"::error::InputLocation::Pos","value":"InputLocation::Pos(usize)","parent":{"krate":0,"index":819},"children":[],"decl_id":null,"docs":" `Error` was created by `Error::new_from_pos`\n","sig":null,"attributes":[{"value":"/ `Error` was created by `Error::new_from_pos`","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pest-2.2.1\\src\\error.rs","byte_start":5517,"byte_end":5565,"line_start":64,"line_end":64,"column_start":5,"column_end":53}}]},{"kind":"TupleVariant","id":{"krate":0,"index":823},"span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pest-2.2.1\\src\\error.rs","byte_start":5640,"byte_end":5644,"line_start":67,"line_end":67,"column_start":5,"column_end":9},"name":"Span","qualname":"::error::InputLocation::Span","value":"InputLocation::Span((usize, usize))","parent":{"krate":0,"index":819},"children":[],"decl_id":null,"docs":" `Error` was created by `Error::new_from_span`\n","sig":null,"attributes":[{"value":"/ `Error` was created by `Error::new_from_span`","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pest-2.2.1\\src\\error.rs","byte_start":5586,"byte_end":5635,"line_start":66,"line_end":66,"column_start":5,"column_end":54}}]},{"kind":"Enum","id":{"krate":0,"index":819},"span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pest-2.2.1\\src\\error.rs","byte_start":5497,"byte_end":5510,"line_start":63,"line_end":63,"column_start":10,"column_end":23},"name":"InputLocation","qualname":"::error::InputLocation","value":"pub enum InputLocation { Pos(usize), Span((usize, usize)), }","parent":null,"children":[{"krate":0,"index":820},{"krate":0,"index":823}],"decl_id":null,"docs":" Where an `Error` has occurred.\n","sig":null,"attributes":[{"value":"/ Where an `Error` has occurred.","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pest-2.2.1\\src\\error.rs","byte_start":5408,"byte_end":5442,"line_start":61,"line_end":61,"column_start":1,"column_end":35}}]},{"kind":"TupleVariant","id":{"krate":0,"index":841},"span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pest-2.2.1\\src\\error.rs","byte_start":5861,"byte_end":5864,"line_start":74,"line_end":74,"column_start":5,"column_end":8},"name":"Pos","qualname":"::error::LineColLocation::Pos","value":"LineColLocation::Pos((usize, usize))","parent":{"krate":0,"index":840},"children":[],"decl_id":null,"docs":" Line/column pair if `Error` was created by `Error::new_from_pos`\n","sig":null,"attributes":[{"value":"/ Line/column pair if `Error` was created by `Error::new_from_pos`","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pest-2.2.1\\src\\error.rs","byte_start":5788,"byte_end":5856,"line_start":73,"line_end":73,"column_start":5,"column_end":73}}]},{"kind":"TupleVariant","id":{"krate":0,"index":844},"span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pest-2.2.1\\src\\error.rs","byte_start":5961,"byte_end":5965,"line_start":76,"line_end":76,"column_start":5,"column_end":9},"name":"Span","qualname":"::error::LineColLocation::Span","value":"LineColLocation::Span((usize, usize), (usize, usize))","parent":{"krate":0,"index":840},"children":[],"decl_id":null,"docs":" Line/column pairs if `Error` was created by `Error::new_from_span`\n","sig":null,"attributes":[{"value":"/ Line/column pairs if `Error` was created by `Error::new_from_span`","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pest-2.2.1\\src\\error.rs","byte_start":5886,"byte_end":5956,"line_start":75,"line_end":75,"column_start":5,"column_end":75}}]},{"kind":"Enum","id":{"krate":0,"index":840},"span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pest-2.2.1\\src\\error.rs","byte_start":5766,"byte_end":5781,"line_start":72,"line_end":72,"column_start":10,"column_end":25},"name":"LineColLocation","qualname":"::error::LineColLocation","value":"pub enum LineColLocation {\n    Pos((usize, usize)),\n    Span((usize, usize), (usize, usize)),\n}","parent":null,"children":[{"krate":0,"index":841},{"krate":0,"index":844}],"decl_id":null,"docs":" Line/column where an `Error` has occurred.\n","sig":null,"attributes":[{"value":"/ Line/column where an `Error` has occurred.","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pest-2.2.1\\src\\error.rs","byte_start":5665,"byte_end":5711,"line_start":70,"line_end":70,"column_start":1,"column_end":47}}]},{"kind":"Method","id":{"krate":0,"index":84},"span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pest-2.2.1\\src\\error.rs","byte_start":6818,"byte_end":6830,"line_start":106,"line_end":106,"column_start":12,"column_end":24},"name":"new_from_pos","qualname":"<Error<R>>::new_from_pos","value":"pub fn new_from_pos(ErrorVariant<R>, Position) -> Error<R>","parent":null,"children":[],"decl_id":null,"docs":" Creates `Error` from `ErrorVariant` and `Position`.","sig":null,"attributes":[{"value":"/ Creates `Error` from `ErrorVariant` and `Position`.","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pest-2.2.1\\src\\error.rs","byte_start":6035,"byte_end":6090,"line_start":80,"line_end":80,"column_start":5,"column_end":60}},{"value":"/","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pest-2.2.1\\src\\error.rs","byte_start":6095,"byte_end":6098,"line_start":81,"line_end":81,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pest-2.2.1\\src\\error.rs","byte_start":6103,"byte_end":6117,"line_start":82,"line_end":82,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pest-2.2.1\\src\\error.rs","byte_start":6122,"byte_end":6125,"line_start":83,"line_end":83,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pest-2.2.1\\src\\error.rs","byte_start":6130,"byte_end":6137,"line_start":84,"line_end":84,"column_start":5,"column_end":12}},{"value":"/ # use pest::error::{Error, ErrorVariant};","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pest-2.2.1\\src\\error.rs","byte_start":6142,"byte_end":6187,"line_start":85,"line_end":85,"column_start":5,"column_end":50}},{"value":"/ # use pest::Position;","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pest-2.2.1\\src\\error.rs","byte_start":6192,"byte_end":6217,"line_start":86,"line_end":86,"column_start":5,"column_end":30}},{"value":"/ # #[allow(non_camel_case_types)]","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pest-2.2.1\\src\\error.rs","byte_start":6222,"byte_end":6258,"line_start":87,"line_end":87,"column_start":5,"column_end":41}},{"value":"/ # #[allow(dead_code)]","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pest-2.2.1\\src\\error.rs","byte_start":6263,"byte_end":6288,"line_start":88,"line_end":88,"column_start":5,"column_end":30}},{"value":"/ # #[derive(Clone, Copy, Debug, Eq, Hash, Ord, PartialEq, PartialOrd)]","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pest-2.2.1\\src\\error.rs","byte_start":6293,"byte_end":6366,"line_start":89,"line_end":89,"column_start":5,"column_end":78}},{"value":"/ # enum Rule {","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pest-2.2.1\\src\\error.rs","byte_start":6371,"byte_end":6388,"line_start":90,"line_end":90,"column_start":5,"column_end":22}},{"value":"/ #     open_paren,","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pest-2.2.1\\src\\error.rs","byte_start":6393,"byte_end":6414,"line_start":91,"line_end":91,"column_start":5,"column_end":26}},{"value":"/ #     closed_paren","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pest-2.2.1\\src\\error.rs","byte_start":6419,"byte_end":6441,"line_start":92,"line_end":92,"column_start":5,"column_end":27}},{"value":"/ # }","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pest-2.2.1\\src\\error.rs","byte_start":6446,"byte_end":6453,"line_start":93,"line_end":93,"column_start":5,"column_end":12}},{"value":"/ # let input = \"\";","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pest-2.2.1\\src\\error.rs","byte_start":6458,"byte_end":6479,"line_start":94,"line_end":94,"column_start":5,"column_end":26}},{"value":"/ # let pos = Position::from_start(input);","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pest-2.2.1\\src\\error.rs","byte_start":6484,"byte_end":6528,"line_start":95,"line_end":95,"column_start":5,"column_end":49}},{"value":"/ let error = Error::new_from_pos(","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pest-2.2.1\\src\\error.rs","byte_start":6533,"byte_end":6569,"line_start":96,"line_end":96,"column_start":5,"column_end":41}},{"value":"/     ErrorVariant::ParsingError {","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pest-2.2.1\\src\\error.rs","byte_start":6574,"byte_end":6610,"line_start":97,"line_end":97,"column_start":5,"column_end":41}},{"value":"/         positives: vec![Rule::open_paren],","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pest-2.2.1\\src\\error.rs","byte_start":6615,"byte_end":6661,"line_start":98,"line_end":98,"column_start":5,"column_end":51}},{"value":"/         negatives: vec![Rule::closed_paren]","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pest-2.2.1\\src\\error.rs","byte_start":6666,"byte_end":6713,"line_start":99,"line_end":99,"column_start":5,"column_end":52}},{"value":"/     },","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pest-2.2.1\\src\\error.rs","byte_start":6718,"byte_end":6728,"line_start":100,"line_end":100,"column_start":5,"column_end":15}},{"value":"/     pos","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pest-2.2.1\\src\\error.rs","byte_start":6733,"byte_end":6744,"line_start":101,"line_end":101,"column_start":5,"column_end":16}},{"value":"/ );","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pest-2.2.1\\src\\error.rs","byte_start":6749,"byte_end":6755,"line_start":102,"line_end":102,"column_start":5,"column_end":11}},{"value":"/","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pest-2.2.1\\src\\error.rs","byte_start":6760,"byte_end":6763,"line_start":103,"line_end":103,"column_start":5,"column_end":8}},{"value":"/ println!(\"{}\", error);","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pest-2.2.1\\src\\error.rs","byte_start":6768,"byte_end":6794,"line_start":104,"line_end":104,"column_start":5,"column_end":31}},{"value":"/ ```","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pest-2.2.1\\src\\error.rs","byte_start":6799,"byte_end":6806,"line_start":105,"line_end":105,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":85},"span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pest-2.2.1\\src\\error.rs","byte_start":8266,"byte_end":8279,"line_start":152,"line_end":152,"column_start":12,"column_end":25},"name":"new_from_span","qualname":"<Error<R>>::new_from_span","value":"pub fn new_from_span(ErrorVariant<R>, Span) -> Error<R>","parent":null,"children":[],"decl_id":null,"docs":" Creates `Error` from `ErrorVariant` and `Span`.","sig":null,"attributes":[{"value":"/ Creates `Error` from `ErrorVariant` and `Span`.","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pest-2.2.1\\src\\error.rs","byte_start":7401,"byte_end":7452,"line_start":124,"line_end":124,"column_start":5,"column_end":56}},{"value":"/","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pest-2.2.1\\src\\error.rs","byte_start":7457,"byte_end":7460,"line_start":125,"line_end":125,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pest-2.2.1\\src\\error.rs","byte_start":7465,"byte_end":7479,"line_start":126,"line_end":126,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pest-2.2.1\\src\\error.rs","byte_start":7484,"byte_end":7487,"line_start":127,"line_end":127,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pest-2.2.1\\src\\error.rs","byte_start":7492,"byte_end":7499,"line_start":128,"line_end":128,"column_start":5,"column_end":12}},{"value":"/ # use pest::error::{Error, ErrorVariant};","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pest-2.2.1\\src\\error.rs","byte_start":7504,"byte_end":7549,"line_start":129,"line_end":129,"column_start":5,"column_end":50}},{"value":"/ # use pest::{Position, Span};","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pest-2.2.1\\src\\error.rs","byte_start":7554,"byte_end":7587,"line_start":130,"line_end":130,"column_start":5,"column_end":38}},{"value":"/ # #[allow(non_camel_case_types)]","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pest-2.2.1\\src\\error.rs","byte_start":7592,"byte_end":7628,"line_start":131,"line_end":131,"column_start":5,"column_end":41}},{"value":"/ # #[allow(dead_code)]","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pest-2.2.1\\src\\error.rs","byte_start":7633,"byte_end":7658,"line_start":132,"line_end":132,"column_start":5,"column_end":30}},{"value":"/ # #[derive(Clone, Copy, Debug, Eq, Hash, Ord, PartialEq, PartialOrd)]","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pest-2.2.1\\src\\error.rs","byte_start":7663,"byte_end":7736,"line_start":133,"line_end":133,"column_start":5,"column_end":78}},{"value":"/ # enum Rule {","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pest-2.2.1\\src\\error.rs","byte_start":7741,"byte_end":7758,"line_start":134,"line_end":134,"column_start":5,"column_end":22}},{"value":"/ #     open_paren,","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pest-2.2.1\\src\\error.rs","byte_start":7763,"byte_end":7784,"line_start":135,"line_end":135,"column_start":5,"column_end":26}},{"value":"/ #     closed_paren","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pest-2.2.1\\src\\error.rs","byte_start":7789,"byte_end":7811,"line_start":136,"line_end":136,"column_start":5,"column_end":27}},{"value":"/ # }","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pest-2.2.1\\src\\error.rs","byte_start":7816,"byte_end":7823,"line_start":137,"line_end":137,"column_start":5,"column_end":12}},{"value":"/ # let input = \"\";","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pest-2.2.1\\src\\error.rs","byte_start":7828,"byte_end":7849,"line_start":138,"line_end":138,"column_start":5,"column_end":26}},{"value":"/ # let start = Position::from_start(input);","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pest-2.2.1\\src\\error.rs","byte_start":7854,"byte_end":7900,"line_start":139,"line_end":139,"column_start":5,"column_end":51}},{"value":"/ # let end = start.clone();","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pest-2.2.1\\src\\error.rs","byte_start":7905,"byte_end":7935,"line_start":140,"line_end":140,"column_start":5,"column_end":35}},{"value":"/ # let span = start.span(&end);","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pest-2.2.1\\src\\error.rs","byte_start":7940,"byte_end":7974,"line_start":141,"line_end":141,"column_start":5,"column_end":39}},{"value":"/ let error = Error::new_from_span(","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pest-2.2.1\\src\\error.rs","byte_start":7979,"byte_end":8016,"line_start":142,"line_end":142,"column_start":5,"column_end":42}},{"value":"/     ErrorVariant::ParsingError {","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pest-2.2.1\\src\\error.rs","byte_start":8021,"byte_end":8057,"line_start":143,"line_end":143,"column_start":5,"column_end":41}},{"value":"/         positives: vec![Rule::open_paren],","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pest-2.2.1\\src\\error.rs","byte_start":8062,"byte_end":8108,"line_start":144,"line_end":144,"column_start":5,"column_end":51}},{"value":"/         negatives: vec![Rule::closed_paren]","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pest-2.2.1\\src\\error.rs","byte_start":8113,"byte_end":8160,"line_start":145,"line_end":145,"column_start":5,"column_end":52}},{"value":"/     },","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pest-2.2.1\\src\\error.rs","byte_start":8165,"byte_end":8175,"line_start":146,"line_end":146,"column_start":5,"column_end":15}},{"value":"/     span","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pest-2.2.1\\src\\error.rs","byte_start":8180,"byte_end":8192,"line_start":147,"line_end":147,"column_start":5,"column_end":17}},{"value":"/ );","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pest-2.2.1\\src\\error.rs","byte_start":8197,"byte_end":8203,"line_start":148,"line_end":148,"column_start":5,"column_end":11}},{"value":"/","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pest-2.2.1\\src\\error.rs","byte_start":8208,"byte_end":8211,"line_start":149,"line_end":149,"column_start":5,"column_end":8}},{"value":"/ println!(\"{}\", error);","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pest-2.2.1\\src\\error.rs","byte_start":8216,"byte_end":8242,"line_start":150,"line_end":150,"column_start":5,"column_end":31}},{"value":"/ ```","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pest-2.2.1\\src\\error.rs","byte_start":8247,"byte_end":8254,"line_start":151,"line_end":151,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":86},"span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pest-2.2.1\\src\\error.rs","byte_start":10415,"byte_end":10424,"line_start":214,"line_end":214,"column_start":12,"column_end":21},"name":"with_path","qualname":"<Error<R>>::with_path","value":"pub fn with_path(Self, &str) -> Error<R>","parent":null,"children":[],"decl_id":null,"docs":" Returns `Error` variant with `path` which is shown when formatted with `Display`.","sig":null,"attributes":[{"value":"/ Returns `Error` variant with `path` which is shown when formatted with `Display`.","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pest-2.2.1\\src\\error.rs","byte_start":9632,"byte_end":9717,"line_start":190,"line_end":190,"column_start":5,"column_end":90}},{"value":"/","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pest-2.2.1\\src\\error.rs","byte_start":9722,"byte_end":9725,"line_start":191,"line_end":191,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pest-2.2.1\\src\\error.rs","byte_start":9730,"byte_end":9744,"line_start":192,"line_end":192,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pest-2.2.1\\src\\error.rs","byte_start":9749,"byte_end":9752,"line_start":193,"line_end":193,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pest-2.2.1\\src\\error.rs","byte_start":9757,"byte_end":9764,"line_start":194,"line_end":194,"column_start":5,"column_end":12}},{"value":"/ # use pest::error::{Error, ErrorVariant};","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pest-2.2.1\\src\\error.rs","byte_start":9769,"byte_end":9814,"line_start":195,"line_end":195,"column_start":5,"column_end":50}},{"value":"/ # use pest::Position;","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pest-2.2.1\\src\\error.rs","byte_start":9819,"byte_end":9844,"line_start":196,"line_end":196,"column_start":5,"column_end":30}},{"value":"/ # #[allow(non_camel_case_types)]","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pest-2.2.1\\src\\error.rs","byte_start":9849,"byte_end":9885,"line_start":197,"line_end":197,"column_start":5,"column_end":41}},{"value":"/ # #[allow(dead_code)]","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pest-2.2.1\\src\\error.rs","byte_start":9890,"byte_end":9915,"line_start":198,"line_end":198,"column_start":5,"column_end":30}},{"value":"/ # #[derive(Clone, Copy, Debug, Eq, Hash, Ord, PartialEq, PartialOrd)]","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pest-2.2.1\\src\\error.rs","byte_start":9920,"byte_end":9993,"line_start":199,"line_end":199,"column_start":5,"column_end":78}},{"value":"/ # enum Rule {","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pest-2.2.1\\src\\error.rs","byte_start":9998,"byte_end":10015,"line_start":200,"line_end":200,"column_start":5,"column_end":22}},{"value":"/ #     open_paren,","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pest-2.2.1\\src\\error.rs","byte_start":10020,"byte_end":10041,"line_start":201,"line_end":201,"column_start":5,"column_end":26}},{"value":"/ #     closed_paren","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pest-2.2.1\\src\\error.rs","byte_start":10046,"byte_end":10068,"line_start":202,"line_end":202,"column_start":5,"column_end":27}},{"value":"/ # }","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pest-2.2.1\\src\\error.rs","byte_start":10073,"byte_end":10080,"line_start":203,"line_end":203,"column_start":5,"column_end":12}},{"value":"/ # let input = \"\";","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pest-2.2.1\\src\\error.rs","byte_start":10085,"byte_end":10106,"line_start":204,"line_end":204,"column_start":5,"column_end":26}},{"value":"/ # let pos = Position::from_start(input);","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pest-2.2.1\\src\\error.rs","byte_start":10111,"byte_end":10155,"line_start":205,"line_end":205,"column_start":5,"column_end":49}},{"value":"/ Error::new_from_pos(","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pest-2.2.1\\src\\error.rs","byte_start":10160,"byte_end":10184,"line_start":206,"line_end":206,"column_start":5,"column_end":29}},{"value":"/     ErrorVariant::ParsingError {","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pest-2.2.1\\src\\error.rs","byte_start":10189,"byte_end":10225,"line_start":207,"line_end":207,"column_start":5,"column_end":41}},{"value":"/         positives: vec![Rule::open_paren],","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pest-2.2.1\\src\\error.rs","byte_start":10230,"byte_end":10276,"line_start":208,"line_end":208,"column_start":5,"column_end":51}},{"value":"/         negatives: vec![Rule::closed_paren]","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pest-2.2.1\\src\\error.rs","byte_start":10281,"byte_end":10328,"line_start":209,"line_end":209,"column_start":5,"column_end":52}},{"value":"/     },","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pest-2.2.1\\src\\error.rs","byte_start":10333,"byte_end":10343,"line_start":210,"line_end":210,"column_start":5,"column_end":15}},{"value":"/     pos","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pest-2.2.1\\src\\error.rs","byte_start":10348,"byte_end":10359,"line_start":211,"line_end":211,"column_start":5,"column_end":16}},{"value":"/ ).with_path(\"file.rs\");","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pest-2.2.1\\src\\error.rs","byte_start":10364,"byte_end":10391,"line_start":212,"line_end":212,"column_start":5,"column_end":32}},{"value":"/ ```","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pest-2.2.1\\src\\error.rs","byte_start":10396,"byte_end":10403,"line_start":213,"line_end":213,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":87},"span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pest-2.2.1\\src\\error.rs","byte_start":11374,"byte_end":11378,"line_start":245,"line_end":245,"column_start":12,"column_end":16},"name":"path","qualname":"<Error<R>>::path","value":"pub fn path(&Self) -> Option<&str>","parent":null,"children":[],"decl_id":null,"docs":" Returns the path set using [`Error::with_path()`].","sig":null,"attributes":[{"value":"/ Returns the path set using [`Error::with_path()`].","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pest-2.2.1\\src\\error.rs","byte_start":10529,"byte_end":10583,"line_start":220,"line_end":220,"column_start":5,"column_end":59}},{"value":"/","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pest-2.2.1\\src\\error.rs","byte_start":10588,"byte_end":10591,"line_start":221,"line_end":221,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pest-2.2.1\\src\\error.rs","byte_start":10596,"byte_end":10610,"line_start":222,"line_end":222,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pest-2.2.1\\src\\error.rs","byte_start":10615,"byte_end":10618,"line_start":223,"line_end":223,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pest-2.2.1\\src\\error.rs","byte_start":10623,"byte_end":10630,"line_start":224,"line_end":224,"column_start":5,"column_end":12}},{"value":"/ # use pest::error::{Error, ErrorVariant};","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pest-2.2.1\\src\\error.rs","byte_start":10635,"byte_end":10680,"line_start":225,"line_end":225,"column_start":5,"column_end":50}},{"value":"/ # use pest::Position;","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pest-2.2.1\\src\\error.rs","byte_start":10685,"byte_end":10710,"line_start":226,"line_end":226,"column_start":5,"column_end":30}},{"value":"/ # #[allow(non_camel_case_types)]","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pest-2.2.1\\src\\error.rs","byte_start":10715,"byte_end":10751,"line_start":227,"line_end":227,"column_start":5,"column_end":41}},{"value":"/ # #[allow(dead_code)]","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pest-2.2.1\\src\\error.rs","byte_start":10756,"byte_end":10781,"line_start":228,"line_end":228,"column_start":5,"column_end":30}},{"value":"/ # #[derive(Clone, Copy, Debug, Eq, Hash, Ord, PartialEq, PartialOrd)]","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pest-2.2.1\\src\\error.rs","byte_start":10786,"byte_end":10859,"line_start":229,"line_end":229,"column_start":5,"column_end":78}},{"value":"/ # enum Rule {","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pest-2.2.1\\src\\error.rs","byte_start":10864,"byte_end":10881,"line_start":230,"line_end":230,"column_start":5,"column_end":22}},{"value":"/ #     open_paren,","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pest-2.2.1\\src\\error.rs","byte_start":10886,"byte_end":10907,"line_start":231,"line_end":231,"column_start":5,"column_end":26}},{"value":"/ #     closed_paren","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pest-2.2.1\\src\\error.rs","byte_start":10912,"byte_end":10934,"line_start":232,"line_end":232,"column_start":5,"column_end":27}},{"value":"/ # }","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pest-2.2.1\\src\\error.rs","byte_start":10939,"byte_end":10946,"line_start":233,"line_end":233,"column_start":5,"column_end":12}},{"value":"/ # let input = \"\";","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pest-2.2.1\\src\\error.rs","byte_start":10951,"byte_end":10972,"line_start":234,"line_end":234,"column_start":5,"column_end":26}},{"value":"/ # let pos = Position::from_start(input);","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pest-2.2.1\\src\\error.rs","byte_start":10977,"byte_end":11021,"line_start":235,"line_end":235,"column_start":5,"column_end":49}},{"value":"/ # let error = Error::new_from_pos(","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pest-2.2.1\\src\\error.rs","byte_start":11026,"byte_end":11064,"line_start":236,"line_end":236,"column_start":5,"column_end":43}},{"value":"/ #     ErrorVariant::ParsingError {","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pest-2.2.1\\src\\error.rs","byte_start":11069,"byte_end":11107,"line_start":237,"line_end":237,"column_start":5,"column_end":43}},{"value":"/ #         positives: vec![Rule::open_paren],","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pest-2.2.1\\src\\error.rs","byte_start":11112,"byte_end":11160,"line_start":238,"line_end":238,"column_start":5,"column_end":53}},{"value":"/ #         negatives: vec![Rule::closed_paren]","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pest-2.2.1\\src\\error.rs","byte_start":11165,"byte_end":11214,"line_start":239,"line_end":239,"column_start":5,"column_end":54}},{"value":"/ #     },","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pest-2.2.1\\src\\error.rs","byte_start":11219,"byte_end":11231,"line_start":240,"line_end":240,"column_start":5,"column_end":17}},{"value":"/ #     pos);","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pest-2.2.1\\src\\error.rs","byte_start":11236,"byte_end":11251,"line_start":241,"line_end":241,"column_start":5,"column_end":20}},{"value":"/ let error = error.with_path(\"file.rs\");","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pest-2.2.1\\src\\error.rs","byte_start":11256,"byte_end":11299,"line_start":242,"line_end":242,"column_start":5,"column_end":48}},{"value":"/ assert_eq!(Some(\"file.rs\"), error.path());","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pest-2.2.1\\src\\error.rs","byte_start":11304,"byte_end":11350,"line_start":243,"line_end":243,"column_start":5,"column_end":51}},{"value":"/ ```","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pest-2.2.1\\src\\error.rs","byte_start":11355,"byte_end":11362,"line_start":244,"line_end":244,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":88},"span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pest-2.2.1\\src\\error.rs","byte_start":11498,"byte_end":11502,"line_start":250,"line_end":250,"column_start":12,"column_end":16},"name":"line","qualname":"<Error<R>>::line","value":"pub fn line(&Self) -> &str","parent":null,"children":[],"decl_id":null,"docs":" Returns the line that the error is on.\n","sig":null,"attributes":[{"value":"/ Returns the line that the error is on.","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pest-2.2.1\\src\\error.rs","byte_start":11444,"byte_end":11486,"line_start":249,"line_end":249,"column_start":5,"column_end":47}}]},{"kind":"Method","id":{"krate":0,"index":89},"span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pest-2.2.1\\src\\error.rs","byte_start":12779,"byte_end":12792,"line_start":289,"line_end":289,"column_start":12,"column_end":25},"name":"renamed_rules","qualname":"<Error<R>>::renamed_rules","value":"pub fn renamed_rules<F>(Self, F) -> Error<R> where F: FnMut(&R) -> String","parent":null,"children":[],"decl_id":null,"docs":" Renames all `Rule`s if this is a [`ParsingError`]. It does nothing when called on a\n [`CustomError`].","sig":null,"attributes":[{"value":"/ Renames all `Rule`s if this is a [`ParsingError`]. It does nothing when called on a","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pest-2.2.1\\src\\error.rs","byte_start":11558,"byte_end":11645,"line_start":254,"line_end":254,"column_start":5,"column_end":92}},{"value":"/ [`CustomError`].","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pest-2.2.1\\src\\error.rs","byte_start":11650,"byte_end":11670,"line_start":255,"line_end":255,"column_start":5,"column_end":25}},{"value":"/","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pest-2.2.1\\src\\error.rs","byte_start":11675,"byte_end":11678,"line_start":256,"line_end":256,"column_start":5,"column_end":8}},{"value":"/ Useful in order to rename verbose rules or have detailed per-`Rule` formatting.","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pest-2.2.1\\src\\error.rs","byte_start":11683,"byte_end":11766,"line_start":257,"line_end":257,"column_start":5,"column_end":88}},{"value":"/","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pest-2.2.1\\src\\error.rs","byte_start":11771,"byte_end":11774,"line_start":258,"line_end":258,"column_start":5,"column_end":8}},{"value":"/ [`ParsingError`]: enum.ErrorVariant.html#variant.ParsingError","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pest-2.2.1\\src\\error.rs","byte_start":11779,"byte_end":11844,"line_start":259,"line_end":259,"column_start":5,"column_end":70}},{"value":"/ [`CustomError`]: enum.ErrorVariant.html#variant.CustomError","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pest-2.2.1\\src\\error.rs","byte_start":11849,"byte_end":11912,"line_start":260,"line_end":260,"column_start":5,"column_end":68}},{"value":"/","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pest-2.2.1\\src\\error.rs","byte_start":11917,"byte_end":11920,"line_start":261,"line_end":261,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pest-2.2.1\\src\\error.rs","byte_start":11925,"byte_end":11939,"line_start":262,"line_end":262,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pest-2.2.1\\src\\error.rs","byte_start":11944,"byte_end":11947,"line_start":263,"line_end":263,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pest-2.2.1\\src\\error.rs","byte_start":11952,"byte_end":11959,"line_start":264,"line_end":264,"column_start":5,"column_end":12}},{"value":"/ # use pest::error::{Error, ErrorVariant};","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pest-2.2.1\\src\\error.rs","byte_start":11964,"byte_end":12009,"line_start":265,"line_end":265,"column_start":5,"column_end":50}},{"value":"/ # use pest::Position;","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pest-2.2.1\\src\\error.rs","byte_start":12014,"byte_end":12039,"line_start":266,"line_end":266,"column_start":5,"column_end":30}},{"value":"/ # #[allow(non_camel_case_types)]","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pest-2.2.1\\src\\error.rs","byte_start":12044,"byte_end":12080,"line_start":267,"line_end":267,"column_start":5,"column_end":41}},{"value":"/ # #[allow(dead_code)]","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pest-2.2.1\\src\\error.rs","byte_start":12085,"byte_end":12110,"line_start":268,"line_end":268,"column_start":5,"column_end":30}},{"value":"/ # #[derive(Clone, Copy, Debug, Eq, Hash, Ord, PartialEq, PartialOrd)]","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pest-2.2.1\\src\\error.rs","byte_start":12115,"byte_end":12188,"line_start":269,"line_end":269,"column_start":5,"column_end":78}},{"value":"/ # enum Rule {","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pest-2.2.1\\src\\error.rs","byte_start":12193,"byte_end":12210,"line_start":270,"line_end":270,"column_start":5,"column_end":22}},{"value":"/ #     open_paren,","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pest-2.2.1\\src\\error.rs","byte_start":12215,"byte_end":12236,"line_start":271,"line_end":271,"column_start":5,"column_end":26}},{"value":"/ #     closed_paren","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pest-2.2.1\\src\\error.rs","byte_start":12241,"byte_end":12263,"line_start":272,"line_end":272,"column_start":5,"column_end":27}},{"value":"/ # }","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pest-2.2.1\\src\\error.rs","byte_start":12268,"byte_end":12275,"line_start":273,"line_end":273,"column_start":5,"column_end":12}},{"value":"/ # let input = \"\";","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pest-2.2.1\\src\\error.rs","byte_start":12280,"byte_end":12301,"line_start":274,"line_end":274,"column_start":5,"column_end":26}},{"value":"/ # let pos = Position::from_start(input);","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pest-2.2.1\\src\\error.rs","byte_start":12306,"byte_end":12350,"line_start":275,"line_end":275,"column_start":5,"column_end":49}},{"value":"/ Error::new_from_pos(","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pest-2.2.1\\src\\error.rs","byte_start":12355,"byte_end":12379,"line_start":276,"line_end":276,"column_start":5,"column_end":29}},{"value":"/     ErrorVariant::ParsingError {","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pest-2.2.1\\src\\error.rs","byte_start":12384,"byte_end":12420,"line_start":277,"line_end":277,"column_start":5,"column_end":41}},{"value":"/         positives: vec![Rule::open_paren],","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pest-2.2.1\\src\\error.rs","byte_start":12425,"byte_end":12471,"line_start":278,"line_end":278,"column_start":5,"column_end":51}},{"value":"/         negatives: vec![Rule::closed_paren]","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pest-2.2.1\\src\\error.rs","byte_start":12476,"byte_end":12523,"line_start":279,"line_end":279,"column_start":5,"column_end":52}},{"value":"/     },","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pest-2.2.1\\src\\error.rs","byte_start":12528,"byte_end":12538,"line_start":280,"line_end":280,"column_start":5,"column_end":15}},{"value":"/     pos","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pest-2.2.1\\src\\error.rs","byte_start":12543,"byte_end":12554,"line_start":281,"line_end":281,"column_start":5,"column_end":16}},{"value":"/ ).renamed_rules(|rule| {","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pest-2.2.1\\src\\error.rs","byte_start":12559,"byte_end":12587,"line_start":282,"line_end":282,"column_start":5,"column_end":33}},{"value":"/     match *rule {","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pest-2.2.1\\src\\error.rs","byte_start":12592,"byte_end":12613,"line_start":283,"line_end":283,"column_start":5,"column_end":26}},{"value":"/         Rule::open_paren => \"(\".to_owned(),","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pest-2.2.1\\src\\error.rs","byte_start":12618,"byte_end":12665,"line_start":284,"line_end":284,"column_start":5,"column_end":52}},{"value":"/         Rule::closed_paren => \"closed paren\".to_owned()","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pest-2.2.1\\src\\error.rs","byte_start":12670,"byte_end":12729,"line_start":285,"line_end":285,"column_start":5,"column_end":64}},{"value":"/     }","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pest-2.2.1\\src\\error.rs","byte_start":12734,"byte_end":12743,"line_start":286,"line_end":286,"column_start":5,"column_end":14}},{"value":"/ });","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pest-2.2.1\\src\\error.rs","byte_start":12748,"byte_end":12755,"line_start":287,"line_end":287,"column_start":5,"column_end":12}},{"value":"/ ```","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pest-2.2.1\\src\\error.rs","byte_start":12760,"byte_end":12767,"line_start":288,"line_end":288,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":103},"span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pest-2.2.1\\src\\error.rs","byte_start":20037,"byte_end":20044,"line_start":510,"line_end":510,"column_start":12,"column_end":19},"name":"message","qualname":"<ErrorVariant<R>>::message","value":"pub fn message(&Self) -> Cow<, str>","parent":null,"children":[],"decl_id":null,"docs":"\n Returns the error message for [`ErrorVariant`]","sig":null,"attributes":[{"value":"/","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pest-2.2.1\\src\\error.rs","byte_start":18956,"byte_end":18959,"line_start":488,"line_end":488,"column_start":5,"column_end":8}},{"value":"/ Returns the error message for [`ErrorVariant`]","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pest-2.2.1\\src\\error.rs","byte_start":18964,"byte_end":19014,"line_start":489,"line_end":489,"column_start":5,"column_end":55}},{"value":"/","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pest-2.2.1\\src\\error.rs","byte_start":19019,"byte_end":19022,"line_start":490,"line_end":490,"column_start":5,"column_end":8}},{"value":"/ If [`ErrorVariant`] is [`CustomError`], it returns a","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pest-2.2.1\\src\\error.rs","byte_start":19027,"byte_end":19083,"line_start":491,"line_end":491,"column_start":5,"column_end":61}},{"value":"/ [`Cow::Borrowed`] reference to [`message`]. If [`ErrorVariant`] is [`ParsingError`], a","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pest-2.2.1\\src\\error.rs","byte_start":19088,"byte_end":19178,"line_start":492,"line_end":492,"column_start":5,"column_end":95}},{"value":"/ [`Cow::Owned`] containing \"expected [ErrorVariant::ParsingError::positives] [ErrorVariant::ParsingError::negatives]\" is returned.","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pest-2.2.1\\src\\error.rs","byte_start":19183,"byte_end":19316,"line_start":493,"line_end":493,"column_start":5,"column_end":138}},{"value":"/","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pest-2.2.1\\src\\error.rs","byte_start":19321,"byte_end":19324,"line_start":494,"line_end":494,"column_start":5,"column_end":8}},{"value":"/ [`ErrorVariant`]: enum.ErrorVariant.html","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pest-2.2.1\\src\\error.rs","byte_start":19329,"byte_end":19373,"line_start":495,"line_end":495,"column_start":5,"column_end":49}},{"value":"/ [`CustomError`]: enum.ErrorVariant.html#variant.CustomError","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pest-2.2.1\\src\\error.rs","byte_start":19378,"byte_end":19441,"line_start":496,"line_end":496,"column_start":5,"column_end":68}},{"value":"/ [`ParsingError`]: enum.ErrorVariant.html#variant.ParsingError","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pest-2.2.1\\src\\error.rs","byte_start":19446,"byte_end":19511,"line_start":497,"line_end":497,"column_start":5,"column_end":70}},{"value":"/ [`Cow::Owned`]: https://doc.rust-lang.org/std/borrow/enum.Cow.html#variant.Owned","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pest-2.2.1\\src\\error.rs","byte_start":19516,"byte_end":19600,"line_start":498,"line_end":498,"column_start":5,"column_end":89}},{"value":"/ [`Cow::Borrowed`]: https://doc.rust-lang.org/std/borrow/enum.Cow.html#variant.Borrowed","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pest-2.2.1\\src\\error.rs","byte_start":19605,"byte_end":19695,"line_start":499,"line_end":499,"column_start":5,"column_end":95}},{"value":"/ [`message`]: enum.ErrorVariant.html#variant.CustomError.field.message","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pest-2.2.1\\src\\error.rs","byte_start":19700,"byte_end":19773,"line_start":500,"line_end":500,"column_start":5,"column_end":78}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pest-2.2.1\\src\\error.rs","byte_start":19778,"byte_end":19792,"line_start":501,"line_end":501,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pest-2.2.1\\src\\error.rs","byte_start":19797,"byte_end":19800,"line_start":502,"line_end":502,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pest-2.2.1\\src\\error.rs","byte_start":19805,"byte_end":19812,"line_start":503,"line_end":503,"column_start":5,"column_end":12}},{"value":"/ # use pest::error::ErrorVariant;","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pest-2.2.1\\src\\error.rs","byte_start":19817,"byte_end":19853,"line_start":504,"line_end":504,"column_start":5,"column_end":41}},{"value":"/ let variant = ErrorVariant::<()>::CustomError {","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pest-2.2.1\\src\\error.rs","byte_start":19858,"byte_end":19909,"line_start":505,"line_end":505,"column_start":5,"column_end":56}},{"value":"/     message: String::from(\"unexpected error\")","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pest-2.2.1\\src\\error.rs","byte_start":19914,"byte_end":19963,"line_start":506,"line_end":506,"column_start":5,"column_end":54}},{"value":"/ };","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pest-2.2.1\\src\\error.rs","byte_start":19968,"byte_end":19974,"line_start":507,"line_end":507,"column_start":5,"column_end":11}},{"value":"/","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pest-2.2.1\\src\\error.rs","byte_start":19979,"byte_end":19982,"line_start":508,"line_end":508,"column_start":5,"column_end":8}},{"value":"/ println!(\"{}\", variant.message());","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pest-2.2.1\\src\\error.rs","byte_start":19987,"byte_end":20025,"line_start":509,"line_end":509,"column_start":5,"column_end":43}}]},{"kind":"Mod","id":{"krate":0,"index":106},"span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pest-2.2.1\\src\\iterators\\mod.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"iterators","qualname":"::iterators","value":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pest-2.2.1\\src\\iterators\\mod.rs","parent":null,"children":[{"krate":0,"index":107},{"krate":0,"index":170},{"krate":0,"index":260},{"krate":0,"index":359},{"krate":0,"index":360},{"krate":0,"index":404},{"krate":0,"index":407},{"krate":0,"index":410},{"krate":0,"index":413},{"krate":0,"index":416}],"decl_id":null,"docs":" Types and iterators for parser output.\n","sig":null,"attributes":[{"value":"/ Types and iterators for parser output.","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pest-2.2.1\\src\\iterators\\mod.rs","byte_start":30343,"byte_end":30385,"line_start":10,"line_end":10,"column_start":1,"column_end":43}}]},{"kind":"Struct","id":{"krate":0,"index":137},"span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pest-2.2.1\\src\\iterators\\flat_pairs.rs","byte_start":31412,"byte_end":31421,"line_start":23,"line_end":23,"column_start":12,"column_end":21},"name":"FlatPairs","qualname":"::iterators::flat_pairs::FlatPairs","value":"FlatPairs {  }","parent":null,"children":[{"krate":0,"index":140},{"krate":0,"index":141},{"krate":0,"index":142},{"krate":0,"index":143}],"decl_id":null,"docs":" An iterator over [`Pair`]s. It is created by [`Pairs::flatten`].","sig":null,"attributes":[{"value":"/ An iterator over [`Pair`]s. It is created by [`Pairs::flatten`].","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pest-2.2.1\\src\\iterators\\flat_pairs.rs","byte_start":31240,"byte_end":31308,"line_start":19,"line_end":19,"column_start":1,"column_end":69}},{"value":"/","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pest-2.2.1\\src\\iterators\\flat_pairs.rs","byte_start":31309,"byte_end":31312,"line_start":20,"line_end":20,"column_start":1,"column_end":4}},{"value":"/ [`Pair`]: struct.Pair.html","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pest-2.2.1\\src\\iterators\\flat_pairs.rs","byte_start":31313,"byte_end":31343,"line_start":21,"line_end":21,"column_start":1,"column_end":31}},{"value":"/ [`Pairs::flatten`]: struct.Pairs.html#method.flatten","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pest-2.2.1\\src\\iterators\\flat_pairs.rs","byte_start":31344,"byte_end":31400,"line_start":22,"line_end":22,"column_start":1,"column_end":57}}]},{"kind":"Method","id":{"krate":0,"index":149},"span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pest-2.2.1\\src\\iterators\\flat_pairs.rs","byte_start":32678,"byte_end":32684,"line_start":74,"line_end":74,"column_start":12,"column_end":18},"name":"tokens","qualname":"<FlatPairs>::tokens","value":"pub fn tokens(Self) -> Tokens","parent":null,"children":[],"decl_id":null,"docs":" Returns the `Tokens` for these pairs.","sig":null,"attributes":[{"value":"/ Returns the `Tokens` for these pairs.","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pest-2.2.1\\src\\iterators\\flat_pairs.rs","byte_start":32031,"byte_end":32072,"line_start":51,"line_end":51,"column_start":5,"column_end":46}},{"value":"/","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pest-2.2.1\\src\\iterators\\flat_pairs.rs","byte_start":32077,"byte_end":32080,"line_start":52,"line_end":52,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pest-2.2.1\\src\\iterators\\flat_pairs.rs","byte_start":32085,"byte_end":32099,"line_start":53,"line_end":53,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pest-2.2.1\\src\\iterators\\flat_pairs.rs","byte_start":32104,"byte_end":32107,"line_start":54,"line_end":54,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pest-2.2.1\\src\\iterators\\flat_pairs.rs","byte_start":32112,"byte_end":32119,"line_start":55,"line_end":55,"column_start":5,"column_end":12}},{"value":"/ # use std::rc::Rc;","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pest-2.2.1\\src\\iterators\\flat_pairs.rs","byte_start":32124,"byte_end":32146,"line_start":56,"line_end":56,"column_start":5,"column_end":27}},{"value":"/ # use pest;","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pest-2.2.1\\src\\iterators\\flat_pairs.rs","byte_start":32151,"byte_end":32166,"line_start":57,"line_end":57,"column_start":5,"column_end":20}},{"value":"/ # #[allow(non_camel_case_types)]","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pest-2.2.1\\src\\iterators\\flat_pairs.rs","byte_start":32171,"byte_end":32207,"line_start":58,"line_end":58,"column_start":5,"column_end":41}},{"value":"/ # #[derive(Clone, Copy, Debug, Eq, Hash, Ord, PartialEq, PartialOrd)]","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pest-2.2.1\\src\\iterators\\flat_pairs.rs","byte_start":32212,"byte_end":32285,"line_start":59,"line_end":59,"column_start":5,"column_end":78}},{"value":"/ enum Rule {","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pest-2.2.1\\src\\iterators\\flat_pairs.rs","byte_start":32290,"byte_end":32305,"line_start":60,"line_end":60,"column_start":5,"column_end":20}},{"value":"/     a","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pest-2.2.1\\src\\iterators\\flat_pairs.rs","byte_start":32310,"byte_end":32319,"line_start":61,"line_end":61,"column_start":5,"column_end":14}},{"value":"/ }","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pest-2.2.1\\src\\iterators\\flat_pairs.rs","byte_start":32324,"byte_end":32329,"line_start":62,"line_end":62,"column_start":5,"column_end":10}},{"value":"/","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pest-2.2.1\\src\\iterators\\flat_pairs.rs","byte_start":32334,"byte_end":32337,"line_start":63,"line_end":63,"column_start":5,"column_end":8}},{"value":"/ let input = \"\";","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pest-2.2.1\\src\\iterators\\flat_pairs.rs","byte_start":32342,"byte_end":32361,"line_start":64,"line_end":64,"column_start":5,"column_end":24}},{"value":"/ let pairs = pest::state(input, |state| {","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pest-2.2.1\\src\\iterators\\flat_pairs.rs","byte_start":32366,"byte_end":32410,"line_start":65,"line_end":65,"column_start":5,"column_end":49}},{"value":"/     // generating Token pair with Rule::a ...","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pest-2.2.1\\src\\iterators\\flat_pairs.rs","byte_start":32415,"byte_end":32464,"line_start":66,"line_end":66,"column_start":5,"column_end":54}},{"value":"/ #     state.rule(Rule::a, |s| Ok(s))","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pest-2.2.1\\src\\iterators\\flat_pairs.rs","byte_start":32469,"byte_end":32509,"line_start":67,"line_end":67,"column_start":5,"column_end":45}},{"value":"/ }).unwrap();","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pest-2.2.1\\src\\iterators\\flat_pairs.rs","byte_start":32514,"byte_end":32530,"line_start":68,"line_end":68,"column_start":5,"column_end":21}},{"value":"/ let tokens: Vec<_> = pairs.flatten().tokens().collect();","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pest-2.2.1\\src\\iterators\\flat_pairs.rs","byte_start":32535,"byte_end":32595,"line_start":69,"line_end":69,"column_start":5,"column_end":65}},{"value":"/","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pest-2.2.1\\src\\iterators\\flat_pairs.rs","byte_start":32600,"byte_end":32603,"line_start":70,"line_end":70,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(tokens.len(), 2);","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pest-2.2.1\\src\\iterators\\flat_pairs.rs","byte_start":32608,"byte_end":32640,"line_start":71,"line_end":71,"column_start":5,"column_end":37}},{"value":"/ ```","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pest-2.2.1\\src\\iterators\\flat_pairs.rs","byte_start":32645,"byte_end":32652,"line_start":72,"line_end":72,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pest-2.2.1\\src\\iterators\\flat_pairs.rs","byte_start":32657,"byte_end":32666,"line_start":73,"line_end":73,"column_start":5,"column_end":14}}]},{"kind":"Struct","id":{"krate":0,"index":862},"span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pest-2.2.1\\src\\iterators\\pair.rs","byte_start":36572,"byte_end":36576,"line_start":38,"line_end":38,"column_start":12,"column_end":16},"name":"Pair","qualname":"::iterators::pair::Pair","value":"Pair {  }","parent":null,"children":[{"krate":0,"index":865},{"krate":0,"index":866},{"krate":0,"index":867}],"decl_id":null,"docs":" A matching pair of [`Token`]s and everything between them.","sig":null,"attributes":[{"value":"/ A matching pair of [`Token`]s and everything between them.","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pest-2.2.1\\src\\iterators\\pair.rs","byte_start":36132,"byte_end":36194,"line_start":29,"line_end":29,"column_start":1,"column_end":63}},{"value":"/","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pest-2.2.1\\src\\iterators\\pair.rs","byte_start":36195,"byte_end":36198,"line_start":30,"line_end":30,"column_start":1,"column_end":4}},{"value":"/ A matching `Token` pair is formed by a `Token::Start` and a subsequent `Token::End` with the","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pest-2.2.1\\src\\iterators\\pair.rs","byte_start":36199,"byte_end":36295,"line_start":31,"line_end":31,"column_start":1,"column_end":97}},{"value":"/ same `Rule`, with the condition that all `Token`s between them can form such pairs as well.","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pest-2.2.1\\src\\iterators\\pair.rs","byte_start":36296,"byte_end":36391,"line_start":32,"line_end":32,"column_start":1,"column_end":96}},{"value":"/ This is similar to the [brace matching problem](https://en.wikipedia.org/wiki/Brace_matching) in","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pest-2.2.1\\src\\iterators\\pair.rs","byte_start":36392,"byte_end":36492,"line_start":33,"line_end":33,"column_start":1,"column_end":101}},{"value":"/ editors.","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pest-2.2.1\\src\\iterators\\pair.rs","byte_start":36493,"byte_end":36505,"line_start":34,"line_end":34,"column_start":1,"column_end":13}},{"value":"/","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pest-2.2.1\\src\\iterators\\pair.rs","byte_start":36506,"byte_end":36509,"line_start":35,"line_end":35,"column_start":1,"column_end":4}},{"value":"/ [`Token`]: ../enum.Token.html","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pest-2.2.1\\src\\iterators\\pair.rs","byte_start":36510,"byte_end":36543,"line_start":36,"line_end":36,"column_start":1,"column_end":34}}]},{"kind":"Method","id":{"krate":0,"index":228},"span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pest-2.2.1\\src\\iterators\\pair.rs","byte_start":37761,"byte_end":37768,"line_start":86,"line_end":86,"column_start":12,"column_end":19},"name":"as_rule","qualname":"<Pair>::as_rule","value":"pub fn as_rule(&Self) -> R","parent":null,"children":[],"decl_id":null,"docs":" Returns the `Rule` of the `Pair`.","sig":null,"attributes":[{"value":"/ Returns the `Rule` of the `Pair`.","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pest-2.2.1\\src\\iterators\\pair.rs","byte_start":37160,"byte_end":37197,"line_start":64,"line_end":64,"column_start":5,"column_end":42}},{"value":"/","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pest-2.2.1\\src\\iterators\\pair.rs","byte_start":37202,"byte_end":37205,"line_start":65,"line_end":65,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pest-2.2.1\\src\\iterators\\pair.rs","byte_start":37210,"byte_end":37224,"line_start":66,"line_end":66,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pest-2.2.1\\src\\iterators\\pair.rs","byte_start":37229,"byte_end":37232,"line_start":67,"line_end":67,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pest-2.2.1\\src\\iterators\\pair.rs","byte_start":37237,"byte_end":37244,"line_start":68,"line_end":68,"column_start":5,"column_end":12}},{"value":"/ # use std::rc::Rc;","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pest-2.2.1\\src\\iterators\\pair.rs","byte_start":37249,"byte_end":37271,"line_start":69,"line_end":69,"column_start":5,"column_end":27}},{"value":"/ # use pest;","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pest-2.2.1\\src\\iterators\\pair.rs","byte_start":37276,"byte_end":37291,"line_start":70,"line_end":70,"column_start":5,"column_end":20}},{"value":"/ # #[allow(non_camel_case_types)]","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pest-2.2.1\\src\\iterators\\pair.rs","byte_start":37296,"byte_end":37332,"line_start":71,"line_end":71,"column_start":5,"column_end":41}},{"value":"/ # #[derive(Clone, Copy, Debug, Eq, Hash, Ord, PartialEq, PartialOrd)]","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pest-2.2.1\\src\\iterators\\pair.rs","byte_start":37337,"byte_end":37410,"line_start":72,"line_end":72,"column_start":5,"column_end":78}},{"value":"/ enum Rule {","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pest-2.2.1\\src\\iterators\\pair.rs","byte_start":37415,"byte_end":37430,"line_start":73,"line_end":73,"column_start":5,"column_end":20}},{"value":"/     a","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pest-2.2.1\\src\\iterators\\pair.rs","byte_start":37435,"byte_end":37444,"line_start":74,"line_end":74,"column_start":5,"column_end":14}},{"value":"/ }","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pest-2.2.1\\src\\iterators\\pair.rs","byte_start":37449,"byte_end":37454,"line_start":75,"line_end":75,"column_start":5,"column_end":10}},{"value":"/","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pest-2.2.1\\src\\iterators\\pair.rs","byte_start":37459,"byte_end":37462,"line_start":76,"line_end":76,"column_start":5,"column_end":8}},{"value":"/ let input = \"\";","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pest-2.2.1\\src\\iterators\\pair.rs","byte_start":37467,"byte_end":37486,"line_start":77,"line_end":77,"column_start":5,"column_end":24}},{"value":"/ let pair = pest::state(input, |state| {","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pest-2.2.1\\src\\iterators\\pair.rs","byte_start":37491,"byte_end":37534,"line_start":78,"line_end":78,"column_start":5,"column_end":48}},{"value":"/     // generating Token pair with Rule::a ...","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pest-2.2.1\\src\\iterators\\pair.rs","byte_start":37539,"byte_end":37588,"line_start":79,"line_end":79,"column_start":5,"column_end":54}},{"value":"/ #     state.rule(Rule::a, |s| Ok(s))","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pest-2.2.1\\src\\iterators\\pair.rs","byte_start":37593,"byte_end":37633,"line_start":80,"line_end":80,"column_start":5,"column_end":45}},{"value":"/ }).unwrap().next().unwrap();","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pest-2.2.1\\src\\iterators\\pair.rs","byte_start":37638,"byte_end":37670,"line_start":81,"line_end":81,"column_start":5,"column_end":37}},{"value":"/","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pest-2.2.1\\src\\iterators\\pair.rs","byte_start":37675,"byte_end":37678,"line_start":82,"line_end":82,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(pair.as_rule(), Rule::a);","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pest-2.2.1\\src\\iterators\\pair.rs","byte_start":37683,"byte_end":37723,"line_start":83,"line_end":83,"column_start":5,"column_end":45}},{"value":"/ ```","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pest-2.2.1\\src\\iterators\\pair.rs","byte_start":37728,"byte_end":37735,"line_start":84,"line_end":84,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pest-2.2.1\\src\\iterators\\pair.rs","byte_start":37740,"byte_end":37749,"line_start":85,"line_end":85,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":229},"span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pest-2.2.1\\src\\iterators\\pair.rs","byte_start":38576,"byte_end":38582,"line_start":115,"line_end":115,"column_start":12,"column_end":18},"name":"as_str","qualname":"<Pair>::as_str","value":"pub fn as_str(&Self) -> &'i str","parent":null,"children":[],"decl_id":null,"docs":" Captures a slice from the `&str` defined by the token `Pair`.","sig":null,"attributes":[{"value":"/ Captures a slice from the `&str` defined by the token `Pair`.","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pest-2.2.1\\src\\iterators\\pair.rs","byte_start":37931,"byte_end":37996,"line_start":93,"line_end":93,"column_start":5,"column_end":70}},{"value":"/","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pest-2.2.1\\src\\iterators\\pair.rs","byte_start":38001,"byte_end":38004,"line_start":94,"line_end":94,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pest-2.2.1\\src\\iterators\\pair.rs","byte_start":38009,"byte_end":38023,"line_start":95,"line_end":95,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pest-2.2.1\\src\\iterators\\pair.rs","byte_start":38028,"byte_end":38031,"line_start":96,"line_end":96,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pest-2.2.1\\src\\iterators\\pair.rs","byte_start":38036,"byte_end":38043,"line_start":97,"line_end":97,"column_start":5,"column_end":12}},{"value":"/ # use std::rc::Rc;","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pest-2.2.1\\src\\iterators\\pair.rs","byte_start":38048,"byte_end":38070,"line_start":98,"line_end":98,"column_start":5,"column_end":27}},{"value":"/ # use pest;","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pest-2.2.1\\src\\iterators\\pair.rs","byte_start":38075,"byte_end":38090,"line_start":99,"line_end":99,"column_start":5,"column_end":20}},{"value":"/ # #[allow(non_camel_case_types)]","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pest-2.2.1\\src\\iterators\\pair.rs","byte_start":38095,"byte_end":38131,"line_start":100,"line_end":100,"column_start":5,"column_end":41}},{"value":"/ # #[derive(Clone, Copy, Debug, Eq, Hash, Ord, PartialEq, PartialOrd)]","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pest-2.2.1\\src\\iterators\\pair.rs","byte_start":38136,"byte_end":38209,"line_start":101,"line_end":101,"column_start":5,"column_end":78}},{"value":"/ enum Rule {","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pest-2.2.1\\src\\iterators\\pair.rs","byte_start":38214,"byte_end":38229,"line_start":102,"line_end":102,"column_start":5,"column_end":20}},{"value":"/     ab","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pest-2.2.1\\src\\iterators\\pair.rs","byte_start":38234,"byte_end":38244,"line_start":103,"line_end":103,"column_start":5,"column_end":15}},{"value":"/ }","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pest-2.2.1\\src\\iterators\\pair.rs","byte_start":38249,"byte_end":38254,"line_start":104,"line_end":104,"column_start":5,"column_end":10}},{"value":"/","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pest-2.2.1\\src\\iterators\\pair.rs","byte_start":38259,"byte_end":38262,"line_start":105,"line_end":105,"column_start":5,"column_end":8}},{"value":"/ let input = \"ab\";","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pest-2.2.1\\src\\iterators\\pair.rs","byte_start":38267,"byte_end":38288,"line_start":106,"line_end":106,"column_start":5,"column_end":26}},{"value":"/ let pair = pest::state(input, |state| {","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pest-2.2.1\\src\\iterators\\pair.rs","byte_start":38293,"byte_end":38336,"line_start":107,"line_end":107,"column_start":5,"column_end":48}},{"value":"/     // generating Token pair with Rule::ab ...","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pest-2.2.1\\src\\iterators\\pair.rs","byte_start":38341,"byte_end":38391,"line_start":108,"line_end":108,"column_start":5,"column_end":55}},{"value":"/ #     state.rule(Rule::ab, |s| s.match_string(\"ab\"))","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pest-2.2.1\\src\\iterators\\pair.rs","byte_start":38396,"byte_end":38452,"line_start":109,"line_end":109,"column_start":5,"column_end":61}},{"value":"/ }).unwrap().next().unwrap();","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pest-2.2.1\\src\\iterators\\pair.rs","byte_start":38457,"byte_end":38489,"line_start":110,"line_end":110,"column_start":5,"column_end":37}},{"value":"/","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pest-2.2.1\\src\\iterators\\pair.rs","byte_start":38494,"byte_end":38497,"line_start":111,"line_end":111,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(pair.as_str(), \"ab\");","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pest-2.2.1\\src\\iterators\\pair.rs","byte_start":38502,"byte_end":38538,"line_start":112,"line_end":112,"column_start":5,"column_end":41}},{"value":"/ ```","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pest-2.2.1\\src\\iterators\\pair.rs","byte_start":38543,"byte_end":38550,"line_start":113,"line_end":113,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pest-2.2.1\\src\\iterators\\pair.rs","byte_start":38555,"byte_end":38564,"line_start":114,"line_end":114,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":230},"span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pest-2.2.1\\src\\iterators\\pair.rs","byte_start":39536,"byte_end":39545,"line_start":146,"line_end":146,"column_start":12,"column_end":21},"name":"into_span","qualname":"<Pair>::into_span","value":"pub fn into_span(Self) -> Span","parent":null,"children":[],"decl_id":null,"docs":" Returns the `Span` defined by the `Pair`, consuming it.","sig":null,"attributes":[{"value":"/ Returns the `Span` defined by the `Pair`, consuming it.","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pest-2.2.1\\src\\iterators\\pair.rs","byte_start":38811,"byte_end":38870,"line_start":123,"line_end":123,"column_start":5,"column_end":64}},{"value":"/","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pest-2.2.1\\src\\iterators\\pair.rs","byte_start":38875,"byte_end":38878,"line_start":124,"line_end":124,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pest-2.2.1\\src\\iterators\\pair.rs","byte_start":38883,"byte_end":38897,"line_start":125,"line_end":125,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pest-2.2.1\\src\\iterators\\pair.rs","byte_start":38902,"byte_end":38905,"line_start":126,"line_end":126,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pest-2.2.1\\src\\iterators\\pair.rs","byte_start":38910,"byte_end":38917,"line_start":127,"line_end":127,"column_start":5,"column_end":12}},{"value":"/ # use std::rc::Rc;","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pest-2.2.1\\src\\iterators\\pair.rs","byte_start":38922,"byte_end":38944,"line_start":128,"line_end":128,"column_start":5,"column_end":27}},{"value":"/ # use pest;","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pest-2.2.1\\src\\iterators\\pair.rs","byte_start":38949,"byte_end":38964,"line_start":129,"line_end":129,"column_start":5,"column_end":20}},{"value":"/ # #[allow(non_camel_case_types)]","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pest-2.2.1\\src\\iterators\\pair.rs","byte_start":38969,"byte_end":39005,"line_start":130,"line_end":130,"column_start":5,"column_end":41}},{"value":"/ # #[derive(Clone, Copy, Debug, Eq, Hash, Ord, PartialEq, PartialOrd)]","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pest-2.2.1\\src\\iterators\\pair.rs","byte_start":39010,"byte_end":39083,"line_start":131,"line_end":131,"column_start":5,"column_end":78}},{"value":"/ enum Rule {","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pest-2.2.1\\src\\iterators\\pair.rs","byte_start":39088,"byte_end":39103,"line_start":132,"line_end":132,"column_start":5,"column_end":20}},{"value":"/     ab","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pest-2.2.1\\src\\iterators\\pair.rs","byte_start":39108,"byte_end":39118,"line_start":133,"line_end":133,"column_start":5,"column_end":15}},{"value":"/ }","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pest-2.2.1\\src\\iterators\\pair.rs","byte_start":39123,"byte_end":39128,"line_start":134,"line_end":134,"column_start":5,"column_end":10}},{"value":"/","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pest-2.2.1\\src\\iterators\\pair.rs","byte_start":39133,"byte_end":39136,"line_start":135,"line_end":135,"column_start":5,"column_end":8}},{"value":"/ let input = \"ab\";","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pest-2.2.1\\src\\iterators\\pair.rs","byte_start":39141,"byte_end":39162,"line_start":136,"line_end":136,"column_start":5,"column_end":26}},{"value":"/ let pair = pest::state(input, |state| {","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pest-2.2.1\\src\\iterators\\pair.rs","byte_start":39167,"byte_end":39210,"line_start":137,"line_end":137,"column_start":5,"column_end":48}},{"value":"/     // generating Token pair with Rule::ab ...","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pest-2.2.1\\src\\iterators\\pair.rs","byte_start":39215,"byte_end":39265,"line_start":138,"line_end":138,"column_start":5,"column_end":55}},{"value":"/ #     state.rule(Rule::ab, |s| s.match_string(\"ab\"))","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pest-2.2.1\\src\\iterators\\pair.rs","byte_start":39270,"byte_end":39326,"line_start":139,"line_end":139,"column_start":5,"column_end":61}},{"value":"/ }).unwrap().next().unwrap();","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pest-2.2.1\\src\\iterators\\pair.rs","byte_start":39331,"byte_end":39363,"line_start":140,"line_end":140,"column_start":5,"column_end":37}},{"value":"/","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pest-2.2.1\\src\\iterators\\pair.rs","byte_start":39368,"byte_end":39371,"line_start":141,"line_end":141,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(pair.into_span().as_str(), \"ab\");","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pest-2.2.1\\src\\iterators\\pair.rs","byte_start":39376,"byte_end":39424,"line_start":142,"line_end":142,"column_start":5,"column_end":53}},{"value":"/ ```","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pest-2.2.1\\src\\iterators\\pair.rs","byte_start":39429,"byte_end":39436,"line_start":143,"line_end":143,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pest-2.2.1\\src\\iterators\\pair.rs","byte_start":39441,"byte_end":39450,"line_start":144,"line_end":144,"column_start":5,"column_end":14}},{"value":"deprecated(since = \"2.0.0\", note = \"Please use `as_span` instead\")","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pest-2.2.1\\src\\iterators\\pair.rs","byte_start":39455,"byte_end":39524,"line_start":145,"line_end":145,"column_start":5,"column_end":74}}]},{"kind":"Method","id":{"krate":0,"index":231},"span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pest-2.2.1\\src\\iterators\\pair.rs","byte_start":40261,"byte_end":40268,"line_start":172,"line_end":172,"column_start":12,"column_end":19},"name":"as_span","qualname":"<Pair>::as_span","value":"pub fn as_span(&Self) -> Span","parent":null,"children":[],"decl_id":null,"docs":" Returns the `Span` defined by the `Pair`, **without** consuming it.","sig":null,"attributes":[{"value":"/ Returns the `Span` defined by the `Pair`, **without** consuming it.","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pest-2.2.1\\src\\iterators\\pair.rs","byte_start":39600,"byte_end":39671,"line_start":150,"line_end":150,"column_start":5,"column_end":76}},{"value":"/","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pest-2.2.1\\src\\iterators\\pair.rs","byte_start":39676,"byte_end":39679,"line_start":151,"line_end":151,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pest-2.2.1\\src\\iterators\\pair.rs","byte_start":39684,"byte_end":39698,"line_start":152,"line_end":152,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pest-2.2.1\\src\\iterators\\pair.rs","byte_start":39703,"byte_end":39706,"line_start":153,"line_end":153,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pest-2.2.1\\src\\iterators\\pair.rs","byte_start":39711,"byte_end":39718,"line_start":154,"line_end":154,"column_start":5,"column_end":12}},{"value":"/ # use std::rc::Rc;","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pest-2.2.1\\src\\iterators\\pair.rs","byte_start":39723,"byte_end":39745,"line_start":155,"line_end":155,"column_start":5,"column_end":27}},{"value":"/ # use pest;","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pest-2.2.1\\src\\iterators\\pair.rs","byte_start":39750,"byte_end":39765,"line_start":156,"line_end":156,"column_start":5,"column_end":20}},{"value":"/ # #[allow(non_camel_case_types)]","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pest-2.2.1\\src\\iterators\\pair.rs","byte_start":39770,"byte_end":39806,"line_start":157,"line_end":157,"column_start":5,"column_end":41}},{"value":"/ # #[derive(Clone, Copy, Debug, Eq, Hash, Ord, PartialEq, PartialOrd)]","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pest-2.2.1\\src\\iterators\\pair.rs","byte_start":39811,"byte_end":39884,"line_start":158,"line_end":158,"column_start":5,"column_end":78}},{"value":"/ enum Rule {","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pest-2.2.1\\src\\iterators\\pair.rs","byte_start":39889,"byte_end":39904,"line_start":159,"line_end":159,"column_start":5,"column_end":20}},{"value":"/     ab","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pest-2.2.1\\src\\iterators\\pair.rs","byte_start":39909,"byte_end":39919,"line_start":160,"line_end":160,"column_start":5,"column_end":15}},{"value":"/ }","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pest-2.2.1\\src\\iterators\\pair.rs","byte_start":39924,"byte_end":39929,"line_start":161,"line_end":161,"column_start":5,"column_end":10}},{"value":"/","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pest-2.2.1\\src\\iterators\\pair.rs","byte_start":39934,"byte_end":39937,"line_start":162,"line_end":162,"column_start":5,"column_end":8}},{"value":"/ let input = \"ab\";","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pest-2.2.1\\src\\iterators\\pair.rs","byte_start":39942,"byte_end":39963,"line_start":163,"line_end":163,"column_start":5,"column_end":26}},{"value":"/ let pair = pest::state(input, |state| {","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pest-2.2.1\\src\\iterators\\pair.rs","byte_start":39968,"byte_end":40011,"line_start":164,"line_end":164,"column_start":5,"column_end":48}},{"value":"/     // generating Token pair with Rule::ab ...","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pest-2.2.1\\src\\iterators\\pair.rs","byte_start":40016,"byte_end":40066,"line_start":165,"line_end":165,"column_start":5,"column_end":55}},{"value":"/ #     state.rule(Rule::ab, |s| s.match_string(\"ab\"))","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pest-2.2.1\\src\\iterators\\pair.rs","byte_start":40071,"byte_end":40127,"line_start":166,"line_end":166,"column_start":5,"column_end":61}},{"value":"/ }).unwrap().next().unwrap();","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pest-2.2.1\\src\\iterators\\pair.rs","byte_start":40132,"byte_end":40164,"line_start":167,"line_end":167,"column_start":5,"column_end":37}},{"value":"/","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pest-2.2.1\\src\\iterators\\pair.rs","byte_start":40169,"byte_end":40172,"line_start":168,"line_end":168,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(pair.as_span().as_str(), \"ab\");","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pest-2.2.1\\src\\iterators\\pair.rs","byte_start":40177,"byte_end":40223,"line_start":169,"line_end":169,"column_start":5,"column_end":51}},{"value":"/ ```","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pest-2.2.1\\src\\iterators\\pair.rs","byte_start":40228,"byte_end":40235,"line_start":170,"line_end":170,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pest-2.2.1\\src\\iterators\\pair.rs","byte_start":40240,"byte_end":40249,"line_start":171,"line_end":171,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":232},"span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pest-2.2.1\\src\\iterators\\pair.rs","byte_start":41170,"byte_end":41180,"line_start":202,"line_end":202,"column_start":12,"column_end":22},"name":"into_inner","qualname":"<Pair>::into_inner","value":"pub fn into_inner(Self) -> Pairs","parent":null,"children":[],"decl_id":null,"docs":" Returns the inner `Pairs` between the `Pair`, consuming it.","sig":null,"attributes":[{"value":"/ Returns the inner `Pairs` between the `Pair`, consuming it.","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pest-2.2.1\\src\\iterators\\pair.rs","byte_start":40535,"byte_end":40598,"line_start":180,"line_end":180,"column_start":5,"column_end":68}},{"value":"/","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pest-2.2.1\\src\\iterators\\pair.rs","byte_start":40603,"byte_end":40606,"line_start":181,"line_end":181,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pest-2.2.1\\src\\iterators\\pair.rs","byte_start":40611,"byte_end":40625,"line_start":182,"line_end":182,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pest-2.2.1\\src\\iterators\\pair.rs","byte_start":40630,"byte_end":40633,"line_start":183,"line_end":183,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pest-2.2.1\\src\\iterators\\pair.rs","byte_start":40638,"byte_end":40645,"line_start":184,"line_end":184,"column_start":5,"column_end":12}},{"value":"/ # use std::rc::Rc;","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pest-2.2.1\\src\\iterators\\pair.rs","byte_start":40650,"byte_end":40672,"line_start":185,"line_end":185,"column_start":5,"column_end":27}},{"value":"/ # use pest;","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pest-2.2.1\\src\\iterators\\pair.rs","byte_start":40677,"byte_end":40692,"line_start":186,"line_end":186,"column_start":5,"column_end":20}},{"value":"/ # #[allow(non_camel_case_types)]","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pest-2.2.1\\src\\iterators\\pair.rs","byte_start":40697,"byte_end":40733,"line_start":187,"line_end":187,"column_start":5,"column_end":41}},{"value":"/ # #[derive(Clone, Copy, Debug, Eq, Hash, Ord, PartialEq, PartialOrd)]","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pest-2.2.1\\src\\iterators\\pair.rs","byte_start":40738,"byte_end":40811,"line_start":188,"line_end":188,"column_start":5,"column_end":78}},{"value":"/ enum Rule {","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pest-2.2.1\\src\\iterators\\pair.rs","byte_start":40816,"byte_end":40831,"line_start":189,"line_end":189,"column_start":5,"column_end":20}},{"value":"/     a","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pest-2.2.1\\src\\iterators\\pair.rs","byte_start":40836,"byte_end":40845,"line_start":190,"line_end":190,"column_start":5,"column_end":14}},{"value":"/ }","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pest-2.2.1\\src\\iterators\\pair.rs","byte_start":40850,"byte_end":40855,"line_start":191,"line_end":191,"column_start":5,"column_end":10}},{"value":"/","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pest-2.2.1\\src\\iterators\\pair.rs","byte_start":40860,"byte_end":40863,"line_start":192,"line_end":192,"column_start":5,"column_end":8}},{"value":"/ let input = \"\";","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pest-2.2.1\\src\\iterators\\pair.rs","byte_start":40868,"byte_end":40887,"line_start":193,"line_end":193,"column_start":5,"column_end":24}},{"value":"/ let pair = pest::state(input, |state| {","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pest-2.2.1\\src\\iterators\\pair.rs","byte_start":40892,"byte_end":40935,"line_start":194,"line_end":194,"column_start":5,"column_end":48}},{"value":"/     // generating Token pair with Rule::a ...","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pest-2.2.1\\src\\iterators\\pair.rs","byte_start":40940,"byte_end":40989,"line_start":195,"line_end":195,"column_start":5,"column_end":54}},{"value":"/ #     state.rule(Rule::a, |s| Ok(s))","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pest-2.2.1\\src\\iterators\\pair.rs","byte_start":40994,"byte_end":41034,"line_start":196,"line_end":196,"column_start":5,"column_end":45}},{"value":"/ }).unwrap().next().unwrap();","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pest-2.2.1\\src\\iterators\\pair.rs","byte_start":41039,"byte_end":41071,"line_start":197,"line_end":197,"column_start":5,"column_end":37}},{"value":"/","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pest-2.2.1\\src\\iterators\\pair.rs","byte_start":41076,"byte_end":41079,"line_start":198,"line_end":198,"column_start":5,"column_end":8}},{"value":"/ assert!(pair.into_inner().next().is_none());","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pest-2.2.1\\src\\iterators\\pair.rs","byte_start":41084,"byte_end":41132,"line_start":199,"line_end":199,"column_start":5,"column_end":53}},{"value":"/ ```","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pest-2.2.1\\src\\iterators\\pair.rs","byte_start":41137,"byte_end":41144,"line_start":200,"line_end":200,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pest-2.2.1\\src\\iterators\\pair.rs","byte_start":41149,"byte_end":41158,"line_start":201,"line_end":201,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":233},"span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pest-2.2.1\\src\\iterators\\pair.rs","byte_start":41964,"byte_end":41970,"line_start":231,"line_end":231,"column_start":12,"column_end":18},"name":"tokens","qualname":"<Pair>::tokens","value":"pub fn tokens(Self) -> Tokens","parent":null,"children":[],"decl_id":null,"docs":" Returns the `Tokens` for the `Pair`.","sig":null,"attributes":[{"value":"/ Returns the `Tokens` for the `Pair`.","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pest-2.2.1\\src\\iterators\\pair.rs","byte_start":41314,"byte_end":41354,"line_start":208,"line_end":208,"column_start":5,"column_end":45}},{"value":"/","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pest-2.2.1\\src\\iterators\\pair.rs","byte_start":41359,"byte_end":41362,"line_start":209,"line_end":209,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pest-2.2.1\\src\\iterators\\pair.rs","byte_start":41367,"byte_end":41381,"line_start":210,"line_end":210,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pest-2.2.1\\src\\iterators\\pair.rs","byte_start":41386,"byte_end":41389,"line_start":211,"line_end":211,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pest-2.2.1\\src\\iterators\\pair.rs","byte_start":41394,"byte_end":41401,"line_start":212,"line_end":212,"column_start":5,"column_end":12}},{"value":"/ # use std::rc::Rc;","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pest-2.2.1\\src\\iterators\\pair.rs","byte_start":41406,"byte_end":41428,"line_start":213,"line_end":213,"column_start":5,"column_end":27}},{"value":"/ # use pest;","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pest-2.2.1\\src\\iterators\\pair.rs","byte_start":41433,"byte_end":41448,"line_start":214,"line_end":214,"column_start":5,"column_end":20}},{"value":"/ # #[allow(non_camel_case_types)]","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pest-2.2.1\\src\\iterators\\pair.rs","byte_start":41453,"byte_end":41489,"line_start":215,"line_end":215,"column_start":5,"column_end":41}},{"value":"/ # #[derive(Clone, Copy, Debug, Eq, Hash, Ord, PartialEq, PartialOrd)]","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pest-2.2.1\\src\\iterators\\pair.rs","byte_start":41494,"byte_end":41567,"line_start":216,"line_end":216,"column_start":5,"column_end":78}},{"value":"/ enum Rule {","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pest-2.2.1\\src\\iterators\\pair.rs","byte_start":41572,"byte_end":41587,"line_start":217,"line_end":217,"column_start":5,"column_end":20}},{"value":"/     a","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pest-2.2.1\\src\\iterators\\pair.rs","byte_start":41592,"byte_end":41601,"line_start":218,"line_end":218,"column_start":5,"column_end":14}},{"value":"/ }","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pest-2.2.1\\src\\iterators\\pair.rs","byte_start":41606,"byte_end":41611,"line_start":219,"line_end":219,"column_start":5,"column_end":10}},{"value":"/","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pest-2.2.1\\src\\iterators\\pair.rs","byte_start":41616,"byte_end":41619,"line_start":220,"line_end":220,"column_start":5,"column_end":8}},{"value":"/ let input = \"\";","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pest-2.2.1\\src\\iterators\\pair.rs","byte_start":41624,"byte_end":41643,"line_start":221,"line_end":221,"column_start":5,"column_end":24}},{"value":"/ let pair = pest::state(input, |state| {","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pest-2.2.1\\src\\iterators\\pair.rs","byte_start":41648,"byte_end":41691,"line_start":222,"line_end":222,"column_start":5,"column_end":48}},{"value":"/     // generating Token pair with Rule::a ...","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pest-2.2.1\\src\\iterators\\pair.rs","byte_start":41696,"byte_end":41745,"line_start":223,"line_end":223,"column_start":5,"column_end":54}},{"value":"/ #     state.rule(Rule::a, |s| Ok(s))","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pest-2.2.1\\src\\iterators\\pair.rs","byte_start":41750,"byte_end":41790,"line_start":224,"line_end":224,"column_start":5,"column_end":45}},{"value":"/ }).unwrap().next().unwrap();","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pest-2.2.1\\src\\iterators\\pair.rs","byte_start":41795,"byte_end":41827,"line_start":225,"line_end":225,"column_start":5,"column_end":37}},{"value":"/ let tokens: Vec<_> = pair.tokens().collect();","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pest-2.2.1\\src\\iterators\\pair.rs","byte_start":41832,"byte_end":41881,"line_start":226,"line_end":226,"column_start":5,"column_end":54}},{"value":"/","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pest-2.2.1\\src\\iterators\\pair.rs","byte_start":41886,"byte_end":41889,"line_start":227,"line_end":227,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(tokens.len(), 2);","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pest-2.2.1\\src\\iterators\\pair.rs","byte_start":41894,"byte_end":41926,"line_start":228,"line_end":228,"column_start":5,"column_end":37}},{"value":"/ ```","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pest-2.2.1\\src\\iterators\\pair.rs","byte_start":41931,"byte_end":41938,"line_start":229,"line_end":229,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pest-2.2.1\\src\\iterators\\pair.rs","byte_start":41943,"byte_end":41952,"line_start":230,"line_end":230,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":239},"span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pest-2.2.1\\src\\iterators\\pair.rs","byte_start":42967,"byte_end":42973,"line_start":264,"line_end":264,"column_start":12,"column_end":18},"name":"single","qualname":"<Pairs>::single","value":"pub fn single(Pair) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Create a new `Pairs` iterator containing just the single `Pair`.\n","sig":null,"attributes":[{"value":"/ Create a new `Pairs` iterator containing just the single `Pair`.","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pest-2.2.1\\src\\iterators\\pair.rs","byte_start":42887,"byte_end":42955,"line_start":263,"line_end":263,"column_start":5,"column_end":73}}]},{"kind":"Struct","id":{"krate":0,"index":873},"span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pest-2.2.1\\src\\iterators\\pairs.rs","byte_start":47334,"byte_end":47339,"line_start":34,"line_end":34,"column_start":12,"column_end":17},"name":"Pairs","qualname":"::iterators::pairs::Pairs","value":"Pairs {  }","parent":null,"children":[{"krate":0,"index":876},{"krate":0,"index":877},{"krate":0,"index":878},{"krate":0,"index":879}],"decl_id":null,"docs":" An iterator over [`Pair`]s. It is created by [`pest::state`] and [`Pair::into_inner`].","sig":null,"attributes":[{"value":"/ An iterator over [`Pair`]s. It is created by [`pest::state`] and [`Pair::into_inner`].","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pest-2.2.1\\src\\iterators\\pairs.rs","byte_start":47081,"byte_end":47171,"line_start":28,"line_end":28,"column_start":1,"column_end":91}},{"value":"/","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pest-2.2.1\\src\\iterators\\pairs.rs","byte_start":47172,"byte_end":47175,"line_start":29,"line_end":29,"column_start":1,"column_end":4}},{"value":"/ [`Pair`]: struct.Pair.html","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pest-2.2.1\\src\\iterators\\pairs.rs","byte_start":47176,"byte_end":47206,"line_start":30,"line_end":30,"column_start":1,"column_end":31}},{"value":"/ [`pest::state`]: ../fn.state.html","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pest-2.2.1\\src\\iterators\\pairs.rs","byte_start":47207,"byte_end":47244,"line_start":31,"line_end":31,"column_start":1,"column_end":38}},{"value":"/ [`Pair::into_inner`]: struct.Pair.html#method.into_inner","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pest-2.2.1\\src\\iterators\\pairs.rs","byte_start":47245,"byte_end":47305,"line_start":32,"line_end":32,"column_start":1,"column_end":61}}]},{"kind":"Method","id":{"krate":0,"index":321},"span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pest-2.2.1\\src\\iterators\\pairs.rs","byte_start":48624,"byte_end":48630,"line_start":82,"line_end":82,"column_start":12,"column_end":18},"name":"as_str","qualname":"<Pairs>::as_str","value":"pub fn as_str(&Self) -> &'i str","parent":null,"children":[],"decl_id":null,"docs":" Captures a slice from the `&str` defined by the starting position of the first token `Pair`\n and the ending position of the last token `Pair` of the `Pairs`. This also captures\n the input between those two token `Pair`s.","sig":null,"attributes":[{"value":"/ Captures a slice from the `&str` defined by the starting position of the first token `Pair`","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pest-2.2.1\\src\\iterators\\pairs.rs","byte_start":47696,"byte_end":47791,"line_start":56,"line_end":56,"column_start":5,"column_end":100}},{"value":"/ and the ending position of the last token `Pair` of the `Pairs`. This also captures","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pest-2.2.1\\src\\iterators\\pairs.rs","byte_start":47796,"byte_end":47883,"line_start":57,"line_end":57,"column_start":5,"column_end":92}},{"value":"/ the input between those two token `Pair`s.","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pest-2.2.1\\src\\iterators\\pairs.rs","byte_start":47888,"byte_end":47934,"line_start":58,"line_end":58,"column_start":5,"column_end":51}},{"value":"/","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pest-2.2.1\\src\\iterators\\pairs.rs","byte_start":47939,"byte_end":47942,"line_start":59,"line_end":59,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pest-2.2.1\\src\\iterators\\pairs.rs","byte_start":47947,"byte_end":47961,"line_start":60,"line_end":60,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pest-2.2.1\\src\\iterators\\pairs.rs","byte_start":47966,"byte_end":47969,"line_start":61,"line_end":61,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pest-2.2.1\\src\\iterators\\pairs.rs","byte_start":47974,"byte_end":47981,"line_start":62,"line_end":62,"column_start":5,"column_end":12}},{"value":"/ # use std::rc::Rc;","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pest-2.2.1\\src\\iterators\\pairs.rs","byte_start":47986,"byte_end":48008,"line_start":63,"line_end":63,"column_start":5,"column_end":27}},{"value":"/ # use pest;","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pest-2.2.1\\src\\iterators\\pairs.rs","byte_start":48013,"byte_end":48028,"line_start":64,"line_end":64,"column_start":5,"column_end":20}},{"value":"/ # #[allow(non_camel_case_types)]","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pest-2.2.1\\src\\iterators\\pairs.rs","byte_start":48033,"byte_end":48069,"line_start":65,"line_end":65,"column_start":5,"column_end":41}},{"value":"/ # #[derive(Clone, Copy, Debug, Eq, Hash, Ord, PartialEq, PartialOrd)]","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pest-2.2.1\\src\\iterators\\pairs.rs","byte_start":48074,"byte_end":48147,"line_start":66,"line_end":66,"column_start":5,"column_end":78}},{"value":"/ enum Rule {","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pest-2.2.1\\src\\iterators\\pairs.rs","byte_start":48152,"byte_end":48167,"line_start":67,"line_end":67,"column_start":5,"column_end":20}},{"value":"/     a,","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pest-2.2.1\\src\\iterators\\pairs.rs","byte_start":48172,"byte_end":48182,"line_start":68,"line_end":68,"column_start":5,"column_end":15}},{"value":"/     b","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pest-2.2.1\\src\\iterators\\pairs.rs","byte_start":48187,"byte_end":48196,"line_start":69,"line_end":69,"column_start":5,"column_end":14}},{"value":"/ }","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pest-2.2.1\\src\\iterators\\pairs.rs","byte_start":48201,"byte_end":48206,"line_start":70,"line_end":70,"column_start":5,"column_end":10}},{"value":"/","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pest-2.2.1\\src\\iterators\\pairs.rs","byte_start":48211,"byte_end":48214,"line_start":71,"line_end":71,"column_start":5,"column_end":8}},{"value":"/ let input = \"a b\";","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pest-2.2.1\\src\\iterators\\pairs.rs","byte_start":48219,"byte_end":48241,"line_start":72,"line_end":72,"column_start":5,"column_end":27}},{"value":"/ let pairs = pest::state(input, |state| {","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pest-2.2.1\\src\\iterators\\pairs.rs","byte_start":48246,"byte_end":48290,"line_start":73,"line_end":73,"column_start":5,"column_end":49}},{"value":"/     // generating Token pairs with Rule::a and Rule::b ...","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pest-2.2.1\\src\\iterators\\pairs.rs","byte_start":48295,"byte_end":48357,"line_start":74,"line_end":74,"column_start":5,"column_end":67}},{"value":"/ #     state.rule(Rule::a, |s| s.match_string(\"a\")).and_then(|s| s.skip(1))","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pest-2.2.1\\src\\iterators\\pairs.rs","byte_start":48362,"byte_end":48440,"line_start":75,"line_end":75,"column_start":5,"column_end":83}},{"value":"/ #         .and_then(|s| s.rule(Rule::b, |s| s.match_string(\"b\")))","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pest-2.2.1\\src\\iterators\\pairs.rs","byte_start":48445,"byte_end":48514,"line_start":76,"line_end":76,"column_start":5,"column_end":74}},{"value":"/ }).unwrap();","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pest-2.2.1\\src\\iterators\\pairs.rs","byte_start":48519,"byte_end":48535,"line_start":77,"line_end":77,"column_start":5,"column_end":21}},{"value":"/","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pest-2.2.1\\src\\iterators\\pairs.rs","byte_start":48540,"byte_end":48543,"line_start":78,"line_end":78,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(pairs.as_str(), \"a b\");","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pest-2.2.1\\src\\iterators\\pairs.rs","byte_start":48548,"byte_end":48586,"line_start":79,"line_end":79,"column_start":5,"column_end":43}},{"value":"/ ```","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pest-2.2.1\\src\\iterators\\pairs.rs","byte_start":48591,"byte_end":48598,"line_start":80,"line_end":80,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pest-2.2.1\\src\\iterators\\pairs.rs","byte_start":48603,"byte_end":48612,"line_start":81,"line_end":81,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":322},"span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pest-2.2.1\\src\\iterators\\pairs.rs","byte_start":49772,"byte_end":49778,"line_start":118,"line_end":118,"column_start":12,"column_end":18},"name":"concat","qualname":"<Pairs>::concat","value":"pub fn concat(&Self) -> String","parent":null,"children":[],"decl_id":null,"docs":" Captures inner token `Pair`s and concatenates resulting `&str`s. This does not capture\n the input between token `Pair`s.","sig":null,"attributes":[{"value":"/ Captures inner token `Pair`s and concatenates resulting `&str`s. This does not capture","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pest-2.2.1\\src\\iterators\\pairs.rs","byte_start":48952,"byte_end":49042,"line_start":93,"line_end":93,"column_start":5,"column_end":95}},{"value":"/ the input between token `Pair`s.","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pest-2.2.1\\src\\iterators\\pairs.rs","byte_start":49047,"byte_end":49083,"line_start":94,"line_end":94,"column_start":5,"column_end":41}},{"value":"/","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pest-2.2.1\\src\\iterators\\pairs.rs","byte_start":49088,"byte_end":49091,"line_start":95,"line_end":95,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pest-2.2.1\\src\\iterators\\pairs.rs","byte_start":49096,"byte_end":49110,"line_start":96,"line_end":96,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pest-2.2.1\\src\\iterators\\pairs.rs","byte_start":49115,"byte_end":49118,"line_start":97,"line_end":97,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pest-2.2.1\\src\\iterators\\pairs.rs","byte_start":49123,"byte_end":49130,"line_start":98,"line_end":98,"column_start":5,"column_end":12}},{"value":"/ # use std::rc::Rc;","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pest-2.2.1\\src\\iterators\\pairs.rs","byte_start":49135,"byte_end":49157,"line_start":99,"line_end":99,"column_start":5,"column_end":27}},{"value":"/ # use pest;","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pest-2.2.1\\src\\iterators\\pairs.rs","byte_start":49162,"byte_end":49177,"line_start":100,"line_end":100,"column_start":5,"column_end":20}},{"value":"/ # #[allow(non_camel_case_types)]","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pest-2.2.1\\src\\iterators\\pairs.rs","byte_start":49182,"byte_end":49218,"line_start":101,"line_end":101,"column_start":5,"column_end":41}},{"value":"/ # #[derive(Clone, Copy, Debug, Eq, Hash, Ord, PartialEq, PartialOrd)]","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pest-2.2.1\\src\\iterators\\pairs.rs","byte_start":49223,"byte_end":49296,"line_start":102,"line_end":102,"column_start":5,"column_end":78}},{"value":"/ enum Rule {","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pest-2.2.1\\src\\iterators\\pairs.rs","byte_start":49301,"byte_end":49316,"line_start":103,"line_end":103,"column_start":5,"column_end":20}},{"value":"/     a,","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pest-2.2.1\\src\\iterators\\pairs.rs","byte_start":49321,"byte_end":49331,"line_start":104,"line_end":104,"column_start":5,"column_end":15}},{"value":"/     b","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pest-2.2.1\\src\\iterators\\pairs.rs","byte_start":49336,"byte_end":49345,"line_start":105,"line_end":105,"column_start":5,"column_end":14}},{"value":"/ }","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pest-2.2.1\\src\\iterators\\pairs.rs","byte_start":49350,"byte_end":49355,"line_start":106,"line_end":106,"column_start":5,"column_end":10}},{"value":"/","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pest-2.2.1\\src\\iterators\\pairs.rs","byte_start":49360,"byte_end":49363,"line_start":107,"line_end":107,"column_start":5,"column_end":8}},{"value":"/ let input = \"a b\";","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pest-2.2.1\\src\\iterators\\pairs.rs","byte_start":49368,"byte_end":49390,"line_start":108,"line_end":108,"column_start":5,"column_end":27}},{"value":"/ let pairs = pest::state(input, |state| {","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pest-2.2.1\\src\\iterators\\pairs.rs","byte_start":49395,"byte_end":49439,"line_start":109,"line_end":109,"column_start":5,"column_end":49}},{"value":"/     // generating Token pairs with Rule::a and Rule::b ...","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pest-2.2.1\\src\\iterators\\pairs.rs","byte_start":49444,"byte_end":49506,"line_start":110,"line_end":110,"column_start":5,"column_end":67}},{"value":"/ #     state.rule(Rule::a, |s| s.match_string(\"a\")).and_then(|s| s.skip(1))","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pest-2.2.1\\src\\iterators\\pairs.rs","byte_start":49511,"byte_end":49589,"line_start":111,"line_end":111,"column_start":5,"column_end":83}},{"value":"/ #         .and_then(|s| s.rule(Rule::b, |s| s.match_string(\"b\")))","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pest-2.2.1\\src\\iterators\\pairs.rs","byte_start":49594,"byte_end":49663,"line_start":112,"line_end":112,"column_start":5,"column_end":74}},{"value":"/ }).unwrap();","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pest-2.2.1\\src\\iterators\\pairs.rs","byte_start":49668,"byte_end":49684,"line_start":113,"line_end":113,"column_start":5,"column_end":21}},{"value":"/","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pest-2.2.1\\src\\iterators\\pairs.rs","byte_start":49689,"byte_end":49692,"line_start":114,"line_end":114,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(pairs.concat(), \"ab\");","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pest-2.2.1\\src\\iterators\\pairs.rs","byte_start":49697,"byte_end":49734,"line_start":115,"line_end":115,"column_start":5,"column_end":42}},{"value":"/ ```","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pest-2.2.1\\src\\iterators\\pairs.rs","byte_start":49739,"byte_end":49746,"line_start":116,"line_end":116,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pest-2.2.1\\src\\iterators\\pairs.rs","byte_start":49751,"byte_end":49760,"line_start":117,"line_end":117,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":324},"span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pest-2.2.1\\src\\iterators\\pairs.rs","byte_start":50631,"byte_end":50638,"line_start":149,"line_end":149,"column_start":12,"column_end":19},"name":"flatten","qualname":"<Pairs>::flatten","value":"pub fn flatten(Self) -> FlatPairs","parent":null,"children":[],"decl_id":null,"docs":" Flattens the `Pairs`.","sig":null,"attributes":[{"value":"/ Flattens the `Pairs`.","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pest-2.2.1\\src\\iterators\\pairs.rs","byte_start":49902,"byte_end":49927,"line_start":123,"line_end":123,"column_start":5,"column_end":30}},{"value":"/","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pest-2.2.1\\src\\iterators\\pairs.rs","byte_start":49932,"byte_end":49935,"line_start":124,"line_end":124,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pest-2.2.1\\src\\iterators\\pairs.rs","byte_start":49940,"byte_end":49954,"line_start":125,"line_end":125,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pest-2.2.1\\src\\iterators\\pairs.rs","byte_start":49959,"byte_end":49962,"line_start":126,"line_end":126,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pest-2.2.1\\src\\iterators\\pairs.rs","byte_start":49967,"byte_end":49974,"line_start":127,"line_end":127,"column_start":5,"column_end":12}},{"value":"/ # use std::rc::Rc;","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pest-2.2.1\\src\\iterators\\pairs.rs","byte_start":49979,"byte_end":50001,"line_start":128,"line_end":128,"column_start":5,"column_end":27}},{"value":"/ # use pest;","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pest-2.2.1\\src\\iterators\\pairs.rs","byte_start":50006,"byte_end":50021,"line_start":129,"line_end":129,"column_start":5,"column_end":20}},{"value":"/ # #[allow(non_camel_case_types)]","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pest-2.2.1\\src\\iterators\\pairs.rs","byte_start":50026,"byte_end":50062,"line_start":130,"line_end":130,"column_start":5,"column_end":41}},{"value":"/ # #[derive(Clone, Copy, Debug, Eq, Hash, Ord, PartialEq, PartialOrd)]","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pest-2.2.1\\src\\iterators\\pairs.rs","byte_start":50067,"byte_end":50140,"line_start":131,"line_end":131,"column_start":5,"column_end":78}},{"value":"/ enum Rule {","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pest-2.2.1\\src\\iterators\\pairs.rs","byte_start":50145,"byte_end":50160,"line_start":132,"line_end":132,"column_start":5,"column_end":20}},{"value":"/     a,","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pest-2.2.1\\src\\iterators\\pairs.rs","byte_start":50165,"byte_end":50175,"line_start":133,"line_end":133,"column_start":5,"column_end":15}},{"value":"/     b","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pest-2.2.1\\src\\iterators\\pairs.rs","byte_start":50180,"byte_end":50189,"line_start":134,"line_end":134,"column_start":5,"column_end":14}},{"value":"/ }","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pest-2.2.1\\src\\iterators\\pairs.rs","byte_start":50194,"byte_end":50199,"line_start":135,"line_end":135,"column_start":5,"column_end":10}},{"value":"/","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pest-2.2.1\\src\\iterators\\pairs.rs","byte_start":50204,"byte_end":50207,"line_start":136,"line_end":136,"column_start":5,"column_end":8}},{"value":"/ let input = \"\";","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pest-2.2.1\\src\\iterators\\pairs.rs","byte_start":50212,"byte_end":50231,"line_start":137,"line_end":137,"column_start":5,"column_end":24}},{"value":"/ let pairs = pest::state(input, |state| {","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pest-2.2.1\\src\\iterators\\pairs.rs","byte_start":50236,"byte_end":50280,"line_start":138,"line_end":138,"column_start":5,"column_end":49}},{"value":"/     // generating nested Token pair with Rule::b inside Rule::a","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pest-2.2.1\\src\\iterators\\pairs.rs","byte_start":50285,"byte_end":50352,"line_start":139,"line_end":139,"column_start":5,"column_end":72}},{"value":"/ #     state.rule(Rule::a, |state| {","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pest-2.2.1\\src\\iterators\\pairs.rs","byte_start":50357,"byte_end":50396,"line_start":140,"line_end":140,"column_start":5,"column_end":44}},{"value":"/ #         state.rule(Rule::b, |s| Ok(s))","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pest-2.2.1\\src\\iterators\\pairs.rs","byte_start":50401,"byte_end":50445,"line_start":141,"line_end":141,"column_start":5,"column_end":49}},{"value":"/ #     })","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pest-2.2.1\\src\\iterators\\pairs.rs","byte_start":50450,"byte_end":50462,"line_start":142,"line_end":142,"column_start":5,"column_end":17}},{"value":"/ }).unwrap();","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pest-2.2.1\\src\\iterators\\pairs.rs","byte_start":50467,"byte_end":50483,"line_start":143,"line_end":143,"column_start":5,"column_end":21}},{"value":"/ let tokens: Vec<_> = pairs.flatten().tokens().collect();","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pest-2.2.1\\src\\iterators\\pairs.rs","byte_start":50488,"byte_end":50548,"line_start":144,"line_end":144,"column_start":5,"column_end":65}},{"value":"/","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pest-2.2.1\\src\\iterators\\pairs.rs","byte_start":50553,"byte_end":50556,"line_start":145,"line_end":145,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(tokens.len(), 4);","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pest-2.2.1\\src\\iterators\\pairs.rs","byte_start":50561,"byte_end":50593,"line_start":146,"line_end":146,"column_start":5,"column_end":37}},{"value":"/ ```","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pest-2.2.1\\src\\iterators\\pairs.rs","byte_start":50598,"byte_end":50605,"line_start":147,"line_end":147,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pest-2.2.1\\src\\iterators\\pairs.rs","byte_start":50610,"byte_end":50619,"line_start":148,"line_end":148,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":325},"span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pest-2.2.1\\src\\iterators\\pairs.rs","byte_start":51396,"byte_end":51402,"line_start":176,"line_end":176,"column_start":12,"column_end":18},"name":"tokens","qualname":"<Pairs>::tokens","value":"pub fn tokens(Self) -> Tokens","parent":null,"children":[],"decl_id":null,"docs":" Returns the `Tokens` for the `Pairs`.","sig":null,"attributes":[{"value":"/ Returns the `Tokens` for the `Pairs`.","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pest-2.2.1\\src\\iterators\\pairs.rs","byte_start":50759,"byte_end":50800,"line_start":153,"line_end":153,"column_start":5,"column_end":46}},{"value":"/","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pest-2.2.1\\src\\iterators\\pairs.rs","byte_start":50805,"byte_end":50808,"line_start":154,"line_end":154,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pest-2.2.1\\src\\iterators\\pairs.rs","byte_start":50813,"byte_end":50827,"line_start":155,"line_end":155,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pest-2.2.1\\src\\iterators\\pairs.rs","byte_start":50832,"byte_end":50835,"line_start":156,"line_end":156,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pest-2.2.1\\src\\iterators\\pairs.rs","byte_start":50840,"byte_end":50847,"line_start":157,"line_end":157,"column_start":5,"column_end":12}},{"value":"/ # use std::rc::Rc;","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pest-2.2.1\\src\\iterators\\pairs.rs","byte_start":50852,"byte_end":50874,"line_start":158,"line_end":158,"column_start":5,"column_end":27}},{"value":"/ # use pest;","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pest-2.2.1\\src\\iterators\\pairs.rs","byte_start":50879,"byte_end":50894,"line_start":159,"line_end":159,"column_start":5,"column_end":20}},{"value":"/ # #[allow(non_camel_case_types)]","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pest-2.2.1\\src\\iterators\\pairs.rs","byte_start":50899,"byte_end":50935,"line_start":160,"line_end":160,"column_start":5,"column_end":41}},{"value":"/ # #[derive(Clone, Copy, Debug, Eq, Hash, Ord, PartialEq, PartialOrd)]","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pest-2.2.1\\src\\iterators\\pairs.rs","byte_start":50940,"byte_end":51013,"line_start":161,"line_end":161,"column_start":5,"column_end":78}},{"value":"/ enum Rule {","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pest-2.2.1\\src\\iterators\\pairs.rs","byte_start":51018,"byte_end":51033,"line_start":162,"line_end":162,"column_start":5,"column_end":20}},{"value":"/     a","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pest-2.2.1\\src\\iterators\\pairs.rs","byte_start":51038,"byte_end":51047,"line_start":163,"line_end":163,"column_start":5,"column_end":14}},{"value":"/ }","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pest-2.2.1\\src\\iterators\\pairs.rs","byte_start":51052,"byte_end":51057,"line_start":164,"line_end":164,"column_start":5,"column_end":10}},{"value":"/","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pest-2.2.1\\src\\iterators\\pairs.rs","byte_start":51062,"byte_end":51065,"line_start":165,"line_end":165,"column_start":5,"column_end":8}},{"value":"/ let input = \"\";","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pest-2.2.1\\src\\iterators\\pairs.rs","byte_start":51070,"byte_end":51089,"line_start":166,"line_end":166,"column_start":5,"column_end":24}},{"value":"/ let pairs = pest::state(input, |state| {","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pest-2.2.1\\src\\iterators\\pairs.rs","byte_start":51094,"byte_end":51138,"line_start":167,"line_end":167,"column_start":5,"column_end":49}},{"value":"/     // generating Token pair with Rule::a ...","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pest-2.2.1\\src\\iterators\\pairs.rs","byte_start":51143,"byte_end":51192,"line_start":168,"line_end":168,"column_start":5,"column_end":54}},{"value":"/ #     state.rule(Rule::a, |s| Ok(s))","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pest-2.2.1\\src\\iterators\\pairs.rs","byte_start":51197,"byte_end":51237,"line_start":169,"line_end":169,"column_start":5,"column_end":45}},{"value":"/ }).unwrap();","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pest-2.2.1\\src\\iterators\\pairs.rs","byte_start":51242,"byte_end":51258,"line_start":170,"line_end":170,"column_start":5,"column_end":21}},{"value":"/ let tokens: Vec<_> = pairs.tokens().collect();","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pest-2.2.1\\src\\iterators\\pairs.rs","byte_start":51263,"byte_end":51313,"line_start":171,"line_end":171,"column_start":5,"column_end":55}},{"value":"/","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pest-2.2.1\\src\\iterators\\pairs.rs","byte_start":51318,"byte_end":51321,"line_start":172,"line_end":172,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(tokens.len(), 2);","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pest-2.2.1\\src\\iterators\\pairs.rs","byte_start":51326,"byte_end":51358,"line_start":173,"line_end":173,"column_start":5,"column_end":37}},{"value":"/ ```","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pest-2.2.1\\src\\iterators\\pairs.rs","byte_start":51363,"byte_end":51370,"line_start":174,"line_end":174,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pest-2.2.1\\src\\iterators\\pairs.rs","byte_start":51375,"byte_end":51384,"line_start":175,"line_end":175,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":326},"span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pest-2.2.1\\src\\iterators\\pairs.rs","byte_start":51613,"byte_end":51617,"line_start":182,"line_end":182,"column_start":12,"column_end":16},"name":"peek","qualname":"<Pairs>::peek","value":"pub fn peek(&Self) -> Option<Pair>","parent":null,"children":[],"decl_id":null,"docs":" Peek at the first inner `Pair` without changing the position of this iterator.\n","sig":null,"attributes":[{"value":"/ Peek at the first inner `Pair` without changing the position of this iterator.","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pest-2.2.1\\src\\iterators\\pairs.rs","byte_start":51505,"byte_end":51587,"line_start":180,"line_end":180,"column_start":5,"column_end":87}},{"value":"inline","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pest-2.2.1\\src\\iterators\\pairs.rs","byte_start":51592,"byte_end":51601,"line_start":181,"line_end":181,"column_start":5,"column_end":14}}]},{"kind":"Struct","id":{"krate":0,"index":897},"span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pest-2.2.1\\src\\iterators\\tokens.rs","byte_start":59546,"byte_end":59552,"line_start":26,"line_end":26,"column_start":12,"column_end":18},"name":"Tokens","qualname":"::iterators::tokens::Tokens","value":"Tokens {  }","parent":null,"children":[{"krate":0,"index":900},{"krate":0,"index":901},{"krate":0,"index":902},{"krate":0,"index":903}],"decl_id":null,"docs":" An iterator over [`Token`]s. It is created by [`Pair::tokens`] and [`Pairs::tokens`].","sig":null,"attributes":[{"value":"/ An iterator over [`Token`]s. It is created by [`Pair::tokens`] and [`Pairs::tokens`].","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pest-2.2.1\\src\\iterators\\tokens.rs","byte_start":59282,"byte_end":59371,"line_start":20,"line_end":20,"column_start":1,"column_end":90}},{"value":"/","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pest-2.2.1\\src\\iterators\\tokens.rs","byte_start":59372,"byte_end":59375,"line_start":21,"line_end":21,"column_start":1,"column_end":4}},{"value":"/ [`Token`]: ../enum.Token.html","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pest-2.2.1\\src\\iterators\\tokens.rs","byte_start":59376,"byte_end":59409,"line_start":22,"line_end":22,"column_start":1,"column_end":34}},{"value":"/ [`Pair::tokens`]: struct.Pair.html#method.tokens","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pest-2.2.1\\src\\iterators\\tokens.rs","byte_start":59410,"byte_end":59462,"line_start":23,"line_end":23,"column_start":1,"column_end":53}},{"value":"/ [`Pairs::tokens`]: struct.Pairs.html#method.tokens","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pest-2.2.1\\src\\iterators\\tokens.rs","byte_start":59463,"byte_end":59517,"line_start":24,"line_end":24,"column_start":1,"column_end":55}}]},{"kind":"Trait","id":{"krate":0,"index":433},"span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pest-2.2.1\\src\\parser.rs","byte_start":78136,"byte_end":78142,"line_start":15,"line_end":15,"column_start":11,"column_end":17},"name":"Parser","qualname":"::parser::Parser","value":"Parser<R: RuleType>","parent":null,"children":[{"krate":0,"index":435}],"decl_id":null,"docs":" A trait with a single method that parses strings.\n","sig":null,"attributes":[{"value":"/ A trait with a single method that parses strings.","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pest-2.2.1\\src\\parser.rs","byte_start":78072,"byte_end":78125,"line_start":14,"line_end":14,"column_start":1,"column_end":54}}]},{"kind":"Method","id":{"krate":0,"index":435},"span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pest-2.2.1\\src\\parser.rs","byte_start":78211,"byte_end":78216,"line_start":17,"line_end":17,"column_start":8,"column_end":13},"name":"parse","qualname":"::parser::Parser::parse","value":"pub fn parse(R, &str) -> Result<Pairs<, R>, Error<R>>","parent":{"krate":0,"index":433},"children":[],"decl_id":null,"docs":" Parses a `&str` starting from `rule`.\n","sig":null,"attributes":[{"value":"/ Parses a `&str` starting from `rule`.","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pest-2.2.1\\src\\parser.rs","byte_start":78162,"byte_end":78203,"line_start":16,"line_end":16,"column_start":5,"column_end":46}}]},{"kind":"TupleVariant","id":{"krate":0,"index":909},"span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pest-2.2.1\\src\\parser_state.rs","byte_start":79153,"byte_end":79161,"line_start":28,"line_end":28,"column_start":5,"column_end":13},"name":"Positive","qualname":"::parser_state::Lookahead::Positive","value":"Lookahead::Positive","parent":{"krate":0,"index":908},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":911},"span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pest-2.2.1\\src\\parser_state.rs","byte_start":79167,"byte_end":79175,"line_start":29,"line_end":29,"column_start":5,"column_end":13},"name":"Negative","qualname":"::parser_state::Lookahead::Negative","value":"Lookahead::Negative","parent":{"krate":0,"index":908},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":913},"span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pest-2.2.1\\src\\parser_state.rs","byte_start":79181,"byte_end":79185,"line_start":30,"line_end":30,"column_start":5,"column_end":9},"name":"None","qualname":"::parser_state::Lookahead::None","value":"Lookahead::None","parent":{"krate":0,"index":908},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Enum","id":{"krate":0,"index":908},"span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pest-2.2.1\\src\\parser_state.rs","byte_start":79137,"byte_end":79146,"line_start":27,"line_end":27,"column_start":10,"column_end":19},"name":"Lookahead","qualname":"::parser_state::Lookahead","value":"pub enum Lookahead { Positive, Negative, None, }","parent":null,"children":[{"krate":0,"index":909},{"krate":0,"index":911},{"krate":0,"index":913}],"decl_id":null,"docs":" The current lookahead status of a [`ParserState`].","sig":null,"attributes":[{"value":"/ The current lookahead status of a [`ParserState`].","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pest-2.2.1\\src\\parser_state.rs","byte_start":78979,"byte_end":79033,"line_start":23,"line_end":23,"column_start":1,"column_end":55}},{"value":"/","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pest-2.2.1\\src\\parser_state.rs","byte_start":79034,"byte_end":79037,"line_start":24,"line_end":24,"column_start":1,"column_end":4}},{"value":"/ [`ParserState`]: struct.ParserState.html","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pest-2.2.1\\src\\parser_state.rs","byte_start":79038,"byte_end":79082,"line_start":25,"line_end":25,"column_start":1,"column_end":45}}]},{"kind":"TupleVariant","id":{"krate":0,"index":927},"span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pest-2.2.1\\src\\parser_state.rs","byte_start":79357,"byte_end":79363,"line_start":38,"line_end":38,"column_start":5,"column_end":11},"name":"Atomic","qualname":"::parser_state::Atomicity::Atomic","value":"Atomicity::Atomic","parent":{"krate":0,"index":926},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":929},"span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pest-2.2.1\\src\\parser_state.rs","byte_start":79369,"byte_end":79383,"line_start":39,"line_end":39,"column_start":5,"column_end":19},"name":"CompoundAtomic","qualname":"::parser_state::Atomicity::CompoundAtomic","value":"Atomicity::CompoundAtomic","parent":{"krate":0,"index":926},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":931},"span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pest-2.2.1\\src\\parser_state.rs","byte_start":79389,"byte_end":79398,"line_start":40,"line_end":40,"column_start":5,"column_end":14},"name":"NonAtomic","qualname":"::parser_state::Atomicity::NonAtomic","value":"Atomicity::NonAtomic","parent":{"krate":0,"index":926},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Enum","id":{"krate":0,"index":926},"span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pest-2.2.1\\src\\parser_state.rs","byte_start":79341,"byte_end":79350,"line_start":37,"line_end":37,"column_start":10,"column_end":19},"name":"Atomicity","qualname":"::parser_state::Atomicity","value":"pub enum Atomicity { Atomic, CompoundAtomic, NonAtomic, }","parent":null,"children":[{"krate":0,"index":927},{"krate":0,"index":929},{"krate":0,"index":931}],"decl_id":null,"docs":" The current atomicity of a [`ParserState`].","sig":null,"attributes":[{"value":"/ The current atomicity of a [`ParserState`].","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pest-2.2.1\\src\\parser_state.rs","byte_start":79190,"byte_end":79237,"line_start":33,"line_end":33,"column_start":1,"column_end":48}},{"value":"/","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pest-2.2.1\\src\\parser_state.rs","byte_start":79238,"byte_end":79241,"line_start":34,"line_end":34,"column_start":1,"column_end":4}},{"value":"/ [`ParserState`]: struct.ParserState.html","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pest-2.2.1\\src\\parser_state.rs","byte_start":79242,"byte_end":79286,"line_start":35,"line_end":35,"column_start":1,"column_end":45}}]},{"kind":"Type","id":{"krate":0,"index":482},"span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pest-2.2.1\\src\\parser_state.rs","byte_start":79488,"byte_end":79499,"line_start":44,"line_end":44,"column_start":10,"column_end":21},"name":"ParseResult","qualname":"::parser_state::ParseResult","value":"Result<S, S>","parent":null,"children":[],"decl_id":null,"docs":" Type alias to simplify specifying the return value of chained closures.\n","sig":null,"attributes":[{"value":"/ Type alias to simplify specifying the return value of chained closures.","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pest-2.2.1\\src\\parser_state.rs","byte_start":79403,"byte_end":79478,"line_start":43,"line_end":43,"column_start":1,"column_end":76}}]},{"kind":"TupleVariant","id":{"krate":0,"index":945},"span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pest-2.2.1\\src\\parser_state.rs","byte_start":79671,"byte_end":79682,"line_start":49,"line_end":49,"column_start":5,"column_end":16},"name":"BottomToTop","qualname":"::parser_state::MatchDir::BottomToTop","value":"MatchDir::BottomToTop","parent":{"krate":0,"index":944},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":947},"span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pest-2.2.1\\src\\parser_state.rs","byte_start":79688,"byte_end":79699,"line_start":50,"line_end":50,"column_start":5,"column_end":16},"name":"TopToBottom","qualname":"::parser_state::MatchDir::TopToBottom","value":"MatchDir::TopToBottom","parent":{"krate":0,"index":944},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Enum","id":{"krate":0,"index":944},"span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pest-2.2.1\\src\\parser_state.rs","byte_start":79656,"byte_end":79664,"line_start":48,"line_end":48,"column_start":10,"column_end":18},"name":"MatchDir","qualname":"::parser_state::MatchDir","value":"pub enum MatchDir { BottomToTop, TopToBottom, }","parent":null,"children":[{"krate":0,"index":945},{"krate":0,"index":947}],"decl_id":null,"docs":" Match direction for the stack. Used in `PEEK[a..b]`/`stack_match_peek_slice`.\n","sig":null,"attributes":[{"value":"/ Match direction for the stack. Used in `PEEK[a..b]`/`stack_match_peek_slice`.","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pest-2.2.1\\src\\parser_state.rs","byte_start":79520,"byte_end":79601,"line_start":46,"line_end":46,"column_start":1,"column_end":82}}]},{"kind":"Struct","id":{"krate":0,"index":960},"span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pest-2.2.1\\src\\parser_state.rs","byte_start":79810,"byte_end":79821,"line_start":57,"line_end":57,"column_start":12,"column_end":23},"name":"ParserState","qualname":"::parser_state::ParserState","value":"ParserState {  }","parent":null,"children":[{"krate":0,"index":963},{"krate":0,"index":964},{"krate":0,"index":965},{"krate":0,"index":966},{"krate":0,"index":967},{"krate":0,"index":968},{"krate":0,"index":969},{"krate":0,"index":970}],"decl_id":null,"docs":" The complete state of a [`Parser`].","sig":null,"attributes":[{"value":"/ The complete state of a [`Parser`].","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pest-2.2.1\\src\\parser_state.rs","byte_start":79704,"byte_end":79743,"line_start":53,"line_end":53,"column_start":1,"column_end":40}},{"value":"/","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pest-2.2.1\\src\\parser_state.rs","byte_start":79744,"byte_end":79747,"line_start":54,"line_end":54,"column_start":1,"column_end":4}},{"value":"/ [`Parser`]: trait.Parser.html","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pest-2.2.1\\src\\parser_state.rs","byte_start":79748,"byte_end":79781,"line_start":55,"line_end":55,"column_start":1,"column_end":34}}]},{"kind":"Function","id":{"krate":0,"index":484},"span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pest-2.2.1\\src\\parser_state.rs","byte_start":80272,"byte_end":80277,"line_start":77,"line_end":77,"column_start":8,"column_end":13},"name":"state","qualname":"::parser_state::state","value":"pub fn state<'i, R: RuleType, F>(&'i str, F) -> Result<pairs::Pairs, Error<R>>\nwhere F: FnOnce(Box<ParserState>) -> ParseResult<Box<ParserState>>","parent":null,"children":[],"decl_id":null,"docs":" Creates a `ParserState` from a `&str`, supplying it to a closure `f`.","sig":null,"attributes":[{"value":"/ Creates a `ParserState` from a `&str`, supplying it to a closure `f`.","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pest-2.2.1\\src\\parser_state.rs","byte_start":80063,"byte_end":80136,"line_start":68,"line_end":68,"column_start":1,"column_end":74}},{"value":"/","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pest-2.2.1\\src\\parser_state.rs","byte_start":80137,"byte_end":80140,"line_start":69,"line_end":69,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pest-2.2.1\\src\\parser_state.rs","byte_start":80141,"byte_end":80155,"line_start":70,"line_end":70,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pest-2.2.1\\src\\parser_state.rs","byte_start":80156,"byte_end":80159,"line_start":71,"line_end":71,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pest-2.2.1\\src\\parser_state.rs","byte_start":80160,"byte_end":80167,"line_start":72,"line_end":72,"column_start":1,"column_end":8}},{"value":"/ # use pest;","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pest-2.2.1\\src\\parser_state.rs","byte_start":80168,"byte_end":80183,"line_start":73,"line_end":73,"column_start":1,"column_end":16}},{"value":"/ let input = \"\";","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pest-2.2.1\\src\\parser_state.rs","byte_start":80184,"byte_end":80203,"line_start":74,"line_end":74,"column_start":1,"column_end":20}},{"value":"/ pest::state::<(), _>(input, |s| Ok(s)).unwrap();","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pest-2.2.1\\src\\parser_state.rs","byte_start":80204,"byte_end":80256,"line_start":75,"line_end":75,"column_start":1,"column_end":53}},{"value":"/ ```","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pest-2.2.1\\src\\parser_state.rs","byte_start":80257,"byte_end":80264,"line_start":76,"line_end":76,"column_start":1,"column_end":8}}]},{"kind":"Method","id":{"krate":0,"index":491},"span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pest-2.2.1\\src\\parser_state.rs","byte_start":81682,"byte_end":81685,"line_start":117,"line_end":117,"column_start":12,"column_end":15},"name":"new","qualname":"<ParserState>::new","value":"pub fn new(&'i str) -> Box<Self>","parent":null,"children":[],"decl_id":null,"docs":" Allocates a fresh `ParserState` object to the heap and returns the owned `Box`. This `Box`\n will be passed from closure to closure based on the needs of the specified `Parser`.","sig":null,"attributes":[{"value":"/ Allocates a fresh `ParserState` object to the heap and returns the owned `Box`. This `Box`","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pest-2.2.1\\src\\parser_state.rs","byte_start":81299,"byte_end":81393,"line_start":107,"line_end":107,"column_start":5,"column_end":99}},{"value":"/ will be passed from closure to closure based on the needs of the specified `Parser`.","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pest-2.2.1\\src\\parser_state.rs","byte_start":81398,"byte_end":81486,"line_start":108,"line_end":108,"column_start":5,"column_end":93}},{"value":"/","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pest-2.2.1\\src\\parser_state.rs","byte_start":81491,"byte_end":81494,"line_start":109,"line_end":109,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pest-2.2.1\\src\\parser_state.rs","byte_start":81499,"byte_end":81513,"line_start":110,"line_end":110,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pest-2.2.1\\src\\parser_state.rs","byte_start":81518,"byte_end":81521,"line_start":111,"line_end":111,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pest-2.2.1\\src\\parser_state.rs","byte_start":81526,"byte_end":81533,"line_start":112,"line_end":112,"column_start":5,"column_end":12}},{"value":"/ # use pest;","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pest-2.2.1\\src\\parser_state.rs","byte_start":81538,"byte_end":81553,"line_start":113,"line_end":113,"column_start":5,"column_end":20}},{"value":"/ let input = \"\";","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pest-2.2.1\\src\\parser_state.rs","byte_start":81558,"byte_end":81577,"line_start":114,"line_end":114,"column_start":5,"column_end":24}},{"value":"/ let state: Box<pest::ParserState<&str>> = pest::ParserState::new(input);","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pest-2.2.1\\src\\parser_state.rs","byte_start":81582,"byte_end":81658,"line_start":115,"line_end":115,"column_start":5,"column_end":81}},{"value":"/ ```","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pest-2.2.1\\src\\parser_state.rs","byte_start":81663,"byte_end":81670,"line_start":116,"line_end":116,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":492},"span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pest-2.2.1\\src\\parser_state.rs","byte_start":82587,"byte_end":82595,"line_start":147,"line_end":147,"column_start":12,"column_end":20},"name":"position","qualname":"<ParserState>::position","value":"pub fn position(&Self) -> &Position","parent":null,"children":[],"decl_id":null,"docs":" Returns a reference to the current `Position` of the `ParserState`.","sig":null,"attributes":[{"value":"/ Returns a reference to the current `Position` of the `ParserState`.","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pest-2.2.1\\src\\parser_state.rs","byte_start":82062,"byte_end":82133,"line_start":130,"line_end":130,"column_start":5,"column_end":76}},{"value":"/","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pest-2.2.1\\src\\parser_state.rs","byte_start":82138,"byte_end":82141,"line_start":131,"line_end":131,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pest-2.2.1\\src\\parser_state.rs","byte_start":82146,"byte_end":82160,"line_start":132,"line_end":132,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pest-2.2.1\\src\\parser_state.rs","byte_start":82165,"byte_end":82168,"line_start":133,"line_end":133,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pest-2.2.1\\src\\parser_state.rs","byte_start":82173,"byte_end":82180,"line_start":134,"line_end":134,"column_start":5,"column_end":12}},{"value":"/ # use pest;","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pest-2.2.1\\src\\parser_state.rs","byte_start":82185,"byte_end":82200,"line_start":135,"line_end":135,"column_start":5,"column_end":20}},{"value":"/ # #[allow(non_camel_case_types)]","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pest-2.2.1\\src\\parser_state.rs","byte_start":82205,"byte_end":82241,"line_start":136,"line_end":136,"column_start":5,"column_end":41}},{"value":"/ # #[derive(Clone, Copy, Debug, Eq, Hash, Ord, PartialEq, PartialOrd)]","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pest-2.2.1\\src\\parser_state.rs","byte_start":82246,"byte_end":82319,"line_start":137,"line_end":137,"column_start":5,"column_end":78}},{"value":"/ enum Rule {","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pest-2.2.1\\src\\parser_state.rs","byte_start":82324,"byte_end":82339,"line_start":138,"line_end":138,"column_start":5,"column_end":20}},{"value":"/     ab","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pest-2.2.1\\src\\parser_state.rs","byte_start":82344,"byte_end":82354,"line_start":139,"line_end":139,"column_start":5,"column_end":15}},{"value":"/ }","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pest-2.2.1\\src\\parser_state.rs","byte_start":82359,"byte_end":82364,"line_start":140,"line_end":140,"column_start":5,"column_end":10}},{"value":"/","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pest-2.2.1\\src\\parser_state.rs","byte_start":82369,"byte_end":82372,"line_start":141,"line_end":141,"column_start":5,"column_end":8}},{"value":"/ let input = \"ab\";","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pest-2.2.1\\src\\parser_state.rs","byte_start":82377,"byte_end":82398,"line_start":142,"line_end":142,"column_start":5,"column_end":26}},{"value":"/ let mut state: Box<pest::ParserState<Rule>> = pest::ParserState::new(input);","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pest-2.2.1\\src\\parser_state.rs","byte_start":82403,"byte_end":82483,"line_start":143,"line_end":143,"column_start":5,"column_end":85}},{"value":"/ let position = state.position();","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pest-2.2.1\\src\\parser_state.rs","byte_start":82488,"byte_end":82524,"line_start":144,"line_end":144,"column_start":5,"column_end":41}},{"value":"/ assert_eq!(position.pos(), 0);","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pest-2.2.1\\src\\parser_state.rs","byte_start":82529,"byte_end":82563,"line_start":145,"line_end":145,"column_start":5,"column_end":39}},{"value":"/ ```","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pest-2.2.1\\src\\parser_state.rs","byte_start":82568,"byte_end":82575,"line_start":146,"line_end":146,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":493},"span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pest-2.2.1\\src\\parser_state.rs","byte_start":83212,"byte_end":83221,"line_start":169,"line_end":169,"column_start":12,"column_end":21},"name":"atomicity","qualname":"<ParserState>::atomicity","value":"pub fn atomicity(&Self) -> Atomicity","parent":null,"children":[],"decl_id":null,"docs":" Returns the current atomicity of the `ParserState`.","sig":null,"attributes":[{"value":"/ Returns the current atomicity of the `ParserState`.","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pest-2.2.1\\src\\parser_state.rs","byte_start":82656,"byte_end":82711,"line_start":151,"line_end":151,"column_start":5,"column_end":60}},{"value":"/","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pest-2.2.1\\src\\parser_state.rs","byte_start":82716,"byte_end":82719,"line_start":152,"line_end":152,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pest-2.2.1\\src\\parser_state.rs","byte_start":82724,"byte_end":82738,"line_start":153,"line_end":153,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pest-2.2.1\\src\\parser_state.rs","byte_start":82743,"byte_end":82746,"line_start":154,"line_end":154,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pest-2.2.1\\src\\parser_state.rs","byte_start":82751,"byte_end":82758,"line_start":155,"line_end":155,"column_start":5,"column_end":12}},{"value":"/ # use pest;","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pest-2.2.1\\src\\parser_state.rs","byte_start":82763,"byte_end":82778,"line_start":156,"line_end":156,"column_start":5,"column_end":20}},{"value":"/ # use pest::Atomicity;","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pest-2.2.1\\src\\parser_state.rs","byte_start":82783,"byte_end":82809,"line_start":157,"line_end":157,"column_start":5,"column_end":31}},{"value":"/ # #[allow(non_camel_case_types)]","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pest-2.2.1\\src\\parser_state.rs","byte_start":82814,"byte_end":82850,"line_start":158,"line_end":158,"column_start":5,"column_end":41}},{"value":"/ # #[derive(Clone, Copy, Debug, Eq, Hash, Ord, PartialEq, PartialOrd)]","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pest-2.2.1\\src\\parser_state.rs","byte_start":82855,"byte_end":82928,"line_start":159,"line_end":159,"column_start":5,"column_end":78}},{"value":"/ enum Rule {","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pest-2.2.1\\src\\parser_state.rs","byte_start":82933,"byte_end":82948,"line_start":160,"line_end":160,"column_start":5,"column_end":20}},{"value":"/     ab","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pest-2.2.1\\src\\parser_state.rs","byte_start":82953,"byte_end":82963,"line_start":161,"line_end":161,"column_start":5,"column_end":15}},{"value":"/ }","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pest-2.2.1\\src\\parser_state.rs","byte_start":82968,"byte_end":82973,"line_start":162,"line_end":162,"column_start":5,"column_end":10}},{"value":"/","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pest-2.2.1\\src\\parser_state.rs","byte_start":82978,"byte_end":82981,"line_start":163,"line_end":163,"column_start":5,"column_end":8}},{"value":"/ let input = \"ab\";","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pest-2.2.1\\src\\parser_state.rs","byte_start":82986,"byte_end":83007,"line_start":164,"line_end":164,"column_start":5,"column_end":26}},{"value":"/ let mut state: Box<pest::ParserState<Rule>> = pest::ParserState::new(input);","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pest-2.2.1\\src\\parser_state.rs","byte_start":83012,"byte_end":83092,"line_start":165,"line_end":165,"column_start":5,"column_end":85}},{"value":"/ let atomicity = state.atomicity();","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pest-2.2.1\\src\\parser_state.rs","byte_start":83097,"byte_end":83135,"line_start":166,"line_end":166,"column_start":5,"column_end":43}},{"value":"/ assert_eq!(atomicity, Atomicity::NonAtomic);","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pest-2.2.1\\src\\parser_state.rs","byte_start":83140,"byte_end":83188,"line_start":167,"line_end":167,"column_start":5,"column_end":53}},{"value":"/ ```","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pest-2.2.1\\src\\parser_state.rs","byte_start":83193,"byte_end":83200,"line_start":168,"line_end":168,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":494},"span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pest-2.2.1\\src\\parser_state.rs","byte_start":83878,"byte_end":83882,"line_start":194,"line_end":194,"column_start":12,"column_end":16},"name":"rule","qualname":"<ParserState>::rule","value":"pub fn rule<F>(Box<Self>, R, F) -> ParseResult<Box<Self>> where\nF: FnOnce(Box<Self>) -> ParseResult<Box<Self>>","parent":null,"children":[],"decl_id":null,"docs":" Wrapper needed to generate tokens. This will associate the `R` type rule to the closure\n meant to match the rule.","sig":null,"attributes":[{"value":"/ Wrapper needed to generate tokens. This will associate the `R` type rule to the closure","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pest-2.2.1\\src\\parser_state.rs","byte_start":83278,"byte_end":83369,"line_start":173,"line_end":173,"column_start":5,"column_end":96}},{"value":"/ meant to match the rule.","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pest-2.2.1\\src\\parser_state.rs","byte_start":83374,"byte_end":83402,"line_start":174,"line_end":174,"column_start":5,"column_end":33}},{"value":"/","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pest-2.2.1\\src\\parser_state.rs","byte_start":83407,"byte_end":83410,"line_start":175,"line_end":175,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pest-2.2.1\\src\\parser_state.rs","byte_start":83415,"byte_end":83429,"line_start":176,"line_end":176,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pest-2.2.1\\src\\parser_state.rs","byte_start":83434,"byte_end":83437,"line_start":177,"line_end":177,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pest-2.2.1\\src\\parser_state.rs","byte_start":83442,"byte_end":83449,"line_start":178,"line_end":178,"column_start":5,"column_end":12}},{"value":"/ # use pest;","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pest-2.2.1\\src\\parser_state.rs","byte_start":83454,"byte_end":83469,"line_start":179,"line_end":179,"column_start":5,"column_end":20}},{"value":"/ # #[allow(non_camel_case_types)]","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pest-2.2.1\\src\\parser_state.rs","byte_start":83474,"byte_end":83510,"line_start":180,"line_end":180,"column_start":5,"column_end":41}},{"value":"/ # #[derive(Clone, Copy, Debug, Eq, Hash, Ord, PartialEq, PartialOrd)]","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pest-2.2.1\\src\\parser_state.rs","byte_start":83515,"byte_end":83588,"line_start":181,"line_end":181,"column_start":5,"column_end":78}},{"value":"/ enum Rule {","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pest-2.2.1\\src\\parser_state.rs","byte_start":83593,"byte_end":83608,"line_start":182,"line_end":182,"column_start":5,"column_end":20}},{"value":"/     a","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pest-2.2.1\\src\\parser_state.rs","byte_start":83613,"byte_end":83622,"line_start":183,"line_end":183,"column_start":5,"column_end":14}},{"value":"/ }","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pest-2.2.1\\src\\parser_state.rs","byte_start":83627,"byte_end":83632,"line_start":184,"line_end":184,"column_start":5,"column_end":10}},{"value":"/","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pest-2.2.1\\src\\parser_state.rs","byte_start":83637,"byte_end":83640,"line_start":185,"line_end":185,"column_start":5,"column_end":8}},{"value":"/ let input = \"a\";","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pest-2.2.1\\src\\parser_state.rs","byte_start":83645,"byte_end":83665,"line_start":186,"line_end":186,"column_start":5,"column_end":25}},{"value":"/ let pairs: Vec<_> = pest::state(input, |state| {","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pest-2.2.1\\src\\parser_state.rs","byte_start":83670,"byte_end":83722,"line_start":187,"line_end":187,"column_start":5,"column_end":57}},{"value":"/     state.rule(Rule::a, |s| Ok(s))","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pest-2.2.1\\src\\parser_state.rs","byte_start":83727,"byte_end":83765,"line_start":188,"line_end":188,"column_start":5,"column_end":43}},{"value":"/ }).unwrap().collect();","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pest-2.2.1\\src\\parser_state.rs","byte_start":83770,"byte_end":83796,"line_start":189,"line_end":189,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pest-2.2.1\\src\\parser_state.rs","byte_start":83801,"byte_end":83804,"line_start":190,"line_end":190,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(pairs.len(), 1);","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pest-2.2.1\\src\\parser_state.rs","byte_start":83809,"byte_end":83840,"line_start":191,"line_end":191,"column_start":5,"column_end":36}},{"value":"/ ```","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pest-2.2.1\\src\\parser_state.rs","byte_start":83845,"byte_end":83852,"line_start":192,"line_end":192,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pest-2.2.1\\src\\parser_state.rs","byte_start":83857,"byte_end":83866,"line_start":193,"line_end":193,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":498},"span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pest-2.2.1\\src\\parser_state.rs","byte_start":89355,"byte_end":89363,"line_start":362,"line_end":362,"column_start":12,"column_end":20},"name":"sequence","qualname":"<ParserState>::sequence","value":"pub fn sequence<F>(Box<Self>, F) -> ParseResult<Box<Self>> where\nF: FnOnce(Box<Self>) -> ParseResult<Box<Self>>","parent":null,"children":[],"decl_id":null,"docs":" Starts a sequence of transformations provided by `f` from the `Box<ParserState>`. Returns\n the same `Result` returned by `f` in the case of an `Ok`, or `Err` with the current\n `Box<ParserState>` otherwise.","sig":null,"attributes":[{"value":"/ Starts a sequence of transformations provided by `f` from the `Box<ParserState>`. Returns","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pest-2.2.1\\src\\parser_state.rs","byte_start":88227,"byte_end":88320,"line_start":329,"line_end":329,"column_start":5,"column_end":98}},{"value":"/ the same `Result` returned by `f` in the case of an `Ok`, or `Err` with the current","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pest-2.2.1\\src\\parser_state.rs","byte_start":88325,"byte_end":88412,"line_start":330,"line_end":330,"column_start":5,"column_end":92}},{"value":"/ `Box<ParserState>` otherwise.","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pest-2.2.1\\src\\parser_state.rs","byte_start":88417,"byte_end":88450,"line_start":331,"line_end":331,"column_start":5,"column_end":38}},{"value":"/","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pest-2.2.1\\src\\parser_state.rs","byte_start":88455,"byte_end":88458,"line_start":332,"line_end":332,"column_start":5,"column_end":8}},{"value":"/ This method is useful to parse sequences that only match together which usually come in the","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pest-2.2.1\\src\\parser_state.rs","byte_start":88463,"byte_end":88558,"line_start":333,"line_end":333,"column_start":5,"column_end":100}},{"value":"/ form of chained `Result`s with","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pest-2.2.1\\src\\parser_state.rs","byte_start":88563,"byte_end":88597,"line_start":334,"line_end":334,"column_start":5,"column_end":39}},{"value":"/ [`Result::and_then`](https://doc.rust-lang.org/std/result/enum.Result.html#method.and_then).","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pest-2.2.1\\src\\parser_state.rs","byte_start":88602,"byte_end":88698,"line_start":335,"line_end":335,"column_start":5,"column_end":101}},{"value":"/","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pest-2.2.1\\src\\parser_state.rs","byte_start":88703,"byte_end":88706,"line_start":336,"line_end":336,"column_start":5,"column_end":8}},{"value":"/","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pest-2.2.1\\src\\parser_state.rs","byte_start":88711,"byte_end":88714,"line_start":337,"line_end":337,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pest-2.2.1\\src\\parser_state.rs","byte_start":88719,"byte_end":88733,"line_start":338,"line_end":338,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pest-2.2.1\\src\\parser_state.rs","byte_start":88738,"byte_end":88741,"line_start":339,"line_end":339,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pest-2.2.1\\src\\parser_state.rs","byte_start":88746,"byte_end":88753,"line_start":340,"line_end":340,"column_start":5,"column_end":12}},{"value":"/ # use pest;","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pest-2.2.1\\src\\parser_state.rs","byte_start":88758,"byte_end":88773,"line_start":341,"line_end":341,"column_start":5,"column_end":20}},{"value":"/ # #[allow(non_camel_case_types)]","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pest-2.2.1\\src\\parser_state.rs","byte_start":88778,"byte_end":88814,"line_start":342,"line_end":342,"column_start":5,"column_end":41}},{"value":"/ # #[derive(Clone, Copy, Debug, Eq, Hash, Ord, PartialEq, PartialOrd)]","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pest-2.2.1\\src\\parser_state.rs","byte_start":88819,"byte_end":88892,"line_start":343,"line_end":343,"column_start":5,"column_end":78}},{"value":"/ enum Rule {","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pest-2.2.1\\src\\parser_state.rs","byte_start":88897,"byte_end":88912,"line_start":344,"line_end":344,"column_start":5,"column_end":20}},{"value":"/     a","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pest-2.2.1\\src\\parser_state.rs","byte_start":88917,"byte_end":88926,"line_start":345,"line_end":345,"column_start":5,"column_end":14}},{"value":"/ }","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pest-2.2.1\\src\\parser_state.rs","byte_start":88931,"byte_end":88936,"line_start":346,"line_end":346,"column_start":5,"column_end":10}},{"value":"/","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pest-2.2.1\\src\\parser_state.rs","byte_start":88941,"byte_end":88944,"line_start":347,"line_end":347,"column_start":5,"column_end":8}},{"value":"/ let input = \"a\";","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pest-2.2.1\\src\\parser_state.rs","byte_start":88949,"byte_end":88969,"line_start":348,"line_end":348,"column_start":5,"column_end":25}},{"value":"/ let pairs: Vec<_> = pest::state(input, |state| {","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pest-2.2.1\\src\\parser_state.rs","byte_start":88974,"byte_end":89026,"line_start":349,"line_end":349,"column_start":5,"column_end":57}},{"value":"/     state.sequence(|s| {","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pest-2.2.1\\src\\parser_state.rs","byte_start":89031,"byte_end":89059,"line_start":350,"line_end":350,"column_start":5,"column_end":33}},{"value":"/         s.rule(Rule::a, |s| Ok(s)).and_then(|s| {","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pest-2.2.1\\src\\parser_state.rs","byte_start":89064,"byte_end":89117,"line_start":351,"line_end":351,"column_start":5,"column_end":58}},{"value":"/             s.match_string(\"b\")","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pest-2.2.1\\src\\parser_state.rs","byte_start":89122,"byte_end":89157,"line_start":352,"line_end":352,"column_start":5,"column_end":40}},{"value":"/         })","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pest-2.2.1\\src\\parser_state.rs","byte_start":89162,"byte_end":89176,"line_start":353,"line_end":353,"column_start":5,"column_end":19}},{"value":"/     }).or_else(|s| {","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pest-2.2.1\\src\\parser_state.rs","byte_start":89181,"byte_end":89205,"line_start":354,"line_end":354,"column_start":5,"column_end":29}},{"value":"/         Ok(s)","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pest-2.2.1\\src\\parser_state.rs","byte_start":89210,"byte_end":89227,"line_start":355,"line_end":355,"column_start":5,"column_end":22}},{"value":"/     })","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pest-2.2.1\\src\\parser_state.rs","byte_start":89232,"byte_end":89242,"line_start":356,"line_end":356,"column_start":5,"column_end":15}},{"value":"/ }).unwrap().collect();","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pest-2.2.1\\src\\parser_state.rs","byte_start":89247,"byte_end":89273,"line_start":357,"line_end":357,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pest-2.2.1\\src\\parser_state.rs","byte_start":89278,"byte_end":89281,"line_start":358,"line_end":358,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(pairs.len(), 0);","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pest-2.2.1\\src\\parser_state.rs","byte_start":89286,"byte_end":89317,"line_start":359,"line_end":359,"column_start":5,"column_end":36}},{"value":"/ ```","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pest-2.2.1\\src\\parser_state.rs","byte_start":89322,"byte_end":89329,"line_start":360,"line_end":360,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pest-2.2.1\\src\\parser_state.rs","byte_start":89334,"byte_end":89343,"line_start":361,"line_end":361,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":500},"span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pest-2.2.1\\src\\parser_state.rs","byte_start":90932,"byte_end":90938,"line_start":411,"line_end":411,"column_start":12,"column_end":18},"name":"repeat","qualname":"<ParserState>::repeat","value":"pub fn repeat<F>(Box<Self>, F) -> ParseResult<Box<Self>> where\nF: FnMut(Box<Self>) -> ParseResult<Box<Self>>","parent":null,"children":[],"decl_id":null,"docs":" Repeatedly applies the transformation provided by `f` from the `Box<ParserState>`. Returns\n `Ok` with the updated `Box<ParserState>` returned by `f` wrapped up in an `Err`.","sig":null,"attributes":[{"value":"/ Repeatedly applies the transformation provided by `f` from the `Box<ParserState>`. Returns","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pest-2.2.1\\src\\parser_state.rs","byte_start":89957,"byte_end":90051,"line_start":382,"line_end":382,"column_start":5,"column_end":99}},{"value":"/ `Ok` with the updated `Box<ParserState>` returned by `f` wrapped up in an `Err`.","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pest-2.2.1\\src\\parser_state.rs","byte_start":90056,"byte_end":90140,"line_start":383,"line_end":383,"column_start":5,"column_end":89}},{"value":"/","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pest-2.2.1\\src\\parser_state.rs","byte_start":90145,"byte_end":90148,"line_start":384,"line_end":384,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pest-2.2.1\\src\\parser_state.rs","byte_start":90153,"byte_end":90167,"line_start":385,"line_end":385,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pest-2.2.1\\src\\parser_state.rs","byte_start":90172,"byte_end":90175,"line_start":386,"line_end":386,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pest-2.2.1\\src\\parser_state.rs","byte_start":90180,"byte_end":90187,"line_start":387,"line_end":387,"column_start":5,"column_end":12}},{"value":"/ # use pest;","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pest-2.2.1\\src\\parser_state.rs","byte_start":90192,"byte_end":90207,"line_start":388,"line_end":388,"column_start":5,"column_end":20}},{"value":"/ # #[allow(non_camel_case_types)]","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pest-2.2.1\\src\\parser_state.rs","byte_start":90212,"byte_end":90248,"line_start":389,"line_end":389,"column_start":5,"column_end":41}},{"value":"/ # #[derive(Clone, Copy, Debug, Eq, Hash, Ord, PartialEq, PartialOrd)]","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pest-2.2.1\\src\\parser_state.rs","byte_start":90253,"byte_end":90326,"line_start":390,"line_end":390,"column_start":5,"column_end":78}},{"value":"/ enum Rule {","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pest-2.2.1\\src\\parser_state.rs","byte_start":90331,"byte_end":90346,"line_start":391,"line_end":391,"column_start":5,"column_end":20}},{"value":"/     ab","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pest-2.2.1\\src\\parser_state.rs","byte_start":90351,"byte_end":90361,"line_start":392,"line_end":392,"column_start":5,"column_end":15}},{"value":"/ }","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pest-2.2.1\\src\\parser_state.rs","byte_start":90366,"byte_end":90371,"line_start":393,"line_end":393,"column_start":5,"column_end":10}},{"value":"/","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pest-2.2.1\\src\\parser_state.rs","byte_start":90376,"byte_end":90379,"line_start":394,"line_end":394,"column_start":5,"column_end":8}},{"value":"/ let input = \"aab\";","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pest-2.2.1\\src\\parser_state.rs","byte_start":90384,"byte_end":90406,"line_start":395,"line_end":395,"column_start":5,"column_end":27}},{"value":"/ let mut state: Box<pest::ParserState<Rule>> = pest::ParserState::new(input);","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pest-2.2.1\\src\\parser_state.rs","byte_start":90411,"byte_end":90491,"line_start":396,"line_end":396,"column_start":5,"column_end":85}},{"value":"/ let mut result = state.repeat(|s| {","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pest-2.2.1\\src\\parser_state.rs","byte_start":90496,"byte_end":90535,"line_start":397,"line_end":397,"column_start":5,"column_end":44}},{"value":"/     s.match_string(\"a\")","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pest-2.2.1\\src\\parser_state.rs","byte_start":90540,"byte_end":90567,"line_start":398,"line_end":398,"column_start":5,"column_end":32}},{"value":"/ });","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pest-2.2.1\\src\\parser_state.rs","byte_start":90572,"byte_end":90579,"line_start":399,"line_end":399,"column_start":5,"column_end":12}},{"value":"/ assert!(result.is_ok());","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pest-2.2.1\\src\\parser_state.rs","byte_start":90584,"byte_end":90612,"line_start":400,"line_end":400,"column_start":5,"column_end":33}},{"value":"/ assert_eq!(result.unwrap().position().pos(), 2);","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pest-2.2.1\\src\\parser_state.rs","byte_start":90617,"byte_end":90669,"line_start":401,"line_end":401,"column_start":5,"column_end":57}},{"value":"/","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pest-2.2.1\\src\\parser_state.rs","byte_start":90674,"byte_end":90677,"line_start":402,"line_end":402,"column_start":5,"column_end":8}},{"value":"/ state = pest::ParserState::new(input);","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pest-2.2.1\\src\\parser_state.rs","byte_start":90682,"byte_end":90724,"line_start":403,"line_end":403,"column_start":5,"column_end":47}},{"value":"/ result = state.repeat(|s| {","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pest-2.2.1\\src\\parser_state.rs","byte_start":90729,"byte_end":90760,"line_start":404,"line_end":404,"column_start":5,"column_end":36}},{"value":"/     s.match_string(\"b\")","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pest-2.2.1\\src\\parser_state.rs","byte_start":90765,"byte_end":90792,"line_start":405,"line_end":405,"column_start":5,"column_end":32}},{"value":"/ });","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pest-2.2.1\\src\\parser_state.rs","byte_start":90797,"byte_end":90804,"line_start":406,"line_end":406,"column_start":5,"column_end":12}},{"value":"/ assert!(result.is_ok());","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pest-2.2.1\\src\\parser_state.rs","byte_start":90809,"byte_end":90837,"line_start":407,"line_end":407,"column_start":5,"column_end":33}},{"value":"/ assert_eq!(result.unwrap().position().pos(), 0);","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pest-2.2.1\\src\\parser_state.rs","byte_start":90842,"byte_end":90894,"line_start":408,"line_end":408,"column_start":5,"column_end":57}},{"value":"/ ```","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pest-2.2.1\\src\\parser_state.rs","byte_start":90899,"byte_end":90906,"line_start":409,"line_end":409,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pest-2.2.1\\src\\parser_state.rs","byte_start":90911,"byte_end":90920,"line_start":410,"line_end":410,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":502},"span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pest-2.2.1\\src\\parser_state.rs","byte_start":92145,"byte_end":92153,"line_start":452,"line_end":452,"column_start":12,"column_end":20},"name":"optional","qualname":"<ParserState>::optional","value":"pub fn optional<F>(Box<Self>, F) -> ParseResult<Box<Self>> where\nF: FnOnce(Box<Self>) -> ParseResult<Box<Self>>","parent":null,"children":[],"decl_id":null,"docs":" Optionally applies the transformation provided by `f` from the `Box<ParserState>`. Returns\n `Ok` with the updated `Box<ParserState>` returned by `f` regardless of the `Result`.","sig":null,"attributes":[{"value":"/ Optionally applies the transformation provided by `f` from the `Box<ParserState>`. Returns","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pest-2.2.1\\src\\parser_state.rs","byte_start":91275,"byte_end":91369,"line_start":425,"line_end":425,"column_start":5,"column_end":99}},{"value":"/ `Ok` with the updated `Box<ParserState>` returned by `f` regardless of the `Result`.","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pest-2.2.1\\src\\parser_state.rs","byte_start":91374,"byte_end":91462,"line_start":426,"line_end":426,"column_start":5,"column_end":93}},{"value":"/","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pest-2.2.1\\src\\parser_state.rs","byte_start":91467,"byte_end":91470,"line_start":427,"line_end":427,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pest-2.2.1\\src\\parser_state.rs","byte_start":91475,"byte_end":91489,"line_start":428,"line_end":428,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pest-2.2.1\\src\\parser_state.rs","byte_start":91494,"byte_end":91497,"line_start":429,"line_end":429,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pest-2.2.1\\src\\parser_state.rs","byte_start":91502,"byte_end":91509,"line_start":430,"line_end":430,"column_start":5,"column_end":12}},{"value":"/ # use pest;","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pest-2.2.1\\src\\parser_state.rs","byte_start":91514,"byte_end":91529,"line_start":431,"line_end":431,"column_start":5,"column_end":20}},{"value":"/ # #[allow(non_camel_case_types)]","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pest-2.2.1\\src\\parser_state.rs","byte_start":91534,"byte_end":91570,"line_start":432,"line_end":432,"column_start":5,"column_end":41}},{"value":"/ # #[derive(Clone, Copy, Debug, Eq, Hash, Ord, PartialEq, PartialOrd)]","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pest-2.2.1\\src\\parser_state.rs","byte_start":91575,"byte_end":91648,"line_start":433,"line_end":433,"column_start":5,"column_end":78}},{"value":"/ enum Rule {","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pest-2.2.1\\src\\parser_state.rs","byte_start":91653,"byte_end":91668,"line_start":434,"line_end":434,"column_start":5,"column_end":20}},{"value":"/     ab","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pest-2.2.1\\src\\parser_state.rs","byte_start":91673,"byte_end":91683,"line_start":435,"line_end":435,"column_start":5,"column_end":15}},{"value":"/ }","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pest-2.2.1\\src\\parser_state.rs","byte_start":91688,"byte_end":91693,"line_start":436,"line_end":436,"column_start":5,"column_end":10}},{"value":"/","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pest-2.2.1\\src\\parser_state.rs","byte_start":91698,"byte_end":91701,"line_start":437,"line_end":437,"column_start":5,"column_end":8}},{"value":"/ let input = \"ab\";","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pest-2.2.1\\src\\parser_state.rs","byte_start":91706,"byte_end":91727,"line_start":438,"line_end":438,"column_start":5,"column_end":26}},{"value":"/ let mut state: Box<pest::ParserState<Rule>> = pest::ParserState::new(input);","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pest-2.2.1\\src\\parser_state.rs","byte_start":91732,"byte_end":91812,"line_start":439,"line_end":439,"column_start":5,"column_end":85}},{"value":"/ let result = state.optional(|s| {","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pest-2.2.1\\src\\parser_state.rs","byte_start":91817,"byte_end":91854,"line_start":440,"line_end":440,"column_start":5,"column_end":42}},{"value":"/     s.match_string(\"ab\")","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pest-2.2.1\\src\\parser_state.rs","byte_start":91859,"byte_end":91887,"line_start":441,"line_end":441,"column_start":5,"column_end":33}},{"value":"/ });","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pest-2.2.1\\src\\parser_state.rs","byte_start":91892,"byte_end":91899,"line_start":442,"line_end":442,"column_start":5,"column_end":12}},{"value":"/ assert!(result.is_ok());","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pest-2.2.1\\src\\parser_state.rs","byte_start":91904,"byte_end":91932,"line_start":443,"line_end":443,"column_start":5,"column_end":33}},{"value":"/","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pest-2.2.1\\src\\parser_state.rs","byte_start":91937,"byte_end":91940,"line_start":444,"line_end":444,"column_start":5,"column_end":8}},{"value":"/ state = pest::ParserState::new(input);","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pest-2.2.1\\src\\parser_state.rs","byte_start":91945,"byte_end":91987,"line_start":445,"line_end":445,"column_start":5,"column_end":47}},{"value":"/ let result = state.optional(|s| {","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pest-2.2.1\\src\\parser_state.rs","byte_start":91992,"byte_end":92029,"line_start":446,"line_end":446,"column_start":5,"column_end":42}},{"value":"/     s.match_string(\"ac\")","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pest-2.2.1\\src\\parser_state.rs","byte_start":92034,"byte_end":92062,"line_start":447,"line_end":447,"column_start":5,"column_end":33}},{"value":"/ });","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pest-2.2.1\\src\\parser_state.rs","byte_start":92067,"byte_end":92074,"line_start":448,"line_end":448,"column_start":5,"column_end":12}},{"value":"/ assert!(result.is_ok());","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pest-2.2.1\\src\\parser_state.rs","byte_start":92079,"byte_end":92107,"line_start":449,"line_end":449,"column_start":5,"column_end":33}},{"value":"/ ```","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pest-2.2.1\\src\\parser_state.rs","byte_start":92112,"byte_end":92119,"line_start":450,"line_end":450,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pest-2.2.1\\src\\parser_state.rs","byte_start":92124,"byte_end":92133,"line_start":451,"line_end":451,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":504},"span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pest-2.2.1\\src\\parser_state.rs","byte_start":93365,"byte_end":93378,"line_start":486,"line_end":486,"column_start":12,"column_end":25},"name":"match_char_by","qualname":"<ParserState>::match_char_by","value":"pub fn match_char_by<F>(Box<Self>, F) -> ParseResult<Box<Self>> where\nF: FnOnce(char) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Attempts to match a single character based on a filter function. Returns `Ok` with the\n updated `Box<ParserState>` if successful, or `Err` with the updated `Box<ParserState>`\n otherwise.","sig":null,"attributes":[{"value":"/ Attempts to match a single character based on a filter function. Returns `Ok` with the","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pest-2.2.1\\src\\parser_state.rs","byte_start":92372,"byte_end":92462,"line_start":461,"line_end":461,"column_start":5,"column_end":95}},{"value":"/ updated `Box<ParserState>` if successful, or `Err` with the updated `Box<ParserState>`","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pest-2.2.1\\src\\parser_state.rs","byte_start":92467,"byte_end":92557,"line_start":462,"line_end":462,"column_start":5,"column_end":95}},{"value":"/ otherwise.","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pest-2.2.1\\src\\parser_state.rs","byte_start":92562,"byte_end":92576,"line_start":463,"line_end":463,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pest-2.2.1\\src\\parser_state.rs","byte_start":92581,"byte_end":92584,"line_start":464,"line_end":464,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pest-2.2.1\\src\\parser_state.rs","byte_start":92589,"byte_end":92603,"line_start":465,"line_end":465,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pest-2.2.1\\src\\parser_state.rs","byte_start":92608,"byte_end":92611,"line_start":466,"line_end":466,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pest-2.2.1\\src\\parser_state.rs","byte_start":92616,"byte_end":92623,"line_start":467,"line_end":467,"column_start":5,"column_end":12}},{"value":"/ # use pest;","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pest-2.2.1\\src\\parser_state.rs","byte_start":92628,"byte_end":92643,"line_start":468,"line_end":468,"column_start":5,"column_end":20}},{"value":"/ # #[allow(non_camel_case_types)]","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pest-2.2.1\\src\\parser_state.rs","byte_start":92648,"byte_end":92684,"line_start":469,"line_end":469,"column_start":5,"column_end":41}},{"value":"/ # #[derive(Clone, Copy, Debug, Eq, Hash, Ord, PartialEq, PartialOrd)]","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pest-2.2.1\\src\\parser_state.rs","byte_start":92689,"byte_end":92762,"line_start":470,"line_end":470,"column_start":5,"column_end":78}},{"value":"/ enum Rule {}","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pest-2.2.1\\src\\parser_state.rs","byte_start":92767,"byte_end":92783,"line_start":471,"line_end":471,"column_start":5,"column_end":21}},{"value":"/","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pest-2.2.1\\src\\parser_state.rs","byte_start":92788,"byte_end":92791,"line_start":472,"line_end":472,"column_start":5,"column_end":8}},{"value":"/ let input = \"ab\";","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pest-2.2.1\\src\\parser_state.rs","byte_start":92796,"byte_end":92817,"line_start":473,"line_end":473,"column_start":5,"column_end":26}},{"value":"/ let mut state: Box<pest::ParserState<Rule>> = pest::ParserState::new(input);","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pest-2.2.1\\src\\parser_state.rs","byte_start":92822,"byte_end":92902,"line_start":474,"line_end":474,"column_start":5,"column_end":85}},{"value":"/ let result = state.match_char_by(|c| c.is_ascii());","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pest-2.2.1\\src\\parser_state.rs","byte_start":92907,"byte_end":92962,"line_start":475,"line_end":475,"column_start":5,"column_end":60}},{"value":"/ assert!(result.is_ok());","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pest-2.2.1\\src\\parser_state.rs","byte_start":92967,"byte_end":92995,"line_start":476,"line_end":476,"column_start":5,"column_end":33}},{"value":"/ assert_eq!(result.unwrap().position().pos(), 1);","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pest-2.2.1\\src\\parser_state.rs","byte_start":93000,"byte_end":93052,"line_start":477,"line_end":477,"column_start":5,"column_end":57}},{"value":"/","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pest-2.2.1\\src\\parser_state.rs","byte_start":93057,"byte_end":93060,"line_start":478,"line_end":478,"column_start":5,"column_end":8}},{"value":"/ let input = \"❤\";","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pest-2.2.1\\src\\parser_state.rs","byte_start":93065,"byte_end":93087,"line_start":479,"line_end":479,"column_start":5,"column_end":25}},{"value":"/ let mut state: Box<pest::ParserState<Rule>> = pest::ParserState::new(input);","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pest-2.2.1\\src\\parser_state.rs","byte_start":93092,"byte_end":93172,"line_start":480,"line_end":480,"column_start":5,"column_end":85}},{"value":"/ let result = state.match_char_by(|c| c.is_ascii());","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pest-2.2.1\\src\\parser_state.rs","byte_start":93177,"byte_end":93232,"line_start":481,"line_end":481,"column_start":5,"column_end":60}},{"value":"/ assert!(result.is_err());","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pest-2.2.1\\src\\parser_state.rs","byte_start":93237,"byte_end":93266,"line_start":482,"line_end":482,"column_start":5,"column_end":34}},{"value":"/ assert_eq!(result.unwrap_err().position().pos(), 0);","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pest-2.2.1\\src\\parser_state.rs","byte_start":93271,"byte_end":93327,"line_start":483,"line_end":483,"column_start":5,"column_end":61}},{"value":"/ ```","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pest-2.2.1\\src\\parser_state.rs","byte_start":93332,"byte_end":93339,"line_start":484,"line_end":484,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pest-2.2.1\\src\\parser_state.rs","byte_start":93344,"byte_end":93353,"line_start":485,"line_end":485,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":506},"span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pest-2.2.1\\src\\parser_state.rs","byte_start":94474,"byte_end":94486,"line_start":520,"line_end":520,"column_start":12,"column_end":24},"name":"match_string","qualname":"<ParserState>::match_string","value":"pub fn match_string(Box<Self>, &str) -> ParseResult<Box<Self>>","parent":null,"children":[],"decl_id":null,"docs":" Attempts to match the given string. Returns `Ok` with the updated `Box<ParserState>` if\n successful, or `Err` with the updated `Box<ParserState>` otherwise.","sig":null,"attributes":[{"value":"/ Attempts to match the given string. Returns `Ok` with the updated `Box<ParserState>` if","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pest-2.2.1\\src\\parser_state.rs","byte_start":93609,"byte_end":93700,"line_start":497,"line_end":497,"column_start":5,"column_end":96}},{"value":"/ successful, or `Err` with the updated `Box<ParserState>` otherwise.","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pest-2.2.1\\src\\parser_state.rs","byte_start":93705,"byte_end":93776,"line_start":498,"line_end":498,"column_start":5,"column_end":76}},{"value":"/","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pest-2.2.1\\src\\parser_state.rs","byte_start":93781,"byte_end":93784,"line_start":499,"line_end":499,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pest-2.2.1\\src\\parser_state.rs","byte_start":93789,"byte_end":93803,"line_start":500,"line_end":500,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pest-2.2.1\\src\\parser_state.rs","byte_start":93808,"byte_end":93811,"line_start":501,"line_end":501,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pest-2.2.1\\src\\parser_state.rs","byte_start":93816,"byte_end":93823,"line_start":502,"line_end":502,"column_start":5,"column_end":12}},{"value":"/ # use pest;","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pest-2.2.1\\src\\parser_state.rs","byte_start":93828,"byte_end":93843,"line_start":503,"line_end":503,"column_start":5,"column_end":20}},{"value":"/ # #[allow(non_camel_case_types)]","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pest-2.2.1\\src\\parser_state.rs","byte_start":93848,"byte_end":93884,"line_start":504,"line_end":504,"column_start":5,"column_end":41}},{"value":"/ # #[derive(Clone, Copy, Debug, Eq, Hash, Ord, PartialEq, PartialOrd)]","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pest-2.2.1\\src\\parser_state.rs","byte_start":93889,"byte_end":93962,"line_start":505,"line_end":505,"column_start":5,"column_end":78}},{"value":"/ enum Rule {}","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pest-2.2.1\\src\\parser_state.rs","byte_start":93967,"byte_end":93983,"line_start":506,"line_end":506,"column_start":5,"column_end":21}},{"value":"/","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pest-2.2.1\\src\\parser_state.rs","byte_start":93988,"byte_end":93991,"line_start":507,"line_end":507,"column_start":5,"column_end":8}},{"value":"/ let input = \"ab\";","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pest-2.2.1\\src\\parser_state.rs","byte_start":93996,"byte_end":94017,"line_start":508,"line_end":508,"column_start":5,"column_end":26}},{"value":"/ let mut state: Box<pest::ParserState<Rule>> = pest::ParserState::new(input);","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pest-2.2.1\\src\\parser_state.rs","byte_start":94022,"byte_end":94102,"line_start":509,"line_end":509,"column_start":5,"column_end":85}},{"value":"/ let mut result = state.match_string(\"ab\");","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pest-2.2.1\\src\\parser_state.rs","byte_start":94107,"byte_end":94153,"line_start":510,"line_end":510,"column_start":5,"column_end":51}},{"value":"/ assert!(result.is_ok());","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pest-2.2.1\\src\\parser_state.rs","byte_start":94158,"byte_end":94186,"line_start":511,"line_end":511,"column_start":5,"column_end":33}},{"value":"/ assert_eq!(result.unwrap().position().pos(), 2);","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pest-2.2.1\\src\\parser_state.rs","byte_start":94191,"byte_end":94243,"line_start":512,"line_end":512,"column_start":5,"column_end":57}},{"value":"/","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pest-2.2.1\\src\\parser_state.rs","byte_start":94248,"byte_end":94251,"line_start":513,"line_end":513,"column_start":5,"column_end":8}},{"value":"/ state = pest::ParserState::new(input);","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pest-2.2.1\\src\\parser_state.rs","byte_start":94256,"byte_end":94298,"line_start":514,"line_end":514,"column_start":5,"column_end":47}},{"value":"/ result = state.match_string(\"ac\");","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pest-2.2.1\\src\\parser_state.rs","byte_start":94303,"byte_end":94341,"line_start":515,"line_end":515,"column_start":5,"column_end":43}},{"value":"/ assert!(result.is_err());","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pest-2.2.1\\src\\parser_state.rs","byte_start":94346,"byte_end":94375,"line_start":516,"line_end":516,"column_start":5,"column_end":34}},{"value":"/ assert_eq!(result.unwrap_err().position().pos(), 0);","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pest-2.2.1\\src\\parser_state.rs","byte_start":94380,"byte_end":94436,"line_start":517,"line_end":517,"column_start":5,"column_end":61}},{"value":"/ ```","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pest-2.2.1\\src\\parser_state.rs","byte_start":94441,"byte_end":94448,"line_start":518,"line_end":518,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pest-2.2.1\\src\\parser_state.rs","byte_start":94453,"byte_end":94462,"line_start":519,"line_end":519,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":507},"span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pest-2.2.1\\src\\parser_state.rs","byte_start":95573,"byte_end":95590,"line_start":551,"line_end":551,"column_start":12,"column_end":29},"name":"match_insensitive","qualname":"<ParserState>::match_insensitive","value":"pub fn match_insensitive(Box<Self>, &str) -> ParseResult<Box<Self>>","parent":null,"children":[],"decl_id":null,"docs":" Attempts to case-insensitively match the given string. Returns `Ok` with the updated\n `Box<ParserState>` if successful, or `Err` with the updated `Box<ParserState>` otherwise.","sig":null,"attributes":[{"value":"/ Attempts to case-insensitively match the given string. Returns `Ok` with the updated","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pest-2.2.1\\src\\parser_state.rs","byte_start":94679,"byte_end":94767,"line_start":528,"line_end":528,"column_start":5,"column_end":93}},{"value":"/ `Box<ParserState>` if successful, or `Err` with the updated `Box<ParserState>` otherwise.","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pest-2.2.1\\src\\parser_state.rs","byte_start":94772,"byte_end":94865,"line_start":529,"line_end":529,"column_start":5,"column_end":98}},{"value":"/","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pest-2.2.1\\src\\parser_state.rs","byte_start":94870,"byte_end":94873,"line_start":530,"line_end":530,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pest-2.2.1\\src\\parser_state.rs","byte_start":94878,"byte_end":94892,"line_start":531,"line_end":531,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pest-2.2.1\\src\\parser_state.rs","byte_start":94897,"byte_end":94900,"line_start":532,"line_end":532,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pest-2.2.1\\src\\parser_state.rs","byte_start":94905,"byte_end":94912,"line_start":533,"line_end":533,"column_start":5,"column_end":12}},{"value":"/ # use pest;","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pest-2.2.1\\src\\parser_state.rs","byte_start":94917,"byte_end":94932,"line_start":534,"line_end":534,"column_start":5,"column_end":20}},{"value":"/ # #[allow(non_camel_case_types)]","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pest-2.2.1\\src\\parser_state.rs","byte_start":94937,"byte_end":94973,"line_start":535,"line_end":535,"column_start":5,"column_end":41}},{"value":"/ # #[derive(Clone, Copy, Debug, Eq, Hash, Ord, PartialEq, PartialOrd)]","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pest-2.2.1\\src\\parser_state.rs","byte_start":94978,"byte_end":95051,"line_start":536,"line_end":536,"column_start":5,"column_end":78}},{"value":"/ enum Rule {}","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pest-2.2.1\\src\\parser_state.rs","byte_start":95056,"byte_end":95072,"line_start":537,"line_end":537,"column_start":5,"column_end":21}},{"value":"/","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pest-2.2.1\\src\\parser_state.rs","byte_start":95077,"byte_end":95080,"line_start":538,"line_end":538,"column_start":5,"column_end":8}},{"value":"/ let input = \"ab\";","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pest-2.2.1\\src\\parser_state.rs","byte_start":95085,"byte_end":95106,"line_start":539,"line_end":539,"column_start":5,"column_end":26}},{"value":"/ let mut state: Box<pest::ParserState<Rule>> = pest::ParserState::new(input);","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pest-2.2.1\\src\\parser_state.rs","byte_start":95111,"byte_end":95191,"line_start":540,"line_end":540,"column_start":5,"column_end":85}},{"value":"/ let mut result = state.match_insensitive(\"AB\");","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pest-2.2.1\\src\\parser_state.rs","byte_start":95196,"byte_end":95247,"line_start":541,"line_end":541,"column_start":5,"column_end":56}},{"value":"/ assert!(result.is_ok());","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pest-2.2.1\\src\\parser_state.rs","byte_start":95252,"byte_end":95280,"line_start":542,"line_end":542,"column_start":5,"column_end":33}},{"value":"/ assert_eq!(result.unwrap().position().pos(), 2);","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pest-2.2.1\\src\\parser_state.rs","byte_start":95285,"byte_end":95337,"line_start":543,"line_end":543,"column_start":5,"column_end":57}},{"value":"/","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pest-2.2.1\\src\\parser_state.rs","byte_start":95342,"byte_end":95345,"line_start":544,"line_end":544,"column_start":5,"column_end":8}},{"value":"/ state = pest::ParserState::new(input);","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pest-2.2.1\\src\\parser_state.rs","byte_start":95350,"byte_end":95392,"line_start":545,"line_end":545,"column_start":5,"column_end":47}},{"value":"/ result = state.match_insensitive(\"AC\");","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pest-2.2.1\\src\\parser_state.rs","byte_start":95397,"byte_end":95440,"line_start":546,"line_end":546,"column_start":5,"column_end":48}},{"value":"/ assert!(result.is_err());","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pest-2.2.1\\src\\parser_state.rs","byte_start":95445,"byte_end":95474,"line_start":547,"line_end":547,"column_start":5,"column_end":34}},{"value":"/ assert_eq!(result.unwrap_err().position().pos(), 0);","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pest-2.2.1\\src\\parser_state.rs","byte_start":95479,"byte_end":95535,"line_start":548,"line_end":548,"column_start":5,"column_end":61}},{"value":"/ ```","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pest-2.2.1\\src\\parser_state.rs","byte_start":95540,"byte_end":95547,"line_start":549,"line_end":549,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pest-2.2.1\\src\\parser_state.rs","byte_start":95552,"byte_end":95561,"line_start":550,"line_end":550,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":508},"span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pest-2.2.1\\src\\parser_state.rs","byte_start":96682,"byte_end":96693,"line_start":582,"line_end":582,"column_start":12,"column_end":23},"name":"match_range","qualname":"<ParserState>::match_range","value":"pub fn match_range(Box<Self>, Range<char>) -> ParseResult<Box<Self>>","parent":null,"children":[],"decl_id":null,"docs":" Attempts to match a single character from the given range. Returns `Ok` with the updated\n `Box<ParserState>` if successful, or `Err` with the updated `Box<ParserState>` otherwise.","sig":null,"attributes":[{"value":"/ Attempts to match a single character from the given range. Returns `Ok` with the updated","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pest-2.2.1\\src\\parser_state.rs","byte_start":95788,"byte_end":95880,"line_start":559,"line_end":559,"column_start":5,"column_end":97}},{"value":"/ `Box<ParserState>` if successful, or `Err` with the updated `Box<ParserState>` otherwise.","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pest-2.2.1\\src\\parser_state.rs","byte_start":95885,"byte_end":95978,"line_start":560,"line_end":560,"column_start":5,"column_end":98}},{"value":"/","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pest-2.2.1\\src\\parser_state.rs","byte_start":95983,"byte_end":95986,"line_start":561,"line_end":561,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pest-2.2.1\\src\\parser_state.rs","byte_start":95991,"byte_end":96005,"line_start":562,"line_end":562,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pest-2.2.1\\src\\parser_state.rs","byte_start":96010,"byte_end":96013,"line_start":563,"line_end":563,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pest-2.2.1\\src\\parser_state.rs","byte_start":96018,"byte_end":96025,"line_start":564,"line_end":564,"column_start":5,"column_end":12}},{"value":"/ # use pest;","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pest-2.2.1\\src\\parser_state.rs","byte_start":96030,"byte_end":96045,"line_start":565,"line_end":565,"column_start":5,"column_end":20}},{"value":"/ # #[allow(non_camel_case_types)]","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pest-2.2.1\\src\\parser_state.rs","byte_start":96050,"byte_end":96086,"line_start":566,"line_end":566,"column_start":5,"column_end":41}},{"value":"/ # #[derive(Clone, Copy, Debug, Eq, Hash, Ord, PartialEq, PartialOrd)]","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pest-2.2.1\\src\\parser_state.rs","byte_start":96091,"byte_end":96164,"line_start":567,"line_end":567,"column_start":5,"column_end":78}},{"value":"/ enum Rule {}","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pest-2.2.1\\src\\parser_state.rs","byte_start":96169,"byte_end":96185,"line_start":568,"line_end":568,"column_start":5,"column_end":21}},{"value":"/","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pest-2.2.1\\src\\parser_state.rs","byte_start":96190,"byte_end":96193,"line_start":569,"line_end":569,"column_start":5,"column_end":8}},{"value":"/ let input = \"ab\";","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pest-2.2.1\\src\\parser_state.rs","byte_start":96198,"byte_end":96219,"line_start":570,"line_end":570,"column_start":5,"column_end":26}},{"value":"/ let mut state: Box<pest::ParserState<Rule>> = pest::ParserState::new(input);","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pest-2.2.1\\src\\parser_state.rs","byte_start":96224,"byte_end":96304,"line_start":571,"line_end":571,"column_start":5,"column_end":85}},{"value":"/ let mut result = state.match_range('a'..'z');","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pest-2.2.1\\src\\parser_state.rs","byte_start":96309,"byte_end":96358,"line_start":572,"line_end":572,"column_start":5,"column_end":54}},{"value":"/ assert!(result.is_ok());","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pest-2.2.1\\src\\parser_state.rs","byte_start":96363,"byte_end":96391,"line_start":573,"line_end":573,"column_start":5,"column_end":33}},{"value":"/ assert_eq!(result.unwrap().position().pos(), 1);","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pest-2.2.1\\src\\parser_state.rs","byte_start":96396,"byte_end":96448,"line_start":574,"line_end":574,"column_start":5,"column_end":57}},{"value":"/","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pest-2.2.1\\src\\parser_state.rs","byte_start":96453,"byte_end":96456,"line_start":575,"line_end":575,"column_start":5,"column_end":8}},{"value":"/ state = pest::ParserState::new(input);","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pest-2.2.1\\src\\parser_state.rs","byte_start":96461,"byte_end":96503,"line_start":576,"line_end":576,"column_start":5,"column_end":47}},{"value":"/ result = state.match_range('A'..'Z');","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pest-2.2.1\\src\\parser_state.rs","byte_start":96508,"byte_end":96549,"line_start":577,"line_end":577,"column_start":5,"column_end":46}},{"value":"/ assert!(result.is_err());","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pest-2.2.1\\src\\parser_state.rs","byte_start":96554,"byte_end":96583,"line_start":578,"line_end":578,"column_start":5,"column_end":34}},{"value":"/ assert_eq!(result.unwrap_err().position().pos(), 0);","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pest-2.2.1\\src\\parser_state.rs","byte_start":96588,"byte_end":96644,"line_start":579,"line_end":579,"column_start":5,"column_end":61}},{"value":"/ ```","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pest-2.2.1\\src\\parser_state.rs","byte_start":96649,"byte_end":96656,"line_start":580,"line_end":580,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pest-2.2.1\\src\\parser_state.rs","byte_start":96661,"byte_end":96670,"line_start":581,"line_end":581,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":509},"span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pest-2.2.1\\src\\parser_state.rs","byte_start":97738,"byte_end":97742,"line_start":613,"line_end":613,"column_start":12,"column_end":16},"name":"skip","qualname":"<ParserState>::skip","value":"pub fn skip(Box<Self>, usize) -> ParseResult<Box<Self>>","parent":null,"children":[],"decl_id":null,"docs":" Attempts to skip `n` characters forward. Returns `Ok` with the updated `Box<ParserState>`\n if successful, or `Err` with the updated `Box<ParserState>` otherwise.","sig":null,"attributes":[{"value":"/ Attempts to skip `n` characters forward. Returns `Ok` with the updated `Box<ParserState>`","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pest-2.2.1\\src\\parser_state.rs","byte_start":96890,"byte_end":96983,"line_start":590,"line_end":590,"column_start":5,"column_end":98}},{"value":"/ if successful, or `Err` with the updated `Box<ParserState>` otherwise.","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pest-2.2.1\\src\\parser_state.rs","byte_start":96988,"byte_end":97062,"line_start":591,"line_end":591,"column_start":5,"column_end":79}},{"value":"/","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pest-2.2.1\\src\\parser_state.rs","byte_start":97067,"byte_end":97070,"line_start":592,"line_end":592,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pest-2.2.1\\src\\parser_state.rs","byte_start":97075,"byte_end":97089,"line_start":593,"line_end":593,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pest-2.2.1\\src\\parser_state.rs","byte_start":97094,"byte_end":97097,"line_start":594,"line_end":594,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pest-2.2.1\\src\\parser_state.rs","byte_start":97102,"byte_end":97109,"line_start":595,"line_end":595,"column_start":5,"column_end":12}},{"value":"/ # use pest;","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pest-2.2.1\\src\\parser_state.rs","byte_start":97114,"byte_end":97129,"line_start":596,"line_end":596,"column_start":5,"column_end":20}},{"value":"/ # #[allow(non_camel_case_types)]","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pest-2.2.1\\src\\parser_state.rs","byte_start":97134,"byte_end":97170,"line_start":597,"line_end":597,"column_start":5,"column_end":41}},{"value":"/ # #[derive(Clone, Copy, Debug, Eq, Hash, Ord, PartialEq, PartialOrd)]","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pest-2.2.1\\src\\parser_state.rs","byte_start":97175,"byte_end":97248,"line_start":598,"line_end":598,"column_start":5,"column_end":78}},{"value":"/ enum Rule {}","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pest-2.2.1\\src\\parser_state.rs","byte_start":97253,"byte_end":97269,"line_start":599,"line_end":599,"column_start":5,"column_end":21}},{"value":"/","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pest-2.2.1\\src\\parser_state.rs","byte_start":97274,"byte_end":97277,"line_start":600,"line_end":600,"column_start":5,"column_end":8}},{"value":"/ let input = \"ab\";","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pest-2.2.1\\src\\parser_state.rs","byte_start":97282,"byte_end":97303,"line_start":601,"line_end":601,"column_start":5,"column_end":26}},{"value":"/ let mut state: Box<pest::ParserState<Rule>> = pest::ParserState::new(input);","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pest-2.2.1\\src\\parser_state.rs","byte_start":97308,"byte_end":97388,"line_start":602,"line_end":602,"column_start":5,"column_end":85}},{"value":"/ let mut result = state.skip(1);","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pest-2.2.1\\src\\parser_state.rs","byte_start":97393,"byte_end":97428,"line_start":603,"line_end":603,"column_start":5,"column_end":40}},{"value":"/ assert!(result.is_ok());","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pest-2.2.1\\src\\parser_state.rs","byte_start":97433,"byte_end":97461,"line_start":604,"line_end":604,"column_start":5,"column_end":33}},{"value":"/ assert_eq!(result.unwrap().position().pos(), 1);","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pest-2.2.1\\src\\parser_state.rs","byte_start":97466,"byte_end":97518,"line_start":605,"line_end":605,"column_start":5,"column_end":57}},{"value":"/","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pest-2.2.1\\src\\parser_state.rs","byte_start":97523,"byte_end":97526,"line_start":606,"line_end":606,"column_start":5,"column_end":8}},{"value":"/ state = pest::ParserState::new(input);","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pest-2.2.1\\src\\parser_state.rs","byte_start":97531,"byte_end":97573,"line_start":607,"line_end":607,"column_start":5,"column_end":47}},{"value":"/ result = state.skip(3);","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pest-2.2.1\\src\\parser_state.rs","byte_start":97578,"byte_end":97605,"line_start":608,"line_end":608,"column_start":5,"column_end":32}},{"value":"/ assert!(result.is_err());","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pest-2.2.1\\src\\parser_state.rs","byte_start":97610,"byte_end":97639,"line_start":609,"line_end":609,"column_start":5,"column_end":34}},{"value":"/ assert_eq!(result.unwrap_err().position().pos(), 0);","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pest-2.2.1\\src\\parser_state.rs","byte_start":97644,"byte_end":97700,"line_start":610,"line_end":610,"column_start":5,"column_end":61}},{"value":"/ ```","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pest-2.2.1\\src\\parser_state.rs","byte_start":97705,"byte_end":97712,"line_start":611,"line_end":611,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pest-2.2.1\\src\\parser_state.rs","byte_start":97717,"byte_end":97726,"line_start":612,"line_end":612,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":510},"span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pest-2.2.1\\src\\parser_state.rs","byte_start":98600,"byte_end":98610,"line_start":639,"line_end":639,"column_start":12,"column_end":22},"name":"skip_until","qualname":"<ParserState>::skip_until","value":"pub fn skip_until(Box<Self>, &[&str]) -> ParseResult<Box<Self>>","parent":null,"children":[],"decl_id":null,"docs":" Attempts to skip forward until one of the given strings is found. Returns `Ok` with the\n updated `Box<ParserState>` whether or not one of the strings is found.","sig":null,"attributes":[{"value":"/ Attempts to skip forward until one of the given strings is found. Returns `Ok` with the","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pest-2.2.1\\src\\parser_state.rs","byte_start":97918,"byte_end":98009,"line_start":621,"line_end":621,"column_start":5,"column_end":96}},{"value":"/ updated `Box<ParserState>` whether or not one of the strings is found.","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pest-2.2.1\\src\\parser_state.rs","byte_start":98014,"byte_end":98088,"line_start":622,"line_end":622,"column_start":5,"column_end":79}},{"value":"/","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pest-2.2.1\\src\\parser_state.rs","byte_start":98093,"byte_end":98096,"line_start":623,"line_end":623,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pest-2.2.1\\src\\parser_state.rs","byte_start":98101,"byte_end":98115,"line_start":624,"line_end":624,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pest-2.2.1\\src\\parser_state.rs","byte_start":98120,"byte_end":98123,"line_start":625,"line_end":625,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pest-2.2.1\\src\\parser_state.rs","byte_start":98128,"byte_end":98135,"line_start":626,"line_end":626,"column_start":5,"column_end":12}},{"value":"/ # use pest;","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pest-2.2.1\\src\\parser_state.rs","byte_start":98140,"byte_end":98155,"line_start":627,"line_end":627,"column_start":5,"column_end":20}},{"value":"/ # #[allow(non_camel_case_types)]","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pest-2.2.1\\src\\parser_state.rs","byte_start":98160,"byte_end":98196,"line_start":628,"line_end":628,"column_start":5,"column_end":41}},{"value":"/ # #[derive(Clone, Copy, Debug, Eq, Hash, Ord, PartialEq, PartialOrd)]","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pest-2.2.1\\src\\parser_state.rs","byte_start":98201,"byte_end":98274,"line_start":629,"line_end":629,"column_start":5,"column_end":78}},{"value":"/ enum Rule {}","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pest-2.2.1\\src\\parser_state.rs","byte_start":98279,"byte_end":98295,"line_start":630,"line_end":630,"column_start":5,"column_end":21}},{"value":"/","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pest-2.2.1\\src\\parser_state.rs","byte_start":98300,"byte_end":98303,"line_start":631,"line_end":631,"column_start":5,"column_end":8}},{"value":"/ let input = \"abcd\";","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pest-2.2.1\\src\\parser_state.rs","byte_start":98308,"byte_end":98331,"line_start":632,"line_end":632,"column_start":5,"column_end":28}},{"value":"/ let mut state: Box<pest::ParserState<Rule>> = pest::ParserState::new(input);","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pest-2.2.1\\src\\parser_state.rs","byte_start":98336,"byte_end":98416,"line_start":633,"line_end":633,"column_start":5,"column_end":85}},{"value":"/ let mut result = state.skip_until(&[\"c\", \"d\"]);","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pest-2.2.1\\src\\parser_state.rs","byte_start":98421,"byte_end":98472,"line_start":634,"line_end":634,"column_start":5,"column_end":56}},{"value":"/ assert!(result.is_ok());","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pest-2.2.1\\src\\parser_state.rs","byte_start":98477,"byte_end":98505,"line_start":635,"line_end":635,"column_start":5,"column_end":33}},{"value":"/ assert_eq!(result.unwrap().position().pos(), 2);","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pest-2.2.1\\src\\parser_state.rs","byte_start":98510,"byte_end":98562,"line_start":636,"line_end":636,"column_start":5,"column_end":57}},{"value":"/ ```","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pest-2.2.1\\src\\parser_state.rs","byte_start":98567,"byte_end":98574,"line_start":637,"line_end":637,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pest-2.2.1\\src\\parser_state.rs","byte_start":98579,"byte_end":98588,"line_start":638,"line_end":638,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":511},"span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pest-2.2.1\\src\\parser_state.rs","byte_start":99570,"byte_end":99584,"line_start":666,"line_end":666,"column_start":12,"column_end":26},"name":"start_of_input","qualname":"<ParserState>::start_of_input","value":"pub fn start_of_input(Box<Self>) -> ParseResult<Box<Self>>","parent":null,"children":[],"decl_id":null,"docs":" Attempts to match the start of the input. Returns `Ok` with the current `Box<ParserState>`\n if the parser has not yet advanced, or `Err` with the current `Box<ParserState>` otherwise.","sig":null,"attributes":[{"value":"/ Attempts to match the start of the input. Returns `Ok` with the current `Box<ParserState>`","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pest-2.2.1\\src\\parser_state.rs","byte_start":98749,"byte_end":98843,"line_start":644,"line_end":644,"column_start":5,"column_end":99}},{"value":"/ if the parser has not yet advanced, or `Err` with the current `Box<ParserState>` otherwise.","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pest-2.2.1\\src\\parser_state.rs","byte_start":98848,"byte_end":98943,"line_start":645,"line_end":645,"column_start":5,"column_end":100}},{"value":"/","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pest-2.2.1\\src\\parser_state.rs","byte_start":98948,"byte_end":98951,"line_start":646,"line_end":646,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pest-2.2.1\\src\\parser_state.rs","byte_start":98956,"byte_end":98970,"line_start":647,"line_end":647,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pest-2.2.1\\src\\parser_state.rs","byte_start":98975,"byte_end":98978,"line_start":648,"line_end":648,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pest-2.2.1\\src\\parser_state.rs","byte_start":98983,"byte_end":98990,"line_start":649,"line_end":649,"column_start":5,"column_end":12}},{"value":"/ # use pest;","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pest-2.2.1\\src\\parser_state.rs","byte_start":98995,"byte_end":99010,"line_start":650,"line_end":650,"column_start":5,"column_end":20}},{"value":"/ # #[allow(non_camel_case_types)]","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pest-2.2.1\\src\\parser_state.rs","byte_start":99015,"byte_end":99051,"line_start":651,"line_end":651,"column_start":5,"column_end":41}},{"value":"/ # #[derive(Clone, Copy, Debug, Eq, Hash, Ord, PartialEq, PartialOrd)]","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pest-2.2.1\\src\\parser_state.rs","byte_start":99056,"byte_end":99129,"line_start":652,"line_end":652,"column_start":5,"column_end":78}},{"value":"/ enum Rule {}","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pest-2.2.1\\src\\parser_state.rs","byte_start":99134,"byte_end":99150,"line_start":653,"line_end":653,"column_start":5,"column_end":21}},{"value":"/","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pest-2.2.1\\src\\parser_state.rs","byte_start":99155,"byte_end":99158,"line_start":654,"line_end":654,"column_start":5,"column_end":8}},{"value":"/ let input = \"ab\";","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pest-2.2.1\\src\\parser_state.rs","byte_start":99163,"byte_end":99184,"line_start":655,"line_end":655,"column_start":5,"column_end":26}},{"value":"/ let mut state: Box<pest::ParserState<Rule>> = pest::ParserState::new(input);","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pest-2.2.1\\src\\parser_state.rs","byte_start":99189,"byte_end":99269,"line_start":656,"line_end":656,"column_start":5,"column_end":85}},{"value":"/ let mut result = state.start_of_input();","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pest-2.2.1\\src\\parser_state.rs","byte_start":99274,"byte_end":99318,"line_start":657,"line_end":657,"column_start":5,"column_end":49}},{"value":"/ assert!(result.is_ok());","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pest-2.2.1\\src\\parser_state.rs","byte_start":99323,"byte_end":99351,"line_start":658,"line_end":658,"column_start":5,"column_end":33}},{"value":"/","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pest-2.2.1\\src\\parser_state.rs","byte_start":99356,"byte_end":99359,"line_start":659,"line_end":659,"column_start":5,"column_end":8}},{"value":"/ state = pest::ParserState::new(input);","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pest-2.2.1\\src\\parser_state.rs","byte_start":99364,"byte_end":99406,"line_start":660,"line_end":660,"column_start":5,"column_end":47}},{"value":"/ state = state.match_string(\"ab\").unwrap();","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pest-2.2.1\\src\\parser_state.rs","byte_start":99411,"byte_end":99457,"line_start":661,"line_end":661,"column_start":5,"column_end":51}},{"value":"/ result = state.start_of_input();","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pest-2.2.1\\src\\parser_state.rs","byte_start":99462,"byte_end":99498,"line_start":662,"line_end":662,"column_start":5,"column_end":41}},{"value":"/ assert!(result.is_err());","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pest-2.2.1\\src\\parser_state.rs","byte_start":99503,"byte_end":99532,"line_start":663,"line_end":663,"column_start":5,"column_end":34}},{"value":"/ ```","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pest-2.2.1\\src\\parser_state.rs","byte_start":99537,"byte_end":99544,"line_start":664,"line_end":664,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pest-2.2.1\\src\\parser_state.rs","byte_start":99549,"byte_end":99558,"line_start":665,"line_end":665,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":512},"span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pest-2.2.1\\src\\parser_state.rs","byte_start":100560,"byte_end":100572,"line_start":696,"line_end":696,"column_start":12,"column_end":24},"name":"end_of_input","qualname":"<ParserState>::end_of_input","value":"pub fn end_of_input(Box<Self>) -> ParseResult<Box<Self>>","parent":null,"children":[],"decl_id":null,"docs":" Attempts to match the end of the input. Returns `Ok` with the current `Box<ParserState>` if\n there is no input remaining, or `Err` with the current `Box<ParserState>` otherwise.","sig":null,"attributes":[{"value":"/ Attempts to match the end of the input. Returns `Ok` with the current `Box<ParserState>` if","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pest-2.2.1\\src\\parser_state.rs","byte_start":99749,"byte_end":99844,"line_start":674,"line_end":674,"column_start":5,"column_end":100}},{"value":"/ there is no input remaining, or `Err` with the current `Box<ParserState>` otherwise.","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pest-2.2.1\\src\\parser_state.rs","byte_start":99849,"byte_end":99937,"line_start":675,"line_end":675,"column_start":5,"column_end":93}},{"value":"/","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pest-2.2.1\\src\\parser_state.rs","byte_start":99942,"byte_end":99945,"line_start":676,"line_end":676,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pest-2.2.1\\src\\parser_state.rs","byte_start":99950,"byte_end":99964,"line_start":677,"line_end":677,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pest-2.2.1\\src\\parser_state.rs","byte_start":99969,"byte_end":99972,"line_start":678,"line_end":678,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pest-2.2.1\\src\\parser_state.rs","byte_start":99977,"byte_end":99984,"line_start":679,"line_end":679,"column_start":5,"column_end":12}},{"value":"/ # use pest;","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pest-2.2.1\\src\\parser_state.rs","byte_start":99989,"byte_end":100004,"line_start":680,"line_end":680,"column_start":5,"column_end":20}},{"value":"/ # #[allow(non_camel_case_types)]","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pest-2.2.1\\src\\parser_state.rs","byte_start":100009,"byte_end":100045,"line_start":681,"line_end":681,"column_start":5,"column_end":41}},{"value":"/ # #[derive(Clone, Copy, Debug, Eq, Hash, Ord, PartialEq, PartialOrd)]","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pest-2.2.1\\src\\parser_state.rs","byte_start":100050,"byte_end":100123,"line_start":682,"line_end":682,"column_start":5,"column_end":78}},{"value":"/ enum Rule {}","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pest-2.2.1\\src\\parser_state.rs","byte_start":100128,"byte_end":100144,"line_start":683,"line_end":683,"column_start":5,"column_end":21}},{"value":"/","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pest-2.2.1\\src\\parser_state.rs","byte_start":100149,"byte_end":100152,"line_start":684,"line_end":684,"column_start":5,"column_end":8}},{"value":"/ let input = \"ab\";","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pest-2.2.1\\src\\parser_state.rs","byte_start":100157,"byte_end":100178,"line_start":685,"line_end":685,"column_start":5,"column_end":26}},{"value":"/ let mut state: Box<pest::ParserState<Rule>> = pest::ParserState::new(input);","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pest-2.2.1\\src\\parser_state.rs","byte_start":100183,"byte_end":100263,"line_start":686,"line_end":686,"column_start":5,"column_end":85}},{"value":"/ let mut result = state.end_of_input();","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pest-2.2.1\\src\\parser_state.rs","byte_start":100268,"byte_end":100310,"line_start":687,"line_end":687,"column_start":5,"column_end":47}},{"value":"/ assert!(result.is_err());","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pest-2.2.1\\src\\parser_state.rs","byte_start":100315,"byte_end":100344,"line_start":688,"line_end":688,"column_start":5,"column_end":34}},{"value":"/","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pest-2.2.1\\src\\parser_state.rs","byte_start":100349,"byte_end":100352,"line_start":689,"line_end":689,"column_start":5,"column_end":8}},{"value":"/ state = pest::ParserState::new(input);","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pest-2.2.1\\src\\parser_state.rs","byte_start":100357,"byte_end":100399,"line_start":690,"line_end":690,"column_start":5,"column_end":47}},{"value":"/ state = state.match_string(\"ab\").unwrap();","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pest-2.2.1\\src\\parser_state.rs","byte_start":100404,"byte_end":100450,"line_start":691,"line_end":691,"column_start":5,"column_end":51}},{"value":"/ result = state.end_of_input();","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pest-2.2.1\\src\\parser_state.rs","byte_start":100455,"byte_end":100489,"line_start":692,"line_end":692,"column_start":5,"column_end":39}},{"value":"/ assert!(result.is_ok());","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pest-2.2.1\\src\\parser_state.rs","byte_start":100494,"byte_end":100522,"line_start":693,"line_end":693,"column_start":5,"column_end":33}},{"value":"/ ```","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pest-2.2.1\\src\\parser_state.rs","byte_start":100527,"byte_end":100534,"line_start":694,"line_end":694,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pest-2.2.1\\src\\parser_state.rs","byte_start":100539,"byte_end":100548,"line_start":695,"line_end":695,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":513},"span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pest-2.2.1\\src\\parser_state.rs","byte_start":101607,"byte_end":101616,"line_start":729,"line_end":729,"column_start":12,"column_end":21},"name":"lookahead","qualname":"<ParserState>::lookahead","value":"pub fn lookahead<F>(Box<Self>, bool, F) -> ParseResult<Box<Self>> where\nF: FnOnce(Box<Self>) -> ParseResult<Box<Self>>","parent":null,"children":[],"decl_id":null,"docs":" Starts a lookahead transformation provided by `f` from the `Box<ParserState>`. It returns\n `Ok` with the current `Box<ParserState>` if `f` also returns an `Ok`, or `Err` with the current\n `Box<ParserState>` otherwise. If `is_positive` is `false`, it swaps the `Ok` and `Err`\n together, negating the `Result`.","sig":null,"attributes":[{"value":"/ Starts a lookahead transformation provided by `f` from the `Box<ParserState>`. It returns","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pest-2.2.1\\src\\parser_state.rs","byte_start":100735,"byte_end":100828,"line_start":704,"line_end":704,"column_start":5,"column_end":98}},{"value":"/ `Ok` with the current `Box<ParserState>` if `f` also returns an `Ok`, or `Err` with the current","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pest-2.2.1\\src\\parser_state.rs","byte_start":100833,"byte_end":100932,"line_start":705,"line_end":705,"column_start":5,"column_end":104}},{"value":"/ `Box<ParserState>` otherwise. If `is_positive` is `false`, it swaps the `Ok` and `Err`","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pest-2.2.1\\src\\parser_state.rs","byte_start":100937,"byte_end":101027,"line_start":706,"line_end":706,"column_start":5,"column_end":95}},{"value":"/ together, negating the `Result`.","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pest-2.2.1\\src\\parser_state.rs","byte_start":101032,"byte_end":101068,"line_start":707,"line_end":707,"column_start":5,"column_end":41}},{"value":"/","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pest-2.2.1\\src\\parser_state.rs","byte_start":101073,"byte_end":101076,"line_start":708,"line_end":708,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pest-2.2.1\\src\\parser_state.rs","byte_start":101081,"byte_end":101095,"line_start":709,"line_end":709,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pest-2.2.1\\src\\parser_state.rs","byte_start":101100,"byte_end":101103,"line_start":710,"line_end":710,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pest-2.2.1\\src\\parser_state.rs","byte_start":101108,"byte_end":101115,"line_start":711,"line_end":711,"column_start":5,"column_end":12}},{"value":"/ # use pest;","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pest-2.2.1\\src\\parser_state.rs","byte_start":101120,"byte_end":101135,"line_start":712,"line_end":712,"column_start":5,"column_end":20}},{"value":"/ # #[allow(non_camel_case_types)]","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pest-2.2.1\\src\\parser_state.rs","byte_start":101140,"byte_end":101176,"line_start":713,"line_end":713,"column_start":5,"column_end":41}},{"value":"/ # #[derive(Clone, Copy, Debug, Eq, Hash, Ord, PartialEq, PartialOrd)]","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pest-2.2.1\\src\\parser_state.rs","byte_start":101181,"byte_end":101254,"line_start":714,"line_end":714,"column_start":5,"column_end":78}},{"value":"/ enum Rule {","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pest-2.2.1\\src\\parser_state.rs","byte_start":101259,"byte_end":101274,"line_start":715,"line_end":715,"column_start":5,"column_end":20}},{"value":"/     a","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pest-2.2.1\\src\\parser_state.rs","byte_start":101279,"byte_end":101288,"line_start":716,"line_end":716,"column_start":5,"column_end":14}},{"value":"/ }","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pest-2.2.1\\src\\parser_state.rs","byte_start":101293,"byte_end":101298,"line_start":717,"line_end":717,"column_start":5,"column_end":10}},{"value":"/","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pest-2.2.1\\src\\parser_state.rs","byte_start":101303,"byte_end":101306,"line_start":718,"line_end":718,"column_start":5,"column_end":8}},{"value":"/ let input = \"a\";","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pest-2.2.1\\src\\parser_state.rs","byte_start":101311,"byte_end":101331,"line_start":719,"line_end":719,"column_start":5,"column_end":25}},{"value":"/ let pairs: Vec<_> = pest::state(input, |state| {","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pest-2.2.1\\src\\parser_state.rs","byte_start":101336,"byte_end":101388,"line_start":720,"line_end":720,"column_start":5,"column_end":57}},{"value":"/     state.lookahead(true, |state| {","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pest-2.2.1\\src\\parser_state.rs","byte_start":101393,"byte_end":101432,"line_start":721,"line_end":721,"column_start":5,"column_end":44}},{"value":"/         state.rule(Rule::a, |s| Ok(s))","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pest-2.2.1\\src\\parser_state.rs","byte_start":101437,"byte_end":101479,"line_start":722,"line_end":722,"column_start":5,"column_end":47}},{"value":"/     })","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pest-2.2.1\\src\\parser_state.rs","byte_start":101484,"byte_end":101494,"line_start":723,"line_end":723,"column_start":5,"column_end":15}},{"value":"/ }).unwrap().collect();","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pest-2.2.1\\src\\parser_state.rs","byte_start":101499,"byte_end":101525,"line_start":724,"line_end":724,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pest-2.2.1\\src\\parser_state.rs","byte_start":101530,"byte_end":101533,"line_start":725,"line_end":725,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(pairs.len(), 0);","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pest-2.2.1\\src\\parser_state.rs","byte_start":101538,"byte_end":101569,"line_start":726,"line_end":726,"column_start":5,"column_end":36}},{"value":"/ ```","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pest-2.2.1\\src\\parser_state.rs","byte_start":101574,"byte_end":101581,"line_start":727,"line_end":727,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pest-2.2.1\\src\\parser_state.rs","byte_start":101586,"byte_end":101595,"line_start":728,"line_end":728,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":515},"span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pest-2.2.1\\src\\parser_state.rs","byte_start":103661,"byte_end":103667,"line_start":796,"line_end":796,"column_start":12,"column_end":18},"name":"atomic","qualname":"<ParserState>::atomic","value":"pub fn atomic<F>(Box<Self>, Atomicity, F) -> ParseResult<Box<Self>> where\nF: FnOnce(Box<Self>) -> ParseResult<Box<Self>>","parent":null,"children":[],"decl_id":null,"docs":" Transformation which stops `Token`s from being generated according to `is_atomic`.","sig":null,"attributes":[{"value":"/ Transformation which stops `Token`s from being generated according to `is_atomic`.","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pest-2.2.1\\src\\parser_state.rs","byte_start":103015,"byte_end":103101,"line_start":774,"line_end":774,"column_start":5,"column_end":91}},{"value":"/","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pest-2.2.1\\src\\parser_state.rs","byte_start":103106,"byte_end":103109,"line_start":775,"line_end":775,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pest-2.2.1\\src\\parser_state.rs","byte_start":103114,"byte_end":103128,"line_start":776,"line_end":776,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pest-2.2.1\\src\\parser_state.rs","byte_start":103133,"byte_end":103136,"line_start":777,"line_end":777,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pest-2.2.1\\src\\parser_state.rs","byte_start":103141,"byte_end":103148,"line_start":778,"line_end":778,"column_start":5,"column_end":12}},{"value":"/ # use pest::{self, Atomicity};","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pest-2.2.1\\src\\parser_state.rs","byte_start":103153,"byte_end":103187,"line_start":779,"line_end":779,"column_start":5,"column_end":39}},{"value":"/ # #[allow(non_camel_case_types)]","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pest-2.2.1\\src\\parser_state.rs","byte_start":103192,"byte_end":103228,"line_start":780,"line_end":780,"column_start":5,"column_end":41}},{"value":"/ # #[derive(Clone, Copy, Debug, Eq, Hash, Ord, PartialEq, PartialOrd)]","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pest-2.2.1\\src\\parser_state.rs","byte_start":103233,"byte_end":103306,"line_start":781,"line_end":781,"column_start":5,"column_end":78}},{"value":"/ enum Rule {","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pest-2.2.1\\src\\parser_state.rs","byte_start":103311,"byte_end":103326,"line_start":782,"line_end":782,"column_start":5,"column_end":20}},{"value":"/     a","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pest-2.2.1\\src\\parser_state.rs","byte_start":103331,"byte_end":103340,"line_start":783,"line_end":783,"column_start":5,"column_end":14}},{"value":"/ }","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pest-2.2.1\\src\\parser_state.rs","byte_start":103345,"byte_end":103350,"line_start":784,"line_end":784,"column_start":5,"column_end":10}},{"value":"/","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pest-2.2.1\\src\\parser_state.rs","byte_start":103355,"byte_end":103358,"line_start":785,"line_end":785,"column_start":5,"column_end":8}},{"value":"/ let input = \"a\";","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pest-2.2.1\\src\\parser_state.rs","byte_start":103363,"byte_end":103383,"line_start":786,"line_end":786,"column_start":5,"column_end":25}},{"value":"/ let pairs: Vec<_> = pest::state(input, |state| {","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pest-2.2.1\\src\\parser_state.rs","byte_start":103388,"byte_end":103440,"line_start":787,"line_end":787,"column_start":5,"column_end":57}},{"value":"/     state.atomic(Atomicity::Atomic, |s| {","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pest-2.2.1\\src\\parser_state.rs","byte_start":103445,"byte_end":103490,"line_start":788,"line_end":788,"column_start":5,"column_end":50}},{"value":"/         s.rule(Rule::a, |s| Ok(s))","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pest-2.2.1\\src\\parser_state.rs","byte_start":103495,"byte_end":103533,"line_start":789,"line_end":789,"column_start":5,"column_end":43}},{"value":"/     })","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pest-2.2.1\\src\\parser_state.rs","byte_start":103538,"byte_end":103548,"line_start":790,"line_end":790,"column_start":5,"column_end":15}},{"value":"/ }).unwrap().collect();","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pest-2.2.1\\src\\parser_state.rs","byte_start":103553,"byte_end":103579,"line_start":791,"line_end":791,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pest-2.2.1\\src\\parser_state.rs","byte_start":103584,"byte_end":103587,"line_start":792,"line_end":792,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(pairs.len(), 0);","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pest-2.2.1\\src\\parser_state.rs","byte_start":103592,"byte_end":103623,"line_start":793,"line_end":793,"column_start":5,"column_end":36}},{"value":"/ ```","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pest-2.2.1\\src\\parser_state.rs","byte_start":103628,"byte_end":103635,"line_start":794,"line_end":794,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pest-2.2.1\\src\\parser_state.rs","byte_start":103640,"byte_end":103649,"line_start":795,"line_end":795,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":517},"span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pest-2.2.1\\src\\parser_state.rs","byte_start":105255,"byte_end":105265,"line_start":844,"line_end":844,"column_start":12,"column_end":22},"name":"stack_push","qualname":"<ParserState>::stack_push","value":"pub fn stack_push<F>(Box<Self>, F) -> ParseResult<Box<Self>> where\nF: FnOnce(Box<Self>) -> ParseResult<Box<Self>>","parent":null,"children":[],"decl_id":null,"docs":" Evaluates the result of closure `f` and pushes the span of the input consumed from before\n `f` is called to after `f` is called to the stack. Returns `Ok(Box<ParserState>)` if `f` is\n called successfully, or `Err(Box<ParserState>)` otherwise.","sig":null,"attributes":[{"value":"/ Evaluates the result of closure `f` and pushes the span of the input consumed from before","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pest-2.2.1\\src\\parser_state.rs","byte_start":104465,"byte_end":104558,"line_start":825,"line_end":825,"column_start":5,"column_end":98}},{"value":"/ `f` is called to after `f` is called to the stack. Returns `Ok(Box<ParserState>)` if `f` is","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pest-2.2.1\\src\\parser_state.rs","byte_start":104563,"byte_end":104658,"line_start":826,"line_end":826,"column_start":5,"column_end":100}},{"value":"/ called successfully, or `Err(Box<ParserState>)` otherwise.","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pest-2.2.1\\src\\parser_state.rs","byte_start":104663,"byte_end":104725,"line_start":827,"line_end":827,"column_start":5,"column_end":67}},{"value":"/","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pest-2.2.1\\src\\parser_state.rs","byte_start":104730,"byte_end":104733,"line_start":828,"line_end":828,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pest-2.2.1\\src\\parser_state.rs","byte_start":104738,"byte_end":104752,"line_start":829,"line_end":829,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pest-2.2.1\\src\\parser_state.rs","byte_start":104757,"byte_end":104760,"line_start":830,"line_end":830,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pest-2.2.1\\src\\parser_state.rs","byte_start":104765,"byte_end":104772,"line_start":831,"line_end":831,"column_start":5,"column_end":12}},{"value":"/ # use pest;","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pest-2.2.1\\src\\parser_state.rs","byte_start":104777,"byte_end":104792,"line_start":832,"line_end":832,"column_start":5,"column_end":20}},{"value":"/ # #[allow(non_camel_case_types)]","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pest-2.2.1\\src\\parser_state.rs","byte_start":104797,"byte_end":104833,"line_start":833,"line_end":833,"column_start":5,"column_end":41}},{"value":"/ # #[derive(Clone, Copy, Debug, Eq, Hash, Ord, PartialEq, PartialOrd)]","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pest-2.2.1\\src\\parser_state.rs","byte_start":104838,"byte_end":104911,"line_start":834,"line_end":834,"column_start":5,"column_end":78}},{"value":"/ enum Rule {}","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pest-2.2.1\\src\\parser_state.rs","byte_start":104916,"byte_end":104932,"line_start":835,"line_end":835,"column_start":5,"column_end":21}},{"value":"/","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pest-2.2.1\\src\\parser_state.rs","byte_start":104937,"byte_end":104940,"line_start":836,"line_end":836,"column_start":5,"column_end":8}},{"value":"/ let input = \"ab\";","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pest-2.2.1\\src\\parser_state.rs","byte_start":104945,"byte_end":104966,"line_start":837,"line_end":837,"column_start":5,"column_end":26}},{"value":"/ let mut state: Box<pest::ParserState<Rule>> = pest::ParserState::new(input);","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pest-2.2.1\\src\\parser_state.rs","byte_start":104971,"byte_end":105051,"line_start":838,"line_end":838,"column_start":5,"column_end":85}},{"value":"/ let mut result = state.stack_push(|state| state.match_string(\"a\"));","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pest-2.2.1\\src\\parser_state.rs","byte_start":105056,"byte_end":105127,"line_start":839,"line_end":839,"column_start":5,"column_end":76}},{"value":"/ assert!(result.is_ok());","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pest-2.2.1\\src\\parser_state.rs","byte_start":105132,"byte_end":105160,"line_start":840,"line_end":840,"column_start":5,"column_end":33}},{"value":"/ assert_eq!(result.unwrap().position().pos(), 1);","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pest-2.2.1\\src\\parser_state.rs","byte_start":105165,"byte_end":105217,"line_start":841,"line_end":841,"column_start":5,"column_end":57}},{"value":"/ ```","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pest-2.2.1\\src\\parser_state.rs","byte_start":105222,"byte_end":105229,"line_start":842,"line_end":842,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pest-2.2.1\\src\\parser_state.rs","byte_start":105234,"byte_end":105243,"line_start":843,"line_end":843,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":519},"span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pest-2.2.1\\src\\parser_state.rs","byte_start":106473,"byte_end":106483,"line_start":882,"line_end":882,"column_start":12,"column_end":22},"name":"stack_peek","qualname":"<ParserState>::stack_peek","value":"pub fn stack_peek(Box<Self>) -> ParseResult<Box<Self>>","parent":null,"children":[],"decl_id":null,"docs":" Peeks the top of the stack and attempts to match the string. Returns `Ok(Box<ParserState>)`\n if the string is matched successfully, or `Err(Box<ParserState>)` otherwise.","sig":null,"attributes":[{"value":"/ Peeks the top of the stack and attempts to match the string. Returns `Ok(Box<ParserState>)`","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pest-2.2.1\\src\\parser_state.rs","byte_start":105704,"byte_end":105799,"line_start":862,"line_end":862,"column_start":5,"column_end":100}},{"value":"/ if the string is matched successfully, or `Err(Box<ParserState>)` otherwise.","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pest-2.2.1\\src\\parser_state.rs","byte_start":105804,"byte_end":105884,"line_start":863,"line_end":863,"column_start":5,"column_end":85}},{"value":"/","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pest-2.2.1\\src\\parser_state.rs","byte_start":105889,"byte_end":105892,"line_start":864,"line_end":864,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pest-2.2.1\\src\\parser_state.rs","byte_start":105897,"byte_end":105911,"line_start":865,"line_end":865,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pest-2.2.1\\src\\parser_state.rs","byte_start":105916,"byte_end":105919,"line_start":866,"line_end":866,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pest-2.2.1\\src\\parser_state.rs","byte_start":105924,"byte_end":105931,"line_start":867,"line_end":867,"column_start":5,"column_end":12}},{"value":"/ # use pest;","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pest-2.2.1\\src\\parser_state.rs","byte_start":105936,"byte_end":105951,"line_start":868,"line_end":868,"column_start":5,"column_end":20}},{"value":"/ # #[allow(non_camel_case_types)]","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pest-2.2.1\\src\\parser_state.rs","byte_start":105956,"byte_end":105992,"line_start":869,"line_end":869,"column_start":5,"column_end":41}},{"value":"/ # #[derive(Clone, Copy, Debug, Eq, Hash, Ord, PartialEq, PartialOrd)]","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pest-2.2.1\\src\\parser_state.rs","byte_start":105997,"byte_end":106070,"line_start":870,"line_end":870,"column_start":5,"column_end":78}},{"value":"/ enum Rule {}","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pest-2.2.1\\src\\parser_state.rs","byte_start":106075,"byte_end":106091,"line_start":871,"line_end":871,"column_start":5,"column_end":21}},{"value":"/","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pest-2.2.1\\src\\parser_state.rs","byte_start":106096,"byte_end":106099,"line_start":872,"line_end":872,"column_start":5,"column_end":8}},{"value":"/ let input = \"aa\";","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pest-2.2.1\\src\\parser_state.rs","byte_start":106104,"byte_end":106125,"line_start":873,"line_end":873,"column_start":5,"column_end":26}},{"value":"/ let mut state: Box<pest::ParserState<Rule>> = pest::ParserState::new(input);","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pest-2.2.1\\src\\parser_state.rs","byte_start":106130,"byte_end":106210,"line_start":874,"line_end":874,"column_start":5,"column_end":85}},{"value":"/ let mut result = state.stack_push(|state| state.match_string(\"a\")).and_then(","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pest-2.2.1\\src\\parser_state.rs","byte_start":106215,"byte_end":106295,"line_start":875,"line_end":875,"column_start":5,"column_end":85}},{"value":"/     |state| state.stack_peek()","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pest-2.2.1\\src\\parser_state.rs","byte_start":106300,"byte_end":106334,"line_start":876,"line_end":876,"column_start":5,"column_end":39}},{"value":"/ );","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pest-2.2.1\\src\\parser_state.rs","byte_start":106339,"byte_end":106345,"line_start":877,"line_end":877,"column_start":5,"column_end":11}},{"value":"/ assert!(result.is_ok());","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pest-2.2.1\\src\\parser_state.rs","byte_start":106350,"byte_end":106378,"line_start":878,"line_end":878,"column_start":5,"column_end":33}},{"value":"/ assert_eq!(result.unwrap().position().pos(), 2);","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pest-2.2.1\\src\\parser_state.rs","byte_start":106383,"byte_end":106435,"line_start":879,"line_end":879,"column_start":5,"column_end":57}},{"value":"/ ```","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pest-2.2.1\\src\\parser_state.rs","byte_start":106440,"byte_end":106447,"line_start":880,"line_end":880,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pest-2.2.1\\src\\parser_state.rs","byte_start":106452,"byte_end":106461,"line_start":881,"line_end":881,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":520},"span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pest-2.2.1\\src\\parser_state.rs","byte_start":107483,"byte_end":107492,"line_start":911,"line_end":911,"column_start":12,"column_end":21},"name":"stack_pop","qualname":"<ParserState>::stack_pop","value":"pub fn stack_pop(Box<Self>) -> ParseResult<Box<Self>>","parent":null,"children":[],"decl_id":null,"docs":" Pops the top of the stack and attempts to match the string. Returns `Ok(Box<ParserState>)`\n if the string is matched successfully, or `Err(Box<ParserState>)` otherwise.","sig":null,"attributes":[{"value":"/ Pops the top of the stack and attempts to match the string. Returns `Ok(Box<ParserState>)`","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pest-2.2.1\\src\\parser_state.rs","byte_start":106716,"byte_end":106810,"line_start":891,"line_end":891,"column_start":5,"column_end":99}},{"value":"/ if the string is matched successfully, or `Err(Box<ParserState>)` otherwise.","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pest-2.2.1\\src\\parser_state.rs","byte_start":106815,"byte_end":106895,"line_start":892,"line_end":892,"column_start":5,"column_end":85}},{"value":"/","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pest-2.2.1\\src\\parser_state.rs","byte_start":106900,"byte_end":106903,"line_start":893,"line_end":893,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pest-2.2.1\\src\\parser_state.rs","byte_start":106908,"byte_end":106922,"line_start":894,"line_end":894,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pest-2.2.1\\src\\parser_state.rs","byte_start":106927,"byte_end":106930,"line_start":895,"line_end":895,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pest-2.2.1\\src\\parser_state.rs","byte_start":106935,"byte_end":106942,"line_start":896,"line_end":896,"column_start":5,"column_end":12}},{"value":"/ # use pest;","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pest-2.2.1\\src\\parser_state.rs","byte_start":106947,"byte_end":106962,"line_start":897,"line_end":897,"column_start":5,"column_end":20}},{"value":"/ # #[allow(non_camel_case_types)]","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pest-2.2.1\\src\\parser_state.rs","byte_start":106967,"byte_end":107003,"line_start":898,"line_end":898,"column_start":5,"column_end":41}},{"value":"/ # #[derive(Clone, Copy, Debug, Eq, Hash, Ord, PartialEq, PartialOrd)]","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pest-2.2.1\\src\\parser_state.rs","byte_start":107008,"byte_end":107081,"line_start":899,"line_end":899,"column_start":5,"column_end":78}},{"value":"/ enum Rule {}","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pest-2.2.1\\src\\parser_state.rs","byte_start":107086,"byte_end":107102,"line_start":900,"line_end":900,"column_start":5,"column_end":21}},{"value":"/","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pest-2.2.1\\src\\parser_state.rs","byte_start":107107,"byte_end":107110,"line_start":901,"line_end":901,"column_start":5,"column_end":8}},{"value":"/ let input = \"aa\";","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pest-2.2.1\\src\\parser_state.rs","byte_start":107115,"byte_end":107136,"line_start":902,"line_end":902,"column_start":5,"column_end":26}},{"value":"/ let mut state: Box<pest::ParserState<Rule>> = pest::ParserState::new(input);","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pest-2.2.1\\src\\parser_state.rs","byte_start":107141,"byte_end":107221,"line_start":903,"line_end":903,"column_start":5,"column_end":85}},{"value":"/ let mut result = state.stack_push(|state| state.match_string(\"a\")).and_then(","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pest-2.2.1\\src\\parser_state.rs","byte_start":107226,"byte_end":107306,"line_start":904,"line_end":904,"column_start":5,"column_end":85}},{"value":"/     |state| state.stack_pop()","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pest-2.2.1\\src\\parser_state.rs","byte_start":107311,"byte_end":107344,"line_start":905,"line_end":905,"column_start":5,"column_end":38}},{"value":"/ );","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pest-2.2.1\\src\\parser_state.rs","byte_start":107349,"byte_end":107355,"line_start":906,"line_end":906,"column_start":5,"column_end":11}},{"value":"/ assert!(result.is_ok());","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pest-2.2.1\\src\\parser_state.rs","byte_start":107360,"byte_end":107388,"line_start":907,"line_end":907,"column_start":5,"column_end":33}},{"value":"/ assert_eq!(result.unwrap().position().pos(), 2);","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pest-2.2.1\\src\\parser_state.rs","byte_start":107393,"byte_end":107445,"line_start":908,"line_end":908,"column_start":5,"column_end":57}},{"value":"/ ```","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pest-2.2.1\\src\\parser_state.rs","byte_start":107450,"byte_end":107457,"line_start":909,"line_end":909,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pest-2.2.1\\src\\parser_state.rs","byte_start":107462,"byte_end":107471,"line_start":910,"line_end":910,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":521},"span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pest-2.2.1\\src\\parser_state.rs","byte_start":108881,"byte_end":108903,"line_start":945,"line_end":945,"column_start":12,"column_end":34},"name":"stack_match_peek_slice","qualname":"<ParserState>::stack_match_peek_slice","value":"pub fn stack_match_peek_slice(Box<Self>, i32, Option<i32>, MatchDir)\n-> ParseResult<Box<Self>>","parent":null,"children":[],"decl_id":null,"docs":" Matches part of the state of the stack.","sig":null,"attributes":[{"value":"/ Matches part of the state of the stack.","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pest-2.2.1\\src\\parser_state.rs","byte_start":107727,"byte_end":107770,"line_start":920,"line_end":920,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pest-2.2.1\\src\\parser_state.rs","byte_start":107775,"byte_end":107778,"line_start":921,"line_end":921,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pest-2.2.1\\src\\parser_state.rs","byte_start":107783,"byte_end":107797,"line_start":922,"line_end":922,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pest-2.2.1\\src\\parser_state.rs","byte_start":107802,"byte_end":107805,"line_start":923,"line_end":923,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pest-2.2.1\\src\\parser_state.rs","byte_start":107810,"byte_end":107817,"line_start":924,"line_end":924,"column_start":5,"column_end":12}},{"value":"/ # use pest::{self, MatchDir};","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pest-2.2.1\\src\\parser_state.rs","byte_start":107822,"byte_end":107855,"line_start":925,"line_end":925,"column_start":5,"column_end":38}},{"value":"/ # #[allow(non_camel_case_types)]","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pest-2.2.1\\src\\parser_state.rs","byte_start":107860,"byte_end":107896,"line_start":926,"line_end":926,"column_start":5,"column_end":41}},{"value":"/ # #[derive(Clone, Copy, Debug, Eq, Hash, Ord, PartialEq, PartialOrd)]","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pest-2.2.1\\src\\parser_state.rs","byte_start":107901,"byte_end":107974,"line_start":927,"line_end":927,"column_start":5,"column_end":78}},{"value":"/ enum Rule {}","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pest-2.2.1\\src\\parser_state.rs","byte_start":107979,"byte_end":107995,"line_start":928,"line_end":928,"column_start":5,"column_end":21}},{"value":"/","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pest-2.2.1\\src\\parser_state.rs","byte_start":108000,"byte_end":108003,"line_start":929,"line_end":929,"column_start":5,"column_end":8}},{"value":"/ let input = \"abcd cd cb\";","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pest-2.2.1\\src\\parser_state.rs","byte_start":108008,"byte_end":108037,"line_start":930,"line_end":930,"column_start":5,"column_end":34}},{"value":"/ let mut state: Box<pest::ParserState<Rule>> = pest::ParserState::new(input);","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pest-2.2.1\\src\\parser_state.rs","byte_start":108042,"byte_end":108122,"line_start":931,"line_end":931,"column_start":5,"column_end":85}},{"value":"/ let mut result = state","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pest-2.2.1\\src\\parser_state.rs","byte_start":108127,"byte_end":108153,"line_start":932,"line_end":932,"column_start":5,"column_end":31}},{"value":"/     .stack_push(|state| state.match_string(\"a\"))","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pest-2.2.1\\src\\parser_state.rs","byte_start":108158,"byte_end":108210,"line_start":933,"line_end":933,"column_start":5,"column_end":57}},{"value":"/     .and_then(|state| state.stack_push(|state| state.match_string(\"b\")))","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pest-2.2.1\\src\\parser_state.rs","byte_start":108215,"byte_end":108291,"line_start":934,"line_end":934,"column_start":5,"column_end":81}},{"value":"/     .and_then(|state| state.stack_push(|state| state.match_string(\"c\")))","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pest-2.2.1\\src\\parser_state.rs","byte_start":108296,"byte_end":108372,"line_start":935,"line_end":935,"column_start":5,"column_end":81}},{"value":"/     .and_then(|state| state.stack_push(|state| state.match_string(\"d\")))","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pest-2.2.1\\src\\parser_state.rs","byte_start":108377,"byte_end":108453,"line_start":936,"line_end":936,"column_start":5,"column_end":81}},{"value":"/     .and_then(|state| state.match_string(\" \"))","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pest-2.2.1\\src\\parser_state.rs","byte_start":108458,"byte_end":108508,"line_start":937,"line_end":937,"column_start":5,"column_end":55}},{"value":"/     .and_then(|state| state.stack_match_peek_slice(2, None, MatchDir::BottomToTop))","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pest-2.2.1\\src\\parser_state.rs","byte_start":108513,"byte_end":108600,"line_start":938,"line_end":938,"column_start":5,"column_end":92}},{"value":"/     .and_then(|state| state.match_string(\" \"))","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pest-2.2.1\\src\\parser_state.rs","byte_start":108605,"byte_end":108655,"line_start":939,"line_end":939,"column_start":5,"column_end":55}},{"value":"/     .and_then(|state| state.stack_match_peek_slice(1, Some(-1), MatchDir::TopToBottom));","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pest-2.2.1\\src\\parser_state.rs","byte_start":108660,"byte_end":108752,"line_start":940,"line_end":940,"column_start":5,"column_end":97}},{"value":"/ assert!(result.is_ok());","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pest-2.2.1\\src\\parser_state.rs","byte_start":108757,"byte_end":108785,"line_start":941,"line_end":941,"column_start":5,"column_end":33}},{"value":"/ assert_eq!(result.unwrap().position().pos(), 10);","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pest-2.2.1\\src\\parser_state.rs","byte_start":108790,"byte_end":108843,"line_start":942,"line_end":942,"column_start":5,"column_end":58}},{"value":"/ ```","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pest-2.2.1\\src\\parser_state.rs","byte_start":108848,"byte_end":108855,"line_start":943,"line_end":943,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pest-2.2.1\\src\\parser_state.rs","byte_start":108860,"byte_end":108869,"line_start":944,"line_end":944,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":523},"span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pest-2.2.1\\src\\parser_state.rs","byte_start":110580,"byte_end":110596,"line_start":997,"line_end":997,"column_start":12,"column_end":28},"name":"stack_match_peek","qualname":"<ParserState>::stack_match_peek","value":"pub fn stack_match_peek(Box<Self>) -> ParseResult<Box<Self>>","parent":null,"children":[],"decl_id":null,"docs":" Matches the full state of the stack.","sig":null,"attributes":[{"value":"/ Matches the full state of the stack.","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pest-2.2.1\\src\\parser_state.rs","byte_start":109854,"byte_end":109894,"line_start":977,"line_end":977,"column_start":5,"column_end":45}},{"value":"/","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pest-2.2.1\\src\\parser_state.rs","byte_start":109899,"byte_end":109902,"line_start":978,"line_end":978,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pest-2.2.1\\src\\parser_state.rs","byte_start":109907,"byte_end":109921,"line_start":979,"line_end":979,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pest-2.2.1\\src\\parser_state.rs","byte_start":109926,"byte_end":109929,"line_start":980,"line_end":980,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pest-2.2.1\\src\\parser_state.rs","byte_start":109934,"byte_end":109941,"line_start":981,"line_end":981,"column_start":5,"column_end":12}},{"value":"/ # use pest;","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pest-2.2.1\\src\\parser_state.rs","byte_start":109946,"byte_end":109961,"line_start":982,"line_end":982,"column_start":5,"column_end":20}},{"value":"/ # #[allow(non_camel_case_types)]","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pest-2.2.1\\src\\parser_state.rs","byte_start":109966,"byte_end":110002,"line_start":983,"line_end":983,"column_start":5,"column_end":41}},{"value":"/ # #[derive(Clone, Copy, Debug, Eq, Hash, Ord, PartialEq, PartialOrd)]","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pest-2.2.1\\src\\parser_state.rs","byte_start":110007,"byte_end":110080,"line_start":984,"line_end":984,"column_start":5,"column_end":78}},{"value":"/ enum Rule {}","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pest-2.2.1\\src\\parser_state.rs","byte_start":110085,"byte_end":110101,"line_start":985,"line_end":985,"column_start":5,"column_end":21}},{"value":"/","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pest-2.2.1\\src\\parser_state.rs","byte_start":110106,"byte_end":110109,"line_start":986,"line_end":986,"column_start":5,"column_end":8}},{"value":"/ let input = \"abba\";","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pest-2.2.1\\src\\parser_state.rs","byte_start":110114,"byte_end":110137,"line_start":987,"line_end":987,"column_start":5,"column_end":28}},{"value":"/ let mut state: Box<pest::ParserState<Rule>> = pest::ParserState::new(input);","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pest-2.2.1\\src\\parser_state.rs","byte_start":110142,"byte_end":110222,"line_start":988,"line_end":988,"column_start":5,"column_end":85}},{"value":"/ let mut result = state","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pest-2.2.1\\src\\parser_state.rs","byte_start":110227,"byte_end":110253,"line_start":989,"line_end":989,"column_start":5,"column_end":31}},{"value":"/     .stack_push(|state| state.match_string(\"a\"))","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pest-2.2.1\\src\\parser_state.rs","byte_start":110258,"byte_end":110310,"line_start":990,"line_end":990,"column_start":5,"column_end":57}},{"value":"/     .and_then(|state| { state.stack_push(|state| state.match_string(\"b\")) })","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pest-2.2.1\\src\\parser_state.rs","byte_start":110315,"byte_end":110395,"line_start":991,"line_end":991,"column_start":5,"column_end":85}},{"value":"/     .and_then(|state| state.stack_match_peek());","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pest-2.2.1\\src\\parser_state.rs","byte_start":110400,"byte_end":110452,"line_start":992,"line_end":992,"column_start":5,"column_end":57}},{"value":"/ assert!(result.is_ok());","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pest-2.2.1\\src\\parser_state.rs","byte_start":110457,"byte_end":110485,"line_start":993,"line_end":993,"column_start":5,"column_end":33}},{"value":"/ assert_eq!(result.unwrap().position().pos(), 4);","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pest-2.2.1\\src\\parser_state.rs","byte_start":110490,"byte_end":110542,"line_start":994,"line_end":994,"column_start":5,"column_end":57}},{"value":"/ ```","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pest-2.2.1\\src\\parser_state.rs","byte_start":110547,"byte_end":110554,"line_start":995,"line_end":995,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pest-2.2.1\\src\\parser_state.rs","byte_start":110559,"byte_end":110568,"line_start":996,"line_end":996,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":524},"span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pest-2.2.1\\src\\parser_state.rs","byte_start":111482,"byte_end":111497,"line_start":1020,"line_end":1020,"column_start":12,"column_end":27},"name":"stack_match_pop","qualname":"<ParserState>::stack_match_pop","value":"pub fn stack_match_pop(Box<Self>) -> ParseResult<Box<Self>>","parent":null,"children":[],"decl_id":null,"docs":" Matches the full state of the stack. This method will clear the stack as it evaluates.","sig":null,"attributes":[{"value":"/ Matches the full state of the stack. This method will clear the stack as it evaluates.","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pest-2.2.1\\src\\parser_state.rs","byte_start":110721,"byte_end":110811,"line_start":1001,"line_end":1001,"column_start":5,"column_end":95}},{"value":"/","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pest-2.2.1\\src\\parser_state.rs","byte_start":110816,"byte_end":110819,"line_start":1002,"line_end":1002,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pest-2.2.1\\src\\parser_state.rs","byte_start":110824,"byte_end":110838,"line_start":1003,"line_end":1003,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pest-2.2.1\\src\\parser_state.rs","byte_start":110843,"byte_end":110846,"line_start":1004,"line_end":1004,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pest-2.2.1\\src\\parser_state.rs","byte_start":110851,"byte_end":110858,"line_start":1005,"line_end":1005,"column_start":5,"column_end":12}},{"value":"/ /// # use pest;","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pest-2.2.1\\src\\parser_state.rs","byte_start":110863,"byte_end":110882,"line_start":1006,"line_end":1006,"column_start":5,"column_end":24}},{"value":"/ # #[allow(non_camel_case_types)]","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pest-2.2.1\\src\\parser_state.rs","byte_start":110887,"byte_end":110923,"line_start":1007,"line_end":1007,"column_start":5,"column_end":41}},{"value":"/ # #[derive(Clone, Copy, Debug, Eq, Hash, Ord, PartialEq, PartialOrd)]","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pest-2.2.1\\src\\parser_state.rs","byte_start":110928,"byte_end":111001,"line_start":1008,"line_end":1008,"column_start":5,"column_end":78}},{"value":"/ enum Rule {}","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pest-2.2.1\\src\\parser_state.rs","byte_start":111006,"byte_end":111022,"line_start":1009,"line_end":1009,"column_start":5,"column_end":21}},{"value":"/","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pest-2.2.1\\src\\parser_state.rs","byte_start":111027,"byte_end":111030,"line_start":1010,"line_end":1010,"column_start":5,"column_end":8}},{"value":"/ let input = \"aaaa\";","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pest-2.2.1\\src\\parser_state.rs","byte_start":111035,"byte_end":111058,"line_start":1011,"line_end":1011,"column_start":5,"column_end":28}},{"value":"/ let mut state: Box<pest::ParserState<Rule>> = pest::ParserState::new(input);","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pest-2.2.1\\src\\parser_state.rs","byte_start":111063,"byte_end":111143,"line_start":1012,"line_end":1012,"column_start":5,"column_end":85}},{"value":"/ let mut result = state.stack_push(|state| state.match_string(\"a\")).and_then(|state| {","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pest-2.2.1\\src\\parser_state.rs","byte_start":111148,"byte_end":111237,"line_start":1013,"line_end":1013,"column_start":5,"column_end":94}},{"value":"/     state.stack_push(|state| state.match_string(\"a\"))","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pest-2.2.1\\src\\parser_state.rs","byte_start":111242,"byte_end":111299,"line_start":1014,"line_end":1014,"column_start":5,"column_end":62}},{"value":"/ }).and_then(|state| state.stack_match_peek());","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pest-2.2.1\\src\\parser_state.rs","byte_start":111304,"byte_end":111354,"line_start":1015,"line_end":1015,"column_start":5,"column_end":55}},{"value":"/ assert!(result.is_ok());","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pest-2.2.1\\src\\parser_state.rs","byte_start":111359,"byte_end":111387,"line_start":1016,"line_end":1016,"column_start":5,"column_end":33}},{"value":"/ assert_eq!(result.unwrap().position().pos(), 4);","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pest-2.2.1\\src\\parser_state.rs","byte_start":111392,"byte_end":111444,"line_start":1017,"line_end":1017,"column_start":5,"column_end":57}},{"value":"/ ```","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pest-2.2.1\\src\\parser_state.rs","byte_start":111449,"byte_end":111456,"line_start":1018,"line_end":1018,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pest-2.2.1\\src\\parser_state.rs","byte_start":111461,"byte_end":111470,"line_start":1019,"line_end":1019,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":525},"span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pest-2.2.1\\src\\parser_state.rs","byte_start":112668,"byte_end":112678,"line_start":1058,"line_end":1058,"column_start":12,"column_end":22},"name":"stack_drop","qualname":"<ParserState>::stack_drop","value":"pub fn stack_drop(Box<Self>) -> ParseResult<Box<Self>>","parent":null,"children":[],"decl_id":null,"docs":" Drops the top of the stack. Returns `Ok(Box<ParserState>)` if there was a value to drop, or\n `Err(Box<ParserState>)` otherwise.","sig":null,"attributes":[{"value":"/ Drops the top of the stack. Returns `Ok(Box<ParserState>)` if there was a value to drop, or","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pest-2.2.1\\src\\parser_state.rs","byte_start":111941,"byte_end":112036,"line_start":1038,"line_end":1038,"column_start":5,"column_end":100}},{"value":"/ `Err(Box<ParserState>)` otherwise.","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pest-2.2.1\\src\\parser_state.rs","byte_start":112041,"byte_end":112079,"line_start":1039,"line_end":1039,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pest-2.2.1\\src\\parser_state.rs","byte_start":112084,"byte_end":112087,"line_start":1040,"line_end":1040,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pest-2.2.1\\src\\parser_state.rs","byte_start":112092,"byte_end":112106,"line_start":1041,"line_end":1041,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pest-2.2.1\\src\\parser_state.rs","byte_start":112111,"byte_end":112114,"line_start":1042,"line_end":1042,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pest-2.2.1\\src\\parser_state.rs","byte_start":112119,"byte_end":112126,"line_start":1043,"line_end":1043,"column_start":5,"column_end":12}},{"value":"/ # use pest;","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pest-2.2.1\\src\\parser_state.rs","byte_start":112131,"byte_end":112146,"line_start":1044,"line_end":1044,"column_start":5,"column_end":20}},{"value":"/ # #[allow(non_camel_case_types)]","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pest-2.2.1\\src\\parser_state.rs","byte_start":112151,"byte_end":112187,"line_start":1045,"line_end":1045,"column_start":5,"column_end":41}},{"value":"/ # #[derive(Clone, Copy, Debug, Eq, Hash, Ord, PartialEq, PartialOrd)]","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pest-2.2.1\\src\\parser_state.rs","byte_start":112192,"byte_end":112265,"line_start":1046,"line_end":1046,"column_start":5,"column_end":78}},{"value":"/ enum Rule {}","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pest-2.2.1\\src\\parser_state.rs","byte_start":112270,"byte_end":112286,"line_start":1047,"line_end":1047,"column_start":5,"column_end":21}},{"value":"/","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pest-2.2.1\\src\\parser_state.rs","byte_start":112291,"byte_end":112294,"line_start":1048,"line_end":1048,"column_start":5,"column_end":8}},{"value":"/ let input = \"aa\";","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pest-2.2.1\\src\\parser_state.rs","byte_start":112299,"byte_end":112320,"line_start":1049,"line_end":1049,"column_start":5,"column_end":26}},{"value":"/ let mut state: Box<pest::ParserState<Rule>> = pest::ParserState::new(input);","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pest-2.2.1\\src\\parser_state.rs","byte_start":112325,"byte_end":112405,"line_start":1050,"line_end":1050,"column_start":5,"column_end":85}},{"value":"/ let mut result = state.stack_push(|state| state.match_string(\"a\")).and_then(","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pest-2.2.1\\src\\parser_state.rs","byte_start":112410,"byte_end":112490,"line_start":1051,"line_end":1051,"column_start":5,"column_end":85}},{"value":"/     |state| state.stack_drop()","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pest-2.2.1\\src\\parser_state.rs","byte_start":112495,"byte_end":112529,"line_start":1052,"line_end":1052,"column_start":5,"column_end":39}},{"value":"/ );","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pest-2.2.1\\src\\parser_state.rs","byte_start":112534,"byte_end":112540,"line_start":1053,"line_end":1053,"column_start":5,"column_end":11}},{"value":"/ assert!(result.is_ok());","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pest-2.2.1\\src\\parser_state.rs","byte_start":112545,"byte_end":112573,"line_start":1054,"line_end":1054,"column_start":5,"column_end":33}},{"value":"/ assert_eq!(result.unwrap().position().pos(), 1);","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pest-2.2.1\\src\\parser_state.rs","byte_start":112578,"byte_end":112630,"line_start":1055,"line_end":1055,"column_start":5,"column_end":57}},{"value":"/ ```","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pest-2.2.1\\src\\parser_state.rs","byte_start":112635,"byte_end":112642,"line_start":1056,"line_end":1056,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pest-2.2.1\\src\\parser_state.rs","byte_start":112647,"byte_end":112656,"line_start":1057,"line_end":1057,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":526},"span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pest-2.2.1\\src\\parser_state.rs","byte_start":113781,"byte_end":113795,"line_start":1089,"line_end":1089,"column_start":12,"column_end":26},"name":"restore_on_err","qualname":"<ParserState>::restore_on_err","value":"pub fn restore_on_err<F>(Box<Self>, F) -> ParseResult<Box<Self>> where\nF: FnOnce(Box<Self>) -> ParseResult<Box<Self>>","parent":null,"children":[],"decl_id":null,"docs":" Restores the original state of the `ParserState` when `f` returns an `Err`. Currently,\n this method only restores the stack.","sig":null,"attributes":[{"value":"/ Restores the original state of the `ParserState` when `f` returns an `Err`. Currently,","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pest-2.2.1\\src\\parser_state.rs","byte_start":112846,"byte_end":112936,"line_start":1065,"line_end":1065,"column_start":5,"column_end":95}},{"value":"/ this method only restores the stack.","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pest-2.2.1\\src\\parser_state.rs","byte_start":112941,"byte_end":112981,"line_start":1066,"line_end":1066,"column_start":5,"column_end":45}},{"value":"/","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pest-2.2.1\\src\\parser_state.rs","byte_start":112986,"byte_end":112989,"line_start":1067,"line_end":1067,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pest-2.2.1\\src\\parser_state.rs","byte_start":112994,"byte_end":113008,"line_start":1068,"line_end":1068,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pest-2.2.1\\src\\parser_state.rs","byte_start":113013,"byte_end":113016,"line_start":1069,"line_end":1069,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pest-2.2.1\\src\\parser_state.rs","byte_start":113021,"byte_end":113028,"line_start":1070,"line_end":1070,"column_start":5,"column_end":12}},{"value":"/ # use pest;","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pest-2.2.1\\src\\parser_state.rs","byte_start":113033,"byte_end":113048,"line_start":1071,"line_end":1071,"column_start":5,"column_end":20}},{"value":"/ # #[allow(non_camel_case_types)]","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pest-2.2.1\\src\\parser_state.rs","byte_start":113053,"byte_end":113089,"line_start":1072,"line_end":1072,"column_start":5,"column_end":41}},{"value":"/ # #[derive(Clone, Copy, Debug, Eq, Hash, Ord, PartialEq, PartialOrd)]","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pest-2.2.1\\src\\parser_state.rs","byte_start":113094,"byte_end":113167,"line_start":1073,"line_end":1073,"column_start":5,"column_end":78}},{"value":"/ enum Rule {}","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pest-2.2.1\\src\\parser_state.rs","byte_start":113172,"byte_end":113188,"line_start":1074,"line_end":1074,"column_start":5,"column_end":21}},{"value":"/","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pest-2.2.1\\src\\parser_state.rs","byte_start":113193,"byte_end":113196,"line_start":1075,"line_end":1075,"column_start":5,"column_end":8}},{"value":"/ let input = \"ab\";","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pest-2.2.1\\src\\parser_state.rs","byte_start":113201,"byte_end":113222,"line_start":1076,"line_end":1076,"column_start":5,"column_end":26}},{"value":"/ let mut state: Box<pest::ParserState<Rule>> = pest::ParserState::new(input);","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pest-2.2.1\\src\\parser_state.rs","byte_start":113227,"byte_end":113307,"line_start":1077,"line_end":1077,"column_start":5,"column_end":85}},{"value":"/ let mut result = state.restore_on_err(|state| state.stack_push(|state|","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pest-2.2.1\\src\\parser_state.rs","byte_start":113312,"byte_end":113386,"line_start":1078,"line_end":1078,"column_start":5,"column_end":79}},{"value":"/     state.match_string(\"a\")).and_then(|state| state.match_string(\"a\"))","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pest-2.2.1\\src\\parser_state.rs","byte_start":113391,"byte_end":113465,"line_start":1079,"line_end":1079,"column_start":5,"column_end":79}},{"value":"/ );","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pest-2.2.1\\src\\parser_state.rs","byte_start":113470,"byte_end":113476,"line_start":1080,"line_end":1080,"column_start":5,"column_end":11}},{"value":"/","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pest-2.2.1\\src\\parser_state.rs","byte_start":113481,"byte_end":113484,"line_start":1081,"line_end":1081,"column_start":5,"column_end":8}},{"value":"/ assert!(result.is_err());","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pest-2.2.1\\src\\parser_state.rs","byte_start":113489,"byte_end":113518,"line_start":1082,"line_end":1082,"column_start":5,"column_end":34}},{"value":"/","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pest-2.2.1\\src\\parser_state.rs","byte_start":113523,"byte_end":113526,"line_start":1083,"line_end":1083,"column_start":5,"column_end":8}},{"value":"/ // Since the the rule doesn't match, the \"a\" pushed to the stack will be removed.","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pest-2.2.1\\src\\parser_state.rs","byte_start":113531,"byte_end":113616,"line_start":1084,"line_end":1084,"column_start":5,"column_end":90}},{"value":"/ let catch_panic = std::panic::catch_unwind(|| result.unwrap_err().stack_pop());","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pest-2.2.1\\src\\parser_state.rs","byte_start":113621,"byte_end":113704,"line_start":1085,"line_end":1085,"column_start":5,"column_end":88}},{"value":"/ assert!(catch_panic.is_err());","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pest-2.2.1\\src\\parser_state.rs","byte_start":113709,"byte_end":113743,"line_start":1086,"line_end":1086,"column_start":5,"column_end":39}},{"value":"/ ```","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pest-2.2.1\\src\\parser_state.rs","byte_start":113748,"byte_end":113755,"line_start":1087,"line_end":1087,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pest-2.2.1\\src\\parser_state.rs","byte_start":113760,"byte_end":113769,"line_start":1088,"line_end":1088,"column_start":5,"column_end":14}}]},{"kind":"Struct","id":{"krate":0,"index":975},"span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pest-2.2.1\\src\\position.rs","byte_start":116494,"byte_end":116502,"line_start":21,"line_end":21,"column_start":12,"column_end":20},"name":"Position","qualname":"::position::Position","value":"Position {  }","parent":null,"children":[{"krate":0,"index":977},{"krate":0,"index":978}],"decl_id":null,"docs":" A cursor position in a `&str` which provides useful methods to manually parse that string.\n","sig":null,"attributes":[{"value":"/ A cursor position in a `&str` which provides useful methods to manually parse that string.","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pest-2.2.1\\src\\position.rs","byte_start":116365,"byte_end":116459,"line_start":19,"line_end":19,"column_start":1,"column_end":95}}]},{"kind":"Method","id":{"krate":0,"index":563},"span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pest-2.2.1\\src\\position.rs","byte_start":117566,"byte_end":117569,"line_start":52,"line_end":52,"column_start":12,"column_end":15},"name":"new","qualname":"<Position>::new","value":"pub fn new(&str, usize) -> Option<Position>","parent":null,"children":[],"decl_id":null,"docs":" Attempts to create a new `Position` at the given position. If the specified position is\n an invalid index, or the specified position is not a valid UTF8 boundary, then None is\n returned.","sig":null,"attributes":[{"value":"/ Attempts to create a new `Position` at the given position. If the specified position is","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pest-2.2.1\\src\\position.rs","byte_start":117094,"byte_end":117185,"line_start":40,"line_end":40,"column_start":5,"column_end":96}},{"value":"/ an invalid index, or the specified position is not a valid UTF8 boundary, then None is","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pest-2.2.1\\src\\position.rs","byte_start":117190,"byte_end":117280,"line_start":41,"line_end":41,"column_start":5,"column_end":95}},{"value":"/ returned.","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pest-2.2.1\\src\\position.rs","byte_start":117285,"byte_end":117298,"line_start":42,"line_end":42,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pest-2.2.1\\src\\position.rs","byte_start":117303,"byte_end":117306,"line_start":43,"line_end":43,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pest-2.2.1\\src\\position.rs","byte_start":117311,"byte_end":117325,"line_start":44,"line_end":44,"column_start":5,"column_end":19}},{"value":"/ ```","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pest-2.2.1\\src\\position.rs","byte_start":117330,"byte_end":117337,"line_start":45,"line_end":45,"column_start":5,"column_end":12}},{"value":"/ # use pest::Position;","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pest-2.2.1\\src\\position.rs","byte_start":117342,"byte_end":117367,"line_start":46,"line_end":46,"column_start":5,"column_end":30}},{"value":"/ let cheart = '💖';","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pest-2.2.1\\src\\position.rs","byte_start":117372,"byte_end":117396,"line_start":47,"line_end":47,"column_start":5,"column_end":26}},{"value":"/ let heart = \"💖\";","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pest-2.2.1\\src\\position.rs","byte_start":117401,"byte_end":117424,"line_start":48,"line_end":48,"column_start":5,"column_end":25}},{"value":"/ assert_eq!(Position::new(heart, 1), None);","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pest-2.2.1\\src\\position.rs","byte_start":117429,"byte_end":117475,"line_start":49,"line_end":49,"column_start":5,"column_end":51}},{"value":"/ assert_ne!(Position::new(heart, cheart.len_utf8()), None);","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pest-2.2.1\\src\\position.rs","byte_start":117480,"byte_end":117542,"line_start":50,"line_end":50,"column_start":5,"column_end":67}},{"value":"/ ```","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pest-2.2.1\\src\\position.rs","byte_start":117547,"byte_end":117554,"line_start":51,"line_end":51,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":565},"span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pest-2.2.1\\src\\position.rs","byte_start":117933,"byte_end":117943,"line_start":66,"line_end":66,"column_start":12,"column_end":22},"name":"from_start","qualname":"<Position>::from_start","value":"pub fn from_start(&'i str) -> Position","parent":null,"children":[],"decl_id":null,"docs":" Creates a `Position` at the start of a `&str`.","sig":null,"attributes":[{"value":"/ Creates a `Position` at the start of a `&str`.","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pest-2.2.1\\src\\position.rs","byte_start":117686,"byte_end":117736,"line_start":56,"line_end":56,"column_start":5,"column_end":55}},{"value":"/","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pest-2.2.1\\src\\position.rs","byte_start":117741,"byte_end":117744,"line_start":57,"line_end":57,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pest-2.2.1\\src\\position.rs","byte_start":117749,"byte_end":117763,"line_start":58,"line_end":58,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pest-2.2.1\\src\\position.rs","byte_start":117768,"byte_end":117771,"line_start":59,"line_end":59,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pest-2.2.1\\src\\position.rs","byte_start":117776,"byte_end":117783,"line_start":60,"line_end":60,"column_start":5,"column_end":12}},{"value":"/ # use pest::Position;","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pest-2.2.1\\src\\position.rs","byte_start":117788,"byte_end":117813,"line_start":61,"line_end":61,"column_start":5,"column_end":30}},{"value":"/ let start = Position::from_start(\"\");","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pest-2.2.1\\src\\position.rs","byte_start":117818,"byte_end":117859,"line_start":62,"line_end":62,"column_start":5,"column_end":46}},{"value":"/ assert_eq!(start.pos(), 0);","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pest-2.2.1\\src\\position.rs","byte_start":117864,"byte_end":117895,"line_start":63,"line_end":63,"column_start":5,"column_end":36}},{"value":"/ ```","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pest-2.2.1\\src\\position.rs","byte_start":117900,"byte_end":117907,"line_start":64,"line_end":64,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pest-2.2.1\\src\\position.rs","byte_start":117912,"byte_end":117921,"line_start":65,"line_end":65,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":566},"span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pest-2.2.1\\src\\position.rs","byte_start":118403,"byte_end":118406,"line_start":83,"line_end":83,"column_start":12,"column_end":15},"name":"pos","qualname":"<Position>::pos","value":"pub fn pos(&Self) -> usize","parent":null,"children":[],"decl_id":null,"docs":" Returns the byte position of this `Position` as a `usize`.","sig":null,"attributes":[{"value":"/ Returns the byte position of this `Position` as a `usize`.","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pest-2.2.1\\src\\position.rs","byte_start":118103,"byte_end":118165,"line_start":71,"line_end":71,"column_start":5,"column_end":67}},{"value":"/","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pest-2.2.1\\src\\position.rs","byte_start":118170,"byte_end":118173,"line_start":72,"line_end":72,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pest-2.2.1\\src\\position.rs","byte_start":118178,"byte_end":118192,"line_start":73,"line_end":73,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pest-2.2.1\\src\\position.rs","byte_start":118197,"byte_end":118200,"line_start":74,"line_end":74,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pest-2.2.1\\src\\position.rs","byte_start":118205,"byte_end":118212,"line_start":75,"line_end":75,"column_start":5,"column_end":12}},{"value":"/ # use pest::Position;","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pest-2.2.1\\src\\position.rs","byte_start":118217,"byte_end":118242,"line_start":76,"line_end":76,"column_start":5,"column_end":30}},{"value":"/ let input = \"ab\";","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pest-2.2.1\\src\\position.rs","byte_start":118247,"byte_end":118268,"line_start":77,"line_end":77,"column_start":5,"column_end":26}},{"value":"/ let mut start = Position::from_start(input);","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pest-2.2.1\\src\\position.rs","byte_start":118273,"byte_end":118321,"line_start":78,"line_end":78,"column_start":5,"column_end":53}},{"value":"/","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pest-2.2.1\\src\\position.rs","byte_start":118326,"byte_end":118329,"line_start":79,"line_end":79,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(start.pos(), 0);","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pest-2.2.1\\src\\position.rs","byte_start":118334,"byte_end":118365,"line_start":80,"line_end":80,"column_start":5,"column_end":36}},{"value":"/ ```","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pest-2.2.1\\src\\position.rs","byte_start":118370,"byte_end":118377,"line_start":81,"line_end":81,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pest-2.2.1\\src\\position.rs","byte_start":118382,"byte_end":118391,"line_start":82,"line_end":82,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":567},"span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pest-2.2.1\\src\\position.rs","byte_start":118905,"byte_end":118909,"line_start":105,"line_end":105,"column_start":12,"column_end":16},"name":"span","qualname":"<Position>::span","value":"pub fn span(&Self, &Position) -> span::Span","parent":null,"children":[],"decl_id":null,"docs":" Creates a `Span` from two `Position`s.","sig":null,"attributes":[{"value":"/ Creates a `Span` from two `Position`s.","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pest-2.2.1\\src\\position.rs","byte_start":118453,"byte_end":118495,"line_start":87,"line_end":87,"column_start":5,"column_end":47}},{"value":"/","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pest-2.2.1\\src\\position.rs","byte_start":118500,"byte_end":118503,"line_start":88,"line_end":88,"column_start":5,"column_end":8}},{"value":"/ # Panics","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pest-2.2.1\\src\\position.rs","byte_start":118508,"byte_end":118520,"line_start":89,"line_end":89,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pest-2.2.1\\src\\position.rs","byte_start":118525,"byte_end":118528,"line_start":90,"line_end":90,"column_start":5,"column_end":8}},{"value":"/ Panics if the positions come from different inputs.","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pest-2.2.1\\src\\position.rs","byte_start":118533,"byte_end":118588,"line_start":91,"line_end":91,"column_start":5,"column_end":60}},{"value":"/","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pest-2.2.1\\src\\position.rs","byte_start":118593,"byte_end":118596,"line_start":92,"line_end":92,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pest-2.2.1\\src\\position.rs","byte_start":118601,"byte_end":118615,"line_start":93,"line_end":93,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pest-2.2.1\\src\\position.rs","byte_start":118620,"byte_end":118623,"line_start":94,"line_end":94,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pest-2.2.1\\src\\position.rs","byte_start":118628,"byte_end":118635,"line_start":95,"line_end":95,"column_start":5,"column_end":12}},{"value":"/ # use pest::Position;","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pest-2.2.1\\src\\position.rs","byte_start":118640,"byte_end":118665,"line_start":96,"line_end":96,"column_start":5,"column_end":30}},{"value":"/ let input = \"ab\";","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pest-2.2.1\\src\\position.rs","byte_start":118670,"byte_end":118691,"line_start":97,"line_end":97,"column_start":5,"column_end":26}},{"value":"/ let start = Position::from_start(input);","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pest-2.2.1\\src\\position.rs","byte_start":118696,"byte_end":118740,"line_start":98,"line_end":98,"column_start":5,"column_end":49}},{"value":"/ let span = start.span(&start.clone());","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pest-2.2.1\\src\\position.rs","byte_start":118745,"byte_end":118787,"line_start":99,"line_end":99,"column_start":5,"column_end":47}},{"value":"/","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pest-2.2.1\\src\\position.rs","byte_start":118792,"byte_end":118795,"line_start":100,"line_end":100,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(span.start(), 0);","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pest-2.2.1\\src\\position.rs","byte_start":118800,"byte_end":118832,"line_start":101,"line_end":101,"column_start":5,"column_end":37}},{"value":"/ assert_eq!(span.end(), 0);","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pest-2.2.1\\src\\position.rs","byte_start":118837,"byte_end":118867,"line_start":102,"line_end":102,"column_start":5,"column_end":35}},{"value":"/ ```","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pest-2.2.1\\src\\position.rs","byte_start":118872,"byte_end":118879,"line_start":103,"line_end":103,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pest-2.2.1\\src\\position.rs","byte_start":118884,"byte_end":118893,"line_start":104,"line_end":104,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":568},"span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pest-2.2.1\\src\\position.rs","byte_start":120002,"byte_end":120010,"line_start":134,"line_end":134,"column_start":12,"column_end":20},"name":"line_col","qualname":"<Position>::line_col","value":"pub fn line_col(&Self) -> (usize, usize)","parent":null,"children":[],"decl_id":null,"docs":" Returns the line and column number of this `Position`.","sig":null,"attributes":[{"value":"/ Returns the line and column number of this `Position`.","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pest-2.2.1\\src\\position.rs","byte_start":119427,"byte_end":119485,"line_start":117,"line_end":117,"column_start":5,"column_end":63}},{"value":"/","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pest-2.2.1\\src\\position.rs","byte_start":119490,"byte_end":119493,"line_start":118,"line_end":118,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pest-2.2.1\\src\\position.rs","byte_start":119498,"byte_end":119512,"line_start":119,"line_end":119,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pest-2.2.1\\src\\position.rs","byte_start":119517,"byte_end":119520,"line_start":120,"line_end":120,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pest-2.2.1\\src\\position.rs","byte_start":119525,"byte_end":119532,"line_start":121,"line_end":121,"column_start":5,"column_end":12}},{"value":"/ # use pest;","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pest-2.2.1\\src\\position.rs","byte_start":119537,"byte_end":119552,"line_start":122,"line_end":122,"column_start":5,"column_end":20}},{"value":"/ # #[allow(non_camel_case_types)]","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pest-2.2.1\\src\\position.rs","byte_start":119557,"byte_end":119593,"line_start":123,"line_end":123,"column_start":5,"column_end":41}},{"value":"/ # #[derive(Clone, Copy, Debug, Eq, Hash, Ord, PartialEq, PartialOrd)]","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pest-2.2.1\\src\\position.rs","byte_start":119598,"byte_end":119671,"line_start":124,"line_end":124,"column_start":5,"column_end":78}},{"value":"/ enum Rule {}","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pest-2.2.1\\src\\position.rs","byte_start":119676,"byte_end":119692,"line_start":125,"line_end":125,"column_start":5,"column_end":21}},{"value":"/","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pest-2.2.1\\src\\position.rs","byte_start":119697,"byte_end":119700,"line_start":126,"line_end":126,"column_start":5,"column_end":8}},{"value":"/ let input = \"\\na\";","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pest-2.2.1\\src\\position.rs","byte_start":119705,"byte_end":119727,"line_start":127,"line_end":127,"column_start":5,"column_end":27}},{"value":"/ let mut state: Box<pest::ParserState<Rule>> = pest::ParserState::new(input);","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pest-2.2.1\\src\\position.rs","byte_start":119732,"byte_end":119812,"line_start":128,"line_end":128,"column_start":5,"column_end":85}},{"value":"/ let mut result = state.match_string(\"\\na\");","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pest-2.2.1\\src\\position.rs","byte_start":119817,"byte_end":119864,"line_start":129,"line_end":129,"column_start":5,"column_end":52}},{"value":"/ assert!(result.is_ok());","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pest-2.2.1\\src\\position.rs","byte_start":119869,"byte_end":119897,"line_start":130,"line_end":130,"column_start":5,"column_end":33}},{"value":"/ assert_eq!(result.unwrap().position().line_col(), (2, 2));","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pest-2.2.1\\src\\position.rs","byte_start":119902,"byte_end":119964,"line_start":131,"line_end":131,"column_start":5,"column_end":67}},{"value":"/ ```","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pest-2.2.1\\src\\position.rs","byte_start":119969,"byte_end":119976,"line_start":132,"line_end":132,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pest-2.2.1\\src\\position.rs","byte_start":119981,"byte_end":119990,"line_start":133,"line_end":133,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":569},"span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pest-2.2.1\\src\\position.rs","byte_start":121888,"byte_end":121895,"line_start":196,"line_end":196,"column_start":12,"column_end":19},"name":"line_of","qualname":"<Position>::line_of","value":"pub fn line_of(&Self) -> &'i str","parent":null,"children":[],"decl_id":null,"docs":" Returns the entire line of the input that contains this `Position`.","sig":null,"attributes":[{"value":"/ Returns the entire line of the input that contains this `Position`.","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pest-2.2.1\\src\\position.rs","byte_start":121304,"byte_end":121375,"line_start":179,"line_end":179,"column_start":5,"column_end":76}},{"value":"/","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pest-2.2.1\\src\\position.rs","byte_start":121380,"byte_end":121383,"line_start":180,"line_end":180,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pest-2.2.1\\src\\position.rs","byte_start":121388,"byte_end":121402,"line_start":181,"line_end":181,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pest-2.2.1\\src\\position.rs","byte_start":121407,"byte_end":121410,"line_start":182,"line_end":182,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pest-2.2.1\\src\\position.rs","byte_start":121415,"byte_end":121422,"line_start":183,"line_end":183,"column_start":5,"column_end":12}},{"value":"/ # use pest;","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pest-2.2.1\\src\\position.rs","byte_start":121427,"byte_end":121442,"line_start":184,"line_end":184,"column_start":5,"column_end":20}},{"value":"/ # #[allow(non_camel_case_types)]","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pest-2.2.1\\src\\position.rs","byte_start":121447,"byte_end":121483,"line_start":185,"line_end":185,"column_start":5,"column_end":41}},{"value":"/ # #[derive(Clone, Copy, Debug, Eq, Hash, Ord, PartialEq, PartialOrd)]","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pest-2.2.1\\src\\position.rs","byte_start":121488,"byte_end":121561,"line_start":186,"line_end":186,"column_start":5,"column_end":78}},{"value":"/ enum Rule {}","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pest-2.2.1\\src\\position.rs","byte_start":121566,"byte_end":121582,"line_start":187,"line_end":187,"column_start":5,"column_end":21}},{"value":"/","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pest-2.2.1\\src\\position.rs","byte_start":121587,"byte_end":121590,"line_start":188,"line_end":188,"column_start":5,"column_end":8}},{"value":"/ let input = \"\\na\";","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pest-2.2.1\\src\\position.rs","byte_start":121595,"byte_end":121617,"line_start":189,"line_end":189,"column_start":5,"column_end":27}},{"value":"/ let mut state: Box<pest::ParserState<Rule>> = pest::ParserState::new(input);","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pest-2.2.1\\src\\position.rs","byte_start":121622,"byte_end":121702,"line_start":190,"line_end":190,"column_start":5,"column_end":85}},{"value":"/ let mut result = state.match_string(\"\\na\");","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pest-2.2.1\\src\\position.rs","byte_start":121707,"byte_end":121754,"line_start":191,"line_end":191,"column_start":5,"column_end":52}},{"value":"/ assert!(result.is_ok());","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pest-2.2.1\\src\\position.rs","byte_start":121759,"byte_end":121787,"line_start":192,"line_end":192,"column_start":5,"column_end":33}},{"value":"/ assert_eq!(result.unwrap().position().line_of(), \"a\");","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pest-2.2.1\\src\\position.rs","byte_start":121792,"byte_end":121850,"line_start":193,"line_end":193,"column_start":5,"column_end":63}},{"value":"/ ```","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pest-2.2.1\\src\\position.rs","byte_start":121855,"byte_end":121862,"line_start":194,"line_end":194,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pest-2.2.1\\src\\position.rs","byte_start":121867,"byte_end":121876,"line_start":195,"line_end":195,"column_start":5,"column_end":14}}]},{"kind":"Mod","id":{"krate":0,"index":605},"span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pest-2.2.1\\src\\prec_climber.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"prec_climber","qualname":"::prec_climber","value":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pest-2.2.1\\src\\prec_climber.rs","parent":null,"children":[{"krate":0,"index":606},{"krate":0,"index":609},{"krate":0,"index":612},{"krate":0,"index":615},{"krate":0,"index":618},{"krate":0,"index":621},{"krate":0,"index":624},{"krate":0,"index":984},{"krate":0,"index":989},{"krate":0,"index":991},{"krate":0,"index":992},{"krate":0,"index":994},{"krate":0,"index":995},{"krate":0,"index":997},{"krate":0,"index":998},{"krate":0,"index":1000},{"krate":0,"index":1005},{"krate":0,"index":627},{"krate":0,"index":630},{"krate":0,"index":1008},{"krate":0,"index":1011},{"krate":0,"index":636}],"decl_id":null,"docs":" Constructs useful in infix operator parsing with the precedence climbing method.\n","sig":null,"attributes":[{"value":"/ Constructs useful in infix operator parsing with the precedence climbing method.","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pest-2.2.1\\src\\prec_climber.rs","byte_start":134894,"byte_end":134978,"line_start":10,"line_end":10,"column_start":1,"column_end":85}}]},{"kind":"TupleVariant","id":{"krate":0,"index":985},"span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pest-2.2.1\\src\\prec_climber.rs","byte_start":137235,"byte_end":137239,"line_start":109,"line_end":109,"column_start":5,"column_end":9},"name":"Left","qualname":"::prec_climber::Assoc::Left","value":"Assoc::Left","parent":{"krate":0,"index":984},"children":[],"decl_id":null,"docs":" Left `Operator` associativity\n","sig":null,"attributes":[{"value":"/ Left `Operator` associativity","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pest-2.2.1\\src\\prec_climber.rs","byte_start":137197,"byte_end":137230,"line_start":108,"line_end":108,"column_start":5,"column_end":38}}]},{"kind":"TupleVariant","id":{"krate":0,"index":987},"span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pest-2.2.1\\src\\prec_climber.rs","byte_start":137284,"byte_end":137289,"line_start":111,"line_end":111,"column_start":5,"column_end":10},"name":"Right","qualname":"::prec_climber::Assoc::Right","value":"Assoc::Right","parent":{"krate":0,"index":984},"children":[],"decl_id":null,"docs":" Right `Operator` associativity\n","sig":null,"attributes":[{"value":"/ Right `Operator` associativity","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pest-2.2.1\\src\\prec_climber.rs","byte_start":137245,"byte_end":137279,"line_start":110,"line_end":110,"column_start":5,"column_end":39}}]},{"kind":"Enum","id":{"krate":0,"index":984},"span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pest-2.2.1\\src\\prec_climber.rs","byte_start":137185,"byte_end":137190,"line_start":107,"line_end":107,"column_start":10,"column_end":15},"name":"Assoc","qualname":"::prec_climber::Assoc","value":"pub enum Assoc { Left, Right, }","parent":null,"children":[{"krate":0,"index":985},{"krate":0,"index":987}],"decl_id":null,"docs":" Associativity of an [`Operator`].","sig":null,"attributes":[{"value":"/ Associativity of an [`Operator`].","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pest-2.2.1\\src\\prec_climber.rs","byte_start":137050,"byte_end":137087,"line_start":103,"line_end":103,"column_start":1,"column_end":38}},{"value":"/","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pest-2.2.1\\src\\prec_climber.rs","byte_start":137088,"byte_end":137091,"line_start":104,"line_end":104,"column_start":1,"column_end":4}},{"value":"/ [`Operator`]: struct.Operator.html","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pest-2.2.1\\src\\prec_climber.rs","byte_start":137092,"byte_end":137130,"line_start":105,"line_end":105,"column_start":1,"column_end":39}}]},{"kind":"Struct","id":{"krate":0,"index":1000},"span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pest-2.2.1\\src\\prec_climber.rs","byte_start":137415,"byte_end":137423,"line_start":118,"line_end":118,"column_start":12,"column_end":20},"name":"Operator","qualname":"::prec_climber::Operator","value":"Operator {  }","parent":null,"children":[{"krate":0,"index":1002},{"krate":0,"index":1003},{"krate":0,"index":1004}],"decl_id":null,"docs":" Infix operator used in [`PrecClimber`].","sig":null,"attributes":[{"value":"/ Infix operator used in [`PrecClimber`].","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pest-2.2.1\\src\\prec_climber.rs","byte_start":137294,"byte_end":137337,"line_start":114,"line_end":114,"column_start":1,"column_end":44}},{"value":"/","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pest-2.2.1\\src\\prec_climber.rs","byte_start":137338,"byte_end":137341,"line_start":115,"line_end":115,"column_start":1,"column_end":4}},{"value":"/ [`PrecClimber`]: struct.PrecClimber.html","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pest-2.2.1\\src\\prec_climber.rs","byte_start":137342,"byte_end":137386,"line_start":116,"line_end":116,"column_start":1,"column_end":45}}]},{"kind":"Method","id":{"krate":0,"index":629},"span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pest-2.2.1\\src\\prec_climber.rs","byte_start":138038,"byte_end":138041,"line_start":140,"line_end":140,"column_start":12,"column_end":15},"name":"new","qualname":"<Operator<R>>::new","value":"pub fn new(R, Assoc) -> Operator<R>","parent":null,"children":[],"decl_id":null,"docs":" Creates a new `Operator` from a `Rule` and `Assoc`.","sig":null,"attributes":[{"value":"/ Creates a new `Operator` from a `Rule` and `Assoc`.","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pest-2.2.1\\src\\prec_climber.rs","byte_start":137545,"byte_end":137600,"line_start":125,"line_end":125,"column_start":5,"column_end":60}},{"value":"/","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pest-2.2.1\\src\\prec_climber.rs","byte_start":137605,"byte_end":137608,"line_start":126,"line_end":126,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pest-2.2.1\\src\\prec_climber.rs","byte_start":137613,"byte_end":137627,"line_start":127,"line_end":127,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pest-2.2.1\\src\\prec_climber.rs","byte_start":137632,"byte_end":137635,"line_start":128,"line_end":128,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pest-2.2.1\\src\\prec_climber.rs","byte_start":137640,"byte_end":137647,"line_start":129,"line_end":129,"column_start":5,"column_end":12}},{"value":"/ # use pest::prec_climber::{Assoc, Operator};","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pest-2.2.1\\src\\prec_climber.rs","byte_start":137652,"byte_end":137700,"line_start":130,"line_end":130,"column_start":5,"column_end":53}},{"value":"/ # #[allow(non_camel_case_types)]","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pest-2.2.1\\src\\prec_climber.rs","byte_start":137705,"byte_end":137741,"line_start":131,"line_end":131,"column_start":5,"column_end":41}},{"value":"/ # #[allow(dead_code)]","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pest-2.2.1\\src\\prec_climber.rs","byte_start":137746,"byte_end":137771,"line_start":132,"line_end":132,"column_start":5,"column_end":30}},{"value":"/ # #[derive(Clone, Copy, Debug, Eq, Hash, Ord, PartialEq, PartialOrd)]","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pest-2.2.1\\src\\prec_climber.rs","byte_start":137776,"byte_end":137849,"line_start":133,"line_end":133,"column_start":5,"column_end":78}},{"value":"/ # enum Rule {","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pest-2.2.1\\src\\prec_climber.rs","byte_start":137854,"byte_end":137871,"line_start":134,"line_end":134,"column_start":5,"column_end":22}},{"value":"/ #     plus,","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pest-2.2.1\\src\\prec_climber.rs","byte_start":137876,"byte_end":137891,"line_start":135,"line_end":135,"column_start":5,"column_end":20}},{"value":"/ #     minus","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pest-2.2.1\\src\\prec_climber.rs","byte_start":137896,"byte_end":137911,"line_start":136,"line_end":136,"column_start":5,"column_end":20}},{"value":"/ # }","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pest-2.2.1\\src\\prec_climber.rs","byte_start":137916,"byte_end":137923,"line_start":137,"line_end":137,"column_start":5,"column_end":12}},{"value":"/ Operator::new(Rule::plus, Assoc::Left) | Operator::new(Rule::minus, Assoc::Right);","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pest-2.2.1\\src\\prec_climber.rs","byte_start":137928,"byte_end":138014,"line_start":138,"line_end":138,"column_start":5,"column_end":91}},{"value":"/ ```","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pest-2.2.1\\src\\prec_climber.rs","byte_start":138019,"byte_end":138026,"line_start":139,"line_end":139,"column_start":5,"column_end":12}}]},{"kind":"Struct","id":{"krate":0,"index":1008},"span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pest-2.2.1\\src\\prec_climber.rs","byte_start":139059,"byte_end":139070,"line_start":173,"line_end":173,"column_start":12,"column_end":23},"name":"PrecClimber","qualname":"::prec_climber::PrecClimber","value":"PrecClimber {  }","parent":null,"children":[{"krate":0,"index":1010}],"decl_id":null,"docs":" List of operators and precedences, which can perform [precedence climbing][1] on infix\n expressions contained in a [`Pairs`]. The token pairs contained in the `Pairs` should start\n with a *primary* pair and then alternate between an *operator* and a *primary*.","sig":null,"attributes":[{"value":"/ List of operators and precedences, which can perform [precedence climbing][1] on infix","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pest-2.2.1\\src\\prec_climber.rs","byte_start":138617,"byte_end":138707,"line_start":166,"line_end":166,"column_start":1,"column_end":91}},{"value":"/ expressions contained in a [`Pairs`]. The token pairs contained in the `Pairs` should start","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pest-2.2.1\\src\\prec_climber.rs","byte_start":138708,"byte_end":138803,"line_start":167,"line_end":167,"column_start":1,"column_end":96}},{"value":"/ with a *primary* pair and then alternate between an *operator* and a *primary*.","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pest-2.2.1\\src\\prec_climber.rs","byte_start":138804,"byte_end":138887,"line_start":168,"line_end":168,"column_start":1,"column_end":84}},{"value":"/","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pest-2.2.1\\src\\prec_climber.rs","byte_start":138888,"byte_end":138891,"line_start":169,"line_end":169,"column_start":1,"column_end":4}},{"value":"/ [1]: https://en.wikipedia.org/wiki/Operator-precedence_parser#Precedence_climbing_method","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pest-2.2.1\\src\\prec_climber.rs","byte_start":138892,"byte_end":138984,"line_start":170,"line_end":170,"column_start":1,"column_end":93}},{"value":"/ [`Pairs`]: ../iterators/struct.Pairs.html","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pest-2.2.1\\src\\prec_climber.rs","byte_start":138985,"byte_end":139030,"line_start":171,"line_end":171,"column_start":1,"column_end":46}}]},{"kind":"Method","id":{"krate":0,"index":641},"span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pest-2.2.1\\src\\prec_climber.rs","byte_start":141555,"byte_end":141558,"line_start":245,"line_end":245,"column_start":12,"column_end":15},"name":"new","qualname":"<PrecClimber<R>>::new","value":"pub fn new(Vec<Operator<R>>) -> PrecClimber<R>","parent":null,"children":[],"decl_id":null,"docs":" Creates a new `PrecClimber` from the `Operator`s contained in `ops`. Every entry in the\n `Vec` has precedence *index + 1*. In order to have operators with same precedence, they need\n to be chained with `|` between them.","sig":null,"attributes":[{"value":"/ Creates a new `PrecClimber` from the `Operator`s contained in `ops`. Every entry in the","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pest-2.2.1\\src\\prec_climber.rs","byte_start":140608,"byte_end":140699,"line_start":221,"line_end":221,"column_start":5,"column_end":96}},{"value":"/ `Vec` has precedence *index + 1*. In order to have operators with same precedence, they need","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pest-2.2.1\\src\\prec_climber.rs","byte_start":140704,"byte_end":140800,"line_start":222,"line_end":222,"column_start":5,"column_end":101}},{"value":"/ to be chained with `|` between them.","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pest-2.2.1\\src\\prec_climber.rs","byte_start":140805,"byte_end":140845,"line_start":223,"line_end":223,"column_start":5,"column_end":45}},{"value":"/","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pest-2.2.1\\src\\prec_climber.rs","byte_start":140850,"byte_end":140853,"line_start":224,"line_end":224,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pest-2.2.1\\src\\prec_climber.rs","byte_start":140858,"byte_end":140872,"line_start":225,"line_end":225,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pest-2.2.1\\src\\prec_climber.rs","byte_start":140877,"byte_end":140880,"line_start":226,"line_end":226,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pest-2.2.1\\src\\prec_climber.rs","byte_start":140885,"byte_end":140892,"line_start":227,"line_end":227,"column_start":5,"column_end":12}},{"value":"/ # use pest::prec_climber::{Assoc, Operator, PrecClimber};","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pest-2.2.1\\src\\prec_climber.rs","byte_start":140897,"byte_end":140958,"line_start":228,"line_end":228,"column_start":5,"column_end":66}},{"value":"/ # #[allow(non_camel_case_types)]","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pest-2.2.1\\src\\prec_climber.rs","byte_start":140963,"byte_end":140999,"line_start":229,"line_end":229,"column_start":5,"column_end":41}},{"value":"/ # #[allow(dead_code)]","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pest-2.2.1\\src\\prec_climber.rs","byte_start":141004,"byte_end":141029,"line_start":230,"line_end":230,"column_start":5,"column_end":30}},{"value":"/ # #[derive(Clone, Copy, Debug, Eq, Hash, Ord, PartialEq, PartialOrd)]","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pest-2.2.1\\src\\prec_climber.rs","byte_start":141034,"byte_end":141107,"line_start":231,"line_end":231,"column_start":5,"column_end":78}},{"value":"/ # enum Rule {","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pest-2.2.1\\src\\prec_climber.rs","byte_start":141112,"byte_end":141129,"line_start":232,"line_end":232,"column_start":5,"column_end":22}},{"value":"/ #     plus,","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pest-2.2.1\\src\\prec_climber.rs","byte_start":141134,"byte_end":141149,"line_start":233,"line_end":233,"column_start":5,"column_end":20}},{"value":"/ #     minus,","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pest-2.2.1\\src\\prec_climber.rs","byte_start":141154,"byte_end":141170,"line_start":234,"line_end":234,"column_start":5,"column_end":21}},{"value":"/ #     times,","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pest-2.2.1\\src\\prec_climber.rs","byte_start":141175,"byte_end":141191,"line_start":235,"line_end":235,"column_start":5,"column_end":21}},{"value":"/ #     divide,","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pest-2.2.1\\src\\prec_climber.rs","byte_start":141196,"byte_end":141213,"line_start":236,"line_end":236,"column_start":5,"column_end":22}},{"value":"/ #     power","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pest-2.2.1\\src\\prec_climber.rs","byte_start":141218,"byte_end":141233,"line_start":237,"line_end":237,"column_start":5,"column_end":20}},{"value":"/ # }","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pest-2.2.1\\src\\prec_climber.rs","byte_start":141238,"byte_end":141245,"line_start":238,"line_end":238,"column_start":5,"column_end":12}},{"value":"/ PrecClimber::new(vec![","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pest-2.2.1\\src\\prec_climber.rs","byte_start":141250,"byte_end":141276,"line_start":239,"line_end":239,"column_start":5,"column_end":31}},{"value":"/     Operator::new(Rule::plus, Assoc::Left) | Operator::new(Rule::minus, Assoc::Left),","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pest-2.2.1\\src\\prec_climber.rs","byte_start":141281,"byte_end":141370,"line_start":240,"line_end":240,"column_start":5,"column_end":94}},{"value":"/     Operator::new(Rule::times, Assoc::Left) | Operator::new(Rule::divide, Assoc::Left),","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pest-2.2.1\\src\\prec_climber.rs","byte_start":141375,"byte_end":141466,"line_start":241,"line_end":241,"column_start":5,"column_end":96}},{"value":"/     Operator::new(Rule::power, Assoc::Right)","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pest-2.2.1\\src\\prec_climber.rs","byte_start":141471,"byte_end":141519,"line_start":242,"line_end":242,"column_start":5,"column_end":53}},{"value":"/ ]);","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pest-2.2.1\\src\\prec_climber.rs","byte_start":141524,"byte_end":141531,"line_start":243,"line_end":243,"column_start":5,"column_end":12}},{"value":"/ ```","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pest-2.2.1\\src\\prec_climber.rs","byte_start":141536,"byte_end":141543,"line_start":244,"line_end":244,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":644},"span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pest-2.2.1\\src\\prec_climber.rs","byte_start":143183,"byte_end":143188,"line_start":299,"line_end":299,"column_start":12,"column_end":17},"name":"climb","qualname":"<PrecClimber<R>>::climb","value":"pub fn climb<'i, P, F, G, T>(&Self, P, F, G) -> T where P: Iterator<Item =\nPair>, F: FnMut(Pair) -> T, G: FnMut(T, Pair, T) -> T","parent":null,"children":[],"decl_id":null,"docs":" Performs the precedence climbing algorithm on the `pairs` in a similar manner to map-reduce.\n *Primary* pairs are mapped with `primary` and then reduced to one single result with\n `infix`.","sig":null,"attributes":[{"value":"/ Performs the precedence climbing algorithm on the `pairs` in a similar manner to map-reduce.","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pest-2.2.1\\src\\prec_climber.rs","byte_start":142216,"byte_end":142312,"line_start":271,"line_end":271,"column_start":5,"column_end":101}},{"value":"/ *Primary* pairs are mapped with `primary` and then reduced to one single result with","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pest-2.2.1\\src\\prec_climber.rs","byte_start":142317,"byte_end":142405,"line_start":272,"line_end":272,"column_start":5,"column_end":93}},{"value":"/ `infix`.","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pest-2.2.1\\src\\prec_climber.rs","byte_start":142410,"byte_end":142422,"line_start":273,"line_end":273,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pest-2.2.1\\src\\prec_climber.rs","byte_start":142427,"byte_end":142430,"line_start":274,"line_end":274,"column_start":5,"column_end":8}},{"value":"/ # Panics","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pest-2.2.1\\src\\prec_climber.rs","byte_start":142435,"byte_end":142447,"line_start":275,"line_end":275,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pest-2.2.1\\src\\prec_climber.rs","byte_start":142452,"byte_end":142455,"line_start":276,"line_end":276,"column_start":5,"column_end":8}},{"value":"/ Panics will occur when `pairs` is empty or when the alternating *primary*, *operator*,","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pest-2.2.1\\src\\prec_climber.rs","byte_start":142460,"byte_end":142550,"line_start":277,"line_end":277,"column_start":5,"column_end":95}},{"value":"/ *primary* order is not respected.","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pest-2.2.1\\src\\prec_climber.rs","byte_start":142555,"byte_end":142592,"line_start":278,"line_end":278,"column_start":5,"column_end":42}},{"value":"/","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pest-2.2.1\\src\\prec_climber.rs","byte_start":142597,"byte_end":142600,"line_start":279,"line_end":279,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pest-2.2.1\\src\\prec_climber.rs","byte_start":142605,"byte_end":142619,"line_start":280,"line_end":280,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pest-2.2.1\\src\\prec_climber.rs","byte_start":142624,"byte_end":142627,"line_start":281,"line_end":281,"column_start":5,"column_end":8}},{"value":"/ ```ignore","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pest-2.2.1\\src\\prec_climber.rs","byte_start":142632,"byte_end":142645,"line_start":282,"line_end":282,"column_start":5,"column_end":18}},{"value":"/ let primary = |pair| {","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pest-2.2.1\\src\\prec_climber.rs","byte_start":142650,"byte_end":142676,"line_start":283,"line_end":283,"column_start":5,"column_end":31}},{"value":"/     consume(pair, climber)","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pest-2.2.1\\src\\prec_climber.rs","byte_start":142681,"byte_end":142711,"line_start":284,"line_end":284,"column_start":5,"column_end":35}},{"value":"/ };","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pest-2.2.1\\src\\prec_climber.rs","byte_start":142716,"byte_end":142722,"line_start":285,"line_end":285,"column_start":5,"column_end":11}},{"value":"/ let infix = |lhs: i32, op: Pair<Rule>, rhs: i32| {","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pest-2.2.1\\src\\prec_climber.rs","byte_start":142727,"byte_end":142781,"line_start":286,"line_end":286,"column_start":5,"column_end":59}},{"value":"/     match op.rule() {","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pest-2.2.1\\src\\prec_climber.rs","byte_start":142786,"byte_end":142811,"line_start":287,"line_end":287,"column_start":5,"column_end":30}},{"value":"/         Rule::plus => lhs + rhs,","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pest-2.2.1\\src\\prec_climber.rs","byte_start":142816,"byte_end":142852,"line_start":288,"line_end":288,"column_start":5,"column_end":41}},{"value":"/         Rule::minus => lhs - rhs,","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pest-2.2.1\\src\\prec_climber.rs","byte_start":142857,"byte_end":142894,"line_start":289,"line_end":289,"column_start":5,"column_end":42}},{"value":"/         Rule::times => lhs * rhs,","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pest-2.2.1\\src\\prec_climber.rs","byte_start":142899,"byte_end":142936,"line_start":290,"line_end":290,"column_start":5,"column_end":42}},{"value":"/         Rule::divide => lhs / rhs,","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pest-2.2.1\\src\\prec_climber.rs","byte_start":142941,"byte_end":142979,"line_start":291,"line_end":291,"column_start":5,"column_end":43}},{"value":"/         Rule::power => lhs.pow(rhs as u32),","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pest-2.2.1\\src\\prec_climber.rs","byte_start":142984,"byte_end":143031,"line_start":292,"line_end":292,"column_start":5,"column_end":52}},{"value":"/         _ => unreachable!()","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pest-2.2.1\\src\\prec_climber.rs","byte_start":143036,"byte_end":143067,"line_start":293,"line_end":293,"column_start":5,"column_end":36}},{"value":"/     }","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pest-2.2.1\\src\\prec_climber.rs","byte_start":143072,"byte_end":143081,"line_start":294,"line_end":294,"column_start":5,"column_end":14}},{"value":"/ };","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pest-2.2.1\\src\\prec_climber.rs","byte_start":143086,"byte_end":143092,"line_start":295,"line_end":295,"column_start":5,"column_end":11}},{"value":"/","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pest-2.2.1\\src\\prec_climber.rs","byte_start":143097,"byte_end":143100,"line_start":296,"line_end":296,"column_start":5,"column_end":8}},{"value":"/ let result = climber.climb(pairs, primary, infix);","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pest-2.2.1\\src\\prec_climber.rs","byte_start":143105,"byte_end":143159,"line_start":297,"line_end":297,"column_start":5,"column_end":59}},{"value":"/ ```","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pest-2.2.1\\src\\prec_climber.rs","byte_start":143164,"byte_end":143171,"line_start":298,"line_end":298,"column_start":5,"column_end":12}}]},{"kind":"Struct","id":{"krate":0,"index":1014},"span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pest-2.2.1\\src\\span.rs","byte_start":145952,"byte_end":145956,"line_start":22,"line_end":22,"column_start":12,"column_end":16},"name":"Span","qualname":"::span::Span","value":"Span {  }","parent":null,"children":[{"krate":0,"index":1016},{"krate":0,"index":1017},{"krate":0,"index":1018}],"decl_id":null,"docs":" A span over a `&str`. It is created from either [two `Position`s] or from a [`Pair`].","sig":null,"attributes":[{"value":"/ A span over a `&str`. It is created from either [two `Position`s] or from a [`Pair`].","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pest-2.2.1\\src\\span.rs","byte_start":145712,"byte_end":145801,"line_start":17,"line_end":17,"column_start":1,"column_end":90}},{"value":"/","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pest-2.2.1\\src\\span.rs","byte_start":145802,"byte_end":145805,"line_start":18,"line_end":18,"column_start":1,"column_end":4}},{"value":"/ [two `Position`s]: struct.Position.html#method.span","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pest-2.2.1\\src\\span.rs","byte_start":145806,"byte_end":145861,"line_start":19,"line_end":19,"column_start":1,"column_end":56}},{"value":"/ [`Pair`]: ../iterators/struct.Pair.html#method.span","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pest-2.2.1\\src\\span.rs","byte_start":145862,"byte_end":145917,"line_start":20,"line_end":20,"column_start":1,"column_end":56}}]},{"kind":"Method","id":{"krate":0,"index":679},"span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pest-2.2.1\\src\\span.rs","byte_start":146984,"byte_end":146987,"line_start":56,"line_end":56,"column_start":12,"column_end":15},"name":"new","qualname":"<Span>::new","value":"pub fn new(&str, usize, usize) -> Option<Span>","parent":null,"children":[],"decl_id":null,"docs":" Attempts to create a new span. Will return `None` if `input[start..end]` is an invalid index\n into `input`.","sig":null,"attributes":[{"value":"/ Attempts to create a new span. Will return `None` if `input[start..end]` is an invalid index","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pest-2.2.1\\src\\span.rs","byte_start":146626,"byte_end":146722,"line_start":45,"line_end":45,"column_start":5,"column_end":101}},{"value":"/ into `input`.","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pest-2.2.1\\src\\span.rs","byte_start":146727,"byte_end":146744,"line_start":46,"line_end":46,"column_start":5,"column_end":22}},{"value":"/","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pest-2.2.1\\src\\span.rs","byte_start":146749,"byte_end":146752,"line_start":47,"line_end":47,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pest-2.2.1\\src\\span.rs","byte_start":146757,"byte_end":146771,"line_start":48,"line_end":48,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pest-2.2.1\\src\\span.rs","byte_start":146776,"byte_end":146779,"line_start":49,"line_end":49,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pest-2.2.1\\src\\span.rs","byte_start":146784,"byte_end":146791,"line_start":50,"line_end":50,"column_start":5,"column_end":12}},{"value":"/ # use pest::Span;","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pest-2.2.1\\src\\span.rs","byte_start":146796,"byte_end":146817,"line_start":51,"line_end":51,"column_start":5,"column_end":26}},{"value":"/ let input = \"Hello!\";","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pest-2.2.1\\src\\span.rs","byte_start":146822,"byte_end":146847,"line_start":52,"line_end":52,"column_start":5,"column_end":30}},{"value":"/ assert_eq!(None, Span::new(input, 100, 0));","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pest-2.2.1\\src\\span.rs","byte_start":146852,"byte_end":146899,"line_start":53,"line_end":53,"column_start":5,"column_end":52}},{"value":"/ assert!(Span::new(input, 0, input.len()).is_some());","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pest-2.2.1\\src\\span.rs","byte_start":146904,"byte_end":146960,"line_start":54,"line_end":54,"column_start":5,"column_end":61}},{"value":"/ ```","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pest-2.2.1\\src\\span.rs","byte_start":146965,"byte_end":146972,"line_start":55,"line_end":55,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":680},"span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pest-2.2.1\\src\\span.rs","byte_start":147553,"byte_end":147558,"line_start":78,"line_end":78,"column_start":12,"column_end":17},"name":"start","qualname":"<Span>::start","value":"pub fn start(&Self) -> usize","parent":null,"children":[],"decl_id":null,"docs":" Returns the `Span`'s start byte position as a `usize`.","sig":null,"attributes":[{"value":"/ Returns the `Span`'s start byte position as a `usize`.","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pest-2.2.1\\src\\span.rs","byte_start":147190,"byte_end":147248,"line_start":64,"line_end":64,"column_start":5,"column_end":63}},{"value":"/","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pest-2.2.1\\src\\span.rs","byte_start":147253,"byte_end":147256,"line_start":65,"line_end":65,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pest-2.2.1\\src\\span.rs","byte_start":147261,"byte_end":147275,"line_start":66,"line_end":66,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pest-2.2.1\\src\\span.rs","byte_start":147280,"byte_end":147283,"line_start":67,"line_end":67,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pest-2.2.1\\src\\span.rs","byte_start":147288,"byte_end":147295,"line_start":68,"line_end":68,"column_start":5,"column_end":12}},{"value":"/ # use pest::Position;","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pest-2.2.1\\src\\span.rs","byte_start":147300,"byte_end":147325,"line_start":69,"line_end":69,"column_start":5,"column_end":30}},{"value":"/ let input = \"ab\";","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pest-2.2.1\\src\\span.rs","byte_start":147330,"byte_end":147351,"line_start":70,"line_end":70,"column_start":5,"column_end":26}},{"value":"/ let start = Position::from_start(input);","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pest-2.2.1\\src\\span.rs","byte_start":147356,"byte_end":147400,"line_start":71,"line_end":71,"column_start":5,"column_end":49}},{"value":"/ let end = start.clone();","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pest-2.2.1\\src\\span.rs","byte_start":147405,"byte_end":147433,"line_start":72,"line_end":72,"column_start":5,"column_end":33}},{"value":"/ let span = start.span(&end);","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pest-2.2.1\\src\\span.rs","byte_start":147438,"byte_end":147470,"line_start":73,"line_end":73,"column_start":5,"column_end":37}},{"value":"/","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pest-2.2.1\\src\\span.rs","byte_start":147475,"byte_end":147478,"line_start":74,"line_end":74,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(span.start(), 0);","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pest-2.2.1\\src\\span.rs","byte_start":147483,"byte_end":147515,"line_start":75,"line_end":75,"column_start":5,"column_end":37}},{"value":"/ ```","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pest-2.2.1\\src\\span.rs","byte_start":147520,"byte_end":147527,"line_start":76,"line_end":76,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pest-2.2.1\\src\\span.rs","byte_start":147532,"byte_end":147541,"line_start":77,"line_end":77,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":681},"span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pest-2.2.1\\src\\span.rs","byte_start":147966,"byte_end":147969,"line_start":96,"line_end":96,"column_start":12,"column_end":15},"name":"end","qualname":"<Span>::end","value":"pub fn end(&Self) -> usize","parent":null,"children":[],"decl_id":null,"docs":" Returns the `Span`'s end byte position as a `usize`.","sig":null,"attributes":[{"value":"/ Returns the `Span`'s end byte position as a `usize`.","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pest-2.2.1\\src\\span.rs","byte_start":147607,"byte_end":147663,"line_start":82,"line_end":82,"column_start":5,"column_end":61}},{"value":"/","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pest-2.2.1\\src\\span.rs","byte_start":147668,"byte_end":147671,"line_start":83,"line_end":83,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pest-2.2.1\\src\\span.rs","byte_start":147676,"byte_end":147690,"line_start":84,"line_end":84,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pest-2.2.1\\src\\span.rs","byte_start":147695,"byte_end":147698,"line_start":85,"line_end":85,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pest-2.2.1\\src\\span.rs","byte_start":147703,"byte_end":147710,"line_start":86,"line_end":86,"column_start":5,"column_end":12}},{"value":"/ # use pest::Position;","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pest-2.2.1\\src\\span.rs","byte_start":147715,"byte_end":147740,"line_start":87,"line_end":87,"column_start":5,"column_end":30}},{"value":"/ let input = \"ab\";","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pest-2.2.1\\src\\span.rs","byte_start":147745,"byte_end":147766,"line_start":88,"line_end":88,"column_start":5,"column_end":26}},{"value":"/ let start = Position::from_start(input);","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pest-2.2.1\\src\\span.rs","byte_start":147771,"byte_end":147815,"line_start":89,"line_end":89,"column_start":5,"column_end":49}},{"value":"/ let end = start.clone();","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pest-2.2.1\\src\\span.rs","byte_start":147820,"byte_end":147848,"line_start":90,"line_end":90,"column_start":5,"column_end":33}},{"value":"/ let span = start.span(&end);","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pest-2.2.1\\src\\span.rs","byte_start":147853,"byte_end":147885,"line_start":91,"line_end":91,"column_start":5,"column_end":37}},{"value":"/","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pest-2.2.1\\src\\span.rs","byte_start":147890,"byte_end":147893,"line_start":92,"line_end":92,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(span.end(), 0);","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pest-2.2.1\\src\\span.rs","byte_start":147898,"byte_end":147928,"line_start":93,"line_end":93,"column_start":5,"column_end":35}},{"value":"/ ```","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pest-2.2.1\\src\\span.rs","byte_start":147933,"byte_end":147940,"line_start":94,"line_end":94,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pest-2.2.1\\src\\span.rs","byte_start":147945,"byte_end":147954,"line_start":95,"line_end":95,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":682},"span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pest-2.2.1\\src\\span.rs","byte_start":148379,"byte_end":148388,"line_start":114,"line_end":114,"column_start":12,"column_end":21},"name":"start_pos","qualname":"<Span>::start_pos","value":"pub fn start_pos(&Self) -> position::Position","parent":null,"children":[],"decl_id":null,"docs":" Returns the `Span`'s start `Position`.","sig":null,"attributes":[{"value":"/ Returns the `Span`'s start `Position`.","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pest-2.2.1\\src\\span.rs","byte_start":148016,"byte_end":148058,"line_start":100,"line_end":100,"column_start":5,"column_end":47}},{"value":"/","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pest-2.2.1\\src\\span.rs","byte_start":148063,"byte_end":148066,"line_start":101,"line_end":101,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pest-2.2.1\\src\\span.rs","byte_start":148071,"byte_end":148085,"line_start":102,"line_end":102,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pest-2.2.1\\src\\span.rs","byte_start":148090,"byte_end":148093,"line_start":103,"line_end":103,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pest-2.2.1\\src\\span.rs","byte_start":148098,"byte_end":148105,"line_start":104,"line_end":104,"column_start":5,"column_end":12}},{"value":"/ # use pest::Position;","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pest-2.2.1\\src\\span.rs","byte_start":148110,"byte_end":148135,"line_start":105,"line_end":105,"column_start":5,"column_end":30}},{"value":"/ let input = \"ab\";","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pest-2.2.1\\src\\span.rs","byte_start":148140,"byte_end":148161,"line_start":106,"line_end":106,"column_start":5,"column_end":26}},{"value":"/ let start = Position::from_start(input);","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pest-2.2.1\\src\\span.rs","byte_start":148166,"byte_end":148210,"line_start":107,"line_end":107,"column_start":5,"column_end":49}},{"value":"/ let end = start.clone();","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pest-2.2.1\\src\\span.rs","byte_start":148215,"byte_end":148243,"line_start":108,"line_end":108,"column_start":5,"column_end":33}},{"value":"/ let span = start.clone().span(&end);","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pest-2.2.1\\src\\span.rs","byte_start":148248,"byte_end":148288,"line_start":109,"line_end":109,"column_start":5,"column_end":45}},{"value":"/","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pest-2.2.1\\src\\span.rs","byte_start":148293,"byte_end":148296,"line_start":110,"line_end":110,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(span.start_pos(), start);","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pest-2.2.1\\src\\span.rs","byte_start":148301,"byte_end":148341,"line_start":111,"line_end":111,"column_start":5,"column_end":45}},{"value":"/ ```","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pest-2.2.1\\src\\span.rs","byte_start":148346,"byte_end":148353,"line_start":112,"line_end":112,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pest-2.2.1\\src\\span.rs","byte_start":148358,"byte_end":148367,"line_start":113,"line_end":113,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":683},"span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pest-2.2.1\\src\\span.rs","byte_start":148920,"byte_end":148927,"line_start":133,"line_end":133,"column_start":12,"column_end":19},"name":"end_pos","qualname":"<Span>::end_pos","value":"pub fn end_pos(&Self) -> position::Position","parent":null,"children":[],"decl_id":null,"docs":" Returns the `Span`'s end `Position`.","sig":null,"attributes":[{"value":"/ Returns the `Span`'s end `Position`.","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pest-2.2.1\\src\\span.rs","byte_start":148571,"byte_end":148611,"line_start":119,"line_end":119,"column_start":5,"column_end":45}},{"value":"/","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pest-2.2.1\\src\\span.rs","byte_start":148616,"byte_end":148619,"line_start":120,"line_end":120,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pest-2.2.1\\src\\span.rs","byte_start":148624,"byte_end":148638,"line_start":121,"line_end":121,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pest-2.2.1\\src\\span.rs","byte_start":148643,"byte_end":148646,"line_start":122,"line_end":122,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pest-2.2.1\\src\\span.rs","byte_start":148651,"byte_end":148658,"line_start":123,"line_end":123,"column_start":5,"column_end":12}},{"value":"/ # use pest::Position;","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pest-2.2.1\\src\\span.rs","byte_start":148663,"byte_end":148688,"line_start":124,"line_end":124,"column_start":5,"column_end":30}},{"value":"/ let input = \"ab\";","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pest-2.2.1\\src\\span.rs","byte_start":148693,"byte_end":148714,"line_start":125,"line_end":125,"column_start":5,"column_end":26}},{"value":"/ let start = Position::from_start(input);","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pest-2.2.1\\src\\span.rs","byte_start":148719,"byte_end":148763,"line_start":126,"line_end":126,"column_start":5,"column_end":49}},{"value":"/ let end = start.clone();","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pest-2.2.1\\src\\span.rs","byte_start":148768,"byte_end":148796,"line_start":127,"line_end":127,"column_start":5,"column_end":33}},{"value":"/ let span = start.span(&end);","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pest-2.2.1\\src\\span.rs","byte_start":148801,"byte_end":148833,"line_start":128,"line_end":128,"column_start":5,"column_end":37}},{"value":"/","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pest-2.2.1\\src\\span.rs","byte_start":148838,"byte_end":148841,"line_start":129,"line_end":129,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(span.end_pos(), end);","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pest-2.2.1\\src\\span.rs","byte_start":148846,"byte_end":148882,"line_start":130,"line_end":130,"column_start":5,"column_end":41}},{"value":"/ ```","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pest-2.2.1\\src\\span.rs","byte_start":148887,"byte_end":148894,"line_start":131,"line_end":131,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pest-2.2.1\\src\\span.rs","byte_start":148899,"byte_end":148908,"line_start":132,"line_end":132,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":684},"span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pest-2.2.1\\src\\span.rs","byte_start":149479,"byte_end":149484,"line_start":152,"line_end":152,"column_start":12,"column_end":17},"name":"split","qualname":"<Span>::split","value":"pub fn split(Self) -> (position::Position, position::Position)","parent":null,"children":[],"decl_id":null,"docs":" Splits the `Span` into a pair of `Position`s.","sig":null,"attributes":[{"value":"/ Splits the `Span` into a pair of `Position`s.","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pest-2.2.1\\src\\span.rs","byte_start":149106,"byte_end":149155,"line_start":138,"line_end":138,"column_start":5,"column_end":54}},{"value":"/","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pest-2.2.1\\src\\span.rs","byte_start":149160,"byte_end":149163,"line_start":139,"line_end":139,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pest-2.2.1\\src\\span.rs","byte_start":149168,"byte_end":149182,"line_start":140,"line_end":140,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pest-2.2.1\\src\\span.rs","byte_start":149187,"byte_end":149190,"line_start":141,"line_end":141,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pest-2.2.1\\src\\span.rs","byte_start":149195,"byte_end":149202,"line_start":142,"line_end":142,"column_start":5,"column_end":12}},{"value":"/ # use pest::Position;","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pest-2.2.1\\src\\span.rs","byte_start":149207,"byte_end":149232,"line_start":143,"line_end":143,"column_start":5,"column_end":30}},{"value":"/ let input = \"ab\";","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pest-2.2.1\\src\\span.rs","byte_start":149237,"byte_end":149258,"line_start":144,"line_end":144,"column_start":5,"column_end":26}},{"value":"/ let start = Position::from_start(input);","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pest-2.2.1\\src\\span.rs","byte_start":149263,"byte_end":149307,"line_start":145,"line_end":145,"column_start":5,"column_end":49}},{"value":"/ let end = start.clone();","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pest-2.2.1\\src\\span.rs","byte_start":149312,"byte_end":149340,"line_start":146,"line_end":146,"column_start":5,"column_end":33}},{"value":"/ let span = start.clone().span(&end);","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pest-2.2.1\\src\\span.rs","byte_start":149345,"byte_end":149385,"line_start":147,"line_end":147,"column_start":5,"column_end":45}},{"value":"/","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pest-2.2.1\\src\\span.rs","byte_start":149390,"byte_end":149393,"line_start":148,"line_end":148,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(span.split(), (start, end));","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pest-2.2.1\\src\\span.rs","byte_start":149398,"byte_end":149441,"line_start":149,"line_end":149,"column_start":5,"column_end":48}},{"value":"/ ```","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pest-2.2.1\\src\\span.rs","byte_start":149446,"byte_end":149453,"line_start":150,"line_end":150,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pest-2.2.1\\src\\span.rs","byte_start":149458,"byte_end":149467,"line_start":151,"line_end":151,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":685},"span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pest-2.2.1\\src\\span.rs","byte_start":150467,"byte_end":150473,"line_start":178,"line_end":178,"column_start":12,"column_end":18},"name":"as_str","qualname":"<Span>::as_str","value":"pub fn as_str(&Self) -> &'i str","parent":null,"children":[],"decl_id":null,"docs":" Captures a slice from the `&str` defined by the `Span`.","sig":null,"attributes":[{"value":"/ Captures a slice from the `&str` defined by the `Span`.","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pest-2.2.1\\src\\span.rs","byte_start":149824,"byte_end":149883,"line_start":160,"line_end":160,"column_start":5,"column_end":64}},{"value":"/","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pest-2.2.1\\src\\span.rs","byte_start":149888,"byte_end":149891,"line_start":161,"line_end":161,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pest-2.2.1\\src\\span.rs","byte_start":149896,"byte_end":149910,"line_start":162,"line_end":162,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pest-2.2.1\\src\\span.rs","byte_start":149915,"byte_end":149918,"line_start":163,"line_end":163,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pest-2.2.1\\src\\span.rs","byte_start":149923,"byte_end":149930,"line_start":164,"line_end":164,"column_start":5,"column_end":12}},{"value":"/ # use pest;","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pest-2.2.1\\src\\span.rs","byte_start":149935,"byte_end":149950,"line_start":165,"line_end":165,"column_start":5,"column_end":20}},{"value":"/ # #[allow(non_camel_case_types)]","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pest-2.2.1\\src\\span.rs","byte_start":149955,"byte_end":149991,"line_start":166,"line_end":166,"column_start":5,"column_end":41}},{"value":"/ # #[derive(Clone, Copy, Debug, Eq, Hash, Ord, PartialEq, PartialOrd)]","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pest-2.2.1\\src\\span.rs","byte_start":149996,"byte_end":150069,"line_start":167,"line_end":167,"column_start":5,"column_end":78}},{"value":"/ enum Rule {}","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pest-2.2.1\\src\\span.rs","byte_start":150074,"byte_end":150090,"line_start":168,"line_end":168,"column_start":5,"column_end":21}},{"value":"/","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pest-2.2.1\\src\\span.rs","byte_start":150095,"byte_end":150098,"line_start":169,"line_end":169,"column_start":5,"column_end":8}},{"value":"/ let input = \"abc\";","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pest-2.2.1\\src\\span.rs","byte_start":150103,"byte_end":150125,"line_start":170,"line_end":170,"column_start":5,"column_end":27}},{"value":"/ let mut state: Box<pest::ParserState<Rule>> = pest::ParserState::new(input).skip(1).unwrap();","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pest-2.2.1\\src\\span.rs","byte_start":150130,"byte_end":150227,"line_start":171,"line_end":171,"column_start":5,"column_end":102}},{"value":"/ let start_pos = state.position().clone();","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pest-2.2.1\\src\\span.rs","byte_start":150232,"byte_end":150277,"line_start":172,"line_end":172,"column_start":5,"column_end":50}},{"value":"/ state = state.match_string(\"b\").unwrap();","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pest-2.2.1\\src\\span.rs","byte_start":150282,"byte_end":150327,"line_start":173,"line_end":173,"column_start":5,"column_end":50}},{"value":"/ let span = start_pos.span(&state.position().clone());","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pest-2.2.1\\src\\span.rs","byte_start":150332,"byte_end":150389,"line_start":174,"line_end":174,"column_start":5,"column_end":62}},{"value":"/ assert_eq!(span.as_str(), \"b\");","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pest-2.2.1\\src\\span.rs","byte_start":150394,"byte_end":150429,"line_start":175,"line_end":175,"column_start":5,"column_end":40}},{"value":"/ ```","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pest-2.2.1\\src\\span.rs","byte_start":150434,"byte_end":150441,"line_start":176,"line_end":176,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pest-2.2.1\\src\\span.rs","byte_start":150446,"byte_end":150455,"line_start":177,"line_end":177,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":686},"span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pest-2.2.1\\src\\span.rs","byte_start":151301,"byte_end":151306,"line_start":201,"line_end":201,"column_start":12,"column_end":17},"name":"lines","qualname":"<Span>::lines","value":"pub fn lines(&Self) -> Lines","parent":null,"children":[],"decl_id":null,"docs":" Iterates over all lines (partially) covered by this span.","sig":null,"attributes":[{"value":"/ Iterates over all lines (partially) covered by this span.","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pest-2.2.1\\src\\span.rs","byte_start":150617,"byte_end":150678,"line_start":183,"line_end":183,"column_start":5,"column_end":66}},{"value":"/","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pest-2.2.1\\src\\span.rs","byte_start":150683,"byte_end":150686,"line_start":184,"line_end":184,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pest-2.2.1\\src\\span.rs","byte_start":150691,"byte_end":150705,"line_start":185,"line_end":185,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pest-2.2.1\\src\\span.rs","byte_start":150710,"byte_end":150713,"line_start":186,"line_end":186,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pest-2.2.1\\src\\span.rs","byte_start":150718,"byte_end":150725,"line_start":187,"line_end":187,"column_start":5,"column_end":12}},{"value":"/ # use pest;","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pest-2.2.1\\src\\span.rs","byte_start":150730,"byte_end":150745,"line_start":188,"line_end":188,"column_start":5,"column_end":20}},{"value":"/ # #[allow(non_camel_case_types)]","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pest-2.2.1\\src\\span.rs","byte_start":150750,"byte_end":150786,"line_start":189,"line_end":189,"column_start":5,"column_end":41}},{"value":"/ # #[derive(Clone, Copy, Debug, Eq, Hash, Ord, PartialEq, PartialOrd)]","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pest-2.2.1\\src\\span.rs","byte_start":150791,"byte_end":150864,"line_start":190,"line_end":190,"column_start":5,"column_end":78}},{"value":"/ enum Rule {}","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pest-2.2.1\\src\\span.rs","byte_start":150869,"byte_end":150885,"line_start":191,"line_end":191,"column_start":5,"column_end":21}},{"value":"/","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pest-2.2.1\\src\\span.rs","byte_start":150890,"byte_end":150893,"line_start":192,"line_end":192,"column_start":5,"column_end":8}},{"value":"/ let input = \"a\\nb\\nc\";","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pest-2.2.1\\src\\span.rs","byte_start":150898,"byte_end":150924,"line_start":193,"line_end":193,"column_start":5,"column_end":31}},{"value":"/ let mut state: Box<pest::ParserState<Rule>> = pest::ParserState::new(input).skip(2).unwrap();","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pest-2.2.1\\src\\span.rs","byte_start":150929,"byte_end":151026,"line_start":194,"line_end":194,"column_start":5,"column_end":102}},{"value":"/ let start_pos = state.position().clone();","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pest-2.2.1\\src\\span.rs","byte_start":151031,"byte_end":151076,"line_start":195,"line_end":195,"column_start":5,"column_end":50}},{"value":"/ state = state.match_string(\"b\\nc\").unwrap();","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pest-2.2.1\\src\\span.rs","byte_start":151081,"byte_end":151129,"line_start":196,"line_end":196,"column_start":5,"column_end":53}},{"value":"/ let span = start_pos.span(&state.position().clone());","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pest-2.2.1\\src\\span.rs","byte_start":151134,"byte_end":151191,"line_start":197,"line_end":197,"column_start":5,"column_end":62}},{"value":"/ assert_eq!(span.lines().collect::<Vec<_>>(), vec![\"b\\n\", \"c\"]);","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pest-2.2.1\\src\\span.rs","byte_start":151196,"byte_end":151263,"line_start":198,"line_end":198,"column_start":5,"column_end":72}},{"value":"/ ```","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pest-2.2.1\\src\\span.rs","byte_start":151268,"byte_end":151275,"line_start":199,"line_end":199,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pest-2.2.1\\src\\span.rs","byte_start":151280,"byte_end":151289,"line_start":200,"line_end":200,"column_start":5,"column_end":14}}]},{"kind":"Struct","id":{"krate":0,"index":699},"span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pest-2.2.1\\src\\span.rs","byte_start":152299,"byte_end":152304,"line_start":240,"line_end":240,"column_start":12,"column_end":17},"name":"Lines","qualname":"::span::Lines","value":"Lines {  }","parent":null,"children":[{"krate":0,"index":701},{"krate":0,"index":702}],"decl_id":null,"docs":" Line iterator for Spans, created by [`Span::lines()`].","sig":null,"attributes":[{"value":"/ Line iterator for Spans, created by [`Span::lines()`].","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pest-2.2.1\\src\\span.rs","byte_start":152096,"byte_end":152154,"line_start":235,"line_end":235,"column_start":1,"column_end":59}},{"value":"/","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pest-2.2.1\\src\\span.rs","byte_start":152155,"byte_end":152158,"line_start":236,"line_end":236,"column_start":1,"column_end":4}},{"value":"/ Iterates all lines that are at least partially covered by the span.","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pest-2.2.1\\src\\span.rs","byte_start":152159,"byte_end":152230,"line_start":237,"line_end":237,"column_start":1,"column_end":72}},{"value":"/","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pest-2.2.1\\src\\span.rs","byte_start":152231,"byte_end":152234,"line_start":238,"line_end":238,"column_start":1,"column_end":4}},{"value":"/ [`Span::lines()`]: struct.Span.html#method.lines","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pest-2.2.1\\src\\span.rs","byte_start":152235,"byte_end":152287,"line_start":239,"line_end":239,"column_start":1,"column_end":53}}]},{"kind":"StructVariant","id":{"krate":0,"index":1046},"span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pest-2.2.1\\src\\token.rs","byte_start":160394,"byte_end":160399,"line_start":16,"line_end":16,"column_start":5,"column_end":10},"name":"Start","qualname":"::token::Token::Start","value":"Token::Start { rule, pos }","parent":{"krate":0,"index":1043},"children":[],"decl_id":null,"docs":" The starting `Position` of a matched `Rule`\n","sig":null,"attributes":[{"value":"/ The starting `Position` of a matched `Rule`","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pest-2.2.1\\src\\token.rs","byte_start":160342,"byte_end":160389,"line_start":15,"line_end":15,"column_start":5,"column_end":52}}]},{"kind":"StructVariant","id":{"krate":0,"index":1049},"span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pest-2.2.1\\src\\token.rs","byte_start":160486,"byte_end":160489,"line_start":18,"line_end":18,"column_start":5,"column_end":8},"name":"End","qualname":"::token::Token::End","value":"Token::End { rule, pos }","parent":{"krate":0,"index":1043},"children":[],"decl_id":null,"docs":" The ending `Position` of a matched `Rule`\n","sig":null,"attributes":[{"value":"/ The ending `Position` of a matched `Rule`","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pest-2.2.1\\src\\token.rs","byte_start":160436,"byte_end":160481,"line_start":17,"line_end":17,"column_start":5,"column_end":50}}]},{"kind":"Enum","id":{"krate":0,"index":1043},"span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pest-2.2.1\\src\\token.rs","byte_start":160323,"byte_end":160328,"line_start":14,"line_end":14,"column_start":10,"column_end":15},"name":"Token","qualname":"::token::Token","value":"pub enum Token<'i, R> {\n    Start {\n            rule: R,\n            pos: Position,\n        },\n    End {\n            rule: R,\n            pos: Position,\n        },\n}","parent":null,"children":[{"krate":0,"index":1046},{"krate":0,"index":1049}],"decl_id":null,"docs":" A token generated by a `Parser`.\n","sig":null,"attributes":[{"value":"/ A token generated by a `Parser`.","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pest-2.2.1\\src\\token.rs","byte_start":160232,"byte_end":160268,"line_start":12,"line_end":12,"column_start":1,"column_end":37}}]},{"kind":"Mod","id":{"krate":0,"index":741},"span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pest-2.2.1\\src\\unicode\\mod.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"unicode","qualname":"::unicode","value":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pest-2.2.1\\src\\unicode\\mod.rs","parent":null,"children":[{"krate":0,"index":742},{"krate":0,"index":745},{"krate":0,"index":1080},{"krate":0,"index":1142},{"krate":0,"index":1143},{"krate":0,"index":1144},{"krate":0,"index":1145},{"krate":0,"index":1146},{"krate":0,"index":1147},{"krate":0,"index":1148},{"krate":0,"index":1149},{"krate":0,"index":1150},{"krate":0,"index":1151},{"krate":0,"index":1152},{"krate":0,"index":1153},{"krate":0,"index":1154},{"krate":0,"index":1155},{"krate":0,"index":1156},{"krate":0,"index":1157},{"krate":0,"index":1158},{"krate":0,"index":1159},{"krate":0,"index":1160},{"krate":0,"index":1161},{"krate":0,"index":1162},{"krate":0,"index":1163},{"krate":0,"index":1164},{"krate":0,"index":1165},{"krate":0,"index":1166},{"krate":0,"index":1167},{"krate":0,"index":1168},{"krate":0,"index":1169},{"krate":0,"index":1170},{"krate":0,"index":1171},{"krate":0,"index":1172},{"krate":0,"index":1173},{"krate":0,"index":1174},{"krate":0,"index":1175},{"krate":0,"index":1176},{"krate":0,"index":1177},{"krate":0,"index":1178},{"krate":0,"index":1179},{"krate":0,"index":1180},{"krate":0,"index":1181},{"krate":0,"index":1182},{"krate":0,"index":1183},{"krate":0,"index":1184},{"krate":0,"index":1185},{"krate":0,"index":1186},{"krate":0,"index":1187},{"krate":0,"index":1188},{"krate":0,"index":1189},{"krate":0,"index":1190},{"krate":0,"index":1191},{"krate":0,"index":1192},{"krate":0,"index":1193},{"krate":0,"index":1194},{"krate":0,"index":1234},{"krate":0,"index":1235},{"krate":0,"index":1236},{"krate":0,"index":1237},{"krate":0,"index":1238},{"krate":0,"index":1239},{"krate":0,"index":1240},{"krate":0,"index":1241},{"krate":0,"index":1242},{"krate":0,"index":1243},{"krate":0,"index":1244},{"krate":0,"index":1245},{"krate":0,"index":1246},{"krate":0,"index":1247},{"krate":0,"index":1248},{"krate":0,"index":1249},{"krate":0,"index":1250},{"krate":0,"index":1251},{"krate":0,"index":1252},{"krate":0,"index":1253},{"krate":0,"index":1254},{"krate":0,"index":1255},{"krate":0,"index":1256},{"krate":0,"index":1257},{"krate":0,"index":1258},{"krate":0,"index":1259},{"krate":0,"index":1260},{"krate":0,"index":1261},{"krate":0,"index":1262},{"krate":0,"index":1263},{"krate":0,"index":1264},{"krate":0,"index":1265},{"krate":0,"index":1266},{"krate":0,"index":1267},{"krate":0,"index":1268},{"krate":0,"index":1269},{"krate":0,"index":1270},{"krate":0,"index":1271},{"krate":0,"index":746}],"decl_id":null,"docs":" Character inclusion in binary or General_Category value Unicode sets.","sig":null,"attributes":[{"value":"/ Character inclusion in binary or General_Category value Unicode sets.","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pest-2.2.1\\src\\unicode\\mod.rs","byte_start":160525,"byte_end":160598,"line_start":1,"line_end":1,"column_start":1,"column_end":74}},{"value":"/","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pest-2.2.1\\src\\unicode\\mod.rs","byte_start":160599,"byte_end":160602,"line_start":2,"line_end":2,"column_start":1,"column_end":4}},{"value":"/ We rely on dead code elimination to remove the tables that aren't needed.","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pest-2.2.1\\src\\unicode\\mod.rs","byte_start":160603,"byte_end":160680,"line_start":3,"line_end":3,"column_start":1,"column_end":78}},{"value":"allow(bad_style)","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pest-2.2.1\\src\\unicode\\mod.rs","byte_start":160682,"byte_end":160702,"line_start":5,"line_end":5,"column_start":1,"column_end":21}},{"value":"allow(clippy :: all)","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pest-2.2.1\\src\\unicode\\mod.rs","byte_start":160703,"byte_end":160725,"line_start":6,"line_end":6,"column_start":1,"column_end":23}}]},{"kind":"Function","id":{"krate":0,"index":1142},"span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pest-2.2.1\\src\\unicode\\mod.rs","byte_start":161208,"byte_end":161218,"line_start":29,"line_end":29,"column_start":9,"column_end":19},"name":"ALPHABETIC","qualname":"::unicode::ALPHABETIC","value":"pub fn ALPHABETIC(char) -> bool","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Function","id":{"krate":0,"index":1143},"span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pest-2.2.1\\src\\unicode\\mod.rs","byte_start":161220,"byte_end":161232,"line_start":29,"line_end":29,"column_start":21,"column_end":33},"name":"BIDI_CONTROL","qualname":"::unicode::BIDI_CONTROL","value":"pub fn BIDI_CONTROL(char) -> bool","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Function","id":{"krate":0,"index":1144},"span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pest-2.2.1\\src\\unicode\\mod.rs","byte_start":161234,"byte_end":161248,"line_start":29,"line_end":29,"column_start":35,"column_end":49},"name":"CASE_IGNORABLE","qualname":"::unicode::CASE_IGNORABLE","value":"pub fn CASE_IGNORABLE(char) -> bool","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Function","id":{"krate":0,"index":1145},"span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pest-2.2.1\\src\\unicode\\mod.rs","byte_start":161250,"byte_end":161255,"line_start":29,"line_end":29,"column_start":51,"column_end":56},"name":"CASED","qualname":"::unicode::CASED","value":"pub fn CASED(char) -> bool","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Function","id":{"krate":0,"index":1146},"span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pest-2.2.1\\src\\unicode\\mod.rs","byte_start":161257,"byte_end":161280,"line_start":29,"line_end":29,"column_start":58,"column_end":81},"name":"CHANGES_WHEN_CASEFOLDED","qualname":"::unicode::CHANGES_WHEN_CASEFOLDED","value":"pub fn CHANGES_WHEN_CASEFOLDED(char) -> bool","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Function","id":{"krate":0,"index":1147},"span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pest-2.2.1\\src\\unicode\\mod.rs","byte_start":161290,"byte_end":161313,"line_start":30,"line_end":30,"column_start":9,"column_end":32},"name":"CHANGES_WHEN_CASEMAPPED","qualname":"::unicode::CHANGES_WHEN_CASEMAPPED","value":"pub fn CHANGES_WHEN_CASEMAPPED(char) -> bool","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Function","id":{"krate":0,"index":1148},"span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pest-2.2.1\\src\\unicode\\mod.rs","byte_start":161315,"byte_end":161338,"line_start":30,"line_end":30,"column_start":34,"column_end":57},"name":"CHANGES_WHEN_LOWERCASED","qualname":"::unicode::CHANGES_WHEN_LOWERCASED","value":"pub fn CHANGES_WHEN_LOWERCASED(char) -> bool","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Function","id":{"krate":0,"index":1149},"span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pest-2.2.1\\src\\unicode\\mod.rs","byte_start":161340,"byte_end":161363,"line_start":30,"line_end":30,"column_start":59,"column_end":82},"name":"CHANGES_WHEN_TITLECASED","qualname":"::unicode::CHANGES_WHEN_TITLECASED","value":"pub fn CHANGES_WHEN_TITLECASED(char) -> bool","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Function","id":{"krate":0,"index":1150},"span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pest-2.2.1\\src\\unicode\\mod.rs","byte_start":161373,"byte_end":161396,"line_start":31,"line_end":31,"column_start":9,"column_end":32},"name":"CHANGES_WHEN_UPPERCASED","qualname":"::unicode::CHANGES_WHEN_UPPERCASED","value":"pub fn CHANGES_WHEN_UPPERCASED(char) -> bool","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Function","id":{"krate":0,"index":1151},"span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pest-2.2.1\\src\\unicode\\mod.rs","byte_start":161398,"byte_end":161402,"line_start":31,"line_end":31,"column_start":34,"column_end":38},"name":"DASH","qualname":"::unicode::DASH","value":"pub fn DASH(char) -> bool","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Function","id":{"krate":0,"index":1152},"span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pest-2.2.1\\src\\unicode\\mod.rs","byte_start":161404,"byte_end":161432,"line_start":31,"line_end":31,"column_start":40,"column_end":68},"name":"DEFAULT_IGNORABLE_CODE_POINT","qualname":"::unicode::DEFAULT_IGNORABLE_CODE_POINT","value":"pub fn DEFAULT_IGNORABLE_CODE_POINT(char) -> bool","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Function","id":{"krate":0,"index":1153},"span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pest-2.2.1\\src\\unicode\\mod.rs","byte_start":161434,"byte_end":161444,"line_start":31,"line_end":31,"column_start":70,"column_end":80},"name":"DEPRECATED","qualname":"::unicode::DEPRECATED","value":"pub fn DEPRECATED(char) -> bool","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Function","id":{"krate":0,"index":1154},"span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pest-2.2.1\\src\\unicode\\mod.rs","byte_start":161446,"byte_end":161455,"line_start":31,"line_end":31,"column_start":82,"column_end":91},"name":"DIACRITIC","qualname":"::unicode::DIACRITIC","value":"pub fn DIACRITIC(char) -> bool","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Function","id":{"krate":0,"index":1155},"span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pest-2.2.1\\src\\unicode\\mod.rs","byte_start":161465,"byte_end":161473,"line_start":32,"line_end":32,"column_start":9,"column_end":17},"name":"EXTENDER","qualname":"::unicode::EXTENDER","value":"pub fn EXTENDER(char) -> bool","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Function","id":{"krate":0,"index":1156},"span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pest-2.2.1\\src\\unicode\\mod.rs","byte_start":161475,"byte_end":161488,"line_start":32,"line_end":32,"column_start":19,"column_end":32},"name":"GRAPHEME_BASE","qualname":"::unicode::GRAPHEME_BASE","value":"pub fn GRAPHEME_BASE(char) -> bool","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Function","id":{"krate":0,"index":1157},"span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pest-2.2.1\\src\\unicode\\mod.rs","byte_start":161490,"byte_end":161505,"line_start":32,"line_end":32,"column_start":34,"column_end":49},"name":"GRAPHEME_EXTEND","qualname":"::unicode::GRAPHEME_EXTEND","value":"pub fn GRAPHEME_EXTEND(char) -> bool","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Function","id":{"krate":0,"index":1158},"span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pest-2.2.1\\src\\unicode\\mod.rs","byte_start":161507,"byte_end":161520,"line_start":32,"line_end":32,"column_start":51,"column_end":64},"name":"GRAPHEME_LINK","qualname":"::unicode::GRAPHEME_LINK","value":"pub fn GRAPHEME_LINK(char) -> bool","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Function","id":{"krate":0,"index":1159},"span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pest-2.2.1\\src\\unicode\\mod.rs","byte_start":161522,"byte_end":161531,"line_start":32,"line_end":32,"column_start":66,"column_end":75},"name":"HEX_DIGIT","qualname":"::unicode::HEX_DIGIT","value":"pub fn HEX_DIGIT(char) -> bool","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Function","id":{"krate":0,"index":1160},"span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pest-2.2.1\\src\\unicode\\mod.rs","byte_start":161533,"byte_end":161539,"line_start":32,"line_end":32,"column_start":77,"column_end":83},"name":"HYPHEN","qualname":"::unicode::HYPHEN","value":"pub fn HYPHEN(char) -> bool","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Function","id":{"krate":0,"index":1161},"span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pest-2.2.1\\src\\unicode\\mod.rs","byte_start":161549,"byte_end":161568,"line_start":33,"line_end":33,"column_start":9,"column_end":28},"name":"IDS_BINARY_OPERATOR","qualname":"::unicode::IDS_BINARY_OPERATOR","value":"pub fn IDS_BINARY_OPERATOR(char) -> bool","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Function","id":{"krate":0,"index":1162},"span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pest-2.2.1\\src\\unicode\\mod.rs","byte_start":161570,"byte_end":161590,"line_start":33,"line_end":33,"column_start":30,"column_end":50},"name":"IDS_TRINARY_OPERATOR","qualname":"::unicode::IDS_TRINARY_OPERATOR","value":"pub fn IDS_TRINARY_OPERATOR(char) -> bool","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Function","id":{"krate":0,"index":1163},"span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pest-2.2.1\\src\\unicode\\mod.rs","byte_start":161592,"byte_end":161603,"line_start":33,"line_end":33,"column_start":52,"column_end":63},"name":"ID_CONTINUE","qualname":"::unicode::ID_CONTINUE","value":"pub fn ID_CONTINUE(char) -> bool","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Function","id":{"krate":0,"index":1164},"span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pest-2.2.1\\src\\unicode\\mod.rs","byte_start":161605,"byte_end":161613,"line_start":33,"line_end":33,"column_start":65,"column_end":73},"name":"ID_START","qualname":"::unicode::ID_START","value":"pub fn ID_START(char) -> bool","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Function","id":{"krate":0,"index":1165},"span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pest-2.2.1\\src\\unicode\\mod.rs","byte_start":161615,"byte_end":161626,"line_start":33,"line_end":33,"column_start":75,"column_end":86},"name":"IDEOGRAPHIC","qualname":"::unicode::IDEOGRAPHIC","value":"pub fn IDEOGRAPHIC(char) -> bool","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Function","id":{"krate":0,"index":1166},"span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pest-2.2.1\\src\\unicode\\mod.rs","byte_start":161628,"byte_end":161640,"line_start":33,"line_end":33,"column_start":88,"column_end":100},"name":"JOIN_CONTROL","qualname":"::unicode::JOIN_CONTROL","value":"pub fn JOIN_CONTROL(char) -> bool","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Function","id":{"krate":0,"index":1167},"span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pest-2.2.1\\src\\unicode\\mod.rs","byte_start":161650,"byte_end":161673,"line_start":34,"line_end":34,"column_start":9,"column_end":32},"name":"LOGICAL_ORDER_EXCEPTION","qualname":"::unicode::LOGICAL_ORDER_EXCEPTION","value":"pub fn LOGICAL_ORDER_EXCEPTION(char) -> bool","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Function","id":{"krate":0,"index":1168},"span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pest-2.2.1\\src\\unicode\\mod.rs","byte_start":161675,"byte_end":161684,"line_start":34,"line_end":34,"column_start":34,"column_end":43},"name":"LOWERCASE","qualname":"::unicode::LOWERCASE","value":"pub fn LOWERCASE(char) -> bool","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Function","id":{"krate":0,"index":1169},"span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pest-2.2.1\\src\\unicode\\mod.rs","byte_start":161686,"byte_end":161690,"line_start":34,"line_end":34,"column_start":45,"column_end":49},"name":"MATH","qualname":"::unicode::MATH","value":"pub fn MATH(char) -> bool","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Function","id":{"krate":0,"index":1170},"span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pest-2.2.1\\src\\unicode\\mod.rs","byte_start":161692,"byte_end":161715,"line_start":34,"line_end":34,"column_start":51,"column_end":74},"name":"NONCHARACTER_CODE_POINT","qualname":"::unicode::NONCHARACTER_CODE_POINT","value":"pub fn NONCHARACTER_CODE_POINT(char) -> bool","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Function","id":{"krate":0,"index":1171},"span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pest-2.2.1\\src\\unicode\\mod.rs","byte_start":161717,"byte_end":161733,"line_start":34,"line_end":34,"column_start":76,"column_end":92},"name":"OTHER_ALPHABETIC","qualname":"::unicode::OTHER_ALPHABETIC","value":"pub fn OTHER_ALPHABETIC(char) -> bool","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Function","id":{"krate":0,"index":1172},"span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pest-2.2.1\\src\\unicode\\mod.rs","byte_start":161743,"byte_end":161777,"line_start":35,"line_end":35,"column_start":9,"column_end":43},"name":"OTHER_DEFAULT_IGNORABLE_CODE_POINT","qualname":"::unicode::OTHER_DEFAULT_IGNORABLE_CODE_POINT","value":"pub fn OTHER_DEFAULT_IGNORABLE_CODE_POINT(char) -> bool","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Function","id":{"krate":0,"index":1173},"span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pest-2.2.1\\src\\unicode\\mod.rs","byte_start":161779,"byte_end":161800,"line_start":35,"line_end":35,"column_start":45,"column_end":66},"name":"OTHER_GRAPHEME_EXTEND","qualname":"::unicode::OTHER_GRAPHEME_EXTEND","value":"pub fn OTHER_GRAPHEME_EXTEND(char) -> bool","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Function","id":{"krate":0,"index":1174},"span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pest-2.2.1\\src\\unicode\\mod.rs","byte_start":161802,"byte_end":161819,"line_start":35,"line_end":35,"column_start":68,"column_end":85},"name":"OTHER_ID_CONTINUE","qualname":"::unicode::OTHER_ID_CONTINUE","value":"pub fn OTHER_ID_CONTINUE(char) -> bool","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Function","id":{"krate":0,"index":1175},"span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pest-2.2.1\\src\\unicode\\mod.rs","byte_start":161829,"byte_end":161843,"line_start":36,"line_end":36,"column_start":9,"column_end":23},"name":"OTHER_ID_START","qualname":"::unicode::OTHER_ID_START","value":"pub fn OTHER_ID_START(char) -> bool","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Function","id":{"krate":0,"index":1176},"span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pest-2.2.1\\src\\unicode\\mod.rs","byte_start":161845,"byte_end":161860,"line_start":36,"line_end":36,"column_start":25,"column_end":40},"name":"OTHER_LOWERCASE","qualname":"::unicode::OTHER_LOWERCASE","value":"pub fn OTHER_LOWERCASE(char) -> bool","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Function","id":{"krate":0,"index":1177},"span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pest-2.2.1\\src\\unicode\\mod.rs","byte_start":161862,"byte_end":161872,"line_start":36,"line_end":36,"column_start":42,"column_end":52},"name":"OTHER_MATH","qualname":"::unicode::OTHER_MATH","value":"pub fn OTHER_MATH(char) -> bool","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Function","id":{"krate":0,"index":1178},"span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pest-2.2.1\\src\\unicode\\mod.rs","byte_start":161874,"byte_end":161889,"line_start":36,"line_end":36,"column_start":54,"column_end":69},"name":"OTHER_UPPERCASE","qualname":"::unicode::OTHER_UPPERCASE","value":"pub fn OTHER_UPPERCASE(char) -> bool","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Function","id":{"krate":0,"index":1179},"span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pest-2.2.1\\src\\unicode\\mod.rs","byte_start":161891,"byte_end":161905,"line_start":36,"line_end":36,"column_start":71,"column_end":85},"name":"PATTERN_SYNTAX","qualname":"::unicode::PATTERN_SYNTAX","value":"pub fn PATTERN_SYNTAX(char) -> bool","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Function","id":{"krate":0,"index":1180},"span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pest-2.2.1\\src\\unicode\\mod.rs","byte_start":161915,"byte_end":161934,"line_start":37,"line_end":37,"column_start":9,"column_end":28},"name":"PATTERN_WHITE_SPACE","qualname":"::unicode::PATTERN_WHITE_SPACE","value":"pub fn PATTERN_WHITE_SPACE(char) -> bool","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Function","id":{"krate":0,"index":1181},"span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pest-2.2.1\\src\\unicode\\mod.rs","byte_start":161936,"byte_end":161964,"line_start":37,"line_end":37,"column_start":30,"column_end":58},"name":"PREPENDED_CONCATENATION_MARK","qualname":"::unicode::PREPENDED_CONCATENATION_MARK","value":"pub fn PREPENDED_CONCATENATION_MARK(char) -> bool","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Function","id":{"krate":0,"index":1182},"span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pest-2.2.1\\src\\unicode\\mod.rs","byte_start":161966,"byte_end":161980,"line_start":37,"line_end":37,"column_start":60,"column_end":74},"name":"QUOTATION_MARK","qualname":"::unicode::QUOTATION_MARK","value":"pub fn QUOTATION_MARK(char) -> bool","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Function","id":{"krate":0,"index":1183},"span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pest-2.2.1\\src\\unicode\\mod.rs","byte_start":161982,"byte_end":161989,"line_start":37,"line_end":37,"column_start":76,"column_end":83},"name":"RADICAL","qualname":"::unicode::RADICAL","value":"pub fn RADICAL(char) -> bool","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Function","id":{"krate":0,"index":1184},"span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pest-2.2.1\\src\\unicode\\mod.rs","byte_start":161999,"byte_end":162017,"line_start":38,"line_end":38,"column_start":9,"column_end":27},"name":"REGIONAL_INDICATOR","qualname":"::unicode::REGIONAL_INDICATOR","value":"pub fn REGIONAL_INDICATOR(char) -> bool","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Function","id":{"krate":0,"index":1185},"span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pest-2.2.1\\src\\unicode\\mod.rs","byte_start":162019,"byte_end":162036,"line_start":38,"line_end":38,"column_start":29,"column_end":46},"name":"SENTENCE_TERMINAL","qualname":"::unicode::SENTENCE_TERMINAL","value":"pub fn SENTENCE_TERMINAL(char) -> bool","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Function","id":{"krate":0,"index":1186},"span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pest-2.2.1\\src\\unicode\\mod.rs","byte_start":162038,"byte_end":162049,"line_start":38,"line_end":38,"column_start":48,"column_end":59},"name":"SOFT_DOTTED","qualname":"::unicode::SOFT_DOTTED","value":"pub fn SOFT_DOTTED(char) -> bool","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Function","id":{"krate":0,"index":1187},"span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pest-2.2.1\\src\\unicode\\mod.rs","byte_start":162051,"byte_end":162071,"line_start":38,"line_end":38,"column_start":61,"column_end":81},"name":"TERMINAL_PUNCTUATION","qualname":"::unicode::TERMINAL_PUNCTUATION","value":"pub fn TERMINAL_PUNCTUATION(char) -> bool","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Function","id":{"krate":0,"index":1188},"span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pest-2.2.1\\src\\unicode\\mod.rs","byte_start":162073,"byte_end":162090,"line_start":38,"line_end":38,"column_start":83,"column_end":100},"name":"UNIFIED_IDEOGRAPH","qualname":"::unicode::UNIFIED_IDEOGRAPH","value":"pub fn UNIFIED_IDEOGRAPH(char) -> bool","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Function","id":{"krate":0,"index":1189},"span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pest-2.2.1\\src\\unicode\\mod.rs","byte_start":162100,"byte_end":162109,"line_start":39,"line_end":39,"column_start":9,"column_end":18},"name":"UPPERCASE","qualname":"::unicode::UPPERCASE","value":"pub fn UPPERCASE(char) -> bool","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Function","id":{"krate":0,"index":1190},"span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pest-2.2.1\\src\\unicode\\mod.rs","byte_start":162111,"byte_end":162129,"line_start":39,"line_end":39,"column_start":20,"column_end":38},"name":"VARIATION_SELECTOR","qualname":"::unicode::VARIATION_SELECTOR","value":"pub fn VARIATION_SELECTOR(char) -> bool","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Function","id":{"krate":0,"index":1191},"span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pest-2.2.1\\src\\unicode\\mod.rs","byte_start":162131,"byte_end":162142,"line_start":39,"line_end":39,"column_start":40,"column_end":51},"name":"WHITE_SPACE","qualname":"::unicode::WHITE_SPACE","value":"pub fn WHITE_SPACE(char) -> bool","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Function","id":{"krate":0,"index":1192},"span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pest-2.2.1\\src\\unicode\\mod.rs","byte_start":162144,"byte_end":162156,"line_start":39,"line_end":39,"column_start":53,"column_end":65},"name":"XID_CONTINUE","qualname":"::unicode::XID_CONTINUE","value":"pub fn XID_CONTINUE(char) -> bool","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Function","id":{"krate":0,"index":1193},"span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pest-2.2.1\\src\\unicode\\mod.rs","byte_start":162158,"byte_end":162167,"line_start":39,"line_end":39,"column_start":67,"column_end":76},"name":"XID_START","qualname":"::unicode::XID_START","value":"pub fn XID_START(char) -> bool","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Function","id":{"krate":0,"index":1234},"span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pest-2.2.1\\src\\unicode\\mod.rs","byte_start":162209,"byte_end":162221,"line_start":44,"line_end":44,"column_start":9,"column_end":21},"name":"CASED_LETTER","qualname":"::unicode::CASED_LETTER","value":"pub fn CASED_LETTER(char) -> bool","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Function","id":{"krate":0,"index":1235},"span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pest-2.2.1\\src\\unicode\\mod.rs","byte_start":162223,"byte_end":162240,"line_start":44,"line_end":44,"column_start":23,"column_end":40},"name":"CLOSE_PUNCTUATION","qualname":"::unicode::CLOSE_PUNCTUATION","value":"pub fn CLOSE_PUNCTUATION(char) -> bool","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Function","id":{"krate":0,"index":1236},"span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pest-2.2.1\\src\\unicode\\mod.rs","byte_start":162242,"byte_end":162263,"line_start":44,"line_end":44,"column_start":42,"column_end":63},"name":"CONNECTOR_PUNCTUATION","qualname":"::unicode::CONNECTOR_PUNCTUATION","value":"pub fn CONNECTOR_PUNCTUATION(char) -> bool","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Function","id":{"krate":0,"index":1237},"span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pest-2.2.1\\src\\unicode\\mod.rs","byte_start":162265,"byte_end":162272,"line_start":44,"line_end":44,"column_start":65,"column_end":72},"name":"CONTROL","qualname":"::unicode::CONTROL","value":"pub fn CONTROL(char) -> bool","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Function","id":{"krate":0,"index":1238},"span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pest-2.2.1\\src\\unicode\\mod.rs","byte_start":162274,"byte_end":162289,"line_start":44,"line_end":44,"column_start":74,"column_end":89},"name":"CURRENCY_SYMBOL","qualname":"::unicode::CURRENCY_SYMBOL","value":"pub fn CURRENCY_SYMBOL(char) -> bool","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Function","id":{"krate":0,"index":1239},"span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pest-2.2.1\\src\\unicode\\mod.rs","byte_start":162299,"byte_end":162315,"line_start":45,"line_end":45,"column_start":9,"column_end":25},"name":"DASH_PUNCTUATION","qualname":"::unicode::DASH_PUNCTUATION","value":"pub fn DASH_PUNCTUATION(char) -> bool","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Function","id":{"krate":0,"index":1240},"span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pest-2.2.1\\src\\unicode\\mod.rs","byte_start":162317,"byte_end":162331,"line_start":45,"line_end":45,"column_start":27,"column_end":41},"name":"DECIMAL_NUMBER","qualname":"::unicode::DECIMAL_NUMBER","value":"pub fn DECIMAL_NUMBER(char) -> bool","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Function","id":{"krate":0,"index":1241},"span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pest-2.2.1\\src\\unicode\\mod.rs","byte_start":162333,"byte_end":162347,"line_start":45,"line_end":45,"column_start":43,"column_end":57},"name":"ENCLOSING_MARK","qualname":"::unicode::ENCLOSING_MARK","value":"pub fn ENCLOSING_MARK(char) -> bool","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Function","id":{"krate":0,"index":1242},"span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pest-2.2.1\\src\\unicode\\mod.rs","byte_start":162349,"byte_end":162366,"line_start":45,"line_end":45,"column_start":59,"column_end":76},"name":"FINAL_PUNCTUATION","qualname":"::unicode::FINAL_PUNCTUATION","value":"pub fn FINAL_PUNCTUATION(char) -> bool","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Function","id":{"krate":0,"index":1243},"span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pest-2.2.1\\src\\unicode\\mod.rs","byte_start":162368,"byte_end":162374,"line_start":45,"line_end":45,"column_start":78,"column_end":84},"name":"FORMAT","qualname":"::unicode::FORMAT","value":"pub fn FORMAT(char) -> bool","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Function","id":{"krate":0,"index":1244},"span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pest-2.2.1\\src\\unicode\\mod.rs","byte_start":162384,"byte_end":162403,"line_start":46,"line_end":46,"column_start":9,"column_end":28},"name":"INITIAL_PUNCTUATION","qualname":"::unicode::INITIAL_PUNCTUATION","value":"pub fn INITIAL_PUNCTUATION(char) -> bool","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Function","id":{"krate":0,"index":1245},"span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pest-2.2.1\\src\\unicode\\mod.rs","byte_start":162405,"byte_end":162411,"line_start":46,"line_end":46,"column_start":30,"column_end":36},"name":"LETTER","qualname":"::unicode::LETTER","value":"pub fn LETTER(char) -> bool","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Function","id":{"krate":0,"index":1246},"span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pest-2.2.1\\src\\unicode\\mod.rs","byte_start":162413,"byte_end":162426,"line_start":46,"line_end":46,"column_start":38,"column_end":51},"name":"LETTER_NUMBER","qualname":"::unicode::LETTER_NUMBER","value":"pub fn LETTER_NUMBER(char) -> bool","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Function","id":{"krate":0,"index":1247},"span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pest-2.2.1\\src\\unicode\\mod.rs","byte_start":162428,"byte_end":162442,"line_start":46,"line_end":46,"column_start":53,"column_end":67},"name":"LINE_SEPARATOR","qualname":"::unicode::LINE_SEPARATOR","value":"pub fn LINE_SEPARATOR(char) -> bool","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Function","id":{"krate":0,"index":1248},"span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pest-2.2.1\\src\\unicode\\mod.rs","byte_start":162444,"byte_end":162460,"line_start":46,"line_end":46,"column_start":69,"column_end":85},"name":"LOWERCASE_LETTER","qualname":"::unicode::LOWERCASE_LETTER","value":"pub fn LOWERCASE_LETTER(char) -> bool","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Function","id":{"krate":0,"index":1249},"span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pest-2.2.1\\src\\unicode\\mod.rs","byte_start":162462,"byte_end":162466,"line_start":46,"line_end":46,"column_start":87,"column_end":91},"name":"MARK","qualname":"::unicode::MARK","value":"pub fn MARK(char) -> bool","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Function","id":{"krate":0,"index":1250},"span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pest-2.2.1\\src\\unicode\\mod.rs","byte_start":162476,"byte_end":162487,"line_start":47,"line_end":47,"column_start":9,"column_end":20},"name":"MATH_SYMBOL","qualname":"::unicode::MATH_SYMBOL","value":"pub fn MATH_SYMBOL(char) -> bool","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Function","id":{"krate":0,"index":1251},"span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pest-2.2.1\\src\\unicode\\mod.rs","byte_start":162489,"byte_end":162504,"line_start":47,"line_end":47,"column_start":22,"column_end":37},"name":"MODIFIER_LETTER","qualname":"::unicode::MODIFIER_LETTER","value":"pub fn MODIFIER_LETTER(char) -> bool","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Function","id":{"krate":0,"index":1252},"span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pest-2.2.1\\src\\unicode\\mod.rs","byte_start":162506,"byte_end":162521,"line_start":47,"line_end":47,"column_start":39,"column_end":54},"name":"MODIFIER_SYMBOL","qualname":"::unicode::MODIFIER_SYMBOL","value":"pub fn MODIFIER_SYMBOL(char) -> bool","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Function","id":{"krate":0,"index":1253},"span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pest-2.2.1\\src\\unicode\\mod.rs","byte_start":162523,"byte_end":162538,"line_start":47,"line_end":47,"column_start":56,"column_end":71},"name":"NONSPACING_MARK","qualname":"::unicode::NONSPACING_MARK","value":"pub fn NONSPACING_MARK(char) -> bool","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Function","id":{"krate":0,"index":1254},"span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pest-2.2.1\\src\\unicode\\mod.rs","byte_start":162540,"byte_end":162546,"line_start":47,"line_end":47,"column_start":73,"column_end":79},"name":"NUMBER","qualname":"::unicode::NUMBER","value":"pub fn NUMBER(char) -> bool","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Function","id":{"krate":0,"index":1255},"span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pest-2.2.1\\src\\unicode\\mod.rs","byte_start":162548,"byte_end":162564,"line_start":47,"line_end":47,"column_start":81,"column_end":97},"name":"OPEN_PUNCTUATION","qualname":"::unicode::OPEN_PUNCTUATION","value":"pub fn OPEN_PUNCTUATION(char) -> bool","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Function","id":{"krate":0,"index":1256},"span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pest-2.2.1\\src\\unicode\\mod.rs","byte_start":162574,"byte_end":162579,"line_start":48,"line_end":48,"column_start":9,"column_end":14},"name":"OTHER","qualname":"::unicode::OTHER","value":"pub fn OTHER(char) -> bool","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Function","id":{"krate":0,"index":1257},"span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pest-2.2.1\\src\\unicode\\mod.rs","byte_start":162581,"byte_end":162593,"line_start":48,"line_end":48,"column_start":16,"column_end":28},"name":"OTHER_LETTER","qualname":"::unicode::OTHER_LETTER","value":"pub fn OTHER_LETTER(char) -> bool","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Function","id":{"krate":0,"index":1258},"span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pest-2.2.1\\src\\unicode\\mod.rs","byte_start":162595,"byte_end":162607,"line_start":48,"line_end":48,"column_start":30,"column_end":42},"name":"OTHER_NUMBER","qualname":"::unicode::OTHER_NUMBER","value":"pub fn OTHER_NUMBER(char) -> bool","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Function","id":{"krate":0,"index":1259},"span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pest-2.2.1\\src\\unicode\\mod.rs","byte_start":162609,"byte_end":162626,"line_start":48,"line_end":48,"column_start":44,"column_end":61},"name":"OTHER_PUNCTUATION","qualname":"::unicode::OTHER_PUNCTUATION","value":"pub fn OTHER_PUNCTUATION(char) -> bool","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Function","id":{"krate":0,"index":1260},"span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pest-2.2.1\\src\\unicode\\mod.rs","byte_start":162628,"byte_end":162640,"line_start":48,"line_end":48,"column_start":63,"column_end":75},"name":"OTHER_SYMBOL","qualname":"::unicode::OTHER_SYMBOL","value":"pub fn OTHER_SYMBOL(char) -> bool","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Function","id":{"krate":0,"index":1261},"span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pest-2.2.1\\src\\unicode\\mod.rs","byte_start":162642,"byte_end":162661,"line_start":48,"line_end":48,"column_start":77,"column_end":96},"name":"PARAGRAPH_SEPARATOR","qualname":"::unicode::PARAGRAPH_SEPARATOR","value":"pub fn PARAGRAPH_SEPARATOR(char) -> bool","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Function","id":{"krate":0,"index":1262},"span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pest-2.2.1\\src\\unicode\\mod.rs","byte_start":162671,"byte_end":162682,"line_start":49,"line_end":49,"column_start":9,"column_end":20},"name":"PRIVATE_USE","qualname":"::unicode::PRIVATE_USE","value":"pub fn PRIVATE_USE(char) -> bool","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Function","id":{"krate":0,"index":1263},"span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pest-2.2.1\\src\\unicode\\mod.rs","byte_start":162684,"byte_end":162695,"line_start":49,"line_end":49,"column_start":22,"column_end":33},"name":"PUNCTUATION","qualname":"::unicode::PUNCTUATION","value":"pub fn PUNCTUATION(char) -> bool","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Function","id":{"krate":0,"index":1264},"span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pest-2.2.1\\src\\unicode\\mod.rs","byte_start":162697,"byte_end":162706,"line_start":49,"line_end":49,"column_start":35,"column_end":44},"name":"SEPARATOR","qualname":"::unicode::SEPARATOR","value":"pub fn SEPARATOR(char) -> bool","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Function","id":{"krate":0,"index":1265},"span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pest-2.2.1\\src\\unicode\\mod.rs","byte_start":162708,"byte_end":162723,"line_start":49,"line_end":49,"column_start":46,"column_end":61},"name":"SPACE_SEPARATOR","qualname":"::unicode::SPACE_SEPARATOR","value":"pub fn SPACE_SEPARATOR(char) -> bool","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Function","id":{"krate":0,"index":1266},"span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pest-2.2.1\\src\\unicode\\mod.rs","byte_start":162725,"byte_end":162737,"line_start":49,"line_end":49,"column_start":63,"column_end":75},"name":"SPACING_MARK","qualname":"::unicode::SPACING_MARK","value":"pub fn SPACING_MARK(char) -> bool","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Function","id":{"krate":0,"index":1267},"span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pest-2.2.1\\src\\unicode\\mod.rs","byte_start":162739,"byte_end":162748,"line_start":49,"line_end":49,"column_start":77,"column_end":86},"name":"SURROGATE","qualname":"::unicode::SURROGATE","value":"pub fn SURROGATE(char) -> bool","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Function","id":{"krate":0,"index":1268},"span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pest-2.2.1\\src\\unicode\\mod.rs","byte_start":162750,"byte_end":162756,"line_start":49,"line_end":49,"column_start":88,"column_end":94},"name":"SYMBOL","qualname":"::unicode::SYMBOL","value":"pub fn SYMBOL(char) -> bool","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Function","id":{"krate":0,"index":1269},"span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pest-2.2.1\\src\\unicode\\mod.rs","byte_start":162766,"byte_end":162782,"line_start":50,"line_end":50,"column_start":9,"column_end":25},"name":"TITLECASE_LETTER","qualname":"::unicode::TITLECASE_LETTER","value":"pub fn TITLECASE_LETTER(char) -> bool","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Function","id":{"krate":0,"index":1270},"span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pest-2.2.1\\src\\unicode\\mod.rs","byte_start":162784,"byte_end":162794,"line_start":50,"line_end":50,"column_start":27,"column_end":37},"name":"UNASSIGNED","qualname":"::unicode::UNASSIGNED","value":"pub fn UNASSIGNED(char) -> bool","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Function","id":{"krate":0,"index":1271},"span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pest-2.2.1\\src\\unicode\\mod.rs","byte_start":162796,"byte_end":162812,"line_start":50,"line_end":50,"column_start":39,"column_end":55},"name":"UPPERCASE_LETTER","qualname":"::unicode::UPPERCASE_LETTER","value":"pub fn UPPERCASE_LETTER(char) -> bool","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Function","id":{"krate":0,"index":746},"span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pest-2.2.1\\src\\unicode\\mod.rs","byte_start":162831,"byte_end":162838,"line_start":54,"line_end":54,"column_start":8,"column_end":15},"name":"by_name","qualname":"::unicode::by_name","value":"pub fn by_name(&str) -> Option<Box<dyn Fn(char) -> bool>>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Trait","id":{"krate":0,"index":749},"span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pest-2.2.1\\src\\lib.rs","byte_start":3429,"byte_end":3437,"line_start":105,"line_end":105,"column_start":11,"column_end":19},"name":"RuleType","qualname":"::RuleType","value":"RuleType: Copy + Debug + Eq + Hash + Ord","parent":null,"children":[],"decl_id":null,"docs":" A trait which parser rules must implement.","sig":null,"attributes":[{"value":"/ A trait which parser rules must implement.","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pest-2.2.1\\src\\lib.rs","byte_start":3069,"byte_end":3115,"line_start":98,"line_end":98,"column_start":1,"column_end":47}},{"value":"/","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pest-2.2.1\\src\\lib.rs","byte_start":3116,"byte_end":3119,"line_start":99,"line_end":99,"column_start":1,"column_end":4}},{"value":"/ This trait is set up so that any struct that implements all of its required traits will","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pest-2.2.1\\src\\lib.rs","byte_start":3120,"byte_end":3211,"line_start":100,"line_end":100,"column_start":1,"column_end":92}},{"value":"/ automatically implement this trait as well.","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pest-2.2.1\\src\\lib.rs","byte_start":3212,"byte_end":3259,"line_start":101,"line_end":101,"column_start":1,"column_end":48}},{"value":"/","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pest-2.2.1\\src\\lib.rs","byte_start":3260,"byte_end":3263,"line_start":102,"line_end":102,"column_start":1,"column_end":4}},{"value":"/ This is essentially a [trait alias](https://github.com/rust-lang/rfcs/pull/1733). When trait","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pest-2.2.1\\src\\lib.rs","byte_start":3264,"byte_end":3360,"line_start":103,"line_end":103,"column_start":1,"column_end":97}},{"value":"/ aliases are implemented, this may be replaced by one.","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pest-2.2.1\\src\\lib.rs","byte_start":3361,"byte_end":3418,"line_start":104,"line_end":104,"column_start":1,"column_end":58}}]}],"impls":[{"id":4,"kind":"Inherent","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pest-2.2.1\\src\\error.rs","byte_start":6020,"byte_end":6025,"line_start":79,"line_end":79,"column_start":19,"column_end":24},"value":"","parent":null,"children":[{"krate":0,"index":84},{"krate":0,"index":85},{"krate":0,"index":86},{"krate":0,"index":87},{"krate":0,"index":88},{"krate":0,"index":89},{"krate":0,"index":91},{"krate":0,"index":92},{"krate":0,"index":93},{"krate":0,"index":94},{"krate":0,"index":95},{"krate":0,"index":97},{"krate":0,"index":99}],"docs":"","sig":null,"attributes":[]},{"id":5,"kind":"Inherent","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pest-2.2.1\\src\\error.rs","byte_start":18934,"byte_end":18946,"line_start":487,"line_end":487,"column_start":19,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":103}],"docs":"","sig":null,"attributes":[]},{"id":6,"kind":"Inherent","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pest-2.2.1\\src\\iterators\\flat_pairs.rs","byte_start":32008,"byte_end":32017,"line_start":50,"line_end":50,"column_start":23,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":149},{"krate":0,"index":150},{"krate":0,"index":151},{"krate":0,"index":152}],"docs":"","sig":null,"attributes":[]},{"id":7,"kind":"Direct","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pest-2.2.1\\src\\iterators\\flat_pairs.rs","byte_start":33363,"byte_end":33372,"line_start":102,"line_end":102,"column_start":36,"column_end":45},"value":"","parent":null,"children":[{"krate":0,"index":156},{"krate":0,"index":157}],"docs":"","sig":null,"attributes":[]},{"id":8,"kind":"Direct","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pest-2.2.1\\src\\iterators\\flat_pairs.rs","byte_start":33723,"byte_end":33732,"line_start":118,"line_end":118,"column_start":47,"column_end":56},"value":"","parent":null,"children":[{"krate":0,"index":161}],"docs":"","sig":null,"attributes":[]},{"id":9,"kind":"Direct","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pest-2.2.1\\src\\iterators\\flat_pairs.rs","byte_start":34056,"byte_end":34065,"line_start":132,"line_end":132,"column_start":38,"column_end":47},"value":"","parent":null,"children":[{"krate":0,"index":165}],"docs":"","sig":null,"attributes":[]},{"id":10,"kind":"Direct","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pest-2.2.1\\src\\iterators\\flat_pairs.rs","byte_start":34293,"byte_end":34302,"line_start":140,"line_end":140,"column_start":30,"column_end":39},"value":"","parent":null,"children":[{"krate":0,"index":169}],"docs":"","sig":null,"attributes":[]},{"id":11,"kind":"Inherent","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pest-2.2.1\\src\\iterators\\pair.rs","byte_start":37142,"byte_end":37146,"line_start":63,"line_end":63,"column_start":23,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":228},{"krate":0,"index":229},{"krate":0,"index":230},{"krate":0,"index":231},{"krate":0,"index":232},{"krate":0,"index":233},{"krate":0,"index":234},{"krate":0,"index":235}],"docs":"","sig":null,"attributes":[]},{"id":12,"kind":"Inherent","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pest-2.2.1\\src\\iterators\\pair.rs","byte_start":42868,"byte_end":42873,"line_start":262,"line_end":262,"column_start":23,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":239}],"docs":"","sig":null,"attributes":[]},{"id":13,"kind":"Direct","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pest-2.2.1\\src\\iterators\\pair.rs","byte_start":43140,"byte_end":43144,"line_start":270,"line_end":270,"column_start":38,"column_end":42},"value":"","parent":null,"children":[{"krate":0,"index":243}],"docs":"","sig":null,"attributes":[]},{"id":14,"kind":"Direct","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pest-2.2.1\\src\\iterators\\pair.rs","byte_start":43478,"byte_end":43482,"line_start":280,"line_end":280,"column_start":40,"column_end":44},"value":"","parent":null,"children":[{"krate":0,"index":247}],"docs":"","sig":null,"attributes":[]},{"id":15,"kind":"Direct","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pest-2.2.1\\src\\iterators\\pair.rs","byte_start":44202,"byte_end":44206,"line_start":305,"line_end":305,"column_start":38,"column_end":42},"value":"","parent":null,"children":[{"krate":0,"index":251}],"docs":"","sig":null,"attributes":[]},{"id":16,"kind":"Direct","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pest-2.2.1\\src\\iterators\\pair.rs","byte_start":44431,"byte_end":44435,"line_start":313,"line_end":313,"column_start":24,"column_end":28},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":17,"kind":"Direct","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pest-2.2.1\\src\\iterators\\pair.rs","byte_start":44474,"byte_end":44478,"line_start":315,"line_end":315,"column_start":28,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":258}],"docs":"","sig":null,"attributes":[]},{"id":18,"kind":"Inherent","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pest-2.2.1\\src\\iterators\\pairs.rs","byte_start":47677,"byte_end":47682,"line_start":55,"line_end":55,"column_start":23,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":321},{"krate":0,"index":322},{"krate":0,"index":324},{"krate":0,"index":325},{"krate":0,"index":326},{"krate":0,"index":327},{"krate":0,"index":328},{"krate":0,"index":329}],"docs":"","sig":null,"attributes":[]},{"id":19,"kind":"Direct","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pest-2.2.1\\src\\iterators\\pairs.rs","byte_start":52843,"byte_end":52848,"line_start":224,"line_end":224,"column_start":36,"column_end":41},"value":"","parent":null,"children":[{"krate":0,"index":333},{"krate":0,"index":334}],"docs":"","sig":null,"attributes":[]},{"id":20,"kind":"Direct","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pest-2.2.1\\src\\iterators\\pairs.rs","byte_start":53080,"byte_end":53085,"line_start":234,"line_end":234,"column_start":47,"column_end":52},"value":"","parent":null,"children":[{"krate":0,"index":338}],"docs":"","sig":null,"attributes":[]},{"id":21,"kind":"Direct","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pest-2.2.1\\src\\iterators\\pairs.rs","byte_start":53414,"byte_end":53419,"line_start":248,"line_end":248,"column_start":38,"column_end":43},"value":"","parent":null,"children":[{"krate":0,"index":342}],"docs":"","sig":null,"attributes":[]},{"id":22,"kind":"Direct","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pest-2.2.1\\src\\iterators\\pairs.rs","byte_start":53590,"byte_end":53595,"line_start":254,"line_end":254,"column_start":40,"column_end":45},"value":"","parent":null,"children":[{"krate":0,"index":346}],"docs":"","sig":null,"attributes":[]},{"id":23,"kind":"Direct","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pest-2.2.1\\src\\iterators\\pairs.rs","byte_start":53910,"byte_end":53915,"line_start":267,"line_end":267,"column_start":38,"column_end":43},"value":"","parent":null,"children":[{"krate":0,"index":350}],"docs":"","sig":null,"attributes":[]},{"id":24,"kind":"Direct","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pest-2.2.1\\src\\iterators\\pairs.rs","byte_start":54178,"byte_end":54183,"line_start":276,"line_end":276,"column_start":24,"column_end":29},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":25,"kind":"Direct","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pest-2.2.1\\src\\iterators\\pairs.rs","byte_start":54222,"byte_end":54227,"line_start":278,"line_end":278,"column_start":28,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":357}],"docs":"","sig":null,"attributes":[]},{"id":26,"kind":"Inherent","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pest-2.2.1\\src\\iterators\\tokens.rs","byte_start":60493,"byte_end":60499,"line_start":64,"line_end":64,"column_start":23,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":390}],"docs":"","sig":null,"attributes":[]},{"id":27,"kind":"Direct","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pest-2.2.1\\src\\iterators\\tokens.rs","byte_start":61528,"byte_end":61534,"line_start":95,"line_end":95,"column_start":36,"column_end":42},"value":"","parent":null,"children":[{"krate":0,"index":394},{"krate":0,"index":395}],"docs":"","sig":null,"attributes":[]},{"id":28,"kind":"Direct","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pest-2.2.1\\src\\iterators\\tokens.rs","byte_start":61847,"byte_end":61853,"line_start":111,"line_end":111,"column_start":47,"column_end":53},"value":"","parent":null,"children":[{"krate":0,"index":399}],"docs":"","sig":null,"attributes":[]},{"id":29,"kind":"Direct","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pest-2.2.1\\src\\iterators\\tokens.rs","byte_start":62131,"byte_end":62137,"line_start":125,"line_end":125,"column_start":38,"column_end":44},"value":"","parent":null,"children":[{"krate":0,"index":403}],"docs":"","sig":null,"attributes":[]},{"id":30,"kind":"Inherent","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pest-2.2.1\\src\\parser_state.rs","byte_start":81274,"byte_end":81285,"line_start":106,"line_end":106,"column_start":23,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":491},{"krate":0,"index":492},{"krate":0,"index":493},{"krate":0,"index":494},{"krate":0,"index":496},{"krate":0,"index":497},{"krate":0,"index":498},{"krate":0,"index":500},{"krate":0,"index":502},{"krate":0,"index":504},{"krate":0,"index":506},{"krate":0,"index":507},{"krate":0,"index":508},{"krate":0,"index":509},{"krate":0,"index":510},{"krate":0,"index":511},{"krate":0,"index":512},{"krate":0,"index":513},{"krate":0,"index":515},{"krate":0,"index":517},{"krate":0,"index":519},{"krate":0,"index":520},{"krate":0,"index":521},{"krate":0,"index":523},{"krate":0,"index":524},{"krate":0,"index":525},{"krate":0,"index":526},{"krate":0,"index":528},{"krate":0,"index":529},{"krate":0,"index":530}],"docs":"","sig":null,"attributes":[]},{"id":31,"kind":"Inherent","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pest-2.2.1\\src\\position.rs","byte_start":116680,"byte_end":116688,"line_start":29,"line_end":29,"column_start":10,"column_end":18},"value":"","parent":null,"children":[{"krate":0,"index":562},{"krate":0,"index":563},{"krate":0,"index":565},{"krate":0,"index":566},{"krate":0,"index":567},{"krate":0,"index":568},{"krate":0,"index":569},{"krate":0,"index":570},{"krate":0,"index":573},{"krate":0,"index":576},{"krate":0,"index":577},{"krate":0,"index":578},{"krate":0,"index":579},{"krate":0,"index":580},{"krate":0,"index":581},{"krate":0,"index":582},{"krate":0,"index":584},{"krate":0,"index":585},{"krate":0,"index":586}],"docs":"","sig":null,"attributes":[]},{"id":32,"kind":"Direct","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pest-2.2.1\\src\\position.rs","byte_start":128303,"byte_end":128311,"line_start":397,"line_end":397,"column_start":25,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":589}],"docs":"","sig":null,"attributes":[]},{"id":33,"kind":"Direct","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pest-2.2.1\\src\\position.rs","byte_start":128477,"byte_end":128485,"line_start":403,"line_end":403,"column_start":24,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":592}],"docs":"","sig":null,"attributes":[]},{"id":34,"kind":"Direct","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pest-2.2.1\\src\\position.rs","byte_start":128632,"byte_end":128640,"line_start":409,"line_end":409,"column_start":17,"column_end":25},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":35,"kind":"Direct","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pest-2.2.1\\src\\position.rs","byte_start":128673,"byte_end":128681,"line_start":411,"line_end":411,"column_start":25,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":597}],"docs":"","sig":null,"attributes":[]},{"id":36,"kind":"Direct","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pest-2.2.1\\src\\position.rs","byte_start":128919,"byte_end":128927,"line_start":421,"line_end":421,"column_start":18,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":600}],"docs":"","sig":null,"attributes":[]},{"id":37,"kind":"Direct","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pest-2.2.1\\src\\position.rs","byte_start":129115,"byte_end":129123,"line_start":428,"line_end":428,"column_start":19,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":603}],"docs":"","sig":null,"attributes":[]},{"id":38,"kind":"Inherent","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pest-2.2.1\\src\\prec_climber.rs","byte_start":137527,"byte_end":137535,"line_start":124,"line_end":124,"column_start":19,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":629}],"docs":"","sig":null,"attributes":[]},{"id":39,"kind":"Direct","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pest-2.2.1\\src\\prec_climber.rs","byte_start":138209,"byte_end":138217,"line_start":149,"line_end":149,"column_start":29,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":632},{"krate":0,"index":633}],"docs":"","sig":null,"attributes":[]},{"id":40,"kind":"Inherent","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pest-2.2.1\\src\\prec_climber.rs","byte_start":140343,"byte_end":140354,"line_start":212,"line_end":212,"column_start":19,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":638},{"krate":0,"index":641},{"krate":0,"index":644},{"krate":0,"index":650}],"docs":"","sig":null,"attributes":[]},{"id":41,"kind":"Inherent","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pest-2.2.1\\src\\span.rs","byte_start":146205,"byte_end":146209,"line_start":34,"line_end":34,"column_start":10,"column_end":14},"value":"","parent":null,"children":[{"krate":0,"index":678},{"krate":0,"index":679},{"krate":0,"index":680},{"krate":0,"index":681},{"krate":0,"index":682},{"krate":0,"index":683},{"krate":0,"index":684},{"krate":0,"index":685},{"krate":0,"index":686}],"docs":"","sig":null,"attributes":[]},{"id":42,"kind":"Direct","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pest-2.2.1\\src\\span.rs","byte_start":151437,"byte_end":151441,"line_start":209,"line_end":209,"column_start":25,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":689}],"docs":"","sig":null,"attributes":[]},{"id":43,"kind":"Direct","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pest-2.2.1\\src\\span.rs","byte_start":151712,"byte_end":151716,"line_start":219,"line_end":219,"column_start":24,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":692}],"docs":"","sig":null,"attributes":[]},{"id":44,"kind":"Direct","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pest-2.2.1\\src\\span.rs","byte_start":151888,"byte_end":151892,"line_start":225,"line_end":225,"column_start":17,"column_end":21},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":45,"kind":"Direct","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pest-2.2.1\\src\\span.rs","byte_start":151919,"byte_end":151923,"line_start":227,"line_end":227,"column_start":19,"column_end":23},"value":"","parent":null,"children":[{"krate":0,"index":697}],"docs":"","sig":null,"attributes":[]},{"id":46,"kind":"Direct","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pest-2.2.1\\src\\span.rs","byte_start":152376,"byte_end":152381,"line_start":245,"line_end":245,"column_start":23,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":705},{"krate":0,"index":706}],"docs":"","sig":null,"attributes":[]},{"id":47,"kind":"Inherent","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pest-2.2.1\\src\\stack.rs","byte_start":154960,"byte_end":154965,"line_start":23,"line_end":23,"column_start":16,"column_end":21},"value":"","parent":null,"children":[{"krate":0,"index":723},{"krate":0,"index":724},{"krate":0,"index":725},{"krate":0,"index":726},{"krate":0,"index":727},{"krate":0,"index":728},{"krate":0,"index":729},{"krate":0,"index":730},{"krate":0,"index":731},{"krate":0,"index":732}],"docs":"","sig":null,"attributes":[]},{"id":48,"kind":"Direct","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pest-2.2.1\\src\\stack.rs","byte_start":157203,"byte_end":157208,"line_start":105,"line_end":105,"column_start":40,"column_end":45},"value":"","parent":null,"children":[{"krate":0,"index":735},{"krate":0,"index":736}],"docs":"","sig":null,"attributes":[]},{"id":49,"kind":"Direct","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pest-2.2.1\\src\\lib.rs","byte_start":3527,"byte_end":3528,"line_start":107,"line_end":107,"column_start":54,"column_end":55},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]}],"refs":[{"kind":"Mod","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pest-2.2.1\\src\\lib.rs","byte_start":2900,"byte_end":2905,"line_start":85,"line_end":85,"column_start":9,"column_end":14},"ref_id":{"krate":0,"index":48}},{"kind":"Mod","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pest-2.2.1\\src\\lib.rs","byte_start":2915,"byte_end":2924,"line_start":86,"line_end":86,"column_start":9,"column_end":18},"ref_id":{"krate":0,"index":106}},{"kind":"Mod","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pest-2.2.1\\src\\lib.rs","byte_start":2990,"byte_end":3002,"line_start":91,"line_end":91,"column_start":9,"column_end":21},"ref_id":{"krate":0,"index":605}},{"kind":"Mod","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pest-2.2.1\\src\\lib.rs","byte_start":3059,"byte_end":3066,"line_start":96,"line_end":96,"column_start":9,"column_end":16},"ref_id":{"krate":0,"index":741}}],"macro_refs":[],"relations":[{"span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pest-2.2.1\\src\\error.rs","byte_start":6020,"byte_end":6025,"line_start":79,"line_end":79,"column_start":19,"column_end":24},"kind":{"Impl":{"id":4}},"from":{"krate":0,"index":778},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pest-2.2.1\\src\\error.rs","byte_start":18934,"byte_end":18946,"line_start":487,"line_end":487,"column_start":19,"column_end":31},"kind":{"Impl":{"id":5}},"from":{"krate":0,"index":807},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pest-2.2.1\\src\\iterators\\flat_pairs.rs","byte_start":32008,"byte_end":32017,"line_start":50,"line_end":50,"column_start":23,"column_end":32},"kind":{"Impl":{"id":6}},"from":{"krate":0,"index":137},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pest-2.2.1\\src\\iterators\\flat_pairs.rs","byte_start":33363,"byte_end":33372,"line_start":102,"line_end":102,"column_start":36,"column_end":45},"kind":{"Impl":{"id":7}},"from":{"krate":0,"index":137},"to":{"krate":1,"index":7985}},{"span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pest-2.2.1\\src\\iterators\\flat_pairs.rs","byte_start":33723,"byte_end":33732,"line_start":118,"line_end":118,"column_start":47,"column_end":56},"kind":{"Impl":{"id":8}},"from":{"krate":0,"index":137},"to":{"krate":1,"index":7834}},{"span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pest-2.2.1\\src\\iterators\\flat_pairs.rs","byte_start":34056,"byte_end":34065,"line_start":132,"line_end":132,"column_start":38,"column_end":47},"kind":{"Impl":{"id":9}},"from":{"krate":0,"index":137},"to":{"krate":1,"index":9685}},{"span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pest-2.2.1\\src\\iterators\\flat_pairs.rs","byte_start":34293,"byte_end":34302,"line_start":140,"line_end":140,"column_start":30,"column_end":39},"kind":{"Impl":{"id":10}},"from":{"krate":0,"index":137},"to":{"krate":1,"index":2679}},{"span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pest-2.2.1\\src\\iterators\\pair.rs","byte_start":37142,"byte_end":37146,"line_start":63,"line_end":63,"column_start":23,"column_end":27},"kind":{"Impl":{"id":11}},"from":{"krate":0,"index":862},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pest-2.2.1\\src\\iterators\\pair.rs","byte_start":42868,"byte_end":42873,"line_start":262,"line_end":262,"column_start":23,"column_end":28},"kind":{"Impl":{"id":12}},"from":{"krate":0,"index":873},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pest-2.2.1\\src\\iterators\\pair.rs","byte_start":43140,"byte_end":43144,"line_start":270,"line_end":270,"column_start":38,"column_end":42},"kind":{"Impl":{"id":13}},"from":{"krate":0,"index":862},"to":{"krate":1,"index":9685}},{"span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pest-2.2.1\\src\\iterators\\pair.rs","byte_start":43478,"byte_end":43482,"line_start":280,"line_end":280,"column_start":40,"column_end":44},"kind":{"Impl":{"id":14}},"from":{"krate":0,"index":862},"to":{"krate":1,"index":9692}},{"span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pest-2.2.1\\src\\iterators\\pair.rs","byte_start":44202,"byte_end":44206,"line_start":305,"line_end":305,"column_start":38,"column_end":42},"kind":{"Impl":{"id":15}},"from":{"krate":0,"index":862},"to":{"krate":1,"index":2709}},{"span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pest-2.2.1\\src\\iterators\\pair.rs","byte_start":44431,"byte_end":44435,"line_start":313,"line_end":313,"column_start":24,"column_end":28},"kind":{"Impl":{"id":16}},"from":{"krate":0,"index":862},"to":{"krate":1,"index":2714}},{"span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pest-2.2.1\\src\\iterators\\pair.rs","byte_start":44474,"byte_end":44478,"line_start":315,"line_end":315,"column_start":28,"column_end":32},"kind":{"Impl":{"id":17}},"from":{"krate":0,"index":862},"to":{"krate":1,"index":9892}},{"span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pest-2.2.1\\src\\iterators\\pairs.rs","byte_start":47677,"byte_end":47682,"line_start":55,"line_end":55,"column_start":23,"column_end":28},"kind":{"Impl":{"id":18}},"from":{"krate":0,"index":873},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pest-2.2.1\\src\\iterators\\pairs.rs","byte_start":52843,"byte_end":52848,"line_start":224,"line_end":224,"column_start":36,"column_end":41},"kind":{"Impl":{"id":19}},"from":{"krate":0,"index":873},"to":{"krate":1,"index":7985}},{"span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pest-2.2.1\\src\\iterators\\pairs.rs","byte_start":53080,"byte_end":53085,"line_start":234,"line_end":234,"column_start":47,"column_end":52},"kind":{"Impl":{"id":20}},"from":{"krate":0,"index":873},"to":{"krate":1,"index":7834}},{"span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pest-2.2.1\\src\\iterators\\pairs.rs","byte_start":53414,"byte_end":53419,"line_start":248,"line_end":248,"column_start":38,"column_end":43},"kind":{"Impl":{"id":21}},"from":{"krate":0,"index":873},"to":{"krate":1,"index":9685}},{"span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pest-2.2.1\\src\\iterators\\pairs.rs","byte_start":53590,"byte_end":53595,"line_start":254,"line_end":254,"column_start":40,"column_end":45},"kind":{"Impl":{"id":22}},"from":{"krate":0,"index":873},"to":{"krate":1,"index":9692}},{"span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pest-2.2.1\\src\\iterators\\pairs.rs","byte_start":53910,"byte_end":53915,"line_start":267,"line_end":267,"column_start":38,"column_end":43},"kind":{"Impl":{"id":23}},"from":{"krate":0,"index":873},"to":{"krate":1,"index":2709}},{"span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pest-2.2.1\\src\\iterators\\pairs.rs","byte_start":54178,"byte_end":54183,"line_start":276,"line_end":276,"column_start":24,"column_end":29},"kind":{"Impl":{"id":24}},"from":{"krate":0,"index":873},"to":{"krate":1,"index":2714}},{"span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pest-2.2.1\\src\\iterators\\pairs.rs","byte_start":54222,"byte_end":54227,"line_start":278,"line_end":278,"column_start":28,"column_end":33},"kind":{"Impl":{"id":25}},"from":{"krate":0,"index":873},"to":{"krate":1,"index":9892}},{"span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pest-2.2.1\\src\\iterators\\tokens.rs","byte_start":60493,"byte_end":60499,"line_start":64,"line_end":64,"column_start":23,"column_end":29},"kind":{"Impl":{"id":26}},"from":{"krate":0,"index":897},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pest-2.2.1\\src\\iterators\\tokens.rs","byte_start":61528,"byte_end":61534,"line_start":95,"line_end":95,"column_start":36,"column_end":42},"kind":{"Impl":{"id":27}},"from":{"krate":0,"index":897},"to":{"krate":1,"index":7985}},{"span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pest-2.2.1\\src\\iterators\\tokens.rs","byte_start":61847,"byte_end":61853,"line_start":111,"line_end":111,"column_start":47,"column_end":53},"kind":{"Impl":{"id":28}},"from":{"krate":0,"index":897},"to":{"krate":1,"index":7834}},{"span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pest-2.2.1\\src\\iterators\\tokens.rs","byte_start":62131,"byte_end":62137,"line_start":125,"line_end":125,"column_start":38,"column_end":44},"kind":{"Impl":{"id":29}},"from":{"krate":0,"index":897},"to":{"krate":1,"index":9685}},{"span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pest-2.2.1\\src\\parser_state.rs","byte_start":81274,"byte_end":81285,"line_start":106,"line_end":106,"column_start":23,"column_end":34},"kind":{"Impl":{"id":30}},"from":{"krate":0,"index":960},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pest-2.2.1\\src\\position.rs","byte_start":116680,"byte_end":116688,"line_start":29,"line_end":29,"column_start":10,"column_end":18},"kind":{"Impl":{"id":31}},"from":{"krate":0,"index":975},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pest-2.2.1\\src\\position.rs","byte_start":128303,"byte_end":128311,"line_start":397,"line_end":397,"column_start":25,"column_end":33},"kind":{"Impl":{"id":32}},"from":{"krate":0,"index":975},"to":{"krate":1,"index":9685}},{"span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pest-2.2.1\\src\\position.rs","byte_start":128477,"byte_end":128485,"line_start":403,"line_end":403,"column_start":24,"column_end":32},"kind":{"Impl":{"id":33}},"from":{"krate":0,"index":975},"to":{"krate":1,"index":2709}},{"span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pest-2.2.1\\src\\position.rs","byte_start":128632,"byte_end":128640,"line_start":409,"line_end":409,"column_start":17,"column_end":25},"kind":{"Impl":{"id":34}},"from":{"krate":0,"index":975},"to":{"krate":1,"index":2714}},{"span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pest-2.2.1\\src\\position.rs","byte_start":128673,"byte_end":128681,"line_start":411,"line_end":411,"column_start":25,"column_end":33},"kind":{"Impl":{"id":35}},"from":{"krate":0,"index":975},"to":{"krate":1,"index":2755}},{"span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pest-2.2.1\\src\\position.rs","byte_start":128919,"byte_end":128927,"line_start":421,"line_end":421,"column_start":18,"column_end":26},"kind":{"Impl":{"id":36}},"from":{"krate":0,"index":975},"to":{"krate":1,"index":2745}},{"span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pest-2.2.1\\src\\position.rs","byte_start":129115,"byte_end":129123,"line_start":428,"line_end":428,"column_start":19,"column_end":27},"kind":{"Impl":{"id":37}},"from":{"krate":0,"index":975},"to":{"krate":1,"index":9892}},{"span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pest-2.2.1\\src\\prec_climber.rs","byte_start":137527,"byte_end":137535,"line_start":124,"line_end":124,"column_start":19,"column_end":27},"kind":{"Impl":{"id":38}},"from":{"krate":0,"index":1000},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pest-2.2.1\\src\\prec_climber.rs","byte_start":138209,"byte_end":138217,"line_start":149,"line_end":149,"column_start":29,"column_end":37},"kind":{"Impl":{"id":39}},"from":{"krate":0,"index":1000},"to":{"krate":1,"index":3189}},{"span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pest-2.2.1\\src\\prec_climber.rs","byte_start":140343,"byte_end":140354,"line_start":212,"line_end":212,"column_start":19,"column_end":30},"kind":{"Impl":{"id":40}},"from":{"krate":0,"index":1008},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pest-2.2.1\\src\\span.rs","byte_start":146205,"byte_end":146209,"line_start":34,"line_end":34,"column_start":10,"column_end":14},"kind":{"Impl":{"id":41}},"from":{"krate":0,"index":1014},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pest-2.2.1\\src\\span.rs","byte_start":151437,"byte_end":151441,"line_start":209,"line_end":209,"column_start":25,"column_end":29},"kind":{"Impl":{"id":42}},"from":{"krate":0,"index":1014},"to":{"krate":1,"index":9685}},{"span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pest-2.2.1\\src\\span.rs","byte_start":151712,"byte_end":151716,"line_start":219,"line_end":219,"column_start":24,"column_end":28},"kind":{"Impl":{"id":43}},"from":{"krate":0,"index":1014},"to":{"krate":1,"index":2709}},{"span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pest-2.2.1\\src\\span.rs","byte_start":151888,"byte_end":151892,"line_start":225,"line_end":225,"column_start":17,"column_end":21},"kind":{"Impl":{"id":44}},"from":{"krate":0,"index":1014},"to":{"krate":1,"index":2714}},{"span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pest-2.2.1\\src\\span.rs","byte_start":151919,"byte_end":151923,"line_start":227,"line_end":227,"column_start":19,"column_end":23},"kind":{"Impl":{"id":45}},"from":{"krate":0,"index":1014},"to":{"krate":1,"index":9892}},{"span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pest-2.2.1\\src\\span.rs","byte_start":152376,"byte_end":152381,"line_start":245,"line_end":245,"column_start":23,"column_end":28},"kind":{"Impl":{"id":46}},"from":{"krate":0,"index":699},"to":{"krate":1,"index":7985}},{"span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pest-2.2.1\\src\\stack.rs","byte_start":154960,"byte_end":154965,"line_start":23,"line_end":23,"column_start":16,"column_end":21},"kind":{"Impl":{"id":47}},"from":{"krate":0,"index":1024},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pest-2.2.1\\src\\stack.rs","byte_start":157203,"byte_end":157208,"line_start":105,"line_end":105,"column_start":40,"column_end":45},"kind":{"Impl":{"id":48}},"from":{"krate":0,"index":1024},"to":{"krate":1,"index":3361}},{"span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pest-2.2.1\\src\\lib.rs","byte_start":3439,"byte_end":3443,"line_start":105,"line_end":105,"column_start":21,"column_end":25},"kind":"SuperTrait","from":{"krate":1,"index":3067},"to":{"krate":0,"index":749}},{"span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pest-2.2.1\\src\\lib.rs","byte_start":3446,"byte_end":3451,"line_start":105,"line_end":105,"column_start":28,"column_end":33},"kind":"SuperTrait","from":{"krate":1,"index":9685},"to":{"krate":0,"index":749}},{"span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pest-2.2.1\\src\\lib.rs","byte_start":3454,"byte_end":3456,"line_start":105,"line_end":105,"column_start":36,"column_end":38},"kind":"SuperTrait","from":{"krate":1,"index":2714},"to":{"krate":0,"index":749}},{"span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pest-2.2.1\\src\\lib.rs","byte_start":3459,"byte_end":3463,"line_start":105,"line_end":105,"column_start":41,"column_end":45},"kind":"SuperTrait","from":{"krate":1,"index":9892},"to":{"krate":0,"index":749}},{"span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pest-2.2.1\\src\\lib.rs","byte_start":3466,"byte_end":3469,"line_start":105,"line_end":105,"column_start":48,"column_end":51},"kind":"SuperTrait","from":{"krate":1,"index":2745},"to":{"krate":0,"index":749}},{"span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pest-2.2.1\\src\\lib.rs","byte_start":3527,"byte_end":3528,"line_start":107,"line_end":107,"column_start":54,"column_end":55},"kind":{"Impl":{"id":49}},"from":{"krate":0,"index":751},"to":{"krate":0,"index":749}}]}