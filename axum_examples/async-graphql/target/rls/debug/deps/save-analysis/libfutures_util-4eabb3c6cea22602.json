{"config":{"output_file":null,"full_docs":false,"pub_only":true,"reachable_only":true,"distro_crate":false,"signatures":false,"borrow_data":false},"version":"0.19.1","compilation":{"directory":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21","program":"C:\\Users\\admin\\.rustup\\toolchains\\stable-x86_64-pc-windows-msvc\\bin\\rls.exe","arguments":["--crate-name","futures_util","--edition=2018","C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\lib.rs","--json=diagnostic-rendered-ansi,artifacts,future-incompat","--crate-type","lib","--emit=dep-info,metadata","-C","embed-bitcode=no","-C","debuginfo=2","--cfg","feature=\"alloc\"","--cfg","feature=\"futures-io\"","--cfg","feature=\"futures-sink\"","--cfg","feature=\"io\"","--cfg","feature=\"memchr\"","--cfg","feature=\"sink\"","--cfg","feature=\"slab\"","--cfg","feature=\"std\"","-C","metadata=4eabb3c6cea22602","-C","extra-filename=-4eabb3c6cea22602","--out-dir","f:\\sea-orm-demo\\axum_examples\\async-graphql\\target\\rls\\debug\\deps","-L","dependency=f:\\sea-orm-demo\\axum_examples\\async-graphql\\target\\rls\\debug\\deps","--extern","futures_core=f:\\sea-orm-demo\\axum_examples\\async-graphql\\target\\rls\\debug\\deps\\libfutures_core-e34f210f395a45b5.rmeta","--extern","futures_io=f:\\sea-orm-demo\\axum_examples\\async-graphql\\target\\rls\\debug\\deps\\libfutures_io-abfcbbb7bad22b01.rmeta","--extern","futures_sink=f:\\sea-orm-demo\\axum_examples\\async-graphql\\target\\rls\\debug\\deps\\libfutures_sink-ae080e09e66e0042.rmeta","--extern","futures_task=f:\\sea-orm-demo\\axum_examples\\async-graphql\\target\\rls\\debug\\deps\\libfutures_task-3589d5d463ed5a40.rmeta","--extern","memchr=f:\\sea-orm-demo\\axum_examples\\async-graphql\\target\\rls\\debug\\deps\\libmemchr-01bfb5c46bf73bfe.rmeta","--extern","pin_project_lite=f:\\sea-orm-demo\\axum_examples\\async-graphql\\target\\rls\\debug\\deps\\libpin_project_lite-e22eb2e62c630ccc.rmeta","--extern","pin_utils=f:\\sea-orm-demo\\axum_examples\\async-graphql\\target\\rls\\debug\\deps\\libpin_utils-0c290d8f094c78eb.rmeta","--extern","slab=f:\\sea-orm-demo\\axum_examples\\async-graphql\\target\\rls\\debug\\deps\\libslab-546cc2eb3c21e5db.rmeta","--cap-lints","allow","--error-format=json","--sysroot","C:\\Users\\admin\\.rustup/toolchains/stable-x86_64-pc-windows-msvc"],"output":"f:\\sea-orm-demo\\axum_examples\\async-graphql\\target\\rls\\debug\\deps\\libfutures_util-4eabb3c6cea22602.rmeta"},"prelude":{"crate_id":{"name":"futures_util","disambiguator":[10402221943807794593,0]},"crate_root":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src","external_crates":[{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\lib.rs","num":1,"id":{"name":"std","disambiguator":[13015713666403456114,0]}},{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\future\\mod.rs","num":2,"id":{"name":"core","disambiguator":[1507510987272037120,0]}},{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\lib.rs","num":3,"id":{"name":"compiler_builtins","disambiguator":[3803325750332457499,0]}},{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\lib.rs","num":4,"id":{"name":"rustc_std_workspace_core","disambiguator":[4223354511651166533,0]}},{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\lib.rs","num":5,"id":{"name":"alloc","disambiguator":[15700094508901508366,0]}},{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\lib.rs","num":6,"id":{"name":"libc","disambiguator":[12632183332710247155,0]}},{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\lib.rs","num":7,"id":{"name":"unwind","disambiguator":[18262169243471273054,0]}},{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\lib.rs","num":8,"id":{"name":"cfg_if","disambiguator":[15664785966706829415,0]}},{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\lib.rs","num":9,"id":{"name":"miniz_oxide","disambiguator":[3895343934390880989,0]}},{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\lib.rs","num":10,"id":{"name":"rustc_std_workspace_alloc","disambiguator":[1841993658411810574,0]}},{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\lib.rs","num":11,"id":{"name":"adler","disambiguator":[1117248029108287081,0]}},{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\lib.rs","num":12,"id":{"name":"hashbrown","disambiguator":[14646112292732085519,0]}},{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\lib.rs","num":13,"id":{"name":"std_detect","disambiguator":[11979428506951486581,0]}},{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\lib.rs","num":14,"id":{"name":"rustc_demangle","disambiguator":[2104796995944127881,0]}},{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\lib.rs","num":15,"id":{"name":"panic_unwind","disambiguator":[4084207378877276393,0]}},{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\lib.rs","num":16,"id":{"name":"futures_core","disambiguator":[11080074677927752119,0]}},{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\lib.rs","num":17,"id":{"name":"pin_utils","disambiguator":[13643175944386566012,0]}},{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\future\\mod.rs","num":18,"id":{"name":"futures_task","disambiguator":[549887119324496450,0]}},{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\future\\future\\flatten.rs","num":19,"id":{"name":"futures_sink","disambiguator":[8823577968076171608,0]}},{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\future\\future\\flatten.rs","num":20,"id":{"name":"pin_project_lite","disambiguator":[11650812661830545456,0]}},{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\future\\future\\shared.rs","num":21,"id":{"name":"slab","disambiguator":[4770103539533495208,0]}},{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\future\\either.rs","num":22,"id":{"name":"futures_io","disambiguator":[10722248012823961366,0]}},{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\io\\line_writer.rs","num":23,"id":{"name":"memchr","disambiguator":[11795001318777741512,0]}}],"span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\lib.rs","byte_start":0,"byte_end":11572,"line_start":1,"line_end":337,"column_start":1,"column_end":18}},"imports":[{"kind":"Use","ref_id":{"krate":16,"index":169},"span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\lib.rs","byte_start":861,"byte_end":866,"line_start":29,"line_end":29,"column_start":23,"column_end":28},"alias_span":null,"name":"ready","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":17,"index":7},"span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\lib.rs","byte_start":887,"byte_end":894,"line_start":30,"line_end":30,"column_start":20,"column_end":27},"alias_span":null,"name":"pin_mut","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":2,"index":13098},"span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\future\\mod.rs","byte_start":12041,"byte_end":12047,"line_start":13,"line_end":13,"column_start":23,"column_end":29},"alias_span":null,"name":"Future","value":"","parent":{"krate":0,"index":18}},{"kind":"Use","ref_id":{"krate":16,"index":21},"span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\future\\mod.rs","byte_start":12107,"byte_end":12116,"line_start":16,"line_end":16,"column_start":32,"column_end":41},"alias_span":null,"name":"BoxFuture","value":"","parent":{"krate":0,"index":18}},{"kind":"Use","ref_id":{"krate":16,"index":24},"span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\future\\mod.rs","byte_start":12118,"byte_end":12132,"line_start":16,"line_end":16,"column_start":43,"column_end":57},"alias_span":null,"name":"LocalBoxFuture","value":"","parent":{"krate":0,"index":18}},{"kind":"Use","ref_id":{"krate":16,"index":27},"span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\future\\mod.rs","byte_start":12166,"byte_end":12177,"line_start":17,"line_end":17,"column_start":32,"column_end":43},"alias_span":null,"name":"FusedFuture","value":"","parent":{"krate":0,"index":18}},{"kind":"Use","ref_id":{"krate":16,"index":44},"span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\future\\mod.rs","byte_start":12179,"byte_end":12188,"line_start":17,"line_end":17,"column_start":45,"column_end":54},"alias_span":null,"name":"TryFuture","value":"","parent":{"krate":0,"index":18}},{"kind":"Use","ref_id":{"krate":18,"index":237},"span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\future\\mod.rs","byte_start":12214,"byte_end":12223,"line_start":18,"line_end":18,"column_start":24,"column_end":33},"alias_span":null,"name":"FutureObj","value":"","parent":{"krate":0,"index":18}},{"kind":"Use","ref_id":{"krate":18,"index":203},"span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\future\\mod.rs","byte_start":12225,"byte_end":12239,"line_start":18,"line_end":18,"column_start":35,"column_end":49},"alias_span":null,"name":"LocalFutureObj","value":"","parent":{"krate":0,"index":18}},{"kind":"Use","ref_id":{"krate":18,"index":258},"span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\future\\mod.rs","byte_start":12241,"byte_end":12256,"line_start":18,"line_end":18,"column_start":51,"column_end":66},"alias_span":null,"name":"UnsafeFutureObj","value":"","parent":{"krate":0,"index":18}},{"kind":"Use","ref_id":{"krate":0,"index":10058},"span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\future\\future\\mod.rs","byte_start":16330,"byte_end":16334,"line_start":46,"line_end":46,"column_start":15,"column_end":19},"alias_span":null,"name":"Fuse","value":"","parent":{"krate":0,"index":46}},{"kind":"Use","ref_id":{"krate":0,"index":10654},"span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\future\\future\\mod.rs","byte_start":18054,"byte_end":18065,"line_start":101,"line_end":101,"column_start":29,"column_end":40},"alias_span":null,"name":"CatchUnwind","value":"","parent":{"krate":0,"index":46}},{"kind":"Use","ref_id":{"krate":0,"index":349},"span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\future\\future\\mod.rs","byte_start":18582,"byte_end":18588,"line_start":117,"line_end":117,"column_start":24,"column_end":30},"alias_span":null,"name":"Shared","value":"","parent":{"krate":0,"index":46}},{"kind":"Use","ref_id":{"krate":0,"index":360},"span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\future\\future\\mod.rs","byte_start":18590,"byte_end":18600,"line_start":117,"line_end":117,"column_start":32,"column_end":42},"alias_span":null,"name":"WeakShared","value":"","parent":{"krate":0,"index":46}},{"kind":"Use","ref_id":{"krate":0,"index":10149},"span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\future\\mod.rs","byte_start":12371,"byte_end":12378,"line_start":24,"line_end":24,"column_start":5,"column_end":12},"alias_span":null,"name":"Flatten","value":"","parent":{"krate":0,"index":18}},{"kind":"Use","ref_id":{"krate":0,"index":10058},"span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\future\\mod.rs","byte_start":12380,"byte_end":12384,"line_start":24,"line_end":24,"column_start":14,"column_end":18},"alias_span":null,"name":"Fuse","value":"","parent":{"krate":0,"index":18}},{"kind":"Use","ref_id":{"krate":0,"index":448},"span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\future\\mod.rs","byte_start":12386,"byte_end":12395,"line_start":24,"line_end":24,"column_start":20,"column_end":29},"alias_span":null,"name":"FutureExt","value":"","parent":{"krate":0,"index":18}},{"kind":"Use","ref_id":{"krate":0,"index":10500},"span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\future\\mod.rs","byte_start":12397,"byte_end":12404,"line_start":24,"line_end":24,"column_start":31,"column_end":38},"alias_span":null,"name":"Inspect","value":"","parent":{"krate":0,"index":18}},{"kind":"Use","ref_id":{"krate":0,"index":10315},"span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\future\\mod.rs","byte_start":12406,"byte_end":12416,"line_start":24,"line_end":24,"column_start":40,"column_end":50},"alias_span":null,"name":"IntoStream","value":"","parent":{"krate":0,"index":18}},{"kind":"Use","ref_id":{"krate":0,"index":10255},"span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\future\\mod.rs","byte_start":12418,"byte_end":12421,"line_start":24,"line_end":24,"column_start":52,"column_end":55},"alias_span":null,"name":"Map","value":"","parent":{"krate":0,"index":18}},{"kind":"Use","ref_id":{"krate":0,"index":10365},"span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\future\\mod.rs","byte_start":12423,"byte_end":12430,"line_start":24,"line_end":24,"column_start":57,"column_end":64},"alias_span":null,"name":"MapInto","value":"","parent":{"krate":0,"index":18}},{"kind":"Use","ref_id":{"krate":0,"index":10560},"span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\future\\mod.rs","byte_start":12432,"byte_end":12442,"line_start":24,"line_end":24,"column_start":66,"column_end":76},"alias_span":null,"name":"NeverError","value":"","parent":{"krate":0,"index":18}},{"kind":"Use","ref_id":{"krate":0,"index":10427},"span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\future\\mod.rs","byte_start":12444,"byte_end":12448,"line_start":24,"line_end":24,"column_start":78,"column_end":82},"alias_span":null,"name":"Then","value":"","parent":{"krate":0,"index":18}},{"kind":"Use","ref_id":{"krate":0,"index":10608},"span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\future\\mod.rs","byte_start":12450,"byte_end":12459,"line_start":24,"line_end":24,"column_start":84,"column_end":93},"alias_span":null,"name":"UnitError","value":"","parent":{"krate":0,"index":18}},{"kind":"Use","ref_id":{"krate":0,"index":10197},"span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\future\\mod.rs","byte_start":12555,"byte_end":12568,"line_start":28,"line_end":28,"column_start":23,"column_end":36},"alias_span":null,"name":"FlattenStream","value":"","parent":{"krate":0,"index":18}},{"kind":"Use","ref_id":{"krate":0,"index":10654},"span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\future\\mod.rs","byte_start":12617,"byte_end":12628,"line_start":31,"line_end":31,"column_start":23,"column_end":34},"alias_span":null,"name":"CatchUnwind","value":"","parent":{"krate":0,"index":18}},{"kind":"Use","ref_id":{"krate":0,"index":349},"span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\future\\mod.rs","byte_start":12828,"byte_end":12834,"line_start":39,"line_end":39,"column_start":24,"column_end":30},"alias_span":null,"name":"Shared","value":"","parent":{"krate":0,"index":18}},{"kind":"Use","ref_id":{"krate":0,"index":360},"span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\future\\mod.rs","byte_start":12836,"byte_end":12846,"line_start":39,"line_end":39,"column_start":32,"column_end":42},"alias_span":null,"name":"WeakShared","value":"","parent":{"krate":0,"index":18}},{"kind":"Use","ref_id":{"krate":0,"index":10690},"span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\future\\try_future\\mod.rs","byte_start":59629,"byte_end":59639,"line_start":104,"line_end":104,"column_start":28,"column_end":38},"alias_span":null,"name":"IntoFuture","value":"","parent":{"krate":0,"index":521}},{"kind":"Use","ref_id":{"krate":0,"index":11074},"span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\future\\mod.rs","byte_start":12898,"byte_end":12905,"line_start":43,"line_end":43,"column_start":5,"column_end":12},"alias_span":null,"name":"AndThen","value":"","parent":{"krate":0,"index":18}},{"kind":"Use","ref_id":{"krate":0,"index":11221},"span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\future\\mod.rs","byte_start":12907,"byte_end":12914,"line_start":43,"line_end":43,"column_start":14,"column_end":21},"alias_span":null,"name":"ErrInto","value":"","parent":{"krate":0,"index":18}},{"kind":"Use","ref_id":{"krate":0,"index":11404},"span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\future\\mod.rs","byte_start":12916,"byte_end":12926,"line_start":43,"line_end":43,"column_start":23,"column_end":33},"alias_span":null,"name":"InspectErr","value":"","parent":{"krate":0,"index":18}},{"kind":"Use","ref_id":{"krate":0,"index":11343},"span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\future\\mod.rs","byte_start":12928,"byte_end":12937,"line_start":43,"line_end":43,"column_start":35,"column_end":44},"alias_span":null,"name":"InspectOk","value":"","parent":{"krate":0,"index":18}},{"kind":"Use","ref_id":{"krate":0,"index":10690},"span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\future\\mod.rs","byte_start":12939,"byte_end":12949,"line_start":43,"line_end":43,"column_start":46,"column_end":56},"alias_span":null,"name":"IntoFuture","value":"","parent":{"krate":0,"index":18}},{"kind":"Use","ref_id":{"krate":0,"index":11526},"span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\future\\mod.rs","byte_start":12951,"byte_end":12957,"line_start":43,"line_end":43,"column_start":58,"column_end":64},"alias_span":null,"name":"MapErr","value":"","parent":{"krate":0,"index":18}},{"kind":"Use","ref_id":{"krate":0,"index":11465},"span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\future\\mod.rs","byte_start":12959,"byte_end":12964,"line_start":43,"line_end":43,"column_start":66,"column_end":71},"alias_span":null,"name":"MapOk","value":"","parent":{"krate":0,"index":18}},{"kind":"Use","ref_id":{"krate":0,"index":11588},"span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\future\\mod.rs","byte_start":12966,"byte_end":12977,"line_start":43,"line_end":43,"column_start":73,"column_end":84},"alias_span":null,"name":"MapOkOrElse","value":"","parent":{"krate":0,"index":18}},{"kind":"Use","ref_id":{"krate":0,"index":11282},"span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\future\\mod.rs","byte_start":12979,"byte_end":12985,"line_start":43,"line_end":43,"column_start":86,"column_end":92},"alias_span":null,"name":"OkInto","value":"","parent":{"krate":0,"index":18}},{"kind":"Use","ref_id":{"krate":0,"index":11148},"span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\future\\mod.rs","byte_start":12991,"byte_end":12997,"line_start":44,"line_end":44,"column_start":5,"column_end":11},"alias_span":null,"name":"OrElse","value":"","parent":{"krate":0,"index":18}},{"kind":"Use","ref_id":{"krate":0,"index":10823},"span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\future\\mod.rs","byte_start":12999,"byte_end":13009,"line_start":44,"line_end":44,"column_start":13,"column_end":23},"alias_span":null,"name":"TryFlatten","value":"","parent":{"krate":0,"index":18}},{"kind":"Use","ref_id":{"krate":0,"index":10944},"span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\future\\mod.rs","byte_start":13011,"byte_end":13027,"line_start":44,"line_end":44,"column_start":25,"column_end":41},"alias_span":null,"name":"TryFlattenStream","value":"","parent":{"krate":0,"index":18}},{"kind":"Use","ref_id":{"krate":0,"index":741},"span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\future\\mod.rs","byte_start":13029,"byte_end":13041,"line_start":44,"line_end":44,"column_start":43,"column_end":55},"alias_span":null,"name":"TryFutureExt","value":"","parent":{"krate":0,"index":18}},{"kind":"Use","ref_id":{"krate":0,"index":11661},"span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\future\\mod.rs","byte_start":13043,"byte_end":13055,"line_start":44,"line_end":44,"column_start":57,"column_end":69},"alias_span":null,"name":"UnwrapOrElse","value":"","parent":{"krate":0,"index":18}},{"kind":"Use","ref_id":{"krate":0,"index":11002},"span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\future\\mod.rs","byte_start":13160,"byte_end":13171,"line_start":49,"line_end":49,"column_start":27,"column_end":38},"alias_span":null,"name":"FlattenSink","value":"","parent":{"krate":0,"index":18}},{"kind":"Use","ref_id":{"krate":0,"index":843},"span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\future\\mod.rs","byte_start":13227,"byte_end":13231,"line_start":54,"line_end":54,"column_start":22,"column_end":26},"alias_span":null,"name":"lazy","value":"","parent":{"krate":0,"index":18}},{"kind":"Use","ref_id":{"krate":0,"index":11719},"span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\future\\mod.rs","byte_start":13233,"byte_end":13237,"line_start":54,"line_end":54,"column_start":28,"column_end":32},"alias_span":null,"name":"Lazy","value":"","parent":{"krate":0,"index":18}},{"kind":"Use","ref_id":{"krate":0,"index":889},"span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\future\\mod.rs","byte_start":13278,"byte_end":13285,"line_start":57,"line_end":57,"column_start":25,"column_end":32},"alias_span":null,"name":"pending","value":"","parent":{"krate":0,"index":18}},{"kind":"Use","ref_id":{"krate":0,"index":11725},"span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\future\\mod.rs","byte_start":13287,"byte_end":13294,"line_start":57,"line_end":57,"column_start":34,"column_end":41},"alias_span":null,"name":"Pending","value":"","parent":{"krate":0,"index":18}},{"kind":"Use","ref_id":{"krate":0,"index":936},"span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\future\\mod.rs","byte_start":13341,"byte_end":13351,"line_start":60,"line_end":60,"column_start":28,"column_end":38},"alias_span":null,"name":"maybe_done","value":"","parent":{"krate":0,"index":18}},{"kind":"Use","ref_id":{"krate":0,"index":11731},"span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\future\\mod.rs","byte_start":13353,"byte_end":13362,"line_start":60,"line_end":60,"column_start":40,"column_end":49},"alias_span":null,"name":"MaybeDone","value":"","parent":{"krate":0,"index":18}},{"kind":"Use","ref_id":{"krate":0,"index":988},"span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\future\\mod.rs","byte_start":13417,"byte_end":13431,"line_start":63,"line_end":63,"column_start":32,"column_end":46},"alias_span":null,"name":"try_maybe_done","value":"","parent":{"krate":0,"index":18}},{"kind":"Use","ref_id":{"krate":0,"index":11744},"span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\future\\mod.rs","byte_start":13433,"byte_end":13445,"line_start":63,"line_end":63,"column_start":48,"column_end":60},"alias_span":null,"name":"TryMaybeDone","value":"","parent":{"krate":0,"index":18}},{"kind":"Use","ref_id":{"krate":0,"index":11757},"span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\future\\mod.rs","byte_start":13483,"byte_end":13495,"line_start":66,"line_end":66,"column_start":23,"column_end":35},"alias_span":null,"name":"OptionFuture","value":"","parent":{"krate":0,"index":18}},{"kind":"Use","ref_id":{"krate":0,"index":1070},"span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\future\\mod.rs","byte_start":13535,"byte_end":13542,"line_start":69,"line_end":69,"column_start":25,"column_end":32},"alias_span":null,"name":"poll_fn","value":"","parent":{"krate":0,"index":18}},{"kind":"Use","ref_id":{"krate":0,"index":1065},"span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\future\\mod.rs","byte_start":13544,"byte_end":13550,"line_start":69,"line_end":69,"column_start":34,"column_end":40},"alias_span":null,"name":"PollFn","value":"","parent":{"krate":0,"index":18}},{"kind":"Use","ref_id":{"krate":0,"index":1129},"span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\future\\mod.rs","byte_start":13605,"byte_end":13619,"line_start":72,"line_end":72,"column_start":32,"column_end":46},"alias_span":null,"name":"poll_immediate","value":"","parent":{"krate":0,"index":18}},{"kind":"Use","ref_id":{"krate":0,"index":11796},"span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\future\\mod.rs","byte_start":13621,"byte_end":13634,"line_start":72,"line_end":72,"column_start":48,"column_end":61},"alias_span":null,"name":"PollImmediate","value":"","parent":{"krate":0,"index":18}},{"kind":"Use","ref_id":{"krate":0,"index":1176},"span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\future\\mod.rs","byte_start":13671,"byte_end":13674,"line_start":75,"line_end":75,"column_start":23,"column_end":26},"alias_span":null,"name":"err","value":"","parent":{"krate":0,"index":18}},{"kind":"Use","ref_id":{"krate":0,"index":1173},"span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\future\\mod.rs","byte_start":13676,"byte_end":13678,"line_start":75,"line_end":75,"column_start":28,"column_end":30},"alias_span":null,"name":"ok","value":"","parent":{"krate":0,"index":18}},{"kind":"Use","ref_id":{"krate":0,"index":1171},"span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\future\\mod.rs","byte_start":13680,"byte_end":13685,"line_start":75,"line_end":75,"column_start":32,"column_end":37},"alias_span":null,"name":"ready","value":"","parent":{"krate":0,"index":18}},{"kind":"Use","ref_id":{"krate":0,"index":11835},"span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\future\\mod.rs","byte_start":13687,"byte_end":13692,"line_start":75,"line_end":75,"column_start":39,"column_end":44},"alias_span":null,"name":"Ready","value":"","parent":{"krate":0,"index":18}},{"kind":"Use","ref_id":{"krate":0,"index":1227},"span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\future\\mod.rs","byte_start":13727,"byte_end":13731,"line_start":78,"line_end":78,"column_start":22,"column_end":26},"alias_span":null,"name":"join","value":"","parent":{"krate":0,"index":18}},{"kind":"Use","ref_id":{"krate":0,"index":1230},"span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\future\\mod.rs","byte_start":13733,"byte_end":13738,"line_start":78,"line_end":78,"column_start":28,"column_end":33},"alias_span":null,"name":"join3","value":"","parent":{"krate":0,"index":18}},{"kind":"Use","ref_id":{"krate":0,"index":1234},"span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\future\\mod.rs","byte_start":13740,"byte_end":13745,"line_start":78,"line_end":78,"column_start":35,"column_end":40},"alias_span":null,"name":"join4","value":"","parent":{"krate":0,"index":18}},{"kind":"Use","ref_id":{"krate":0,"index":1239},"span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\future\\mod.rs","byte_start":13747,"byte_end":13752,"line_start":78,"line_end":78,"column_start":42,"column_end":47},"alias_span":null,"name":"join5","value":"","parent":{"krate":0,"index":18}},{"kind":"Use","ref_id":{"krate":0,"index":11937},"span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\future\\mod.rs","byte_start":13754,"byte_end":13758,"line_start":78,"line_end":78,"column_start":49,"column_end":53},"alias_span":null,"name":"Join","value":"","parent":{"krate":0,"index":18}},{"kind":"Use","ref_id":{"krate":0,"index":11982},"span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\future\\mod.rs","byte_start":13760,"byte_end":13765,"line_start":78,"line_end":78,"column_start":55,"column_end":60},"alias_span":null,"name":"Join3","value":"","parent":{"krate":0,"index":18}},{"kind":"Use","ref_id":{"krate":0,"index":12039},"span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\future\\mod.rs","byte_start":13767,"byte_end":13772,"line_start":78,"line_end":78,"column_start":62,"column_end":67},"alias_span":null,"name":"Join4","value":"","parent":{"krate":0,"index":18}},{"kind":"Use","ref_id":{"krate":0,"index":12108},"span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\future\\mod.rs","byte_start":13774,"byte_end":13779,"line_start":78,"line_end":78,"column_start":69,"column_end":74},"alias_span":null,"name":"Join5","value":"","parent":{"krate":0,"index":18}},{"kind":"Use","ref_id":{"krate":0,"index":1333},"span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\future\\mod.rs","byte_start":13874,"byte_end":13882,"line_start":83,"line_end":83,"column_start":26,"column_end":34},"alias_span":null,"name":"join_all","value":"","parent":{"krate":0,"index":18}},{"kind":"Use","ref_id":{"krate":0,"index":1320},"span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\future\\mod.rs","byte_start":13884,"byte_end":13891,"line_start":83,"line_end":83,"column_start":36,"column_end":43},"alias_span":null,"name":"JoinAll","value":"","parent":{"krate":0,"index":18}},{"kind":"Use","ref_id":{"krate":0,"index":1382},"span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\future\\mod.rs","byte_start":13930,"byte_end":13936,"line_start":86,"line_end":86,"column_start":24,"column_end":30},"alias_span":null,"name":"select","value":"","parent":{"krate":0,"index":18}},{"kind":"Use","ref_id":{"krate":0,"index":12189},"span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\future\\mod.rs","byte_start":13938,"byte_end":13944,"line_start":86,"line_end":86,"column_start":32,"column_end":38},"alias_span":null,"name":"Select","value":"","parent":{"krate":0,"index":18}},{"kind":"Use","ref_id":{"krate":0,"index":1432},"span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\future\\mod.rs","byte_start":14043,"byte_end":14053,"line_start":91,"line_end":91,"column_start":28,"column_end":38},"alias_span":null,"name":"select_all","value":"","parent":{"krate":0,"index":18}},{"kind":"Use","ref_id":{"krate":0,"index":12197},"span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\future\\mod.rs","byte_start":14055,"byte_end":14064,"line_start":91,"line_end":91,"column_start":40,"column_end":49},"alias_span":null,"name":"SelectAll","value":"","parent":{"krate":0,"index":18}},{"kind":"Use","ref_id":{"krate":0,"index":1488},"span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\future\\mod.rs","byte_start":14112,"byte_end":14120,"line_start":95,"line_end":95,"column_start":5,"column_end":13},"alias_span":null,"name":"try_join","value":"","parent":{"krate":0,"index":18}},{"kind":"Use","ref_id":{"krate":0,"index":1491},"span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\future\\mod.rs","byte_start":14122,"byte_end":14131,"line_start":95,"line_end":95,"column_start":15,"column_end":24},"alias_span":null,"name":"try_join3","value":"","parent":{"krate":0,"index":18}},{"kind":"Use","ref_id":{"krate":0,"index":1495},"span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\future\\mod.rs","byte_start":14133,"byte_end":14142,"line_start":95,"line_end":95,"column_start":26,"column_end":35},"alias_span":null,"name":"try_join4","value":"","parent":{"krate":0,"index":18}},{"kind":"Use","ref_id":{"krate":0,"index":1500},"span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\future\\mod.rs","byte_start":14144,"byte_end":14153,"line_start":95,"line_end":95,"column_start":37,"column_end":46},"alias_span":null,"name":"try_join5","value":"","parent":{"krate":0,"index":18}},{"kind":"Use","ref_id":{"krate":0,"index":12273},"span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\future\\mod.rs","byte_start":14155,"byte_end":14162,"line_start":95,"line_end":95,"column_start":48,"column_end":55},"alias_span":null,"name":"TryJoin","value":"","parent":{"krate":0,"index":18}},{"kind":"Use","ref_id":{"krate":0,"index":12318},"span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\future\\mod.rs","byte_start":14164,"byte_end":14172,"line_start":95,"line_end":95,"column_start":57,"column_end":65},"alias_span":null,"name":"TryJoin3","value":"","parent":{"krate":0,"index":18}},{"kind":"Use","ref_id":{"krate":0,"index":12375},"span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\future\\mod.rs","byte_start":14174,"byte_end":14182,"line_start":95,"line_end":95,"column_start":67,"column_end":75},"alias_span":null,"name":"TryJoin4","value":"","parent":{"krate":0,"index":18}},{"kind":"Use","ref_id":{"krate":0,"index":12444},"span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\future\\mod.rs","byte_start":14184,"byte_end":14192,"line_start":95,"line_end":95,"column_start":77,"column_end":85},"alias_span":null,"name":"TryJoin5","value":"","parent":{"krate":0,"index":18}},{"kind":"Use","ref_id":{"krate":0,"index":1589},"span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\future\\mod.rs","byte_start":14297,"byte_end":14309,"line_start":101,"line_end":101,"column_start":30,"column_end":42},"alias_span":null,"name":"try_join_all","value":"","parent":{"krate":0,"index":18}},{"kind":"Use","ref_id":{"krate":0,"index":1583},"span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\future\\mod.rs","byte_start":14311,"byte_end":14321,"line_start":101,"line_end":101,"column_start":44,"column_end":54},"alias_span":null,"name":"TryJoinAll","value":"","parent":{"krate":0,"index":18}},{"kind":"Use","ref_id":{"krate":0,"index":1635},"span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\future\\mod.rs","byte_start":14368,"byte_end":14378,"line_start":104,"line_end":104,"column_start":28,"column_end":38},"alias_span":null,"name":"try_select","value":"","parent":{"krate":0,"index":18}},{"kind":"Use","ref_id":{"krate":0,"index":12525},"span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\future\\mod.rs","byte_start":14380,"byte_end":14389,"line_start":104,"line_end":104,"column_start":40,"column_end":49},"alias_span":null,"name":"TrySelect","value":"","parent":{"krate":0,"index":18}},{"kind":"Use","ref_id":{"krate":0,"index":1685},"span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\future\\mod.rs","byte_start":14486,"byte_end":14495,"line_start":109,"line_end":109,"column_start":27,"column_end":36},"alias_span":null,"name":"select_ok","value":"","parent":{"krate":0,"index":18}},{"kind":"Use","ref_id":{"krate":0,"index":12533},"span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\future\\mod.rs","byte_start":14497,"byte_end":14505,"line_start":109,"line_end":109,"column_start":38,"column_end":46},"alias_span":null,"name":"SelectOk","value":"","parent":{"krate":0,"index":18}},{"kind":"Use","ref_id":{"krate":0,"index":12539},"span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\future\\mod.rs","byte_start":14543,"byte_end":14549,"line_start":112,"line_end":112,"column_start":23,"column_end":29},"alias_span":null,"name":"Either","value":"","parent":{"krate":0,"index":18}},{"kind":"Use","ref_id":{"krate":0,"index":18160},"span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\future\\mod.rs","byte_start":14716,"byte_end":14727,"line_start":119,"line_end":119,"column_start":28,"column_end":39},"alias_span":null,"name":"AbortHandle","value":"","parent":{"krate":0,"index":18}},{"kind":"Use","ref_id":{"krate":0,"index":18156},"span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\future\\mod.rs","byte_start":14729,"byte_end":14746,"line_start":119,"line_end":119,"column_start":41,"column_end":58},"alias_span":null,"name":"AbortRegistration","value":"","parent":{"krate":0,"index":18}},{"kind":"Use","ref_id":{"krate":0,"index":18113},"span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\future\\mod.rs","byte_start":14748,"byte_end":14757,"line_start":119,"line_end":119,"column_start":60,"column_end":69},"alias_span":null,"name":"Abortable","value":"","parent":{"krate":0,"index":18}},{"kind":"Use","ref_id":{"krate":0,"index":18171},"span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\future\\mod.rs","byte_start":14759,"byte_end":14766,"line_start":119,"line_end":119,"column_start":71,"column_end":78},"alias_span":null,"name":"Aborted","value":"","parent":{"krate":0,"index":18}},{"kind":"Use","ref_id":{"krate":0,"index":18172},"span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\future\\mod.rs","byte_start":14759,"byte_end":14766,"line_start":119,"line_end":119,"column_start":71,"column_end":78},"alias_span":null,"name":"Aborted","value":"","parent":{"krate":0,"index":18}},{"kind":"Use","ref_id":{"krate":0,"index":1854},"span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\future\\mod.rs","byte_start":14849,"byte_end":14858,"line_start":122,"line_end":122,"column_start":20,"column_end":29},"alias_span":null,"name":"abortable","value":"","parent":{"krate":0,"index":18}},{"kind":"Use","ref_id":{"krate":2,"index":13098},"span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\lib.rs","byte_start":10673,"byte_end":10679,"line_start":296,"line_end":296,"column_start":25,"column_end":31},"alias_span":null,"name":"Future","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":448},"span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\lib.rs","byte_start":10681,"byte_end":10690,"line_start":296,"line_end":296,"column_start":33,"column_end":42},"alias_span":null,"name":"FutureExt","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":16,"index":44},"span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\lib.rs","byte_start":10692,"byte_end":10701,"line_start":296,"line_end":296,"column_start":44,"column_end":53},"alias_span":null,"name":"TryFuture","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":741},"span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\lib.rs","byte_start":10703,"byte_end":10715,"line_start":296,"line_end":296,"column_start":55,"column_end":67},"alias_span":null,"name":"TryFutureExt","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":16,"index":90},"span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\mod.rs","byte_start":147280,"byte_end":147289,"line_start":13,"line_end":13,"column_start":32,"column_end":41},"alias_span":null,"name":"BoxStream","value":"","parent":{"krate":0,"index":1888}},{"kind":"Use","ref_id":{"krate":16,"index":93},"span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\mod.rs","byte_start":147291,"byte_end":147305,"line_start":13,"line_end":13,"column_start":43,"column_end":57},"alias_span":null,"name":"LocalBoxStream","value":"","parent":{"krate":0,"index":1888}},{"kind":"Use","ref_id":{"krate":16,"index":110},"span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\mod.rs","byte_start":147339,"byte_end":147350,"line_start":14,"line_end":14,"column_start":32,"column_end":43},"alias_span":null,"name":"FusedStream","value":"","parent":{"krate":0,"index":1888}},{"kind":"Use","ref_id":{"krate":16,"index":96},"span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\mod.rs","byte_start":147352,"byte_end":147358,"line_start":14,"line_end":14,"column_start":45,"column_end":51},"alias_span":null,"name":"Stream","value":"","parent":{"krate":0,"index":1888}},{"kind":"Use","ref_id":{"krate":16,"index":127},"span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\mod.rs","byte_start":147360,"byte_end":147369,"line_start":14,"line_end":14,"column_start":53,"column_end":62},"alias_span":null,"name":"TryStream","value":"","parent":{"krate":0,"index":1888}},{"kind":"Use","ref_id":{"krate":0,"index":12556},"span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\stream\\mod.rs","byte_start":151675,"byte_end":151680,"line_start":29,"line_end":29,"column_start":22,"column_end":27},"alias_span":null,"name":"Chain","value":"","parent":{"krate":0,"index":1906}},{"kind":"Use","ref_id":{"krate":0,"index":12605},"span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\stream\\mod.rs","byte_start":151795,"byte_end":151802,"line_start":33,"line_end":33,"column_start":24,"column_end":31},"alias_span":null,"name":"Collect","value":"","parent":{"krate":0,"index":1906}},{"kind":"Use","ref_id":{"krate":0,"index":12654},"span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\stream\\mod.rs","byte_start":151913,"byte_end":151918,"line_start":37,"line_end":37,"column_start":22,"column_end":27},"alias_span":null,"name":"Unzip","value":"","parent":{"krate":0,"index":1906}},{"kind":"Use","ref_id":{"krate":0,"index":12716},"span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\stream\\mod.rs","byte_start":152031,"byte_end":152037,"line_start":41,"line_end":41,"column_start":23,"column_end":29},"alias_span":null,"name":"Concat","value":"","parent":{"krate":0,"index":1906}},{"kind":"Use","ref_id":{"krate":0,"index":12793},"span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\stream\\mod.rs","byte_start":152264,"byte_end":152269,"line_start":49,"line_end":49,"column_start":22,"column_end":27},"alias_span":null,"name":"Cycle","value":"","parent":{"krate":0,"index":1906}},{"kind":"Use","ref_id":{"krate":0,"index":12833},"span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\stream\\mod.rs","byte_start":152388,"byte_end":152397,"line_start":53,"line_end":53,"column_start":26,"column_end":35},"alias_span":null,"name":"Enumerate","value":"","parent":{"krate":0,"index":1906}},{"kind":"Use","ref_id":{"krate":0,"index":12881},"span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\stream\\mod.rs","byte_start":152510,"byte_end":152516,"line_start":57,"line_end":57,"column_start":23,"column_end":29},"alias_span":null,"name":"Filter","value":"","parent":{"krate":0,"index":1906}},{"kind":"Use","ref_id":{"krate":0,"index":12950},"span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\stream\\mod.rs","byte_start":152637,"byte_end":152646,"line_start":61,"line_end":61,"column_start":27,"column_end":36},"alias_span":null,"name":"FilterMap","value":"","parent":{"krate":0,"index":1906}},{"kind":"Use","ref_id":{"krate":0,"index":13135},"span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\stream\\mod.rs","byte_start":153034,"byte_end":153038,"line_start":75,"line_end":75,"column_start":21,"column_end":25},"alias_span":null,"name":"Fold","value":"","parent":{"krate":0,"index":1906}},{"kind":"Use","ref_id":{"krate":0,"index":13449},"span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\stream\\mod.rs","byte_start":153752,"byte_end":153759,"line_start":100,"line_end":100,"column_start":25,"column_end":32},"alias_span":null,"name":"ForEach","value":"","parent":{"krate":0,"index":1906}},{"kind":"Use","ref_id":{"krate":0,"index":13506},"span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\stream\\mod.rs","byte_start":153868,"byte_end":153872,"line_start":104,"line_end":104,"column_start":21,"column_end":25},"alias_span":null,"name":"Fuse","value":"","parent":{"krate":0,"index":1906}},{"kind":"Use","ref_id":{"krate":0,"index":13554},"span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\stream\\mod.rs","byte_start":153995,"byte_end":154007,"line_start":108,"line_end":108,"column_start":28,"column_end":40},"alias_span":null,"name":"StreamFuture","value":"","parent":{"krate":0,"index":1906}},{"kind":"Use","ref_id":{"krate":0,"index":13638},"span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\stream\\mod.rs","byte_start":154370,"byte_end":154373,"line_start":119,"line_end":119,"column_start":20,"column_end":23},"alias_span":null,"name":"Map","value":"","parent":{"krate":0,"index":1906}},{"kind":"Use","ref_id":{"krate":0,"index":13784},"span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\stream\\mod.rs","byte_start":154756,"byte_end":154760,"line_start":130,"line_end":130,"column_start":21,"column_end":25},"alias_span":null,"name":"Next","value":"","parent":{"krate":0,"index":1906}},{"kind":"Use","ref_id":{"krate":0,"index":13792},"span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\stream\\mod.rs","byte_start":154893,"byte_end":154907,"line_start":134,"line_end":134,"column_start":33,"column_end":47},"alias_span":null,"name":"SelectNextSome","value":"","parent":{"krate":0,"index":1906}},{"kind":"Use","ref_id":{"krate":0,"index":13930},"span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\stream\\mod.rs","byte_start":155017,"byte_end":155023,"line_start":138,"line_end":138,"column_start":22,"column_end":28},"alias_span":null,"name":"NextIf","value":"","parent":{"krate":0,"index":1906}},{"kind":"Use","ref_id":{"krate":0,"index":13979},"span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\stream\\mod.rs","byte_start":155025,"byte_end":155033,"line_start":138,"line_end":138,"column_start":30,"column_end":38},"alias_span":null,"name":"NextIfEq","value":"","parent":{"krate":0,"index":1906}},{"kind":"Use","ref_id":{"krate":0,"index":13848},"span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\stream\\mod.rs","byte_start":155035,"byte_end":155039,"line_start":138,"line_end":138,"column_start":40,"column_end":44},"alias_span":null,"name":"Peek","value":"","parent":{"krate":0,"index":1906}},{"kind":"Use","ref_id":{"krate":0,"index":13889},"span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\stream\\mod.rs","byte_start":155041,"byte_end":155048,"line_start":138,"line_end":138,"column_start":46,"column_end":53},"alias_span":null,"name":"PeekMut","value":"","parent":{"krate":0,"index":1906}},{"kind":"Use","ref_id":{"krate":0,"index":13800},"span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\stream\\mod.rs","byte_start":155050,"byte_end":155058,"line_start":138,"line_end":138,"column_start":55,"column_end":63},"alias_span":null,"name":"Peekable","value":"","parent":{"krate":0,"index":1906}},{"kind":"Use","ref_id":{"krate":0,"index":14028},"span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\stream\\mod.rs","byte_start":155168,"byte_end":155172,"line_start":142,"line_end":142,"column_start":21,"column_end":25},"alias_span":null,"name":"Skip","value":"","parent":{"krate":0,"index":1906}},{"kind":"Use","ref_id":{"krate":0,"index":14076},"span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\stream\\mod.rs","byte_start":155293,"byte_end":155302,"line_start":146,"line_end":146,"column_start":27,"column_end":36},"alias_span":null,"name":"SkipWhile","value":"","parent":{"krate":0,"index":1906}},{"kind":"Use","ref_id":{"krate":0,"index":14149},"span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\stream\\mod.rs","byte_start":155411,"byte_end":155415,"line_start":150,"line_end":150,"column_start":21,"column_end":25},"alias_span":null,"name":"Take","value":"","parent":{"krate":0,"index":1906}},{"kind":"Use","ref_id":{"krate":0,"index":14197},"span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\stream\\mod.rs","byte_start":155536,"byte_end":155545,"line_start":154,"line_end":154,"column_start":27,"column_end":36},"alias_span":null,"name":"TakeWhile","value":"","parent":{"krate":0,"index":1906}},{"kind":"Use","ref_id":{"krate":0,"index":14270},"span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\stream\\mod.rs","byte_start":155666,"byte_end":155675,"line_start":158,"line_end":158,"column_start":27,"column_end":36},"alias_span":null,"name":"TakeUntil","value":"","parent":{"krate":0,"index":1906}},{"kind":"Use","ref_id":{"krate":0,"index":14331},"span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\stream\\mod.rs","byte_start":155784,"byte_end":155788,"line_start":162,"line_end":162,"column_start":21,"column_end":25},"alias_span":null,"name":"Then","value":"","parent":{"krate":0,"index":1906}},{"kind":"Use","ref_id":{"krate":0,"index":14396},"span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\stream\\mod.rs","byte_start":155895,"byte_end":155898,"line_start":166,"line_end":166,"column_start":20,"column_end":23},"alias_span":null,"name":"Zip","value":"","parent":{"krate":0,"index":1906}},{"kind":"Use","ref_id":{"krate":0,"index":14453},"span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\stream\\mod.rs","byte_start":156063,"byte_end":156069,"line_start":172,"line_end":172,"column_start":23,"column_end":29},"alias_span":null,"name":"Chunks","value":"","parent":{"krate":0,"index":1906}},{"kind":"Use","ref_id":{"krate":0,"index":14505},"span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\stream\\mod.rs","byte_start":156246,"byte_end":156257,"line_start":178,"line_end":178,"column_start":29,"column_end":40},"alias_span":null,"name":"ReadyChunks","value":"","parent":{"krate":0,"index":1906}},{"kind":"Use","ref_id":{"krate":0,"index":14557},"span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\stream\\mod.rs","byte_start":156366,"byte_end":156370,"line_start":182,"line_end":182,"column_start":21,"column_end":25},"alias_span":null,"name":"Scan","value":"","parent":{"krate":0,"index":1906}},{"kind":"Use","ref_id":{"krate":0,"index":14630},"span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\stream\\mod.rs","byte_start":156625,"byte_end":156640,"line_start":190,"line_end":190,"column_start":33,"column_end":48},"alias_span":null,"name":"BufferUnordered","value":"","parent":{"krate":0,"index":1906}},{"kind":"Use","ref_id":{"krate":0,"index":14679},"span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\stream\\mod.rs","byte_start":156879,"byte_end":156887,"line_start":198,"line_end":198,"column_start":25,"column_end":33},"alias_span":null,"name":"Buffered","value":"","parent":{"krate":0,"index":1906}},{"kind":"Use","ref_id":{"krate":0,"index":14925},"span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\stream\\mod.rs","byte_start":157829,"byte_end":157846,"line_start":225,"line_end":225,"column_start":36,"column_end":53},"alias_span":null,"name":"ForEachConcurrent","value":"","parent":{"krate":0,"index":1906}},{"kind":"Use","ref_id":{"krate":0,"index":4121},"span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\stream\\mod.rs","byte_start":158226,"byte_end":158238,"line_start":237,"line_end":237,"column_start":23,"column_end":35},"alias_span":null,"name":"ReuniteError","value":"","parent":{"krate":0,"index":1906}},{"kind":"Use","ref_id":{"krate":0,"index":4122},"span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\stream\\mod.rs","byte_start":158226,"byte_end":158238,"line_start":237,"line_end":237,"column_start":23,"column_end":35},"alias_span":null,"name":"ReuniteError","value":"","parent":{"krate":0,"index":1906}},{"kind":"Use","ref_id":{"krate":0,"index":14993},"span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\stream\\mod.rs","byte_start":158240,"byte_end":158249,"line_start":237,"line_end":237,"column_start":37,"column_end":46},"alias_span":null,"name":"SplitSink","value":"","parent":{"krate":0,"index":1906}},{"kind":"Use","ref_id":{"krate":0,"index":14986},"span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\stream\\mod.rs","byte_start":158251,"byte_end":158262,"line_start":237,"line_end":237,"column_start":48,"column_end":59},"alias_span":null,"name":"SplitStream","value":"","parent":{"krate":0,"index":1906}},{"kind":"Use","ref_id":{"krate":0,"index":15002},"span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\stream\\mod.rs","byte_start":158436,"byte_end":158447,"line_start":243,"line_end":243,"column_start":29,"column_end":40},"alias_span":null,"name":"CatchUnwind","value":"","parent":{"krate":0,"index":1906}},{"kind":"Use","ref_id":{"krate":0,"index":12556},"span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\mod.rs","byte_start":147485,"byte_end":147490,"line_start":21,"line_end":21,"column_start":5,"column_end":10},"alias_span":null,"name":"Chain","value":"","parent":{"krate":0,"index":1888}},{"kind":"Use","ref_id":{"krate":0,"index":12605},"span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\mod.rs","byte_start":147492,"byte_end":147499,"line_start":21,"line_end":21,"column_start":12,"column_end":19},"alias_span":null,"name":"Collect","value":"","parent":{"krate":0,"index":1888}},{"kind":"Use","ref_id":{"krate":0,"index":12716},"span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\mod.rs","byte_start":147501,"byte_end":147507,"line_start":21,"line_end":21,"column_start":21,"column_end":27},"alias_span":null,"name":"Concat","value":"","parent":{"krate":0,"index":1888}},{"kind":"Use","ref_id":{"krate":0,"index":12793},"span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\mod.rs","byte_start":147509,"byte_end":147514,"line_start":21,"line_end":21,"column_start":29,"column_end":34},"alias_span":null,"name":"Cycle","value":"","parent":{"krate":0,"index":1888}},{"kind":"Use","ref_id":{"krate":0,"index":12833},"span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\mod.rs","byte_start":147516,"byte_end":147525,"line_start":21,"line_end":21,"column_start":36,"column_end":45},"alias_span":null,"name":"Enumerate","value":"","parent":{"krate":0,"index":1888}},{"kind":"Use","ref_id":{"krate":0,"index":12881},"span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\mod.rs","byte_start":147527,"byte_end":147533,"line_start":21,"line_end":21,"column_start":47,"column_end":53},"alias_span":null,"name":"Filter","value":"","parent":{"krate":0,"index":1888}},{"kind":"Use","ref_id":{"krate":0,"index":12950},"span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\mod.rs","byte_start":147535,"byte_end":147544,"line_start":21,"line_end":21,"column_start":55,"column_end":64},"alias_span":null,"name":"FilterMap","value":"","parent":{"krate":0,"index":1888}},{"kind":"Use","ref_id":{"krate":0,"index":13695},"span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\mod.rs","byte_start":147546,"byte_end":147553,"line_start":21,"line_end":21,"column_start":66,"column_end":73},"alias_span":null,"name":"FlatMap","value":"","parent":{"krate":0,"index":1888}},{"kind":"Use","ref_id":{"krate":0,"index":13074},"span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\mod.rs","byte_start":147555,"byte_end":147562,"line_start":21,"line_end":21,"column_start":75,"column_end":82},"alias_span":null,"name":"Flatten","value":"","parent":{"krate":0,"index":1888}},{"kind":"Use","ref_id":{"krate":0,"index":13135},"span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\mod.rs","byte_start":147564,"byte_end":147568,"line_start":21,"line_end":21,"column_start":84,"column_end":88},"alias_span":null,"name":"Fold","value":"","parent":{"krate":0,"index":1888}},{"kind":"Use","ref_id":{"krate":0,"index":13449},"span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\mod.rs","byte_start":147570,"byte_end":147577,"line_start":21,"line_end":21,"column_start":90,"column_end":97},"alias_span":null,"name":"ForEach","value":"","parent":{"krate":0,"index":1888}},{"kind":"Use","ref_id":{"krate":0,"index":13506},"span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\mod.rs","byte_start":147583,"byte_end":147587,"line_start":22,"line_end":22,"column_start":5,"column_end":9},"alias_span":null,"name":"Fuse","value":"","parent":{"krate":0,"index":1888}},{"kind":"Use","ref_id":{"krate":0,"index":13563},"span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\mod.rs","byte_start":147589,"byte_end":147596,"line_start":22,"line_end":22,"column_start":11,"column_end":18},"alias_span":null,"name":"Inspect","value":"","parent":{"krate":0,"index":1888}},{"kind":"Use","ref_id":{"krate":0,"index":13638},"span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\mod.rs","byte_start":147598,"byte_end":147601,"line_start":22,"line_end":22,"column_start":20,"column_end":23},"alias_span":null,"name":"Map","value":"","parent":{"krate":0,"index":1888}},{"kind":"Use","ref_id":{"krate":0,"index":13784},"span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\mod.rs","byte_start":147603,"byte_end":147607,"line_start":22,"line_end":22,"column_start":25,"column_end":29},"alias_span":null,"name":"Next","value":"","parent":{"krate":0,"index":1888}},{"kind":"Use","ref_id":{"krate":0,"index":13930},"span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\mod.rs","byte_start":147609,"byte_end":147615,"line_start":22,"line_end":22,"column_start":31,"column_end":37},"alias_span":null,"name":"NextIf","value":"","parent":{"krate":0,"index":1888}},{"kind":"Use","ref_id":{"krate":0,"index":13979},"span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\mod.rs","byte_start":147617,"byte_end":147625,"line_start":22,"line_end":22,"column_start":39,"column_end":47},"alias_span":null,"name":"NextIfEq","value":"","parent":{"krate":0,"index":1888}},{"kind":"Use","ref_id":{"krate":0,"index":13848},"span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\mod.rs","byte_start":147627,"byte_end":147631,"line_start":22,"line_end":22,"column_start":49,"column_end":53},"alias_span":null,"name":"Peek","value":"","parent":{"krate":0,"index":1888}},{"kind":"Use","ref_id":{"krate":0,"index":13889},"span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\mod.rs","byte_start":147633,"byte_end":147640,"line_start":22,"line_end":22,"column_start":55,"column_end":62},"alias_span":null,"name":"PeekMut","value":"","parent":{"krate":0,"index":1888}},{"kind":"Use","ref_id":{"krate":0,"index":13800},"span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\mod.rs","byte_start":147642,"byte_end":147650,"line_start":22,"line_end":22,"column_start":64,"column_end":72},"alias_span":null,"name":"Peekable","value":"","parent":{"krate":0,"index":1888}},{"kind":"Use","ref_id":{"krate":0,"index":14557},"span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\mod.rs","byte_start":147652,"byte_end":147656,"line_start":22,"line_end":22,"column_start":74,"column_end":78},"alias_span":null,"name":"Scan","value":"","parent":{"krate":0,"index":1888}},{"kind":"Use","ref_id":{"krate":0,"index":13792},"span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\mod.rs","byte_start":147658,"byte_end":147672,"line_start":22,"line_end":22,"column_start":80,"column_end":94},"alias_span":null,"name":"SelectNextSome","value":"","parent":{"krate":0,"index":1888}},{"kind":"Use","ref_id":{"krate":0,"index":14028},"span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\mod.rs","byte_start":147678,"byte_end":147682,"line_start":23,"line_end":23,"column_start":5,"column_end":9},"alias_span":null,"name":"Skip","value":"","parent":{"krate":0,"index":1888}},{"kind":"Use","ref_id":{"krate":0,"index":14076},"span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\mod.rs","byte_start":147684,"byte_end":147693,"line_start":23,"line_end":23,"column_start":11,"column_end":20},"alias_span":null,"name":"SkipWhile","value":"","parent":{"krate":0,"index":1888}},{"kind":"Use","ref_id":{"krate":0,"index":4200},"span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\mod.rs","byte_start":147695,"byte_end":147704,"line_start":23,"line_end":23,"column_start":22,"column_end":31},"alias_span":null,"name":"StreamExt","value":"","parent":{"krate":0,"index":1888}},{"kind":"Use","ref_id":{"krate":0,"index":13554},"span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\mod.rs","byte_start":147706,"byte_end":147718,"line_start":23,"line_end":23,"column_start":33,"column_end":45},"alias_span":null,"name":"StreamFuture","value":"","parent":{"krate":0,"index":1888}},{"kind":"Use","ref_id":{"krate":0,"index":14149},"span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\mod.rs","byte_start":147720,"byte_end":147724,"line_start":23,"line_end":23,"column_start":47,"column_end":51},"alias_span":null,"name":"Take","value":"","parent":{"krate":0,"index":1888}},{"kind":"Use","ref_id":{"krate":0,"index":14270},"span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\mod.rs","byte_start":147726,"byte_end":147735,"line_start":23,"line_end":23,"column_start":53,"column_end":62},"alias_span":null,"name":"TakeUntil","value":"","parent":{"krate":0,"index":1888}},{"kind":"Use","ref_id":{"krate":0,"index":14197},"span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\mod.rs","byte_start":147737,"byte_end":147746,"line_start":23,"line_end":23,"column_start":64,"column_end":73},"alias_span":null,"name":"TakeWhile","value":"","parent":{"krate":0,"index":1888}},{"kind":"Use","ref_id":{"krate":0,"index":14331},"span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\mod.rs","byte_start":147748,"byte_end":147752,"line_start":23,"line_end":23,"column_start":75,"column_end":79},"alias_span":null,"name":"Then","value":"","parent":{"krate":0,"index":1888}},{"kind":"Use","ref_id":{"krate":0,"index":12654},"span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\mod.rs","byte_start":147754,"byte_end":147759,"line_start":23,"line_end":23,"column_start":81,"column_end":86},"alias_span":null,"name":"Unzip","value":"","parent":{"krate":0,"index":1888}},{"kind":"Use","ref_id":{"krate":0,"index":14396},"span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\mod.rs","byte_start":147761,"byte_end":147764,"line_start":23,"line_end":23,"column_start":88,"column_end":91},"alias_span":null,"name":"Zip","value":"","parent":{"krate":0,"index":1888}},{"kind":"Use","ref_id":{"krate":0,"index":15002},"span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\mod.rs","byte_start":147816,"byte_end":147827,"line_start":27,"line_end":27,"column_start":23,"column_end":34},"alias_span":null,"name":"CatchUnwind","value":"","parent":{"krate":0,"index":1888}},{"kind":"Use","ref_id":{"krate":0,"index":14453},"span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\mod.rs","byte_start":147878,"byte_end":147884,"line_start":30,"line_end":30,"column_start":23,"column_end":29},"alias_span":null,"name":"Chunks","value":"","parent":{"krate":0,"index":1888}},{"kind":"Use","ref_id":{"krate":0,"index":14505},"span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\mod.rs","byte_start":147935,"byte_end":147946,"line_start":33,"line_end":33,"column_start":23,"column_end":34},"alias_span":null,"name":"ReadyChunks","value":"","parent":{"krate":0,"index":1888}},{"kind":"Use","ref_id":{"krate":0,"index":13391},"span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\mod.rs","byte_start":148044,"byte_end":148051,"line_start":37,"line_end":37,"column_start":23,"column_end":30},"alias_span":null,"name":"Forward","value":"","parent":{"krate":0,"index":1888}},{"kind":"Use","ref_id":{"krate":0,"index":14630},"span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\mod.rs","byte_start":148138,"byte_end":148153,"line_start":41,"line_end":41,"column_start":24,"column_end":39},"alias_span":null,"name":"BufferUnordered","value":"","parent":{"krate":0,"index":1888}},{"kind":"Use","ref_id":{"krate":0,"index":14679},"span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\mod.rs","byte_start":148155,"byte_end":148163,"line_start":41,"line_end":41,"column_start":41,"column_end":49},"alias_span":null,"name":"Buffered","value":"","parent":{"krate":0,"index":1888}},{"kind":"Use","ref_id":{"krate":0,"index":14925},"span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\mod.rs","byte_start":148165,"byte_end":148182,"line_start":41,"line_end":41,"column_start":51,"column_end":68},"alias_span":null,"name":"ForEachConcurrent","value":"","parent":{"krate":0,"index":1888}},{"kind":"Use","ref_id":{"krate":0,"index":4121},"span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\mod.rs","byte_start":148343,"byte_end":148355,"line_start":47,"line_end":47,"column_start":24,"column_end":36},"alias_span":null,"name":"ReuniteError","value":"","parent":{"krate":0,"index":1888}},{"kind":"Use","ref_id":{"krate":0,"index":4122},"span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\mod.rs","byte_start":148343,"byte_end":148355,"line_start":47,"line_end":47,"column_start":24,"column_end":36},"alias_span":null,"name":"ReuniteError","value":"","parent":{"krate":0,"index":1888}},{"kind":"Use","ref_id":{"krate":0,"index":14993},"span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\mod.rs","byte_start":148357,"byte_end":148366,"line_start":47,"line_end":47,"column_start":38,"column_end":47},"alias_span":null,"name":"SplitSink","value":"","parent":{"krate":0,"index":1888}},{"kind":"Use","ref_id":{"krate":0,"index":14986},"span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\mod.rs","byte_start":148368,"byte_end":148379,"line_start":47,"line_end":47,"column_start":49,"column_end":60},"alias_span":null,"name":"SplitStream","value":"","parent":{"krate":0,"index":1888}},{"kind":"Use","ref_id":{"krate":0,"index":15046},"span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\try_stream\\mod.rs","byte_start":329577,"byte_end":329584,"line_start":26,"line_end":26,"column_start":25,"column_end":32},"alias_span":null,"name":"AndThen","value":"","parent":{"krate":0,"index":4426}},{"kind":"Use","ref_id":{"krate":0,"index":15345},"span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\try_stream\\mod.rs","byte_start":330579,"byte_end":330589,"line_start":51,"line_end":51,"column_start":28,"column_end":38},"alias_span":null,"name":"IntoStream","value":"","parent":{"krate":0,"index":4426}},{"kind":"Use","ref_id":{"krate":0,"index":15545},"span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\try_stream\\mod.rs","byte_start":331269,"byte_end":331275,"line_start":69,"line_end":69,"column_start":24,"column_end":30},"alias_span":null,"name":"OrElse","value":"","parent":{"krate":0,"index":4426}},{"kind":"Use","ref_id":{"krate":0,"index":15610},"span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\try_stream\\mod.rs","byte_start":331392,"byte_end":331399,"line_start":73,"line_end":73,"column_start":25,"column_end":32},"alias_span":null,"name":"TryNext","value":"","parent":{"krate":0,"index":4426}},{"kind":"Use","ref_id":{"krate":0,"index":15618},"span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\try_stream\\mod.rs","byte_start":331524,"byte_end":331534,"line_start":77,"line_end":77,"column_start":29,"column_end":39},"alias_span":null,"name":"TryForEach","value":"","parent":{"krate":0,"index":4426}},{"kind":"Use","ref_id":{"krate":0,"index":15675},"span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\try_stream\\mod.rs","byte_start":331655,"byte_end":331664,"line_start":81,"line_end":81,"column_start":27,"column_end":36},"alias_span":null,"name":"TryFilter","value":"","parent":{"krate":0,"index":4426}},{"kind":"Use","ref_id":{"krate":0,"index":15744},"span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\try_stream\\mod.rs","byte_start":331793,"byte_end":331805,"line_start":85,"line_end":85,"column_start":31,"column_end":43},"alias_span":null,"name":"TryFilterMap","value":"","parent":{"krate":0,"index":4426}},{"kind":"Use","ref_id":{"krate":0,"index":15809},"span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\try_stream\\mod.rs","byte_start":331928,"byte_end":331938,"line_start":89,"line_end":89,"column_start":28,"column_end":38},"alias_span":null,"name":"TryFlatten","value":"","parent":{"krate":0,"index":4426}},{"kind":"Use","ref_id":{"krate":0,"index":15857},"span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\try_stream\\mod.rs","byte_start":332061,"byte_end":332071,"line_start":93,"line_end":93,"column_start":28,"column_end":38},"alias_span":null,"name":"TryCollect","value":"","parent":{"krate":0,"index":4426}},{"kind":"Use","ref_id":{"krate":0,"index":15906},"span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\try_stream\\mod.rs","byte_start":332192,"byte_end":332201,"line_start":97,"line_end":97,"column_start":27,"column_end":36},"alias_span":null,"name":"TryConcat","value":"","parent":{"krate":0,"index":4426}},{"kind":"Use","ref_id":{"krate":0,"index":15946},"span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\try_stream\\mod.rs","byte_start":332375,"byte_end":332384,"line_start":103,"line_end":103,"column_start":28,"column_end":37},"alias_span":null,"name":"TryChunks","value":"","parent":{"krate":0,"index":4426}},{"kind":"Use","ref_id":{"krate":0,"index":15998},"span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\try_stream\\mod.rs","byte_start":332386,"byte_end":332400,"line_start":103,"line_end":103,"column_start":39,"column_end":53},"alias_span":null,"name":"TryChunksError","value":"","parent":{"krate":0,"index":4426}},{"kind":"Use","ref_id":{"krate":0,"index":15999},"span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\try_stream\\mod.rs","byte_start":332386,"byte_end":332400,"line_start":103,"line_end":103,"column_start":39,"column_end":53},"alias_span":null,"name":"TryChunksError","value":"","parent":{"krate":0,"index":4426}},{"kind":"Use","ref_id":{"krate":0,"index":16019},"span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\try_stream\\mod.rs","byte_start":332518,"byte_end":332525,"line_start":107,"line_end":107,"column_start":25,"column_end":32},"alias_span":null,"name":"TryFold","value":"","parent":{"krate":0,"index":4426}},{"kind":"Use","ref_id":{"krate":0,"index":5208},"span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\try_stream\\mod.rs","byte_start":332647,"byte_end":332657,"line_start":111,"line_end":111,"column_start":28,"column_end":38},"alias_span":null,"name":"try_unfold","value":"","parent":{"krate":0,"index":4426}},{"kind":"Use","ref_id":{"krate":0,"index":16088},"span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\try_stream\\mod.rs","byte_start":332659,"byte_end":332668,"line_start":111,"line_end":111,"column_start":40,"column_end":49},"alias_span":null,"name":"TryUnfold","value":"","parent":{"krate":0,"index":4426}},{"kind":"Use","ref_id":{"krate":0,"index":16145},"span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\try_stream\\mod.rs","byte_start":332798,"byte_end":332810,"line_start":115,"line_end":115,"column_start":31,"column_end":43},"alias_span":null,"name":"TrySkipWhile","value":"","parent":{"krate":0,"index":4426}},{"kind":"Use","ref_id":{"krate":0,"index":16218},"span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\try_stream\\mod.rs","byte_start":332939,"byte_end":332951,"line_start":119,"line_end":119,"column_start":31,"column_end":43},"alias_span":null,"name":"TryTakeWhile","value":"","parent":{"krate":0,"index":4426}},{"kind":"Use","ref_id":{"krate":0,"index":16291},"span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\try_stream\\mod.rs","byte_start":333214,"byte_end":333232,"line_start":127,"line_end":127,"column_start":37,"column_end":55},"alias_span":null,"name":"TryBufferUnordered","value":"","parent":{"krate":0,"index":4426}},{"kind":"Use","ref_id":{"krate":0,"index":16343},"span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\try_stream\\mod.rs","byte_start":333479,"byte_end":333490,"line_start":135,"line_end":135,"column_start":29,"column_end":40},"alias_span":null,"name":"TryBuffered","value":"","parent":{"krate":0,"index":4426}},{"kind":"Use","ref_id":{"krate":0,"index":16395},"span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\try_stream\\mod.rs","byte_start":333759,"byte_end":333779,"line_start":143,"line_end":143,"column_start":40,"column_end":60},"alias_span":null,"name":"TryForEachConcurrent","value":"","parent":{"krate":0,"index":4426}},{"kind":"Use","ref_id":{"krate":0,"index":16456},"span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\try_stream\\mod.rs","byte_start":334050,"byte_end":334063,"line_start":152,"line_end":152,"column_start":32,"column_end":45},"alias_span":null,"name":"IntoAsyncRead","value":"","parent":{"krate":0,"index":4426}},{"kind":"Use","ref_id":{"krate":0,"index":5208},"span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\mod.rs","byte_start":148431,"byte_end":148441,"line_start":51,"line_end":51,"column_start":5,"column_end":15},"alias_span":null,"name":"try_unfold","value":"","parent":{"krate":0,"index":1888}},{"kind":"Use","ref_id":{"krate":0,"index":15046},"span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\mod.rs","byte_start":148443,"byte_end":148450,"line_start":51,"line_end":51,"column_start":17,"column_end":24},"alias_span":null,"name":"AndThen","value":"","parent":{"krate":0,"index":1888}},{"kind":"Use","ref_id":{"krate":0,"index":15114},"span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\mod.rs","byte_start":148452,"byte_end":148459,"line_start":51,"line_end":51,"column_start":26,"column_end":33},"alias_span":null,"name":"ErrInto","value":"","parent":{"krate":0,"index":1888}},{"kind":"Use","ref_id":{"krate":0,"index":15270},"span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\mod.rs","byte_start":148461,"byte_end":148471,"line_start":51,"line_end":51,"column_start":35,"column_end":45},"alias_span":null,"name":"InspectErr","value":"","parent":{"krate":0,"index":1888}},{"kind":"Use","ref_id":{"krate":0,"index":15192},"span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\mod.rs","byte_start":148473,"byte_end":148482,"line_start":51,"line_end":51,"column_start":47,"column_end":56},"alias_span":null,"name":"InspectOk","value":"","parent":{"krate":0,"index":1888}},{"kind":"Use","ref_id":{"krate":0,"index":15345},"span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\mod.rs","byte_start":148484,"byte_end":148494,"line_start":51,"line_end":51,"column_start":58,"column_end":68},"alias_span":null,"name":"IntoStream","value":"","parent":{"krate":0,"index":1888}},{"kind":"Use","ref_id":{"krate":0,"index":15470},"span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\mod.rs","byte_start":148496,"byte_end":148502,"line_start":51,"line_end":51,"column_start":70,"column_end":76},"alias_span":null,"name":"MapErr","value":"","parent":{"krate":0,"index":1888}},{"kind":"Use","ref_id":{"krate":0,"index":15392},"span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\mod.rs","byte_start":148504,"byte_end":148509,"line_start":51,"line_end":51,"column_start":78,"column_end":83},"alias_span":null,"name":"MapOk","value":"","parent":{"krate":0,"index":1888}},{"kind":"Use","ref_id":{"krate":0,"index":15545},"span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\mod.rs","byte_start":148511,"byte_end":148517,"line_start":51,"line_end":51,"column_start":85,"column_end":91},"alias_span":null,"name":"OrElse","value":"","parent":{"krate":0,"index":1888}},{"kind":"Use","ref_id":{"krate":0,"index":15857},"span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\mod.rs","byte_start":148523,"byte_end":148533,"line_start":52,"line_end":52,"column_start":5,"column_end":15},"alias_span":null,"name":"TryCollect","value":"","parent":{"krate":0,"index":1888}},{"kind":"Use","ref_id":{"krate":0,"index":15906},"span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\mod.rs","byte_start":148535,"byte_end":148544,"line_start":52,"line_end":52,"column_start":17,"column_end":26},"alias_span":null,"name":"TryConcat","value":"","parent":{"krate":0,"index":1888}},{"kind":"Use","ref_id":{"krate":0,"index":15675},"span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\mod.rs","byte_start":148546,"byte_end":148555,"line_start":52,"line_end":52,"column_start":28,"column_end":37},"alias_span":null,"name":"TryFilter","value":"","parent":{"krate":0,"index":1888}},{"kind":"Use","ref_id":{"krate":0,"index":15744},"span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\mod.rs","byte_start":148557,"byte_end":148569,"line_start":52,"line_end":52,"column_start":39,"column_end":51},"alias_span":null,"name":"TryFilterMap","value":"","parent":{"krate":0,"index":1888}},{"kind":"Use","ref_id":{"krate":0,"index":15809},"span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\mod.rs","byte_start":148571,"byte_end":148581,"line_start":52,"line_end":52,"column_start":53,"column_end":63},"alias_span":null,"name":"TryFlatten","value":"","parent":{"krate":0,"index":1888}},{"kind":"Use","ref_id":{"krate":0,"index":16019},"span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\mod.rs","byte_start":148583,"byte_end":148590,"line_start":52,"line_end":52,"column_start":65,"column_end":72},"alias_span":null,"name":"TryFold","value":"","parent":{"krate":0,"index":1888}},{"kind":"Use","ref_id":{"krate":0,"index":15618},"span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\mod.rs","byte_start":148592,"byte_end":148602,"line_start":52,"line_end":52,"column_start":74,"column_end":84},"alias_span":null,"name":"TryForEach","value":"","parent":{"krate":0,"index":1888}},{"kind":"Use","ref_id":{"krate":0,"index":15610},"span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\mod.rs","byte_start":148604,"byte_end":148611,"line_start":52,"line_end":52,"column_start":86,"column_end":93},"alias_span":null,"name":"TryNext","value":"","parent":{"krate":0,"index":1888}},{"kind":"Use","ref_id":{"krate":0,"index":16145},"span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\mod.rs","byte_start":148617,"byte_end":148629,"line_start":53,"line_end":53,"column_start":5,"column_end":17},"alias_span":null,"name":"TrySkipWhile","value":"","parent":{"krate":0,"index":1888}},{"kind":"Use","ref_id":{"krate":0,"index":5619},"span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\mod.rs","byte_start":148631,"byte_end":148643,"line_start":53,"line_end":53,"column_start":19,"column_end":31},"alias_span":null,"name":"TryStreamExt","value":"","parent":{"krate":0,"index":1888}},{"kind":"Use","ref_id":{"krate":0,"index":16218},"span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\mod.rs","byte_start":148645,"byte_end":148657,"line_start":53,"line_end":53,"column_start":33,"column_end":45},"alias_span":null,"name":"TryTakeWhile","value":"","parent":{"krate":0,"index":1888}},{"kind":"Use","ref_id":{"krate":0,"index":16088},"span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\mod.rs","byte_start":148659,"byte_end":148668,"line_start":53,"line_end":53,"column_start":47,"column_end":56},"alias_span":null,"name":"TryUnfold","value":"","parent":{"krate":0,"index":1888}},{"kind":"Use","ref_id":{"krate":0,"index":16456},"span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\mod.rs","byte_start":148793,"byte_end":148806,"line_start":59,"line_end":59,"column_start":27,"column_end":40},"alias_span":null,"name":"IntoAsyncRead","value":"","parent":{"krate":0,"index":1888}},{"kind":"Use","ref_id":{"krate":0,"index":16291},"span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\mod.rs","byte_start":148897,"byte_end":148915,"line_start":63,"line_end":63,"column_start":28,"column_end":46},"alias_span":null,"name":"TryBufferUnordered","value":"","parent":{"krate":0,"index":1888}},{"kind":"Use","ref_id":{"krate":0,"index":16343},"span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\mod.rs","byte_start":148917,"byte_end":148928,"line_start":63,"line_end":63,"column_start":48,"column_end":59},"alias_span":null,"name":"TryBuffered","value":"","parent":{"krate":0,"index":1888}},{"kind":"Use","ref_id":{"krate":0,"index":16395},"span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\mod.rs","byte_start":148930,"byte_end":148950,"line_start":63,"line_end":63,"column_start":61,"column_end":81},"alias_span":null,"name":"TryForEachConcurrent","value":"","parent":{"krate":0,"index":1888}},{"kind":"Use","ref_id":{"krate":0,"index":15946},"span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\mod.rs","byte_start":149007,"byte_end":149016,"line_start":66,"line_end":66,"column_start":28,"column_end":37},"alias_span":null,"name":"TryChunks","value":"","parent":{"krate":0,"index":1888}},{"kind":"Use","ref_id":{"krate":0,"index":15998},"span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\mod.rs","byte_start":149018,"byte_end":149032,"line_start":66,"line_end":66,"column_start":39,"column_end":53},"alias_span":null,"name":"TryChunksError","value":"","parent":{"krate":0,"index":1888}},{"kind":"Use","ref_id":{"krate":0,"index":15999},"span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\mod.rs","byte_start":149018,"byte_end":149032,"line_start":66,"line_end":66,"column_start":39,"column_end":53},"alias_span":null,"name":"TryChunksError","value":"","parent":{"krate":0,"index":1888}},{"kind":"Use","ref_id":{"krate":0,"index":5776},"span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\mod.rs","byte_start":149089,"byte_end":149093,"line_start":71,"line_end":71,"column_start":22,"column_end":26},"alias_span":null,"name":"iter","value":"","parent":{"krate":0,"index":1888}},{"kind":"Use","ref_id":{"krate":0,"index":16475},"span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\mod.rs","byte_start":149095,"byte_end":149099,"line_start":71,"line_end":71,"column_start":28,"column_end":32},"alias_span":null,"name":"Iter","value":"","parent":{"krate":0,"index":1888}},{"kind":"Use","ref_id":{"krate":0,"index":5811},"span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\mod.rs","byte_start":149138,"byte_end":149144,"line_start":74,"line_end":74,"column_start":24,"column_end":30},"alias_span":null,"name":"repeat","value":"","parent":{"krate":0,"index":1888}},{"kind":"Use","ref_id":{"krate":0,"index":16484},"span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\mod.rs","byte_start":149146,"byte_end":149152,"line_start":74,"line_end":74,"column_start":32,"column_end":38},"alias_span":null,"name":"Repeat","value":"","parent":{"krate":0,"index":1888}},{"kind":"Use","ref_id":{"krate":0,"index":5864},"span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\mod.rs","byte_start":149201,"byte_end":149212,"line_start":77,"line_end":77,"column_start":29,"column_end":40},"alias_span":null,"name":"repeat_with","value":"","parent":{"krate":0,"index":1888}},{"kind":"Use","ref_id":{"krate":0,"index":16493},"span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\mod.rs","byte_start":149214,"byte_end":149224,"line_start":77,"line_end":77,"column_start":42,"column_end":52},"alias_span":null,"name":"RepeatWith","value":"","parent":{"krate":0,"index":1888}},{"kind":"Use","ref_id":{"krate":0,"index":5898},"span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\mod.rs","byte_start":149261,"byte_end":149266,"line_start":80,"line_end":80,"column_start":23,"column_end":28},"alias_span":null,"name":"empty","value":"","parent":{"krate":0,"index":1888}},{"kind":"Use","ref_id":{"krate":0,"index":16502},"span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\mod.rs","byte_start":149268,"byte_end":149273,"line_start":80,"line_end":80,"column_start":30,"column_end":35},"alias_span":null,"name":"Empty","value":"","parent":{"krate":0,"index":1888}},{"kind":"Use","ref_id":{"krate":0,"index":5950},"span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\mod.rs","byte_start":149308,"byte_end":149312,"line_start":83,"line_end":83,"column_start":22,"column_end":26},"alias_span":null,"name":"once","value":"","parent":{"krate":0,"index":1888}},{"kind":"Use","ref_id":{"krate":0,"index":16508},"span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\mod.rs","byte_start":149314,"byte_end":149318,"line_start":83,"line_end":83,"column_start":28,"column_end":32},"alias_span":null,"name":"Once","value":"","parent":{"krate":0,"index":1888}},{"kind":"Use","ref_id":{"krate":0,"index":5994},"span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\mod.rs","byte_start":149359,"byte_end":149366,"line_start":86,"line_end":86,"column_start":25,"column_end":32},"alias_span":null,"name":"pending","value":"","parent":{"krate":0,"index":1888}},{"kind":"Use","ref_id":{"krate":0,"index":16544},"span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\mod.rs","byte_start":149368,"byte_end":149375,"line_start":86,"line_end":86,"column_start":34,"column_end":41},"alias_span":null,"name":"Pending","value":"","parent":{"krate":0,"index":1888}},{"kind":"Use","ref_id":{"krate":0,"index":6044},"span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\mod.rs","byte_start":149416,"byte_end":149423,"line_start":89,"line_end":89,"column_start":25,"column_end":32},"alias_span":null,"name":"poll_fn","value":"","parent":{"krate":0,"index":1888}},{"kind":"Use","ref_id":{"krate":0,"index":6036},"span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\mod.rs","byte_start":149425,"byte_end":149431,"line_start":89,"line_end":89,"column_start":34,"column_end":40},"alias_span":null,"name":"PollFn","value":"","parent":{"krate":0,"index":1888}},{"kind":"Use","ref_id":{"krate":0,"index":6085},"span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\mod.rs","byte_start":149486,"byte_end":149500,"line_start":92,"line_end":92,"column_start":32,"column_end":46},"alias_span":null,"name":"poll_immediate","value":"","parent":{"krate":0,"index":1888}},{"kind":"Use","ref_id":{"krate":0,"index":16550},"span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\mod.rs","byte_start":149502,"byte_end":149515,"line_start":92,"line_end":92,"column_start":48,"column_end":61},"alias_span":null,"name":"PollImmediate","value":"","parent":{"krate":0,"index":1888}},{"kind":"Use","ref_id":{"krate":0,"index":6128},"span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\mod.rs","byte_start":149554,"byte_end":149560,"line_start":95,"line_end":95,"column_start":24,"column_end":30},"alias_span":null,"name":"select","value":"","parent":{"krate":0,"index":1888}},{"kind":"Use","ref_id":{"krate":0,"index":16589},"span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\mod.rs","byte_start":149562,"byte_end":149568,"line_start":95,"line_end":95,"column_start":32,"column_end":38},"alias_span":null,"name":"Select","value":"","parent":{"krate":0,"index":1888}},{"kind":"Use","ref_id":{"krate":0,"index":6194},"span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\mod.rs","byte_start":149635,"byte_end":149655,"line_start":98,"line_end":98,"column_start":38,"column_end":58},"alias_span":null,"name":"select_with_strategy","value":"","parent":{"krate":0,"index":1888}},{"kind":"Use","ref_id":{"krate":0,"index":16634},"span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\mod.rs","byte_start":149657,"byte_end":149665,"line_start":98,"line_end":98,"column_start":60,"column_end":68},"alias_span":null,"name":"PollNext","value":"","parent":{"krate":0,"index":1888}},{"kind":"Use","ref_id":{"krate":0,"index":16653},"span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\mod.rs","byte_start":149667,"byte_end":149685,"line_start":98,"line_end":98,"column_start":70,"column_end":88},"alias_span":null,"name":"SelectWithStrategy","value":"","parent":{"krate":0,"index":1888}},{"kind":"Use","ref_id":{"krate":0,"index":6276},"span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\mod.rs","byte_start":149724,"byte_end":149730,"line_start":101,"line_end":101,"column_start":24,"column_end":30},"alias_span":null,"name":"unfold","value":"","parent":{"krate":0,"index":1888}},{"kind":"Use","ref_id":{"krate":0,"index":16722},"span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\mod.rs","byte_start":149732,"byte_end":149738,"line_start":101,"line_end":101,"column_start":32,"column_end":38},"alias_span":null,"name":"Unfold","value":"","parent":{"krate":0,"index":1888}},{"kind":"Use","ref_id":{"krate":0,"index":6376},"span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\mod.rs","byte_start":149916,"byte_end":149930,"line_start":108,"line_end":108,"column_start":32,"column_end":46},"alias_span":null,"name":"FuturesOrdered","value":"","parent":{"krate":0,"index":1888}},{"kind":"Use","ref_id":{"krate":0,"index":16854},"span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\futures_unordered\\mod.rs","byte_start":456886,"byte_end":456894,"line_start":25,"line_end":25,"column_start":22,"column_end":30},"alias_span":null,"name":"IntoIter","value":"","parent":{"krate":0,"index":6416}},{"kind":"Use","ref_id":{"krate":0,"index":16845},"span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\futures_unordered\\mod.rs","byte_start":456896,"byte_end":456900,"line_start":25,"line_end":25,"column_start":32,"column_end":36},"alias_span":null,"name":"Iter","value":"","parent":{"krate":0,"index":6416}},{"kind":"Use","ref_id":{"krate":0,"index":16846},"span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\futures_unordered\\mod.rs","byte_start":456896,"byte_end":456900,"line_start":25,"line_end":25,"column_start":32,"column_end":36},"alias_span":null,"name":"Iter","value":"","parent":{"krate":0,"index":6416}},{"kind":"Use","ref_id":{"krate":0,"index":16825},"span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\futures_unordered\\mod.rs","byte_start":456902,"byte_end":456909,"line_start":25,"line_end":25,"column_start":38,"column_end":45},"alias_span":null,"name":"IterMut","value":"","parent":{"krate":0,"index":6416}},{"kind":"Use","ref_id":{"krate":0,"index":16826},"span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\futures_unordered\\mod.rs","byte_start":456902,"byte_end":456909,"line_start":25,"line_end":25,"column_start":38,"column_end":45},"alias_span":null,"name":"IterMut","value":"","parent":{"krate":0,"index":6416}},{"kind":"Use","ref_id":{"krate":0,"index":16815},"span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\futures_unordered\\mod.rs","byte_start":456911,"byte_end":456921,"line_start":25,"line_end":25,"column_start":47,"column_end":57},"alias_span":null,"name":"IterPinMut","value":"","parent":{"krate":0,"index":6416}},{"kind":"Use","ref_id":{"krate":0,"index":16834},"span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\futures_unordered\\mod.rs","byte_start":456923,"byte_end":456933,"line_start":25,"line_end":25,"column_start":59,"column_end":69},"alias_span":null,"name":"IterPinRef","value":"","parent":{"krate":0,"index":6416}},{"kind":"Use","ref_id":{"krate":0,"index":6734},"span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\mod.rs","byte_start":150130,"byte_end":150146,"line_start":116,"line_end":116,"column_start":34,"column_end":50},"alias_span":null,"name":"FuturesUnordered","value":"","parent":{"krate":0,"index":1888}},{"kind":"Use","ref_id":{"krate":0,"index":6894},"span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\mod.rs","byte_start":150333,"byte_end":150343,"line_start":124,"line_end":124,"column_start":28,"column_end":38},"alias_span":null,"name":"select_all","value":"","parent":{"krate":0,"index":1888}},{"kind":"Use","ref_id":{"krate":0,"index":16861},"span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\mod.rs","byte_start":150345,"byte_end":150354,"line_start":124,"line_end":124,"column_start":40,"column_end":49},"alias_span":null,"name":"SelectAll","value":"","parent":{"krate":0,"index":1888}},{"kind":"Use","ref_id":{"krate":0,"index":18160},"span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\mod.rs","byte_start":150522,"byte_end":150533,"line_start":131,"line_end":131,"column_start":28,"column_end":39},"alias_span":null,"name":"AbortHandle","value":"","parent":{"krate":0,"index":1888}},{"kind":"Use","ref_id":{"krate":0,"index":18156},"span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\mod.rs","byte_start":150535,"byte_end":150552,"line_start":131,"line_end":131,"column_start":41,"column_end":58},"alias_span":null,"name":"AbortRegistration","value":"","parent":{"krate":0,"index":1888}},{"kind":"Use","ref_id":{"krate":0,"index":18113},"span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\mod.rs","byte_start":150554,"byte_end":150563,"line_start":131,"line_end":131,"column_start":60,"column_end":69},"alias_span":null,"name":"Abortable","value":"","parent":{"krate":0,"index":1888}},{"kind":"Use","ref_id":{"krate":0,"index":18171},"span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\mod.rs","byte_start":150565,"byte_end":150572,"line_start":131,"line_end":131,"column_start":71,"column_end":78},"alias_span":null,"name":"Aborted","value":"","parent":{"krate":0,"index":1888}},{"kind":"Use","ref_id":{"krate":0,"index":18172},"span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\mod.rs","byte_start":150565,"byte_end":150572,"line_start":131,"line_end":131,"column_start":71,"column_end":78},"alias_span":null,"name":"Aborted","value":"","parent":{"krate":0,"index":1888}},{"kind":"Use","ref_id":{"krate":0,"index":6965},"span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\mod.rs","byte_start":150655,"byte_end":150664,"line_start":134,"line_end":134,"column_start":20,"column_end":29},"alias_span":null,"name":"abortable","value":"","parent":{"krate":0,"index":1888}},{"kind":"Use","ref_id":{"krate":16,"index":96},"span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\lib.rs","byte_start":10777,"byte_end":10783,"line_start":300,"line_end":300,"column_start":25,"column_end":31},"alias_span":null,"name":"Stream","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":4200},"span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\lib.rs","byte_start":10785,"byte_end":10794,"line_start":300,"line_end":300,"column_start":33,"column_end":42},"alias_span":null,"name":"StreamExt","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":16,"index":127},"span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\lib.rs","byte_start":10796,"byte_end":10805,"line_start":300,"line_end":300,"column_start":44,"column_end":53},"alias_span":null,"name":"TryStream","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":5619},"span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\lib.rs","byte_start":10807,"byte_end":10819,"line_start":300,"line_end":300,"column_start":55,"column_end":67},"alias_span":null,"name":"TryStreamExt","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":19,"index":17},"span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\sink\\mod.rs","byte_start":505598,"byte_end":505602,"line_start":18,"line_end":18,"column_start":23,"column_end":27},"alias_span":null,"name":"Sink","value":"","parent":{"krate":0,"index":6999}},{"kind":"Use","ref_id":{"krate":0,"index":16919},"span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\sink\\mod.rs","byte_start":505637,"byte_end":505642,"line_start":21,"line_end":21,"column_start":22,"column_end":27},"alias_span":null,"name":"Close","value":"","parent":{"krate":0,"index":6999}},{"kind":"Use","ref_id":{"krate":0,"index":7089},"span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\sink\\mod.rs","byte_start":505678,"byte_end":505683,"line_start":24,"line_end":24,"column_start":23,"column_end":28},"alias_span":null,"name":"drain","value":"","parent":{"krate":0,"index":6999}},{"kind":"Use","ref_id":{"krate":0,"index":16930},"span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\sink\\mod.rs","byte_start":505685,"byte_end":505690,"line_start":24,"line_end":24,"column_start":30,"column_end":35},"alias_span":null,"name":"Drain","value":"","parent":{"krate":0,"index":6999}},{"kind":"Use","ref_id":{"krate":0,"index":16936},"span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\sink\\mod.rs","byte_start":505728,"byte_end":505734,"line_start":27,"line_end":27,"column_start":23,"column_end":29},"alias_span":null,"name":"Fanout","value":"","parent":{"krate":0,"index":6999}},{"kind":"Use","ref_id":{"krate":0,"index":16981},"span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\sink\\mod.rs","byte_start":505767,"byte_end":505771,"line_start":30,"line_end":30,"column_start":21,"column_end":25},"alias_span":null,"name":"Feed","value":"","parent":{"krate":0,"index":6999}},{"kind":"Use","ref_id":{"krate":0,"index":16992},"span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\sink\\mod.rs","byte_start":505806,"byte_end":505811,"line_start":33,"line_end":33,"column_start":22,"column_end":27},"alias_span":null,"name":"Flush","value":"","parent":{"krate":0,"index":6999}},{"kind":"Use","ref_id":{"krate":0,"index":17003},"span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\sink\\mod.rs","byte_start":505852,"byte_end":505863,"line_start":36,"line_end":36,"column_start":25,"column_end":36},"alias_span":null,"name":"SinkErrInto","value":"","parent":{"krate":0,"index":6999}},{"kind":"Use","ref_id":{"krate":0,"index":17067},"span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\sink\\mod.rs","byte_start":505902,"byte_end":505912,"line_start":39,"line_end":39,"column_start":24,"column_end":34},"alias_span":null,"name":"SinkMapErr","value":"","parent":{"krate":0,"index":6999}},{"kind":"Use","ref_id":{"krate":0,"index":17126},"span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\sink\\mod.rs","byte_start":505945,"byte_end":505949,"line_start":42,"line_end":42,"column_start":21,"column_end":25},"alias_span":null,"name":"Send","value":"","parent":{"krate":0,"index":6999}},{"kind":"Use","ref_id":{"krate":0,"index":7409},"span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\sink\\mod.rs","byte_start":505990,"byte_end":505997,"line_start":45,"line_end":45,"column_start":25,"column_end":32},"alias_span":null,"name":"SendAll","value":"","parent":{"krate":0,"index":6999}},{"kind":"Use","ref_id":{"krate":0,"index":7471},"span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\sink\\mod.rs","byte_start":506035,"byte_end":506041,"line_start":48,"line_end":48,"column_start":24,"column_end":30},"alias_span":null,"name":"unfold","value":"","parent":{"krate":0,"index":6999}},{"kind":"Use","ref_id":{"krate":0,"index":17136},"span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\sink\\mod.rs","byte_start":506043,"byte_end":506049,"line_start":48,"line_end":48,"column_start":32,"column_end":38},"alias_span":null,"name":"Unfold","value":"","parent":{"krate":0,"index":6999}},{"kind":"Use","ref_id":{"krate":0,"index":17194},"span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\sink\\mod.rs","byte_start":506083,"byte_end":506087,"line_start":51,"line_end":51,"column_start":21,"column_end":25},"alias_span":null,"name":"With","value":"","parent":{"krate":0,"index":6999}},{"kind":"Use","ref_id":{"krate":0,"index":17277},"span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\sink\\mod.rs","byte_start":506138,"byte_end":506149,"line_start":54,"line_end":54,"column_start":30,"column_end":41},"alias_span":null,"name":"WithFlatMap","value":"","parent":{"krate":0,"index":6999}},{"kind":"Use","ref_id":{"krate":0,"index":17364},"span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\sink\\mod.rs","byte_start":506238,"byte_end":506244,"line_start":59,"line_end":59,"column_start":23,"column_end":29},"alias_span":null,"name":"Buffer","value":"","parent":{"krate":0,"index":6999}},{"kind":"Use","ref_id":{"krate":19,"index":17},"span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\lib.rs","byte_start":10975,"byte_end":10979,"line_start":307,"line_end":307,"column_start":23,"column_end":27},"alias_span":null,"name":"Sink","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":7714},"span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\lib.rs","byte_start":10981,"byte_end":10988,"line_start":307,"line_end":307,"column_start":29,"column_end":36},"alias_span":null,"name":"SinkExt","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":2,"index":13400},"span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\task\\mod.rs","byte_start":545635,"byte_end":545642,"line_start":14,"line_end":14,"column_start":22,"column_end":29},"alias_span":null,"name":"Context","value":"","parent":{"krate":0,"index":7759}},{"kind":"Use","ref_id":{"krate":2,"index":49132},"span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\task\\mod.rs","byte_start":545644,"byte_end":545648,"line_start":14,"line_end":14,"column_start":31,"column_end":35},"alias_span":null,"name":"Poll","value":"","parent":{"krate":0,"index":7759}},{"kind":"Use","ref_id":{"krate":2,"index":49168},"span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\task\\mod.rs","byte_start":545650,"byte_end":545658,"line_start":14,"line_end":14,"column_start":37,"column_end":45},"alias_span":null,"name":"RawWaker","value":"","parent":{"krate":0,"index":7759}},{"kind":"Use","ref_id":{"krate":2,"index":49177},"span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\task\\mod.rs","byte_start":545660,"byte_end":545674,"line_start":14,"line_end":14,"column_start":47,"column_end":61},"alias_span":null,"name":"RawWakerVTable","value":"","parent":{"krate":0,"index":7759}},{"kind":"Use","ref_id":{"krate":2,"index":13410},"span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\task\\mod.rs","byte_start":545676,"byte_end":545681,"line_start":14,"line_end":14,"column_start":63,"column_end":68},"alias_span":null,"name":"Waker","value":"","parent":{"krate":0,"index":7759}},{"kind":"Use","ref_id":{"krate":18,"index":237},"span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\task\\mod.rs","byte_start":545708,"byte_end":545717,"line_start":16,"line_end":16,"column_start":24,"column_end":33},"alias_span":null,"name":"FutureObj","value":"","parent":{"krate":0,"index":7759}},{"kind":"Use","ref_id":{"krate":18,"index":203},"span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\task\\mod.rs","byte_start":545719,"byte_end":545733,"line_start":16,"line_end":16,"column_start":35,"column_end":49},"alias_span":null,"name":"LocalFutureObj","value":"","parent":{"krate":0,"index":7759}},{"kind":"Use","ref_id":{"krate":18,"index":18},"span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\task\\mod.rs","byte_start":545735,"byte_end":545745,"line_start":16,"line_end":16,"column_start":51,"column_end":61},"alias_span":null,"name":"LocalSpawn","value":"","parent":{"krate":0,"index":7759}},{"kind":"Use","ref_id":{"krate":18,"index":15},"span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\task\\mod.rs","byte_start":545747,"byte_end":545752,"line_start":16,"line_end":16,"column_start":63,"column_end":68},"alias_span":null,"name":"Spawn","value":"","parent":{"krate":0,"index":7759}},{"kind":"Use","ref_id":{"krate":18,"index":21},"span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\task\\mod.rs","byte_start":545754,"byte_end":545764,"line_start":16,"line_end":16,"column_start":70,"column_end":80},"alias_span":null,"name":"SpawnError","value":"","parent":{"krate":0,"index":7759}},{"kind":"Use","ref_id":{"krate":18,"index":258},"span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\task\\mod.rs","byte_start":545766,"byte_end":545781,"line_start":16,"line_end":16,"column_start":82,"column_end":97},"alias_span":null,"name":"UnsafeFutureObj","value":"","parent":{"krate":0,"index":7759}},{"kind":"Use","ref_id":{"krate":18,"index":378},"span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\task\\mod.rs","byte_start":545807,"byte_end":545817,"line_start":18,"line_end":18,"column_start":23,"column_end":33},"alias_span":null,"name":"noop_waker","value":"","parent":{"krate":0,"index":7759}},{"kind":"Use","ref_id":{"krate":18,"index":379},"span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\task\\mod.rs","byte_start":545841,"byte_end":545855,"line_start":19,"line_end":19,"column_start":23,"column_end":37},"alias_span":null,"name":"noop_waker_ref","value":"","parent":{"krate":0,"index":7759}},{"kind":"Use","ref_id":{"krate":18,"index":94},"span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\task\\mod.rs","byte_start":545941,"byte_end":545948,"line_start":23,"line_end":23,"column_start":23,"column_end":30},"alias_span":null,"name":"ArcWake","value":"","parent":{"krate":0,"index":7759}},{"kind":"Use","ref_id":{"krate":18,"index":122},"span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\task\\mod.rs","byte_start":546034,"byte_end":546039,"line_start":27,"line_end":27,"column_start":23,"column_end":28},"alias_span":null,"name":"waker","value":"","parent":{"krate":0,"index":7759}},{"kind":"Use","ref_id":{"krate":18,"index":170},"span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\task\\mod.rs","byte_start":546126,"byte_end":546135,"line_start":31,"line_end":31,"column_start":24,"column_end":33},"alias_span":null,"name":"waker_ref","value":"","parent":{"krate":0,"index":7759}},{"kind":"Use","ref_id":{"krate":18,"index":407},"span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\task\\mod.rs","byte_start":546137,"byte_end":546145,"line_start":31,"line_end":31,"column_start":35,"column_end":43},"alias_span":null,"name":"WakerRef","value":"","parent":{"krate":0,"index":7759}},{"kind":"Use","ref_id":{"krate":16,"index":194},"span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\task\\mod.rs","byte_start":546224,"byte_end":546235,"line_start":34,"line_end":34,"column_start":41,"column_end":52},"alias_span":null,"name":"AtomicWaker","value":"","parent":{"krate":0,"index":7759}},{"kind":"Use","ref_id":{"krate":0,"index":7848},"span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\task\\mod.rs","byte_start":546271,"byte_end":546284,"line_start":37,"line_end":37,"column_start":23,"column_end":36},"alias_span":null,"name":"LocalSpawnExt","value":"","parent":{"krate":0,"index":7759}},{"kind":"Use","ref_id":{"krate":0,"index":7845},"span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\task\\mod.rs","byte_start":546286,"byte_end":546294,"line_start":37,"line_end":37,"column_start":38,"column_end":46},"alias_span":null,"name":"SpawnExt","value":"","parent":{"krate":0,"index":7759}},{"kind":"Use","ref_id":{"krate":1,"index":4154},"span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\io\\mod.rs","byte_start":554421,"byte_end":554426,"line_start":29,"line_end":29,"column_start":19,"column_end":24},"alias_span":null,"name":"Error","value":"","parent":{"krate":0,"index":7860}},{"kind":"Use","ref_id":{"krate":1,"index":10295},"span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\io\\mod.rs","byte_start":554428,"byte_end":554437,"line_start":29,"line_end":29,"column_start":26,"column_end":35},"alias_span":null,"name":"ErrorKind","value":"","parent":{"krate":0,"index":7860}},{"kind":"Use","ref_id":{"krate":1,"index":10419},"span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\io\\mod.rs","byte_start":554439,"byte_end":554446,"line_start":29,"line_end":29,"column_start":37,"column_end":44},"alias_span":null,"name":"IoSlice","value":"","parent":{"krate":0,"index":7860}},{"kind":"Use","ref_id":{"krate":1,"index":4741},"span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\io\\mod.rs","byte_start":554448,"byte_end":554458,"line_start":29,"line_end":29,"column_start":46,"column_end":56},"alias_span":null,"name":"IoSliceMut","value":"","parent":{"krate":0,"index":7860}},{"kind":"Use","ref_id":{"krate":1,"index":4152},"span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\io\\mod.rs","byte_start":554460,"byte_end":554466,"line_start":29,"line_end":29,"column_start":58,"column_end":64},"alias_span":null,"name":"Result","value":"","parent":{"krate":0,"index":7860}},{"kind":"Use","ref_id":{"krate":1,"index":10431},"span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\io\\mod.rs","byte_start":554468,"byte_end":554476,"line_start":29,"line_end":29,"column_start":66,"column_end":74},"alias_span":null,"name":"SeekFrom","value":"","parent":{"krate":0,"index":7860}},{"kind":"Use","ref_id":{"krate":22,"index":49},"span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\io\\mod.rs","byte_start":554501,"byte_end":554513,"line_start":31,"line_end":31,"column_start":22,"column_end":34},"alias_span":null,"name":"AsyncBufRead","value":"","parent":{"krate":0,"index":7860}},{"kind":"Use","ref_id":{"krate":22,"index":39},"span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\io\\mod.rs","byte_start":554515,"byte_end":554524,"line_start":31,"line_end":31,"column_start":36,"column_end":45},"alias_span":null,"name":"AsyncRead","value":"","parent":{"krate":0,"index":7860}},{"kind":"Use","ref_id":{"krate":22,"index":47},"span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\io\\mod.rs","byte_start":554526,"byte_end":554535,"line_start":31,"line_end":31,"column_start":47,"column_end":56},"alias_span":null,"name":"AsyncSeek","value":"","parent":{"krate":0,"index":7860}},{"kind":"Use","ref_id":{"krate":22,"index":42},"span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\io\\mod.rs","byte_start":554537,"byte_end":554547,"line_start":31,"line_end":31,"column_start":58,"column_end":68},"alias_span":null,"name":"AsyncWrite","value":"","parent":{"krate":0,"index":7860}},{"kind":"Use","ref_id":{"krate":0,"index":17421},"span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\io\\mod.rs","byte_start":554974,"byte_end":554984,"line_start":46,"line_end":46,"column_start":26,"column_end":36},"alias_span":null,"name":"AllowStdIo","value":"","parent":{"krate":0,"index":7860}},{"kind":"Use","ref_id":{"krate":0,"index":17454},"span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\io\\mod.rs","byte_start":555030,"byte_end":555039,"line_start":49,"line_end":49,"column_start":28,"column_end":37},"alias_span":null,"name":"BufReader","value":"","parent":{"krate":0,"index":7860}},{"kind":"Use","ref_id":{"krate":0,"index":17507},"span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\io\\mod.rs","byte_start":555041,"byte_end":555053,"line_start":49,"line_end":49,"column_start":39,"column_end":51},"alias_span":null,"name":"SeeKRelative","value":"","parent":{"krate":0,"index":7860}},{"kind":"Use","ref_id":{"krate":0,"index":17517},"span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\io\\mod.rs","byte_start":555099,"byte_end":555108,"line_start":52,"line_end":52,"column_start":27,"column_end":36},"alias_span":null,"name":"BufWriter","value":"","parent":{"krate":0,"index":7860}},{"kind":"Use","ref_id":{"krate":0,"index":17566},"span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\io\\mod.rs","byte_start":555155,"byte_end":555165,"line_start":55,"line_end":55,"column_start":28,"column_end":38},"alias_span":null,"name":"LineWriter","value":"","parent":{"krate":0,"index":7860}},{"kind":"Use","ref_id":{"krate":0,"index":17602},"span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\io\\mod.rs","byte_start":555200,"byte_end":555205,"line_start":58,"line_end":58,"column_start":22,"column_end":27},"alias_span":null,"name":"Chain","value":"","parent":{"krate":0,"index":7860}},{"kind":"Use","ref_id":{"krate":0,"index":17651},"span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\io\\mod.rs","byte_start":555240,"byte_end":555245,"line_start":61,"line_end":61,"column_start":22,"column_end":27},"alias_span":null,"name":"Close","value":"","parent":{"krate":0,"index":7860}},{"kind":"Use","ref_id":{"krate":0,"index":8361},"span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\io\\mod.rs","byte_start":555279,"byte_end":555283,"line_start":64,"line_end":64,"column_start":22,"column_end":26},"alias_span":null,"name":"copy","value":"","parent":{"krate":0,"index":7860}},{"kind":"Use","ref_id":{"krate":0,"index":17659},"span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\io\\mod.rs","byte_start":555285,"byte_end":555289,"line_start":64,"line_end":64,"column_start":28,"column_end":32},"alias_span":null,"name":"Copy","value":"","parent":{"krate":0,"index":7860}},{"kind":"Use","ref_id":{"krate":0,"index":8406},"span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\io\\mod.rs","byte_start":555332,"byte_end":555340,"line_start":67,"line_end":67,"column_start":26,"column_end":34},"alias_span":null,"name":"copy_buf","value":"","parent":{"krate":0,"index":7860}},{"kind":"Use","ref_id":{"krate":0,"index":17713},"span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\io\\mod.rs","byte_start":555342,"byte_end":555349,"line_start":67,"line_end":67,"column_start":36,"column_end":43},"alias_span":null,"name":"CopyBuf","value":"","parent":{"krate":0,"index":7860}},{"kind":"Use","ref_id":{"krate":0,"index":17775},"span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\io\\mod.rs","byte_start":555387,"byte_end":555393,"line_start":70,"line_end":70,"column_start":23,"column_end":29},"alias_span":null,"name":"Cursor","value":"","parent":{"krate":0,"index":7860}},{"kind":"Use","ref_id":{"krate":0,"index":8510},"span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\io\\mod.rs","byte_start":555429,"byte_end":555434,"line_start":73,"line_end":73,"column_start":23,"column_end":28},"alias_span":null,"name":"empty","value":"","parent":{"krate":0,"index":7860}},{"kind":"Use","ref_id":{"krate":0,"index":8508},"span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\io\\mod.rs","byte_start":555436,"byte_end":555441,"line_start":73,"line_end":73,"column_start":30,"column_end":35},"alias_span":null,"name":"Empty","value":"","parent":{"krate":0,"index":7860}},{"kind":"Use","ref_id":{"krate":0,"index":17803},"span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\io\\mod.rs","byte_start":555483,"byte_end":555490,"line_start":76,"line_end":76,"column_start":25,"column_end":32},"alias_span":null,"name":"FillBuf","value":"","parent":{"krate":0,"index":7860}},{"kind":"Use","ref_id":{"krate":0,"index":17811},"span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\io\\mod.rs","byte_start":555525,"byte_end":555530,"line_start":79,"line_end":79,"column_start":22,"column_end":27},"alias_span":null,"name":"Flush","value":"","parent":{"krate":0,"index":7860}},{"kind":"Use","ref_id":{"krate":0,"index":17826},"span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\io\\mod.rs","byte_start":555719,"byte_end":555727,"line_start":86,"line_end":86,"column_start":26,"column_end":34},"alias_span":null,"name":"IntoSink","value":"","parent":{"krate":0,"index":7860}},{"kind":"Use","ref_id":{"krate":0,"index":17875},"span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\io\\mod.rs","byte_start":555762,"byte_end":555767,"line_start":89,"line_end":89,"column_start":22,"column_end":27},"alias_span":null,"name":"Lines","value":"","parent":{"krate":0,"index":7860}},{"kind":"Use","ref_id":{"krate":0,"index":17923},"span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\io\\mod.rs","byte_start":555800,"byte_end":555804,"line_start":92,"line_end":92,"column_start":21,"column_end":25},"alias_span":null,"name":"Read","value":"","parent":{"krate":0,"index":7860}},{"kind":"Use","ref_id":{"krate":0,"index":17932},"span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\io\\mod.rs","byte_start":555855,"byte_end":555867,"line_start":95,"line_end":95,"column_start":30,"column_end":42},"alias_span":null,"name":"ReadVectored","value":"","parent":{"krate":0,"index":7860}},{"kind":"Use","ref_id":{"krate":0,"index":17941},"span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\io\\mod.rs","byte_start":555912,"byte_end":555921,"line_start":98,"line_end":98,"column_start":27,"column_end":36},"alias_span":null,"name":"ReadExact","value":"","parent":{"krate":0,"index":7860}},{"kind":"Use","ref_id":{"krate":0,"index":17950},"span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\io\\mod.rs","byte_start":555964,"byte_end":555972,"line_start":101,"line_end":101,"column_start":26,"column_end":34},"alias_span":null,"name":"ReadLine","value":"","parent":{"krate":0,"index":7860}},{"kind":"Use","ref_id":{"krate":0,"index":17961},"span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\io\\mod.rs","byte_start":556019,"byte_end":556028,"line_start":104,"line_end":104,"column_start":28,"column_end":37},"alias_span":null,"name":"ReadToEnd","value":"","parent":{"krate":0,"index":7860}},{"kind":"Use","ref_id":{"krate":0,"index":17971},"span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\io\\mod.rs","byte_start":556081,"byte_end":556093,"line_start":107,"line_end":107,"column_start":31,"column_end":43},"alias_span":null,"name":"ReadToString","value":"","parent":{"krate":0,"index":7860}},{"kind":"Use","ref_id":{"krate":0,"index":17982},"span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\io\\mod.rs","byte_start":556138,"byte_end":556147,"line_start":110,"line_end":110,"column_start":27,"column_end":36},"alias_span":null,"name":"ReadUntil","value":"","parent":{"krate":0,"index":7860}},{"kind":"Use","ref_id":{"krate":0,"index":9002},"span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\io\\mod.rs","byte_start":556185,"byte_end":556191,"line_start":113,"line_end":113,"column_start":24,"column_end":30},"alias_span":null,"name":"repeat","value":"","parent":{"krate":0,"index":7860}},{"kind":"Use","ref_id":{"krate":0,"index":9000},"span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\io\\mod.rs","byte_start":556193,"byte_end":556199,"line_start":113,"line_end":113,"column_start":32,"column_end":38},"alias_span":null,"name":"Repeat","value":"","parent":{"krate":0,"index":7860}},{"kind":"Use","ref_id":{"krate":0,"index":17993},"span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\io\\mod.rs","byte_start":556233,"byte_end":556237,"line_start":116,"line_end":116,"column_start":21,"column_end":25},"alias_span":null,"name":"Seek","value":"","parent":{"krate":0,"index":7860}},{"kind":"Use","ref_id":{"krate":0,"index":9078},"span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\io\\mod.rs","byte_start":556271,"byte_end":556275,"line_start":119,"line_end":119,"column_start":22,"column_end":26},"alias_span":null,"name":"sink","value":"","parent":{"krate":0,"index":7860}},{"kind":"Use","ref_id":{"krate":0,"index":9076},"span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\io\\mod.rs","byte_start":556277,"byte_end":556281,"line_start":119,"line_end":119,"column_start":28,"column_end":32},"alias_span":null,"name":"Sink","value":"","parent":{"krate":0,"index":7860}},{"kind":"Use","ref_id":{"krate":0,"index":18002},"span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\io\\mod.rs","byte_start":556318,"byte_end":556326,"line_start":122,"line_end":122,"column_start":23,"column_end":31},"alias_span":null,"name":"ReadHalf","value":"","parent":{"krate":0,"index":7860}},{"kind":"Use","ref_id":{"krate":0,"index":9160},"span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\io\\mod.rs","byte_start":556328,"byte_end":556340,"line_start":122,"line_end":122,"column_start":33,"column_end":45},"alias_span":null,"name":"ReuniteError","value":"","parent":{"krate":0,"index":7860}},{"kind":"Use","ref_id":{"krate":0,"index":9161},"span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\io\\mod.rs","byte_start":556328,"byte_end":556340,"line_start":122,"line_end":122,"column_start":33,"column_end":45},"alias_span":null,"name":"ReuniteError","value":"","parent":{"krate":0,"index":7860}},{"kind":"Use","ref_id":{"krate":0,"index":18008},"span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\io\\mod.rs","byte_start":556342,"byte_end":556351,"line_start":122,"line_end":122,"column_start":47,"column_end":56},"alias_span":null,"name":"WriteHalf","value":"","parent":{"krate":0,"index":7860}},{"kind":"Use","ref_id":{"krate":0,"index":18014},"span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\io\\mod.rs","byte_start":556385,"byte_end":556389,"line_start":125,"line_end":125,"column_start":21,"column_end":25},"alias_span":null,"name":"Take","value":"","parent":{"krate":0,"index":7860}},{"kind":"Use","ref_id":{"krate":0,"index":18058},"span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\io\\mod.rs","byte_start":556426,"byte_end":556432,"line_start":128,"line_end":128,"column_start":23,"column_end":29},"alias_span":null,"name":"Window","value":"","parent":{"krate":0,"index":7860}},{"kind":"Use","ref_id":{"krate":0,"index":18065},"span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\io\\mod.rs","byte_start":556467,"byte_end":556472,"line_start":131,"line_end":131,"column_start":22,"column_end":27},"alias_span":null,"name":"Write","value":"","parent":{"krate":0,"index":7860}},{"kind":"Use","ref_id":{"krate":0,"index":18074},"span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\io\\mod.rs","byte_start":556525,"byte_end":556538,"line_start":134,"line_end":134,"column_start":31,"column_end":44},"alias_span":null,"name":"WriteVectored","value":"","parent":{"krate":0,"index":7860}},{"kind":"Use","ref_id":{"krate":0,"index":18083},"span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\io\\mod.rs","byte_start":556581,"byte_end":556589,"line_start":137,"line_end":137,"column_start":26,"column_end":34},"alias_span":null,"name":"WriteAll","value":"","parent":{"krate":0,"index":7860}},{"kind":"Use","ref_id":{"krate":22,"index":49},"span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\lib.rs","byte_start":11312,"byte_end":11324,"line_start":325,"line_end":325,"column_start":5,"column_end":17},"alias_span":null,"name":"AsyncBufRead","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":9403},"span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\lib.rs","byte_start":11326,"byte_end":11341,"line_start":325,"line_end":325,"column_start":19,"column_end":34},"alias_span":null,"name":"AsyncBufReadExt","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":22,"index":39},"span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\lib.rs","byte_start":11343,"byte_end":11352,"line_start":325,"line_end":325,"column_start":36,"column_end":45},"alias_span":null,"name":"AsyncRead","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":9368},"span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\lib.rs","byte_start":11354,"byte_end":11366,"line_start":325,"line_end":325,"column_start":47,"column_end":59},"alias_span":null,"name":"AsyncReadExt","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":22,"index":47},"span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\lib.rs","byte_start":11368,"byte_end":11377,"line_start":325,"line_end":325,"column_start":61,"column_end":70},"alias_span":null,"name":"AsyncSeek","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":9398},"span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\lib.rs","byte_start":11379,"byte_end":11391,"line_start":325,"line_end":325,"column_start":72,"column_end":84},"alias_span":null,"name":"AsyncSeekExt","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":22,"index":42},"span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\lib.rs","byte_start":11393,"byte_end":11403,"line_start":325,"line_end":325,"column_start":86,"column_end":96},"alias_span":null,"name":"AsyncWrite","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":9385},"span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\lib.rs","byte_start":11409,"byte_end":11422,"line_start":326,"line_end":326,"column_start":5,"column_end":18},"alias_span":null,"name":"AsyncWriteExt","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":9576},"span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\lock\\mod.rs","byte_start":662461,"byte_end":662477,"line_start":11,"line_end":11,"column_start":23,"column_end":39},"alias_span":null,"name":"MappedMutexGuard","value":"","parent":{"krate":0,"index":9442}},{"kind":"Use","ref_id":{"krate":0,"index":9497},"span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\lock\\mod.rs","byte_start":662479,"byte_end":662484,"line_start":11,"line_end":11,"column_start":41,"column_end":46},"alias_span":null,"name":"Mutex","value":"","parent":{"krate":0,"index":9442}},{"kind":"Use","ref_id":{"krate":0,"index":9553},"span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\lock\\mod.rs","byte_start":662486,"byte_end":662496,"line_start":11,"line_end":11,"column_start":48,"column_end":58},"alias_span":null,"name":"MutexGuard","value":"","parent":{"krate":0,"index":9442}},{"kind":"Use","ref_id":{"krate":0,"index":9534},"span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\lock\\mod.rs","byte_start":662498,"byte_end":662513,"line_start":11,"line_end":11,"column_start":60,"column_end":75},"alias_span":null,"name":"MutexLockFuture","value":"","parent":{"krate":0,"index":9442}}],"defs":[{"kind":"Mod","id":{"krate":0,"index":0},"span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\lib.rs","byte_start":0,"byte_end":11572,"line_start":1,"line_end":337,"column_start":1,"column_end":18},"name":"","qualname":"::","value":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\lib.rs","parent":null,"children":[{"krate":0,"index":1},{"krate":0,"index":2},{"krate":0,"index":3},{"krate":0,"index":4},{"krate":0,"index":7},{"krate":0,"index":10},{"krate":0,"index":11},{"krate":0,"index":12},{"krate":0,"index":13},{"krate":0,"index":14},{"krate":0,"index":15},{"krate":0,"index":16},{"krate":0,"index":17},{"krate":0,"index":18},{"krate":0,"index":1875},{"krate":0,"index":1876},{"krate":0,"index":1879},{"krate":0,"index":1882},{"krate":0,"index":1885},{"krate":0,"index":1888},{"krate":0,"index":6986},{"krate":0,"index":6987},{"krate":0,"index":6990},{"krate":0,"index":6993},{"krate":0,"index":6996},{"krate":0,"index":6999},{"krate":0,"index":7752},{"krate":0,"index":7753},{"krate":0,"index":7756},{"krate":0,"index":7759},{"krate":0,"index":7858},{"krate":0,"index":7860},{"krate":0,"index":9417},{"krate":0,"index":9418},{"krate":0,"index":9421},{"krate":0,"index":9424},{"krate":0,"index":9427},{"krate":0,"index":9430},{"krate":0,"index":9433},{"krate":0,"index":9436},{"krate":0,"index":9439},{"krate":0,"index":9442},{"krate":0,"index":9723},{"krate":0,"index":9785},{"krate":0,"index":9999}],"decl_id":null,"docs":" Combinators and utilities for working with `Future`s, `Stream`s, `Sink`s,\n and the `AsyncRead` and `AsyncWrite` traits.\n","sig":null,"attributes":[{"value":"/ Combinators and utilities for working with `Future`s, `Stream`s, `Sink`s,","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\lib.rs","byte_start":0,"byte_end":77,"line_start":1,"line_end":1,"column_start":1,"column_end":78}},{"value":"/ and the `AsyncRead` and `AsyncWrite` traits.","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\lib.rs","byte_start":78,"byte_end":126,"line_start":2,"line_end":2,"column_start":1,"column_end":49}},{"value":"warn(missing_debug_implementations, missing_docs, rust_2018_idioms,\nsingle_use_lifetimes, unreachable_pub)","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\lib.rs","byte_start":243,"byte_end":375,"line_start":6,"line_end":12,"column_start":1,"column_end":3}}]},{"kind":"Mod","id":{"krate":0,"index":18},"span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\future\\mod.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"future","qualname":"::future","value":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\future\\mod.rs","parent":null,"children":[{"krate":0,"index":19},{"krate":0,"index":22},{"krate":0,"index":23},{"krate":0,"index":26},{"krate":0,"index":29},{"krate":0,"index":30},{"krate":0,"index":33},{"krate":0,"index":36},{"krate":0,"index":37},{"krate":0,"index":40},{"krate":0,"index":43},{"krate":0,"index":46},{"krate":0,"index":477},{"krate":0,"index":478},{"krate":0,"index":481},{"krate":0,"index":484},{"krate":0,"index":487},{"krate":0,"index":490},{"krate":0,"index":493},{"krate":0,"index":496},{"krate":0,"index":499},{"krate":0,"index":502},{"krate":0,"index":505},{"krate":0,"index":508},{"krate":0,"index":511},{"krate":0,"index":514},{"krate":0,"index":515},{"krate":0,"index":518},{"krate":0,"index":521},{"krate":0,"index":774},{"krate":0,"index":775},{"krate":0,"index":778},{"krate":0,"index":781},{"krate":0,"index":784},{"krate":0,"index":787},{"krate":0,"index":790},{"krate":0,"index":793},{"krate":0,"index":796},{"krate":0,"index":799},{"krate":0,"index":802},{"krate":0,"index":805},{"krate":0,"index":808},{"krate":0,"index":811},{"krate":0,"index":814},{"krate":0,"index":817},{"krate":0,"index":820},{"krate":0,"index":855},{"krate":0,"index":856},{"krate":0,"index":859},{"krate":0,"index":862},{"krate":0,"index":900},{"krate":0,"index":901},{"krate":0,"index":904},{"krate":0,"index":907},{"krate":0,"index":949},{"krate":0,"index":950},{"krate":0,"index":953},{"krate":0,"index":956},{"krate":0,"index":1001},{"krate":0,"index":1002},{"krate":0,"index":1005},{"krate":0,"index":1008},{"krate":0,"index":1042},{"krate":0,"index":1045},{"krate":0,"index":1081},{"krate":0,"index":1082},{"krate":0,"index":1085},{"krate":0,"index":1088},{"krate":0,"index":1131},{"krate":0,"index":1132},{"krate":0,"index":1135},{"krate":0,"index":1138},{"krate":0,"index":1179},{"krate":0,"index":1180},{"krate":0,"index":1183},{"krate":0,"index":1186},{"krate":0,"index":1189},{"krate":0,"index":1192},{"krate":0,"index":1245},{"krate":0,"index":1246},{"krate":0,"index":1249},{"krate":0,"index":1252},{"krate":0,"index":1255},{"krate":0,"index":1258},{"krate":0,"index":1261},{"krate":0,"index":1264},{"krate":0,"index":1267},{"krate":0,"index":1270},{"krate":0,"index":1344},{"krate":0,"index":1345},{"krate":0,"index":1348},{"krate":0,"index":1351},{"krate":0,"index":1394},{"krate":0,"index":1395},{"krate":0,"index":1398},{"krate":0,"index":1401},{"krate":0,"index":1446},{"krate":0,"index":1447},{"krate":0,"index":1450},{"krate":0,"index":1453},{"krate":0,"index":1506},{"krate":0,"index":1507},{"krate":0,"index":1510},{"krate":0,"index":1513},{"krate":0,"index":1516},{"krate":0,"index":1519},{"krate":0,"index":1522},{"krate":0,"index":1525},{"krate":0,"index":1528},{"krate":0,"index":1531},{"krate":0,"index":1600},{"krate":0,"index":1601},{"krate":0,"index":1604},{"krate":0,"index":1607},{"krate":0,"index":1643},{"krate":0,"index":1644},{"krate":0,"index":1647},{"krate":0,"index":1650},{"krate":0,"index":1696},{"krate":0,"index":1697},{"krate":0,"index":1700},{"krate":0,"index":1703},{"krate":0,"index":1834},{"krate":0,"index":1837},{"krate":0,"index":1856},{"krate":0,"index":1857},{"krate":0,"index":1860},{"krate":0,"index":1863},{"krate":0,"index":1866},{"krate":0,"index":1867},{"krate":0,"index":1869},{"krate":0,"index":1872}],"decl_id":null,"docs":" Asynchronous values.","sig":null,"attributes":[{"value":"/ Asynchronous values.","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\future\\mod.rs","byte_start":11574,"byte_end":11598,"line_start":1,"line_end":1,"column_start":1,"column_end":25}},{"value":"/","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\future\\mod.rs","byte_start":11599,"byte_end":11602,"line_start":2,"line_end":2,"column_start":1,"column_end":4}},{"value":"/ This module contains:","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\future\\mod.rs","byte_start":11603,"byte_end":11628,"line_start":3,"line_end":3,"column_start":1,"column_end":26}},{"value":"/","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\future\\mod.rs","byte_start":11629,"byte_end":11632,"line_start":4,"line_end":4,"column_start":1,"column_end":4}},{"value":"/ - The [`Future`] trait.","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\future\\mod.rs","byte_start":11633,"byte_end":11660,"line_start":5,"line_end":5,"column_start":1,"column_end":28}},{"value":"/ - The [`FutureExt`] and [`TryFutureExt`] trait, which provides adapters for","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\future\\mod.rs","byte_start":11661,"byte_end":11740,"line_start":6,"line_end":6,"column_start":1,"column_end":80}},{"value":"/   chaining and composing futures.","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\future\\mod.rs","byte_start":11741,"byte_end":11778,"line_start":7,"line_end":7,"column_start":1,"column_end":38}},{"value":"/ - Top-level future combinators like [`lazy`](lazy()) which creates a future","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\future\\mod.rs","byte_start":11779,"byte_end":11858,"line_start":8,"line_end":8,"column_start":1,"column_end":80}},{"value":"/   from a closure that defines its return value, and [`ready`](ready()),","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\future\\mod.rs","byte_start":11859,"byte_end":11934,"line_start":9,"line_end":9,"column_start":1,"column_end":76}},{"value":"/   which constructs a future with an immediate defined value.","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\future\\mod.rs","byte_start":11935,"byte_end":11999,"line_start":10,"line_end":10,"column_start":1,"column_end":65}}]},{"kind":"StructVariant","id":{"krate":0,"index":10014},"span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\future\\future\\flatten.rs","byte_start":35381,"byte_end":35386,"line_start":14,"line_end":14,"column_start":9,"column_end":14},"name":"First","qualname":"::future::future::flatten::Flatten::First","value":"Flatten::First { f }","parent":{"krate":0,"index":10011},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"StructVariant","id":{"krate":0,"index":10016},"span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\future\\future\\flatten.rs","byte_start":35415,"byte_end":35421,"line_start":15,"line_end":15,"column_start":9,"column_end":15},"name":"Second","qualname":"::future::future::flatten::Flatten::Second","value":"Flatten::Second { f }","parent":{"krate":0,"index":10011},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":10018},"span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\future\\future\\flatten.rs","byte_start":35450,"byte_end":35455,"line_start":16,"line_end":16,"column_start":9,"column_end":14},"name":"Empty","qualname":"::future::future::flatten::Flatten::Empty","value":"Flatten::Empty","parent":{"krate":0,"index":10011},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Enum","id":{"krate":0,"index":10011},"span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\future\\future\\flatten.rs","byte_start":35351,"byte_end":35358,"line_start":13,"line_end":13,"column_start":14,"column_end":21},"name":"Flatten","qualname":"::future::future::flatten::Flatten","value":"pub enum Flatten<Fut1, Fut2> {\n    First {\n            f: Fut1,\n        },\n    Second {\n            f: Fut2,\n        },\n    Empty,\n}","parent":null,"children":[{"krate":0,"index":10014},{"krate":0,"index":10016},{"krate":0,"index":10018}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":10058},"span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\future\\future\\fuse.rs","byte_start":39812,"byte_end":39816,"line_start":11,"line_end":11,"column_start":16,"column_end":20},"name":"Fuse","qualname":"::future::future::fuse::Fuse","value":"Fuse {  }","parent":null,"children":[{"krate":0,"index":10060}],"decl_id":null,"docs":" Future for the [`fuse`](super::FutureExt::fuse) method.\n","sig":null,"attributes":[{"value":"must_use = \"futures do nothing unless you `.await` or poll them\"","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pin-project-lite-0.2.9\\src\\lib.rs","byte_start":14239710,"byte_end":14239719,"line_start":633,"line_end":633,"column_start":11,"column_end":20}}]},{"kind":"Method","id":{"krate":0,"index":198},"span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\future\\future\\fuse.rs","byte_start":41635,"byte_end":41645,"line_start":69,"line_end":69,"column_start":12,"column_end":22},"name":"terminated","qualname":"<Fuse<Fut>>::terminated","value":"pub fn terminated() -> Self","parent":null,"children":[],"decl_id":null,"docs":" Creates a new `Fuse`-wrapped future which is already terminated.","sig":null,"attributes":[{"value":"/ Creates a new `Fuse`-wrapped future which is already terminated.","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\future\\future\\fuse.rs","byte_start":40013,"byte_end":40081,"line_start":24,"line_end":24,"column_start":5,"column_end":73}},{"value":"/","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\future\\future\\fuse.rs","byte_start":40086,"byte_end":40089,"line_start":25,"line_end":25,"column_start":5,"column_end":8}},{"value":"/ This can be useful in combination with looping and the `select!`","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\future\\future\\fuse.rs","byte_start":40094,"byte_end":40162,"line_start":26,"line_end":26,"column_start":5,"column_end":73}},{"value":"/ macro, which bypasses terminated futures.","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\future\\future\\fuse.rs","byte_start":40167,"byte_end":40212,"line_start":27,"line_end":27,"column_start":5,"column_end":50}},{"value":"/","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\future\\future\\fuse.rs","byte_start":40217,"byte_end":40220,"line_start":28,"line_end":28,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\future\\future\\fuse.rs","byte_start":40225,"byte_end":40239,"line_start":29,"line_end":29,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\future\\future\\fuse.rs","byte_start":40244,"byte_end":40247,"line_start":30,"line_end":30,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\future\\future\\fuse.rs","byte_start":40252,"byte_end":40259,"line_start":31,"line_end":31,"column_start":5,"column_end":12}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\future\\future\\fuse.rs","byte_start":40264,"byte_end":40305,"line_start":32,"line_end":32,"column_start":5,"column_end":46}},{"value":"/ use futures::channel::mpsc;","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\future\\future\\fuse.rs","byte_start":40310,"byte_end":40341,"line_start":33,"line_end":33,"column_start":5,"column_end":36}},{"value":"/ use futures::future::{Fuse, FusedFuture, FutureExt};","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\future\\future\\fuse.rs","byte_start":40346,"byte_end":40402,"line_start":34,"line_end":34,"column_start":5,"column_end":61}},{"value":"/ use futures::select;","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\future\\future\\fuse.rs","byte_start":40407,"byte_end":40431,"line_start":35,"line_end":35,"column_start":5,"column_end":29}},{"value":"/ use futures::stream::StreamExt;","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\future\\future\\fuse.rs","byte_start":40436,"byte_end":40471,"line_start":36,"line_end":36,"column_start":5,"column_end":40}},{"value":"/ use futures::pin_mut;","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\future\\future\\fuse.rs","byte_start":40476,"byte_end":40501,"line_start":37,"line_end":37,"column_start":5,"column_end":30}},{"value":"/","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\future\\future\\fuse.rs","byte_start":40506,"byte_end":40509,"line_start":38,"line_end":38,"column_start":5,"column_end":8}},{"value":"/ let (sender, mut stream) = mpsc::unbounded();","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\future\\future\\fuse.rs","byte_start":40514,"byte_end":40563,"line_start":39,"line_end":39,"column_start":5,"column_end":54}},{"value":"/","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\future\\future\\fuse.rs","byte_start":40568,"byte_end":40571,"line_start":40,"line_end":40,"column_start":5,"column_end":8}},{"value":"/ // Send a few messages into the stream","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\future\\future\\fuse.rs","byte_start":40576,"byte_end":40618,"line_start":41,"line_end":41,"column_start":5,"column_end":47}},{"value":"/ sender.unbounded_send(()).unwrap();","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\future\\future\\fuse.rs","byte_start":40623,"byte_end":40662,"line_start":42,"line_end":42,"column_start":5,"column_end":44}},{"value":"/ sender.unbounded_send(()).unwrap();","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\future\\future\\fuse.rs","byte_start":40667,"byte_end":40706,"line_start":43,"line_end":43,"column_start":5,"column_end":44}},{"value":"/ drop(sender);","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\future\\future\\fuse.rs","byte_start":40711,"byte_end":40728,"line_start":44,"line_end":44,"column_start":5,"column_end":22}},{"value":"/","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\future\\future\\fuse.rs","byte_start":40733,"byte_end":40736,"line_start":45,"line_end":45,"column_start":5,"column_end":8}},{"value":"/ // Use `Fuse::terminated()` to create an already-terminated future","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\future\\future\\fuse.rs","byte_start":40741,"byte_end":40811,"line_start":46,"line_end":46,"column_start":5,"column_end":75}},{"value":"/ // which may be instantiated later.","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\future\\future\\fuse.rs","byte_start":40816,"byte_end":40855,"line_start":47,"line_end":47,"column_start":5,"column_end":44}},{"value":"/ let foo_printer = Fuse::terminated();","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\future\\future\\fuse.rs","byte_start":40860,"byte_end":40901,"line_start":48,"line_end":48,"column_start":5,"column_end":46}},{"value":"/ pin_mut!(foo_printer);","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\future\\future\\fuse.rs","byte_start":40906,"byte_end":40932,"line_start":49,"line_end":49,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\future\\future\\fuse.rs","byte_start":40937,"byte_end":40940,"line_start":50,"line_end":50,"column_start":5,"column_end":8}},{"value":"/ loop {","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\future\\future\\fuse.rs","byte_start":40945,"byte_end":40955,"line_start":51,"line_end":51,"column_start":5,"column_end":15}},{"value":"/     select! {","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\future\\future\\fuse.rs","byte_start":40960,"byte_end":40977,"line_start":52,"line_end":52,"column_start":5,"column_end":22}},{"value":"/         _ = foo_printer => {},","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\future\\future\\fuse.rs","byte_start":40982,"byte_end":41016,"line_start":53,"line_end":53,"column_start":5,"column_end":39}},{"value":"/         () = stream.select_next_some() => {","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\future\\future\\fuse.rs","byte_start":41021,"byte_end":41068,"line_start":54,"line_end":54,"column_start":5,"column_end":52}},{"value":"/             if !foo_printer.is_terminated() {","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\future\\future\\fuse.rs","byte_start":41073,"byte_end":41122,"line_start":55,"line_end":55,"column_start":5,"column_end":54}},{"value":"/                 println!(\"Foo is already being printed!\");","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\future\\future\\fuse.rs","byte_start":41127,"byte_end":41189,"line_start":56,"line_end":56,"column_start":5,"column_end":67}},{"value":"/             } else {","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\future\\future\\fuse.rs","byte_start":41194,"byte_end":41218,"line_start":57,"line_end":57,"column_start":5,"column_end":29}},{"value":"/                 foo_printer.set(async {","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\future\\future\\fuse.rs","byte_start":41223,"byte_end":41266,"line_start":58,"line_end":58,"column_start":5,"column_end":48}},{"value":"/                     // do some other async operations","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\future\\future\\fuse.rs","byte_start":41271,"byte_end":41328,"line_start":59,"line_end":59,"column_start":5,"column_end":62}},{"value":"/                     println!(\"Printing foo from `foo_printer` future\");","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\future\\future\\fuse.rs","byte_start":41333,"byte_end":41408,"line_start":60,"line_end":60,"column_start":5,"column_end":80}},{"value":"/                 }.fuse());","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\future\\future\\fuse.rs","byte_start":41413,"byte_end":41443,"line_start":61,"line_end":61,"column_start":5,"column_end":35}},{"value":"/             }","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\future\\future\\fuse.rs","byte_start":41448,"byte_end":41465,"line_start":62,"line_end":62,"column_start":5,"column_end":22}},{"value":"/         },","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\future\\future\\fuse.rs","byte_start":41470,"byte_end":41484,"line_start":63,"line_end":63,"column_start":5,"column_end":19}},{"value":"/         complete => break, // `foo_printer` is terminated and the stream is done","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\future\\future\\fuse.rs","byte_start":41489,"byte_end":41573,"line_start":64,"line_end":64,"column_start":5,"column_end":89}},{"value":"/     }","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\future\\future\\fuse.rs","byte_start":41578,"byte_end":41587,"line_start":65,"line_end":65,"column_start":5,"column_end":14}},{"value":"/ }","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\future\\future\\fuse.rs","byte_start":41592,"byte_end":41597,"line_start":66,"line_end":66,"column_start":5,"column_end":10}},{"value":"/ # });","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\future\\future\\fuse.rs","byte_start":41602,"byte_end":41611,"line_start":67,"line_end":67,"column_start":5,"column_end":14}},{"value":"/ ```","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\future\\future\\fuse.rs","byte_start":41616,"byte_end":41623,"line_start":68,"line_end":68,"column_start":5,"column_end":12}}]},{"kind":"StructVariant","id":{"krate":0,"index":10097},"span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\future\\future\\map.rs","byte_start":42703,"byte_end":42713,"line_start":16,"line_end":16,"column_start":9,"column_end":19},"name":"Incomplete","qualname":"::future::future::map::Map::Incomplete","value":"Map::Incomplete { future, f }","parent":{"krate":0,"index":10094},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":10100},"span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\future\\future\\map.rs","byte_start":42797,"byte_end":42805,"line_start":21,"line_end":21,"column_start":9,"column_end":17},"name":"Complete","qualname":"::future::future::map::Map::Complete","value":"Map::Complete","parent":{"krate":0,"index":10094},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Enum","id":{"krate":0,"index":10094},"span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\future\\future\\map.rs","byte_start":42681,"byte_end":42684,"line_start":15,"line_end":15,"column_start":14,"column_end":17},"name":"Map","qualname":"::future::future::map::Map","value":"pub enum Map<Fut, F> {\n    Incomplete {\n            future: Fut,\n            f: F,\n        },\n    Complete,\n}","parent":null,"children":[{"krate":0,"index":10097},{"krate":0,"index":10100}],"decl_id":null,"docs":" Internal Map future\n","sig":null,"attributes":[{"value":"must_use = \"futures do nothing unless you `.await` or poll them\"","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pin-project-lite-0.2.9\\src\\lib.rs","byte_start":14240420,"byte_end":14240429,"line_start":659,"line_end":659,"column_start":11,"column_end":20}}]},{"kind":"Struct","id":{"krate":0,"index":10149},"span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\future\\future\\mod.rs","byte_start":15807,"byte_end":15814,"line_start":31,"line_end":31,"column_start":5,"column_end":12},"name":"Flatten","qualname":"::future::future::Flatten","value":"Flatten {  }","parent":null,"children":[{"krate":0,"index":10151}],"decl_id":null,"docs":" Future for the [`flatten`](super::FutureExt::flatten) method.\n","sig":null,"attributes":[{"value":"must_use =\n\"futures/streams/sinks do nothing unless you `.await` or poll them\"","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pin-project-lite-0.2.9\\src\\lib.rs","byte_start":14239710,"byte_end":14239719,"line_start":633,"line_end":633,"column_start":11,"column_end":20}}]},{"kind":"Struct","id":{"krate":0,"index":10197},"span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\future\\future\\mod.rs","byte_start":16065,"byte_end":16078,"line_start":39,"line_end":39,"column_start":5,"column_end":18},"name":"FlattenStream","qualname":"::future::future::FlattenStream","value":"FlattenStream {  }","parent":null,"children":[{"krate":0,"index":10199}],"decl_id":null,"docs":" Stream for the [`flatten_stream`](FutureExt::flatten_stream) method.\n","sig":null,"attributes":[{"value":"must_use =\n\"futures/streams/sinks do nothing unless you `.await` or poll them\"","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pin-project-lite-0.2.9\\src\\lib.rs","byte_start":14239710,"byte_end":14239719,"line_start":633,"line_end":633,"column_start":11,"column_end":20}}]},{"kind":"Struct","id":{"krate":0,"index":10255},"span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\future\\future\\mod.rs","byte_start":16418,"byte_end":16421,"line_start":50,"line_end":50,"column_start":5,"column_end":8},"name":"Map","qualname":"::future::future::Map","value":"Map {  }","parent":null,"children":[{"krate":0,"index":10258}],"decl_id":null,"docs":" Future for the [`map`](super::FutureExt::map) method.\n","sig":null,"attributes":[{"value":"must_use =\n\"futures/streams/sinks do nothing unless you `.await` or poll them\"","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pin-project-lite-0.2.9\\src\\lib.rs","byte_start":14239710,"byte_end":14239719,"line_start":633,"line_end":633,"column_start":11,"column_end":20}}]},{"kind":"Struct","id":{"krate":0,"index":10315},"span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\future\\future\\mod.rs","byte_start":16628,"byte_end":16638,"line_start":57,"line_end":57,"column_start":5,"column_end":15},"name":"IntoStream","qualname":"::future::future::IntoStream","value":"IntoStream {  }","parent":null,"children":[{"krate":0,"index":10317}],"decl_id":null,"docs":" Stream for the [`into_stream`](FutureExt::into_stream) method.\n","sig":null,"attributes":[{"value":"must_use =\n\"futures/streams/sinks do nothing unless you `.await` or poll them\"","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pin-project-lite-0.2.9\\src\\lib.rs","byte_start":14239710,"byte_end":14239719,"line_start":633,"line_end":633,"column_start":11,"column_end":20}}]},{"kind":"Struct","id":{"krate":0,"index":10365},"span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\future\\future\\mod.rs","byte_start":16844,"byte_end":16851,"line_start":64,"line_end":64,"column_start":5,"column_end":12},"name":"MapInto","qualname":"::future::future::MapInto","value":"MapInto {  }","parent":null,"children":[{"krate":0,"index":10368}],"decl_id":null,"docs":" Future for the [`map_into`](FutureExt::map_into) combinator.\n","sig":null,"attributes":[{"value":"must_use =\n\"futures/streams/sinks do nothing unless you `.await` or poll them\"","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pin-project-lite-0.2.9\\src\\lib.rs","byte_start":14239710,"byte_end":14239719,"line_start":633,"line_end":633,"column_start":11,"column_end":20}}]},{"kind":"Struct","id":{"krate":0,"index":10427},"span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\future\\future\\mod.rs","byte_start":17044,"byte_end":17048,"line_start":71,"line_end":71,"column_start":5,"column_end":9},"name":"Then","qualname":"::future::future::Then","value":"Then {  }","parent":null,"children":[{"krate":0,"index":10431}],"decl_id":null,"docs":" Future for the [`then`](FutureExt::then) method.\n","sig":null,"attributes":[{"value":"must_use =\n\"futures/streams/sinks do nothing unless you `.await` or poll them\"","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pin-project-lite-0.2.9\\src\\lib.rs","byte_start":14239710,"byte_end":14239719,"line_start":633,"line_end":633,"column_start":11,"column_end":20}}]},{"kind":"Struct","id":{"krate":0,"index":10500},"span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\future\\future\\mod.rs","byte_start":17293,"byte_end":17300,"line_start":78,"line_end":78,"column_start":5,"column_end":12},"name":"Inspect","qualname":"::future::future::Inspect","value":"Inspect {  }","parent":null,"children":[{"krate":0,"index":10503}],"decl_id":null,"docs":" Future for the [`inspect`](FutureExt::inspect) method.\n","sig":null,"attributes":[{"value":"must_use =\n\"futures/streams/sinks do nothing unless you `.await` or poll them\"","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pin-project-lite-0.2.9\\src\\lib.rs","byte_start":14239710,"byte_end":14239719,"line_start":633,"line_end":633,"column_start":11,"column_end":20}}]},{"kind":"Struct","id":{"krate":0,"index":10560},"span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\future\\future\\mod.rs","byte_start":17541,"byte_end":17551,"line_start":85,"line_end":85,"column_start":5,"column_end":15},"name":"NeverError","qualname":"::future::future::NeverError","value":"NeverError {  }","parent":null,"children":[{"krate":0,"index":10562}],"decl_id":null,"docs":" Future for the [`never_error`](super::FutureExt::never_error) combinator.\n","sig":null,"attributes":[{"value":"must_use =\n\"futures/streams/sinks do nothing unless you `.await` or poll them\"","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pin-project-lite-0.2.9\\src\\lib.rs","byte_start":14239710,"byte_end":14239719,"line_start":633,"line_end":633,"column_start":11,"column_end":20}}]},{"kind":"Struct","id":{"krate":0,"index":10608},"span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\future\\future\\mod.rs","byte_start":17764,"byte_end":17773,"line_start":92,"line_end":92,"column_start":5,"column_end":14},"name":"UnitError","qualname":"::future::future::UnitError","value":"UnitError {  }","parent":null,"children":[{"krate":0,"index":10610}],"decl_id":null,"docs":" Future for the [`unit_error`](super::FutureExt::unit_error) combinator.\n","sig":null,"attributes":[{"value":"must_use =\n\"futures/streams/sinks do nothing unless you `.await` or poll them\"","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pin-project-lite-0.2.9\\src\\lib.rs","byte_start":14239710,"byte_end":14239719,"line_start":633,"line_end":633,"column_start":11,"column_end":20}}]},{"kind":"Struct","id":{"krate":0,"index":10654},"span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\future\\future\\catch_unwind.rs","byte_start":44401,"byte_end":44412,"line_start":13,"line_end":13,"column_start":16,"column_end":27},"name":"CatchUnwind","qualname":"::future::future::catch_unwind::CatchUnwind","value":"CatchUnwind {  }","parent":null,"children":[{"krate":0,"index":10656}],"decl_id":null,"docs":" Future for the [`catch_unwind`](super::FutureExt::catch_unwind) method.\n","sig":null,"attributes":[{"value":"must_use = \"futures do nothing unless you `.await` or poll them\"","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pin-project-lite-0.2.9\\src\\lib.rs","byte_start":14239710,"byte_end":14239719,"line_start":633,"line_end":633,"column_start":11,"column_end":20}}]},{"kind":"Struct","id":{"krate":0,"index":349},"span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\future\\future\\shared.rs","byte_start":45415,"byte_end":45421,"line_start":14,"line_end":14,"column_start":12,"column_end":18},"name":"Shared","qualname":"::future::future::shared::Shared","value":"Shared {  }","parent":null,"children":[{"krate":0,"index":351},{"krate":0,"index":352}],"decl_id":null,"docs":" Future for the [`shared`](super::FutureExt::shared) method.\n","sig":null,"attributes":[{"value":"/ Future for the [`shared`](super::FutureExt::shared) method.","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\future\\future\\shared.rs","byte_start":45272,"byte_end":45335,"line_start":12,"line_end":12,"column_start":1,"column_end":64}},{"value":"must_use = \"futures do nothing unless you `.await` or poll them\"","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\future\\future\\shared.rs","byte_start":45336,"byte_end":45403,"line_start":13,"line_end":13,"column_start":1,"column_end":68}}]},{"kind":"Struct","id":{"krate":0,"index":360},"span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\future\\future\\shared.rs","byte_start":45795,"byte_end":45805,"line_start":30,"line_end":30,"column_start":12,"column_end":22},"name":"WeakShared","qualname":"::future::future::shared::WeakShared","value":"","parent":null,"children":[],"decl_id":null,"docs":" A weak reference to a [`Shared`] that can be upgraded much like an `Arc`.\n","sig":null,"attributes":[{"value":"/ A weak reference to a [`Shared`] that can be upgraded much like an `Arc`.","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\future\\future\\shared.rs","byte_start":45706,"byte_end":45783,"line_start":29,"line_end":29,"column_start":1,"column_end":78}}]},{"kind":"Method","id":{"krate":0,"index":400},"span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\future\\future\\shared.rs","byte_start":47907,"byte_end":47911,"line_start":112,"line_end":112,"column_start":12,"column_end":16},"name":"peek","qualname":"<Shared<Fut>>::peek","value":"pub fn peek(&Self) -> Option<&Fut::Output>","parent":null,"children":[],"decl_id":null,"docs":" Returns [`Some`] containing a reference to this [`Shared`]'s output if\n it has already been computed by a clone or [`None`] if it hasn't been\n computed yet or this [`Shared`] already returned its output from\n [`poll`](Future::poll).\n","sig":null,"attributes":[{"value":"/ Returns [`Some`] containing a reference to this [`Shared`]'s output if","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\future\\future\\shared.rs","byte_start":47638,"byte_end":47712,"line_start":108,"line_end":108,"column_start":5,"column_end":79}},{"value":"/ it has already been computed by a clone or [`None`] if it hasn't been","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\future\\future\\shared.rs","byte_start":47717,"byte_end":47790,"line_start":109,"line_end":109,"column_start":5,"column_end":78}},{"value":"/ computed yet or this [`Shared`] already returned its output from","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\future\\future\\shared.rs","byte_start":47795,"byte_end":47863,"line_start":110,"line_end":110,"column_start":5,"column_end":73}},{"value":"/ [`poll`](Future::poll).","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\future\\future\\shared.rs","byte_start":47868,"byte_end":47895,"line_start":111,"line_end":111,"column_start":5,"column_end":32}}]},{"kind":"Method","id":{"krate":0,"index":401},"span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\future\\future\\shared.rs","byte_start":48406,"byte_end":48415,"line_start":126,"line_end":126,"column_start":12,"column_end":21},"name":"downgrade","qualname":"<Shared<Fut>>::downgrade","value":"pub fn downgrade(&Self) -> Option<WeakShared<Fut>>","parent":null,"children":[],"decl_id":null,"docs":" Creates a new [`WeakShared`] for this [`Shared`].","sig":null,"attributes":[{"value":"/ Creates a new [`WeakShared`] for this [`Shared`].","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\future\\future\\shared.rs","byte_start":48263,"byte_end":48316,"line_start":123,"line_end":123,"column_start":5,"column_end":58}},{"value":"/","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\future\\future\\shared.rs","byte_start":48321,"byte_end":48324,"line_start":124,"line_end":124,"column_start":5,"column_end":8}},{"value":"/ Returns [`None`] if it has already been polled to completion.","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\future\\future\\shared.rs","byte_start":48329,"byte_end":48394,"line_start":125,"line_end":125,"column_start":5,"column_end":70}}]},{"kind":"Method","id":{"krate":0,"index":402},"span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\future\\future\\shared.rs","byte_start":49009,"byte_end":49021,"line_start":142,"line_end":142,"column_start":12,"column_end":24},"name":"strong_count","qualname":"<Shared<Fut>>::strong_count","value":"pub fn strong_count(&Self) -> Option<usize>","parent":null,"children":[],"decl_id":null,"docs":" Gets the number of strong pointers to this allocation.","sig":null,"attributes":[{"value":"/ Gets the number of strong pointers to this allocation.","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\future\\future\\shared.rs","byte_start":48597,"byte_end":48655,"line_start":133,"line_end":133,"column_start":5,"column_end":63}},{"value":"/","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\future\\future\\shared.rs","byte_start":48660,"byte_end":48663,"line_start":134,"line_end":134,"column_start":5,"column_end":8}},{"value":"/ Returns [`None`] if it has already been polled to completion.","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\future\\future\\shared.rs","byte_start":48668,"byte_end":48733,"line_start":135,"line_end":135,"column_start":5,"column_end":70}},{"value":"/","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\future\\future\\shared.rs","byte_start":48738,"byte_end":48741,"line_start":136,"line_end":136,"column_start":5,"column_end":8}},{"value":"/ # Safety","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\future\\future\\shared.rs","byte_start":48746,"byte_end":48758,"line_start":137,"line_end":137,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\future\\future\\shared.rs","byte_start":48763,"byte_end":48766,"line_start":138,"line_end":138,"column_start":5,"column_end":8}},{"value":"/ This method by itself is safe, but using it correctly requires extra care. Another thread","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\future\\future\\shared.rs","byte_start":48771,"byte_end":48864,"line_start":139,"line_end":139,"column_start":5,"column_end":98}},{"value":"/ can change the strong count at any time, including potentially between calling this method","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\future\\future\\shared.rs","byte_start":48869,"byte_end":48963,"line_start":140,"line_end":140,"column_start":5,"column_end":99}},{"value":"/ and acting on the result.","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\future\\future\\shared.rs","byte_start":48968,"byte_end":48997,"line_start":141,"line_end":141,"column_start":5,"column_end":34}}]},{"kind":"Method","id":{"krate":0,"index":404},"span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\future\\future\\shared.rs","byte_start":49529,"byte_end":49539,"line_start":155,"line_end":155,"column_start":12,"column_end":22},"name":"weak_count","qualname":"<Shared<Fut>>::weak_count","value":"pub fn weak_count(&Self) -> Option<usize>","parent":null,"children":[],"decl_id":null,"docs":" Gets the number of weak pointers to this allocation.","sig":null,"attributes":[{"value":"/ Gets the number of weak pointers to this allocation.","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\future\\future\\shared.rs","byte_start":49121,"byte_end":49177,"line_start":146,"line_end":146,"column_start":5,"column_end":61}},{"value":"/","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\future\\future\\shared.rs","byte_start":49182,"byte_end":49185,"line_start":147,"line_end":147,"column_start":5,"column_end":8}},{"value":"/ Returns [`None`] if it has already been polled to completion.","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\future\\future\\shared.rs","byte_start":49190,"byte_end":49255,"line_start":148,"line_end":148,"column_start":5,"column_end":70}},{"value":"/","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\future\\future\\shared.rs","byte_start":49260,"byte_end":49263,"line_start":149,"line_end":149,"column_start":5,"column_end":8}},{"value":"/ # Safety","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\future\\future\\shared.rs","byte_start":49268,"byte_end":49280,"line_start":150,"line_end":150,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\future\\future\\shared.rs","byte_start":49285,"byte_end":49288,"line_start":151,"line_end":151,"column_start":5,"column_end":8}},{"value":"/ This method by itself is safe, but using it correctly requires extra care. Another thread","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\future\\future\\shared.rs","byte_start":49293,"byte_end":49386,"line_start":152,"line_end":152,"column_start":5,"column_end":98}},{"value":"/ can change the weak count at any time, including potentially between calling this method","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\future\\future\\shared.rs","byte_start":49391,"byte_end":49483,"line_start":153,"line_end":153,"column_start":5,"column_end":97}},{"value":"/ and acting on the result.","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\future\\future\\shared.rs","byte_start":49488,"byte_end":49517,"line_start":154,"line_end":154,"column_start":5,"column_end":34}}]},{"kind":"Method","id":{"krate":0,"index":438},"span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\future\\future\\shared.rs","byte_start":55989,"byte_end":55996,"line_start":368,"line_end":368,"column_start":12,"column_end":19},"name":"upgrade","qualname":"<WeakShared<Fut>>::upgrade","value":"pub fn upgrade(&Self) -> Option<Shared<Fut>>","parent":null,"children":[],"decl_id":null,"docs":" Attempts to upgrade this [`WeakShared`] into a [`Shared`].","sig":null,"attributes":[{"value":"/ Attempts to upgrade this [`WeakShared`] into a [`Shared`].","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\future\\future\\shared.rs","byte_start":55799,"byte_end":55861,"line_start":364,"line_end":364,"column_start":5,"column_end":67}},{"value":"/","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\future\\future\\shared.rs","byte_start":55866,"byte_end":55869,"line_start":365,"line_end":365,"column_start":5,"column_end":8}},{"value":"/ Returns [`None`] if all clones of the [`Shared`] have been dropped or polled","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\future\\future\\shared.rs","byte_start":55874,"byte_end":55954,"line_start":366,"line_end":366,"column_start":5,"column_end":85}},{"value":"/ to completion.","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\future\\future\\shared.rs","byte_start":55959,"byte_end":55977,"line_start":367,"line_end":367,"column_start":5,"column_end":23}}]},{"kind":"Trait","id":{"krate":0,"index":448},"span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\future\\future\\mod.rs","byte_start":18755,"byte_end":18764,"line_start":123,"line_end":123,"column_start":11,"column_end":20},"name":"FutureExt","qualname":"::future::future::FutureExt","value":"FutureExt: Future","parent":null,"children":[{"krate":0,"index":449},{"krate":0,"index":452},{"krate":0,"index":454},{"krate":0,"index":457},{"krate":0,"index":459},{"krate":0,"index":461},{"krate":0,"index":462},{"krate":0,"index":463},{"krate":0,"index":464},{"krate":0,"index":465},{"krate":0,"index":467},{"krate":0,"index":468},{"krate":0,"index":469},{"krate":0,"index":471},{"krate":0,"index":473},{"krate":0,"index":474},{"krate":0,"index":475},{"krate":0,"index":476}],"decl_id":null,"docs":" An extension trait for `Future`s that provides a variety of convenient\n adapters.\n","sig":null,"attributes":[{"value":"/ An extension trait for `Future`s that provides a variety of convenient","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\future\\future\\mod.rs","byte_start":18656,"byte_end":18730,"line_start":121,"line_end":121,"column_start":1,"column_end":75}},{"value":"/ adapters.","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\future\\future\\mod.rs","byte_start":18731,"byte_end":18744,"line_start":122,"line_end":122,"column_start":1,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":449},"span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\future\\future\\mod.rs","byte_start":19596,"byte_end":19599,"line_start":146,"line_end":146,"column_start":8,"column_end":11},"name":"map","qualname":"::future::future::FutureExt::map","value":"pub fn map<U, F>(Self, F) -> Map<Self, F> where F: FnOnce(Self::Output) -> U,\nSelf: Sized","parent":{"krate":0,"index":448},"children":[],"decl_id":null,"docs":" Map this future's output to a different type, returning a new future of\n the resulting type.","sig":null,"attributes":[{"value":"/ Map this future's output to a different type, returning a new future of","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\future\\future\\mod.rs","byte_start":18779,"byte_end":18854,"line_start":124,"line_end":124,"column_start":5,"column_end":80}},{"value":"/ the resulting type.","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\future\\future\\mod.rs","byte_start":18859,"byte_end":18882,"line_start":125,"line_end":125,"column_start":5,"column_end":28}},{"value":"/","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\future\\future\\mod.rs","byte_start":18887,"byte_end":18890,"line_start":126,"line_end":126,"column_start":5,"column_end":8}},{"value":"/ This function is similar to the `Option::map` or `Iterator::map` where","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\future\\future\\mod.rs","byte_start":18895,"byte_end":18969,"line_start":127,"line_end":127,"column_start":5,"column_end":79}},{"value":"/ it will change the type of the underlying future. This is useful to","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\future\\future\\mod.rs","byte_start":18974,"byte_end":19045,"line_start":128,"line_end":128,"column_start":5,"column_end":76}},{"value":"/ chain along a computation once a future has been resolved.","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\future\\future\\mod.rs","byte_start":19050,"byte_end":19112,"line_start":129,"line_end":129,"column_start":5,"column_end":67}},{"value":"/","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\future\\future\\mod.rs","byte_start":19117,"byte_end":19120,"line_start":130,"line_end":130,"column_start":5,"column_end":8}},{"value":"/ Note that this function consumes the receiving future and returns a","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\future\\future\\mod.rs","byte_start":19125,"byte_end":19196,"line_start":131,"line_end":131,"column_start":5,"column_end":76}},{"value":"/ wrapped version of it, similar to the existing `map` methods in the","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\future\\future\\mod.rs","byte_start":19201,"byte_end":19272,"line_start":132,"line_end":132,"column_start":5,"column_end":76}},{"value":"/ standard library.","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\future\\future\\mod.rs","byte_start":19277,"byte_end":19298,"line_start":133,"line_end":133,"column_start":5,"column_end":26}},{"value":"/","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\future\\future\\mod.rs","byte_start":19303,"byte_end":19306,"line_start":134,"line_end":134,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\future\\future\\mod.rs","byte_start":19311,"byte_end":19325,"line_start":135,"line_end":135,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\future\\future\\mod.rs","byte_start":19330,"byte_end":19333,"line_start":136,"line_end":136,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\future\\future\\mod.rs","byte_start":19338,"byte_end":19345,"line_start":137,"line_end":137,"column_start":5,"column_end":12}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\future\\future\\mod.rs","byte_start":19350,"byte_end":19391,"line_start":138,"line_end":138,"column_start":5,"column_end":46}},{"value":"/ use futures::future::FutureExt;","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\future\\future\\mod.rs","byte_start":19396,"byte_end":19431,"line_start":139,"line_end":139,"column_start":5,"column_end":40}},{"value":"/","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\future\\future\\mod.rs","byte_start":19436,"byte_end":19439,"line_start":140,"line_end":140,"column_start":5,"column_end":8}},{"value":"/ let future = async { 1 };","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\future\\future\\mod.rs","byte_start":19444,"byte_end":19473,"line_start":141,"line_end":141,"column_start":5,"column_end":34}},{"value":"/ let new_future = future.map(|x| x + 3);","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\future\\future\\mod.rs","byte_start":19478,"byte_end":19521,"line_start":142,"line_end":142,"column_start":5,"column_end":48}},{"value":"/ assert_eq!(new_future.await, 4);","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\future\\future\\mod.rs","byte_start":19526,"byte_end":19562,"line_start":143,"line_end":143,"column_start":5,"column_end":41}},{"value":"/ # });","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\future\\future\\mod.rs","byte_start":19567,"byte_end":19576,"line_start":144,"line_end":144,"column_start":5,"column_end":14}},{"value":"/ ```","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\future\\future\\mod.rs","byte_start":19581,"byte_end":19588,"line_start":145,"line_end":145,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":452},"span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\future\\future\\mod.rs","byte_start":19996,"byte_end":20004,"line_start":159,"line_end":159,"column_start":8,"column_end":16},"name":"map_into","qualname":"::future::future::FutureExt::map_into","value":"pub fn map_into<U>(Self) -> MapInto<Self, U> where Self::Output: Into<U>,\nSelf: Sized","parent":{"krate":0,"index":448},"children":[],"decl_id":null,"docs":" Map this future's output to a different type, returning a new future of\n the resulting type.","sig":null,"attributes":[{"value":"/ Map this future's output to a different type, returning a new future of","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\future\\future\\mod.rs","byte_start":19769,"byte_end":19844,"line_start":154,"line_end":154,"column_start":5,"column_end":80}},{"value":"/ the resulting type.","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\future\\future\\mod.rs","byte_start":19849,"byte_end":19872,"line_start":155,"line_end":155,"column_start":5,"column_end":28}},{"value":"/","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\future\\future\\mod.rs","byte_start":19877,"byte_end":19880,"line_start":156,"line_end":156,"column_start":5,"column_end":8}},{"value":"/ This function is equivalent to calling `map(Into::into)` but allows naming","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\future\\future\\mod.rs","byte_start":19885,"byte_end":19963,"line_start":157,"line_end":157,"column_start":5,"column_end":83}},{"value":"/ the return type.","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\future\\future\\mod.rs","byte_start":19968,"byte_end":19988,"line_start":158,"line_end":158,"column_start":5,"column_end":25}}]},{"kind":"Method","id":{"krate":0,"index":454},"span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\future\\future\\mod.rs","byte_start":21016,"byte_end":21020,"line_start":191,"line_end":191,"column_start":8,"column_end":12},"name":"then","qualname":"::future::future::FutureExt::then","value":"pub fn then<Fut, F>(Self, F) -> Then<Self, Fut, F> where\nF: FnOnce(Self::Output) -> Fut, Fut: Future, Self: Sized","parent":{"krate":0,"index":448},"children":[],"decl_id":null,"docs":" Chain on a computation for when a future finished, passing the result of\n the future to the provided closure `f`.","sig":null,"attributes":[{"value":"/ Chain on a computation for when a future finished, passing the result of","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\future\\future\\mod.rs","byte_start":20163,"byte_end":20239,"line_start":167,"line_end":167,"column_start":5,"column_end":81}},{"value":"/ the future to the provided closure `f`.","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\future\\future\\mod.rs","byte_start":20244,"byte_end":20287,"line_start":168,"line_end":168,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\future\\future\\mod.rs","byte_start":20292,"byte_end":20295,"line_start":169,"line_end":169,"column_start":5,"column_end":8}},{"value":"/ The returned value of the closure must implement the `Future` trait","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\future\\future\\mod.rs","byte_start":20300,"byte_end":20371,"line_start":170,"line_end":170,"column_start":5,"column_end":76}},{"value":"/ and can represent some more work to be done before the composed future","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\future\\future\\mod.rs","byte_start":20376,"byte_end":20450,"line_start":171,"line_end":171,"column_start":5,"column_end":79}},{"value":"/ is finished.","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\future\\future\\mod.rs","byte_start":20455,"byte_end":20471,"line_start":172,"line_end":172,"column_start":5,"column_end":21}},{"value":"/","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\future\\future\\mod.rs","byte_start":20476,"byte_end":20479,"line_start":173,"line_end":173,"column_start":5,"column_end":8}},{"value":"/ The closure `f` is only run *after* successful completion of the `self`","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\future\\future\\mod.rs","byte_start":20484,"byte_end":20559,"line_start":174,"line_end":174,"column_start":5,"column_end":80}},{"value":"/ future.","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\future\\future\\mod.rs","byte_start":20564,"byte_end":20575,"line_start":175,"line_end":175,"column_start":5,"column_end":16}},{"value":"/","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\future\\future\\mod.rs","byte_start":20580,"byte_end":20583,"line_start":176,"line_end":176,"column_start":5,"column_end":8}},{"value":"/ Note that this function consumes the receiving future and returns a","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\future\\future\\mod.rs","byte_start":20588,"byte_end":20659,"line_start":177,"line_end":177,"column_start":5,"column_end":76}},{"value":"/ wrapped version of it.","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\future\\future\\mod.rs","byte_start":20664,"byte_end":20690,"line_start":178,"line_end":178,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\future\\future\\mod.rs","byte_start":20695,"byte_end":20698,"line_start":179,"line_end":179,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\future\\future\\mod.rs","byte_start":20703,"byte_end":20717,"line_start":180,"line_end":180,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\future\\future\\mod.rs","byte_start":20722,"byte_end":20725,"line_start":181,"line_end":181,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\future\\future\\mod.rs","byte_start":20730,"byte_end":20737,"line_start":182,"line_end":182,"column_start":5,"column_end":12}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\future\\future\\mod.rs","byte_start":20742,"byte_end":20783,"line_start":183,"line_end":183,"column_start":5,"column_end":46}},{"value":"/ use futures::future::FutureExt;","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\future\\future\\mod.rs","byte_start":20788,"byte_end":20823,"line_start":184,"line_end":184,"column_start":5,"column_end":40}},{"value":"/","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\future\\future\\mod.rs","byte_start":20828,"byte_end":20831,"line_start":185,"line_end":185,"column_start":5,"column_end":8}},{"value":"/ let future_of_1 = async { 1 };","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\future\\future\\mod.rs","byte_start":20836,"byte_end":20870,"line_start":186,"line_end":186,"column_start":5,"column_end":39}},{"value":"/ let future_of_4 = future_of_1.then(|x| async move { x + 3 });","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\future\\future\\mod.rs","byte_start":20875,"byte_end":20940,"line_start":187,"line_end":187,"column_start":5,"column_end":70}},{"value":"/ assert_eq!(future_of_4.await, 4);","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\future\\future\\mod.rs","byte_start":20945,"byte_end":20982,"line_start":188,"line_end":188,"column_start":5,"column_end":42}},{"value":"/ # });","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\future\\future\\mod.rs","byte_start":20987,"byte_end":20996,"line_start":189,"line_end":189,"column_start":5,"column_end":14}},{"value":"/ ```","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\future\\future\\mod.rs","byte_start":21001,"byte_end":21008,"line_start":190,"line_end":190,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":457},"span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\future\\future\\mod.rs","byte_start":21890,"byte_end":21901,"line_start":222,"line_end":222,"column_start":8,"column_end":19},"name":"left_future","qualname":"::future::future::FutureExt::left_future","value":"pub fn left_future<B>(Self) -> Either<Self, B> where B: Future<Output =\nSelf::Output>, Self: Sized","parent":{"krate":0,"index":448},"children":[],"decl_id":null,"docs":" Wrap this future in an `Either` future, making it the left-hand variant\n of that `Either`.","sig":null,"attributes":[{"value":"/ Wrap this future in an `Either` future, making it the left-hand variant","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\future\\future\\mod.rs","byte_start":21232,"byte_end":21307,"line_start":200,"line_end":200,"column_start":5,"column_end":80}},{"value":"/ of that `Either`.","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\future\\future\\mod.rs","byte_start":21312,"byte_end":21333,"line_start":201,"line_end":201,"column_start":5,"column_end":26}},{"value":"/","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\future\\future\\mod.rs","byte_start":21338,"byte_end":21341,"line_start":202,"line_end":202,"column_start":5,"column_end":8}},{"value":"/ This can be used in combination with the `right_future` method to write `if`","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\future\\future\\mod.rs","byte_start":21346,"byte_end":21426,"line_start":203,"line_end":203,"column_start":5,"column_end":85}},{"value":"/ statements that evaluate to different futures in different branches.","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\future\\future\\mod.rs","byte_start":21431,"byte_end":21503,"line_start":204,"line_end":204,"column_start":5,"column_end":77}},{"value":"/","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\future\\future\\mod.rs","byte_start":21508,"byte_end":21511,"line_start":205,"line_end":205,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\future\\future\\mod.rs","byte_start":21516,"byte_end":21530,"line_start":206,"line_end":206,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\future\\future\\mod.rs","byte_start":21535,"byte_end":21538,"line_start":207,"line_end":207,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\future\\future\\mod.rs","byte_start":21543,"byte_end":21550,"line_start":208,"line_end":208,"column_start":5,"column_end":12}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\future\\future\\mod.rs","byte_start":21555,"byte_end":21596,"line_start":209,"line_end":209,"column_start":5,"column_end":46}},{"value":"/ use futures::future::FutureExt;","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\future\\future\\mod.rs","byte_start":21601,"byte_end":21636,"line_start":210,"line_end":210,"column_start":5,"column_end":40}},{"value":"/","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\future\\future\\mod.rs","byte_start":21641,"byte_end":21644,"line_start":211,"line_end":211,"column_start":5,"column_end":8}},{"value":"/ let x = 6;","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\future\\future\\mod.rs","byte_start":21649,"byte_end":21663,"line_start":212,"line_end":212,"column_start":5,"column_end":19}},{"value":"/ let future = if x < 10 {","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\future\\future\\mod.rs","byte_start":21668,"byte_end":21696,"line_start":213,"line_end":213,"column_start":5,"column_end":33}},{"value":"/     async { true }.left_future()","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\future\\future\\mod.rs","byte_start":21701,"byte_end":21737,"line_start":214,"line_end":214,"column_start":5,"column_end":41}},{"value":"/ } else {","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\future\\future\\mod.rs","byte_start":21742,"byte_end":21754,"line_start":215,"line_end":215,"column_start":5,"column_end":17}},{"value":"/     async { false }.right_future()","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\future\\future\\mod.rs","byte_start":21759,"byte_end":21797,"line_start":216,"line_end":216,"column_start":5,"column_end":43}},{"value":"/ };","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\future\\future\\mod.rs","byte_start":21802,"byte_end":21808,"line_start":217,"line_end":217,"column_start":5,"column_end":11}},{"value":"/","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\future\\future\\mod.rs","byte_start":21813,"byte_end":21816,"line_start":218,"line_end":218,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(future.await, true);","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\future\\future\\mod.rs","byte_start":21821,"byte_end":21856,"line_start":219,"line_end":219,"column_start":5,"column_end":40}},{"value":"/ # });","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\future\\future\\mod.rs","byte_start":21861,"byte_end":21870,"line_start":220,"line_end":220,"column_start":5,"column_end":14}},{"value":"/ ```","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\future\\future\\mod.rs","byte_start":21875,"byte_end":21882,"line_start":221,"line_end":221,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":459},"span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\future\\future\\mod.rs","byte_start":22740,"byte_end":22752,"line_start":252,"line_end":252,"column_start":8,"column_end":20},"name":"right_future","qualname":"::future::future::FutureExt::right_future","value":"pub fn right_future<A>(Self) -> Either<A, Self> where A: Future<Output =\nSelf::Output>, Self: Sized","parent":{"krate":0,"index":448},"children":[],"decl_id":null,"docs":" Wrap this future in an `Either` future, making it the right-hand variant\n of that `Either`.","sig":null,"attributes":[{"value":"/ Wrap this future in an `Either` future, making it the right-hand variant","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\future\\future\\mod.rs","byte_start":22081,"byte_end":22157,"line_start":230,"line_end":230,"column_start":5,"column_end":81}},{"value":"/ of that `Either`.","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\future\\future\\mod.rs","byte_start":22162,"byte_end":22183,"line_start":231,"line_end":231,"column_start":5,"column_end":26}},{"value":"/","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\future\\future\\mod.rs","byte_start":22188,"byte_end":22191,"line_start":232,"line_end":232,"column_start":5,"column_end":8}},{"value":"/ This can be used in combination with the `left_future` method to write `if`","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\future\\future\\mod.rs","byte_start":22196,"byte_end":22275,"line_start":233,"line_end":233,"column_start":5,"column_end":84}},{"value":"/ statements that evaluate to different futures in different branches.","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\future\\future\\mod.rs","byte_start":22280,"byte_end":22352,"line_start":234,"line_end":234,"column_start":5,"column_end":77}},{"value":"/","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\future\\future\\mod.rs","byte_start":22357,"byte_end":22360,"line_start":235,"line_end":235,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\future\\future\\mod.rs","byte_start":22365,"byte_end":22379,"line_start":236,"line_end":236,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\future\\future\\mod.rs","byte_start":22384,"byte_end":22387,"line_start":237,"line_end":237,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\future\\future\\mod.rs","byte_start":22392,"byte_end":22399,"line_start":238,"line_end":238,"column_start":5,"column_end":12}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\future\\future\\mod.rs","byte_start":22404,"byte_end":22445,"line_start":239,"line_end":239,"column_start":5,"column_end":46}},{"value":"/ use futures::future::FutureExt;","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\future\\future\\mod.rs","byte_start":22450,"byte_end":22485,"line_start":240,"line_end":240,"column_start":5,"column_end":40}},{"value":"/","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\future\\future\\mod.rs","byte_start":22490,"byte_end":22493,"line_start":241,"line_end":241,"column_start":5,"column_end":8}},{"value":"/ let x = 6;","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\future\\future\\mod.rs","byte_start":22498,"byte_end":22512,"line_start":242,"line_end":242,"column_start":5,"column_end":19}},{"value":"/ let future = if x > 10 {","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\future\\future\\mod.rs","byte_start":22517,"byte_end":22545,"line_start":243,"line_end":243,"column_start":5,"column_end":33}},{"value":"/     async { true }.left_future()","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\future\\future\\mod.rs","byte_start":22550,"byte_end":22586,"line_start":244,"line_end":244,"column_start":5,"column_end":41}},{"value":"/ } else {","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\future\\future\\mod.rs","byte_start":22591,"byte_end":22603,"line_start":245,"line_end":245,"column_start":5,"column_end":17}},{"value":"/     async { false }.right_future()","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\future\\future\\mod.rs","byte_start":22608,"byte_end":22646,"line_start":246,"line_end":246,"column_start":5,"column_end":43}},{"value":"/ };","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\future\\future\\mod.rs","byte_start":22651,"byte_end":22657,"line_start":247,"line_end":247,"column_start":5,"column_end":11}},{"value":"/","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\future\\future\\mod.rs","byte_start":22662,"byte_end":22665,"line_start":248,"line_end":248,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(future.await, false);","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\future\\future\\mod.rs","byte_start":22670,"byte_end":22706,"line_start":249,"line_end":249,"column_start":5,"column_end":41}},{"value":"/ # });","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\future\\future\\mod.rs","byte_start":22711,"byte_end":22720,"line_start":250,"line_end":250,"column_start":5,"column_end":14}},{"value":"/ ```","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\future\\future\\mod.rs","byte_start":22725,"byte_end":22732,"line_start":251,"line_end":251,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":461},"span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\future\\future\\mod.rs","byte_start":23531,"byte_end":23542,"line_start":278,"line_end":278,"column_start":8,"column_end":19},"name":"into_stream","qualname":"::future::future::FutureExt::into_stream","value":"pub fn into_stream(Self) -> IntoStream<Self> where Self: Sized","parent":{"krate":0,"index":448},"children":[],"decl_id":null,"docs":" Convert this future into a single element stream.","sig":null,"attributes":[{"value":"/ Convert this future into a single element stream.","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\future\\future\\mod.rs","byte_start":22933,"byte_end":22986,"line_start":260,"line_end":260,"column_start":5,"column_end":58}},{"value":"/","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\future\\future\\mod.rs","byte_start":22991,"byte_end":22994,"line_start":261,"line_end":261,"column_start":5,"column_end":8}},{"value":"/ The returned stream contains single success if this future resolves to","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\future\\future\\mod.rs","byte_start":22999,"byte_end":23073,"line_start":262,"line_end":262,"column_start":5,"column_end":79}},{"value":"/ success or single error if this future resolves into error.","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\future\\future\\mod.rs","byte_start":23078,"byte_end":23141,"line_start":263,"line_end":263,"column_start":5,"column_end":68}},{"value":"/","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\future\\future\\mod.rs","byte_start":23146,"byte_end":23149,"line_start":264,"line_end":264,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\future\\future\\mod.rs","byte_start":23154,"byte_end":23168,"line_start":265,"line_end":265,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\future\\future\\mod.rs","byte_start":23173,"byte_end":23176,"line_start":266,"line_end":266,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\future\\future\\mod.rs","byte_start":23181,"byte_end":23188,"line_start":267,"line_end":267,"column_start":5,"column_end":12}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\future\\future\\mod.rs","byte_start":23193,"byte_end":23234,"line_start":268,"line_end":268,"column_start":5,"column_end":46}},{"value":"/ use futures::future::FutureExt;","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\future\\future\\mod.rs","byte_start":23239,"byte_end":23274,"line_start":269,"line_end":269,"column_start":5,"column_end":40}},{"value":"/ use futures::stream::StreamExt;","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\future\\future\\mod.rs","byte_start":23279,"byte_end":23314,"line_start":270,"line_end":270,"column_start":5,"column_end":40}},{"value":"/","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\future\\future\\mod.rs","byte_start":23319,"byte_end":23322,"line_start":271,"line_end":271,"column_start":5,"column_end":8}},{"value":"/ let future = async { 17 };","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\future\\future\\mod.rs","byte_start":23327,"byte_end":23357,"line_start":272,"line_end":272,"column_start":5,"column_end":35}},{"value":"/ let stream = future.into_stream();","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\future\\future\\mod.rs","byte_start":23362,"byte_end":23400,"line_start":273,"line_end":273,"column_start":5,"column_end":43}},{"value":"/ let collected: Vec<_> = stream.collect().await;","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\future\\future\\mod.rs","byte_start":23405,"byte_end":23456,"line_start":274,"line_end":274,"column_start":5,"column_end":56}},{"value":"/ assert_eq!(collected, vec![17]);","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\future\\future\\mod.rs","byte_start":23461,"byte_end":23497,"line_start":275,"line_end":275,"column_start":5,"column_end":41}},{"value":"/ # });","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\future\\future\\mod.rs","byte_start":23502,"byte_end":23511,"line_start":276,"line_end":276,"column_start":5,"column_end":14}},{"value":"/ ```","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\future\\future\\mod.rs","byte_start":23516,"byte_end":23523,"line_start":277,"line_end":277,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":462},"span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\future\\future\\mod.rs","byte_start":24407,"byte_end":24414,"line_start":307,"line_end":307,"column_start":8,"column_end":15},"name":"flatten","qualname":"::future::future::FutureExt::flatten","value":"pub fn flatten(Self) -> Flatten<Self> where Self::Output: Future, Self: Sized","parent":{"krate":0,"index":448},"children":[],"decl_id":null,"docs":" Flatten the execution of this future when the output of this\n future is itself another future.","sig":null,"attributes":[{"value":"/ Flatten the execution of this future when the output of this","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\future\\future\\mod.rs","byte_start":23681,"byte_end":23745,"line_start":285,"line_end":285,"column_start":5,"column_end":69}},{"value":"/ future is itself another future.","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\future\\future\\mod.rs","byte_start":23750,"byte_end":23786,"line_start":286,"line_end":286,"column_start":5,"column_end":41}},{"value":"/","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\future\\future\\mod.rs","byte_start":23791,"byte_end":23794,"line_start":287,"line_end":287,"column_start":5,"column_end":8}},{"value":"/ This can be useful when combining futures together to flatten the","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\future\\future\\mod.rs","byte_start":23799,"byte_end":23868,"line_start":288,"line_end":288,"column_start":5,"column_end":74}},{"value":"/ computation out the final result.","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\future\\future\\mod.rs","byte_start":23873,"byte_end":23910,"line_start":289,"line_end":289,"column_start":5,"column_end":42}},{"value":"/","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\future\\future\\mod.rs","byte_start":23915,"byte_end":23918,"line_start":290,"line_end":290,"column_start":5,"column_end":8}},{"value":"/ This method is roughly equivalent to `self.then(|x| x)`.","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\future\\future\\mod.rs","byte_start":23923,"byte_end":23983,"line_start":291,"line_end":291,"column_start":5,"column_end":65}},{"value":"/","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\future\\future\\mod.rs","byte_start":23988,"byte_end":23991,"line_start":292,"line_end":292,"column_start":5,"column_end":8}},{"value":"/ Note that this function consumes the receiving future and returns a","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\future\\future\\mod.rs","byte_start":23996,"byte_end":24067,"line_start":293,"line_end":293,"column_start":5,"column_end":76}},{"value":"/ wrapped version of it.","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\future\\future\\mod.rs","byte_start":24072,"byte_end":24098,"line_start":294,"line_end":294,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\future\\future\\mod.rs","byte_start":24103,"byte_end":24106,"line_start":295,"line_end":295,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\future\\future\\mod.rs","byte_start":24111,"byte_end":24125,"line_start":296,"line_end":296,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\future\\future\\mod.rs","byte_start":24130,"byte_end":24133,"line_start":297,"line_end":297,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\future\\future\\mod.rs","byte_start":24138,"byte_end":24145,"line_start":298,"line_end":298,"column_start":5,"column_end":12}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\future\\future\\mod.rs","byte_start":24150,"byte_end":24191,"line_start":299,"line_end":299,"column_start":5,"column_end":46}},{"value":"/ use futures::future::FutureExt;","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\future\\future\\mod.rs","byte_start":24196,"byte_end":24231,"line_start":300,"line_end":300,"column_start":5,"column_end":40}},{"value":"/","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\future\\future\\mod.rs","byte_start":24236,"byte_end":24239,"line_start":301,"line_end":301,"column_start":5,"column_end":8}},{"value":"/ let nested_future = async { async { 1 } };","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\future\\future\\mod.rs","byte_start":24244,"byte_end":24290,"line_start":302,"line_end":302,"column_start":5,"column_end":51}},{"value":"/ let future = nested_future.flatten();","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\future\\future\\mod.rs","byte_start":24295,"byte_end":24336,"line_start":303,"line_end":303,"column_start":5,"column_end":46}},{"value":"/ assert_eq!(future.await, 1);","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\future\\future\\mod.rs","byte_start":24341,"byte_end":24373,"line_start":304,"line_end":304,"column_start":5,"column_end":37}},{"value":"/ # });","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\future\\future\\mod.rs","byte_start":24378,"byte_end":24387,"line_start":305,"line_end":305,"column_start":5,"column_end":14}},{"value":"/ ```","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\future\\future\\mod.rs","byte_start":24392,"byte_end":24399,"line_start":306,"line_end":306,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":463},"span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\future\\future\\mod.rs","byte_start":25519,"byte_end":25533,"line_start":341,"line_end":341,"column_start":8,"column_end":22},"name":"flatten_stream","qualname":"::future::future::FutureExt::flatten_stream","value":"pub fn flatten_stream(Self) -> FlattenStream<Self> where Self::Output: Stream,\nSelf: Sized","parent":{"krate":0,"index":448},"children":[],"decl_id":null,"docs":" Flatten the execution of this future when the successful result of this\n future is a stream.","sig":null,"attributes":[{"value":"/ Flatten the execution of this future when the successful result of this","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\future\\future\\mod.rs","byte_start":24628,"byte_end":24703,"line_start":316,"line_end":316,"column_start":5,"column_end":80}},{"value":"/ future is a stream.","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\future\\future\\mod.rs","byte_start":24708,"byte_end":24731,"line_start":317,"line_end":317,"column_start":5,"column_end":28}},{"value":"/","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\future\\future\\mod.rs","byte_start":24736,"byte_end":24739,"line_start":318,"line_end":318,"column_start":5,"column_end":8}},{"value":"/ This can be useful when stream initialization is deferred, and it is","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\future\\future\\mod.rs","byte_start":24744,"byte_end":24816,"line_start":319,"line_end":319,"column_start":5,"column_end":77}},{"value":"/ convenient to work with that stream as if stream was available at the","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\future\\future\\mod.rs","byte_start":24821,"byte_end":24894,"line_start":320,"line_end":320,"column_start":5,"column_end":78}},{"value":"/ call site.","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\future\\future\\mod.rs","byte_start":24899,"byte_end":24913,"line_start":321,"line_end":321,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\future\\future\\mod.rs","byte_start":24918,"byte_end":24921,"line_start":322,"line_end":322,"column_start":5,"column_end":8}},{"value":"/ Note that this function consumes this future and returns a wrapped","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\future\\future\\mod.rs","byte_start":24926,"byte_end":24996,"line_start":323,"line_end":323,"column_start":5,"column_end":75}},{"value":"/ version of it.","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\future\\future\\mod.rs","byte_start":25001,"byte_end":25019,"line_start":324,"line_end":324,"column_start":5,"column_end":23}},{"value":"/","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\future\\future\\mod.rs","byte_start":25024,"byte_end":25027,"line_start":325,"line_end":325,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\future\\future\\mod.rs","byte_start":25032,"byte_end":25046,"line_start":326,"line_end":326,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\future\\future\\mod.rs","byte_start":25051,"byte_end":25054,"line_start":327,"line_end":327,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\future\\future\\mod.rs","byte_start":25059,"byte_end":25066,"line_start":328,"line_end":328,"column_start":5,"column_end":12}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\future\\future\\mod.rs","byte_start":25071,"byte_end":25112,"line_start":329,"line_end":329,"column_start":5,"column_end":46}},{"value":"/ use futures::future::FutureExt;","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\future\\future\\mod.rs","byte_start":25117,"byte_end":25152,"line_start":330,"line_end":330,"column_start":5,"column_end":40}},{"value":"/ use futures::stream::{self, StreamExt};","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\future\\future\\mod.rs","byte_start":25157,"byte_end":25200,"line_start":331,"line_end":331,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\future\\future\\mod.rs","byte_start":25205,"byte_end":25208,"line_start":332,"line_end":332,"column_start":5,"column_end":8}},{"value":"/ let stream_items = vec![17, 18, 19];","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\future\\future\\mod.rs","byte_start":25213,"byte_end":25253,"line_start":333,"line_end":333,"column_start":5,"column_end":45}},{"value":"/ let future_of_a_stream = async { stream::iter(stream_items) };","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\future\\future\\mod.rs","byte_start":25258,"byte_end":25324,"line_start":334,"line_end":334,"column_start":5,"column_end":71}},{"value":"/","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\future\\future\\mod.rs","byte_start":25329,"byte_end":25332,"line_start":335,"line_end":335,"column_start":5,"column_end":8}},{"value":"/ let stream = future_of_a_stream.flatten_stream();","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\future\\future\\mod.rs","byte_start":25337,"byte_end":25390,"line_start":336,"line_end":336,"column_start":5,"column_end":58}},{"value":"/ let list: Vec<_> = stream.collect().await;","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\future\\future\\mod.rs","byte_start":25395,"byte_end":25441,"line_start":337,"line_end":337,"column_start":5,"column_end":51}},{"value":"/ assert_eq!(list, vec![17, 18, 19]);","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\future\\future\\mod.rs","byte_start":25446,"byte_end":25485,"line_start":338,"line_end":338,"column_start":5,"column_end":44}},{"value":"/ # });","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\future\\future\\mod.rs","byte_start":25490,"byte_end":25499,"line_start":339,"line_end":339,"column_start":5,"column_end":14}},{"value":"/ ```","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\future\\future\\mod.rs","byte_start":25504,"byte_end":25511,"line_start":340,"line_end":340,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":464},"span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\future\\future\\mod.rs","byte_start":26621,"byte_end":26625,"line_start":365,"line_end":365,"column_start":8,"column_end":12},"name":"fuse","qualname":"::future::future::FutureExt::fuse","value":"pub fn fuse(Self) -> Fuse<Self> where Self: Sized","parent":{"krate":0,"index":448},"children":[],"decl_id":null,"docs":" Fuse a future such that `poll` will never again be called once it has\n completed. This method can be used to turn any `Future` into a\n `FusedFuture`.","sig":null,"attributes":[{"value":"/ Fuse a future such that `poll` will never again be called once it has","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\future\\future\\mod.rs","byte_start":25726,"byte_end":25799,"line_start":349,"line_end":349,"column_start":5,"column_end":78}},{"value":"/ completed. This method can be used to turn any `Future` into a","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\future\\future\\mod.rs","byte_start":25804,"byte_end":25870,"line_start":350,"line_end":350,"column_start":5,"column_end":71}},{"value":"/ `FusedFuture`.","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\future\\future\\mod.rs","byte_start":25875,"byte_end":25893,"line_start":351,"line_end":351,"column_start":5,"column_end":23}},{"value":"/","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\future\\future\\mod.rs","byte_start":25898,"byte_end":25901,"line_start":352,"line_end":352,"column_start":5,"column_end":8}},{"value":"/ Normally, once a future has returned `Poll::Ready` from `poll`,","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\future\\future\\mod.rs","byte_start":25906,"byte_end":25973,"line_start":353,"line_end":353,"column_start":5,"column_end":72}},{"value":"/ any further calls could exhibit bad behavior such as blocking","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\future\\future\\mod.rs","byte_start":25978,"byte_end":26043,"line_start":354,"line_end":354,"column_start":5,"column_end":70}},{"value":"/ forever, panicking, never returning, etc. If it is known that `poll`","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\future\\future\\mod.rs","byte_start":26048,"byte_end":26120,"line_start":355,"line_end":355,"column_start":5,"column_end":77}},{"value":"/ may be called too often then this method can be used to ensure that it","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\future\\future\\mod.rs","byte_start":26125,"byte_end":26199,"line_start":356,"line_end":356,"column_start":5,"column_end":79}},{"value":"/ has defined semantics.","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\future\\future\\mod.rs","byte_start":26204,"byte_end":26230,"line_start":357,"line_end":357,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\future\\future\\mod.rs","byte_start":26235,"byte_end":26238,"line_start":358,"line_end":358,"column_start":5,"column_end":8}},{"value":"/ If a `fuse`d future is `poll`ed after having returned `Poll::Ready`","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\future\\future\\mod.rs","byte_start":26243,"byte_end":26314,"line_start":359,"line_end":359,"column_start":5,"column_end":76}},{"value":"/ previously, it will return `Poll::Pending`, from `poll` again (and will","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\future\\future\\mod.rs","byte_start":26319,"byte_end":26394,"line_start":360,"line_end":360,"column_start":5,"column_end":80}},{"value":"/ continue to do so for all future calls to `poll`).","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\future\\future\\mod.rs","byte_start":26399,"byte_end":26453,"line_start":361,"line_end":361,"column_start":5,"column_end":59}},{"value":"/","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\future\\future\\mod.rs","byte_start":26458,"byte_end":26461,"line_start":362,"line_end":362,"column_start":5,"column_end":8}},{"value":"/ This combinator will drop the underlying future as soon as it has been","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\future\\future\\mod.rs","byte_start":26466,"byte_end":26540,"line_start":363,"line_end":363,"column_start":5,"column_end":79}},{"value":"/ completed to ensure resources are reclaimed as soon as possible.","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\future\\future\\mod.rs","byte_start":26545,"byte_end":26613,"line_start":364,"line_end":364,"column_start":5,"column_end":73}}]},{"kind":"Method","id":{"krate":0,"index":465},"span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\future\\future\\mod.rs","byte_start":27465,"byte_end":27472,"line_start":391,"line_end":391,"column_start":8,"column_end":15},"name":"inspect","qualname":"::future::future::FutureExt::inspect","value":"pub fn inspect<F>(Self, F) -> Inspect<Self, F> where F: FnOnce(&Self::Output)\n-> (), Self: Sized","parent":{"krate":0,"index":448},"children":[],"decl_id":null,"docs":" Do something with the output of a future before passing it on.","sig":null,"attributes":[{"value":"/ Do something with the output of a future before passing it on.","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\future\\future\\mod.rs","byte_start":26771,"byte_end":26837,"line_start":373,"line_end":373,"column_start":5,"column_end":71}},{"value":"/","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\future\\future\\mod.rs","byte_start":26842,"byte_end":26845,"line_start":374,"line_end":374,"column_start":5,"column_end":8}},{"value":"/ When using futures, you'll often chain several of them together.  While","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\future\\future\\mod.rs","byte_start":26850,"byte_end":26925,"line_start":375,"line_end":375,"column_start":5,"column_end":80}},{"value":"/ working on such code, you might want to check out what's happening at","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\future\\future\\mod.rs","byte_start":26930,"byte_end":27003,"line_start":376,"line_end":376,"column_start":5,"column_end":78}},{"value":"/ various parts in the pipeline, without consuming the intermediate","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\future\\future\\mod.rs","byte_start":27008,"byte_end":27077,"line_start":377,"line_end":377,"column_start":5,"column_end":74}},{"value":"/ value. To do that, insert a call to `inspect`.","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\future\\future\\mod.rs","byte_start":27082,"byte_end":27132,"line_start":378,"line_end":378,"column_start":5,"column_end":55}},{"value":"/","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\future\\future\\mod.rs","byte_start":27137,"byte_end":27140,"line_start":379,"line_end":379,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\future\\future\\mod.rs","byte_start":27145,"byte_end":27159,"line_start":380,"line_end":380,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\future\\future\\mod.rs","byte_start":27164,"byte_end":27167,"line_start":381,"line_end":381,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\future\\future\\mod.rs","byte_start":27172,"byte_end":27179,"line_start":382,"line_end":382,"column_start":5,"column_end":12}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\future\\future\\mod.rs","byte_start":27184,"byte_end":27225,"line_start":383,"line_end":383,"column_start":5,"column_end":46}},{"value":"/ use futures::future::FutureExt;","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\future\\future\\mod.rs","byte_start":27230,"byte_end":27265,"line_start":384,"line_end":384,"column_start":5,"column_end":40}},{"value":"/","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\future\\future\\mod.rs","byte_start":27270,"byte_end":27273,"line_start":385,"line_end":385,"column_start":5,"column_end":8}},{"value":"/ let future = async { 1 };","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\future\\future\\mod.rs","byte_start":27278,"byte_end":27307,"line_start":386,"line_end":386,"column_start":5,"column_end":34}},{"value":"/ let new_future = future.inspect(|&x| println!(\"about to resolve: {}\", x));","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\future\\future\\mod.rs","byte_start":27312,"byte_end":27390,"line_start":387,"line_end":387,"column_start":5,"column_end":83}},{"value":"/ assert_eq!(new_future.await, 1);","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\future\\future\\mod.rs","byte_start":27395,"byte_end":27431,"line_start":388,"line_end":388,"column_start":5,"column_end":41}},{"value":"/ # });","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\future\\future\\mod.rs","byte_start":27436,"byte_end":27445,"line_start":389,"line_end":389,"column_start":5,"column_end":14}},{"value":"/ ```","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\future\\future\\mod.rs","byte_start":27450,"byte_end":27457,"line_start":390,"line_end":390,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":467},"span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\future\\future\\mod.rs","byte_start":29010,"byte_end":29022,"line_start":431,"line_end":431,"column_start":8,"column_end":20},"name":"catch_unwind","qualname":"::future::future::FutureExt::catch_unwind","value":"pub fn catch_unwind(Self) -> CatchUnwind<Self> where Self: Sized +\n::std::panic::UnwindSafe","parent":{"krate":0,"index":448},"children":[],"decl_id":null,"docs":" Catches unwinding panics while polling the future.","sig":null,"attributes":[{"value":"/ Catches unwinding panics while polling the future.","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\future\\future\\mod.rs","byte_start":27654,"byte_end":27708,"line_start":399,"line_end":399,"column_start":5,"column_end":59}},{"value":"/","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\future\\future\\mod.rs","byte_start":27713,"byte_end":27716,"line_start":400,"line_end":400,"column_start":5,"column_end":8}},{"value":"/ In general, panics within a future can propagate all the way out to the","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\future\\future\\mod.rs","byte_start":27721,"byte_end":27796,"line_start":401,"line_end":401,"column_start":5,"column_end":80}},{"value":"/ task level. This combinator makes it possible to halt unwinding within","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\future\\future\\mod.rs","byte_start":27801,"byte_end":27875,"line_start":402,"line_end":402,"column_start":5,"column_end":79}},{"value":"/ the future itself. It's most commonly used within task executors. It's","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\future\\future\\mod.rs","byte_start":27880,"byte_end":27954,"line_start":403,"line_end":403,"column_start":5,"column_end":79}},{"value":"/ not recommended to use this for error handling.","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\future\\future\\mod.rs","byte_start":27959,"byte_end":28010,"line_start":404,"line_end":404,"column_start":5,"column_end":56}},{"value":"/","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\future\\future\\mod.rs","byte_start":28015,"byte_end":28018,"line_start":405,"line_end":405,"column_start":5,"column_end":8}},{"value":"/ Note that this method requires the `UnwindSafe` bound from the standard","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\future\\future\\mod.rs","byte_start":28023,"byte_end":28098,"line_start":406,"line_end":406,"column_start":5,"column_end":80}},{"value":"/ library. This isn't always applied automatically, and the standard","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\future\\future\\mod.rs","byte_start":28103,"byte_end":28173,"line_start":407,"line_end":407,"column_start":5,"column_end":75}},{"value":"/ library provides an `AssertUnwindSafe` wrapper type to apply it","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\future\\future\\mod.rs","byte_start":28178,"byte_end":28245,"line_start":408,"line_end":408,"column_start":5,"column_end":72}},{"value":"/ after-the fact. To assist using this method, the `Future` trait is also","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\future\\future\\mod.rs","byte_start":28250,"byte_end":28325,"line_start":409,"line_end":409,"column_start":5,"column_end":80}},{"value":"/ implemented for `AssertUnwindSafe<F>` where `F` implements `Future`.","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\future\\future\\mod.rs","byte_start":28330,"byte_end":28402,"line_start":410,"line_end":410,"column_start":5,"column_end":77}},{"value":"/","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\future\\future\\mod.rs","byte_start":28407,"byte_end":28410,"line_start":411,"line_end":411,"column_start":5,"column_end":8}},{"value":"/ This method is only available when the `std` feature of this","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\future\\future\\mod.rs","byte_start":28415,"byte_end":28479,"line_start":412,"line_end":412,"column_start":5,"column_end":69}},{"value":"/ library is activated, and it is activated by default.","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\future\\future\\mod.rs","byte_start":28484,"byte_end":28541,"line_start":413,"line_end":413,"column_start":5,"column_end":62}},{"value":"/","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\future\\future\\mod.rs","byte_start":28546,"byte_end":28549,"line_start":414,"line_end":414,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\future\\future\\mod.rs","byte_start":28554,"byte_end":28568,"line_start":415,"line_end":415,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\future\\future\\mod.rs","byte_start":28573,"byte_end":28576,"line_start":416,"line_end":416,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\future\\future\\mod.rs","byte_start":28581,"byte_end":28588,"line_start":417,"line_end":417,"column_start":5,"column_end":12}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\future\\future\\mod.rs","byte_start":28593,"byte_end":28634,"line_start":418,"line_end":418,"column_start":5,"column_end":46}},{"value":"/ use futures::future::{self, FutureExt, Ready};","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\future\\future\\mod.rs","byte_start":28639,"byte_end":28689,"line_start":419,"line_end":419,"column_start":5,"column_end":55}},{"value":"/","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\future\\future\\mod.rs","byte_start":28694,"byte_end":28697,"line_start":420,"line_end":420,"column_start":5,"column_end":8}},{"value":"/ let future = future::ready(2);","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\future\\future\\mod.rs","byte_start":28702,"byte_end":28736,"line_start":421,"line_end":421,"column_start":5,"column_end":39}},{"value":"/ assert!(future.catch_unwind().await.is_ok());","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\future\\future\\mod.rs","byte_start":28741,"byte_end":28790,"line_start":422,"line_end":422,"column_start":5,"column_end":54}},{"value":"/","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\future\\future\\mod.rs","byte_start":28795,"byte_end":28798,"line_start":423,"line_end":423,"column_start":5,"column_end":8}},{"value":"/ let future = future::lazy(|_| -> Ready<i32> {","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\future\\future\\mod.rs","byte_start":28803,"byte_end":28852,"line_start":424,"line_end":424,"column_start":5,"column_end":54}},{"value":"/     unimplemented!()","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\future\\future\\mod.rs","byte_start":28857,"byte_end":28881,"line_start":425,"line_end":425,"column_start":5,"column_end":29}},{"value":"/ });","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\future\\future\\mod.rs","byte_start":28886,"byte_end":28893,"line_start":426,"line_end":426,"column_start":5,"column_end":12}},{"value":"/ assert!(future.catch_unwind().await.is_err());","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\future\\future\\mod.rs","byte_start":28898,"byte_end":28948,"line_start":427,"line_end":427,"column_start":5,"column_end":55}},{"value":"/ # });","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\future\\future\\mod.rs","byte_start":28953,"byte_end":28962,"line_start":428,"line_end":428,"column_start":5,"column_end":14}},{"value":"/ ```","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\future\\future\\mod.rs","byte_start":28967,"byte_end":28974,"line_start":429,"line_end":429,"column_start":5,"column_end":12}},{"value":"cfg(feature = \"std\")","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\future\\future\\mod.rs","byte_start":28979,"byte_end":29002,"line_start":430,"line_end":430,"column_start":5,"column_end":28}}]},{"kind":"Method","id":{"krate":0,"index":468},"span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\future\\future\\mod.rs","byte_start":30774,"byte_end":30780,"line_start":486,"line_end":486,"column_start":8,"column_end":14},"name":"shared","qualname":"::future::future::FutureExt::shared","value":"pub fn shared(Self) -> Shared<Self> where Self: Sized, Self::Output: Clone","parent":{"krate":0,"index":448},"children":[],"decl_id":null,"docs":" Create a cloneable handle to this future where all handles will resolve\n to the same result.","sig":null,"attributes":[{"value":"/ Create a cloneable handle to this future where all handles will resolve","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\future\\future\\mod.rs","byte_start":29252,"byte_end":29327,"line_start":440,"line_end":440,"column_start":5,"column_end":80}},{"value":"/ to the same result.","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\future\\future\\mod.rs","byte_start":29332,"byte_end":29355,"line_start":441,"line_end":441,"column_start":5,"column_end":28}},{"value":"/","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\future\\future\\mod.rs","byte_start":29360,"byte_end":29363,"line_start":442,"line_end":442,"column_start":5,"column_end":8}},{"value":"/ The `shared` combinator method provides a method to convert any future","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\future\\future\\mod.rs","byte_start":29368,"byte_end":29442,"line_start":443,"line_end":443,"column_start":5,"column_end":79}},{"value":"/ into a cloneable future. It enables a future to be polled by multiple","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\future\\future\\mod.rs","byte_start":29447,"byte_end":29520,"line_start":444,"line_end":444,"column_start":5,"column_end":78}},{"value":"/ threads.","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\future\\future\\mod.rs","byte_start":29525,"byte_end":29537,"line_start":445,"line_end":445,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\future\\future\\mod.rs","byte_start":29542,"byte_end":29545,"line_start":446,"line_end":446,"column_start":5,"column_end":8}},{"value":"/ This method is only available when the `std` feature of this","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\future\\future\\mod.rs","byte_start":29550,"byte_end":29614,"line_start":447,"line_end":447,"column_start":5,"column_end":69}},{"value":"/ library is activated, and it is activated by default.","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\future\\future\\mod.rs","byte_start":29619,"byte_end":29676,"line_start":448,"line_end":448,"column_start":5,"column_end":62}},{"value":"/","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\future\\future\\mod.rs","byte_start":29681,"byte_end":29684,"line_start":449,"line_end":449,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\future\\future\\mod.rs","byte_start":29689,"byte_end":29703,"line_start":450,"line_end":450,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\future\\future\\mod.rs","byte_start":29708,"byte_end":29711,"line_start":451,"line_end":451,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\future\\future\\mod.rs","byte_start":29716,"byte_end":29723,"line_start":452,"line_end":452,"column_start":5,"column_end":12}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\future\\future\\mod.rs","byte_start":29728,"byte_end":29769,"line_start":453,"line_end":453,"column_start":5,"column_end":46}},{"value":"/ use futures::future::FutureExt;","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\future\\future\\mod.rs","byte_start":29774,"byte_end":29809,"line_start":454,"line_end":454,"column_start":5,"column_end":40}},{"value":"/","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\future\\future\\mod.rs","byte_start":29814,"byte_end":29817,"line_start":455,"line_end":455,"column_start":5,"column_end":8}},{"value":"/ let future = async { 6 };","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\future\\future\\mod.rs","byte_start":29822,"byte_end":29851,"line_start":456,"line_end":456,"column_start":5,"column_end":34}},{"value":"/ let shared1 = future.shared();","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\future\\future\\mod.rs","byte_start":29856,"byte_end":29890,"line_start":457,"line_end":457,"column_start":5,"column_end":39}},{"value":"/ let shared2 = shared1.clone();","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\future\\future\\mod.rs","byte_start":29895,"byte_end":29929,"line_start":458,"line_end":458,"column_start":5,"column_end":39}},{"value":"/","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\future\\future\\mod.rs","byte_start":29934,"byte_end":29937,"line_start":459,"line_end":459,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(6, shared1.await);","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\future\\future\\mod.rs","byte_start":29942,"byte_end":29975,"line_start":460,"line_end":460,"column_start":5,"column_end":38}},{"value":"/ assert_eq!(6, shared2.await);","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\future\\future\\mod.rs","byte_start":29980,"byte_end":30013,"line_start":461,"line_end":461,"column_start":5,"column_end":38}},{"value":"/ # });","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\future\\future\\mod.rs","byte_start":30018,"byte_end":30027,"line_start":462,"line_end":462,"column_start":5,"column_end":14}},{"value":"/ ```","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\future\\future\\mod.rs","byte_start":30032,"byte_end":30039,"line_start":463,"line_end":463,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\future\\future\\mod.rs","byte_start":30044,"byte_end":30047,"line_start":464,"line_end":464,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\future\\future\\mod.rs","byte_start":30052,"byte_end":30059,"line_start":465,"line_end":465,"column_start":5,"column_end":12}},{"value":"/ // Note, unlike most examples this is written in the context of a","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\future\\future\\mod.rs","byte_start":30064,"byte_end":30133,"line_start":466,"line_end":466,"column_start":5,"column_end":74}},{"value":"/ // synchronous function to better illustrate the cross-thread aspect of","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\future\\future\\mod.rs","byte_start":30138,"byte_end":30213,"line_start":467,"line_end":467,"column_start":5,"column_end":80}},{"value":"/ // the `shared` combinator.","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\future\\future\\mod.rs","byte_start":30218,"byte_end":30249,"line_start":468,"line_end":468,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\future\\future\\mod.rs","byte_start":30254,"byte_end":30257,"line_start":469,"line_end":469,"column_start":5,"column_end":8}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\future\\future\\mod.rs","byte_start":30262,"byte_end":30303,"line_start":470,"line_end":470,"column_start":5,"column_end":46}},{"value":"/ use futures::future::FutureExt;","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\future\\future\\mod.rs","byte_start":30308,"byte_end":30343,"line_start":471,"line_end":471,"column_start":5,"column_end":40}},{"value":"/ use futures::executor::block_on;","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\future\\future\\mod.rs","byte_start":30348,"byte_end":30384,"line_start":472,"line_end":472,"column_start":5,"column_end":41}},{"value":"/ use std::thread;","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\future\\future\\mod.rs","byte_start":30389,"byte_end":30409,"line_start":473,"line_end":473,"column_start":5,"column_end":25}},{"value":"/","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\future\\future\\mod.rs","byte_start":30414,"byte_end":30417,"line_start":474,"line_end":474,"column_start":5,"column_end":8}},{"value":"/ let future = async { 6 };","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\future\\future\\mod.rs","byte_start":30422,"byte_end":30451,"line_start":475,"line_end":475,"column_start":5,"column_end":34}},{"value":"/ let shared1 = future.shared();","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\future\\future\\mod.rs","byte_start":30456,"byte_end":30490,"line_start":476,"line_end":476,"column_start":5,"column_end":39}},{"value":"/ let shared2 = shared1.clone();","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\future\\future\\mod.rs","byte_start":30495,"byte_end":30529,"line_start":477,"line_end":477,"column_start":5,"column_end":39}},{"value":"/ let join_handle = thread::spawn(move || {","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\future\\future\\mod.rs","byte_start":30534,"byte_end":30579,"line_start":478,"line_end":478,"column_start":5,"column_end":50}},{"value":"/     assert_eq!(6, block_on(shared2));","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\future\\future\\mod.rs","byte_start":30584,"byte_end":30625,"line_start":479,"line_end":479,"column_start":5,"column_end":46}},{"value":"/ });","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\future\\future\\mod.rs","byte_start":30630,"byte_end":30637,"line_start":480,"line_end":480,"column_start":5,"column_end":12}},{"value":"/ assert_eq!(6, shared1.await);","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\future\\future\\mod.rs","byte_start":30642,"byte_end":30675,"line_start":481,"line_end":481,"column_start":5,"column_end":38}},{"value":"/ join_handle.join().unwrap();","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\future\\future\\mod.rs","byte_start":30680,"byte_end":30712,"line_start":482,"line_end":482,"column_start":5,"column_end":37}},{"value":"/ # });","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\future\\future\\mod.rs","byte_start":30717,"byte_end":30726,"line_start":483,"line_end":483,"column_start":5,"column_end":14}},{"value":"/ ```","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\future\\future\\mod.rs","byte_start":30731,"byte_end":30738,"line_start":484,"line_end":484,"column_start":5,"column_end":12}},{"value":"cfg(feature = \"std\")","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\future\\future\\mod.rs","byte_start":30743,"byte_end":30766,"line_start":485,"line_end":485,"column_start":5,"column_end":28}}]},{"kind":"Method","id":{"krate":0,"index":469},"span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\future\\future\\mod.rs","byte_start":31942,"byte_end":31947,"line_start":518,"line_end":518,"column_start":8,"column_end":13},"name":"boxed","qualname":"::future::future::FutureExt::boxed","value":"pub fn boxed<'a>(Self) -> BoxFuture where Self: Sized + Send + 'a","parent":{"krate":0,"index":448},"children":[],"decl_id":null,"docs":" Wrap the future in a Box, pinning it.","sig":null,"attributes":[{"value":"/ Wrap the future in a Box, pinning it.","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\future\\future\\mod.rs","byte_start":31713,"byte_end":31754,"line_start":513,"line_end":513,"column_start":5,"column_end":46}},{"value":"/","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\future\\future\\mod.rs","byte_start":31759,"byte_end":31762,"line_start":514,"line_end":514,"column_start":5,"column_end":8}},{"value":"/ This method is only available when the `std` or `alloc` feature of this","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\future\\future\\mod.rs","byte_start":31767,"byte_end":31842,"line_start":515,"line_end":515,"column_start":5,"column_end":80}},{"value":"/ library is activated, and it is activated by default.","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\future\\future\\mod.rs","byte_start":31847,"byte_end":31904,"line_start":516,"line_end":516,"column_start":5,"column_end":62}},{"value":"cfg(feature = \"alloc\")","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\future\\future\\mod.rs","byte_start":31909,"byte_end":31934,"line_start":517,"line_end":517,"column_start":5,"column_end":30}}]},{"kind":"Method","id":{"krate":0,"index":471},"span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\future\\future\\mod.rs","byte_start":32407,"byte_end":32418,"line_start":532,"line_end":532,"column_start":8,"column_end":19},"name":"boxed_local","qualname":"::future::future::FutureExt::boxed_local","value":"pub fn boxed_local<'a>(Self) -> LocalBoxFuture where Self: Sized + 'a","parent":{"krate":0,"index":448},"children":[],"decl_id":null,"docs":" Wrap the future in a Box, pinning it.","sig":null,"attributes":[{"value":"/ Wrap the future in a Box, pinning it.","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\future\\future\\mod.rs","byte_start":32106,"byte_end":32147,"line_start":525,"line_end":525,"column_start":5,"column_end":46}},{"value":"/","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\future\\future\\mod.rs","byte_start":32152,"byte_end":32155,"line_start":526,"line_end":526,"column_start":5,"column_end":8}},{"value":"/ Similar to `boxed`, but without the `Send` requirement.","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\future\\future\\mod.rs","byte_start":32160,"byte_end":32219,"line_start":527,"line_end":527,"column_start":5,"column_end":64}},{"value":"/","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\future\\future\\mod.rs","byte_start":32224,"byte_end":32227,"line_start":528,"line_end":528,"column_start":5,"column_end":8}},{"value":"/ This method is only available when the `std` or `alloc` feature of this","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\future\\future\\mod.rs","byte_start":32232,"byte_end":32307,"line_start":529,"line_end":529,"column_start":5,"column_end":80}},{"value":"/ library is activated, and it is activated by default.","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\future\\future\\mod.rs","byte_start":32312,"byte_end":32369,"line_start":530,"line_end":530,"column_start":5,"column_end":62}},{"value":"cfg(feature = \"alloc\")","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\future\\future\\mod.rs","byte_start":32374,"byte_end":32399,"line_start":531,"line_end":531,"column_start":5,"column_end":30}}]},{"kind":"Method","id":{"krate":0,"index":473},"span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\future\\future\\mod.rs","byte_start":32708,"byte_end":32718,"line_start":541,"line_end":541,"column_start":8,"column_end":18},"name":"unit_error","qualname":"::future::future::FutureExt::unit_error","value":"pub fn unit_error(Self) -> UnitError<Self> where Self: Sized","parent":{"krate":0,"index":448},"children":[],"decl_id":null,"docs":" Turns a [`Future<Output = T>`](Future) into a\n [`TryFuture<Ok = T, Error = ()`>](futures_core::future::TryFuture).\n","sig":null,"attributes":[{"value":"/ Turns a [`Future<Output = T>`](Future) into a","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\future\\future\\mod.rs","byte_start":32575,"byte_end":32624,"line_start":539,"line_end":539,"column_start":5,"column_end":54}},{"value":"/ [`TryFuture<Ok = T, Error = ()`>](futures_core::future::TryFuture).","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\future\\future\\mod.rs","byte_start":32629,"byte_end":32700,"line_start":540,"line_end":540,"column_start":5,"column_end":76}}]},{"kind":"Method","id":{"krate":0,"index":474},"span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\future\\future\\mod.rs","byte_start":33003,"byte_end":33014,"line_start":550,"line_end":550,"column_start":8,"column_end":19},"name":"never_error","qualname":"::future::future::FutureExt::never_error","value":"pub fn never_error(Self) -> NeverError<Self> where Self: Sized","parent":{"krate":0,"index":448},"children":[],"decl_id":null,"docs":" Turns a [`Future<Output = T>`](Future) into a\n [`TryFuture<Ok = T, Error = Never`>](futures_core::future::TryFuture).\n","sig":null,"attributes":[{"value":"/ Turns a [`Future<Output = T>`](Future) into a","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\future\\future\\mod.rs","byte_start":32867,"byte_end":32916,"line_start":548,"line_end":548,"column_start":5,"column_end":54}},{"value":"/ [`TryFuture<Ok = T, Error = Never`>](futures_core::future::TryFuture).","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\future\\future\\mod.rs","byte_start":32921,"byte_end":32995,"line_start":549,"line_end":549,"column_start":5,"column_end":79}}]},{"kind":"Method","id":{"krate":0,"index":475},"span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\future\\future\\mod.rs","byte_start":33245,"byte_end":33255,"line_start":558,"line_end":558,"column_start":8,"column_end":18},"name":"poll_unpin","qualname":"::future::future::FutureExt::poll_unpin","value":"pub fn poll_unpin(&mut Self, &mut Context) -> Poll<Self::Output> where\nSelf: Unpin","parent":{"krate":0,"index":448},"children":[],"decl_id":null,"docs":" A convenience for calling `Future::poll` on `Unpin` future types.\n","sig":null,"attributes":[{"value":"/ A convenience for calling `Future::poll` on `Unpin` future types.","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\future\\future\\mod.rs","byte_start":33168,"byte_end":33237,"line_start":557,"line_end":557,"column_start":5,"column_end":74}}]},{"kind":"Method","id":{"krate":0,"index":476},"span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\future\\future\\mod.rs","byte_start":34651,"byte_end":34663,"line_start":596,"line_end":596,"column_start":8,"column_end":20},"name":"now_or_never","qualname":"::future::future::FutureExt::now_or_never","value":"pub fn now_or_never(Self) -> Option<Self::Output> where Self: Sized","parent":{"krate":0,"index":448},"children":[],"decl_id":null,"docs":" Evaluates and consumes the future, returning the resulting output if\n the future is ready after the first call to `Future::poll`.","sig":null,"attributes":[{"value":"/ Evaluates and consumes the future, returning the resulting output if","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\future\\future\\mod.rs","byte_start":33391,"byte_end":33463,"line_start":565,"line_end":565,"column_start":5,"column_end":77}},{"value":"/ the future is ready after the first call to `Future::poll`.","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\future\\future\\mod.rs","byte_start":33468,"byte_end":33531,"line_start":566,"line_end":566,"column_start":5,"column_end":68}},{"value":"/","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\future\\future\\mod.rs","byte_start":33536,"byte_end":33539,"line_start":567,"line_end":567,"column_start":5,"column_end":8}},{"value":"/ If `poll` instead returns `Poll::Pending`, `None` is returned.","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\future\\future\\mod.rs","byte_start":33544,"byte_end":33610,"line_start":568,"line_end":568,"column_start":5,"column_end":71}},{"value":"/","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\future\\future\\mod.rs","byte_start":33615,"byte_end":33618,"line_start":569,"line_end":569,"column_start":5,"column_end":8}},{"value":"/ This method is useful in cases where immediacy is more important than","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\future\\future\\mod.rs","byte_start":33623,"byte_end":33696,"line_start":570,"line_end":570,"column_start":5,"column_end":78}},{"value":"/ waiting for a result. It is also convenient for quickly obtaining","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\future\\future\\mod.rs","byte_start":33701,"byte_end":33770,"line_start":571,"line_end":571,"column_start":5,"column_end":74}},{"value":"/ the value of a future that is known to always resolve immediately.","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\future\\future\\mod.rs","byte_start":33775,"byte_end":33845,"line_start":572,"line_end":572,"column_start":5,"column_end":75}},{"value":"/","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\future\\future\\mod.rs","byte_start":33850,"byte_end":33853,"line_start":573,"line_end":573,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\future\\future\\mod.rs","byte_start":33858,"byte_end":33872,"line_start":574,"line_end":574,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\future\\future\\mod.rs","byte_start":33877,"byte_end":33880,"line_start":575,"line_end":575,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\future\\future\\mod.rs","byte_start":33885,"byte_end":33892,"line_start":576,"line_end":576,"column_start":5,"column_end":12}},{"value":"/ # use futures::prelude::*;","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\future\\future\\mod.rs","byte_start":33897,"byte_end":33927,"line_start":577,"line_end":577,"column_start":5,"column_end":35}},{"value":"/ use futures::{future::ready, future::pending};","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\future\\future\\mod.rs","byte_start":33932,"byte_end":33982,"line_start":578,"line_end":578,"column_start":5,"column_end":55}},{"value":"/ let future_ready = ready(\"foobar\");","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\future\\future\\mod.rs","byte_start":33987,"byte_end":34026,"line_start":579,"line_end":579,"column_start":5,"column_end":44}},{"value":"/ let future_pending = pending::<&'static str>();","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\future\\future\\mod.rs","byte_start":34031,"byte_end":34082,"line_start":580,"line_end":580,"column_start":5,"column_end":56}},{"value":"/","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\future\\future\\mod.rs","byte_start":34087,"byte_end":34090,"line_start":581,"line_end":581,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(future_ready.now_or_never(), Some(\"foobar\"));","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\future\\future\\mod.rs","byte_start":34095,"byte_end":34155,"line_start":582,"line_end":582,"column_start":5,"column_end":65}},{"value":"/ assert_eq!(future_pending.now_or_never(), None);","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\future\\future\\mod.rs","byte_start":34160,"byte_end":34212,"line_start":583,"line_end":583,"column_start":5,"column_end":57}},{"value":"/ ```","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\future\\future\\mod.rs","byte_start":34217,"byte_end":34224,"line_start":584,"line_end":584,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\future\\future\\mod.rs","byte_start":34229,"byte_end":34232,"line_start":585,"line_end":585,"column_start":5,"column_end":8}},{"value":"/ In cases where it is absolutely known that a future should always","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\future\\future\\mod.rs","byte_start":34237,"byte_end":34306,"line_start":586,"line_end":586,"column_start":5,"column_end":74}},{"value":"/ resolve immediately and never return `Poll::Pending`, this method can","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\future\\future\\mod.rs","byte_start":34311,"byte_end":34384,"line_start":587,"line_end":587,"column_start":5,"column_end":78}},{"value":"/ be combined with `expect()`:","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\future\\future\\mod.rs","byte_start":34389,"byte_end":34421,"line_start":588,"line_end":588,"column_start":5,"column_end":37}},{"value":"/","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\future\\future\\mod.rs","byte_start":34426,"byte_end":34429,"line_start":589,"line_end":589,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\future\\future\\mod.rs","byte_start":34434,"byte_end":34441,"line_start":590,"line_end":590,"column_start":5,"column_end":12}},{"value":"/ # use futures::{prelude::*, future::ready};","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\future\\future\\mod.rs","byte_start":34446,"byte_end":34493,"line_start":591,"line_end":591,"column_start":5,"column_end":52}},{"value":"/ let future_ready = ready(\"foobar\");","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\future\\future\\mod.rs","byte_start":34498,"byte_end":34537,"line_start":592,"line_end":592,"column_start":5,"column_end":44}},{"value":"/","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\future\\future\\mod.rs","byte_start":34542,"byte_end":34545,"line_start":593,"line_end":593,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(future_ready.now_or_never().expect(\"Future not ready\"), \"foobar\");","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\future\\future\\mod.rs","byte_start":34550,"byte_end":34631,"line_start":594,"line_end":594,"column_start":5,"column_end":86}},{"value":"/ ```","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\future\\future\\mod.rs","byte_start":34636,"byte_end":34643,"line_start":595,"line_end":595,"column_start":5,"column_end":12}}]},{"kind":"Struct","id":{"krate":0,"index":10690},"span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\future\\try_future\\into_future.rs","byte_start":78140,"byte_end":78150,"line_start":10,"line_end":10,"column_start":16,"column_end":26},"name":"IntoFuture","qualname":"::future::try_future::into_future::IntoFuture","value":"IntoFuture {  }","parent":null,"children":[{"krate":0,"index":10692}],"decl_id":null,"docs":" Future for the [`into_future`](super::TryFutureExt::into_future) method.\n","sig":null,"attributes":[{"value":"must_use = \"futures do nothing unless you `.await` or poll them\"","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pin-project-lite-0.2.9\\src\\lib.rs","byte_start":14239710,"byte_end":14239719,"line_start":633,"line_end":633,"column_start":11,"column_end":20}}]},{"kind":"StructVariant","id":{"krate":0,"index":10729},"span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\future\\try_future\\try_flatten.rs","byte_start":79124,"byte_end":79129,"line_start":14,"line_end":14,"column_start":9,"column_end":14},"name":"First","qualname":"::future::try_future::try_flatten::TryFlatten::First","value":"TryFlatten::First { f }","parent":{"krate":0,"index":10726},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"StructVariant","id":{"krate":0,"index":10731},"span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\future\\try_future\\try_flatten.rs","byte_start":79158,"byte_end":79164,"line_start":15,"line_end":15,"column_start":9,"column_end":15},"name":"Second","qualname":"::future::try_future::try_flatten::TryFlatten::Second","value":"TryFlatten::Second { f }","parent":{"krate":0,"index":10726},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":10733},"span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\future\\try_future\\try_flatten.rs","byte_start":79193,"byte_end":79198,"line_start":16,"line_end":16,"column_start":9,"column_end":14},"name":"Empty","qualname":"::future::try_future::try_flatten::TryFlatten::Empty","value":"TryFlatten::Empty","parent":{"krate":0,"index":10726},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Enum","id":{"krate":0,"index":10726},"span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\future\\try_future\\try_flatten.rs","byte_start":79091,"byte_end":79101,"line_start":13,"line_end":13,"column_start":14,"column_end":24},"name":"TryFlatten","qualname":"::future::try_future::try_flatten::TryFlatten","value":"pub enum TryFlatten<Fut1, Fut2> {\n    First {\n            f: Fut1,\n        },\n    Second {\n            f: Fut2,\n        },\n    Empty,\n}","parent":null,"children":[{"krate":0,"index":10729},{"krate":0,"index":10731},{"krate":0,"index":10733}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"StructVariant","id":{"krate":0,"index":10776},"span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\future\\try_future\\try_flatten_err.rs","byte_start":84067,"byte_end":84072,"line_start":11,"line_end":11,"column_start":9,"column_end":14},"name":"First","qualname":"::future::try_future::try_flatten_err::TryFlattenErr::First","value":"TryFlattenErr::First { f }","parent":{"krate":0,"index":10773},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"StructVariant","id":{"krate":0,"index":10778},"span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\future\\try_future\\try_flatten_err.rs","byte_start":84101,"byte_end":84107,"line_start":12,"line_end":12,"column_start":9,"column_end":15},"name":"Second","qualname":"::future::try_future::try_flatten_err::TryFlattenErr::Second","value":"TryFlattenErr::Second { f }","parent":{"krate":0,"index":10773},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":10780},"span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\future\\try_future\\try_flatten_err.rs","byte_start":84136,"byte_end":84141,"line_start":13,"line_end":13,"column_start":9,"column_end":14},"name":"Empty","qualname":"::future::try_future::try_flatten_err::TryFlattenErr::Empty","value":"TryFlattenErr::Empty","parent":{"krate":0,"index":10773},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Enum","id":{"krate":0,"index":10773},"span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\future\\try_future\\try_flatten_err.rs","byte_start":84031,"byte_end":84044,"line_start":10,"line_end":10,"column_start":14,"column_end":27},"name":"TryFlattenErr","qualname":"::future::try_future::try_flatten_err::TryFlattenErr","value":"pub enum TryFlattenErr<Fut1, Fut2> {\n    First {\n            f: Fut1,\n        },\n    Second {\n            f: Fut2,\n        },\n    Empty,\n}","parent":null,"children":[{"krate":0,"index":10776},{"krate":0,"index":10778},{"krate":0,"index":10780}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":10823},"span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\future\\try_future\\mod.rs","byte_start":56975,"byte_end":56985,"line_start":32,"line_end":32,"column_start":5,"column_end":15},"name":"TryFlatten","qualname":"::future::try_future::TryFlatten","value":"TryFlatten {  }","parent":null,"children":[{"krate":0,"index":10826}],"decl_id":null,"docs":" Future for the [`try_flatten`](TryFutureExt::try_flatten) method.\n","sig":null,"attributes":[{"value":"must_use =\n\"futures/streams/sinks do nothing unless you `.await` or poll them\"","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pin-project-lite-0.2.9\\src\\lib.rs","byte_start":14239710,"byte_end":14239719,"line_start":633,"line_end":633,"column_start":11,"column_end":20}}]},{"kind":"Struct","id":{"krate":0,"index":10884},"span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\future\\try_future\\mod.rs","byte_start":57233,"byte_end":57246,"line_start":39,"line_end":39,"column_start":5,"column_end":18},"name":"TryFlattenErr","qualname":"::future::try_future::TryFlattenErr","value":"TryFlattenErr {  }","parent":null,"children":[{"krate":0,"index":10887}],"decl_id":null,"docs":" Future for the [`try_flatten_err`](TryFutureExt::try_flatten_err) method.\n","sig":null,"attributes":[{"value":"must_use =\n\"futures/streams/sinks do nothing unless you `.await` or poll them\"","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pin-project-lite-0.2.9\\src\\lib.rs","byte_start":14239710,"byte_end":14239719,"line_start":633,"line_end":633,"column_start":11,"column_end":20}}]},{"kind":"Struct","id":{"krate":0,"index":10944},"span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\future\\try_future\\mod.rs","byte_start":57514,"byte_end":57530,"line_start":46,"line_end":46,"column_start":5,"column_end":21},"name":"TryFlattenStream","qualname":"::future::try_future::TryFlattenStream","value":"TryFlattenStream {  }","parent":null,"children":[{"krate":0,"index":10946}],"decl_id":null,"docs":" Future for the [`try_flatten_stream`](TryFutureExt::try_flatten_stream) method.\n","sig":null,"attributes":[{"value":"must_use =\n\"futures/streams/sinks do nothing unless you `.await` or poll them\"","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pin-project-lite-0.2.9\\src\\lib.rs","byte_start":14239710,"byte_end":14239719,"line_start":633,"line_end":633,"column_start":11,"column_end":20}}]},{"kind":"Struct","id":{"krate":0,"index":11002},"span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\future\\try_future\\mod.rs","byte_start":57873,"byte_end":57884,"line_start":56,"line_end":56,"column_start":5,"column_end":16},"name":"FlattenSink","qualname":"::future::try_future::FlattenSink","value":"FlattenSink {  }","parent":null,"children":[{"krate":0,"index":11005}],"decl_id":null,"docs":" Sink for the [`flatten_sink`](TryFutureExt::flatten_sink) method.\n","sig":null,"attributes":[{"value":"must_use =\n\"futures/streams/sinks do nothing unless you `.await` or poll them\"","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pin-project-lite-0.2.9\\src\\lib.rs","byte_start":14239710,"byte_end":14239719,"line_start":633,"line_end":633,"column_start":11,"column_end":20}}]},{"kind":"Struct","id":{"krate":0,"index":11074},"span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\future\\try_future\\mod.rs","byte_start":58118,"byte_end":58125,"line_start":63,"line_end":63,"column_start":5,"column_end":12},"name":"AndThen","qualname":"::future::try_future::AndThen","value":"AndThen {  }","parent":null,"children":[{"krate":0,"index":11078}],"decl_id":null,"docs":" Future for the [`and_then`](TryFutureExt::and_then) method.\n","sig":null,"attributes":[{"value":"must_use =\n\"futures/streams/sinks do nothing unless you `.await` or poll them\"","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pin-project-lite-0.2.9\\src\\lib.rs","byte_start":14239710,"byte_end":14239719,"line_start":633,"line_end":633,"column_start":11,"column_end":20}}]},{"kind":"Struct","id":{"krate":0,"index":11148},"span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\future\\try_future\\mod.rs","byte_start":58365,"byte_end":58371,"line_start":70,"line_end":70,"column_start":5,"column_end":11},"name":"OrElse","qualname":"::future::try_future::OrElse","value":"OrElse {  }","parent":null,"children":[{"krate":0,"index":11152}],"decl_id":null,"docs":" Future for the [`or_else`](TryFutureExt::or_else) method.\n","sig":null,"attributes":[{"value":"must_use =\n\"futures/streams/sinks do nothing unless you `.await` or poll them\"","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pin-project-lite-0.2.9\\src\\lib.rs","byte_start":14239710,"byte_end":14239719,"line_start":633,"line_end":633,"column_start":11,"column_end":20}}]},{"kind":"Struct","id":{"krate":0,"index":11221},"span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\future\\try_future\\mod.rs","byte_start":58621,"byte_end":58628,"line_start":77,"line_end":77,"column_start":5,"column_end":12},"name":"ErrInto","qualname":"::future::try_future::ErrInto","value":"ErrInto {  }","parent":null,"children":[{"krate":0,"index":11224}],"decl_id":null,"docs":" Future for the [`err_into`](TryFutureExt::err_into) method.\n","sig":null,"attributes":[{"value":"must_use =\n\"futures/streams/sinks do nothing unless you `.await` or poll them\"","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pin-project-lite-0.2.9\\src\\lib.rs","byte_start":14239710,"byte_end":14239719,"line_start":633,"line_end":633,"column_start":11,"column_end":20}}]},{"kind":"Struct","id":{"krate":0,"index":11282},"span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\future\\try_future\\mod.rs","byte_start":58836,"byte_end":58842,"line_start":84,"line_end":84,"column_start":5,"column_end":11},"name":"OkInto","qualname":"::future::try_future::OkInto","value":"OkInto {  }","parent":null,"children":[{"krate":0,"index":11285}],"decl_id":null,"docs":" Future for the [`ok_into`](TryFutureExt::ok_into) method.\n","sig":null,"attributes":[{"value":"must_use =\n\"futures/streams/sinks do nothing unless you `.await` or poll them\"","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pin-project-lite-0.2.9\\src\\lib.rs","byte_start":14239710,"byte_end":14239719,"line_start":633,"line_end":633,"column_start":11,"column_end":20}}]},{"kind":"Struct","id":{"krate":0,"index":11343},"span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\future\\try_future\\mod.rs","byte_start":59061,"byte_end":59070,"line_start":91,"line_end":91,"column_start":5,"column_end":14},"name":"InspectOk","qualname":"::future::try_future::InspectOk","value":"InspectOk {  }","parent":null,"children":[{"krate":0,"index":11346}],"decl_id":null,"docs":" Future for the [`inspect_ok`](super::TryFutureExt::inspect_ok) method.\n","sig":null,"attributes":[{"value":"must_use =\n\"futures/streams/sinks do nothing unless you `.await` or poll them\"","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pin-project-lite-0.2.9\\src\\lib.rs","byte_start":14239710,"byte_end":14239719,"line_start":633,"line_end":633,"column_start":11,"column_end":20}}]},{"kind":"Struct","id":{"krate":0,"index":11404},"span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\future\\try_future\\mod.rs","byte_start":59342,"byte_end":59352,"line_start":98,"line_end":98,"column_start":5,"column_end":15},"name":"InspectErr","qualname":"::future::try_future::InspectErr","value":"InspectErr {  }","parent":null,"children":[{"krate":0,"index":11407}],"decl_id":null,"docs":" Future for the [`inspect_err`](super::TryFutureExt::inspect_err) method.\n","sig":null,"attributes":[{"value":"must_use =\n\"futures/streams/sinks do nothing unless you `.await` or poll them\"","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pin-project-lite-0.2.9\\src\\lib.rs","byte_start":14239710,"byte_end":14239719,"line_start":633,"line_end":633,"column_start":11,"column_end":20}}]},{"kind":"Struct","id":{"krate":0,"index":11465},"span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\future\\try_future\\mod.rs","byte_start":59725,"byte_end":59730,"line_start":108,"line_end":108,"column_start":5,"column_end":10},"name":"MapOk","qualname":"::future::try_future::MapOk","value":"MapOk {  }","parent":null,"children":[{"krate":0,"index":11468}],"decl_id":null,"docs":" Future for the [`map_ok`](TryFutureExt::map_ok) method.\n","sig":null,"attributes":[{"value":"must_use =\n\"futures/streams/sinks do nothing unless you `.await` or poll them\"","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pin-project-lite-0.2.9\\src\\lib.rs","byte_start":14239710,"byte_end":14239719,"line_start":633,"line_end":633,"column_start":11,"column_end":20}}]},{"kind":"Struct","id":{"krate":0,"index":11526},"span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\future\\try_future\\mod.rs","byte_start":59971,"byte_end":59977,"line_start":115,"line_end":115,"column_start":5,"column_end":11},"name":"MapErr","qualname":"::future::try_future::MapErr","value":"MapErr {  }","parent":null,"children":[{"krate":0,"index":11529}],"decl_id":null,"docs":" Future for the [`map_err`](TryFutureExt::map_err) method.\n","sig":null,"attributes":[{"value":"must_use =\n\"futures/streams/sinks do nothing unless you `.await` or poll them\"","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pin-project-lite-0.2.9\\src\\lib.rs","byte_start":14239710,"byte_end":14239719,"line_start":633,"line_end":633,"column_start":11,"column_end":20}}]},{"kind":"Struct","id":{"krate":0,"index":11588},"span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\future\\try_future\\mod.rs","byte_start":60234,"byte_end":60245,"line_start":122,"line_end":122,"column_start":5,"column_end":16},"name":"MapOkOrElse","qualname":"::future::try_future::MapOkOrElse","value":"MapOkOrElse {  }","parent":null,"children":[{"krate":0,"index":11592}],"decl_id":null,"docs":" Future for the [`map_ok_or_else`](TryFutureExt::map_ok_or_else) method.\n","sig":null,"attributes":[{"value":"must_use =\n\"futures/streams/sinks do nothing unless you `.await` or poll them\"","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pin-project-lite-0.2.9\\src\\lib.rs","byte_start":14239710,"byte_end":14239719,"line_start":633,"line_end":633,"column_start":11,"column_end":20}}]},{"kind":"Struct","id":{"krate":0,"index":11661},"span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\future\\try_future\\mod.rs","byte_start":60529,"byte_end":60541,"line_start":129,"line_end":129,"column_start":5,"column_end":17},"name":"UnwrapOrElse","qualname":"::future::try_future::UnwrapOrElse","value":"UnwrapOrElse {  }","parent":null,"children":[{"krate":0,"index":11664}],"decl_id":null,"docs":" Future for the [`unwrap_or_else`](TryFutureExt::unwrap_or_else) method.\n","sig":null,"attributes":[{"value":"must_use =\n\"futures/streams/sinks do nothing unless you `.await` or poll them\"","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pin-project-lite-0.2.9\\src\\lib.rs","byte_start":14239710,"byte_end":14239719,"line_start":633,"line_end":633,"column_start":11,"column_end":20}}]},{"kind":"Trait","id":{"krate":0,"index":741},"span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\future\\try_future\\mod.rs","byte_start":60831,"byte_end":60843,"line_start":137,"line_end":137,"column_start":11,"column_end":23},"name":"TryFutureExt","qualname":"::future::try_future::TryFutureExt","value":"TryFutureExt: TryFuture","parent":null,"children":[{"krate":0,"index":742},{"krate":0,"index":744},{"krate":0,"index":747},{"krate":0,"index":751},{"krate":0,"index":754},{"krate":0,"index":756},{"krate":0,"index":758},{"krate":0,"index":761},{"krate":0,"index":764},{"krate":0,"index":766},{"krate":0,"index":768},{"krate":0,"index":769},{"krate":0,"index":770},{"krate":0,"index":772},{"krate":0,"index":773}],"decl_id":null,"docs":" Adapters specific to [`Result`]-returning futures\n","sig":null,"attributes":[{"value":"/ Adapters specific to [`Result`]-returning futures","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\future\\try_future\\mod.rs","byte_start":60767,"byte_end":60820,"line_start":136,"line_end":136,"column_start":1,"column_end":54}}]},{"kind":"Method","id":{"krate":0,"index":742},"span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\future\\try_future\\mod.rs","byte_start":61995,"byte_end":62007,"line_start":171,"line_end":171,"column_start":8,"column_end":20},"name":"flatten_sink","qualname":"::future::try_future::TryFutureExt::flatten_sink","value":"pub fn flatten_sink<Item>(Self) -> FlattenSink<Self, Self::Ok> where\nSelf::Ok: Sink<Item, Error = Self::Error>, Self: Sized","parent":{"krate":0,"index":741},"children":[],"decl_id":null,"docs":" Flattens the execution of this future when the successful result of this\n future is a [`Sink`].","sig":null,"attributes":[{"value":"/ Flattens the execution of this future when the successful result of this","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\future\\try_future\\mod.rs","byte_start":60861,"byte_end":60937,"line_start":138,"line_end":138,"column_start":5,"column_end":81}},{"value":"/ future is a [`Sink`].","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\future\\try_future\\mod.rs","byte_start":60942,"byte_end":60967,"line_start":139,"line_end":139,"column_start":5,"column_end":30}},{"value":"/","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\future\\try_future\\mod.rs","byte_start":60972,"byte_end":60975,"line_start":140,"line_end":140,"column_start":5,"column_end":8}},{"value":"/ This can be useful when sink initialization is deferred, and it is","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\future\\try_future\\mod.rs","byte_start":60980,"byte_end":61050,"line_start":141,"line_end":141,"column_start":5,"column_end":75}},{"value":"/ convenient to work with that sink as if the sink was available at the","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\future\\try_future\\mod.rs","byte_start":61055,"byte_end":61128,"line_start":142,"line_end":142,"column_start":5,"column_end":78}},{"value":"/ call site.","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\future\\try_future\\mod.rs","byte_start":61133,"byte_end":61147,"line_start":143,"line_end":143,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\future\\try_future\\mod.rs","byte_start":61152,"byte_end":61155,"line_start":144,"line_end":144,"column_start":5,"column_end":8}},{"value":"/ Note that this function consumes this future and returns a wrapped","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\future\\try_future\\mod.rs","byte_start":61160,"byte_end":61230,"line_start":145,"line_end":145,"column_start":5,"column_end":75}},{"value":"/ version of it.","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\future\\try_future\\mod.rs","byte_start":61235,"byte_end":61253,"line_start":146,"line_end":146,"column_start":5,"column_end":23}},{"value":"/","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\future\\try_future\\mod.rs","byte_start":61258,"byte_end":61261,"line_start":147,"line_end":147,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\future\\try_future\\mod.rs","byte_start":61266,"byte_end":61280,"line_start":148,"line_end":148,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\future\\try_future\\mod.rs","byte_start":61285,"byte_end":61288,"line_start":149,"line_end":149,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\future\\try_future\\mod.rs","byte_start":61293,"byte_end":61300,"line_start":150,"line_end":150,"column_start":5,"column_end":12}},{"value":"/ use futures::future::{Future, TryFutureExt};","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\future\\try_future\\mod.rs","byte_start":61305,"byte_end":61353,"line_start":151,"line_end":151,"column_start":5,"column_end":53}},{"value":"/ use futures::sink::Sink;","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\future\\try_future\\mod.rs","byte_start":61358,"byte_end":61386,"line_start":152,"line_end":152,"column_start":5,"column_end":33}},{"value":"/ # use futures::channel::mpsc::{self, SendError};","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\future\\try_future\\mod.rs","byte_start":61391,"byte_end":61443,"line_start":153,"line_end":153,"column_start":5,"column_end":57}},{"value":"/ # type T = i32;","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\future\\try_future\\mod.rs","byte_start":61448,"byte_end":61467,"line_start":154,"line_end":154,"column_start":5,"column_end":24}},{"value":"/ # type E = SendError;","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\future\\try_future\\mod.rs","byte_start":61472,"byte_end":61497,"line_start":155,"line_end":155,"column_start":5,"column_end":30}},{"value":"/","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\future\\try_future\\mod.rs","byte_start":61502,"byte_end":61505,"line_start":156,"line_end":156,"column_start":5,"column_end":8}},{"value":"/ fn make_sink_async() -> impl Future<Output = Result<","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\future\\try_future\\mod.rs","byte_start":61510,"byte_end":61566,"line_start":157,"line_end":157,"column_start":5,"column_end":61}},{"value":"/     impl Sink<T, Error = E>,","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\future\\try_future\\mod.rs","byte_start":61571,"byte_end":61603,"line_start":158,"line_end":158,"column_start":5,"column_end":37}},{"value":"/     E,","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\future\\try_future\\mod.rs","byte_start":61608,"byte_end":61618,"line_start":159,"line_end":159,"column_start":5,"column_end":15}},{"value":"/ >> { // ... }","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\future\\try_future\\mod.rs","byte_start":61623,"byte_end":61640,"line_start":160,"line_end":160,"column_start":5,"column_end":22}},{"value":"/ # let (tx, _rx) = mpsc::unbounded::<i32>();","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\future\\try_future\\mod.rs","byte_start":61645,"byte_end":61692,"line_start":161,"line_end":161,"column_start":5,"column_end":52}},{"value":"/ # futures::future::ready(Ok(tx))","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\future\\try_future\\mod.rs","byte_start":61697,"byte_end":61733,"line_start":162,"line_end":162,"column_start":5,"column_end":41}},{"value":"/ # }","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\future\\try_future\\mod.rs","byte_start":61738,"byte_end":61745,"line_start":163,"line_end":163,"column_start":5,"column_end":12}},{"value":"/ fn take_sink(sink: impl Sink<T, Error = E>) { /* ... */ }","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\future\\try_future\\mod.rs","byte_start":61750,"byte_end":61811,"line_start":164,"line_end":164,"column_start":5,"column_end":66}},{"value":"/","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\future\\try_future\\mod.rs","byte_start":61816,"byte_end":61819,"line_start":165,"line_end":165,"column_start":5,"column_end":8}},{"value":"/ let fut = make_sink_async();","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\future\\try_future\\mod.rs","byte_start":61824,"byte_end":61856,"line_start":166,"line_end":166,"column_start":5,"column_end":37}},{"value":"/ take_sink(fut.flatten_sink())","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\future\\try_future\\mod.rs","byte_start":61861,"byte_end":61894,"line_start":167,"line_end":167,"column_start":5,"column_end":38}},{"value":"/ ```","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\future\\try_future\\mod.rs","byte_start":61899,"byte_end":61906,"line_start":168,"line_end":168,"column_start":5,"column_end":12}},{"value":"cfg(feature = \"sink\")","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\future\\try_future\\mod.rs","byte_start":61911,"byte_end":61935,"line_start":169,"line_end":169,"column_start":5,"column_end":29}}]},{"kind":"Method","id":{"krate":0,"index":744},"span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\future\\try_future\\mod.rs","byte_start":63603,"byte_end":63609,"line_start":217,"line_end":217,"column_start":8,"column_end":14},"name":"map_ok","qualname":"::future::try_future::TryFutureExt::map_ok","value":"pub fn map_ok<T, F>(Self, F) -> MapOk<Self, F> where F: FnOnce(Self::Ok) -> T,\nSelf: Sized","parent":{"krate":0,"index":741},"children":[],"decl_id":null,"docs":" Maps this future's success value to a different value.","sig":null,"attributes":[{"value":"/ Maps this future's success value to a different value.","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\future\\try_future\\mod.rs","byte_start":62231,"byte_end":62289,"line_start":179,"line_end":179,"column_start":5,"column_end":63}},{"value":"/","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\future\\try_future\\mod.rs","byte_start":62294,"byte_end":62297,"line_start":180,"line_end":180,"column_start":5,"column_end":8}},{"value":"/ This method can be used to change the [`Ok`](TryFuture::Ok) type of the","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\future\\try_future\\mod.rs","byte_start":62302,"byte_end":62377,"line_start":181,"line_end":181,"column_start":5,"column_end":80}},{"value":"/ future into a different type. It is similar to the [`Result::map`]","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\future\\try_future\\mod.rs","byte_start":62382,"byte_end":62452,"line_start":182,"line_end":182,"column_start":5,"column_end":75}},{"value":"/ method. You can use this method to chain along a computation once the","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\future\\try_future\\mod.rs","byte_start":62457,"byte_end":62530,"line_start":183,"line_end":183,"column_start":5,"column_end":78}},{"value":"/ future has been resolved.","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\future\\try_future\\mod.rs","byte_start":62535,"byte_end":62564,"line_start":184,"line_end":184,"column_start":5,"column_end":34}},{"value":"/","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\future\\try_future\\mod.rs","byte_start":62569,"byte_end":62572,"line_start":185,"line_end":185,"column_start":5,"column_end":8}},{"value":"/ The provided closure `f` will only be called if this future is resolved","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\future\\try_future\\mod.rs","byte_start":62577,"byte_end":62652,"line_start":186,"line_end":186,"column_start":5,"column_end":80}},{"value":"/ to an [`Ok`]. If it resolves to an [`Err`], panics, or is dropped, then","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\future\\try_future\\mod.rs","byte_start":62657,"byte_end":62732,"line_start":187,"line_end":187,"column_start":5,"column_end":80}},{"value":"/ the provided closure will never be invoked.","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\future\\try_future\\mod.rs","byte_start":62737,"byte_end":62784,"line_start":188,"line_end":188,"column_start":5,"column_end":52}},{"value":"/","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\future\\try_future\\mod.rs","byte_start":62789,"byte_end":62792,"line_start":189,"line_end":189,"column_start":5,"column_end":8}},{"value":"/ Note that this method consumes the future it is called on and returns a","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\future\\try_future\\mod.rs","byte_start":62797,"byte_end":62872,"line_start":190,"line_end":190,"column_start":5,"column_end":80}},{"value":"/ wrapped version of it.","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\future\\try_future\\mod.rs","byte_start":62877,"byte_end":62903,"line_start":191,"line_end":191,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\future\\try_future\\mod.rs","byte_start":62908,"byte_end":62911,"line_start":192,"line_end":192,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\future\\try_future\\mod.rs","byte_start":62916,"byte_end":62930,"line_start":193,"line_end":193,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\future\\try_future\\mod.rs","byte_start":62935,"byte_end":62938,"line_start":194,"line_end":194,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\future\\try_future\\mod.rs","byte_start":62943,"byte_end":62950,"line_start":195,"line_end":195,"column_start":5,"column_end":12}},{"value":"/ use futures::future::TryFutureExt;","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\future\\try_future\\mod.rs","byte_start":62955,"byte_end":62993,"line_start":196,"line_end":196,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\future\\try_future\\mod.rs","byte_start":62998,"byte_end":63001,"line_start":197,"line_end":197,"column_start":5,"column_end":8}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\future\\try_future\\mod.rs","byte_start":63006,"byte_end":63047,"line_start":198,"line_end":198,"column_start":5,"column_end":46}},{"value":"/ let future = async { Ok::<i32, i32>(1) };","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\future\\try_future\\mod.rs","byte_start":63052,"byte_end":63097,"line_start":199,"line_end":199,"column_start":5,"column_end":50}},{"value":"/ let future = future.map_ok(|x| x + 3);","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\future\\try_future\\mod.rs","byte_start":63102,"byte_end":63144,"line_start":200,"line_end":200,"column_start":5,"column_end":47}},{"value":"/ assert_eq!(future.await, Ok(4));","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\future\\try_future\\mod.rs","byte_start":63149,"byte_end":63185,"line_start":201,"line_end":201,"column_start":5,"column_end":41}},{"value":"/ # });","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\future\\try_future\\mod.rs","byte_start":63190,"byte_end":63199,"line_start":202,"line_end":202,"column_start":5,"column_end":14}},{"value":"/ ```","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\future\\try_future\\mod.rs","byte_start":63204,"byte_end":63211,"line_start":203,"line_end":203,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\future\\try_future\\mod.rs","byte_start":63216,"byte_end":63219,"line_start":204,"line_end":204,"column_start":5,"column_end":8}},{"value":"/ Calling [`map_ok`](TryFutureExt::map_ok) on an errored future has no","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\future\\try_future\\mod.rs","byte_start":63224,"byte_end":63296,"line_start":205,"line_end":205,"column_start":5,"column_end":77}},{"value":"/ effect:","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\future\\try_future\\mod.rs","byte_start":63301,"byte_end":63312,"line_start":206,"line_end":206,"column_start":5,"column_end":16}},{"value":"/","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\future\\try_future\\mod.rs","byte_start":63317,"byte_end":63320,"line_start":207,"line_end":207,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\future\\try_future\\mod.rs","byte_start":63325,"byte_end":63332,"line_start":208,"line_end":208,"column_start":5,"column_end":12}},{"value":"/ use futures::future::TryFutureExt;","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\future\\try_future\\mod.rs","byte_start":63337,"byte_end":63375,"line_start":209,"line_end":209,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\future\\try_future\\mod.rs","byte_start":63380,"byte_end":63383,"line_start":210,"line_end":210,"column_start":5,"column_end":8}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\future\\try_future\\mod.rs","byte_start":63388,"byte_end":63429,"line_start":211,"line_end":211,"column_start":5,"column_end":46}},{"value":"/ let future = async { Err::<i32, i32>(1) };","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\future\\try_future\\mod.rs","byte_start":63434,"byte_end":63480,"line_start":212,"line_end":212,"column_start":5,"column_end":51}},{"value":"/ let future = future.map_ok(|x| x + 3);","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\future\\try_future\\mod.rs","byte_start":63485,"byte_end":63527,"line_start":213,"line_end":213,"column_start":5,"column_end":47}},{"value":"/ assert_eq!(future.await, Err(1));","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\future\\try_future\\mod.rs","byte_start":63532,"byte_end":63569,"line_start":214,"line_end":214,"column_start":5,"column_end":42}},{"value":"/ # });","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\future\\try_future\\mod.rs","byte_start":63574,"byte_end":63583,"line_start":215,"line_end":215,"column_start":5,"column_end":14}},{"value":"/ ```","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\future\\try_future\\mod.rs","byte_start":63588,"byte_end":63595,"line_start":216,"line_end":216,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":747},"span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\future\\try_future\\mod.rs","byte_start":65168,"byte_end":65182,"line_start":257,"line_end":257,"column_start":8,"column_end":22},"name":"map_ok_or_else","qualname":"::future::try_future::TryFutureExt::map_ok_or_else","value":"pub fn map_ok_or_else<T, E, F>(Self, E, F) -> MapOkOrElse<Self, F, E> where\nF: FnOnce(Self::Ok) -> T, E: FnOnce(Self::Error) -> T, Self: Sized","parent":{"krate":0,"index":741},"children":[],"decl_id":null,"docs":" Maps this future's success value to a different value, and permits for error handling resulting in the same type.","sig":null,"attributes":[{"value":"/ Maps this future's success value to a different value, and permits for error handling resulting in the same type.","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\future\\try_future\\mod.rs","byte_start":63800,"byte_end":63917,"line_start":225,"line_end":225,"column_start":5,"column_end":122}},{"value":"/","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\future\\try_future\\mod.rs","byte_start":63922,"byte_end":63925,"line_start":226,"line_end":226,"column_start":5,"column_end":8}},{"value":"/ This method can be used to coalesce your [`Ok`](TryFuture::Ok) type and [`Error`](TryFuture::Error) into another type,","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\future\\try_future\\mod.rs","byte_start":63930,"byte_end":64052,"line_start":227,"line_end":227,"column_start":5,"column_end":127}},{"value":"/ where that type is the same for both outcomes.","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\future\\try_future\\mod.rs","byte_start":64057,"byte_end":64107,"line_start":228,"line_end":228,"column_start":5,"column_end":55}},{"value":"/","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\future\\try_future\\mod.rs","byte_start":64112,"byte_end":64115,"line_start":229,"line_end":229,"column_start":5,"column_end":8}},{"value":"/ The provided closure `f` will only be called if this future is resolved","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\future\\try_future\\mod.rs","byte_start":64120,"byte_end":64195,"line_start":230,"line_end":230,"column_start":5,"column_end":80}},{"value":"/ to an [`Ok`]. If it resolves to an [`Err`], panics, or is dropped, then","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\future\\try_future\\mod.rs","byte_start":64200,"byte_end":64275,"line_start":231,"line_end":231,"column_start":5,"column_end":80}},{"value":"/ the provided closure will never be invoked.","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\future\\try_future\\mod.rs","byte_start":64280,"byte_end":64327,"line_start":232,"line_end":232,"column_start":5,"column_end":52}},{"value":"/","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\future\\try_future\\mod.rs","byte_start":64332,"byte_end":64335,"line_start":233,"line_end":233,"column_start":5,"column_end":8}},{"value":"/ The provided closure `e` will only be called if this future is resolved","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\future\\try_future\\mod.rs","byte_start":64340,"byte_end":64415,"line_start":234,"line_end":234,"column_start":5,"column_end":80}},{"value":"/ to an [`Err`]. If it resolves to an [`Ok`], panics, or is dropped, then","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\future\\try_future\\mod.rs","byte_start":64420,"byte_end":64495,"line_start":235,"line_end":235,"column_start":5,"column_end":80}},{"value":"/ the provided closure will never be invoked.","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\future\\try_future\\mod.rs","byte_start":64500,"byte_end":64547,"line_start":236,"line_end":236,"column_start":5,"column_end":52}},{"value":"/","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\future\\try_future\\mod.rs","byte_start":64552,"byte_end":64555,"line_start":237,"line_end":237,"column_start":5,"column_end":8}},{"value":"/ Note that this method consumes the future it is called on and returns a","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\future\\try_future\\mod.rs","byte_start":64560,"byte_end":64635,"line_start":238,"line_end":238,"column_start":5,"column_end":80}},{"value":"/ wrapped version of it.","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\future\\try_future\\mod.rs","byte_start":64640,"byte_end":64666,"line_start":239,"line_end":239,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\future\\try_future\\mod.rs","byte_start":64671,"byte_end":64674,"line_start":240,"line_end":240,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\future\\try_future\\mod.rs","byte_start":64679,"byte_end":64693,"line_start":241,"line_end":241,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\future\\try_future\\mod.rs","byte_start":64698,"byte_end":64701,"line_start":242,"line_end":242,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\future\\try_future\\mod.rs","byte_start":64706,"byte_end":64713,"line_start":243,"line_end":243,"column_start":5,"column_end":12}},{"value":"/ use futures::future::TryFutureExt;","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\future\\try_future\\mod.rs","byte_start":64718,"byte_end":64756,"line_start":244,"line_end":244,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\future\\try_future\\mod.rs","byte_start":64761,"byte_end":64764,"line_start":245,"line_end":245,"column_start":5,"column_end":8}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\future\\try_future\\mod.rs","byte_start":64769,"byte_end":64810,"line_start":246,"line_end":246,"column_start":5,"column_end":46}},{"value":"/ let future = async { Ok::<i32, i32>(5) };","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\future\\try_future\\mod.rs","byte_start":64815,"byte_end":64860,"line_start":247,"line_end":247,"column_start":5,"column_end":50}},{"value":"/ let future = future.map_ok_or_else(|x| x * 2, |x| x + 3);","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\future\\try_future\\mod.rs","byte_start":64865,"byte_end":64926,"line_start":248,"line_end":248,"column_start":5,"column_end":66}},{"value":"/ assert_eq!(future.await, 8);","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\future\\try_future\\mod.rs","byte_start":64931,"byte_end":64963,"line_start":249,"line_end":249,"column_start":5,"column_end":37}},{"value":"/","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\future\\try_future\\mod.rs","byte_start":64968,"byte_end":64971,"line_start":250,"line_end":250,"column_start":5,"column_end":8}},{"value":"/ let future = async { Err::<i32, i32>(5) };","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\future\\try_future\\mod.rs","byte_start":64976,"byte_end":65022,"line_start":251,"line_end":251,"column_start":5,"column_end":51}},{"value":"/ let future = future.map_ok_or_else(|x| x * 2, |x| x + 3);","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\future\\try_future\\mod.rs","byte_start":65027,"byte_end":65088,"line_start":252,"line_end":252,"column_start":5,"column_end":66}},{"value":"/ assert_eq!(future.await, 10);","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\future\\try_future\\mod.rs","byte_start":65093,"byte_end":65126,"line_start":253,"line_end":253,"column_start":5,"column_end":38}},{"value":"/ # });","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\future\\try_future\\mod.rs","byte_start":65131,"byte_end":65140,"line_start":254,"line_end":254,"column_start":5,"column_end":14}},{"value":"/ ```","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\future\\try_future\\mod.rs","byte_start":65145,"byte_end":65152,"line_start":255,"line_end":255,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\future\\try_future\\mod.rs","byte_start":65157,"byte_end":65160,"line_start":256,"line_end":256,"column_start":5,"column_end":8}}]},{"kind":"Method","id":{"krate":0,"index":751},"span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\future\\try_future\\mod.rs","byte_start":66865,"byte_end":66872,"line_start":305,"line_end":305,"column_start":8,"column_end":15},"name":"map_err","qualname":"::future::try_future::TryFutureExt::map_err","value":"pub fn map_err<E, F>(Self, F) -> MapErr<Self, F> where F: FnOnce(Self::Error)\n-> E, Self: Sized","parent":{"krate":0,"index":741},"children":[],"decl_id":null,"docs":" Maps this future's error value to a different value.","sig":null,"attributes":[{"value":"/ Maps this future's error value to a different value.","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\future\\try_future\\mod.rs","byte_start":65416,"byte_end":65472,"line_start":266,"line_end":266,"column_start":5,"column_end":61}},{"value":"/","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\future\\try_future\\mod.rs","byte_start":65477,"byte_end":65480,"line_start":267,"line_end":267,"column_start":5,"column_end":8}},{"value":"/ This method can be used to change the [`Error`](TryFuture::Error) type","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\future\\try_future\\mod.rs","byte_start":65485,"byte_end":65559,"line_start":268,"line_end":268,"column_start":5,"column_end":79}},{"value":"/ of the future into a different type. It is similar to the","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\future\\try_future\\mod.rs","byte_start":65564,"byte_end":65625,"line_start":269,"line_end":269,"column_start":5,"column_end":66}},{"value":"/ [`Result::map_err`] method. You can use this method for example to","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\future\\try_future\\mod.rs","byte_start":65630,"byte_end":65700,"line_start":270,"line_end":270,"column_start":5,"column_end":75}},{"value":"/ ensure that futures have the same [`Error`](TryFuture::Error) type when","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\future\\try_future\\mod.rs","byte_start":65705,"byte_end":65780,"line_start":271,"line_end":271,"column_start":5,"column_end":80}},{"value":"/ using [`select!`] or [`join!`].","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\future\\try_future\\mod.rs","byte_start":65785,"byte_end":65820,"line_start":272,"line_end":272,"column_start":5,"column_end":40}},{"value":"/","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\future\\try_future\\mod.rs","byte_start":65825,"byte_end":65828,"line_start":273,"line_end":273,"column_start":5,"column_end":8}},{"value":"/ The provided closure `f` will only be called if this future is resolved","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\future\\try_future\\mod.rs","byte_start":65833,"byte_end":65908,"line_start":274,"line_end":274,"column_start":5,"column_end":80}},{"value":"/ to an [`Err`]. If it resolves to an [`Ok`], panics, or is dropped, then","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\future\\try_future\\mod.rs","byte_start":65913,"byte_end":65988,"line_start":275,"line_end":275,"column_start":5,"column_end":80}},{"value":"/ the provided closure will never be invoked.","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\future\\try_future\\mod.rs","byte_start":65993,"byte_end":66040,"line_start":276,"line_end":276,"column_start":5,"column_end":52}},{"value":"/","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\future\\try_future\\mod.rs","byte_start":66045,"byte_end":66048,"line_start":277,"line_end":277,"column_start":5,"column_end":8}},{"value":"/ Note that this method consumes the future it is called on and returns a","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\future\\try_future\\mod.rs","byte_start":66053,"byte_end":66128,"line_start":278,"line_end":278,"column_start":5,"column_end":80}},{"value":"/ wrapped version of it.","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\future\\try_future\\mod.rs","byte_start":66133,"byte_end":66159,"line_start":279,"line_end":279,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\future\\try_future\\mod.rs","byte_start":66164,"byte_end":66167,"line_start":280,"line_end":280,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\future\\try_future\\mod.rs","byte_start":66172,"byte_end":66186,"line_start":281,"line_end":281,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\future\\try_future\\mod.rs","byte_start":66191,"byte_end":66194,"line_start":282,"line_end":282,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\future\\try_future\\mod.rs","byte_start":66199,"byte_end":66206,"line_start":283,"line_end":283,"column_start":5,"column_end":12}},{"value":"/ use futures::future::TryFutureExt;","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\future\\try_future\\mod.rs","byte_start":66211,"byte_end":66249,"line_start":284,"line_end":284,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\future\\try_future\\mod.rs","byte_start":66254,"byte_end":66257,"line_start":285,"line_end":285,"column_start":5,"column_end":8}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\future\\try_future\\mod.rs","byte_start":66262,"byte_end":66303,"line_start":286,"line_end":286,"column_start":5,"column_end":46}},{"value":"/ let future = async { Err::<i32, i32>(1) };","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\future\\try_future\\mod.rs","byte_start":66308,"byte_end":66354,"line_start":287,"line_end":287,"column_start":5,"column_end":51}},{"value":"/ let future = future.map_err(|x| x + 3);","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\future\\try_future\\mod.rs","byte_start":66359,"byte_end":66402,"line_start":288,"line_end":288,"column_start":5,"column_end":48}},{"value":"/ assert_eq!(future.await, Err(4));","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\future\\try_future\\mod.rs","byte_start":66407,"byte_end":66444,"line_start":289,"line_end":289,"column_start":5,"column_end":42}},{"value":"/ # });","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\future\\try_future\\mod.rs","byte_start":66449,"byte_end":66458,"line_start":290,"line_end":290,"column_start":5,"column_end":14}},{"value":"/ ```","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\future\\try_future\\mod.rs","byte_start":66463,"byte_end":66470,"line_start":291,"line_end":291,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\future\\try_future\\mod.rs","byte_start":66475,"byte_end":66478,"line_start":292,"line_end":292,"column_start":5,"column_end":8}},{"value":"/ Calling [`map_err`](TryFutureExt::map_err) on a successful future has","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\future\\try_future\\mod.rs","byte_start":66483,"byte_end":66556,"line_start":293,"line_end":293,"column_start":5,"column_end":78}},{"value":"/ no effect:","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\future\\try_future\\mod.rs","byte_start":66561,"byte_end":66575,"line_start":294,"line_end":294,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\future\\try_future\\mod.rs","byte_start":66580,"byte_end":66583,"line_start":295,"line_end":295,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\future\\try_future\\mod.rs","byte_start":66588,"byte_end":66595,"line_start":296,"line_end":296,"column_start":5,"column_end":12}},{"value":"/ use futures::future::TryFutureExt;","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\future\\try_future\\mod.rs","byte_start":66600,"byte_end":66638,"line_start":297,"line_end":297,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\future\\try_future\\mod.rs","byte_start":66643,"byte_end":66646,"line_start":298,"line_end":298,"column_start":5,"column_end":8}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\future\\try_future\\mod.rs","byte_start":66651,"byte_end":66692,"line_start":299,"line_end":299,"column_start":5,"column_end":46}},{"value":"/ let future = async { Ok::<i32, i32>(1) };","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\future\\try_future\\mod.rs","byte_start":66697,"byte_end":66742,"line_start":300,"line_end":300,"column_start":5,"column_end":50}},{"value":"/ let future = future.map_err(|x| x + 3);","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\future\\try_future\\mod.rs","byte_start":66747,"byte_end":66790,"line_start":301,"line_end":301,"column_start":5,"column_end":48}},{"value":"/ assert_eq!(future.await, Ok(1));","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\future\\try_future\\mod.rs","byte_start":66795,"byte_end":66831,"line_start":302,"line_end":302,"column_start":5,"column_end":41}},{"value":"/ # });","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\future\\try_future\\mod.rs","byte_start":66836,"byte_end":66845,"line_start":303,"line_end":303,"column_start":5,"column_end":14}},{"value":"/ ```","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\future\\try_future\\mod.rs","byte_start":66850,"byte_end":66857,"line_start":304,"line_end":304,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":754},"span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\future\\try_future\\mod.rs","byte_start":67962,"byte_end":67970,"line_start":335,"line_end":335,"column_start":8,"column_end":16},"name":"err_into","qualname":"::future::try_future::TryFutureExt::err_into","value":"pub fn err_into<E>(Self) -> ErrInto<Self, E> where Self: Sized,\nSelf::Error: Into<E>","parent":{"krate":0,"index":741},"children":[],"decl_id":null,"docs":" Maps this future's [`Error`](TryFuture::Error) to a new error type\n using the [`Into`](std::convert::Into) trait.","sig":null,"attributes":[{"value":"/ Maps this future's [`Error`](TryFuture::Error) to a new error type","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\future\\try_future\\mod.rs","byte_start":67065,"byte_end":67135,"line_start":313,"line_end":313,"column_start":5,"column_end":75}},{"value":"/ using the [`Into`](std::convert::Into) trait.","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\future\\try_future\\mod.rs","byte_start":67140,"byte_end":67189,"line_start":314,"line_end":314,"column_start":5,"column_end":54}},{"value":"/","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\future\\try_future\\mod.rs","byte_start":67194,"byte_end":67197,"line_start":315,"line_end":315,"column_start":5,"column_end":8}},{"value":"/ This method does for futures what the `?`-operator does for","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\future\\try_future\\mod.rs","byte_start":67202,"byte_end":67265,"line_start":316,"line_end":316,"column_start":5,"column_end":68}},{"value":"/ [`Result`]: It lets the compiler infer the type of the resulting","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\future\\try_future\\mod.rs","byte_start":67270,"byte_end":67338,"line_start":317,"line_end":317,"column_start":5,"column_end":73}},{"value":"/ error. Just as [`map_err`](TryFutureExt::map_err), this is useful for","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\future\\try_future\\mod.rs","byte_start":67343,"byte_end":67416,"line_start":318,"line_end":318,"column_start":5,"column_end":78}},{"value":"/ example to ensure that futures have the same [`Error`](TryFuture::Error)","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\future\\try_future\\mod.rs","byte_start":67421,"byte_end":67497,"line_start":319,"line_end":319,"column_start":5,"column_end":81}},{"value":"/ type when using [`select!`] or [`join!`].","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\future\\try_future\\mod.rs","byte_start":67502,"byte_end":67547,"line_start":320,"line_end":320,"column_start":5,"column_end":50}},{"value":"/","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\future\\try_future\\mod.rs","byte_start":67552,"byte_end":67555,"line_start":321,"line_end":321,"column_start":5,"column_end":8}},{"value":"/ Note that this method consumes the future it is called on and returns a","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\future\\try_future\\mod.rs","byte_start":67560,"byte_end":67635,"line_start":322,"line_end":322,"column_start":5,"column_end":80}},{"value":"/ wrapped version of it.","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\future\\try_future\\mod.rs","byte_start":67640,"byte_end":67666,"line_start":323,"line_end":323,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\future\\try_future\\mod.rs","byte_start":67671,"byte_end":67674,"line_start":324,"line_end":324,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\future\\try_future\\mod.rs","byte_start":67679,"byte_end":67693,"line_start":325,"line_end":325,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\future\\try_future\\mod.rs","byte_start":67698,"byte_end":67701,"line_start":326,"line_end":326,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\future\\try_future\\mod.rs","byte_start":67706,"byte_end":67713,"line_start":327,"line_end":327,"column_start":5,"column_end":12}},{"value":"/ use futures::future::TryFutureExt;","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\future\\try_future\\mod.rs","byte_start":67718,"byte_end":67756,"line_start":328,"line_end":328,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\future\\try_future\\mod.rs","byte_start":67761,"byte_end":67764,"line_start":329,"line_end":329,"column_start":5,"column_end":8}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\future\\try_future\\mod.rs","byte_start":67769,"byte_end":67810,"line_start":330,"line_end":330,"column_start":5,"column_end":46}},{"value":"/ let future_err_u8 = async { Err::<(), u8>(1) };","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\future\\try_future\\mod.rs","byte_start":67815,"byte_end":67866,"line_start":331,"line_end":331,"column_start":5,"column_end":56}},{"value":"/ let future_err_i32 = future_err_u8.err_into::<i32>();","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\future\\try_future\\mod.rs","byte_start":67871,"byte_end":67928,"line_start":332,"line_end":332,"column_start":5,"column_end":62}},{"value":"/ # });","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\future\\try_future\\mod.rs","byte_start":67933,"byte_end":67942,"line_start":333,"line_end":333,"column_start":5,"column_end":14}},{"value":"/ ```","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\future\\try_future\\mod.rs","byte_start":67947,"byte_end":67954,"line_start":334,"line_end":334,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":756},"span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\future\\try_future\\mod.rs","byte_start":68266,"byte_end":68273,"line_start":345,"line_end":345,"column_start":8,"column_end":15},"name":"ok_into","qualname":"::future::try_future::TryFutureExt::ok_into","value":"pub fn ok_into<U>(Self) -> OkInto<Self, U> where Self: Sized,\nSelf::Ok: Into<U>","parent":{"krate":0,"index":741},"children":[],"decl_id":null,"docs":" Maps this future's [`Ok`](TryFuture::Ok) to a new type\n using the [`Into`](std::convert::Into) trait.\n","sig":null,"attributes":[{"value":"/ Maps this future's [`Ok`](TryFuture::Ok) to a new type","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\future\\try_future\\mod.rs","byte_start":68146,"byte_end":68204,"line_start":343,"line_end":343,"column_start":5,"column_end":63}},{"value":"/ using the [`Into`](std::convert::Into) trait.","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\future\\try_future\\mod.rs","byte_start":68209,"byte_end":68258,"line_start":344,"line_end":344,"column_start":5,"column_end":54}}]},{"kind":"Method","id":{"krate":0,"index":758},"span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\future\\try_future\\mod.rs","byte_start":69828,"byte_end":69836,"line_start":389,"line_end":389,"column_start":8,"column_end":16},"name":"and_then","qualname":"::future::try_future::TryFutureExt::and_then","value":"pub fn and_then<Fut, F>(Self, F) -> AndThen<Self, Fut, F> where\nF: FnOnce(Self::Ok) -> Fut, Fut: TryFuture<Error = Self::Error>, Self: Sized","parent":{"krate":0,"index":741},"children":[],"decl_id":null,"docs":" Executes another future after this one resolves successfully. The\n success value is passed to a closure to create this subsequent future.","sig":null,"attributes":[{"value":"/ Executes another future after this one resolves successfully. The","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\future\\try_future\\mod.rs","byte_start":68447,"byte_end":68516,"line_start":353,"line_end":353,"column_start":5,"column_end":74}},{"value":"/ success value is passed to a closure to create this subsequent future.","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\future\\try_future\\mod.rs","byte_start":68521,"byte_end":68595,"line_start":354,"line_end":354,"column_start":5,"column_end":79}},{"value":"/","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\future\\try_future\\mod.rs","byte_start":68600,"byte_end":68603,"line_start":355,"line_end":355,"column_start":5,"column_end":8}},{"value":"/ The provided closure `f` will only be called if this future is resolved","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\future\\try_future\\mod.rs","byte_start":68608,"byte_end":68683,"line_start":356,"line_end":356,"column_start":5,"column_end":80}},{"value":"/ to an [`Ok`]. If this future resolves to an [`Err`], panics, or is","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\future\\try_future\\mod.rs","byte_start":68688,"byte_end":68758,"line_start":357,"line_end":357,"column_start":5,"column_end":75}},{"value":"/ dropped, then the provided closure will never be invoked. The","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\future\\try_future\\mod.rs","byte_start":68763,"byte_end":68828,"line_start":358,"line_end":358,"column_start":5,"column_end":70}},{"value":"/ [`Error`](TryFuture::Error) type of this future and the future","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\future\\try_future\\mod.rs","byte_start":68833,"byte_end":68899,"line_start":359,"line_end":359,"column_start":5,"column_end":71}},{"value":"/ returned by `f` have to match.","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\future\\try_future\\mod.rs","byte_start":68904,"byte_end":68938,"line_start":360,"line_end":360,"column_start":5,"column_end":39}},{"value":"/","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\future\\try_future\\mod.rs","byte_start":68943,"byte_end":68946,"line_start":361,"line_end":361,"column_start":5,"column_end":8}},{"value":"/ Note that this method consumes the future it is called on and returns a","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\future\\try_future\\mod.rs","byte_start":68951,"byte_end":69026,"line_start":362,"line_end":362,"column_start":5,"column_end":80}},{"value":"/ wrapped version of it.","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\future\\try_future\\mod.rs","byte_start":69031,"byte_end":69057,"line_start":363,"line_end":363,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\future\\try_future\\mod.rs","byte_start":69062,"byte_end":69065,"line_start":364,"line_end":364,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\future\\try_future\\mod.rs","byte_start":69070,"byte_end":69084,"line_start":365,"line_end":365,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\future\\try_future\\mod.rs","byte_start":69089,"byte_end":69092,"line_start":366,"line_end":366,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\future\\try_future\\mod.rs","byte_start":69097,"byte_end":69104,"line_start":367,"line_end":367,"column_start":5,"column_end":12}},{"value":"/ use futures::future::TryFutureExt;","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\future\\try_future\\mod.rs","byte_start":69109,"byte_end":69147,"line_start":368,"line_end":368,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\future\\try_future\\mod.rs","byte_start":69152,"byte_end":69155,"line_start":369,"line_end":369,"column_start":5,"column_end":8}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\future\\try_future\\mod.rs","byte_start":69160,"byte_end":69201,"line_start":370,"line_end":370,"column_start":5,"column_end":46}},{"value":"/ let future = async { Ok::<i32, i32>(1) };","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\future\\try_future\\mod.rs","byte_start":69206,"byte_end":69251,"line_start":371,"line_end":371,"column_start":5,"column_end":50}},{"value":"/ let future = future.and_then(|x| async move { Ok::<i32, i32>(x + 3) });","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\future\\try_future\\mod.rs","byte_start":69256,"byte_end":69331,"line_start":372,"line_end":372,"column_start":5,"column_end":80}},{"value":"/ assert_eq!(future.await, Ok(4));","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\future\\try_future\\mod.rs","byte_start":69336,"byte_end":69372,"line_start":373,"line_end":373,"column_start":5,"column_end":41}},{"value":"/ # });","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\future\\try_future\\mod.rs","byte_start":69377,"byte_end":69386,"line_start":374,"line_end":374,"column_start":5,"column_end":14}},{"value":"/ ```","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\future\\try_future\\mod.rs","byte_start":69391,"byte_end":69398,"line_start":375,"line_end":375,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\future\\try_future\\mod.rs","byte_start":69403,"byte_end":69406,"line_start":376,"line_end":376,"column_start":5,"column_end":8}},{"value":"/ Calling [`and_then`](TryFutureExt::and_then) on an errored future has no","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\future\\try_future\\mod.rs","byte_start":69411,"byte_end":69487,"line_start":377,"line_end":377,"column_start":5,"column_end":81}},{"value":"/ effect:","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\future\\try_future\\mod.rs","byte_start":69492,"byte_end":69503,"line_start":378,"line_end":378,"column_start":5,"column_end":16}},{"value":"/","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\future\\try_future\\mod.rs","byte_start":69508,"byte_end":69511,"line_start":379,"line_end":379,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\future\\try_future\\mod.rs","byte_start":69516,"byte_end":69523,"line_start":380,"line_end":380,"column_start":5,"column_end":12}},{"value":"/ use futures::future::TryFutureExt;","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\future\\try_future\\mod.rs","byte_start":69528,"byte_end":69566,"line_start":381,"line_end":381,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\future\\try_future\\mod.rs","byte_start":69571,"byte_end":69574,"line_start":382,"line_end":382,"column_start":5,"column_end":8}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\future\\try_future\\mod.rs","byte_start":69579,"byte_end":69620,"line_start":383,"line_end":383,"column_start":5,"column_end":46}},{"value":"/ let future = async { Err::<i32, i32>(1) };","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\future\\try_future\\mod.rs","byte_start":69625,"byte_end":69671,"line_start":384,"line_end":384,"column_start":5,"column_end":51}},{"value":"/ let future = future.and_then(|x| async move { Err::<i32, i32>(x + 3) });","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\future\\try_future\\mod.rs","byte_start":69676,"byte_end":69752,"line_start":385,"line_end":385,"column_start":5,"column_end":81}},{"value":"/ assert_eq!(future.await, Err(1));","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\future\\try_future\\mod.rs","byte_start":69757,"byte_end":69794,"line_start":386,"line_end":386,"column_start":5,"column_end":42}},{"value":"/ # });","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\future\\try_future\\mod.rs","byte_start":69799,"byte_end":69808,"line_start":387,"line_end":387,"column_start":5,"column_end":14}},{"value":"/ ```","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\future\\try_future\\mod.rs","byte_start":69813,"byte_end":69820,"line_start":388,"line_end":388,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":761},"span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\future\\try_future\\mod.rs","byte_start":71457,"byte_end":71464,"line_start":434,"line_end":434,"column_start":8,"column_end":15},"name":"or_else","qualname":"::future::try_future::TryFutureExt::or_else","value":"pub fn or_else<Fut, F>(Self, F) -> OrElse<Self, Fut, F> where\nF: FnOnce(Self::Error) -> Fut, Fut: TryFuture<Ok = Self::Ok>, Self: Sized","parent":{"krate":0,"index":741},"children":[],"decl_id":null,"docs":" Executes another future if this one resolves to an error. The\n error value is passed to a closure to create this subsequent future.","sig":null,"attributes":[{"value":"/ Executes another future if this one resolves to an error. The","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\future\\try_future\\mod.rs","byte_start":70090,"byte_end":70155,"line_start":398,"line_end":398,"column_start":5,"column_end":70}},{"value":"/ error value is passed to a closure to create this subsequent future.","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\future\\try_future\\mod.rs","byte_start":70160,"byte_end":70232,"line_start":399,"line_end":399,"column_start":5,"column_end":77}},{"value":"/","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\future\\try_future\\mod.rs","byte_start":70237,"byte_end":70240,"line_start":400,"line_end":400,"column_start":5,"column_end":8}},{"value":"/ The provided closure `f` will only be called if this future is resolved","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\future\\try_future\\mod.rs","byte_start":70245,"byte_end":70320,"line_start":401,"line_end":401,"column_start":5,"column_end":80}},{"value":"/ to an [`Err`]. If this future resolves to an [`Ok`], panics, or is","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\future\\try_future\\mod.rs","byte_start":70325,"byte_end":70395,"line_start":402,"line_end":402,"column_start":5,"column_end":75}},{"value":"/ dropped, then the provided closure will never be invoked. The","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\future\\try_future\\mod.rs","byte_start":70400,"byte_end":70465,"line_start":403,"line_end":403,"column_start":5,"column_end":70}},{"value":"/ [`Ok`](TryFuture::Ok) type of this future and the future returned by `f`","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\future\\try_future\\mod.rs","byte_start":70470,"byte_end":70546,"line_start":404,"line_end":404,"column_start":5,"column_end":81}},{"value":"/ have to match.","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\future\\try_future\\mod.rs","byte_start":70551,"byte_end":70569,"line_start":405,"line_end":405,"column_start":5,"column_end":23}},{"value":"/","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\future\\try_future\\mod.rs","byte_start":70574,"byte_end":70577,"line_start":406,"line_end":406,"column_start":5,"column_end":8}},{"value":"/ Note that this method consumes the future it is called on and returns a","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\future\\try_future\\mod.rs","byte_start":70582,"byte_end":70657,"line_start":407,"line_end":407,"column_start":5,"column_end":80}},{"value":"/ wrapped version of it.","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\future\\try_future\\mod.rs","byte_start":70662,"byte_end":70688,"line_start":408,"line_end":408,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\future\\try_future\\mod.rs","byte_start":70693,"byte_end":70696,"line_start":409,"line_end":409,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\future\\try_future\\mod.rs","byte_start":70701,"byte_end":70715,"line_start":410,"line_end":410,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\future\\try_future\\mod.rs","byte_start":70720,"byte_end":70723,"line_start":411,"line_end":411,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\future\\try_future\\mod.rs","byte_start":70728,"byte_end":70735,"line_start":412,"line_end":412,"column_start":5,"column_end":12}},{"value":"/ use futures::future::TryFutureExt;","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\future\\try_future\\mod.rs","byte_start":70740,"byte_end":70778,"line_start":413,"line_end":413,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\future\\try_future\\mod.rs","byte_start":70783,"byte_end":70786,"line_start":414,"line_end":414,"column_start":5,"column_end":8}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\future\\try_future\\mod.rs","byte_start":70791,"byte_end":70832,"line_start":415,"line_end":415,"column_start":5,"column_end":46}},{"value":"/ let future = async { Err::<i32, i32>(1) };","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\future\\try_future\\mod.rs","byte_start":70837,"byte_end":70883,"line_start":416,"line_end":416,"column_start":5,"column_end":51}},{"value":"/ let future = future.or_else(|x| async move { Err::<i32, i32>(x + 3) });","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\future\\try_future\\mod.rs","byte_start":70888,"byte_end":70963,"line_start":417,"line_end":417,"column_start":5,"column_end":80}},{"value":"/ assert_eq!(future.await, Err(4));","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\future\\try_future\\mod.rs","byte_start":70968,"byte_end":71005,"line_start":418,"line_end":418,"column_start":5,"column_end":42}},{"value":"/ # });","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\future\\try_future\\mod.rs","byte_start":71010,"byte_end":71019,"line_start":419,"line_end":419,"column_start":5,"column_end":14}},{"value":"/ ```","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\future\\try_future\\mod.rs","byte_start":71024,"byte_end":71031,"line_start":420,"line_end":420,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\future\\try_future\\mod.rs","byte_start":71036,"byte_end":71039,"line_start":421,"line_end":421,"column_start":5,"column_end":8}},{"value":"/ Calling [`or_else`](TryFutureExt::or_else) on a successful future has","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\future\\try_future\\mod.rs","byte_start":71044,"byte_end":71117,"line_start":422,"line_end":422,"column_start":5,"column_end":78}},{"value":"/ no effect:","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\future\\try_future\\mod.rs","byte_start":71122,"byte_end":71136,"line_start":423,"line_end":423,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\future\\try_future\\mod.rs","byte_start":71141,"byte_end":71144,"line_start":424,"line_end":424,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\future\\try_future\\mod.rs","byte_start":71149,"byte_end":71156,"line_start":425,"line_end":425,"column_start":5,"column_end":12}},{"value":"/ use futures::future::TryFutureExt;","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\future\\try_future\\mod.rs","byte_start":71161,"byte_end":71199,"line_start":426,"line_end":426,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\future\\try_future\\mod.rs","byte_start":71204,"byte_end":71207,"line_start":427,"line_end":427,"column_start":5,"column_end":8}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\future\\try_future\\mod.rs","byte_start":71212,"byte_end":71253,"line_start":428,"line_end":428,"column_start":5,"column_end":46}},{"value":"/ let future = async { Ok::<i32, i32>(1) };","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\future\\try_future\\mod.rs","byte_start":71258,"byte_end":71303,"line_start":429,"line_end":429,"column_start":5,"column_end":50}},{"value":"/ let future = future.or_else(|x| async move { Ok::<i32, i32>(x + 3) });","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\future\\try_future\\mod.rs","byte_start":71308,"byte_end":71382,"line_start":430,"line_end":430,"column_start":5,"column_end":79}},{"value":"/ assert_eq!(future.await, Ok(1));","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\future\\try_future\\mod.rs","byte_start":71387,"byte_end":71423,"line_start":431,"line_end":431,"column_start":5,"column_end":41}},{"value":"/ # });","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\future\\try_future\\mod.rs","byte_start":71428,"byte_end":71437,"line_start":432,"line_end":432,"column_start":5,"column_end":14}},{"value":"/ ```","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\future\\try_future\\mod.rs","byte_start":71442,"byte_end":71449,"line_start":433,"line_end":433,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":764},"span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\future\\try_future\\mod.rs","byte_start":72440,"byte_end":72450,"line_start":461,"line_end":461,"column_start":8,"column_end":18},"name":"inspect_ok","qualname":"::future::try_future::TryFutureExt::inspect_ok","value":"pub fn inspect_ok<F>(Self, F) -> InspectOk<Self, F> where F: FnOnce(&Self::Ok)\n-> (), Self: Sized","parent":{"krate":0,"index":741},"children":[],"decl_id":null,"docs":" Do something with the success value of a future before passing it on.","sig":null,"attributes":[{"value":"/ Do something with the success value of a future before passing it on.","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\future\\try_future\\mod.rs","byte_start":71713,"byte_end":71786,"line_start":443,"line_end":443,"column_start":5,"column_end":78}},{"value":"/","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\future\\try_future\\mod.rs","byte_start":71791,"byte_end":71794,"line_start":444,"line_end":444,"column_start":5,"column_end":8}},{"value":"/ When using futures, you'll often chain several of them together.  While","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\future\\try_future\\mod.rs","byte_start":71799,"byte_end":71874,"line_start":445,"line_end":445,"column_start":5,"column_end":80}},{"value":"/ working on such code, you might want to check out what's happening at","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\future\\try_future\\mod.rs","byte_start":71879,"byte_end":71952,"line_start":446,"line_end":446,"column_start":5,"column_end":78}},{"value":"/ various parts in the pipeline, without consuming the intermediate","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\future\\try_future\\mod.rs","byte_start":71957,"byte_end":72026,"line_start":447,"line_end":447,"column_start":5,"column_end":74}},{"value":"/ value. To do that, insert a call to `inspect_ok`.","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\future\\try_future\\mod.rs","byte_start":72031,"byte_end":72084,"line_start":448,"line_end":448,"column_start":5,"column_end":58}},{"value":"/","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\future\\try_future\\mod.rs","byte_start":72089,"byte_end":72092,"line_start":449,"line_end":449,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\future\\try_future\\mod.rs","byte_start":72097,"byte_end":72111,"line_start":450,"line_end":450,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\future\\try_future\\mod.rs","byte_start":72116,"byte_end":72119,"line_start":451,"line_end":451,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\future\\try_future\\mod.rs","byte_start":72124,"byte_end":72131,"line_start":452,"line_end":452,"column_start":5,"column_end":12}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\future\\try_future\\mod.rs","byte_start":72136,"byte_end":72177,"line_start":453,"line_end":453,"column_start":5,"column_end":46}},{"value":"/ use futures::future::TryFutureExt;","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\future\\try_future\\mod.rs","byte_start":72182,"byte_end":72220,"line_start":454,"line_end":454,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\future\\try_future\\mod.rs","byte_start":72225,"byte_end":72228,"line_start":455,"line_end":455,"column_start":5,"column_end":8}},{"value":"/ let future = async { Ok::<_, ()>(1) };","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\future\\try_future\\mod.rs","byte_start":72233,"byte_end":72275,"line_start":456,"line_end":456,"column_start":5,"column_end":47}},{"value":"/ let new_future = future.inspect_ok(|&x| println!(\"about to resolve: {}\", x));","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\future\\try_future\\mod.rs","byte_start":72280,"byte_end":72361,"line_start":457,"line_end":457,"column_start":5,"column_end":86}},{"value":"/ assert_eq!(new_future.await, Ok(1));","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\future\\try_future\\mod.rs","byte_start":72366,"byte_end":72406,"line_start":458,"line_end":458,"column_start":5,"column_end":45}},{"value":"/ # });","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\future\\try_future\\mod.rs","byte_start":72411,"byte_end":72420,"line_start":459,"line_end":459,"column_start":5,"column_end":14}},{"value":"/ ```","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\future\\try_future\\mod.rs","byte_start":72425,"byte_end":72432,"line_start":460,"line_end":460,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":766},"span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\future\\try_future\\mod.rs","byte_start":73376,"byte_end":73387,"line_start":487,"line_end":487,"column_start":8,"column_end":19},"name":"inspect_err","qualname":"::future::try_future::TryFutureExt::inspect_err","value":"pub fn inspect_err<F>(Self, F) -> InspectErr<Self, F> where\nF: FnOnce(&Self::Error) -> (), Self: Sized","parent":{"krate":0,"index":741},"children":[],"decl_id":null,"docs":" Do something with the error value of a future before passing it on.","sig":null,"attributes":[{"value":"/ Do something with the error value of a future before passing it on.","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\future\\try_future\\mod.rs","byte_start":72649,"byte_end":72720,"line_start":469,"line_end":469,"column_start":5,"column_end":76}},{"value":"/","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\future\\try_future\\mod.rs","byte_start":72725,"byte_end":72728,"line_start":470,"line_end":470,"column_start":5,"column_end":8}},{"value":"/ When using futures, you'll often chain several of them together.  While","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\future\\try_future\\mod.rs","byte_start":72733,"byte_end":72808,"line_start":471,"line_end":471,"column_start":5,"column_end":80}},{"value":"/ working on such code, you might want to check out what's happening at","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\future\\try_future\\mod.rs","byte_start":72813,"byte_end":72886,"line_start":472,"line_end":472,"column_start":5,"column_end":78}},{"value":"/ various parts in the pipeline, without consuming the intermediate","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\future\\try_future\\mod.rs","byte_start":72891,"byte_end":72960,"line_start":473,"line_end":473,"column_start":5,"column_end":74}},{"value":"/ value. To do that, insert a call to `inspect_err`.","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\future\\try_future\\mod.rs","byte_start":72965,"byte_end":73019,"line_start":474,"line_end":474,"column_start":5,"column_end":59}},{"value":"/","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\future\\try_future\\mod.rs","byte_start":73024,"byte_end":73027,"line_start":475,"line_end":475,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\future\\try_future\\mod.rs","byte_start":73032,"byte_end":73046,"line_start":476,"line_end":476,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\future\\try_future\\mod.rs","byte_start":73051,"byte_end":73054,"line_start":477,"line_end":477,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\future\\try_future\\mod.rs","byte_start":73059,"byte_end":73066,"line_start":478,"line_end":478,"column_start":5,"column_end":12}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\future\\try_future\\mod.rs","byte_start":73071,"byte_end":73112,"line_start":479,"line_end":479,"column_start":5,"column_end":46}},{"value":"/ use futures::future::TryFutureExt;","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\future\\try_future\\mod.rs","byte_start":73117,"byte_end":73155,"line_start":480,"line_end":480,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\future\\try_future\\mod.rs","byte_start":73160,"byte_end":73163,"line_start":481,"line_end":481,"column_start":5,"column_end":8}},{"value":"/ let future = async { Err::<(), _>(1) };","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\future\\try_future\\mod.rs","byte_start":73168,"byte_end":73211,"line_start":482,"line_end":482,"column_start":5,"column_end":48}},{"value":"/ let new_future = future.inspect_err(|&x| println!(\"about to error: {}\", x));","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\future\\try_future\\mod.rs","byte_start":73216,"byte_end":73296,"line_start":483,"line_end":483,"column_start":5,"column_end":85}},{"value":"/ assert_eq!(new_future.await, Err(1));","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\future\\try_future\\mod.rs","byte_start":73301,"byte_end":73342,"line_start":484,"line_end":484,"column_start":5,"column_end":46}},{"value":"/ # });","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\future\\try_future\\mod.rs","byte_start":73347,"byte_end":73356,"line_start":485,"line_end":485,"column_start":5,"column_end":14}},{"value":"/ ```","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\future\\try_future\\mod.rs","byte_start":73361,"byte_end":73368,"line_start":486,"line_end":486,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":768},"span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\future\\try_future\\mod.rs","byte_start":73772,"byte_end":73783,"line_start":499,"line_end":499,"column_start":8,"column_end":19},"name":"try_flatten","qualname":"::future::try_future::TryFutureExt::try_flatten","value":"pub fn try_flatten(Self) -> TryFlatten<Self, Self::Ok> where\nSelf::Ok: TryFuture<Error = Self::Error>, Self: Sized","parent":{"krate":0,"index":741},"children":[],"decl_id":null,"docs":" Flatten the execution of this future when the successful result of this\n future is another future.","sig":null,"attributes":[{"value":"/ Flatten the execution of this future when the successful result of this","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\future\\try_future\\mod.rs","byte_start":73591,"byte_end":73666,"line_start":495,"line_end":495,"column_start":5,"column_end":80}},{"value":"/ future is another future.","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\future\\try_future\\mod.rs","byte_start":73671,"byte_end":73700,"line_start":496,"line_end":496,"column_start":5,"column_end":34}},{"value":"/","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\future\\try_future\\mod.rs","byte_start":73705,"byte_end":73708,"line_start":497,"line_end":497,"column_start":5,"column_end":8}},{"value":"/ This is equivalent to `future.and_then(|x| x)`.","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\future\\try_future\\mod.rs","byte_start":73713,"byte_end":73764,"line_start":498,"line_end":498,"column_start":5,"column_end":56}}]},{"kind":"Method","id":{"krate":0,"index":769},"span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\future\\try_future\\mod.rs","byte_start":74962,"byte_end":74980,"line_start":532,"line_end":532,"column_start":8,"column_end":26},"name":"try_flatten_stream","qualname":"::future::try_future::TryFutureExt::try_flatten_stream","value":"pub fn try_flatten_stream(Self) -> TryFlattenStream<Self> where\nSelf::Ok: TryStream<Error = Self::Error>, Self: Sized","parent":{"krate":0,"index":741},"children":[],"decl_id":null,"docs":" Flatten the execution of this future when the successful result of this\n future is a stream.","sig":null,"attributes":[{"value":"/ Flatten the execution of this future when the successful result of this","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\future\\try_future\\mod.rs","byte_start":74018,"byte_end":74093,"line_start":507,"line_end":507,"column_start":5,"column_end":80}},{"value":"/ future is a stream.","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\future\\try_future\\mod.rs","byte_start":74098,"byte_end":74121,"line_start":508,"line_end":508,"column_start":5,"column_end":28}},{"value":"/","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\future\\try_future\\mod.rs","byte_start":74126,"byte_end":74129,"line_start":509,"line_end":509,"column_start":5,"column_end":8}},{"value":"/ This can be useful when stream initialization is deferred, and it is","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\future\\try_future\\mod.rs","byte_start":74134,"byte_end":74206,"line_start":510,"line_end":510,"column_start":5,"column_end":77}},{"value":"/ convenient to work with that stream as if stream was available at the","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\future\\try_future\\mod.rs","byte_start":74211,"byte_end":74284,"line_start":511,"line_end":511,"column_start":5,"column_end":78}},{"value":"/ call site.","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\future\\try_future\\mod.rs","byte_start":74289,"byte_end":74303,"line_start":512,"line_end":512,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\future\\try_future\\mod.rs","byte_start":74308,"byte_end":74311,"line_start":513,"line_end":513,"column_start":5,"column_end":8}},{"value":"/ Note that this function consumes this future and returns a wrapped","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\future\\try_future\\mod.rs","byte_start":74316,"byte_end":74386,"line_start":514,"line_end":514,"column_start":5,"column_end":75}},{"value":"/ version of it.","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\future\\try_future\\mod.rs","byte_start":74391,"byte_end":74409,"line_start":515,"line_end":515,"column_start":5,"column_end":23}},{"value":"/","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\future\\try_future\\mod.rs","byte_start":74414,"byte_end":74417,"line_start":516,"line_end":516,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\future\\try_future\\mod.rs","byte_start":74422,"byte_end":74436,"line_start":517,"line_end":517,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\future\\try_future\\mod.rs","byte_start":74441,"byte_end":74444,"line_start":518,"line_end":518,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\future\\try_future\\mod.rs","byte_start":74449,"byte_end":74456,"line_start":519,"line_end":519,"column_start":5,"column_end":12}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\future\\try_future\\mod.rs","byte_start":74461,"byte_end":74502,"line_start":520,"line_end":520,"column_start":5,"column_end":46}},{"value":"/ use futures::future::TryFutureExt;","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\future\\try_future\\mod.rs","byte_start":74507,"byte_end":74545,"line_start":521,"line_end":521,"column_start":5,"column_end":43}},{"value":"/ use futures::stream::{self, TryStreamExt};","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\future\\try_future\\mod.rs","byte_start":74550,"byte_end":74596,"line_start":522,"line_end":522,"column_start":5,"column_end":51}},{"value":"/","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\future\\try_future\\mod.rs","byte_start":74601,"byte_end":74604,"line_start":523,"line_end":523,"column_start":5,"column_end":8}},{"value":"/ let stream_items = vec![17, 18, 19].into_iter().map(Ok);","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\future\\try_future\\mod.rs","byte_start":74609,"byte_end":74669,"line_start":524,"line_end":524,"column_start":5,"column_end":65}},{"value":"/ let future_of_a_stream = async { Ok::<_, ()>(stream::iter(stream_items)) };","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\future\\try_future\\mod.rs","byte_start":74674,"byte_end":74753,"line_start":525,"line_end":525,"column_start":5,"column_end":84}},{"value":"/","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\future\\try_future\\mod.rs","byte_start":74758,"byte_end":74761,"line_start":526,"line_end":526,"column_start":5,"column_end":8}},{"value":"/ let stream = future_of_a_stream.try_flatten_stream();","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\future\\try_future\\mod.rs","byte_start":74766,"byte_end":74823,"line_start":527,"line_end":527,"column_start":5,"column_end":62}},{"value":"/ let list = stream.try_collect::<Vec<_>>().await;","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\future\\try_future\\mod.rs","byte_start":74828,"byte_end":74880,"line_start":528,"line_end":528,"column_start":5,"column_end":57}},{"value":"/ assert_eq!(list, Ok(vec![17, 18, 19]));","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\future\\try_future\\mod.rs","byte_start":74885,"byte_end":74928,"line_start":529,"line_end":529,"column_start":5,"column_end":48}},{"value":"/ # });","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\future\\try_future\\mod.rs","byte_start":74933,"byte_end":74942,"line_start":530,"line_end":530,"column_start":5,"column_end":14}},{"value":"/ ```","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\future\\try_future\\mod.rs","byte_start":74947,"byte_end":74954,"line_start":531,"line_end":531,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":770},"span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\future\\try_future\\mod.rs","byte_start":76071,"byte_end":76085,"line_start":564,"line_end":564,"column_start":8,"column_end":22},"name":"unwrap_or_else","qualname":"::future::try_future::TryFutureExt::unwrap_or_else","value":"pub fn unwrap_or_else<F>(Self, F) -> UnwrapOrElse<Self, F> where Self: Sized,\nF: FnOnce(Self::Error) -> Self::Ok","parent":{"krate":0,"index":741},"children":[],"decl_id":null,"docs":" Unwraps this future's output, producing a future with this future's\n [`Ok`](TryFuture::Ok) type as its\n [`Output`](std::future::Future::Output) type.","sig":null,"attributes":[{"value":"/ Unwraps this future's output, producing a future with this future's","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\future\\try_future\\mod.rs","byte_start":75240,"byte_end":75311,"line_start":542,"line_end":542,"column_start":5,"column_end":76}},{"value":"/ [`Ok`](TryFuture::Ok) type as its","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\future\\try_future\\mod.rs","byte_start":75316,"byte_end":75353,"line_start":543,"line_end":543,"column_start":5,"column_end":42}},{"value":"/ [`Output`](std::future::Future::Output) type.","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\future\\try_future\\mod.rs","byte_start":75358,"byte_end":75407,"line_start":544,"line_end":544,"column_start":5,"column_end":54}},{"value":"/","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\future\\try_future\\mod.rs","byte_start":75412,"byte_end":75415,"line_start":545,"line_end":545,"column_start":5,"column_end":8}},{"value":"/ If this future is resolved successfully, the returned future will","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\future\\try_future\\mod.rs","byte_start":75420,"byte_end":75489,"line_start":546,"line_end":546,"column_start":5,"column_end":74}},{"value":"/ contain the original future's success value as output. Otherwise, the","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\future\\try_future\\mod.rs","byte_start":75494,"byte_end":75567,"line_start":547,"line_end":547,"column_start":5,"column_end":78}},{"value":"/ closure `f` is called with the error value to produce an alternate","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\future\\try_future\\mod.rs","byte_start":75572,"byte_end":75642,"line_start":548,"line_end":548,"column_start":5,"column_end":75}},{"value":"/ success value.","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\future\\try_future\\mod.rs","byte_start":75647,"byte_end":75665,"line_start":549,"line_end":549,"column_start":5,"column_end":23}},{"value":"/","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\future\\try_future\\mod.rs","byte_start":75670,"byte_end":75673,"line_start":550,"line_end":550,"column_start":5,"column_end":8}},{"value":"/ This method is similar to the [`Result::unwrap_or_else`] method.","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\future\\try_future\\mod.rs","byte_start":75678,"byte_end":75746,"line_start":551,"line_end":551,"column_start":5,"column_end":73}},{"value":"/","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\future\\try_future\\mod.rs","byte_start":75751,"byte_end":75754,"line_start":552,"line_end":552,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\future\\try_future\\mod.rs","byte_start":75759,"byte_end":75773,"line_start":553,"line_end":553,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\future\\try_future\\mod.rs","byte_start":75778,"byte_end":75781,"line_start":554,"line_end":554,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\future\\try_future\\mod.rs","byte_start":75786,"byte_end":75793,"line_start":555,"line_end":555,"column_start":5,"column_end":12}},{"value":"/ use futures::future::TryFutureExt;","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\future\\try_future\\mod.rs","byte_start":75798,"byte_end":75836,"line_start":556,"line_end":556,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\future\\try_future\\mod.rs","byte_start":75841,"byte_end":75844,"line_start":557,"line_end":557,"column_start":5,"column_end":8}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\future\\try_future\\mod.rs","byte_start":75849,"byte_end":75890,"line_start":558,"line_end":558,"column_start":5,"column_end":46}},{"value":"/ let future = async { Err::<(), &str>(\"Boom!\") };","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\future\\try_future\\mod.rs","byte_start":75895,"byte_end":75947,"line_start":559,"line_end":559,"column_start":5,"column_end":57}},{"value":"/ let future = future.unwrap_or_else(|_| ());","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\future\\try_future\\mod.rs","byte_start":75952,"byte_end":75999,"line_start":560,"line_end":560,"column_start":5,"column_end":52}},{"value":"/ assert_eq!(future.await, ());","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\future\\try_future\\mod.rs","byte_start":76004,"byte_end":76037,"line_start":561,"line_end":561,"column_start":5,"column_end":38}},{"value":"/ # });","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\future\\try_future\\mod.rs","byte_start":76042,"byte_end":76051,"line_start":562,"line_end":562,"column_start":5,"column_end":14}},{"value":"/ ```","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\future\\try_future\\mod.rs","byte_start":76056,"byte_end":76063,"line_start":563,"line_end":563,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":772},"span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\future\\try_future\\mod.rs","byte_start":77340,"byte_end":77351,"line_start":604,"line_end":604,"column_start":8,"column_end":19},"name":"into_future","qualname":"::future::try_future::TryFutureExt::into_future","value":"pub fn into_future(Self) -> IntoFuture<Self> where Self: Sized","parent":{"krate":0,"index":741},"children":[],"decl_id":null,"docs":" Wraps a [`TryFuture`] into a type that implements\n [`Future`](std::future::Future).","sig":null,"attributes":[{"value":"/ Wraps a [`TryFuture`] into a type that implements","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\future\\try_future\\mod.rs","byte_start":76639,"byte_end":76692,"line_start":583,"line_end":583,"column_start":5,"column_end":58}},{"value":"/ [`Future`](std::future::Future).","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\future\\try_future\\mod.rs","byte_start":76697,"byte_end":76733,"line_start":584,"line_end":584,"column_start":5,"column_end":41}},{"value":"/","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\future\\try_future\\mod.rs","byte_start":76738,"byte_end":76741,"line_start":585,"line_end":585,"column_start":5,"column_end":8}},{"value":"/ [`TryFuture`]s currently do not implement the","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\future\\try_future\\mod.rs","byte_start":76746,"byte_end":76795,"line_start":586,"line_end":586,"column_start":5,"column_end":54}},{"value":"/ [`Future`](std::future::Future) trait due to limitations of the","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\future\\try_future\\mod.rs","byte_start":76800,"byte_end":76867,"line_start":587,"line_end":587,"column_start":5,"column_end":72}},{"value":"/ compiler.","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\future\\try_future\\mod.rs","byte_start":76872,"byte_end":76885,"line_start":588,"line_end":588,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\future\\try_future\\mod.rs","byte_start":76890,"byte_end":76893,"line_start":589,"line_end":589,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\future\\try_future\\mod.rs","byte_start":76898,"byte_end":76912,"line_start":590,"line_end":590,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\future\\try_future\\mod.rs","byte_start":76917,"byte_end":76920,"line_start":591,"line_end":591,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\future\\try_future\\mod.rs","byte_start":76925,"byte_end":76932,"line_start":592,"line_end":592,"column_start":5,"column_end":12}},{"value":"/ use futures::future::{Future, TryFuture, TryFutureExt};","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\future\\try_future\\mod.rs","byte_start":76937,"byte_end":76996,"line_start":593,"line_end":593,"column_start":5,"column_end":64}},{"value":"/","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\future\\try_future\\mod.rs","byte_start":77001,"byte_end":77004,"line_start":594,"line_end":594,"column_start":5,"column_end":8}},{"value":"/ # type T = i32;","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\future\\try_future\\mod.rs","byte_start":77009,"byte_end":77028,"line_start":595,"line_end":595,"column_start":5,"column_end":24}},{"value":"/ # type E = ();","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\future\\try_future\\mod.rs","byte_start":77033,"byte_end":77051,"line_start":596,"line_end":596,"column_start":5,"column_end":23}},{"value":"/ fn make_try_future() -> impl TryFuture<Ok = T, Error = E> { // ... }","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\future\\try_future\\mod.rs","byte_start":77056,"byte_end":77128,"line_start":597,"line_end":597,"column_start":5,"column_end":77}},{"value":"/ # async { Ok::<i32, ()>(1) }","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\future\\try_future\\mod.rs","byte_start":77133,"byte_end":77165,"line_start":598,"line_end":598,"column_start":5,"column_end":37}},{"value":"/ # }","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\future\\try_future\\mod.rs","byte_start":77170,"byte_end":77177,"line_start":599,"line_end":599,"column_start":5,"column_end":12}},{"value":"/ fn take_future(future: impl Future<Output = Result<T, E>>) { /* ... */ }","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\future\\try_future\\mod.rs","byte_start":77182,"byte_end":77258,"line_start":600,"line_end":600,"column_start":5,"column_end":81}},{"value":"/","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\future\\try_future\\mod.rs","byte_start":77263,"byte_end":77266,"line_start":601,"line_end":601,"column_start":5,"column_end":8}},{"value":"/ take_future(make_try_future().into_future());","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\future\\try_future\\mod.rs","byte_start":77271,"byte_end":77320,"line_start":602,"line_end":602,"column_start":5,"column_end":54}},{"value":"/ ```","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\future\\try_future\\mod.rs","byte_start":77325,"byte_end":77332,"line_start":603,"line_end":603,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":773},"span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\future\\try_future\\mod.rs","byte_start":77610,"byte_end":77624,"line_start":613,"line_end":613,"column_start":8,"column_end":22},"name":"try_poll_unpin","qualname":"::future::try_future::TryFutureExt::try_poll_unpin","value":"pub fn try_poll_unpin(&mut Self, &mut Context)\n-> Poll<Result<Self::Ok, Self::Error>> where Self: Unpin","parent":{"krate":0,"index":741},"children":[],"decl_id":null,"docs":" A convenience method for calling [`TryFuture::try_poll`] on [`Unpin`]\n future types.\n","sig":null,"attributes":[{"value":"/ A convenience method for calling [`TryFuture::try_poll`] on [`Unpin`]","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\future\\try_future\\mod.rs","byte_start":77507,"byte_end":77580,"line_start":611,"line_end":611,"column_start":5,"column_end":78}},{"value":"/ future types.","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\future\\try_future\\mod.rs","byte_start":77585,"byte_end":77602,"line_start":612,"line_end":612,"column_start":5,"column_end":22}}]},{"kind":"Struct","id":{"krate":0,"index":11719},"span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\future\\lazy.rs","byte_start":85793,"byte_end":85797,"line_start":9,"line_end":9,"column_start":12,"column_end":16},"name":"Lazy","qualname":"::future::lazy::Lazy","value":"Lazy {  }","parent":null,"children":[{"krate":0,"index":11721}],"decl_id":null,"docs":" Future for the [`lazy`] function.\n","sig":null,"attributes":[{"value":"/ Future for the [`lazy`] function.","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\future\\lazy.rs","byte_start":85659,"byte_end":85696,"line_start":6,"line_end":6,"column_start":1,"column_end":38}},{"value":"must_use = \"futures do nothing unless you `.await` or poll them\"","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\future\\lazy.rs","byte_start":85714,"byte_end":85781,"line_start":8,"line_end":8,"column_start":1,"column_end":68}}]},{"kind":"Function","id":{"krate":0,"index":843},"span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\future\\lazy.rs","byte_start":86339,"byte_end":86343,"line_start":35,"line_end":35,"column_start":8,"column_end":12},"name":"lazy","qualname":"::future::lazy::lazy","value":"pub fn lazy<F, R>(F) -> Lazy<F> where F: FnOnce(&mut Context) -> R","parent":null,"children":[],"decl_id":null,"docs":" Creates a new future that allows delayed execution of a closure.","sig":null,"attributes":[{"value":"/ Creates a new future that allows delayed execution of a closure.","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\future\\lazy.rs","byte_start":85902,"byte_end":85970,"line_start":16,"line_end":16,"column_start":1,"column_end":69}},{"value":"/","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\future\\lazy.rs","byte_start":85971,"byte_end":85974,"line_start":17,"line_end":17,"column_start":1,"column_end":4}},{"value":"/ The provided closure is only run once the future is polled.","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\future\\lazy.rs","byte_start":85975,"byte_end":86038,"line_start":18,"line_end":18,"column_start":1,"column_end":64}},{"value":"/","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\future\\lazy.rs","byte_start":86039,"byte_end":86042,"line_start":19,"line_end":19,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\future\\lazy.rs","byte_start":86043,"byte_end":86057,"line_start":20,"line_end":20,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\future\\lazy.rs","byte_start":86058,"byte_end":86061,"line_start":21,"line_end":21,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\future\\lazy.rs","byte_start":86062,"byte_end":86069,"line_start":22,"line_end":22,"column_start":1,"column_end":8}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\future\\lazy.rs","byte_start":86070,"byte_end":86111,"line_start":23,"line_end":23,"column_start":1,"column_end":42}},{"value":"/ use futures::future;","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\future\\lazy.rs","byte_start":86112,"byte_end":86136,"line_start":24,"line_end":24,"column_start":1,"column_end":25}},{"value":"/","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\future\\lazy.rs","byte_start":86137,"byte_end":86140,"line_start":25,"line_end":25,"column_start":1,"column_end":4}},{"value":"/ let a = future::lazy(|_| 1);","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\future\\lazy.rs","byte_start":86141,"byte_end":86173,"line_start":26,"line_end":26,"column_start":1,"column_end":33}},{"value":"/ assert_eq!(a.await, 1);","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\future\\lazy.rs","byte_start":86174,"byte_end":86201,"line_start":27,"line_end":27,"column_start":1,"column_end":28}},{"value":"/","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\future\\lazy.rs","byte_start":86202,"byte_end":86205,"line_start":28,"line_end":28,"column_start":1,"column_end":4}},{"value":"/ let b = future::lazy(|_| -> i32 {","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\future\\lazy.rs","byte_start":86206,"byte_end":86243,"line_start":29,"line_end":29,"column_start":1,"column_end":38}},{"value":"/     panic!(\"oh no!\")","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\future\\lazy.rs","byte_start":86244,"byte_end":86268,"line_start":30,"line_end":30,"column_start":1,"column_end":25}},{"value":"/ });","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\future\\lazy.rs","byte_start":86269,"byte_end":86276,"line_start":31,"line_end":31,"column_start":1,"column_end":8}},{"value":"/ drop(b); // closure is never run","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\future\\lazy.rs","byte_start":86277,"byte_end":86313,"line_start":32,"line_end":32,"column_start":1,"column_end":37}},{"value":"/ # });","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\future\\lazy.rs","byte_start":86314,"byte_end":86323,"line_start":33,"line_end":33,"column_start":1,"column_end":10}},{"value":"/ ```","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\future\\lazy.rs","byte_start":86324,"byte_end":86331,"line_start":34,"line_end":34,"column_start":1,"column_end":8}}]},{"kind":"Struct","id":{"krate":0,"index":11725},"span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\future\\pending.rs","byte_start":87170,"byte_end":87177,"line_start":10,"line_end":10,"column_start":12,"column_end":19},"name":"Pending","qualname":"::future::pending::Pending","value":"Pending {  }","parent":null,"children":[{"krate":0,"index":11727}],"decl_id":null,"docs":" Future for the [`pending()`] function.\n","sig":null,"attributes":[{"value":"/ Future for the [`pending()`] function.","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\future\\pending.rs","byte_start":87031,"byte_end":87073,"line_start":7,"line_end":7,"column_start":1,"column_end":43}},{"value":"must_use = \"futures do nothing unless you `.await` or poll them\"","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\future\\pending.rs","byte_start":87091,"byte_end":87158,"line_start":9,"line_end":9,"column_start":1,"column_end":68}}]},{"kind":"Function","id":{"krate":0,"index":889},"span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\future\\pending.rs","byte_start":87696,"byte_end":87703,"line_start":36,"line_end":36,"column_start":8,"column_end":15},"name":"pending","qualname":"::future::pending::pending","value":"pub fn pending<T>() -> Pending<T>","parent":null,"children":[],"decl_id":null,"docs":" Creates a future which never resolves, representing a computation that never\n finishes.","sig":null,"attributes":[{"value":"/ Creates a future which never resolves, representing a computation that never","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\future\\pending.rs","byte_start":87318,"byte_end":87398,"line_start":20,"line_end":20,"column_start":1,"column_end":81}},{"value":"/ finishes.","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\future\\pending.rs","byte_start":87399,"byte_end":87412,"line_start":21,"line_end":21,"column_start":1,"column_end":14}},{"value":"/","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\future\\pending.rs","byte_start":87413,"byte_end":87416,"line_start":22,"line_end":22,"column_start":1,"column_end":4}},{"value":"/ The returned future will forever return [`Poll::Pending`].","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\future\\pending.rs","byte_start":87417,"byte_end":87479,"line_start":23,"line_end":23,"column_start":1,"column_end":63}},{"value":"/","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\future\\pending.rs","byte_start":87480,"byte_end":87483,"line_start":24,"line_end":24,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\future\\pending.rs","byte_start":87484,"byte_end":87498,"line_start":25,"line_end":25,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\future\\pending.rs","byte_start":87499,"byte_end":87502,"line_start":26,"line_end":26,"column_start":1,"column_end":4}},{"value":"/ ```ignore","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\future\\pending.rs","byte_start":87503,"byte_end":87516,"line_start":27,"line_end":27,"column_start":1,"column_end":14}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\future\\pending.rs","byte_start":87517,"byte_end":87558,"line_start":28,"line_end":28,"column_start":1,"column_end":42}},{"value":"/ use futures::future;","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\future\\pending.rs","byte_start":87559,"byte_end":87583,"line_start":29,"line_end":29,"column_start":1,"column_end":25}},{"value":"/","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\future\\pending.rs","byte_start":87584,"byte_end":87587,"line_start":30,"line_end":30,"column_start":1,"column_end":4}},{"value":"/ let future = future::pending();","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\future\\pending.rs","byte_start":87588,"byte_end":87623,"line_start":31,"line_end":31,"column_start":1,"column_end":36}},{"value":"/ let () = future.await;","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\future\\pending.rs","byte_start":87624,"byte_end":87650,"line_start":32,"line_end":32,"column_start":1,"column_end":27}},{"value":"/ unreachable!();","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\future\\pending.rs","byte_start":87651,"byte_end":87670,"line_start":33,"line_end":33,"column_start":1,"column_end":20}},{"value":"/ # });","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\future\\pending.rs","byte_start":87671,"byte_end":87680,"line_start":34,"line_end":34,"column_start":1,"column_end":10}},{"value":"/ ```","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\future\\pending.rs","byte_start":87681,"byte_end":87688,"line_start":35,"line_end":35,"column_start":1,"column_end":8}}]},{"kind":"TupleVariant","id":{"krate":0,"index":11733},"span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\future\\maybe_done.rs","byte_start":88475,"byte_end":88481,"line_start":16,"line_end":16,"column_start":5,"column_end":11},"name":"Future","qualname":"::future::maybe_done::MaybeDone::Future","value":"MaybeDone::Future(Fut)","parent":{"krate":0,"index":11731},"children":[],"decl_id":null,"docs":" A not-yet-completed future\n","sig":null,"attributes":[{"value":"/ A not-yet-completed future","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\future\\maybe_done.rs","byte_start":88440,"byte_end":88470,"line_start":15,"line_end":15,"column_start":5,"column_end":35}}]},{"kind":"TupleVariant","id":{"krate":0,"index":11736},"span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\future\\maybe_done.rs","byte_start":88548,"byte_end":88552,"line_start":18,"line_end":18,"column_start":5,"column_end":9},"name":"Done","qualname":"::future::maybe_done::MaybeDone::Done","value":"MaybeDone::Done(Fut::Output)","parent":{"krate":0,"index":11731},"children":[],"decl_id":null,"docs":" The output of the completed future\n","sig":null,"attributes":[{"value":"/ The output of the completed future","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\future\\maybe_done.rs","byte_start":88505,"byte_end":88543,"line_start":17,"line_end":17,"column_start":5,"column_end":43}}]},{"kind":"TupleVariant","id":{"krate":0,"index":11739},"span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\future\\maybe_done.rs","byte_start":88714,"byte_end":88718,"line_start":21,"line_end":21,"column_start":5,"column_end":9},"name":"Gone","qualname":"::future::maybe_done::MaybeDone::Gone","value":"MaybeDone::Gone","parent":{"krate":0,"index":11731},"children":[],"decl_id":null,"docs":" The empty variant after the result of a [`MaybeDone`] has been\n taken using the [`take_output`](MaybeDone::take_output) method.\n","sig":null,"attributes":[{"value":"/ The empty variant after the result of a [`MaybeDone`] has been","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\future\\maybe_done.rs","byte_start":88571,"byte_end":88637,"line_start":19,"line_end":19,"column_start":5,"column_end":71}},{"value":"/ taken using the [`take_output`](MaybeDone::take_output) method.","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\future\\maybe_done.rs","byte_start":88642,"byte_end":88709,"line_start":20,"line_end":20,"column_start":5,"column_end":72}}]},{"kind":"Enum","id":{"krate":0,"index":11731},"span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\future\\maybe_done.rs","byte_start":88411,"byte_end":88420,"line_start":14,"line_end":14,"column_start":10,"column_end":19},"name":"MaybeDone","qualname":"::future::maybe_done::MaybeDone","value":"pub enum MaybeDone<Fut: Future> { Future(Fut), Done(Fut::Output), Gone, }","parent":null,"children":[{"krate":0,"index":11733},{"krate":0,"index":11736},{"krate":0,"index":11739}],"decl_id":null,"docs":" A future that may have completed.","sig":null,"attributes":[{"value":"/ A future that may have completed.","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\future\\maybe_done.rs","byte_start":88289,"byte_end":88326,"line_start":10,"line_end":10,"column_start":1,"column_end":38}},{"value":"/","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\future\\maybe_done.rs","byte_start":88327,"byte_end":88330,"line_start":11,"line_end":11,"column_start":1,"column_end":4}},{"value":"/ This is created by the [`maybe_done()`] function.","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\future\\maybe_done.rs","byte_start":88331,"byte_end":88384,"line_start":12,"line_end":12,"column_start":1,"column_end":54}}]},{"kind":"Function","id":{"krate":0,"index":936},"span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\future\\maybe_done.rs","byte_start":89239,"byte_end":89249,"line_start":43,"line_end":43,"column_start":8,"column_end":18},"name":"maybe_done","qualname":"::future::maybe_done::maybe_done","value":"pub fn maybe_done<Fut: Future>(Fut) -> MaybeDone<Fut>","parent":null,"children":[],"decl_id":null,"docs":" Wraps a future into a `MaybeDone`","sig":null,"attributes":[{"value":"/ Wraps a future into a `MaybeDone`","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\future\\maybe_done.rs","byte_start":88778,"byte_end":88815,"line_start":26,"line_end":26,"column_start":1,"column_end":38}},{"value":"/","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\future\\maybe_done.rs","byte_start":88816,"byte_end":88819,"line_start":27,"line_end":27,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\future\\maybe_done.rs","byte_start":88820,"byte_end":88834,"line_start":28,"line_end":28,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\future\\maybe_done.rs","byte_start":88835,"byte_end":88838,"line_start":29,"line_end":29,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\future\\maybe_done.rs","byte_start":88839,"byte_end":88846,"line_start":30,"line_end":30,"column_start":1,"column_end":8}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\future\\maybe_done.rs","byte_start":88847,"byte_end":88888,"line_start":31,"line_end":31,"column_start":1,"column_end":42}},{"value":"/ use futures::future;","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\future\\maybe_done.rs","byte_start":88889,"byte_end":88913,"line_start":32,"line_end":32,"column_start":1,"column_end":25}},{"value":"/ use futures::pin_mut;","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\future\\maybe_done.rs","byte_start":88914,"byte_end":88939,"line_start":33,"line_end":33,"column_start":1,"column_end":26}},{"value":"/","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\future\\maybe_done.rs","byte_start":88940,"byte_end":88943,"line_start":34,"line_end":34,"column_start":1,"column_end":4}},{"value":"/ let future = future::maybe_done(async { 5 });","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\future\\maybe_done.rs","byte_start":88944,"byte_end":88993,"line_start":35,"line_end":35,"column_start":1,"column_end":50}},{"value":"/ pin_mut!(future);","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\future\\maybe_done.rs","byte_start":88994,"byte_end":89015,"line_start":36,"line_end":36,"column_start":1,"column_end":22}},{"value":"/ assert_eq!(future.as_mut().take_output(), None);","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\future\\maybe_done.rs","byte_start":89016,"byte_end":89068,"line_start":37,"line_end":37,"column_start":1,"column_end":53}},{"value":"/ let () = future.as_mut().await;","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\future\\maybe_done.rs","byte_start":89069,"byte_end":89104,"line_start":38,"line_end":38,"column_start":1,"column_end":36}},{"value":"/ assert_eq!(future.as_mut().take_output(), Some(5));","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\future\\maybe_done.rs","byte_start":89105,"byte_end":89160,"line_start":39,"line_end":39,"column_start":1,"column_end":56}},{"value":"/ assert_eq!(future.as_mut().take_output(), None);","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\future\\maybe_done.rs","byte_start":89161,"byte_end":89213,"line_start":40,"line_end":40,"column_start":1,"column_end":53}},{"value":"/ # });","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\future\\maybe_done.rs","byte_start":89214,"byte_end":89223,"line_start":41,"line_end":41,"column_start":1,"column_end":10}},{"value":"/ ```","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\future\\maybe_done.rs","byte_start":89224,"byte_end":89231,"line_start":42,"line_end":42,"column_start":1,"column_end":8}}]},{"kind":"Method","id":{"krate":0,"index":940},"span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\future\\maybe_done.rs","byte_start":89690,"byte_end":89700,"line_start":53,"line_end":53,"column_start":12,"column_end":22},"name":"output_mut","qualname":"<MaybeDone<Fut>>::output_mut","value":"pub fn output_mut(Pin<&mut Self>) -> Option<&mut Fut::Output>","parent":null,"children":[],"decl_id":null,"docs":" Returns an [`Option`] containing a mutable reference to the output of the future.\n The output of this method will be [`Some`] if and only if the inner\n future has been completed and [`take_output`](MaybeDone::take_output)\n has not yet been called.\n","sig":null,"attributes":[{"value":"/ Returns an [`Option`] containing a mutable reference to the output of the future.","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\future\\maybe_done.rs","byte_start":89392,"byte_end":89477,"line_start":48,"line_end":48,"column_start":5,"column_end":90}},{"value":"/ The output of this method will be [`Some`] if and only if the inner","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\future\\maybe_done.rs","byte_start":89482,"byte_end":89553,"line_start":49,"line_end":49,"column_start":5,"column_end":76}},{"value":"/ future has been completed and [`take_output`](MaybeDone::take_output)","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\future\\maybe_done.rs","byte_start":89558,"byte_end":89631,"line_start":50,"line_end":50,"column_start":5,"column_end":78}},{"value":"/ has not yet been called.","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\future\\maybe_done.rs","byte_start":89636,"byte_end":89664,"line_start":51,"line_end":51,"column_start":5,"column_end":33}},{"value":"inline","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\future\\maybe_done.rs","byte_start":89669,"byte_end":89678,"line_start":52,"line_end":52,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":941},"span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\future\\maybe_done.rs","byte_start":90048,"byte_end":90059,"line_start":65,"line_end":65,"column_start":12,"column_end":23},"name":"take_output","qualname":"<MaybeDone<Fut>>::take_output","value":"pub fn take_output(Pin<&mut Self>) -> Option<Fut::Output>","parent":null,"children":[],"decl_id":null,"docs":" Attempt to take the output of a `MaybeDone` without driving it\n towards completion.\n","sig":null,"attributes":[{"value":"/ Attempt to take the output of a `MaybeDone` without driving it","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\future\\maybe_done.rs","byte_start":89928,"byte_end":89994,"line_start":62,"line_end":62,"column_start":5,"column_end":71}},{"value":"/ towards completion.","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\future\\maybe_done.rs","byte_start":89999,"byte_end":90022,"line_start":63,"line_end":63,"column_start":5,"column_end":28}},{"value":"inline","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\future\\maybe_done.rs","byte_start":90027,"byte_end":90036,"line_start":64,"line_end":64,"column_start":5,"column_end":14}}]},{"kind":"TupleVariant","id":{"krate":0,"index":11746},"span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\future\\try_maybe_done.rs","byte_start":91684,"byte_end":91690,"line_start":16,"line_end":16,"column_start":5,"column_end":11},"name":"Future","qualname":"::future::try_maybe_done::TryMaybeDone::Future","value":"TryMaybeDone::Future(Fut)","parent":{"krate":0,"index":11744},"children":[],"decl_id":null,"docs":" A not-yet-completed future\n","sig":null,"attributes":[{"value":"/ A not-yet-completed future","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\future\\try_maybe_done.rs","byte_start":91649,"byte_end":91679,"line_start":15,"line_end":15,"column_start":5,"column_end":35}}]},{"kind":"TupleVariant","id":{"krate":0,"index":11749},"span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\future\\try_maybe_done.rs","byte_start":91757,"byte_end":91761,"line_start":18,"line_end":18,"column_start":5,"column_end":9},"name":"Done","qualname":"::future::try_maybe_done::TryMaybeDone::Done","value":"TryMaybeDone::Done(Fut::Ok)","parent":{"krate":0,"index":11744},"children":[],"decl_id":null,"docs":" The output of the completed future\n","sig":null,"attributes":[{"value":"/ The output of the completed future","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\future\\try_maybe_done.rs","byte_start":91714,"byte_end":91752,"line_start":17,"line_end":17,"column_start":5,"column_end":43}}]},{"kind":"TupleVariant","id":{"krate":0,"index":11752},"span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\future\\try_maybe_done.rs","byte_start":91969,"byte_end":91973,"line_start":22,"line_end":22,"column_start":5,"column_end":9},"name":"Gone","qualname":"::future::try_maybe_done::TryMaybeDone::Gone","value":"TryMaybeDone::Gone","parent":{"krate":0,"index":11744},"children":[],"decl_id":null,"docs":" The empty variant after the result of a [`TryMaybeDone`] has been\n taken using the [`take_output`](TryMaybeDone::take_output) method,\n or if the future returned an error.\n","sig":null,"attributes":[{"value":"/ The empty variant after the result of a [`TryMaybeDone`] has been","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\future\\try_maybe_done.rs","byte_start":91776,"byte_end":91845,"line_start":19,"line_end":19,"column_start":5,"column_end":74}},{"value":"/ taken using the [`take_output`](TryMaybeDone::take_output) method,","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\future\\try_maybe_done.rs","byte_start":91850,"byte_end":91920,"line_start":20,"line_end":20,"column_start":5,"column_end":75}},{"value":"/ or if the future returned an error.","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\future\\try_maybe_done.rs","byte_start":91925,"byte_end":91964,"line_start":21,"line_end":21,"column_start":5,"column_end":44}}]},{"kind":"Enum","id":{"krate":0,"index":11744},"span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\future\\try_maybe_done.rs","byte_start":91614,"byte_end":91626,"line_start":14,"line_end":14,"column_start":10,"column_end":22},"name":"TryMaybeDone","qualname":"::future::try_maybe_done::TryMaybeDone","value":"pub enum TryMaybeDone<Fut: TryFuture> { Future(Fut), Done(Fut::Ok), Gone, }","parent":null,"children":[{"krate":0,"index":11746},{"krate":0,"index":11749},{"krate":0,"index":11752}],"decl_id":null,"docs":" A future that may have completed with an error.","sig":null,"attributes":[{"value":"/ A future that may have completed with an error.","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\future\\try_maybe_done.rs","byte_start":91474,"byte_end":91525,"line_start":10,"line_end":10,"column_start":1,"column_end":52}},{"value":"/","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\future\\try_maybe_done.rs","byte_start":91526,"byte_end":91529,"line_start":11,"line_end":11,"column_start":1,"column_end":4}},{"value":"/ This is created by the [`try_maybe_done()`] function.","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\future\\try_maybe_done.rs","byte_start":91530,"byte_end":91587,"line_start":12,"line_end":12,"column_start":1,"column_end":58}}]},{"kind":"Function","id":{"krate":0,"index":988},"span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\future\\try_maybe_done.rs","byte_start":92087,"byte_end":92101,"line_start":28,"line_end":28,"column_start":8,"column_end":22},"name":"try_maybe_done","qualname":"::future::try_maybe_done::try_maybe_done","value":"pub fn try_maybe_done<Fut: TryFuture>(Fut) -> TryMaybeDone<Fut>","parent":null,"children":[],"decl_id":null,"docs":" Wraps a future into a `TryMaybeDone`\n","sig":null,"attributes":[{"value":"/ Wraps a future into a `TryMaybeDone`","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\future\\try_maybe_done.rs","byte_start":92039,"byte_end":92079,"line_start":27,"line_end":27,"column_start":1,"column_end":41}}]},{"kind":"Method","id":{"krate":0,"index":992},"span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\future\\try_maybe_done.rs","byte_start":92588,"byte_end":92598,"line_start":38,"line_end":38,"column_start":12,"column_end":22},"name":"output_mut","qualname":"<TryMaybeDone<Fut>>::output_mut","value":"pub fn output_mut(Pin<&mut Self>) -> Option<&mut Fut::Ok>","parent":null,"children":[],"decl_id":null,"docs":" Returns an [`Option`] containing a mutable reference to the output of the future.\n The output of this method will be [`Some`] if and only if the inner\n future has completed successfully and [`take_output`](TryMaybeDone::take_output)\n has not yet been called.\n","sig":null,"attributes":[{"value":"/ Returns an [`Option`] containing a mutable reference to the output of the future.","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\future\\try_maybe_done.rs","byte_start":92279,"byte_end":92364,"line_start":33,"line_end":33,"column_start":5,"column_end":90}},{"value":"/ The output of this method will be [`Some`] if and only if the inner","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\future\\try_maybe_done.rs","byte_start":92369,"byte_end":92440,"line_start":34,"line_end":34,"column_start":5,"column_end":76}},{"value":"/ future has completed successfully and [`take_output`](TryMaybeDone::take_output)","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\future\\try_maybe_done.rs","byte_start":92445,"byte_end":92529,"line_start":35,"line_end":35,"column_start":5,"column_end":89}},{"value":"/ has not yet been called.","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\future\\try_maybe_done.rs","byte_start":92534,"byte_end":92562,"line_start":36,"line_end":36,"column_start":5,"column_end":33}},{"value":"inline","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\future\\try_maybe_done.rs","byte_start":92567,"byte_end":92576,"line_start":37,"line_end":37,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":993},"span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\future\\try_maybe_done.rs","byte_start":92948,"byte_end":92959,"line_start":50,"line_end":50,"column_start":12,"column_end":23},"name":"take_output","qualname":"<TryMaybeDone<Fut>>::take_output","value":"pub fn take_output(Pin<&mut Self>) -> Option<Fut::Ok>","parent":null,"children":[],"decl_id":null,"docs":" Attempt to take the output of a `TryMaybeDone` without driving it\n towards completion.\n","sig":null,"attributes":[{"value":"/ Attempt to take the output of a `TryMaybeDone` without driving it","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\future\\try_maybe_done.rs","byte_start":92825,"byte_end":92894,"line_start":47,"line_end":47,"column_start":5,"column_end":74}},{"value":"/ towards completion.","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\future\\try_maybe_done.rs","byte_start":92899,"byte_end":92922,"line_start":48,"line_end":48,"column_start":5,"column_end":28}},{"value":"inline","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\future\\try_maybe_done.rs","byte_start":92927,"byte_end":92936,"line_start":49,"line_end":49,"column_start":5,"column_end":14}}]},{"kind":"Struct","id":{"krate":0,"index":11757},"span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\future\\option.rs","byte_start":95170,"byte_end":95182,"line_start":28,"line_end":28,"column_start":16,"column_end":28},"name":"OptionFuture","qualname":"::future::option::OptionFuture","value":"OptionFuture {  }","parent":null,"children":[{"krate":0,"index":11759}],"decl_id":null,"docs":" A future representing a value which may or may not be present.","sig":null,"attributes":[{"value":"must_use = \"futures do nothing unless you `.await` or poll them\"","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pin-project-lite-0.2.9\\src\\lib.rs","byte_start":14239710,"byte_end":14239719,"line_start":633,"line_end":633,"column_start":11,"column_end":20}}]},{"kind":"Struct","id":{"krate":0,"index":1065},"span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\future\\poll_fn.rs","byte_start":96300,"byte_end":96306,"line_start":11,"line_end":11,"column_start":12,"column_end":18},"name":"PollFn","qualname":"::future::poll_fn::PollFn","value":"PollFn {  }","parent":null,"children":[{"krate":0,"index":1067}],"decl_id":null,"docs":" Future for the [`poll_fn`] function.\n","sig":null,"attributes":[{"value":"/ Future for the [`poll_fn`] function.","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\future\\poll_fn.rs","byte_start":96180,"byte_end":96220,"line_start":9,"line_end":9,"column_start":1,"column_end":41}},{"value":"must_use = \"futures do nothing unless you `.await` or poll them\"","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\future\\poll_fn.rs","byte_start":96221,"byte_end":96288,"line_start":10,"line_end":10,"column_start":1,"column_end":68}}]},{"kind":"Function","id":{"krate":0,"index":1070},"span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\future\\poll_fn.rs","byte_start":96893,"byte_end":96900,"line_start":36,"line_end":36,"column_start":8,"column_end":15},"name":"poll_fn","qualname":"::future::poll_fn::poll_fn","value":"pub fn poll_fn<T, F>(F) -> PollFn<F> where F: FnMut(&mut Context) -> Poll<T>","parent":null,"children":[],"decl_id":null,"docs":" Creates a new future wrapping around a function returning [`Poll`].","sig":null,"attributes":[{"value":"/ Creates a new future wrapping around a function returning [`Poll`].","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\future\\poll_fn.rs","byte_start":96357,"byte_end":96428,"line_start":17,"line_end":17,"column_start":1,"column_end":72}},{"value":"/","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\future\\poll_fn.rs","byte_start":96429,"byte_end":96432,"line_start":18,"line_end":18,"column_start":1,"column_end":4}},{"value":"/ Polling the returned future delegates to the wrapped function.","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\future\\poll_fn.rs","byte_start":96433,"byte_end":96499,"line_start":19,"line_end":19,"column_start":1,"column_end":67}},{"value":"/","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\future\\poll_fn.rs","byte_start":96500,"byte_end":96503,"line_start":20,"line_end":20,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\future\\poll_fn.rs","byte_start":96504,"byte_end":96518,"line_start":21,"line_end":21,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\future\\poll_fn.rs","byte_start":96519,"byte_end":96522,"line_start":22,"line_end":22,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\future\\poll_fn.rs","byte_start":96523,"byte_end":96530,"line_start":23,"line_end":23,"column_start":1,"column_end":8}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\future\\poll_fn.rs","byte_start":96531,"byte_end":96572,"line_start":24,"line_end":24,"column_start":1,"column_end":42}},{"value":"/ use futures::future::poll_fn;","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\future\\poll_fn.rs","byte_start":96573,"byte_end":96606,"line_start":25,"line_end":25,"column_start":1,"column_end":34}},{"value":"/ use futures::task::{Context, Poll};","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\future\\poll_fn.rs","byte_start":96607,"byte_end":96646,"line_start":26,"line_end":26,"column_start":1,"column_end":40}},{"value":"/","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\future\\poll_fn.rs","byte_start":96647,"byte_end":96650,"line_start":27,"line_end":27,"column_start":1,"column_end":4}},{"value":"/ fn read_line(_cx: &mut Context<'_>) -> Poll<String> {","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\future\\poll_fn.rs","byte_start":96651,"byte_end":96708,"line_start":28,"line_end":28,"column_start":1,"column_end":58}},{"value":"/     Poll::Ready(\"Hello, World!\".into())","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\future\\poll_fn.rs","byte_start":96709,"byte_end":96752,"line_start":29,"line_end":29,"column_start":1,"column_end":44}},{"value":"/ }","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\future\\poll_fn.rs","byte_start":96753,"byte_end":96758,"line_start":30,"line_end":30,"column_start":1,"column_end":6}},{"value":"/","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\future\\poll_fn.rs","byte_start":96759,"byte_end":96762,"line_start":31,"line_end":31,"column_start":1,"column_end":4}},{"value":"/ let read_future = poll_fn(read_line);","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\future\\poll_fn.rs","byte_start":96763,"byte_end":96804,"line_start":32,"line_end":32,"column_start":1,"column_end":42}},{"value":"/ assert_eq!(read_future.await, \"Hello, World!\".to_owned());","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\future\\poll_fn.rs","byte_start":96805,"byte_end":96867,"line_start":33,"line_end":33,"column_start":1,"column_end":63}},{"value":"/ # });","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\future\\poll_fn.rs","byte_start":96868,"byte_end":96877,"line_start":34,"line_end":34,"column_start":1,"column_end":10}},{"value":"/ ```","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\future\\poll_fn.rs","byte_start":96878,"byte_end":96885,"line_start":35,"line_end":35,"column_start":1,"column_end":8}}]},{"kind":"Struct","id":{"krate":0,"index":11796},"span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\future\\poll_immediate.rs","byte_start":97834,"byte_end":97847,"line_start":13,"line_end":13,"column_start":16,"column_end":29},"name":"PollImmediate","qualname":"::future::poll_immediate::PollImmediate","value":"PollImmediate {  }","parent":null,"children":[{"krate":0,"index":11798}],"decl_id":null,"docs":" Future for the [`poll_immediate`](poll_immediate()) function.","sig":null,"attributes":[{"value":"must_use = \"futures do nothing unless you `.await` or poll them\"","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pin-project-lite-0.2.9\\src\\lib.rs","byte_start":14239710,"byte_end":14239719,"line_start":633,"line_end":633,"column_start":11,"column_end":20}}]},{"kind":"Function","id":{"krate":0,"index":1129},"span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\future\\poll_immediate.rs","byte_start":101255,"byte_end":101269,"line_start":124,"line_end":124,"column_start":8,"column_end":22},"name":"poll_immediate","qualname":"::future::poll_immediate::poll_immediate","value":"pub fn poll_immediate<F: Future>(F) -> PollImmediate<F>","parent":null,"children":[],"decl_id":null,"docs":" Creates a future that is immediately ready with an Option of a value.\n Specifically this means that [poll](core::future::Future::poll()) always returns [Poll::Ready](core::task::Poll::Ready).","sig":null,"attributes":[{"value":"/ Creates a future that is immediately ready with an Option of a value.","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\future\\poll_immediate.rs","byte_start":100067,"byte_end":100140,"line_start":89,"line_end":89,"column_start":1,"column_end":74}},{"value":"/ Specifically this means that [poll](core::future::Future::poll()) always returns [Poll::Ready](core::task::Poll::Ready).","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\future\\poll_immediate.rs","byte_start":100141,"byte_end":100265,"line_start":90,"line_end":90,"column_start":1,"column_end":125}},{"value":"/","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\future\\poll_immediate.rs","byte_start":100266,"byte_end":100269,"line_start":91,"line_end":91,"column_start":1,"column_end":4}},{"value":"/ # Caution","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\future\\poll_immediate.rs","byte_start":100270,"byte_end":100283,"line_start":92,"line_end":92,"column_start":1,"column_end":14}},{"value":"/","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\future\\poll_immediate.rs","byte_start":100284,"byte_end":100287,"line_start":93,"line_end":93,"column_start":1,"column_end":4}},{"value":"/ When consuming the future by this function, note the following:","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\future\\poll_immediate.rs","byte_start":100288,"byte_end":100355,"line_start":94,"line_end":94,"column_start":1,"column_end":68}},{"value":"/","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\future\\poll_immediate.rs","byte_start":100356,"byte_end":100359,"line_start":95,"line_end":95,"column_start":1,"column_end":4}},{"value":"/ - This function does not guarantee that the future will run to completion, so it is generally incompatible with passing the non-cancellation-safe future by value.","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\future\\poll_immediate.rs","byte_start":100360,"byte_end":100526,"line_start":96,"line_end":96,"column_start":1,"column_end":167}},{"value":"/ - Even if the future is cancellation-safe, creating and dropping new futures frequently may lead to performance problems.","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\future\\poll_immediate.rs","byte_start":100527,"byte_end":100652,"line_start":97,"line_end":97,"column_start":1,"column_end":126}},{"value":"/","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\future\\poll_immediate.rs","byte_start":100653,"byte_end":100656,"line_start":98,"line_end":98,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\future\\poll_immediate.rs","byte_start":100657,"byte_end":100671,"line_start":99,"line_end":99,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\future\\poll_immediate.rs","byte_start":100672,"byte_end":100675,"line_start":100,"line_end":100,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\future\\poll_immediate.rs","byte_start":100676,"byte_end":100683,"line_start":101,"line_end":101,"column_start":1,"column_end":8}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\future\\poll_immediate.rs","byte_start":100684,"byte_end":100725,"line_start":102,"line_end":102,"column_start":1,"column_end":42}},{"value":"/ use futures::future;","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\future\\poll_immediate.rs","byte_start":100726,"byte_end":100750,"line_start":103,"line_end":103,"column_start":1,"column_end":25}},{"value":"/","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\future\\poll_immediate.rs","byte_start":100751,"byte_end":100754,"line_start":104,"line_end":104,"column_start":1,"column_end":4}},{"value":"/ let r = future::poll_immediate(async { 1_u32 });","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\future\\poll_immediate.rs","byte_start":100755,"byte_end":100807,"line_start":105,"line_end":105,"column_start":1,"column_end":53}},{"value":"/ assert_eq!(r.await, Some(1));","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\future\\poll_immediate.rs","byte_start":100808,"byte_end":100841,"line_start":106,"line_end":106,"column_start":1,"column_end":34}},{"value":"/","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\future\\poll_immediate.rs","byte_start":100842,"byte_end":100845,"line_start":107,"line_end":107,"column_start":1,"column_end":4}},{"value":"/ let p = future::poll_immediate(future::pending::<i32>());","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\future\\poll_immediate.rs","byte_start":100846,"byte_end":100907,"line_start":108,"line_end":108,"column_start":1,"column_end":62}},{"value":"/ assert_eq!(p.await, None);","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\future\\poll_immediate.rs","byte_start":100908,"byte_end":100938,"line_start":109,"line_end":109,"column_start":1,"column_end":31}},{"value":"/ # });","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\future\\poll_immediate.rs","byte_start":100939,"byte_end":100948,"line_start":110,"line_end":110,"column_start":1,"column_end":10}},{"value":"/ ```","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\future\\poll_immediate.rs","byte_start":100949,"byte_end":100956,"line_start":111,"line_end":111,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\future\\poll_immediate.rs","byte_start":100957,"byte_end":100960,"line_start":112,"line_end":112,"column_start":1,"column_end":4}},{"value":"/ ### Reusing a future","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\future\\poll_immediate.rs","byte_start":100961,"byte_end":100985,"line_start":113,"line_end":113,"column_start":1,"column_end":25}},{"value":"/","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\future\\poll_immediate.rs","byte_start":100986,"byte_end":100989,"line_start":114,"line_end":114,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\future\\poll_immediate.rs","byte_start":100990,"byte_end":100997,"line_start":115,"line_end":115,"column_start":1,"column_end":8}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\future\\poll_immediate.rs","byte_start":100998,"byte_end":101039,"line_start":116,"line_end":116,"column_start":1,"column_end":42}},{"value":"/ use futures::{future, pin_mut};","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\future\\poll_immediate.rs","byte_start":101040,"byte_end":101075,"line_start":117,"line_end":117,"column_start":1,"column_end":36}},{"value":"/ let f = async {futures::pending!(); 42_u8};","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\future\\poll_immediate.rs","byte_start":101076,"byte_end":101123,"line_start":118,"line_end":118,"column_start":1,"column_end":48}},{"value":"/ pin_mut!(f);","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\future\\poll_immediate.rs","byte_start":101124,"byte_end":101140,"line_start":119,"line_end":119,"column_start":1,"column_end":17}},{"value":"/ assert_eq!(None, future::poll_immediate(&mut f).await);","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\future\\poll_immediate.rs","byte_start":101141,"byte_end":101200,"line_start":120,"line_end":120,"column_start":1,"column_end":60}},{"value":"/ assert_eq!(42, f.await);","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\future\\poll_immediate.rs","byte_start":101201,"byte_end":101229,"line_start":121,"line_end":121,"column_start":1,"column_end":29}},{"value":"/ # });","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\future\\poll_immediate.rs","byte_start":101230,"byte_end":101239,"line_start":122,"line_end":122,"column_start":1,"column_end":10}},{"value":"/ ```","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\future\\poll_immediate.rs","byte_start":101240,"byte_end":101247,"line_start":123,"line_end":123,"column_start":1,"column_end":8}}]},{"kind":"Struct","id":{"krate":0,"index":11835},"span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\future\\ready.rs","byte_start":101692,"byte_end":101697,"line_start":9,"line_end":9,"column_start":12,"column_end":17},"name":"Ready","qualname":"::future::ready::Ready","value":"","parent":null,"children":[],"decl_id":null,"docs":" Future for the [`ready`](ready()) function.\n","sig":null,"attributes":[{"value":"/ Future for the [`ready`](ready()) function.","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\future\\ready.rs","byte_start":101541,"byte_end":101588,"line_start":6,"line_end":6,"column_start":1,"column_end":48}},{"value":"must_use = \"futures do nothing unless you `.await` or poll them\"","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\future\\ready.rs","byte_start":101613,"byte_end":101680,"line_start":8,"line_end":8,"column_start":1,"column_end":68}}]},{"kind":"Method","id":{"krate":0,"index":1161},"span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\future\\ready.rs","byte_start":101820,"byte_end":101830,"line_start":14,"line_end":14,"column_start":12,"column_end":22},"name":"into_inner","qualname":"<Ready<T>>::into_inner","value":"pub fn into_inner(Self) -> T","parent":null,"children":[],"decl_id":null,"docs":" Unwraps the value from this immediately ready future.\n","sig":null,"attributes":[{"value":"/ Unwraps the value from this immediately ready future.","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\future\\ready.rs","byte_start":101737,"byte_end":101794,"line_start":12,"line_end":12,"column_start":5,"column_end":62}},{"value":"inline","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\future\\ready.rs","byte_start":101799,"byte_end":101808,"line_start":13,"line_end":13,"column_start":5,"column_end":14}}]},{"kind":"Function","id":{"krate":0,"index":1171},"span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\future\\ready.rs","byte_start":102496,"byte_end":102501,"line_start":48,"line_end":48,"column_start":8,"column_end":13},"name":"ready","qualname":"::future::ready::ready","value":"pub fn ready<T>(T) -> Ready<T>","parent":null,"children":[],"decl_id":null,"docs":" Creates a future that is immediately ready with a value.","sig":null,"attributes":[{"value":"/ Creates a future that is immediately ready with a value.","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\future\\ready.rs","byte_start":102250,"byte_end":102310,"line_start":36,"line_end":36,"column_start":1,"column_end":61}},{"value":"/","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\future\\ready.rs","byte_start":102311,"byte_end":102314,"line_start":37,"line_end":37,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\future\\ready.rs","byte_start":102315,"byte_end":102329,"line_start":38,"line_end":38,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\future\\ready.rs","byte_start":102330,"byte_end":102333,"line_start":39,"line_end":39,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\future\\ready.rs","byte_start":102334,"byte_end":102341,"line_start":40,"line_end":40,"column_start":1,"column_end":8}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\future\\ready.rs","byte_start":102342,"byte_end":102383,"line_start":41,"line_end":41,"column_start":1,"column_end":42}},{"value":"/ use futures::future;","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\future\\ready.rs","byte_start":102384,"byte_end":102408,"line_start":42,"line_end":42,"column_start":1,"column_end":25}},{"value":"/","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\future\\ready.rs","byte_start":102409,"byte_end":102412,"line_start":43,"line_end":43,"column_start":1,"column_end":4}},{"value":"/ let a = future::ready(1);","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\future\\ready.rs","byte_start":102413,"byte_end":102442,"line_start":44,"line_end":44,"column_start":1,"column_end":30}},{"value":"/ assert_eq!(a.await, 1);","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\future\\ready.rs","byte_start":102443,"byte_end":102470,"line_start":45,"line_end":45,"column_start":1,"column_end":28}},{"value":"/ # });","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\future\\ready.rs","byte_start":102471,"byte_end":102480,"line_start":46,"line_end":46,"column_start":1,"column_end":10}},{"value":"/ ```","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\future\\ready.rs","byte_start":102481,"byte_end":102488,"line_start":47,"line_end":47,"column_start":1,"column_end":8}}]},{"kind":"Function","id":{"krate":0,"index":1173},"span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\future\\ready.rs","byte_start":102836,"byte_end":102838,"line_start":64,"line_end":64,"column_start":8,"column_end":10},"name":"ok","qualname":"::future::ready::ok","value":"pub fn ok<T, E>(T) -> Ready<Result<T, E>>","parent":null,"children":[],"decl_id":null,"docs":" Create a future that is immediately ready with a success value.","sig":null,"attributes":[{"value":"/ Create a future that is immediately ready with a success value.","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\future\\ready.rs","byte_start":102570,"byte_end":102637,"line_start":52,"line_end":52,"column_start":1,"column_end":68}},{"value":"/","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\future\\ready.rs","byte_start":102638,"byte_end":102641,"line_start":53,"line_end":53,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\future\\ready.rs","byte_start":102642,"byte_end":102656,"line_start":54,"line_end":54,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\future\\ready.rs","byte_start":102657,"byte_end":102660,"line_start":55,"line_end":55,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\future\\ready.rs","byte_start":102661,"byte_end":102668,"line_start":56,"line_end":56,"column_start":1,"column_end":8}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\future\\ready.rs","byte_start":102669,"byte_end":102710,"line_start":57,"line_end":57,"column_start":1,"column_end":42}},{"value":"/ use futures::future;","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\future\\ready.rs","byte_start":102711,"byte_end":102735,"line_start":58,"line_end":58,"column_start":1,"column_end":25}},{"value":"/","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\future\\ready.rs","byte_start":102736,"byte_end":102739,"line_start":59,"line_end":59,"column_start":1,"column_end":4}},{"value":"/ let a = future::ok::<i32, i32>(1);","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\future\\ready.rs","byte_start":102740,"byte_end":102778,"line_start":60,"line_end":60,"column_start":1,"column_end":39}},{"value":"/ assert_eq!(a.await, Ok(1));","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\future\\ready.rs","byte_start":102779,"byte_end":102810,"line_start":61,"line_end":61,"column_start":1,"column_end":32}},{"value":"/ # });","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\future\\ready.rs","byte_start":102811,"byte_end":102820,"line_start":62,"line_end":62,"column_start":1,"column_end":10}},{"value":"/ ```","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\future\\ready.rs","byte_start":102821,"byte_end":102828,"line_start":63,"line_end":63,"column_start":1,"column_end":8}}]},{"kind":"Function","id":{"krate":0,"index":1176},"span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\future\\ready.rs","byte_start":103169,"byte_end":103172,"line_start":80,"line_end":80,"column_start":8,"column_end":11},"name":"err","qualname":"::future::ready::err","value":"pub fn err<T, E>(E) -> Ready<Result<T, E>>","parent":null,"children":[],"decl_id":null,"docs":" Create a future that is immediately ready with an error value.","sig":null,"attributes":[{"value":"/ Create a future that is immediately ready with an error value.","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\future\\ready.rs","byte_start":102902,"byte_end":102968,"line_start":68,"line_end":68,"column_start":1,"column_end":67}},{"value":"/","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\future\\ready.rs","byte_start":102969,"byte_end":102972,"line_start":69,"line_end":69,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\future\\ready.rs","byte_start":102973,"byte_end":102987,"line_start":70,"line_end":70,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\future\\ready.rs","byte_start":102988,"byte_end":102991,"line_start":71,"line_end":71,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\future\\ready.rs","byte_start":102992,"byte_end":102999,"line_start":72,"line_end":72,"column_start":1,"column_end":8}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\future\\ready.rs","byte_start":103000,"byte_end":103041,"line_start":73,"line_end":73,"column_start":1,"column_end":42}},{"value":"/ use futures::future;","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\future\\ready.rs","byte_start":103042,"byte_end":103066,"line_start":74,"line_end":74,"column_start":1,"column_end":25}},{"value":"/","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\future\\ready.rs","byte_start":103067,"byte_end":103070,"line_start":75,"line_end":75,"column_start":1,"column_end":4}},{"value":"/ let a = future::err::<i32, i32>(1);","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\future\\ready.rs","byte_start":103071,"byte_end":103110,"line_start":76,"line_end":76,"column_start":1,"column_end":40}},{"value":"/ assert_eq!(a.await, Err(1));","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\future\\ready.rs","byte_start":103111,"byte_end":103143,"line_start":77,"line_end":77,"column_start":1,"column_end":33}},{"value":"/ # });","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\future\\ready.rs","byte_start":103144,"byte_end":103153,"line_start":78,"line_end":78,"column_start":1,"column_end":10}},{"value":"/ ```","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\future\\ready.rs","byte_start":103154,"byte_end":103161,"line_start":79,"line_end":79,"column_start":1,"column_end":8}}]},{"kind":"Struct","id":{"krate":0,"index":11937},"span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\future\\join.rs","byte_start":105458,"byte_end":105462,"line_start":78,"line_end":78,"column_start":6,"column_end":10},"name":"Join","qualname":"::future::join::Join","value":"Join {  }","parent":null,"children":[{"krate":0,"index":11940},{"krate":0,"index":11941}],"decl_id":null,"docs":" Future for the [`join`](join()) function.\n","sig":null,"attributes":[{"value":"must_use = \"futures do nothing unless you `.await` or poll them\"","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pin-project-lite-0.2.9\\src\\lib.rs","byte_start":14239710,"byte_end":14239719,"line_start":633,"line_end":633,"column_start":11,"column_end":20}}]},{"kind":"Struct","id":{"krate":0,"index":11982},"span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\future\\join.rs","byte_start":105528,"byte_end":105533,"line_start":81,"line_end":81,"column_start":6,"column_end":11},"name":"Join3","qualname":"::future::join::Join3","value":"Join3 {  }","parent":null,"children":[{"krate":0,"index":11986},{"krate":0,"index":11987},{"krate":0,"index":11988}],"decl_id":null,"docs":" Future for the [`join3`] function.\n","sig":null,"attributes":[{"value":"must_use = \"futures do nothing unless you `.await` or poll them\"","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pin-project-lite-0.2.9\\src\\lib.rs","byte_start":14239710,"byte_end":14239719,"line_start":633,"line_end":633,"column_start":11,"column_end":20}}]},{"kind":"Struct","id":{"krate":0,"index":12039},"span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\future\\join.rs","byte_start":105605,"byte_end":105610,"line_start":84,"line_end":84,"column_start":6,"column_end":11},"name":"Join4","qualname":"::future::join::Join4","value":"Join4 {  }","parent":null,"children":[{"krate":0,"index":12044},{"krate":0,"index":12045},{"krate":0,"index":12046},{"krate":0,"index":12047}],"decl_id":null,"docs":" Future for the [`join4`] function.\n","sig":null,"attributes":[{"value":"must_use = \"futures do nothing unless you `.await` or poll them\"","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pin-project-lite-0.2.9\\src\\lib.rs","byte_start":14239710,"byte_end":14239719,"line_start":633,"line_end":633,"column_start":11,"column_end":20}}]},{"kind":"Struct","id":{"krate":0,"index":12108},"span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\future\\join.rs","byte_start":105688,"byte_end":105693,"line_start":87,"line_end":87,"column_start":6,"column_end":11},"name":"Join5","qualname":"::future::join::Join5","value":"Join5 {  }","parent":null,"children":[{"krate":0,"index":12114},{"krate":0,"index":12115},{"krate":0,"index":12116},{"krate":0,"index":12117},{"krate":0,"index":12118}],"decl_id":null,"docs":" Future for the [`join5`] function.\n","sig":null,"attributes":[{"value":"must_use = \"futures do nothing unless you `.await` or poll them\"","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pin-project-lite-0.2.9\\src\\lib.rs","byte_start":14239710,"byte_end":14239719,"line_start":633,"line_end":633,"column_start":11,"column_end":20}}]},{"kind":"Function","id":{"krate":0,"index":1227},"span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\future\\join.rs","byte_start":106308,"byte_end":106312,"line_start":111,"line_end":111,"column_start":8,"column_end":12},"name":"join","qualname":"::future::join::join","value":"pub fn join<Fut1, Fut2>(Fut1, Fut2) -> Join<Fut1, Fut2> where Fut1: Future,\nFut2: Future","parent":null,"children":[],"decl_id":null,"docs":" Joins the result of two futures, waiting for them both to complete.","sig":null,"attributes":[{"value":"/ Joins the result of two futures, waiting for them both to complete.","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\future\\join.rs","byte_start":105731,"byte_end":105802,"line_start":90,"line_end":90,"column_start":1,"column_end":72}},{"value":"/","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\future\\join.rs","byte_start":105803,"byte_end":105806,"line_start":91,"line_end":91,"column_start":1,"column_end":4}},{"value":"/ This function will return a new future which awaits both futures to","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\future\\join.rs","byte_start":105807,"byte_end":105878,"line_start":92,"line_end":92,"column_start":1,"column_end":72}},{"value":"/ complete. The returned future will finish with a tuple of both results.","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\future\\join.rs","byte_start":105879,"byte_end":105954,"line_start":93,"line_end":93,"column_start":1,"column_end":76}},{"value":"/","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\future\\join.rs","byte_start":105955,"byte_end":105958,"line_start":94,"line_end":94,"column_start":1,"column_end":4}},{"value":"/ Note that this function consumes the passed futures and returns a","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\future\\join.rs","byte_start":105959,"byte_end":106028,"line_start":95,"line_end":95,"column_start":1,"column_end":70}},{"value":"/ wrapped version of it.","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\future\\join.rs","byte_start":106029,"byte_end":106055,"line_start":96,"line_end":96,"column_start":1,"column_end":27}},{"value":"/","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\future\\join.rs","byte_start":106056,"byte_end":106059,"line_start":97,"line_end":97,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\future\\join.rs","byte_start":106060,"byte_end":106074,"line_start":98,"line_end":98,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\future\\join.rs","byte_start":106075,"byte_end":106078,"line_start":99,"line_end":99,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\future\\join.rs","byte_start":106079,"byte_end":106086,"line_start":100,"line_end":100,"column_start":1,"column_end":8}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\future\\join.rs","byte_start":106087,"byte_end":106128,"line_start":101,"line_end":101,"column_start":1,"column_end":42}},{"value":"/ use futures::future;","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\future\\join.rs","byte_start":106129,"byte_end":106153,"line_start":102,"line_end":102,"column_start":1,"column_end":25}},{"value":"/","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\future\\join.rs","byte_start":106154,"byte_end":106157,"line_start":103,"line_end":103,"column_start":1,"column_end":4}},{"value":"/ let a = async { 1 };","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\future\\join.rs","byte_start":106158,"byte_end":106182,"line_start":104,"line_end":104,"column_start":1,"column_end":25}},{"value":"/ let b = async { 2 };","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\future\\join.rs","byte_start":106183,"byte_end":106207,"line_start":105,"line_end":105,"column_start":1,"column_end":25}},{"value":"/ let pair = future::join(a, b);","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\future\\join.rs","byte_start":106208,"byte_end":106242,"line_start":106,"line_end":106,"column_start":1,"column_end":35}},{"value":"/","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\future\\join.rs","byte_start":106243,"byte_end":106246,"line_start":107,"line_end":107,"column_start":1,"column_end":4}},{"value":"/ assert_eq!(pair.await, (1, 2));","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\future\\join.rs","byte_start":106247,"byte_end":106282,"line_start":108,"line_end":108,"column_start":1,"column_end":36}},{"value":"/ # });","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\future\\join.rs","byte_start":106283,"byte_end":106292,"line_start":109,"line_end":109,"column_start":1,"column_end":10}},{"value":"/ ```","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\future\\join.rs","byte_start":106293,"byte_end":106300,"line_start":110,"line_end":110,"column_start":1,"column_end":8}}]},{"kind":"Function","id":{"krate":0,"index":1230},"span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\future\\join.rs","byte_start":106858,"byte_end":106863,"line_start":136,"line_end":136,"column_start":8,"column_end":13},"name":"join3","qualname":"::future::join::join3","value":"pub fn join3<Fut1, Fut2, Fut3>(Fut1, Fut2, Fut3) -> Join3<Fut1, Fut2, Fut3>\nwhere Fut1: Future, Fut2: Future, Fut3: Future","parent":null,"children":[],"decl_id":null,"docs":" Same as [`join`](join()), but with more futures.","sig":null,"attributes":[{"value":"/ Same as [`join`](join()), but with more futures.","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\future\\join.rs","byte_start":106519,"byte_end":106571,"line_start":120,"line_end":120,"column_start":1,"column_end":53}},{"value":"/","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\future\\join.rs","byte_start":106572,"byte_end":106575,"line_start":121,"line_end":121,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\future\\join.rs","byte_start":106576,"byte_end":106590,"line_start":122,"line_end":122,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\future\\join.rs","byte_start":106591,"byte_end":106594,"line_start":123,"line_end":123,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\future\\join.rs","byte_start":106595,"byte_end":106602,"line_start":124,"line_end":124,"column_start":1,"column_end":8}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\future\\join.rs","byte_start":106603,"byte_end":106644,"line_start":125,"line_end":125,"column_start":1,"column_end":42}},{"value":"/ use futures::future;","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\future\\join.rs","byte_start":106645,"byte_end":106669,"line_start":126,"line_end":126,"column_start":1,"column_end":25}},{"value":"/","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\future\\join.rs","byte_start":106670,"byte_end":106673,"line_start":127,"line_end":127,"column_start":1,"column_end":4}},{"value":"/ let a = async { 1 };","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\future\\join.rs","byte_start":106674,"byte_end":106698,"line_start":128,"line_end":128,"column_start":1,"column_end":25}},{"value":"/ let b = async { 2 };","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\future\\join.rs","byte_start":106699,"byte_end":106723,"line_start":129,"line_end":129,"column_start":1,"column_end":25}},{"value":"/ let c = async { 3 };","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\future\\join.rs","byte_start":106724,"byte_end":106748,"line_start":130,"line_end":130,"column_start":1,"column_end":25}},{"value":"/ let tuple = future::join3(a, b, c);","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\future\\join.rs","byte_start":106749,"byte_end":106788,"line_start":131,"line_end":131,"column_start":1,"column_end":40}},{"value":"/","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\future\\join.rs","byte_start":106789,"byte_end":106792,"line_start":132,"line_end":132,"column_start":1,"column_end":4}},{"value":"/ assert_eq!(tuple.await, (1, 2, 3));","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\future\\join.rs","byte_start":106793,"byte_end":106832,"line_start":133,"line_end":133,"column_start":1,"column_end":40}},{"value":"/ # });","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\future\\join.rs","byte_start":106833,"byte_end":106842,"line_start":134,"line_end":134,"column_start":1,"column_end":10}},{"value":"/ ```","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\future\\join.rs","byte_start":106843,"byte_end":106850,"line_start":135,"line_end":135,"column_start":1,"column_end":8}}]},{"kind":"Function","id":{"krate":0,"index":1234},"span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\future\\join.rs","byte_start":107525,"byte_end":107530,"line_start":167,"line_end":167,"column_start":8,"column_end":13},"name":"join4","qualname":"::future::join::join4","value":"pub fn join4<Fut1, Fut2, Fut3, Fut4>(Fut1, Fut2, Fut3, Fut4)\n-> Join4<Fut1, Fut2, Fut3, Fut4> where Fut1: Future, Fut2: Future,\nFut3: Future, Fut4: Future","parent":null,"children":[],"decl_id":null,"docs":" Same as [`join`](join()), but with more futures.","sig":null,"attributes":[{"value":"/ Same as [`join`](join()), but with more futures.","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\future\\join.rs","byte_start":107155,"byte_end":107207,"line_start":150,"line_end":150,"column_start":1,"column_end":53}},{"value":"/","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\future\\join.rs","byte_start":107208,"byte_end":107211,"line_start":151,"line_end":151,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\future\\join.rs","byte_start":107212,"byte_end":107226,"line_start":152,"line_end":152,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\future\\join.rs","byte_start":107227,"byte_end":107230,"line_start":153,"line_end":153,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\future\\join.rs","byte_start":107231,"byte_end":107238,"line_start":154,"line_end":154,"column_start":1,"column_end":8}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\future\\join.rs","byte_start":107239,"byte_end":107280,"line_start":155,"line_end":155,"column_start":1,"column_end":42}},{"value":"/ use futures::future;","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\future\\join.rs","byte_start":107281,"byte_end":107305,"line_start":156,"line_end":156,"column_start":1,"column_end":25}},{"value":"/","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\future\\join.rs","byte_start":107306,"byte_end":107309,"line_start":157,"line_end":157,"column_start":1,"column_end":4}},{"value":"/ let a = async { 1 };","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\future\\join.rs","byte_start":107310,"byte_end":107334,"line_start":158,"line_end":158,"column_start":1,"column_end":25}},{"value":"/ let b = async { 2 };","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\future\\join.rs","byte_start":107335,"byte_end":107359,"line_start":159,"line_end":159,"column_start":1,"column_end":25}},{"value":"/ let c = async { 3 };","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\future\\join.rs","byte_start":107360,"byte_end":107384,"line_start":160,"line_end":160,"column_start":1,"column_end":25}},{"value":"/ let d = async { 4 };","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\future\\join.rs","byte_start":107385,"byte_end":107409,"line_start":161,"line_end":161,"column_start":1,"column_end":25}},{"value":"/ let tuple = future::join4(a, b, c, d);","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\future\\join.rs","byte_start":107410,"byte_end":107452,"line_start":162,"line_end":162,"column_start":1,"column_end":43}},{"value":"/","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\future\\join.rs","byte_start":107453,"byte_end":107456,"line_start":163,"line_end":163,"column_start":1,"column_end":4}},{"value":"/ assert_eq!(tuple.await, (1, 2, 3, 4));","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\future\\join.rs","byte_start":107457,"byte_end":107499,"line_start":164,"line_end":164,"column_start":1,"column_end":43}},{"value":"/ # });","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\future\\join.rs","byte_start":107500,"byte_end":107509,"line_start":165,"line_end":165,"column_start":1,"column_end":10}},{"value":"/ ```","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\future\\join.rs","byte_start":107510,"byte_end":107517,"line_start":166,"line_end":166,"column_start":1,"column_end":8}}]},{"kind":"Function","id":{"krate":0,"index":1239},"span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\future\\join.rs","byte_start":108295,"byte_end":108300,"line_start":201,"line_end":201,"column_start":8,"column_end":13},"name":"join5","qualname":"::future::join::join5","value":"pub fn join5<Fut1, Fut2, Fut3, Fut4, Fut5>(Fut1, Fut2, Fut3, Fut4, Fut5)\n-> Join5<Fut1, Fut2, Fut3, Fut4, Fut5> where Fut1: Future, Fut2: Future,\nFut3: Future, Fut4: Future, Fut5: Future","parent":null,"children":[],"decl_id":null,"docs":" Same as [`join`](join()), but with more futures.","sig":null,"attributes":[{"value":"/ Same as [`join`](join()), but with more futures.","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\future\\join.rs","byte_start":107894,"byte_end":107946,"line_start":183,"line_end":183,"column_start":1,"column_end":53}},{"value":"/","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\future\\join.rs","byte_start":107947,"byte_end":107950,"line_start":184,"line_end":184,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\future\\join.rs","byte_start":107951,"byte_end":107965,"line_start":185,"line_end":185,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\future\\join.rs","byte_start":107966,"byte_end":107969,"line_start":186,"line_end":186,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\future\\join.rs","byte_start":107970,"byte_end":107977,"line_start":187,"line_end":187,"column_start":1,"column_end":8}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\future\\join.rs","byte_start":107978,"byte_end":108019,"line_start":188,"line_end":188,"column_start":1,"column_end":42}},{"value":"/ use futures::future;","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\future\\join.rs","byte_start":108020,"byte_end":108044,"line_start":189,"line_end":189,"column_start":1,"column_end":25}},{"value":"/","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\future\\join.rs","byte_start":108045,"byte_end":108048,"line_start":190,"line_end":190,"column_start":1,"column_end":4}},{"value":"/ let a = async { 1 };","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\future\\join.rs","byte_start":108049,"byte_end":108073,"line_start":191,"line_end":191,"column_start":1,"column_end":25}},{"value":"/ let b = async { 2 };","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\future\\join.rs","byte_start":108074,"byte_end":108098,"line_start":192,"line_end":192,"column_start":1,"column_end":25}},{"value":"/ let c = async { 3 };","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\future\\join.rs","byte_start":108099,"byte_end":108123,"line_start":193,"line_end":193,"column_start":1,"column_end":25}},{"value":"/ let d = async { 4 };","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\future\\join.rs","byte_start":108124,"byte_end":108148,"line_start":194,"line_end":194,"column_start":1,"column_end":25}},{"value":"/ let e = async { 5 };","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\future\\join.rs","byte_start":108149,"byte_end":108173,"line_start":195,"line_end":195,"column_start":1,"column_end":25}},{"value":"/ let tuple = future::join5(a, b, c, d, e);","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\future\\join.rs","byte_start":108174,"byte_end":108219,"line_start":196,"line_end":196,"column_start":1,"column_end":46}},{"value":"/","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\future\\join.rs","byte_start":108220,"byte_end":108223,"line_start":197,"line_end":197,"column_start":1,"column_end":4}},{"value":"/ assert_eq!(tuple.await, (1, 2, 3, 4, 5));","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\future\\join.rs","byte_start":108224,"byte_end":108269,"line_start":198,"line_end":198,"column_start":1,"column_end":46}},{"value":"/ # });","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\future\\join.rs","byte_start":108270,"byte_end":108279,"line_start":199,"line_end":199,"column_start":1,"column_end":10}},{"value":"/ ```","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\future\\join.rs","byte_start":108280,"byte_end":108287,"line_start":200,"line_end":200,"column_start":1,"column_end":8}}]},{"kind":"Struct","id":{"krate":0,"index":1320},"span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\future\\join_all.rs","byte_start":109660,"byte_end":109667,"line_start":27,"line_end":27,"column_start":12,"column_end":19},"name":"JoinAll","qualname":"::future::join_all::JoinAll","value":"JoinAll {  }","parent":null,"children":[{"krate":0,"index":1322}],"decl_id":null,"docs":" Future for the [`join_all`] function.\n","sig":null,"attributes":[{"value":"must_use = \"futures do nothing unless you `.await` or poll them\"","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\future\\join_all.rs","byte_start":109539,"byte_end":109606,"line_start":25,"line_end":25,"column_start":1,"column_end":68}},{"value":"/ Future for the [`join_all`] function.","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\future\\join_all.rs","byte_start":109607,"byte_end":109648,"line_start":26,"line_end":26,"column_start":1,"column_end":42}}]},{"kind":"Function","id":{"krate":0,"index":1333},"span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\future\\join_all.rs","byte_start":111762,"byte_end":111770,"line_start":102,"line_end":102,"column_start":8,"column_end":16},"name":"join_all","qualname":"::future::join_all::join_all","value":"pub fn join_all<I>(I) -> JoinAll<I::Item> where I: IntoIterator,\nI::Item: Future","parent":null,"children":[],"decl_id":null,"docs":" Creates a future which represents a collection of the outputs of the futures\n given.","sig":null,"attributes":[{"value":"/ Creates a future which represents a collection of the outputs of the futures","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\future\\join_all.rs","byte_start":110476,"byte_end":110556,"line_start":66,"line_end":66,"column_start":1,"column_end":81}},{"value":"/ given.","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\future\\join_all.rs","byte_start":110557,"byte_end":110567,"line_start":67,"line_end":67,"column_start":1,"column_end":11}},{"value":"/","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\future\\join_all.rs","byte_start":110568,"byte_end":110571,"line_start":68,"line_end":68,"column_start":1,"column_end":4}},{"value":"/ The returned future will drive execution for all of its underlying futures,","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\future\\join_all.rs","byte_start":110572,"byte_end":110651,"line_start":69,"line_end":69,"column_start":1,"column_end":80}},{"value":"/ collecting the results into a destination `Vec<T>` in the same order as they","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\future\\join_all.rs","byte_start":110652,"byte_end":110732,"line_start":70,"line_end":70,"column_start":1,"column_end":81}},{"value":"/ were provided.","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\future\\join_all.rs","byte_start":110733,"byte_end":110751,"line_start":71,"line_end":71,"column_start":1,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\future\\join_all.rs","byte_start":110752,"byte_end":110755,"line_start":72,"line_end":72,"column_start":1,"column_end":4}},{"value":"/ This function is only available when the `std` or `alloc` feature of this","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\future\\join_all.rs","byte_start":110756,"byte_end":110833,"line_start":73,"line_end":73,"column_start":1,"column_end":78}},{"value":"/ library is activated, and it is activated by default.","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\future\\join_all.rs","byte_start":110834,"byte_end":110891,"line_start":74,"line_end":74,"column_start":1,"column_end":58}},{"value":"/","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\future\\join_all.rs","byte_start":110892,"byte_end":110895,"line_start":75,"line_end":75,"column_start":1,"column_end":4}},{"value":"/ # See Also","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\future\\join_all.rs","byte_start":110896,"byte_end":110910,"line_start":76,"line_end":76,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\future\\join_all.rs","byte_start":110911,"byte_end":110914,"line_start":77,"line_end":77,"column_start":1,"column_end":4}},{"value":"/ `join_all` will switch to the more powerful [`FuturesOrdered`] for performance","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\future\\join_all.rs","byte_start":110915,"byte_end":110997,"line_start":78,"line_end":78,"column_start":1,"column_end":83}},{"value":"/ reasons if the number of futures is large. You may want to look into using it or","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\future\\join_all.rs","byte_start":110998,"byte_end":111082,"line_start":79,"line_end":79,"column_start":1,"column_end":85}},{"value":"/ it's counterpart [`FuturesUnordered`][crate::stream::FuturesUnordered] directly.","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\future\\join_all.rs","byte_start":111083,"byte_end":111167,"line_start":80,"line_end":80,"column_start":1,"column_end":85}},{"value":"/","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\future\\join_all.rs","byte_start":111168,"byte_end":111171,"line_start":81,"line_end":81,"column_start":1,"column_end":4}},{"value":"/ Some examples for additional functionality provided by these are:","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\future\\join_all.rs","byte_start":111172,"byte_end":111241,"line_start":82,"line_end":82,"column_start":1,"column_end":70}},{"value":"/","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\future\\join_all.rs","byte_start":111242,"byte_end":111245,"line_start":83,"line_end":83,"column_start":1,"column_end":4}},{"value":"/  * Adding new futures to the set even after it has been started.","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\future\\join_all.rs","byte_start":111246,"byte_end":111314,"line_start":84,"line_end":84,"column_start":1,"column_end":69}},{"value":"/","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\future\\join_all.rs","byte_start":111315,"byte_end":111318,"line_start":85,"line_end":85,"column_start":1,"column_end":4}},{"value":"/  * Only polling the specific futures that have been woken. In cases where","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\future\\join_all.rs","byte_start":111319,"byte_end":111396,"line_start":86,"line_end":86,"column_start":1,"column_end":78}},{"value":"/    you have a lot of futures this will result in much more efficient polling.","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\future\\join_all.rs","byte_start":111397,"byte_end":111478,"line_start":87,"line_end":87,"column_start":1,"column_end":82}},{"value":"/","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\future\\join_all.rs","byte_start":111479,"byte_end":111482,"line_start":88,"line_end":88,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\future\\join_all.rs","byte_start":111483,"byte_end":111497,"line_start":89,"line_end":89,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\future\\join_all.rs","byte_start":111498,"byte_end":111501,"line_start":90,"line_end":90,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\future\\join_all.rs","byte_start":111502,"byte_end":111509,"line_start":91,"line_end":91,"column_start":1,"column_end":8}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\future\\join_all.rs","byte_start":111510,"byte_end":111551,"line_start":92,"line_end":92,"column_start":1,"column_end":42}},{"value":"/ use futures::future::join_all;","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\future\\join_all.rs","byte_start":111552,"byte_end":111586,"line_start":93,"line_end":93,"column_start":1,"column_end":35}},{"value":"/","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\future\\join_all.rs","byte_start":111587,"byte_end":111590,"line_start":94,"line_end":94,"column_start":1,"column_end":4}},{"value":"/ async fn foo(i: u32) -> u32 { i }","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\future\\join_all.rs","byte_start":111591,"byte_end":111628,"line_start":95,"line_end":95,"column_start":1,"column_end":38}},{"value":"/","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\future\\join_all.rs","byte_start":111629,"byte_end":111632,"line_start":96,"line_end":96,"column_start":1,"column_end":4}},{"value":"/ let futures = vec![foo(1), foo(2), foo(3)];","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\future\\join_all.rs","byte_start":111633,"byte_end":111680,"line_start":97,"line_end":97,"column_start":1,"column_end":48}},{"value":"/","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\future\\join_all.rs","byte_start":111681,"byte_end":111684,"line_start":98,"line_end":98,"column_start":1,"column_end":4}},{"value":"/ assert_eq!(join_all(futures).await, [1, 2, 3]);","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\future\\join_all.rs","byte_start":111685,"byte_end":111736,"line_start":99,"line_end":99,"column_start":1,"column_end":52}},{"value":"/ # });","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\future\\join_all.rs","byte_start":111737,"byte_end":111746,"line_start":100,"line_end":100,"column_start":1,"column_end":10}},{"value":"/ ```","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\future\\join_all.rs","byte_start":111747,"byte_end":111754,"line_start":101,"line_end":101,"column_start":1,"column_end":8}}]},{"kind":"Struct","id":{"krate":0,"index":12189},"span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\future\\select.rs","byte_start":114223,"byte_end":114229,"line_start":10,"line_end":10,"column_start":12,"column_end":18},"name":"Select","qualname":"::future::select::Select","value":"Select {  }","parent":null,"children":[{"krate":0,"index":12192}],"decl_id":null,"docs":" Future for the [`select()`] function.\n","sig":null,"attributes":[{"value":"/ Future for the [`select()`] function.","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\future\\select.rs","byte_start":114085,"byte_end":114126,"line_start":7,"line_end":7,"column_start":1,"column_end":42}},{"value":"must_use = \"futures do nothing unless you `.await` or poll them\"","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\future\\select.rs","byte_start":114127,"byte_end":114194,"line_start":8,"line_end":8,"column_start":1,"column_end":68}}]},{"kind":"Function","id":{"krate":0,"index":1382},"span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\future\\select.rs","byte_start":116493,"byte_end":116499,"line_start":84,"line_end":84,"column_start":8,"column_end":14},"name":"select","qualname":"::future::select::select","value":"pub fn select<A, B>(A, B) -> Select<A, B> where A: Future + Unpin, B: Future +\nUnpin","parent":null,"children":[],"decl_id":null,"docs":" Waits for either one of two differently-typed futures to complete.","sig":null,"attributes":[{"value":"/ Waits for either one of two differently-typed futures to complete.","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\future\\select.rs","byte_start":114320,"byte_end":114390,"line_start":16,"line_end":16,"column_start":1,"column_end":71}},{"value":"/","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\future\\select.rs","byte_start":114391,"byte_end":114394,"line_start":17,"line_end":17,"column_start":1,"column_end":4}},{"value":"/ This function will return a new future which awaits for either one of both","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\future\\select.rs","byte_start":114395,"byte_end":114473,"line_start":18,"line_end":18,"column_start":1,"column_end":79}},{"value":"/ futures to complete. The returned future will finish with both the value","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\future\\select.rs","byte_start":114474,"byte_end":114550,"line_start":19,"line_end":19,"column_start":1,"column_end":77}},{"value":"/ resolved and a future representing the completion of the other work.","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\future\\select.rs","byte_start":114551,"byte_end":114623,"line_start":20,"line_end":20,"column_start":1,"column_end":73}},{"value":"/","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\future\\select.rs","byte_start":114624,"byte_end":114627,"line_start":21,"line_end":21,"column_start":1,"column_end":4}},{"value":"/ Note that this function consumes the receiving futures and returns a","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\future\\select.rs","byte_start":114628,"byte_end":114700,"line_start":22,"line_end":22,"column_start":1,"column_end":73}},{"value":"/ wrapped version of them.","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\future\\select.rs","byte_start":114701,"byte_end":114729,"line_start":23,"line_end":23,"column_start":1,"column_end":29}},{"value":"/","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\future\\select.rs","byte_start":114730,"byte_end":114733,"line_start":24,"line_end":24,"column_start":1,"column_end":4}},{"value":"/ Also note that if both this and the second future have the same","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\future\\select.rs","byte_start":114734,"byte_end":114801,"line_start":25,"line_end":25,"column_start":1,"column_end":68}},{"value":"/ output type you can use the `Either::factor_first` method to","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\future\\select.rs","byte_start":114802,"byte_end":114866,"line_start":26,"line_end":26,"column_start":1,"column_end":65}},{"value":"/ conveniently extract out the value at the end.","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\future\\select.rs","byte_start":114867,"byte_end":114917,"line_start":27,"line_end":27,"column_start":1,"column_end":51}},{"value":"/","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\future\\select.rs","byte_start":114918,"byte_end":114921,"line_start":28,"line_end":28,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\future\\select.rs","byte_start":114922,"byte_end":114936,"line_start":29,"line_end":29,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\future\\select.rs","byte_start":114937,"byte_end":114940,"line_start":30,"line_end":30,"column_start":1,"column_end":4}},{"value":"/ A simple example","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\future\\select.rs","byte_start":114941,"byte_end":114961,"line_start":31,"line_end":31,"column_start":1,"column_end":21}},{"value":"/","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\future\\select.rs","byte_start":114962,"byte_end":114965,"line_start":32,"line_end":32,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\future\\select.rs","byte_start":114966,"byte_end":114973,"line_start":33,"line_end":33,"column_start":1,"column_end":8}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\future\\select.rs","byte_start":114974,"byte_end":115015,"line_start":34,"line_end":34,"column_start":1,"column_end":42}},{"value":"/ use futures::{","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\future\\select.rs","byte_start":115016,"byte_end":115034,"line_start":35,"line_end":35,"column_start":1,"column_end":19}},{"value":"/     pin_mut,","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\future\\select.rs","byte_start":115035,"byte_end":115051,"line_start":36,"line_end":36,"column_start":1,"column_end":17}},{"value":"/     future::Either,","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\future\\select.rs","byte_start":115052,"byte_end":115075,"line_start":37,"line_end":37,"column_start":1,"column_end":24}},{"value":"/     future::self,","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\future\\select.rs","byte_start":115076,"byte_end":115097,"line_start":38,"line_end":38,"column_start":1,"column_end":22}},{"value":"/ };","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\future\\select.rs","byte_start":115098,"byte_end":115104,"line_start":39,"line_end":39,"column_start":1,"column_end":7}},{"value":"/","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\future\\select.rs","byte_start":115105,"byte_end":115108,"line_start":40,"line_end":40,"column_start":1,"column_end":4}},{"value":"/ // These two futures have different types even though their outputs have the same type.","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\future\\select.rs","byte_start":115109,"byte_end":115200,"line_start":41,"line_end":41,"column_start":1,"column_end":92}},{"value":"/ let future1 = async {","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\future\\select.rs","byte_start":115201,"byte_end":115226,"line_start":42,"line_end":42,"column_start":1,"column_end":26}},{"value":"/     future::pending::<()>().await; // will never finish","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\future\\select.rs","byte_start":115227,"byte_end":115286,"line_start":43,"line_end":43,"column_start":1,"column_end":60}},{"value":"/     1","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\future\\select.rs","byte_start":115287,"byte_end":115296,"line_start":44,"line_end":44,"column_start":1,"column_end":10}},{"value":"/ };","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\future\\select.rs","byte_start":115297,"byte_end":115303,"line_start":45,"line_end":45,"column_start":1,"column_end":7}},{"value":"/ let future2 = async {","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\future\\select.rs","byte_start":115304,"byte_end":115329,"line_start":46,"line_end":46,"column_start":1,"column_end":26}},{"value":"/     future::ready(2).await","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\future\\select.rs","byte_start":115330,"byte_end":115360,"line_start":47,"line_end":47,"column_start":1,"column_end":31}},{"value":"/ };","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\future\\select.rs","byte_start":115361,"byte_end":115367,"line_start":48,"line_end":48,"column_start":1,"column_end":7}},{"value":"/","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\future\\select.rs","byte_start":115368,"byte_end":115371,"line_start":49,"line_end":49,"column_start":1,"column_end":4}},{"value":"/ // 'select' requires Future + Unpin bounds","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\future\\select.rs","byte_start":115372,"byte_end":115418,"line_start":50,"line_end":50,"column_start":1,"column_end":47}},{"value":"/ pin_mut!(future1);","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\future\\select.rs","byte_start":115419,"byte_end":115441,"line_start":51,"line_end":51,"column_start":1,"column_end":23}},{"value":"/ pin_mut!(future2);","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\future\\select.rs","byte_start":115442,"byte_end":115464,"line_start":52,"line_end":52,"column_start":1,"column_end":23}},{"value":"/","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\future\\select.rs","byte_start":115465,"byte_end":115468,"line_start":53,"line_end":53,"column_start":1,"column_end":4}},{"value":"/ let value = match future::select(future1, future2).await {","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\future\\select.rs","byte_start":115469,"byte_end":115531,"line_start":54,"line_end":54,"column_start":1,"column_end":63}},{"value":"/     Either::Left((value1, _)) => value1,  // `value1` is resolved from `future1`","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\future\\select.rs","byte_start":115532,"byte_end":115616,"line_start":55,"line_end":55,"column_start":1,"column_end":85}},{"value":"/                                           // `_` represents `future2`","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\future\\select.rs","byte_start":115617,"byte_end":115690,"line_start":56,"line_end":56,"column_start":1,"column_end":74}},{"value":"/     Either::Right((value2, _)) => value2, // `value2` is resolved from `future2`","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\future\\select.rs","byte_start":115691,"byte_end":115775,"line_start":57,"line_end":57,"column_start":1,"column_end":85}},{"value":"/                                           // `_` represents `future1`","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\future\\select.rs","byte_start":115776,"byte_end":115849,"line_start":58,"line_end":58,"column_start":1,"column_end":74}},{"value":"/ };","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\future\\select.rs","byte_start":115850,"byte_end":115856,"line_start":59,"line_end":59,"column_start":1,"column_end":7}},{"value":"/","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\future\\select.rs","byte_start":115857,"byte_end":115860,"line_start":60,"line_end":60,"column_start":1,"column_end":4}},{"value":"/ assert!(value == 2);","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\future\\select.rs","byte_start":115861,"byte_end":115885,"line_start":61,"line_end":61,"column_start":1,"column_end":25}},{"value":"/ # });","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\future\\select.rs","byte_start":115886,"byte_end":115895,"line_start":62,"line_end":62,"column_start":1,"column_end":10}},{"value":"/ ```","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\future\\select.rs","byte_start":115896,"byte_end":115903,"line_start":63,"line_end":63,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\future\\select.rs","byte_start":115904,"byte_end":115907,"line_start":64,"line_end":64,"column_start":1,"column_end":4}},{"value":"/ A more complex example","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\future\\select.rs","byte_start":115908,"byte_end":115934,"line_start":65,"line_end":65,"column_start":1,"column_end":27}},{"value":"/","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\future\\select.rs","byte_start":115935,"byte_end":115938,"line_start":66,"line_end":66,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\future\\select.rs","byte_start":115939,"byte_end":115946,"line_start":67,"line_end":67,"column_start":1,"column_end":8}},{"value":"/ use futures::future::{self, Either, Future, FutureExt};","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\future\\select.rs","byte_start":115947,"byte_end":116006,"line_start":68,"line_end":68,"column_start":1,"column_end":60}},{"value":"/","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\future\\select.rs","byte_start":116007,"byte_end":116010,"line_start":69,"line_end":69,"column_start":1,"column_end":4}},{"value":"/ // A poor-man's join implemented on top of select","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\future\\select.rs","byte_start":116011,"byte_end":116064,"line_start":70,"line_end":70,"column_start":1,"column_end":54}},{"value":"/","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\future\\select.rs","byte_start":116065,"byte_end":116068,"line_start":71,"line_end":71,"column_start":1,"column_end":4}},{"value":"/ fn join<A, B>(a: A, b: B) -> impl Future<Output=(A::Output, B::Output)>","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\future\\select.rs","byte_start":116069,"byte_end":116144,"line_start":72,"line_end":72,"column_start":1,"column_end":76}},{"value":"/     where A: Future + Unpin,","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\future\\select.rs","byte_start":116145,"byte_end":116177,"line_start":73,"line_end":73,"column_start":1,"column_end":33}},{"value":"/           B: Future + Unpin,","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\future\\select.rs","byte_start":116178,"byte_end":116210,"line_start":74,"line_end":74,"column_start":1,"column_end":33}},{"value":"/ {","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\future\\select.rs","byte_start":116211,"byte_end":116216,"line_start":75,"line_end":75,"column_start":1,"column_end":6}},{"value":"/     future::select(a, b).then(|either| {","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\future\\select.rs","byte_start":116217,"byte_end":116261,"line_start":76,"line_end":76,"column_start":1,"column_end":45}},{"value":"/         match either {","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\future\\select.rs","byte_start":116262,"byte_end":116288,"line_start":77,"line_end":77,"column_start":1,"column_end":27}},{"value":"/             Either::Left((x, b)) => b.map(move |y| (x, y)).left_future(),","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\future\\select.rs","byte_start":116289,"byte_end":116366,"line_start":78,"line_end":78,"column_start":1,"column_end":78}},{"value":"/             Either::Right((y, a)) => a.map(move |x| (x, y)).right_future(),","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\future\\select.rs","byte_start":116367,"byte_end":116446,"line_start":79,"line_end":79,"column_start":1,"column_end":80}},{"value":"/         }","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\future\\select.rs","byte_start":116447,"byte_end":116460,"line_start":80,"line_end":80,"column_start":1,"column_end":14}},{"value":"/     })","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\future\\select.rs","byte_start":116461,"byte_end":116471,"line_start":81,"line_end":81,"column_start":1,"column_end":11}},{"value":"/ }","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\future\\select.rs","byte_start":116472,"byte_end":116477,"line_start":82,"line_end":82,"column_start":1,"column_end":6}},{"value":"/ ```","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\future\\select.rs","byte_start":116478,"byte_end":116485,"line_start":83,"line_end":83,"column_start":1,"column_end":8}}]},{"kind":"Struct","id":{"krate":0,"index":12197},"span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\future\\select_all.rs","byte_start":117956,"byte_end":117965,"line_start":13,"line_end":13,"column_start":12,"column_end":21},"name":"SelectAll","qualname":"::future::select_all::SelectAll","value":"SelectAll {  }","parent":null,"children":[{"krate":0,"index":12199}],"decl_id":null,"docs":" Future for the [`select_all`] function.\n","sig":null,"attributes":[{"value":"/ Future for the [`select_all`] function.","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\future\\select_all.rs","byte_start":117816,"byte_end":117859,"line_start":10,"line_end":10,"column_start":1,"column_end":44}},{"value":"must_use = \"futures do nothing unless you `.await` or poll them\"","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\future\\select_all.rs","byte_start":117877,"byte_end":117944,"line_start":12,"line_end":12,"column_start":1,"column_end":68}}]},{"kind":"Function","id":{"krate":0,"index":1432},"span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\future\\select_all.rs","byte_start":118745,"byte_end":118755,"line_start":34,"line_end":34,"column_start":8,"column_end":18},"name":"select_all","qualname":"::future::select_all::select_all","value":"pub fn select_all<I>(I) -> SelectAll<I::Item> where I: IntoIterator,\nI::Item: Future + Unpin","parent":null,"children":[],"decl_id":null,"docs":" Creates a new future which will select over a list of futures.","sig":null,"attributes":[{"value":"/ Creates a new future which will select over a list of futures.","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\future\\select_all.rs","byte_start":118043,"byte_end":118109,"line_start":19,"line_end":19,"column_start":1,"column_end":67}},{"value":"/","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\future\\select_all.rs","byte_start":118110,"byte_end":118113,"line_start":20,"line_end":20,"column_start":1,"column_end":4}},{"value":"/ The returned future will wait for any future within `iter` to be ready. Upon","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\future\\select_all.rs","byte_start":118114,"byte_end":118194,"line_start":21,"line_end":21,"column_start":1,"column_end":81}},{"value":"/ completion the item resolved will be returned, along with the index of the","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\future\\select_all.rs","byte_start":118195,"byte_end":118273,"line_start":22,"line_end":22,"column_start":1,"column_end":79}},{"value":"/ future that was ready and the list of all the remaining futures.","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\future\\select_all.rs","byte_start":118274,"byte_end":118342,"line_start":23,"line_end":23,"column_start":1,"column_end":69}},{"value":"/","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\future\\select_all.rs","byte_start":118343,"byte_end":118346,"line_start":24,"line_end":24,"column_start":1,"column_end":4}},{"value":"/ There are no guarantees provided on the order of the list with the remaining","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\future\\select_all.rs","byte_start":118347,"byte_end":118427,"line_start":25,"line_end":25,"column_start":1,"column_end":81}},{"value":"/ futures. They might be swapped around, reversed, or completely random.","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\future\\select_all.rs","byte_start":118428,"byte_end":118502,"line_start":26,"line_end":26,"column_start":1,"column_end":75}},{"value":"/","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\future\\select_all.rs","byte_start":118503,"byte_end":118506,"line_start":27,"line_end":27,"column_start":1,"column_end":4}},{"value":"/ This function is only available when the `std` or `alloc` feature of this","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\future\\select_all.rs","byte_start":118507,"byte_end":118584,"line_start":28,"line_end":28,"column_start":1,"column_end":78}},{"value":"/ library is activated, and it is activated by default.","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\future\\select_all.rs","byte_start":118585,"byte_end":118642,"line_start":29,"line_end":29,"column_start":1,"column_end":58}},{"value":"/","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\future\\select_all.rs","byte_start":118643,"byte_end":118646,"line_start":30,"line_end":30,"column_start":1,"column_end":4}},{"value":"/ # Panics","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\future\\select_all.rs","byte_start":118647,"byte_end":118659,"line_start":31,"line_end":31,"column_start":1,"column_end":13}},{"value":"/","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\future\\select_all.rs","byte_start":118660,"byte_end":118663,"line_start":32,"line_end":32,"column_start":1,"column_end":4}},{"value":"/ This function will panic if the iterator specified contains no items.","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\future\\select_all.rs","byte_start":118664,"byte_end":118737,"line_start":33,"line_end":33,"column_start":1,"column_end":74}}]},{"kind":"Method","id":{"krate":0,"index":1436},"span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\future\\select_all.rs","byte_start":119136,"byte_end":119146,"line_start":46,"line_end":46,"column_start":12,"column_end":22},"name":"into_inner","qualname":"<SelectAll<Fut>>::into_inner","value":"pub fn into_inner(Self) -> Vec<Fut>","parent":null,"children":[],"decl_id":null,"docs":" Consumes this combinator, returning the underlying futures.\n","sig":null,"attributes":[{"value":"/ Consumes this combinator, returning the underlying futures.","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\future\\select_all.rs","byte_start":119061,"byte_end":119124,"line_start":45,"line_end":45,"column_start":5,"column_end":68}}]},{"kind":"Struct","id":{"krate":0,"index":12273},"span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\future\\try_join.rs","byte_start":122907,"byte_end":122914,"line_start":94,"line_end":94,"column_start":6,"column_end":13},"name":"TryJoin","qualname":"::future::try_join::TryJoin","value":"TryJoin {  }","parent":null,"children":[{"krate":0,"index":12276},{"krate":0,"index":12277}],"decl_id":null,"docs":" Future for the [`try_join`](try_join()) function.\n","sig":null,"attributes":[{"value":"must_use = \"futures do nothing unless you `.await` or poll them\"","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pin-project-lite-0.2.9\\src\\lib.rs","byte_start":14239710,"byte_end":14239719,"line_start":633,"line_end":633,"column_start":11,"column_end":20}}]},{"kind":"Struct","id":{"krate":0,"index":12318},"span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\future\\try_join.rs","byte_start":122984,"byte_end":122992,"line_start":97,"line_end":97,"column_start":6,"column_end":14},"name":"TryJoin3","qualname":"::future::try_join::TryJoin3","value":"TryJoin3 {  }","parent":null,"children":[{"krate":0,"index":12322},{"krate":0,"index":12323},{"krate":0,"index":12324}],"decl_id":null,"docs":" Future for the [`try_join3`] function.\n","sig":null,"attributes":[{"value":"must_use = \"futures do nothing unless you `.await` or poll them\"","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pin-project-lite-0.2.9\\src\\lib.rs","byte_start":14239710,"byte_end":14239719,"line_start":633,"line_end":633,"column_start":11,"column_end":20}}]},{"kind":"Struct","id":{"krate":0,"index":12375},"span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\future\\try_join.rs","byte_start":123068,"byte_end":123076,"line_start":100,"line_end":100,"column_start":6,"column_end":14},"name":"TryJoin4","qualname":"::future::try_join::TryJoin4","value":"TryJoin4 {  }","parent":null,"children":[{"krate":0,"index":12380},{"krate":0,"index":12381},{"krate":0,"index":12382},{"krate":0,"index":12383}],"decl_id":null,"docs":" Future for the [`try_join4`] function.\n","sig":null,"attributes":[{"value":"must_use = \"futures do nothing unless you `.await` or poll them\"","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pin-project-lite-0.2.9\\src\\lib.rs","byte_start":14239710,"byte_end":14239719,"line_start":633,"line_end":633,"column_start":11,"column_end":20}}]},{"kind":"Struct","id":{"krate":0,"index":12444},"span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\future\\try_join.rs","byte_start":123158,"byte_end":123166,"line_start":103,"line_end":103,"column_start":6,"column_end":14},"name":"TryJoin5","qualname":"::future::try_join::TryJoin5","value":"TryJoin5 {  }","parent":null,"children":[{"krate":0,"index":12450},{"krate":0,"index":12451},{"krate":0,"index":12452},{"krate":0,"index":12453},{"krate":0,"index":12454}],"decl_id":null,"docs":" Future for the [`try_join5`] function.\n","sig":null,"attributes":[{"value":"must_use = \"futures do nothing unless you `.await` or poll them\"","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pin-project-lite-0.2.9\\src\\lib.rs","byte_start":14239710,"byte_end":14239719,"line_start":633,"line_end":633,"column_start":11,"column_end":20}}]},{"kind":"Function","id":{"krate":0,"index":1488},"span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\future\\try_join.rs","byte_start":124439,"byte_end":124447,"line_start":148,"line_end":148,"column_start":8,"column_end":16},"name":"try_join","qualname":"::future::try_join::try_join","value":"pub fn try_join<Fut1, Fut2>(Fut1, Fut2) -> TryJoin<Fut1, Fut2> where\nFut1: TryFuture, Fut2: TryFuture<Error = Fut1::Error>","parent":null,"children":[],"decl_id":null,"docs":" Joins the result of two futures, waiting for them both to complete or\n for one to produce an error.","sig":null,"attributes":[{"value":"/ Joins the result of two futures, waiting for them both to complete or","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\future\\try_join.rs","byte_start":123204,"byte_end":123277,"line_start":106,"line_end":106,"column_start":1,"column_end":74}},{"value":"/ for one to produce an error.","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\future\\try_join.rs","byte_start":123278,"byte_end":123310,"line_start":107,"line_end":107,"column_start":1,"column_end":33}},{"value":"/","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\future\\try_join.rs","byte_start":123311,"byte_end":123314,"line_start":108,"line_end":108,"column_start":1,"column_end":4}},{"value":"/ This function will return a new future which awaits both futures to","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\future\\try_join.rs","byte_start":123315,"byte_end":123386,"line_start":109,"line_end":109,"column_start":1,"column_end":72}},{"value":"/ complete. If successful, the returned future will finish with a tuple of","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\future\\try_join.rs","byte_start":123387,"byte_end":123463,"line_start":110,"line_end":110,"column_start":1,"column_end":77}},{"value":"/ both results. If unsuccessful, it will complete with the first error","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\future\\try_join.rs","byte_start":123464,"byte_end":123536,"line_start":111,"line_end":111,"column_start":1,"column_end":73}},{"value":"/ encountered.","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\future\\try_join.rs","byte_start":123537,"byte_end":123553,"line_start":112,"line_end":112,"column_start":1,"column_end":17}},{"value":"/","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\future\\try_join.rs","byte_start":123554,"byte_end":123557,"line_start":113,"line_end":113,"column_start":1,"column_end":4}},{"value":"/ Note that this function consumes the passed futures and returns a","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\future\\try_join.rs","byte_start":123558,"byte_end":123627,"line_start":114,"line_end":114,"column_start":1,"column_end":70}},{"value":"/ wrapped version of it.","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\future\\try_join.rs","byte_start":123628,"byte_end":123654,"line_start":115,"line_end":115,"column_start":1,"column_end":27}},{"value":"/","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\future\\try_join.rs","byte_start":123655,"byte_end":123658,"line_start":116,"line_end":116,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\future\\try_join.rs","byte_start":123659,"byte_end":123673,"line_start":117,"line_end":117,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\future\\try_join.rs","byte_start":123674,"byte_end":123677,"line_start":118,"line_end":118,"column_start":1,"column_end":4}},{"value":"/ When used on multiple futures that return [`Ok`], `try_join` will return","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\future\\try_join.rs","byte_start":123678,"byte_end":123754,"line_start":119,"line_end":119,"column_start":1,"column_end":77}},{"value":"/ [`Ok`] of a tuple of the values:","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\future\\try_join.rs","byte_start":123755,"byte_end":123791,"line_start":120,"line_end":120,"column_start":1,"column_end":37}},{"value":"/","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\future\\try_join.rs","byte_start":123792,"byte_end":123795,"line_start":121,"line_end":121,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\future\\try_join.rs","byte_start":123796,"byte_end":123803,"line_start":122,"line_end":122,"column_start":1,"column_end":8}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\future\\try_join.rs","byte_start":123804,"byte_end":123845,"line_start":123,"line_end":123,"column_start":1,"column_end":42}},{"value":"/ use futures::future;","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\future\\try_join.rs","byte_start":123846,"byte_end":123870,"line_start":124,"line_end":124,"column_start":1,"column_end":25}},{"value":"/","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\future\\try_join.rs","byte_start":123871,"byte_end":123874,"line_start":125,"line_end":125,"column_start":1,"column_end":4}},{"value":"/ let a = future::ready(Ok::<i32, i32>(1));","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\future\\try_join.rs","byte_start":123875,"byte_end":123920,"line_start":126,"line_end":126,"column_start":1,"column_end":46}},{"value":"/ let b = future::ready(Ok::<i32, i32>(2));","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\future\\try_join.rs","byte_start":123921,"byte_end":123966,"line_start":127,"line_end":127,"column_start":1,"column_end":46}},{"value":"/ let pair = future::try_join(a, b);","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\future\\try_join.rs","byte_start":123967,"byte_end":124005,"line_start":128,"line_end":128,"column_start":1,"column_end":39}},{"value":"/","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\future\\try_join.rs","byte_start":124006,"byte_end":124009,"line_start":129,"line_end":129,"column_start":1,"column_end":4}},{"value":"/ assert_eq!(pair.await, Ok((1, 2)));","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\future\\try_join.rs","byte_start":124010,"byte_end":124049,"line_start":130,"line_end":130,"column_start":1,"column_end":40}},{"value":"/ # });","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\future\\try_join.rs","byte_start":124050,"byte_end":124059,"line_start":131,"line_end":131,"column_start":1,"column_end":10}},{"value":"/ ```","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\future\\try_join.rs","byte_start":124060,"byte_end":124067,"line_start":132,"line_end":132,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\future\\try_join.rs","byte_start":124068,"byte_end":124071,"line_start":133,"line_end":133,"column_start":1,"column_end":4}},{"value":"/ If one of the futures resolves to an error, `try_join` will return","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\future\\try_join.rs","byte_start":124072,"byte_end":124142,"line_start":134,"line_end":134,"column_start":1,"column_end":71}},{"value":"/ that error:","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\future\\try_join.rs","byte_start":124143,"byte_end":124158,"line_start":135,"line_end":135,"column_start":1,"column_end":16}},{"value":"/","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\future\\try_join.rs","byte_start":124159,"byte_end":124162,"line_start":136,"line_end":136,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\future\\try_join.rs","byte_start":124163,"byte_end":124170,"line_start":137,"line_end":137,"column_start":1,"column_end":8}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\future\\try_join.rs","byte_start":124171,"byte_end":124212,"line_start":138,"line_end":138,"column_start":1,"column_end":42}},{"value":"/ use futures::future;","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\future\\try_join.rs","byte_start":124213,"byte_end":124237,"line_start":139,"line_end":139,"column_start":1,"column_end":25}},{"value":"/","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\future\\try_join.rs","byte_start":124238,"byte_end":124241,"line_start":140,"line_end":140,"column_start":1,"column_end":4}},{"value":"/ let a = future::ready(Ok::<i32, i32>(1));","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\future\\try_join.rs","byte_start":124242,"byte_end":124287,"line_start":141,"line_end":141,"column_start":1,"column_end":46}},{"value":"/ let b = future::ready(Err::<i32, i32>(2));","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\future\\try_join.rs","byte_start":124288,"byte_end":124334,"line_start":142,"line_end":142,"column_start":1,"column_end":47}},{"value":"/ let pair = future::try_join(a, b);","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\future\\try_join.rs","byte_start":124335,"byte_end":124373,"line_start":143,"line_end":143,"column_start":1,"column_end":39}},{"value":"/","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\future\\try_join.rs","byte_start":124374,"byte_end":124377,"line_start":144,"line_end":144,"column_start":1,"column_end":4}},{"value":"/ assert_eq!(pair.await, Err(2));","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\future\\try_join.rs","byte_start":124378,"byte_end":124413,"line_start":145,"line_end":145,"column_start":1,"column_end":36}},{"value":"/ # });","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\future\\try_join.rs","byte_start":124414,"byte_end":124423,"line_start":146,"line_end":146,"column_start":1,"column_end":10}},{"value":"/ ```","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\future\\try_join.rs","byte_start":124424,"byte_end":124431,"line_start":147,"line_end":147,"column_start":1,"column_end":8}}]},{"kind":"Function","id":{"krate":0,"index":1491},"span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\future\\try_join.rs","byte_start":125103,"byte_end":125112,"line_start":172,"line_end":172,"column_start":8,"column_end":17},"name":"try_join3","qualname":"::future::try_join::try_join3","value":"pub fn try_join3<Fut1, Fut2, Fut3>(Fut1, Fut2, Fut3)\n-> TryJoin3<Fut1, Fut2, Fut3> where Fut1: TryFuture, Fut2: TryFuture<Error =\nFut1::Error>, Fut3: TryFuture<Error = Fut1::Error>","parent":null,"children":[],"decl_id":null,"docs":" Same as [`try_join`](try_join()), but with more futures.","sig":null,"attributes":[{"value":"/ Same as [`try_join`](try_join()), but with more futures.","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\future\\try_join.rs","byte_start":124685,"byte_end":124745,"line_start":156,"line_end":156,"column_start":1,"column_end":61}},{"value":"/","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\future\\try_join.rs","byte_start":124746,"byte_end":124749,"line_start":157,"line_end":157,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\future\\try_join.rs","byte_start":124750,"byte_end":124764,"line_start":158,"line_end":158,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\future\\try_join.rs","byte_start":124765,"byte_end":124768,"line_start":159,"line_end":159,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\future\\try_join.rs","byte_start":124769,"byte_end":124776,"line_start":160,"line_end":160,"column_start":1,"column_end":8}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\future\\try_join.rs","byte_start":124777,"byte_end":124818,"line_start":161,"line_end":161,"column_start":1,"column_end":42}},{"value":"/ use futures::future;","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\future\\try_join.rs","byte_start":124819,"byte_end":124843,"line_start":162,"line_end":162,"column_start":1,"column_end":25}},{"value":"/","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\future\\try_join.rs","byte_start":124844,"byte_end":124847,"line_start":163,"line_end":163,"column_start":1,"column_end":4}},{"value":"/ let a = future::ready(Ok::<i32, i32>(1));","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\future\\try_join.rs","byte_start":124848,"byte_end":124893,"line_start":164,"line_end":164,"column_start":1,"column_end":46}},{"value":"/ let b = future::ready(Ok::<i32, i32>(2));","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\future\\try_join.rs","byte_start":124894,"byte_end":124939,"line_start":165,"line_end":165,"column_start":1,"column_end":46}},{"value":"/ let c = future::ready(Ok::<i32, i32>(3));","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\future\\try_join.rs","byte_start":124940,"byte_end":124985,"line_start":166,"line_end":166,"column_start":1,"column_end":46}},{"value":"/ let tuple = future::try_join3(a, b, c);","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\future\\try_join.rs","byte_start":124986,"byte_end":125029,"line_start":167,"line_end":167,"column_start":1,"column_end":44}},{"value":"/","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\future\\try_join.rs","byte_start":125030,"byte_end":125033,"line_start":168,"line_end":168,"column_start":1,"column_end":4}},{"value":"/ assert_eq!(tuple.await, Ok((1, 2, 3)));","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\future\\try_join.rs","byte_start":125034,"byte_end":125077,"line_start":169,"line_end":169,"column_start":1,"column_end":44}},{"value":"/ # });","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\future\\try_join.rs","byte_start":125078,"byte_end":125087,"line_start":170,"line_end":170,"column_start":1,"column_end":10}},{"value":"/ ```","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\future\\try_join.rs","byte_start":125088,"byte_end":125095,"line_start":171,"line_end":171,"column_start":1,"column_end":8}}]},{"kind":"Function","id":{"krate":0,"index":1495},"span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\future\\try_join.rs","byte_start":125940,"byte_end":125949,"line_start":204,"line_end":204,"column_start":8,"column_end":17},"name":"try_join4","qualname":"::future::try_join::try_join4","value":"pub fn try_join4<Fut1, Fut2, Fut3, Fut4>(Fut1, Fut2, Fut3, Fut4)\n-> TryJoin4<Fut1, Fut2, Fut3, Fut4> where Fut1: TryFuture,\nFut2: TryFuture<Error = Fut1::Error>, Fut3: TryFuture<Error = Fut1::Error>,\nFut4: TryFuture<Error = Fut1::Error>","parent":null,"children":[],"decl_id":null,"docs":" Same as [`try_join`](try_join()), but with more futures.","sig":null,"attributes":[{"value":"/ Same as [`try_join`](try_join()), but with more futures.","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\future\\try_join.rs","byte_start":125470,"byte_end":125530,"line_start":187,"line_end":187,"column_start":1,"column_end":61}},{"value":"/","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\future\\try_join.rs","byte_start":125531,"byte_end":125534,"line_start":188,"line_end":188,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\future\\try_join.rs","byte_start":125535,"byte_end":125549,"line_start":189,"line_end":189,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\future\\try_join.rs","byte_start":125550,"byte_end":125553,"line_start":190,"line_end":190,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\future\\try_join.rs","byte_start":125554,"byte_end":125561,"line_start":191,"line_end":191,"column_start":1,"column_end":8}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\future\\try_join.rs","byte_start":125562,"byte_end":125603,"line_start":192,"line_end":192,"column_start":1,"column_end":42}},{"value":"/ use futures::future;","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\future\\try_join.rs","byte_start":125604,"byte_end":125628,"line_start":193,"line_end":193,"column_start":1,"column_end":25}},{"value":"/","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\future\\try_join.rs","byte_start":125629,"byte_end":125632,"line_start":194,"line_end":194,"column_start":1,"column_end":4}},{"value":"/ let a = future::ready(Ok::<i32, i32>(1));","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\future\\try_join.rs","byte_start":125633,"byte_end":125678,"line_start":195,"line_end":195,"column_start":1,"column_end":46}},{"value":"/ let b = future::ready(Ok::<i32, i32>(2));","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\future\\try_join.rs","byte_start":125679,"byte_end":125724,"line_start":196,"line_end":196,"column_start":1,"column_end":46}},{"value":"/ let c = future::ready(Ok::<i32, i32>(3));","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\future\\try_join.rs","byte_start":125725,"byte_end":125770,"line_start":197,"line_end":197,"column_start":1,"column_end":46}},{"value":"/ let d = future::ready(Ok::<i32, i32>(4));","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\future\\try_join.rs","byte_start":125771,"byte_end":125816,"line_start":198,"line_end":198,"column_start":1,"column_end":46}},{"value":"/ let tuple = future::try_join4(a, b, c, d);","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\future\\try_join.rs","byte_start":125817,"byte_end":125863,"line_start":199,"line_end":199,"column_start":1,"column_end":47}},{"value":"/","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\future\\try_join.rs","byte_start":125864,"byte_end":125867,"line_start":200,"line_end":200,"column_start":1,"column_end":4}},{"value":"/ assert_eq!(tuple.await, Ok((1, 2, 3, 4)));","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\future\\try_join.rs","byte_start":125868,"byte_end":125914,"line_start":201,"line_end":201,"column_start":1,"column_end":47}},{"value":"/ # });","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\future\\try_join.rs","byte_start":125915,"byte_end":125924,"line_start":202,"line_end":202,"column_start":1,"column_end":10}},{"value":"/ ```","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\future\\try_join.rs","byte_start":125925,"byte_end":125932,"line_start":203,"line_end":203,"column_start":1,"column_end":8}}]},{"kind":"Function","id":{"krate":0,"index":1500},"span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\future\\try_join.rs","byte_start":126921,"byte_end":126930,"line_start":239,"line_end":239,"column_start":8,"column_end":17},"name":"try_join5","qualname":"::future::try_join::try_join5","value":"pub fn try_join5<Fut1, Fut2, Fut3, Fut4, Fut5>(Fut1, Fut2, Fut3, Fut4, Fut5)\n-> TryJoin5<Fut1, Fut2, Fut3, Fut4, Fut5> where Fut1: TryFuture,\nFut2: TryFuture<Error = Fut1::Error>, Fut3: TryFuture<Error = Fut1::Error>,\nFut4: TryFuture<Error = Fut1::Error>, Fut5: TryFuture<Error = Fut1::Error>","parent":null,"children":[],"decl_id":null,"docs":" Same as [`try_join`](try_join()), but with more futures.","sig":null,"attributes":[{"value":"/ Same as [`try_join`](try_join()), but with more futures.","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\future\\try_join.rs","byte_start":126399,"byte_end":126459,"line_start":221,"line_end":221,"column_start":1,"column_end":61}},{"value":"/","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\future\\try_join.rs","byte_start":126460,"byte_end":126463,"line_start":222,"line_end":222,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\future\\try_join.rs","byte_start":126464,"byte_end":126478,"line_start":223,"line_end":223,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\future\\try_join.rs","byte_start":126479,"byte_end":126482,"line_start":224,"line_end":224,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\future\\try_join.rs","byte_start":126483,"byte_end":126490,"line_start":225,"line_end":225,"column_start":1,"column_end":8}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\future\\try_join.rs","byte_start":126491,"byte_end":126532,"line_start":226,"line_end":226,"column_start":1,"column_end":42}},{"value":"/ use futures::future;","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\future\\try_join.rs","byte_start":126533,"byte_end":126557,"line_start":227,"line_end":227,"column_start":1,"column_end":25}},{"value":"/","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\future\\try_join.rs","byte_start":126558,"byte_end":126561,"line_start":228,"line_end":228,"column_start":1,"column_end":4}},{"value":"/ let a = future::ready(Ok::<i32, i32>(1));","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\future\\try_join.rs","byte_start":126562,"byte_end":126607,"line_start":229,"line_end":229,"column_start":1,"column_end":46}},{"value":"/ let b = future::ready(Ok::<i32, i32>(2));","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\future\\try_join.rs","byte_start":126608,"byte_end":126653,"line_start":230,"line_end":230,"column_start":1,"column_end":46}},{"value":"/ let c = future::ready(Ok::<i32, i32>(3));","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\future\\try_join.rs","byte_start":126654,"byte_end":126699,"line_start":231,"line_end":231,"column_start":1,"column_end":46}},{"value":"/ let d = future::ready(Ok::<i32, i32>(4));","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\future\\try_join.rs","byte_start":126700,"byte_end":126745,"line_start":232,"line_end":232,"column_start":1,"column_end":46}},{"value":"/ let e = future::ready(Ok::<i32, i32>(5));","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\future\\try_join.rs","byte_start":126746,"byte_end":126791,"line_start":233,"line_end":233,"column_start":1,"column_end":46}},{"value":"/ let tuple = future::try_join5(a, b, c, d, e);","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\future\\try_join.rs","byte_start":126792,"byte_end":126841,"line_start":234,"line_end":234,"column_start":1,"column_end":50}},{"value":"/","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\future\\try_join.rs","byte_start":126842,"byte_end":126845,"line_start":235,"line_end":235,"column_start":1,"column_end":4}},{"value":"/ assert_eq!(tuple.await, Ok((1, 2, 3, 4, 5)));","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\future\\try_join.rs","byte_start":126846,"byte_end":126895,"line_start":236,"line_end":236,"column_start":1,"column_end":50}},{"value":"/ # });","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\future\\try_join.rs","byte_start":126896,"byte_end":126905,"line_start":237,"line_end":237,"column_start":1,"column_end":10}},{"value":"/ ```","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\future\\try_join.rs","byte_start":126906,"byte_end":126913,"line_start":238,"line_end":238,"column_start":1,"column_end":8}}]},{"kind":"Struct","id":{"krate":0,"index":1583},"span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\future\\try_join_all.rs","byte_start":128422,"byte_end":128432,"line_start":30,"line_end":30,"column_start":12,"column_end":22},"name":"TryJoinAll","qualname":"::future::try_join_all::TryJoinAll","value":"TryJoinAll {  }","parent":null,"children":[{"krate":0,"index":1585}],"decl_id":null,"docs":" Future for the [`try_join_all`] function.\n","sig":null,"attributes":[{"value":"/ Future for the [`try_join_all`] function.","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\future\\try_join_all.rs","byte_start":128297,"byte_end":128342,"line_start":28,"line_end":28,"column_start":1,"column_end":46}},{"value":"must_use = \"futures do nothing unless you `.await` or poll them\"","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\future\\try_join_all.rs","byte_start":128343,"byte_end":128410,"line_start":29,"line_end":29,"column_start":1,"column_end":68}}]},{"kind":"Function","id":{"krate":0,"index":1589},"span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\future\\try_join_all.rs","byte_start":130025,"byte_end":130037,"line_start":86,"line_end":86,"column_start":8,"column_end":20},"name":"try_join_all","qualname":"::future::try_join_all::try_join_all","value":"pub fn try_join_all<I>(I) -> TryJoinAll<I::Item> where I: IntoIterator,\nI::Item: TryFuture","parent":null,"children":[],"decl_id":null,"docs":" Creates a future which represents either a collection of the results of the\n futures given or an error.","sig":null,"attributes":[{"value":"/ Creates a future which represents either a collection of the results of the","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\future\\try_join_all.rs","byte_start":128776,"byte_end":128855,"line_start":48,"line_end":48,"column_start":1,"column_end":80}},{"value":"/ futures given or an error.","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\future\\try_join_all.rs","byte_start":128856,"byte_end":128886,"line_start":49,"line_end":49,"column_start":1,"column_end":31}},{"value":"/","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\future\\try_join_all.rs","byte_start":128887,"byte_end":128890,"line_start":50,"line_end":50,"column_start":1,"column_end":4}},{"value":"/ The returned future will drive execution for all of its underlying futures,","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\future\\try_join_all.rs","byte_start":128891,"byte_end":128970,"line_start":51,"line_end":51,"column_start":1,"column_end":80}},{"value":"/ collecting the results into a destination `Vec<T>` in the same order as they","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\future\\try_join_all.rs","byte_start":128971,"byte_end":129051,"line_start":52,"line_end":52,"column_start":1,"column_end":81}},{"value":"/ were provided.","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\future\\try_join_all.rs","byte_start":129052,"byte_end":129070,"line_start":53,"line_end":53,"column_start":1,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\future\\try_join_all.rs","byte_start":129071,"byte_end":129074,"line_start":54,"line_end":54,"column_start":1,"column_end":4}},{"value":"/ If any future returns an error then all other futures will be canceled and","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\future\\try_join_all.rs","byte_start":129075,"byte_end":129153,"line_start":55,"line_end":55,"column_start":1,"column_end":79}},{"value":"/ an error will be returned immediately. If all futures complete successfully,","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\future\\try_join_all.rs","byte_start":129154,"byte_end":129234,"line_start":56,"line_end":56,"column_start":1,"column_end":81}},{"value":"/ however, then the returned future will succeed with a `Vec` of all the","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\future\\try_join_all.rs","byte_start":129235,"byte_end":129309,"line_start":57,"line_end":57,"column_start":1,"column_end":75}},{"value":"/ successful results.","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\future\\try_join_all.rs","byte_start":129310,"byte_end":129333,"line_start":58,"line_end":58,"column_start":1,"column_end":24}},{"value":"/","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\future\\try_join_all.rs","byte_start":129334,"byte_end":129337,"line_start":59,"line_end":59,"column_start":1,"column_end":4}},{"value":"/ This function is only available when the `std` or `alloc` feature of this","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\future\\try_join_all.rs","byte_start":129338,"byte_end":129415,"line_start":60,"line_end":60,"column_start":1,"column_end":78}},{"value":"/ library is activated, and it is activated by default.","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\future\\try_join_all.rs","byte_start":129416,"byte_end":129473,"line_start":61,"line_end":61,"column_start":1,"column_end":58}},{"value":"/","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\future\\try_join_all.rs","byte_start":129474,"byte_end":129477,"line_start":62,"line_end":62,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\future\\try_join_all.rs","byte_start":129478,"byte_end":129492,"line_start":63,"line_end":63,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\future\\try_join_all.rs","byte_start":129493,"byte_end":129496,"line_start":64,"line_end":64,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\future\\try_join_all.rs","byte_start":129497,"byte_end":129504,"line_start":65,"line_end":65,"column_start":1,"column_end":8}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\future\\try_join_all.rs","byte_start":129505,"byte_end":129546,"line_start":66,"line_end":66,"column_start":1,"column_end":42}},{"value":"/ use futures::future::{self, try_join_all};","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\future\\try_join_all.rs","byte_start":129547,"byte_end":129593,"line_start":67,"line_end":67,"column_start":1,"column_end":47}},{"value":"/","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\future\\try_join_all.rs","byte_start":129594,"byte_end":129597,"line_start":68,"line_end":68,"column_start":1,"column_end":4}},{"value":"/ let futures = vec![","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\future\\try_join_all.rs","byte_start":129598,"byte_end":129621,"line_start":69,"line_end":69,"column_start":1,"column_end":24}},{"value":"/     future::ok::<u32, u32>(1),","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\future\\try_join_all.rs","byte_start":129622,"byte_end":129656,"line_start":70,"line_end":70,"column_start":1,"column_end":35}},{"value":"/     future::ok::<u32, u32>(2),","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\future\\try_join_all.rs","byte_start":129657,"byte_end":129691,"line_start":71,"line_end":71,"column_start":1,"column_end":35}},{"value":"/     future::ok::<u32, u32>(3),","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\future\\try_join_all.rs","byte_start":129692,"byte_end":129726,"line_start":72,"line_end":72,"column_start":1,"column_end":35}},{"value":"/ ];","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\future\\try_join_all.rs","byte_start":129727,"byte_end":129733,"line_start":73,"line_end":73,"column_start":1,"column_end":7}},{"value":"/","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\future\\try_join_all.rs","byte_start":129734,"byte_end":129737,"line_start":74,"line_end":74,"column_start":1,"column_end":4}},{"value":"/ assert_eq!(try_join_all(futures).await, Ok(vec![1, 2, 3]));","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\future\\try_join_all.rs","byte_start":129738,"byte_end":129801,"line_start":75,"line_end":75,"column_start":1,"column_end":64}},{"value":"/","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\future\\try_join_all.rs","byte_start":129802,"byte_end":129805,"line_start":76,"line_end":76,"column_start":1,"column_end":4}},{"value":"/ let futures = vec![","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\future\\try_join_all.rs","byte_start":129806,"byte_end":129829,"line_start":77,"line_end":77,"column_start":1,"column_end":24}},{"value":"/     future::ok::<u32, u32>(1),","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\future\\try_join_all.rs","byte_start":129830,"byte_end":129864,"line_start":78,"line_end":78,"column_start":1,"column_end":35}},{"value":"/     future::err::<u32, u32>(2),","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\future\\try_join_all.rs","byte_start":129865,"byte_end":129900,"line_start":79,"line_end":79,"column_start":1,"column_end":36}},{"value":"/     future::ok::<u32, u32>(3),","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\future\\try_join_all.rs","byte_start":129901,"byte_end":129935,"line_start":80,"line_end":80,"column_start":1,"column_end":35}},{"value":"/ ];","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\future\\try_join_all.rs","byte_start":129936,"byte_end":129942,"line_start":81,"line_end":81,"column_start":1,"column_end":7}},{"value":"/","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\future\\try_join_all.rs","byte_start":129943,"byte_end":129946,"line_start":82,"line_end":82,"column_start":1,"column_end":4}},{"value":"/ assert_eq!(try_join_all(futures).await, Err(2));","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\future\\try_join_all.rs","byte_start":129947,"byte_end":129999,"line_start":83,"line_end":83,"column_start":1,"column_end":53}},{"value":"/ # });","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\future\\try_join_all.rs","byte_start":130000,"byte_end":130009,"line_start":84,"line_end":84,"column_start":1,"column_end":10}},{"value":"/ ```","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\future\\try_join_all.rs","byte_start":130010,"byte_end":130017,"line_start":85,"line_end":85,"column_start":1,"column_end":8}}]},{"kind":"Struct","id":{"krate":0,"index":12525},"span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\future\\try_select.rs","byte_start":131935,"byte_end":131944,"line_start":9,"line_end":9,"column_start":12,"column_end":21},"name":"TrySelect","qualname":"::future::try_select::TrySelect","value":"TrySelect {  }","parent":null,"children":[{"krate":0,"index":12528}],"decl_id":null,"docs":" Future for the [`try_select()`] function.\n","sig":null,"attributes":[{"value":"/ Future for the [`try_select()`] function.","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\future\\try_select.rs","byte_start":131793,"byte_end":131838,"line_start":6,"line_end":6,"column_start":1,"column_end":46}},{"value":"must_use = \"futures do nothing unless you `.await` or poll them\"","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\future\\try_select.rs","byte_start":131839,"byte_end":131906,"line_start":7,"line_end":7,"column_start":1,"column_end":68}}]},{"kind":"Function","id":{"krate":0,"index":1635},"span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\future\\try_select.rs","byte_start":133529,"byte_end":133539,"line_start":50,"line_end":50,"column_start":8,"column_end":18},"name":"try_select","qualname":"::future::try_select::try_select","value":"pub fn try_select<A, B>(A, B) -> TrySelect<A, B> where A: TryFuture + Unpin,\nB: TryFuture + Unpin","parent":null,"children":[],"decl_id":null,"docs":" Waits for either one of two differently-typed futures to complete.","sig":null,"attributes":[{"value":"/ Waits for either one of two differently-typed futures to complete.","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\future\\try_select.rs","byte_start":132038,"byte_end":132108,"line_start":15,"line_end":15,"column_start":1,"column_end":71}},{"value":"/","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\future\\try_select.rs","byte_start":132109,"byte_end":132112,"line_start":16,"line_end":16,"column_start":1,"column_end":4}},{"value":"/ This function will return a new future which awaits for either one of both","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\future\\try_select.rs","byte_start":132113,"byte_end":132191,"line_start":17,"line_end":17,"column_start":1,"column_end":79}},{"value":"/ futures to complete. The returned future will finish with both the value","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\future\\try_select.rs","byte_start":132192,"byte_end":132268,"line_start":18,"line_end":18,"column_start":1,"column_end":77}},{"value":"/ resolved and a future representing the completion of the other work.","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\future\\try_select.rs","byte_start":132269,"byte_end":132341,"line_start":19,"line_end":19,"column_start":1,"column_end":73}},{"value":"/","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\future\\try_select.rs","byte_start":132342,"byte_end":132345,"line_start":20,"line_end":20,"column_start":1,"column_end":4}},{"value":"/ Note that this function consumes the receiving futures and returns a","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\future\\try_select.rs","byte_start":132346,"byte_end":132418,"line_start":21,"line_end":21,"column_start":1,"column_end":73}},{"value":"/ wrapped version of them.","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\future\\try_select.rs","byte_start":132419,"byte_end":132447,"line_start":22,"line_end":22,"column_start":1,"column_end":29}},{"value":"/","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\future\\try_select.rs","byte_start":132448,"byte_end":132451,"line_start":23,"line_end":23,"column_start":1,"column_end":4}},{"value":"/ Also note that if both this and the second future have the same","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\future\\try_select.rs","byte_start":132452,"byte_end":132519,"line_start":24,"line_end":24,"column_start":1,"column_end":68}},{"value":"/ success/error type you can use the `Either::factor_first` method to","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\future\\try_select.rs","byte_start":132520,"byte_end":132591,"line_start":25,"line_end":25,"column_start":1,"column_end":72}},{"value":"/ conveniently extract out the value at the end.","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\future\\try_select.rs","byte_start":132592,"byte_end":132642,"line_start":26,"line_end":26,"column_start":1,"column_end":51}},{"value":"/","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\future\\try_select.rs","byte_start":132643,"byte_end":132646,"line_start":27,"line_end":27,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\future\\try_select.rs","byte_start":132647,"byte_end":132661,"line_start":28,"line_end":28,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\future\\try_select.rs","byte_start":132662,"byte_end":132665,"line_start":29,"line_end":29,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\future\\try_select.rs","byte_start":132666,"byte_end":132673,"line_start":30,"line_end":30,"column_start":1,"column_end":8}},{"value":"/ use futures::future::{self, Either, Future, FutureExt, TryFuture, TryFutureExt};","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\future\\try_select.rs","byte_start":132674,"byte_end":132758,"line_start":31,"line_end":31,"column_start":1,"column_end":85}},{"value":"/","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\future\\try_select.rs","byte_start":132759,"byte_end":132762,"line_start":32,"line_end":32,"column_start":1,"column_end":4}},{"value":"/ // A poor-man's try_join implemented on top of select","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\future\\try_select.rs","byte_start":132763,"byte_end":132820,"line_start":33,"line_end":33,"column_start":1,"column_end":58}},{"value":"/","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\future\\try_select.rs","byte_start":132821,"byte_end":132824,"line_start":34,"line_end":34,"column_start":1,"column_end":4}},{"value":"/ fn try_join<A, B, E>(a: A, b: B) -> impl TryFuture<Ok=(A::Ok, B::Ok), Error=E>","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\future\\try_select.rs","byte_start":132825,"byte_end":132907,"line_start":35,"line_end":35,"column_start":1,"column_end":83}},{"value":"/      where A: TryFuture<Error = E> + Unpin + 'static,","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\future\\try_select.rs","byte_start":132908,"byte_end":132965,"line_start":36,"line_end":36,"column_start":1,"column_end":58}},{"value":"/            B: TryFuture<Error = E> + Unpin + 'static,","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\future\\try_select.rs","byte_start":132966,"byte_end":133023,"line_start":37,"line_end":37,"column_start":1,"column_end":58}},{"value":"/            E: 'static,","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\future\\try_select.rs","byte_start":133024,"byte_end":133050,"line_start":38,"line_end":38,"column_start":1,"column_end":27}},{"value":"/ {","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\future\\try_select.rs","byte_start":133051,"byte_end":133056,"line_start":39,"line_end":39,"column_start":1,"column_end":6}},{"value":"/     future::try_select(a, b).then(|res| -> Box<dyn Future<Output = Result<_, _>> + Unpin> {","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\future\\try_select.rs","byte_start":133057,"byte_end":133152,"line_start":40,"line_end":40,"column_start":1,"column_end":96}},{"value":"/         match res {","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\future\\try_select.rs","byte_start":133153,"byte_end":133176,"line_start":41,"line_end":41,"column_start":1,"column_end":24}},{"value":"/             Ok(Either::Left((x, b))) => Box::new(b.map_ok(move |y| (x, y))),","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\future\\try_select.rs","byte_start":133177,"byte_end":133257,"line_start":42,"line_end":42,"column_start":1,"column_end":81}},{"value":"/             Ok(Either::Right((y, a))) => Box::new(a.map_ok(move |x| (x, y))),","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\future\\try_select.rs","byte_start":133258,"byte_end":133339,"line_start":43,"line_end":43,"column_start":1,"column_end":82}},{"value":"/             Err(Either::Left((e, _))) => Box::new(future::err(e)),","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\future\\try_select.rs","byte_start":133340,"byte_end":133410,"line_start":44,"line_end":44,"column_start":1,"column_end":71}},{"value":"/             Err(Either::Right((e, _))) => Box::new(future::err(e)),","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\future\\try_select.rs","byte_start":133411,"byte_end":133482,"line_start":45,"line_end":45,"column_start":1,"column_end":72}},{"value":"/         }","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\future\\try_select.rs","byte_start":133483,"byte_end":133496,"line_start":46,"line_end":46,"column_start":1,"column_end":14}},{"value":"/     })","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\future\\try_select.rs","byte_start":133497,"byte_end":133507,"line_start":47,"line_end":47,"column_start":1,"column_end":11}},{"value":"/ }","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\future\\try_select.rs","byte_start":133508,"byte_end":133513,"line_start":48,"line_end":48,"column_start":1,"column_end":6}},{"value":"/ ```","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\future\\try_select.rs","byte_start":133514,"byte_end":133521,"line_start":49,"line_end":49,"column_start":1,"column_end":8}}]},{"kind":"Struct","id":{"krate":0,"index":12533},"span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\future\\select_ok.rs","byte_start":135170,"byte_end":135178,"line_start":13,"line_end":13,"column_start":12,"column_end":20},"name":"SelectOk","qualname":"::future::select_ok::SelectOk","value":"SelectOk {  }","parent":null,"children":[{"krate":0,"index":12535}],"decl_id":null,"docs":" Future for the [`select_ok`] function.\n","sig":null,"attributes":[{"value":"/ Future for the [`select_ok`] function.","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\future\\select_ok.rs","byte_start":135031,"byte_end":135073,"line_start":10,"line_end":10,"column_start":1,"column_end":43}},{"value":"must_use = \"futures do nothing unless you `.await` or poll them\"","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\future\\select_ok.rs","byte_start":135091,"byte_end":135158,"line_start":12,"line_end":12,"column_start":1,"column_end":68}}]},{"kind":"Function","id":{"krate":0,"index":1685},"span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\future\\select_ok.rs","byte_start":135900,"byte_end":135909,"line_start":32,"line_end":32,"column_start":8,"column_end":17},"name":"select_ok","qualname":"::future::select_ok::select_ok","value":"pub fn select_ok<I>(I) -> SelectOk<I::Item> where I: IntoIterator,\nI::Item: TryFuture + Unpin","parent":null,"children":[],"decl_id":null,"docs":" Creates a new future which will select the first successful future over a list of futures.","sig":null,"attributes":[{"value":"/ Creates a new future which will select the first successful future over a list of futures.","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\future\\select_ok.rs","byte_start":135255,"byte_end":135349,"line_start":19,"line_end":19,"column_start":1,"column_end":95}},{"value":"/","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\future\\select_ok.rs","byte_start":135350,"byte_end":135353,"line_start":20,"line_end":20,"column_start":1,"column_end":4}},{"value":"/ The returned future will wait for any future within `iter` to be ready and Ok. Unlike","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\future\\select_ok.rs","byte_start":135354,"byte_end":135443,"line_start":21,"line_end":21,"column_start":1,"column_end":90}},{"value":"/ `select_all`, this will only return the first successful completion, or the last","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\future\\select_ok.rs","byte_start":135444,"byte_end":135528,"line_start":22,"line_end":22,"column_start":1,"column_end":85}},{"value":"/ failure. This is useful in contexts where any success is desired and failures","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\future\\select_ok.rs","byte_start":135529,"byte_end":135610,"line_start":23,"line_end":23,"column_start":1,"column_end":82}},{"value":"/ are ignored, unless all the futures fail.","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\future\\select_ok.rs","byte_start":135611,"byte_end":135656,"line_start":24,"line_end":24,"column_start":1,"column_end":46}},{"value":"/","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\future\\select_ok.rs","byte_start":135657,"byte_end":135660,"line_start":25,"line_end":25,"column_start":1,"column_end":4}},{"value":"/  This function is only available when the `std` or `alloc` feature of this","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\future\\select_ok.rs","byte_start":135661,"byte_end":135739,"line_start":26,"line_end":26,"column_start":1,"column_end":79}},{"value":"/ library is activated, and it is activated by default.","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\future\\select_ok.rs","byte_start":135740,"byte_end":135797,"line_start":27,"line_end":27,"column_start":1,"column_end":58}},{"value":"/","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\future\\select_ok.rs","byte_start":135798,"byte_end":135801,"line_start":28,"line_end":28,"column_start":1,"column_end":4}},{"value":"/ # Panics","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\future\\select_ok.rs","byte_start":135802,"byte_end":135814,"line_start":29,"line_end":29,"column_start":1,"column_end":13}},{"value":"/","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\future\\select_ok.rs","byte_start":135815,"byte_end":135818,"line_start":30,"line_end":30,"column_start":1,"column_end":4}},{"value":"/ This function will panic if the iterator specified contains no items.","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\future\\select_ok.rs","byte_start":135819,"byte_end":135892,"line_start":31,"line_end":31,"column_start":1,"column_end":74}}]},{"kind":"TupleVariant","id":{"krate":0,"index":12542},"span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\future\\either.rs","byte_start":138652,"byte_end":138656,"line_start":30,"line_end":30,"column_start":5,"column_end":9},"name":"Left","qualname":"::future::either::Either::Left","value":"Either::Left(A)","parent":{"krate":0,"index":12539},"children":[],"decl_id":null,"docs":" First branch of the type\n","sig":null,"attributes":[{"value":"/ First branch of the type","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\future\\either.rs","byte_start":138619,"byte_end":138647,"line_start":29,"line_end":29,"column_start":5,"column_end":33}}]},{"kind":"TupleVariant","id":{"krate":0,"index":12545},"span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\future\\either.rs","byte_start":138712,"byte_end":138717,"line_start":32,"line_end":32,"column_start":5,"column_end":10},"name":"Right","qualname":"::future::either::Either::Right","value":"Either::Right(B)","parent":{"krate":0,"index":12539},"children":[],"decl_id":null,"docs":" Second branch of the type\n","sig":null,"attributes":[{"value":"/ Second branch of the type","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\future\\either.rs","byte_start":138678,"byte_end":138707,"line_start":31,"line_end":31,"column_start":5,"column_end":34}}]},{"kind":"Enum","id":{"krate":0,"index":12539},"span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\future\\either.rs","byte_start":138600,"byte_end":138606,"line_start":28,"line_end":28,"column_start":10,"column_end":16},"name":"Either","qualname":"::future::either::Either","value":"pub enum Either<A, B> { Left(A), Right(B), }","parent":null,"children":[{"krate":0,"index":12542},{"krate":0,"index":12545}],"decl_id":null,"docs":" Combines two different futures, streams, or sinks having the same associated types into a single type.","sig":null,"attributes":[{"value":"/ Combines two different futures, streams, or sinks having the same associated types into a single type.","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\future\\either.rs","byte_start":138077,"byte_end":138183,"line_start":8,"line_end":8,"column_start":1,"column_end":107}},{"value":"/","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\future\\either.rs","byte_start":138184,"byte_end":138187,"line_start":9,"line_end":9,"column_start":1,"column_end":4}},{"value":"/ This is useful when conditionally choosing between two distinct future types:","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\future\\either.rs","byte_start":138188,"byte_end":138269,"line_start":10,"line_end":10,"column_start":1,"column_end":82}},{"value":"/","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\future\\either.rs","byte_start":138270,"byte_end":138273,"line_start":11,"line_end":11,"column_start":1,"column_end":4}},{"value":"/ ```rust","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\future\\either.rs","byte_start":138274,"byte_end":138285,"line_start":12,"line_end":12,"column_start":1,"column_end":12}},{"value":"/ use futures::future::Either;","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\future\\either.rs","byte_start":138286,"byte_end":138318,"line_start":13,"line_end":13,"column_start":1,"column_end":33}},{"value":"/","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\future\\either.rs","byte_start":138319,"byte_end":138322,"line_start":14,"line_end":14,"column_start":1,"column_end":4}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\future\\either.rs","byte_start":138323,"byte_end":138364,"line_start":15,"line_end":15,"column_start":1,"column_end":42}},{"value":"/ let cond = true;","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\future\\either.rs","byte_start":138365,"byte_end":138385,"line_start":16,"line_end":16,"column_start":1,"column_end":21}},{"value":"/","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\future\\either.rs","byte_start":138386,"byte_end":138389,"line_start":17,"line_end":17,"column_start":1,"column_end":4}},{"value":"/ let fut = if cond {","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\future\\either.rs","byte_start":138390,"byte_end":138413,"line_start":18,"line_end":18,"column_start":1,"column_end":24}},{"value":"/     Either::Left(async move { 12 })","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\future\\either.rs","byte_start":138414,"byte_end":138453,"line_start":19,"line_end":19,"column_start":1,"column_end":40}},{"value":"/ } else {","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\future\\either.rs","byte_start":138454,"byte_end":138466,"line_start":20,"line_end":20,"column_start":1,"column_end":13}},{"value":"/     Either::Right(async move { 44 })","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\future\\either.rs","byte_start":138467,"byte_end":138507,"line_start":21,"line_end":21,"column_start":1,"column_end":41}},{"value":"/ };","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\future\\either.rs","byte_start":138508,"byte_end":138514,"line_start":22,"line_end":22,"column_start":1,"column_end":7}},{"value":"/","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\future\\either.rs","byte_start":138515,"byte_end":138518,"line_start":23,"line_end":23,"column_start":1,"column_end":4}},{"value":"/ assert_eq!(fut.await, 12);","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\future\\either.rs","byte_start":138519,"byte_end":138549,"line_start":24,"line_end":24,"column_start":1,"column_end":31}},{"value":"/ # })","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\future\\either.rs","byte_start":138550,"byte_end":138558,"line_start":25,"line_end":25,"column_start":1,"column_end":9}},{"value":"/ ```","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\future\\either.rs","byte_start":138559,"byte_end":138566,"line_start":26,"line_end":26,"column_start":1,"column_end":8}}]},{"kind":"Method","id":{"krate":0,"index":1739},"span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\future\\either.rs","byte_start":139271,"byte_end":139283,"line_start":50,"line_end":50,"column_start":12,"column_end":24},"name":"factor_first","qualname":"<Either<(T, A), (T, B)>>::factor_first","value":"pub fn factor_first(Self) -> (T, Either<A, B>)","parent":null,"children":[],"decl_id":null,"docs":" Factor out a homogeneous type from an either of pairs.","sig":null,"attributes":[{"value":"/ Factor out a homogeneous type from an either of pairs.","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\future\\either.rs","byte_start":139123,"byte_end":139181,"line_start":47,"line_end":47,"column_start":5,"column_end":63}},{"value":"/","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\future\\either.rs","byte_start":139186,"byte_end":139189,"line_start":48,"line_end":48,"column_start":5,"column_end":8}},{"value":"/ Here, the homogeneous type is the first element of the pairs.","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\future\\either.rs","byte_start":139194,"byte_end":139259,"line_start":49,"line_end":49,"column_start":5,"column_end":70}}]},{"kind":"Method","id":{"krate":0,"index":1744},"span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\future\\either.rs","byte_start":139663,"byte_end":139676,"line_start":62,"line_end":62,"column_start":12,"column_end":25},"name":"factor_second","qualname":"<Either<(A, T), (B, T)>>::factor_second","value":"pub fn factor_second(Self) -> (Either<A, B>, T)","parent":null,"children":[],"decl_id":null,"docs":" Factor out a homogeneous type from an either of pairs.","sig":null,"attributes":[{"value":"/ Factor out a homogeneous type from an either of pairs.","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\future\\either.rs","byte_start":139514,"byte_end":139572,"line_start":59,"line_end":59,"column_start":5,"column_end":63}},{"value":"/","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\future\\either.rs","byte_start":139577,"byte_end":139580,"line_start":60,"line_end":60,"column_start":5,"column_end":8}},{"value":"/ Here, the homogeneous type is the second element of the pairs.","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\future\\either.rs","byte_start":139585,"byte_end":139651,"line_start":61,"line_end":61,"column_start":5,"column_end":71}}]},{"kind":"Method","id":{"krate":0,"index":1747},"span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\future\\either.rs","byte_start":139964,"byte_end":139974,"line_start":72,"line_end":72,"column_start":12,"column_end":22},"name":"into_inner","qualname":"<Either<T, T>>::into_inner","value":"pub fn into_inner(Self) -> T","parent":null,"children":[],"decl_id":null,"docs":" Extract the value of an either over two equivalent types.\n","sig":null,"attributes":[{"value":"/ Extract the value of an either over two equivalent types.","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\future\\either.rs","byte_start":139891,"byte_end":139952,"line_start":71,"line_end":71,"column_start":5,"column_end":66}}]},{"kind":"Function","id":{"krate":0,"index":1854},"span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\future\\abortable.rs","byte_start":146578,"byte_end":146587,"line_start":12,"line_end":12,"column_start":8,"column_end":17},"name":"abortable","qualname":"::future::abortable::abortable","value":"pub fn abortable<Fut>(Fut) -> (Abortable<Fut>, AbortHandle) where Fut: Future","parent":null,"children":[],"decl_id":null,"docs":" Creates a new `Abortable` future and an `AbortHandle` which can be used to stop it.","sig":null,"attributes":[{"value":"/ Creates a new `Abortable` future and an `AbortHandle` which can be used to stop it.","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\future\\abortable.rs","byte_start":146208,"byte_end":146295,"line_start":5,"line_end":5,"column_start":1,"column_end":88}},{"value":"/","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\future\\abortable.rs","byte_start":146296,"byte_end":146299,"line_start":6,"line_end":6,"column_start":1,"column_end":4}},{"value":"/ This function is a convenient (but less flexible) alternative to calling","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\future\\abortable.rs","byte_start":146300,"byte_end":146376,"line_start":7,"line_end":7,"column_start":1,"column_end":77}},{"value":"/ `AbortHandle::new` and `Abortable::new` manually.","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\future\\abortable.rs","byte_start":146377,"byte_end":146430,"line_start":8,"line_end":8,"column_start":1,"column_end":54}},{"value":"/","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\future\\abortable.rs","byte_start":146431,"byte_end":146434,"line_start":9,"line_end":9,"column_start":1,"column_end":4}},{"value":"/ This function is only available when the `std` or `alloc` feature of this","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\future\\abortable.rs","byte_start":146435,"byte_end":146512,"line_start":10,"line_end":10,"column_start":1,"column_end":78}},{"value":"/ library is activated, and it is activated by default.","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\future\\abortable.rs","byte_start":146513,"byte_end":146570,"line_start":11,"line_end":11,"column_start":1,"column_end":58}}]},{"kind":"Mod","id":{"krate":0,"index":1888},"span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\mod.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"stream","qualname":"::stream","value":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\mod.rs","parent":null,"children":[{"krate":0,"index":1889},{"krate":0,"index":1890},{"krate":0,"index":1893},{"krate":0,"index":1896},{"krate":0,"index":1897},{"krate":0,"index":1900},{"krate":0,"index":1903},{"krate":0,"index":1906},{"krate":0,"index":4297},{"krate":0,"index":4298},{"krate":0,"index":4301},{"krate":0,"index":4304},{"krate":0,"index":4307},{"krate":0,"index":4310},{"krate":0,"index":4313},{"krate":0,"index":4316},{"krate":0,"index":4319},{"krate":0,"index":4322},{"krate":0,"index":4325},{"krate":0,"index":4328},{"krate":0,"index":4331},{"krate":0,"index":4334},{"krate":0,"index":4337},{"krate":0,"index":4340},{"krate":0,"index":4343},{"krate":0,"index":4346},{"krate":0,"index":4349},{"krate":0,"index":4352},{"krate":0,"index":4355},{"krate":0,"index":4358},{"krate":0,"index":4361},{"krate":0,"index":4364},{"krate":0,"index":4367},{"krate":0,"index":4370},{"krate":0,"index":4373},{"krate":0,"index":4376},{"krate":0,"index":4379},{"krate":0,"index":4382},{"krate":0,"index":4385},{"krate":0,"index":4388},{"krate":0,"index":4391},{"krate":0,"index":4394},{"krate":0,"index":4397},{"krate":0,"index":4400},{"krate":0,"index":4403},{"krate":0,"index":4406},{"krate":0,"index":4407},{"krate":0,"index":4410},{"krate":0,"index":4413},{"krate":0,"index":4416},{"krate":0,"index":4417},{"krate":0,"index":4418},{"krate":0,"index":4420},{"krate":0,"index":4423},{"krate":0,"index":4426},{"krate":0,"index":5673},{"krate":0,"index":5674},{"krate":0,"index":5677},{"krate":0,"index":5680},{"krate":0,"index":5683},{"krate":0,"index":5686},{"krate":0,"index":5689},{"krate":0,"index":5692},{"krate":0,"index":5695},{"krate":0,"index":5698},{"krate":0,"index":5701},{"krate":0,"index":5704},{"krate":0,"index":5707},{"krate":0,"index":5710},{"krate":0,"index":5713},{"krate":0,"index":5716},{"krate":0,"index":5719},{"krate":0,"index":5722},{"krate":0,"index":5725},{"krate":0,"index":5728},{"krate":0,"index":5731},{"krate":0,"index":5734},{"krate":0,"index":5737},{"krate":0,"index":5740},{"krate":0,"index":5741},{"krate":0,"index":5744},{"krate":0,"index":5747},{"krate":0,"index":5750},{"krate":0,"index":5751},{"krate":0,"index":5754},{"krate":0,"index":5755},{"krate":0,"index":5757},{"krate":0,"index":5783},{"krate":0,"index":5784},{"krate":0,"index":5787},{"krate":0,"index":5790},{"krate":0,"index":5823},{"krate":0,"index":5824},{"krate":0,"index":5827},{"krate":0,"index":5830},{"krate":0,"index":5867},{"krate":0,"index":5868},{"krate":0,"index":5871},{"krate":0,"index":5874},{"krate":0,"index":5913},{"krate":0,"index":5914},{"krate":0,"index":5917},{"krate":0,"index":5920},{"krate":0,"index":5963},{"krate":0,"index":5964},{"krate":0,"index":5967},{"krate":0,"index":5970},{"krate":0,"index":6009},{"krate":0,"index":6010},{"krate":0,"index":6013},{"krate":0,"index":6016},{"krate":0,"index":6052},{"krate":0,"index":6053},{"krate":0,"index":6056},{"krate":0,"index":6059},{"krate":0,"index":6087},{"krate":0,"index":6088},{"krate":0,"index":6091},{"krate":0,"index":6094},{"krate":0,"index":6148},{"krate":0,"index":6149},{"krate":0,"index":6152},{"krate":0,"index":6155},{"krate":0,"index":6230},{"krate":0,"index":6231},{"krate":0,"index":6234},{"krate":0,"index":6237},{"krate":0,"index":6240},{"krate":0,"index":6299},{"krate":0,"index":6300},{"krate":0,"index":6303},{"krate":0,"index":6306},{"krate":0,"index":6413},{"krate":0,"index":6416},{"krate":0,"index":6819},{"krate":0,"index":6822},{"krate":0,"index":6944},{"krate":0,"index":6945},{"krate":0,"index":6948},{"krate":0,"index":6951},{"krate":0,"index":6967},{"krate":0,"index":6968},{"krate":0,"index":6971},{"krate":0,"index":6974},{"krate":0,"index":6977},{"krate":0,"index":6978},{"krate":0,"index":6980},{"krate":0,"index":6983}],"decl_id":null,"docs":" Asynchronous streams.","sig":null,"attributes":[{"value":"/ Asynchronous streams.","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\mod.rs","byte_start":146839,"byte_end":146864,"line_start":1,"line_end":1,"column_start":1,"column_end":26}},{"value":"/","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\mod.rs","byte_start":146865,"byte_end":146868,"line_start":2,"line_end":2,"column_start":1,"column_end":4}},{"value":"/ This module contains:","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\mod.rs","byte_start":146869,"byte_end":146894,"line_start":3,"line_end":3,"column_start":1,"column_end":26}},{"value":"/","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\mod.rs","byte_start":146895,"byte_end":146898,"line_start":4,"line_end":4,"column_start":1,"column_end":4}},{"value":"/ - The [`Stream`] trait, for objects that can asynchronously produce a","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\mod.rs","byte_start":146899,"byte_end":146972,"line_start":5,"line_end":5,"column_start":1,"column_end":74}},{"value":"/   sequence of values.","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\mod.rs","byte_start":146973,"byte_end":146998,"line_start":6,"line_end":6,"column_start":1,"column_end":26}},{"value":"/ - The [`StreamExt`] and [`TryStreamExt`] trait, which provides adapters for","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\mod.rs","byte_start":146999,"byte_end":147078,"line_start":7,"line_end":7,"column_start":1,"column_end":80}},{"value":"/   chaining and composing streams.","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\mod.rs","byte_start":147079,"byte_end":147116,"line_start":8,"line_end":8,"column_start":1,"column_end":38}},{"value":"/ - Top-level stream constructors like [`iter`](iter()) which creates a","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\mod.rs","byte_start":147117,"byte_end":147190,"line_start":9,"line_end":9,"column_start":1,"column_end":74}},{"value":"/   stream from an iterator.","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\mod.rs","byte_start":147191,"byte_end":147221,"line_start":10,"line_end":10,"column_start":1,"column_end":31}}]},{"kind":"Struct","id":{"krate":0,"index":12556},"span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\stream\\chain.rs","byte_start":208865,"byte_end":208870,"line_start":11,"line_end":11,"column_start":16,"column_end":21},"name":"Chain","qualname":"::stream::stream::chain::Chain","value":"Chain {  }","parent":null,"children":[{"krate":0,"index":12559},{"krate":0,"index":12560}],"decl_id":null,"docs":" Stream for the [`chain`](super::StreamExt::chain) method.\n","sig":null,"attributes":[{"value":"must_use = \"streams do nothing unless polled\"","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pin-project-lite-0.2.9\\src\\lib.rs","byte_start":14239710,"byte_end":14239719,"line_start":633,"line_end":633,"column_start":11,"column_end":20}}]},{"kind":"Struct","id":{"krate":0,"index":12605},"span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\stream\\collect.rs","byte_start":210995,"byte_end":211002,"line_start":13,"line_end":13,"column_start":16,"column_end":23},"name":"Collect","qualname":"::stream::stream::collect::Collect","value":"Collect {  }","parent":null,"children":[{"krate":0,"index":12608},{"krate":0,"index":12609}],"decl_id":null,"docs":" Future for the [`collect`](super::StreamExt::collect) method.\n","sig":null,"attributes":[{"value":"must_use = \"futures do nothing unless you `.await` or poll them\"","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pin-project-lite-0.2.9\\src\\lib.rs","byte_start":14239710,"byte_end":14239719,"line_start":633,"line_end":633,"column_start":11,"column_end":20}}]},{"kind":"Struct","id":{"krate":0,"index":12654},"span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\stream\\unzip.rs","byte_start":212436,"byte_end":212441,"line_start":13,"line_end":13,"column_start":16,"column_end":21},"name":"Unzip","qualname":"::stream::stream::unzip::Unzip","value":"Unzip {  }","parent":null,"children":[{"krate":0,"index":12658},{"krate":0,"index":12659},{"krate":0,"index":12660}],"decl_id":null,"docs":" Future for the [`unzip`](super::StreamExt::unzip) method.\n","sig":null,"attributes":[{"value":"must_use = \"futures do nothing unless you `.await` or poll them\"","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pin-project-lite-0.2.9\\src\\lib.rs","byte_start":14239710,"byte_end":14239719,"line_start":633,"line_end":633,"column_start":11,"column_end":20}}]},{"kind":"Struct","id":{"krate":0,"index":12716},"span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\stream\\concat.rs","byte_start":214275,"byte_end":214281,"line_start":12,"line_end":12,"column_start":16,"column_end":22},"name":"Concat","qualname":"::stream::stream::concat::Concat","value":"Concat {  }","parent":null,"children":[{"krate":0,"index":12718},{"krate":0,"index":12719}],"decl_id":null,"docs":" Future for the [`concat`](super::StreamExt::concat) method.\n","sig":null,"attributes":[{"value":"must_use = \"futures do nothing unless you `.await` or poll them\"","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pin-project-lite-0.2.9\\src\\lib.rs","byte_start":14239710,"byte_end":14239719,"line_start":633,"line_end":633,"column_start":11,"column_end":20}}]},{"kind":"Struct","id":{"krate":0,"index":12756},"span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\stream\\count.rs","byte_start":215953,"byte_end":215958,"line_start":12,"line_end":12,"column_start":16,"column_end":21},"name":"Count","qualname":"::stream::stream::count::Count","value":"Count {  }","parent":null,"children":[{"krate":0,"index":12758},{"krate":0,"index":12759}],"decl_id":null,"docs":" Future for the [`count`](super::StreamExt::count) method.\n","sig":null,"attributes":[{"value":"must_use = \"futures do nothing unless you `.await` or poll them\"","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pin-project-lite-0.2.9\\src\\lib.rs","byte_start":14239710,"byte_end":14239719,"line_start":633,"line_end":633,"column_start":11,"column_end":20}}]},{"kind":"Struct","id":{"krate":0,"index":12793},"span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\stream\\cycle.rs","byte_start":217268,"byte_end":217273,"line_start":12,"line_end":12,"column_start":16,"column_end":21},"name":"Cycle","qualname":"::stream::stream::cycle::Cycle","value":"Cycle {  }","parent":null,"children":[{"krate":0,"index":12795},{"krate":0,"index":12796}],"decl_id":null,"docs":" Stream for the [`cycle`](super::StreamExt::cycle) method.\n","sig":null,"attributes":[{"value":"must_use = \"streams do nothing unless polled\"","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pin-project-lite-0.2.9\\src\\lib.rs","byte_start":14239710,"byte_end":14239719,"line_start":633,"line_end":633,"column_start":11,"column_end":20}}]},{"kind":"Struct","id":{"krate":0,"index":12833},"span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\stream\\enumerate.rs","byte_start":218920,"byte_end":218929,"line_start":13,"line_end":13,"column_start":16,"column_end":25},"name":"Enumerate","qualname":"::stream::stream::enumerate::Enumerate","value":"Enumerate {  }","parent":null,"children":[{"krate":0,"index":12835},{"krate":0,"index":12836}],"decl_id":null,"docs":" Stream for the [`enumerate`](super::StreamExt::enumerate) method.\n","sig":null,"attributes":[{"value":"must_use = \"streams do nothing unless polled\"","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pin-project-lite-0.2.9\\src\\lib.rs","byte_start":14239710,"byte_end":14239719,"line_start":633,"line_end":633,"column_start":11,"column_end":20}}]},{"kind":"Struct","id":{"krate":0,"index":12881},"span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\stream\\filter.rs","byte_start":220561,"byte_end":220567,"line_start":15,"line_end":15,"column_start":16,"column_end":22},"name":"Filter","qualname":"::stream::stream::filter::Filter","value":"Filter {  }","parent":null,"children":[{"krate":0,"index":12885},{"krate":0,"index":12886},{"krate":0,"index":12887},{"krate":0,"index":12888}],"decl_id":null,"docs":" Stream for the [`filter`](super::StreamExt::filter) method.\n","sig":null,"attributes":[{"value":"must_use = \"streams do nothing unless polled\"","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pin-project-lite-0.2.9\\src\\lib.rs","byte_start":14239710,"byte_end":14239719,"line_start":633,"line_end":633,"column_start":11,"column_end":20}}]},{"kind":"Struct","id":{"krate":0,"index":12950},"span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\stream\\filter_map.rs","byte_start":223961,"byte_end":223970,"line_start":15,"line_end":15,"column_start":16,"column_end":25},"name":"FilterMap","qualname":"::stream::stream::filter_map::FilterMap","value":"FilterMap {  }","parent":null,"children":[{"krate":0,"index":12954},{"krate":0,"index":12955},{"krate":0,"index":12956}],"decl_id":null,"docs":" Stream for the [`filter_map`](super::StreamExt::filter_map) method.\n","sig":null,"attributes":[{"value":"must_use = \"streams do nothing unless polled\"","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pin-project-lite-0.2.9\\src\\lib.rs","byte_start":14239710,"byte_end":14239719,"line_start":633,"line_end":633,"column_start":11,"column_end":20}}]},{"kind":"Struct","id":{"krate":0,"index":13015},"span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\stream\\flatten.rs","byte_start":226976,"byte_end":226983,"line_start":13,"line_end":13,"column_start":16,"column_end":23},"name":"Flatten","qualname":"::stream::stream::flatten::Flatten","value":"Flatten {  }","parent":null,"children":[{"krate":0,"index":13018},{"krate":0,"index":13019}],"decl_id":null,"docs":" Stream for the [`flatten`](super::StreamExt::flatten) method.\n","sig":null,"attributes":[{"value":"must_use = \"streams do nothing unless polled\"","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pin-project-lite-0.2.9\\src\\lib.rs","byte_start":14239710,"byte_end":14239719,"line_start":633,"line_end":633,"column_start":11,"column_end":20}}]},{"kind":"Struct","id":{"krate":0,"index":13074},"span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\stream\\mod.rs","byte_start":152745,"byte_end":152752,"line_start":67,"line_end":67,"column_start":5,"column_end":12},"name":"Flatten","qualname":"::stream::stream::Flatten","value":"Flatten {  }","parent":null,"children":[{"krate":0,"index":13076}],"decl_id":null,"docs":" Stream for the [`flatten`](StreamExt::flatten) method.\n","sig":null,"attributes":[{"value":"must_use =\n\"futures/streams/sinks do nothing unless you `.await` or poll them\"","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pin-project-lite-0.2.9\\src\\lib.rs","byte_start":14239710,"byte_end":14239719,"line_start":633,"line_end":633,"column_start":11,"column_end":20}}]},{"kind":"Struct","id":{"krate":0,"index":13135},"span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\stream\\fold.rs","byte_start":228800,"byte_end":228804,"line_start":12,"line_end":12,"column_start":16,"column_end":20},"name":"Fold","qualname":"::stream::stream::fold::Fold","value":"Fold {  }","parent":null,"children":[{"krate":0,"index":13140},{"krate":0,"index":13141},{"krate":0,"index":13142},{"krate":0,"index":13143}],"decl_id":null,"docs":" Future for the [`fold`](super::StreamExt::fold) method.\n","sig":null,"attributes":[{"value":"must_use = \"futures do nothing unless you `.await` or poll them\"","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pin-project-lite-0.2.9\\src\\lib.rs","byte_start":14239710,"byte_end":14239719,"line_start":633,"line_end":633,"column_start":11,"column_end":20}}]},{"kind":"Struct","id":{"krate":0,"index":13204},"span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\stream\\any.rs","byte_start":231261,"byte_end":231264,"line_start":12,"line_end":12,"column_start":16,"column_end":19},"name":"Any","qualname":"::stream::stream::any::Any","value":"Any {  }","parent":null,"children":[{"krate":0,"index":13208},{"krate":0,"index":13209},{"krate":0,"index":13210},{"krate":0,"index":13211}],"decl_id":null,"docs":" Future for the [`any`](super::StreamExt::any) method.\n","sig":null,"attributes":[{"value":"must_use = \"futures do nothing unless you `.await` or poll them\"","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pin-project-lite-0.2.9\\src\\lib.rs","byte_start":14239710,"byte_end":14239719,"line_start":633,"line_end":633,"column_start":11,"column_end":20}}]},{"kind":"Struct","id":{"krate":0,"index":13265},"span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\stream\\all.rs","byte_start":233837,"byte_end":233840,"line_start":12,"line_end":12,"column_start":16,"column_end":19},"name":"All","qualname":"::stream::stream::all::All","value":"All {  }","parent":null,"children":[{"krate":0,"index":13269},{"krate":0,"index":13270},{"krate":0,"index":13271},{"krate":0,"index":13272}],"decl_id":null,"docs":" Future for the [`all`](super::StreamExt::all) method.\n","sig":null,"attributes":[{"value":"must_use = \"futures do nothing unless you `.await` or poll them\"","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pin-project-lite-0.2.9\\src\\lib.rs","byte_start":14239710,"byte_end":14239719,"line_start":633,"line_end":633,"column_start":11,"column_end":20}}]},{"kind":"Struct","id":{"krate":0,"index":13326},"span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\stream\\forward.rs","byte_start":236506,"byte_end":236513,"line_start":15,"line_end":15,"column_start":16,"column_end":23},"name":"Forward","qualname":"::stream::stream::forward::Forward","value":"Forward {  }","parent":null,"children":[{"krate":0,"index":13330},{"krate":0,"index":13331},{"krate":0,"index":13332}],"decl_id":null,"docs":" Future for the [`forward`](super::StreamExt::forward) method.\n","sig":null,"attributes":[{"value":"must_use = \"futures do nothing unless you `.await` or poll them\"","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pin-project-lite-0.2.9\\src\\lib.rs","byte_start":14239710,"byte_end":14239719,"line_start":633,"line_end":633,"column_start":11,"column_end":20}}]},{"kind":"Struct","id":{"krate":0,"index":13391},"span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\stream\\mod.rs","byte_start":153466,"byte_end":153473,"line_start":92,"line_end":92,"column_start":5,"column_end":12},"name":"Forward","qualname":"::stream::stream::Forward","value":"Forward {  }","parent":null,"children":[{"krate":0,"index":13394}],"decl_id":null,"docs":" Future for the [`forward`](super::StreamExt::forward) method.\n","sig":null,"attributes":[{"value":"must_use =\n\"futures/streams/sinks do nothing unless you `.await` or poll them\"","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pin-project-lite-0.2.9\\src\\lib.rs","byte_start":14239710,"byte_end":14239719,"line_start":633,"line_end":633,"column_start":11,"column_end":20}}]},{"kind":"Struct","id":{"krate":0,"index":13449},"span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\stream\\for_each.rs","byte_start":238749,"byte_end":238756,"line_start":12,"line_end":12,"column_start":16,"column_end":23},"name":"ForEach","qualname":"::stream::stream::for_each::ForEach","value":"ForEach {  }","parent":null,"children":[{"krate":0,"index":13453},{"krate":0,"index":13454},{"krate":0,"index":13455}],"decl_id":null,"docs":" Future for the [`for_each`](super::StreamExt::for_each) method.\n","sig":null,"attributes":[{"value":"must_use = \"futures do nothing unless you `.await` or poll them\"","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pin-project-lite-0.2.9\\src\\lib.rs","byte_start":14239710,"byte_end":14239719,"line_start":633,"line_end":633,"column_start":11,"column_end":20}}]},{"kind":"Struct","id":{"krate":0,"index":13506},"span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\stream\\fuse.rs","byte_start":240713,"byte_end":240717,"line_start":13,"line_end":13,"column_start":16,"column_end":20},"name":"Fuse","qualname":"::stream::stream::fuse::Fuse","value":"Fuse {  }","parent":null,"children":[{"krate":0,"index":13508},{"krate":0,"index":13509}],"decl_id":null,"docs":" Stream for the [`fuse`](super::StreamExt::fuse) method.\n","sig":null,"attributes":[{"value":"must_use = \"streams do nothing unless polled\"","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pin-project-lite-0.2.9\\src\\lib.rs","byte_start":14239710,"byte_end":14239719,"line_start":633,"line_end":633,"column_start":11,"column_end":20}}]},{"kind":"Method","id":{"krate":0,"index":2779},"span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\stream\\fuse.rs","byte_start":241169,"byte_end":241176,"line_start":30,"line_end":30,"column_start":12,"column_end":19},"name":"is_done","qualname":"<Fuse<St>>::is_done","value":"pub fn is_done(&Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Returns whether the underlying stream has finished or not.","sig":null,"attributes":[{"value":"/ Returns whether the underlying stream has finished or not.","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\stream\\fuse.rs","byte_start":240900,"byte_end":240962,"line_start":25,"line_end":25,"column_start":5,"column_end":67}},{"value":"/","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\stream\\fuse.rs","byte_start":240967,"byte_end":240970,"line_start":26,"line_end":26,"column_start":5,"column_end":8}},{"value":"/ If this method returns `true`, then all future calls to poll are","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\stream\\fuse.rs","byte_start":240975,"byte_end":241043,"line_start":27,"line_end":27,"column_start":5,"column_end":73}},{"value":"/ guaranteed to return `None`. If this returns `false`, then the","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\stream\\fuse.rs","byte_start":241048,"byte_end":241114,"line_start":28,"line_end":28,"column_start":5,"column_end":71}},{"value":"/ underlying stream is still in use.","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\stream\\fuse.rs","byte_start":241119,"byte_end":241157,"line_start":29,"line_end":29,"column_start":5,"column_end":43}}]},{"kind":"Struct","id":{"krate":0,"index":13554},"span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\stream\\into_future.rs","byte_start":242535,"byte_end":242547,"line_start":11,"line_end":11,"column_start":12,"column_end":24},"name":"StreamFuture","qualname":"::stream::stream::into_future::StreamFuture","value":"StreamFuture {  }","parent":null,"children":[{"krate":0,"index":13556}],"decl_id":null,"docs":" Future for the [`into_future`](super::StreamExt::into_future) method.\n","sig":null,"attributes":[{"value":"/ Future for the [`into_future`](super::StreamExt::into_future) method.","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\stream\\into_future.rs","byte_start":242365,"byte_end":242438,"line_start":8,"line_end":8,"column_start":1,"column_end":74}},{"value":"must_use = \"futures do nothing unless you `.await` or poll them\"","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\stream\\into_future.rs","byte_start":242456,"byte_end":242523,"line_start":10,"line_end":10,"column_start":1,"column_end":68}}]},{"kind":"Method","id":{"krate":0,"index":2825},"span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\stream\\into_future.rs","byte_start":243110,"byte_end":243117,"line_start":27,"line_end":27,"column_start":12,"column_end":19},"name":"get_ref","qualname":"<StreamFuture<St>>::get_ref","value":"pub fn get_ref(&Self) -> Option<&St>","parent":null,"children":[],"decl_id":null,"docs":" Acquires a reference to the underlying stream that this combinator is\n pulling from.","sig":null,"attributes":[{"value":"/ Acquires a reference to the underlying stream that this combinator is","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\stream\\into_future.rs","byte_start":242718,"byte_end":242791,"line_start":20,"line_end":20,"column_start":5,"column_end":78}},{"value":"/ pulling from.","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\stream\\into_future.rs","byte_start":242796,"byte_end":242813,"line_start":21,"line_end":21,"column_start":5,"column_end":22}},{"value":"/","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\stream\\into_future.rs","byte_start":242818,"byte_end":242821,"line_start":22,"line_end":22,"column_start":5,"column_end":8}},{"value":"/ This method returns an `Option` to account for the fact that `StreamFuture`'s","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\stream\\into_future.rs","byte_start":242826,"byte_end":242907,"line_start":23,"line_end":23,"column_start":5,"column_end":86}},{"value":"/ implementation of `Future::poll` consumes the underlying stream during polling","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\stream\\into_future.rs","byte_start":242912,"byte_end":242994,"line_start":24,"line_end":24,"column_start":5,"column_end":87}},{"value":"/ in order to return it to the caller of `Future::poll` if the stream yielded","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\stream\\into_future.rs","byte_start":242999,"byte_end":243078,"line_start":25,"line_end":25,"column_start":5,"column_end":84}},{"value":"/ an element.","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\stream\\into_future.rs","byte_start":243083,"byte_end":243098,"line_start":26,"line_end":26,"column_start":5,"column_end":20}}]},{"kind":"Method","id":{"krate":0,"index":2826},"span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\stream\\into_future.rs","byte_start":243728,"byte_end":243735,"line_start":41,"line_end":41,"column_start":12,"column_end":19},"name":"get_mut","qualname":"<StreamFuture<St>>::get_mut","value":"pub fn get_mut(&mut Self) -> Option<&mut St>","parent":null,"children":[],"decl_id":null,"docs":" Acquires a mutable reference to the underlying stream that this\n combinator is pulling from.","sig":null,"attributes":[{"value":"/ Acquires a mutable reference to the underlying stream that this","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\stream\\into_future.rs","byte_start":243182,"byte_end":243249,"line_start":31,"line_end":31,"column_start":5,"column_end":72}},{"value":"/ combinator is pulling from.","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\stream\\into_future.rs","byte_start":243254,"byte_end":243285,"line_start":32,"line_end":32,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\stream\\into_future.rs","byte_start":243290,"byte_end":243293,"line_start":33,"line_end":33,"column_start":5,"column_end":8}},{"value":"/ Note that care must be taken to avoid tampering with the state of the","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\stream\\into_future.rs","byte_start":243298,"byte_end":243371,"line_start":34,"line_end":34,"column_start":5,"column_end":78}},{"value":"/ stream which may otherwise confuse this combinator.","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\stream\\into_future.rs","byte_start":243376,"byte_end":243431,"line_start":35,"line_end":35,"column_start":5,"column_end":60}},{"value":"/","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\stream\\into_future.rs","byte_start":243436,"byte_end":243439,"line_start":36,"line_end":36,"column_start":5,"column_end":8}},{"value":"/ This method returns an `Option` to account for the fact that `StreamFuture`'s","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\stream\\into_future.rs","byte_start":243444,"byte_end":243525,"line_start":37,"line_end":37,"column_start":5,"column_end":86}},{"value":"/ implementation of `Future::poll` consumes the underlying stream during polling","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\stream\\into_future.rs","byte_start":243530,"byte_end":243612,"line_start":38,"line_end":38,"column_start":5,"column_end":87}},{"value":"/ in order to return it to the caller of `Future::poll` if the stream yielded","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\stream\\into_future.rs","byte_start":243617,"byte_end":243696,"line_start":39,"line_end":39,"column_start":5,"column_end":84}},{"value":"/ an element.","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\stream\\into_future.rs","byte_start":243701,"byte_end":243716,"line_start":40,"line_end":40,"column_start":5,"column_end":20}}]},{"kind":"Method","id":{"krate":0,"index":2827},"span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\stream\\into_future.rs","byte_start":244361,"byte_end":244372,"line_start":55,"line_end":55,"column_start":12,"column_end":23},"name":"get_pin_mut","qualname":"<StreamFuture<St>>::get_pin_mut","value":"pub fn get_pin_mut(Pin<&mut Self>) -> Option<Pin<&mut St>>","parent":null,"children":[],"decl_id":null,"docs":" Acquires a pinned mutable reference to the underlying stream that this\n combinator is pulling from.","sig":null,"attributes":[{"value":"/ Acquires a pinned mutable reference to the underlying stream that this","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\stream\\into_future.rs","byte_start":243808,"byte_end":243882,"line_start":45,"line_end":45,"column_start":5,"column_end":79}},{"value":"/ combinator is pulling from.","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\stream\\into_future.rs","byte_start":243887,"byte_end":243918,"line_start":46,"line_end":46,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\stream\\into_future.rs","byte_start":243923,"byte_end":243926,"line_start":47,"line_end":47,"column_start":5,"column_end":8}},{"value":"/ Note that care must be taken to avoid tampering with the state of the","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\stream\\into_future.rs","byte_start":243931,"byte_end":244004,"line_start":48,"line_end":48,"column_start":5,"column_end":78}},{"value":"/ stream which may otherwise confuse this combinator.","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\stream\\into_future.rs","byte_start":244009,"byte_end":244064,"line_start":49,"line_end":49,"column_start":5,"column_end":60}},{"value":"/","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\stream\\into_future.rs","byte_start":244069,"byte_end":244072,"line_start":50,"line_end":50,"column_start":5,"column_end":8}},{"value":"/ This method returns an `Option` to account for the fact that `StreamFuture`'s","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\stream\\into_future.rs","byte_start":244077,"byte_end":244158,"line_start":51,"line_end":51,"column_start":5,"column_end":86}},{"value":"/ implementation of `Future::poll` consumes the underlying stream during polling","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\stream\\into_future.rs","byte_start":244163,"byte_end":244245,"line_start":52,"line_end":52,"column_start":5,"column_end":87}},{"value":"/ in order to return it to the caller of `Future::poll` if the stream yielded","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\stream\\into_future.rs","byte_start":244250,"byte_end":244329,"line_start":53,"line_end":53,"column_start":5,"column_end":84}},{"value":"/ an element.","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\stream\\into_future.rs","byte_start":244334,"byte_end":244349,"line_start":54,"line_end":54,"column_start":5,"column_end":20}}]},{"kind":"Method","id":{"krate":0,"index":2828},"span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\stream\\into_future.rs","byte_start":245005,"byte_end":245015,"line_start":68,"line_end":68,"column_start":12,"column_end":22},"name":"into_inner","qualname":"<StreamFuture<St>>::into_inner","value":"pub fn into_inner(Self) -> Option<St>","parent":null,"children":[],"decl_id":null,"docs":" Consumes this combinator, returning the underlying stream.","sig":null,"attributes":[{"value":"/ Consumes this combinator, returning the underlying stream.","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\stream\\into_future.rs","byte_start":244485,"byte_end":244547,"line_start":59,"line_end":59,"column_start":5,"column_end":67}},{"value":"/","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\stream\\into_future.rs","byte_start":244552,"byte_end":244555,"line_start":60,"line_end":60,"column_start":5,"column_end":8}},{"value":"/ Note that this may discard intermediate state of this combinator, so","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\stream\\into_future.rs","byte_start":244560,"byte_end":244632,"line_start":61,"line_end":61,"column_start":5,"column_end":77}},{"value":"/ care should be taken to avoid losing resources when this is called.","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\stream\\into_future.rs","byte_start":244637,"byte_end":244708,"line_start":62,"line_end":62,"column_start":5,"column_end":76}},{"value":"/","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\stream\\into_future.rs","byte_start":244713,"byte_end":244716,"line_start":63,"line_end":63,"column_start":5,"column_end":8}},{"value":"/ This method returns an `Option` to account for the fact that `StreamFuture`'s","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\stream\\into_future.rs","byte_start":244721,"byte_end":244802,"line_start":64,"line_end":64,"column_start":5,"column_end":86}},{"value":"/ implementation of `Future::poll` consumes the underlying stream during polling","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\stream\\into_future.rs","byte_start":244807,"byte_end":244889,"line_start":65,"line_end":65,"column_start":5,"column_end":87}},{"value":"/ in order to return it to the caller of `Future::poll` if the stream yielded","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\stream\\into_future.rs","byte_start":244894,"byte_end":244973,"line_start":66,"line_end":66,"column_start":5,"column_end":84}},{"value":"/ an element.","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\stream\\into_future.rs","byte_start":244978,"byte_end":244993,"line_start":67,"line_end":67,"column_start":5,"column_end":20}}]},{"kind":"Struct","id":{"krate":0,"index":13563},"span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\stream\\mod.rs","byte_start":154092,"byte_end":154099,"line_start":112,"line_end":112,"column_start":5,"column_end":12},"name":"Inspect","qualname":"::stream::stream::Inspect","value":"Inspect {  }","parent":null,"children":[{"krate":0,"index":13566}],"decl_id":null,"docs":" Stream for the [`inspect`](StreamExt::inspect) method.\n","sig":null,"attributes":[{"value":"must_use =\n\"futures/streams/sinks do nothing unless you `.await` or poll them\"","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pin-project-lite-0.2.9\\src\\lib.rs","byte_start":14239710,"byte_end":14239719,"line_start":633,"line_end":633,"column_start":11,"column_end":20}}]},{"kind":"Struct","id":{"krate":0,"index":13638},"span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\stream\\map.rs","byte_start":246039,"byte_end":246042,"line_start":15,"line_end":15,"column_start":16,"column_end":19},"name":"Map","qualname":"::stream::stream::map::Map","value":"Map {  }","parent":null,"children":[{"krate":0,"index":13641},{"krate":0,"index":13642}],"decl_id":null,"docs":" Stream for the [`map`](super::StreamExt::map) method.\n","sig":null,"attributes":[{"value":"must_use = \"streams do nothing unless polled\"","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pin-project-lite-0.2.9\\src\\lib.rs","byte_start":14239710,"byte_end":14239719,"line_start":633,"line_end":633,"column_start":11,"column_end":20}}]},{"kind":"Struct","id":{"krate":0,"index":13695},"span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\stream\\mod.rs","byte_start":154460,"byte_end":154467,"line_start":123,"line_end":123,"column_start":5,"column_end":12},"name":"FlatMap","qualname":"::stream::stream::FlatMap","value":"FlatMap {  }","parent":null,"children":[{"krate":0,"index":13699}],"decl_id":null,"docs":" Stream for the [`flat_map`](StreamExt::flat_map) method.\n","sig":null,"attributes":[{"value":"must_use =\n\"futures/streams/sinks do nothing unless you `.await` or poll them\"","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pin-project-lite-0.2.9\\src\\lib.rs","byte_start":14239710,"byte_end":14239719,"line_start":633,"line_end":633,"column_start":11,"column_end":20}}]},{"kind":"Struct","id":{"krate":0,"index":13784},"span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\stream\\next.rs","byte_start":247702,"byte_end":247706,"line_start":10,"line_end":10,"column_start":12,"column_end":16},"name":"Next","qualname":"::stream::stream::next::Next","value":"Next {  }","parent":null,"children":[{"krate":0,"index":13787}],"decl_id":null,"docs":" Future for the [`next`](super::StreamExt::next) method.\n","sig":null,"attributes":[{"value":"/ Future for the [`next`](super::StreamExt::next) method.","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\stream\\next.rs","byte_start":247546,"byte_end":247605,"line_start":7,"line_end":7,"column_start":1,"column_end":60}},{"value":"must_use = \"futures do nothing unless you `.await` or poll them\"","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\stream\\next.rs","byte_start":247623,"byte_end":247690,"line_start":9,"line_end":9,"column_start":1,"column_end":68}}]},{"kind":"Struct","id":{"krate":0,"index":13792},"span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\stream\\select_next_some.rs","byte_start":248714,"byte_end":248728,"line_start":12,"line_end":12,"column_start":12,"column_end":26},"name":"SelectNextSome","qualname":"::stream::stream::select_next_some::SelectNextSome","value":"SelectNextSome {  }","parent":null,"children":[{"krate":0,"index":13795}],"decl_id":null,"docs":" Future for the [`select_next_some`](super::StreamExt::select_next_some)\n method.\n","sig":null,"attributes":[{"value":"/ Future for the [`select_next_some`](super::StreamExt::select_next_some)","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\stream\\select_next_some.rs","byte_start":248530,"byte_end":248605,"line_start":8,"line_end":8,"column_start":1,"column_end":76}},{"value":"/ method.","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\stream\\select_next_some.rs","byte_start":248606,"byte_end":248617,"line_start":9,"line_end":9,"column_start":1,"column_end":12}},{"value":"must_use = \"futures do nothing unless you `.await` or poll them\"","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\stream\\select_next_some.rs","byte_start":248635,"byte_end":248702,"line_start":11,"line_end":11,"column_start":1,"column_end":68}}]},{"kind":"Struct","id":{"krate":0,"index":13800},"span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\stream\\peek.rs","byte_start":250319,"byte_end":250327,"line_start":22,"line_end":22,"column_start":16,"column_end":24},"name":"Peekable","qualname":"::stream::stream::peek::Peekable","value":"Peekable {  }","parent":null,"children":[{"krate":0,"index":13802},{"krate":0,"index":13803}],"decl_id":null,"docs":" A `Stream` that implements a `peek` method.","sig":null,"attributes":[{"value":"must_use = \"streams do nothing unless polled\"","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pin-project-lite-0.2.9\\src\\lib.rs","byte_start":14239710,"byte_end":14239719,"line_start":633,"line_end":633,"column_start":11,"column_end":20}}]},{"kind":"Method","id":{"krate":0,"index":3037},"span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\stream\\peek.rs","byte_start":250760,"byte_end":250764,"line_start":38,"line_end":38,"column_start":12,"column_end":16},"name":"peek","qualname":"<Peekable<St>>::peek","value":"pub fn peek(Pin<&mut Self>) -> Peek<, St>","parent":null,"children":[],"decl_id":null,"docs":" Produces a future which retrieves a reference to the next item\n in the stream, or `None` if the underlying stream terminates.\n","sig":null,"attributes":[{"value":"/ Produces a future which retrieves a reference to the next item","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\stream\\peek.rs","byte_start":250612,"byte_end":250678,"line_start":36,"line_end":36,"column_start":5,"column_end":71}},{"value":"/ in the stream, or `None` if the underlying stream terminates.","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\stream\\peek.rs","byte_start":250683,"byte_end":250748,"line_start":37,"line_end":37,"column_start":5,"column_end":70}}]},{"kind":"Method","id":{"krate":0,"index":3038},"span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\stream\\peek.rs","byte_start":251089,"byte_end":251098,"line_start":46,"line_end":46,"column_start":12,"column_end":21},"name":"poll_peek","qualname":"<Peekable<St>>::poll_peek","value":"pub fn poll_peek(Pin<&mut Self>, &mut Context) -> Poll<Option<&St::Item>>","parent":null,"children":[],"decl_id":null,"docs":" Peek retrieves a reference to the next item in the stream.","sig":null,"attributes":[{"value":"/ Peek retrieves a reference to the next item in the stream.","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\stream\\peek.rs","byte_start":250851,"byte_end":250913,"line_start":42,"line_end":42,"column_start":5,"column_end":67}},{"value":"/","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\stream\\peek.rs","byte_start":250918,"byte_end":250921,"line_start":43,"line_end":43,"column_start":5,"column_end":8}},{"value":"/ This method polls the underlying stream and return either a reference","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\stream\\peek.rs","byte_start":250926,"byte_end":250999,"line_start":44,"line_end":44,"column_start":5,"column_end":78}},{"value":"/ to the next item if the stream is ready or passes through any errors.","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\stream\\peek.rs","byte_start":251004,"byte_end":251077,"line_start":45,"line_end":45,"column_start":5,"column_end":78}}]},{"kind":"Method","id":{"krate":0,"index":3039},"span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\stream\\peek.rs","byte_start":252413,"byte_end":252421,"line_start":86,"line_end":86,"column_start":12,"column_end":20},"name":"peek_mut","qualname":"<Peekable<St>>::peek_mut","value":"pub fn peek_mut(Pin<&mut Self>) -> PeekMut<, St>","parent":null,"children":[],"decl_id":null,"docs":" Produces a future which retrieves a mutable reference to the next item\n in the stream, or `None` if the underlying stream terminates.","sig":null,"attributes":[{"value":"/ Produces a future which retrieves a mutable reference to the next item","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\stream\\peek.rs","byte_start":251534,"byte_end":251608,"line_start":60,"line_end":60,"column_start":5,"column_end":79}},{"value":"/ in the stream, or `None` if the underlying stream terminates.","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\stream\\peek.rs","byte_start":251613,"byte_end":251678,"line_start":61,"line_end":61,"column_start":5,"column_end":70}},{"value":"/","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\stream\\peek.rs","byte_start":251683,"byte_end":251686,"line_start":62,"line_end":62,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\stream\\peek.rs","byte_start":251691,"byte_end":251705,"line_start":63,"line_end":63,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\stream\\peek.rs","byte_start":251710,"byte_end":251713,"line_start":64,"line_end":64,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\stream\\peek.rs","byte_start":251718,"byte_end":251725,"line_start":65,"line_end":65,"column_start":5,"column_end":12}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\stream\\peek.rs","byte_start":251730,"byte_end":251771,"line_start":66,"line_end":66,"column_start":5,"column_end":46}},{"value":"/ use futures::stream::{self, StreamExt};","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\stream\\peek.rs","byte_start":251776,"byte_end":251819,"line_start":67,"line_end":67,"column_start":5,"column_end":48}},{"value":"/ use futures::pin_mut;","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\stream\\peek.rs","byte_start":251824,"byte_end":251849,"line_start":68,"line_end":68,"column_start":5,"column_end":30}},{"value":"/","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\stream\\peek.rs","byte_start":251854,"byte_end":251857,"line_start":69,"line_end":69,"column_start":5,"column_end":8}},{"value":"/ let stream = stream::iter(vec![1, 2, 3]).peekable();","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\stream\\peek.rs","byte_start":251862,"byte_end":251918,"line_start":70,"line_end":70,"column_start":5,"column_end":61}},{"value":"/ pin_mut!(stream);","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\stream\\peek.rs","byte_start":251923,"byte_end":251944,"line_start":71,"line_end":71,"column_start":5,"column_end":26}},{"value":"/","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\stream\\peek.rs","byte_start":251949,"byte_end":251952,"line_start":72,"line_end":72,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(stream.as_mut().peek_mut().await, Some(&mut 1));","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\stream\\peek.rs","byte_start":251957,"byte_end":252020,"line_start":73,"line_end":73,"column_start":5,"column_end":68}},{"value":"/ assert_eq!(stream.as_mut().next().await, Some(1));","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\stream\\peek.rs","byte_start":252025,"byte_end":252079,"line_start":74,"line_end":74,"column_start":5,"column_end":59}},{"value":"/","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\stream\\peek.rs","byte_start":252084,"byte_end":252087,"line_start":75,"line_end":75,"column_start":5,"column_end":8}},{"value":"/ // Peek into the stream and modify the value which will be returned next","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\stream\\peek.rs","byte_start":252092,"byte_end":252168,"line_start":76,"line_end":76,"column_start":5,"column_end":81}},{"value":"/ if let Some(p) = stream.as_mut().peek_mut().await {","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\stream\\peek.rs","byte_start":252173,"byte_end":252228,"line_start":77,"line_end":77,"column_start":5,"column_end":60}},{"value":"/     if *p == 2 {","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\stream\\peek.rs","byte_start":252233,"byte_end":252253,"line_start":78,"line_end":78,"column_start":5,"column_end":25}},{"value":"/         *p = 5;","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\stream\\peek.rs","byte_start":252258,"byte_end":252277,"line_start":79,"line_end":79,"column_start":5,"column_end":24}},{"value":"/     }","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\stream\\peek.rs","byte_start":252282,"byte_end":252291,"line_start":80,"line_end":80,"column_start":5,"column_end":14}},{"value":"/ }","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\stream\\peek.rs","byte_start":252296,"byte_end":252301,"line_start":81,"line_end":81,"column_start":5,"column_end":10}},{"value":"/","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\stream\\peek.rs","byte_start":252306,"byte_end":252309,"line_start":82,"line_end":82,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(stream.collect::<Vec<_>>().await, vec![5, 3]);","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\stream\\peek.rs","byte_start":252314,"byte_end":252375,"line_start":83,"line_end":83,"column_start":5,"column_end":66}},{"value":"/ # });","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\stream\\peek.rs","byte_start":252380,"byte_end":252389,"line_start":84,"line_end":84,"column_start":5,"column_end":14}},{"value":"/ ```","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\stream\\peek.rs","byte_start":252394,"byte_end":252401,"line_start":85,"line_end":85,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":3040},"span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\stream\\peek.rs","byte_start":252596,"byte_end":252609,"line_start":91,"line_end":91,"column_start":12,"column_end":25},"name":"poll_peek_mut","qualname":"<Peekable<St>>::poll_peek_mut","value":"pub fn poll_peek_mut(Pin<&mut Self>, &mut Context)\n-> Poll<Option<&mut St::Item>>","parent":null,"children":[],"decl_id":null,"docs":" Peek retrieves a mutable reference to the next item in the stream.\n","sig":null,"attributes":[{"value":"/ Peek retrieves a mutable reference to the next item in the stream.","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\stream\\peek.rs","byte_start":252514,"byte_end":252584,"line_start":90,"line_end":90,"column_start":5,"column_end":75}}]},{"kind":"Method","id":{"krate":0,"index":3041},"span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\stream\\peek.rs","byte_start":254600,"byte_end":254607,"line_start":149,"line_end":149,"column_start":12,"column_end":19},"name":"next_if","qualname":"<Peekable<St>>::next_if","value":"pub fn next_if<F>(Pin<&mut Self>, F) -> NextIf<, St, F> where\nF: FnOnce(&St::Item) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Creates a future which will consume and return the next value of this\n stream if a condition is true.","sig":null,"attributes":[{"value":"/ Creates a future which will consume and return the next value of this","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\stream\\peek.rs","byte_start":253072,"byte_end":253145,"line_start":108,"line_end":108,"column_start":5,"column_end":78}},{"value":"/ stream if a condition is true.","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\stream\\peek.rs","byte_start":253150,"byte_end":253184,"line_start":109,"line_end":109,"column_start":5,"column_end":39}},{"value":"/","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\stream\\peek.rs","byte_start":253189,"byte_end":253192,"line_start":110,"line_end":110,"column_start":5,"column_end":8}},{"value":"/ If `func` returns `true` for the next value of this stream, consume and","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\stream\\peek.rs","byte_start":253197,"byte_end":253272,"line_start":111,"line_end":111,"column_start":5,"column_end":80}},{"value":"/ return it. Otherwise, return `None`.","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\stream\\peek.rs","byte_start":253277,"byte_end":253317,"line_start":112,"line_end":112,"column_start":5,"column_end":45}},{"value":"/","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\stream\\peek.rs","byte_start":253322,"byte_end":253325,"line_start":113,"line_end":113,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\stream\\peek.rs","byte_start":253330,"byte_end":253344,"line_start":114,"line_end":114,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\stream\\peek.rs","byte_start":253349,"byte_end":253352,"line_start":115,"line_end":115,"column_start":5,"column_end":8}},{"value":"/ Consume a number if it's equal to 0.","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\stream\\peek.rs","byte_start":253357,"byte_end":253397,"line_start":116,"line_end":116,"column_start":5,"column_end":45}},{"value":"/","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\stream\\peek.rs","byte_start":253402,"byte_end":253405,"line_start":117,"line_end":117,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\stream\\peek.rs","byte_start":253410,"byte_end":253417,"line_start":118,"line_end":118,"column_start":5,"column_end":12}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\stream\\peek.rs","byte_start":253422,"byte_end":253463,"line_start":119,"line_end":119,"column_start":5,"column_end":46}},{"value":"/ use futures::stream::{self, StreamExt};","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\stream\\peek.rs","byte_start":253468,"byte_end":253511,"line_start":120,"line_end":120,"column_start":5,"column_end":48}},{"value":"/ use futures::pin_mut;","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\stream\\peek.rs","byte_start":253516,"byte_end":253541,"line_start":121,"line_end":121,"column_start":5,"column_end":30}},{"value":"/","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\stream\\peek.rs","byte_start":253546,"byte_end":253549,"line_start":122,"line_end":122,"column_start":5,"column_end":8}},{"value":"/ let stream = stream::iter(0..5).peekable();","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\stream\\peek.rs","byte_start":253554,"byte_end":253601,"line_start":123,"line_end":123,"column_start":5,"column_end":52}},{"value":"/ pin_mut!(stream);","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\stream\\peek.rs","byte_start":253606,"byte_end":253627,"line_start":124,"line_end":124,"column_start":5,"column_end":26}},{"value":"/ // The first item of the stream is 0; consume it.","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\stream\\peek.rs","byte_start":253632,"byte_end":253685,"line_start":125,"line_end":125,"column_start":5,"column_end":58}},{"value":"/ assert_eq!(stream.as_mut().next_if(|&x| x == 0).await, Some(0));","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\stream\\peek.rs","byte_start":253690,"byte_end":253758,"line_start":126,"line_end":126,"column_start":5,"column_end":73}},{"value":"/ // The next item returned is now 1, so `consume` will return `false`.","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\stream\\peek.rs","byte_start":253763,"byte_end":253836,"line_start":127,"line_end":127,"column_start":5,"column_end":78}},{"value":"/ assert_eq!(stream.as_mut().next_if(|&x| x == 0).await, None);","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\stream\\peek.rs","byte_start":253841,"byte_end":253906,"line_start":128,"line_end":128,"column_start":5,"column_end":70}},{"value":"/ // `next_if` saves the value of the next item if it was not equal to `expected`.","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\stream\\peek.rs","byte_start":253911,"byte_end":253995,"line_start":129,"line_end":129,"column_start":5,"column_end":89}},{"value":"/ assert_eq!(stream.next().await, Some(1));","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\stream\\peek.rs","byte_start":254000,"byte_end":254045,"line_start":130,"line_end":130,"column_start":5,"column_end":50}},{"value":"/ # });","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\stream\\peek.rs","byte_start":254050,"byte_end":254059,"line_start":131,"line_end":131,"column_start":5,"column_end":14}},{"value":"/ ```","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\stream\\peek.rs","byte_start":254064,"byte_end":254071,"line_start":132,"line_end":132,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\stream\\peek.rs","byte_start":254076,"byte_end":254079,"line_start":133,"line_end":133,"column_start":5,"column_end":8}},{"value":"/ Consume any number less than 10.","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\stream\\peek.rs","byte_start":254084,"byte_end":254120,"line_start":134,"line_end":134,"column_start":5,"column_end":41}},{"value":"/","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\stream\\peek.rs","byte_start":254125,"byte_end":254128,"line_start":135,"line_end":135,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\stream\\peek.rs","byte_start":254133,"byte_end":254140,"line_start":136,"line_end":136,"column_start":5,"column_end":12}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\stream\\peek.rs","byte_start":254145,"byte_end":254186,"line_start":137,"line_end":137,"column_start":5,"column_end":46}},{"value":"/ use futures::stream::{self, StreamExt};","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\stream\\peek.rs","byte_start":254191,"byte_end":254234,"line_start":138,"line_end":138,"column_start":5,"column_end":48}},{"value":"/ use futures::pin_mut;","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\stream\\peek.rs","byte_start":254239,"byte_end":254264,"line_start":139,"line_end":139,"column_start":5,"column_end":30}},{"value":"/","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\stream\\peek.rs","byte_start":254269,"byte_end":254272,"line_start":140,"line_end":140,"column_start":5,"column_end":8}},{"value":"/ let stream = stream::iter(1..20).peekable();","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\stream\\peek.rs","byte_start":254277,"byte_end":254325,"line_start":141,"line_end":141,"column_start":5,"column_end":53}},{"value":"/ pin_mut!(stream);","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\stream\\peek.rs","byte_start":254330,"byte_end":254351,"line_start":142,"line_end":142,"column_start":5,"column_end":26}},{"value":"/ // Consume all numbers less than 10","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\stream\\peek.rs","byte_start":254356,"byte_end":254395,"line_start":143,"line_end":143,"column_start":5,"column_end":44}},{"value":"/ while stream.as_mut().next_if(|&x| x < 10).await.is_some() {}","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\stream\\peek.rs","byte_start":254400,"byte_end":254465,"line_start":144,"line_end":144,"column_start":5,"column_end":70}},{"value":"/ // The next value returned will be 10","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\stream\\peek.rs","byte_start":254470,"byte_end":254511,"line_start":145,"line_end":145,"column_start":5,"column_end":46}},{"value":"/ assert_eq!(stream.next().await, Some(10));","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\stream\\peek.rs","byte_start":254516,"byte_end":254562,"line_start":146,"line_end":146,"column_start":5,"column_end":51}},{"value":"/ # });","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\stream\\peek.rs","byte_start":254567,"byte_end":254576,"line_start":147,"line_end":147,"column_start":5,"column_end":14}},{"value":"/ ```","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\stream\\peek.rs","byte_start":254581,"byte_end":254588,"line_start":148,"line_end":148,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":3043},"span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\stream\\peek.rs","byte_start":255631,"byte_end":255641,"line_start":178,"line_end":178,"column_start":12,"column_end":22},"name":"next_if_eq","qualname":"<Peekable<St>>::next_if_eq","value":"pub fn next_if_eq<'a, T>(Pin<&'a mut Self>, &'a T) -> NextIfEq where\nT: ?Sized, St::Item: PartialEq<T>","parent":null,"children":[],"decl_id":null,"docs":" Creates a future which will consume and return the next item if it is\n equal to `expected`.","sig":null,"attributes":[{"value":"/ Creates a future which will consume and return the next item if it is","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\stream\\peek.rs","byte_start":254773,"byte_end":254846,"line_start":156,"line_end":156,"column_start":5,"column_end":78}},{"value":"/ equal to `expected`.","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\stream\\peek.rs","byte_start":254851,"byte_end":254875,"line_start":157,"line_end":157,"column_start":5,"column_end":29}},{"value":"/","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\stream\\peek.rs","byte_start":254880,"byte_end":254883,"line_start":158,"line_end":158,"column_start":5,"column_end":8}},{"value":"/ # Example","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\stream\\peek.rs","byte_start":254888,"byte_end":254901,"line_start":159,"line_end":159,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\stream\\peek.rs","byte_start":254906,"byte_end":254909,"line_start":160,"line_end":160,"column_start":5,"column_end":8}},{"value":"/ Consume a number if it's equal to 0.","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\stream\\peek.rs","byte_start":254914,"byte_end":254954,"line_start":161,"line_end":161,"column_start":5,"column_end":45}},{"value":"/","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\stream\\peek.rs","byte_start":254959,"byte_end":254962,"line_start":162,"line_end":162,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\stream\\peek.rs","byte_start":254967,"byte_end":254974,"line_start":163,"line_end":163,"column_start":5,"column_end":12}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\stream\\peek.rs","byte_start":254979,"byte_end":255020,"line_start":164,"line_end":164,"column_start":5,"column_end":46}},{"value":"/ use futures::stream::{self, StreamExt};","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\stream\\peek.rs","byte_start":255025,"byte_end":255068,"line_start":165,"line_end":165,"column_start":5,"column_end":48}},{"value":"/ use futures::pin_mut;","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\stream\\peek.rs","byte_start":255073,"byte_end":255098,"line_start":166,"line_end":166,"column_start":5,"column_end":30}},{"value":"/","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\stream\\peek.rs","byte_start":255103,"byte_end":255106,"line_start":167,"line_end":167,"column_start":5,"column_end":8}},{"value":"/ let stream = stream::iter(0..5).peekable();","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\stream\\peek.rs","byte_start":255111,"byte_end":255158,"line_start":168,"line_end":168,"column_start":5,"column_end":52}},{"value":"/ pin_mut!(stream);","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\stream\\peek.rs","byte_start":255163,"byte_end":255184,"line_start":169,"line_end":169,"column_start":5,"column_end":26}},{"value":"/ // The first item of the stream is 0; consume it.","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\stream\\peek.rs","byte_start":255189,"byte_end":255242,"line_start":170,"line_end":170,"column_start":5,"column_end":58}},{"value":"/ assert_eq!(stream.as_mut().next_if_eq(&0).await, Some(0));","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\stream\\peek.rs","byte_start":255247,"byte_end":255309,"line_start":171,"line_end":171,"column_start":5,"column_end":67}},{"value":"/ // The next item returned is now 1, so `consume` will return `false`.","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\stream\\peek.rs","byte_start":255314,"byte_end":255387,"line_start":172,"line_end":172,"column_start":5,"column_end":78}},{"value":"/ assert_eq!(stream.as_mut().next_if_eq(&0).await, None);","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\stream\\peek.rs","byte_start":255392,"byte_end":255451,"line_start":173,"line_end":173,"column_start":5,"column_end":64}},{"value":"/ // `next_if_eq` saves the value of the next item if it was not equal to `expected`.","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\stream\\peek.rs","byte_start":255456,"byte_end":255543,"line_start":174,"line_end":174,"column_start":5,"column_end":92}},{"value":"/ assert_eq!(stream.next().await, Some(1));","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\stream\\peek.rs","byte_start":255548,"byte_end":255593,"line_start":175,"line_end":175,"column_start":5,"column_end":50}},{"value":"/ # });","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\stream\\peek.rs","byte_start":255598,"byte_end":255607,"line_start":176,"line_end":176,"column_start":5,"column_end":14}},{"value":"/ ```","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\stream\\peek.rs","byte_start":255612,"byte_end":255619,"line_start":177,"line_end":177,"column_start":5,"column_end":12}}]},{"kind":"Struct","id":{"krate":0,"index":13848},"span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\stream\\peek.rs","byte_start":257159,"byte_end":257163,"line_start":232,"line_end":232,"column_start":16,"column_end":20},"name":"Peek","qualname":"::stream::stream::peek::Peek","value":"Peek {  }","parent":null,"children":[{"krate":0,"index":13851}],"decl_id":null,"docs":" Future for the [`Peekable::peek`](self::Peekable::peek) method.\n","sig":null,"attributes":[{"value":"must_use = \"futures do nothing unless polled\"","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pin-project-lite-0.2.9\\src\\lib.rs","byte_start":14239710,"byte_end":14239719,"line_start":633,"line_end":633,"column_start":11,"column_end":20}}]},{"kind":"Struct","id":{"krate":0,"index":13889},"span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\stream\\peek.rs","byte_start":258221,"byte_end":258228,"line_start":274,"line_end":274,"column_start":16,"column_end":23},"name":"PeekMut","qualname":"::stream::stream::peek::PeekMut","value":"PeekMut {  }","parent":null,"children":[{"krate":0,"index":13892}],"decl_id":null,"docs":" Future for the [`Peekable::peek_mut`](self::Peekable::peek_mut) method.\n","sig":null,"attributes":[{"value":"must_use = \"futures do nothing unless polled\"","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pin-project-lite-0.2.9\\src\\lib.rs","byte_start":14239710,"byte_end":14239719,"line_start":633,"line_end":633,"column_start":11,"column_end":20}}]},{"kind":"Struct","id":{"krate":0,"index":13930},"span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\stream\\peek.rs","byte_start":259311,"byte_end":259317,"line_start":316,"line_end":316,"column_start":16,"column_end":22},"name":"NextIf","qualname":"::stream::stream::peek::NextIf","value":"NextIf {  }","parent":null,"children":[{"krate":0,"index":13934}],"decl_id":null,"docs":" Future for the [`Peekable::next_if`](self::Peekable::next_if) method.\n","sig":null,"attributes":[{"value":"must_use = \"futures do nothing unless polled\"","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pin-project-lite-0.2.9\\src\\lib.rs","byte_start":14239710,"byte_end":14239719,"line_start":633,"line_end":633,"column_start":11,"column_end":20}}]},{"kind":"Struct","id":{"krate":0,"index":13979},"span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\stream\\peek.rs","byte_start":261181,"byte_end":261189,"line_start":375,"line_end":375,"column_start":16,"column_end":24},"name":"NextIfEq","qualname":"::stream::stream::peek::NextIfEq","value":"NextIfEq {  }","parent":null,"children":[{"krate":0,"index":13983}],"decl_id":null,"docs":" Future for the [`Peekable::next_if_eq`](self::Peekable::next_if_eq) method.\n","sig":null,"attributes":[{"value":"must_use = \"futures do nothing unless polled\"","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pin-project-lite-0.2.9\\src\\lib.rs","byte_start":14239710,"byte_end":14239719,"line_start":633,"line_end":633,"column_start":11,"column_end":20}}]},{"kind":"Struct","id":{"krate":0,"index":14028},"span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\stream\\skip.rs","byte_start":262806,"byte_end":262810,"line_start":13,"line_end":13,"column_start":16,"column_end":20},"name":"Skip","qualname":"::stream::stream::skip::Skip","value":"Skip {  }","parent":null,"children":[{"krate":0,"index":14030},{"krate":0,"index":14031}],"decl_id":null,"docs":" Stream for the [`skip`](super::StreamExt::skip) method.\n","sig":null,"attributes":[{"value":"must_use = \"streams do nothing unless polled\"","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pin-project-lite-0.2.9\\src\\lib.rs","byte_start":14239710,"byte_end":14239719,"line_start":633,"line_end":633,"column_start":11,"column_end":20}}]},{"kind":"Struct","id":{"krate":0,"index":14076},"span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\stream\\skip_while.rs","byte_start":264573,"byte_end":264582,"line_start":14,"line_end":14,"column_start":16,"column_end":25},"name":"SkipWhile","qualname":"::stream::stream::skip_while::SkipWhile","value":"SkipWhile {  }","parent":null,"children":[{"krate":0,"index":14080},{"krate":0,"index":14081},{"krate":0,"index":14082},{"krate":0,"index":14083},{"krate":0,"index":14084}],"decl_id":null,"docs":" Stream for the [`skip_while`](super::StreamExt::skip_while) method.\n","sig":null,"attributes":[{"value":"must_use = \"streams do nothing unless polled\"","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pin-project-lite-0.2.9\\src\\lib.rs","byte_start":14239710,"byte_end":14239719,"line_start":633,"line_end":633,"column_start":11,"column_end":20}}]},{"kind":"Struct","id":{"krate":0,"index":14149},"span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\stream\\take.rs","byte_start":268086,"byte_end":268090,"line_start":14,"line_end":14,"column_start":16,"column_end":20},"name":"Take","qualname":"::stream::stream::take::Take","value":"Take {  }","parent":null,"children":[{"krate":0,"index":14151},{"krate":0,"index":14152}],"decl_id":null,"docs":" Stream for the [`take`](super::StreamExt::take) method.\n","sig":null,"attributes":[{"value":"must_use = \"streams do nothing unless polled\"","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pin-project-lite-0.2.9\\src\\lib.rs","byte_start":14239710,"byte_end":14239719,"line_start":633,"line_end":633,"column_start":11,"column_end":20}}]},{"kind":"Struct","id":{"krate":0,"index":14197},"span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\stream\\take_while.rs","byte_start":270126,"byte_end":270135,"line_start":14,"line_end":14,"column_start":16,"column_end":25},"name":"TakeWhile","qualname":"::stream::stream::take_while::TakeWhile","value":"TakeWhile {  }","parent":null,"children":[{"krate":0,"index":14201},{"krate":0,"index":14202},{"krate":0,"index":14203},{"krate":0,"index":14204},{"krate":0,"index":14205}],"decl_id":null,"docs":" Stream for the [`take_while`](super::StreamExt::take_while) method.\n","sig":null,"attributes":[{"value":"must_use = \"streams do nothing unless polled\"","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pin-project-lite-0.2.9\\src\\lib.rs","byte_start":14239710,"byte_end":14239719,"line_start":633,"line_end":633,"column_start":11,"column_end":20}}]},{"kind":"Struct","id":{"krate":0,"index":14270},"span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\stream\\take_until.rs","byte_start":273615,"byte_end":273624,"line_start":16,"line_end":16,"column_start":16,"column_end":25},"name":"TakeUntil","qualname":"::stream::stream::take_until::TakeUntil","value":"TakeUntil {  }","parent":null,"children":[{"krate":0,"index":14273},{"krate":0,"index":14274},{"krate":0,"index":14275},{"krate":0,"index":14276}],"decl_id":null,"docs":" Stream for the [`take_until`](super::StreamExt::take_until) method.\n","sig":null,"attributes":[{"value":"must_use = \"streams do nothing unless polled\"","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pin-project-lite-0.2.9\\src\\lib.rs","byte_start":14239710,"byte_end":14239719,"line_start":633,"line_end":633,"column_start":11,"column_end":20}}]},{"kind":"Method","id":{"krate":0,"index":3400},"span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\stream\\take_until.rs","byte_start":274908,"byte_end":274919,"line_start":56,"line_end":56,"column_start":12,"column_end":23},"name":"take_future","qualname":"<TakeUntil<St, Fut>>::take_future","value":"pub fn take_future(&mut Self) -> Option<Fut>","parent":null,"children":[],"decl_id":null,"docs":" Extract the stopping future out of the combinator.\n The future is returned only if it isn't resolved yet, ie. if the stream isn't stopped yet.\n Taking out the future means the combinator will be yielding\n elements from the wrapped stream without ever stopping it.\n","sig":null,"attributes":[{"value":"/ Extract the stopping future out of the combinator.","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\stream\\take_until.rs","byte_start":274608,"byte_end":274662,"line_start":52,"line_end":52,"column_start":5,"column_end":59}},{"value":"/ The future is returned only if it isn't resolved yet, ie. if the stream isn't stopped yet.","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\stream\\take_until.rs","byte_start":274667,"byte_end":274761,"line_start":53,"line_end":53,"column_start":5,"column_end":99}},{"value":"/ Taking out the future means the combinator will be yielding","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\stream\\take_until.rs","byte_start":274766,"byte_end":274829,"line_start":54,"line_end":54,"column_start":5,"column_end":68}},{"value":"/ elements from the wrapped stream without ever stopping it.","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\stream\\take_until.rs","byte_start":274834,"byte_end":274896,"line_start":55,"line_end":55,"column_start":5,"column_end":67}}]},{"kind":"Method","id":{"krate":0,"index":3401},"span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\stream\\take_until.rs","byte_start":276203,"byte_end":276214,"line_start":100,"line_end":100,"column_start":12,"column_end":23},"name":"take_result","qualname":"<TakeUntil<St, Fut>>::take_result","value":"pub fn take_result(&mut Self) -> Option<Fut::Output>","parent":null,"children":[],"decl_id":null,"docs":" Once the stopping future is resolved, this method can be used\n to extract the value returned by the stopping future.","sig":null,"attributes":[{"value":"/ Once the stopping future is resolved, this method can be used","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\stream\\take_until.rs","byte_start":275056,"byte_end":275121,"line_start":64,"line_end":64,"column_start":5,"column_end":70}},{"value":"/ to extract the value returned by the stopping future.","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\stream\\take_until.rs","byte_start":275126,"byte_end":275183,"line_start":65,"line_end":65,"column_start":5,"column_end":62}},{"value":"/","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\stream\\take_until.rs","byte_start":275188,"byte_end":275191,"line_start":66,"line_end":66,"column_start":5,"column_end":8}},{"value":"/ This may be used to retrieve arbitrary data from the stopping","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\stream\\take_until.rs","byte_start":275196,"byte_end":275261,"line_start":67,"line_end":67,"column_start":5,"column_end":70}},{"value":"/ future, for example a reason why the stream was stopped.","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\stream\\take_until.rs","byte_start":275266,"byte_end":275326,"line_start":68,"line_end":68,"column_start":5,"column_end":65}},{"value":"/","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\stream\\take_until.rs","byte_start":275331,"byte_end":275334,"line_start":69,"line_end":69,"column_start":5,"column_end":8}},{"value":"/ This method will return `None` if the future isn't resolved yet,","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\stream\\take_until.rs","byte_start":275339,"byte_end":275407,"line_start":70,"line_end":70,"column_start":5,"column_end":73}},{"value":"/ or if the result was already taken out.","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\stream\\take_until.rs","byte_start":275412,"byte_end":275455,"line_start":71,"line_end":71,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\stream\\take_until.rs","byte_start":275460,"byte_end":275463,"line_start":72,"line_end":72,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\stream\\take_until.rs","byte_start":275468,"byte_end":275482,"line_start":73,"line_end":73,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\stream\\take_until.rs","byte_start":275487,"byte_end":275490,"line_start":74,"line_end":74,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\stream\\take_until.rs","byte_start":275495,"byte_end":275502,"line_start":75,"line_end":75,"column_start":5,"column_end":12}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\stream\\take_until.rs","byte_start":275507,"byte_end":275548,"line_start":76,"line_end":76,"column_start":5,"column_end":46}},{"value":"/ use futures::future;","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\stream\\take_until.rs","byte_start":275553,"byte_end":275577,"line_start":77,"line_end":77,"column_start":5,"column_end":29}},{"value":"/ use futures::stream::{self, StreamExt};","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\stream\\take_until.rs","byte_start":275582,"byte_end":275625,"line_start":78,"line_end":78,"column_start":5,"column_end":48}},{"value":"/ use futures::task::Poll;","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\stream\\take_until.rs","byte_start":275630,"byte_end":275658,"line_start":79,"line_end":79,"column_start":5,"column_end":33}},{"value":"/","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\stream\\take_until.rs","byte_start":275663,"byte_end":275666,"line_start":80,"line_end":80,"column_start":5,"column_end":8}},{"value":"/ let stream = stream::iter(1..=10);","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\stream\\take_until.rs","byte_start":275671,"byte_end":275709,"line_start":81,"line_end":81,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\stream\\take_until.rs","byte_start":275714,"byte_end":275717,"line_start":82,"line_end":82,"column_start":5,"column_end":8}},{"value":"/ let mut i = 0;","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\stream\\take_until.rs","byte_start":275722,"byte_end":275740,"line_start":83,"line_end":83,"column_start":5,"column_end":23}},{"value":"/ let stop_fut = future::poll_fn(|_cx| {","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\stream\\take_until.rs","byte_start":275745,"byte_end":275787,"line_start":84,"line_end":84,"column_start":5,"column_end":47}},{"value":"/     i += 1;","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\stream\\take_until.rs","byte_start":275792,"byte_end":275807,"line_start":85,"line_end":85,"column_start":5,"column_end":20}},{"value":"/     if i <= 5 {","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\stream\\take_until.rs","byte_start":275812,"byte_end":275831,"line_start":86,"line_end":86,"column_start":5,"column_end":24}},{"value":"/         Poll::Pending","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\stream\\take_until.rs","byte_start":275836,"byte_end":275861,"line_start":87,"line_end":87,"column_start":5,"column_end":30}},{"value":"/     } else {","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\stream\\take_until.rs","byte_start":275866,"byte_end":275882,"line_start":88,"line_end":88,"column_start":5,"column_end":21}},{"value":"/         Poll::Ready(\"reason\")","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\stream\\take_until.rs","byte_start":275887,"byte_end":275920,"line_start":89,"line_end":89,"column_start":5,"column_end":38}},{"value":"/     }","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\stream\\take_until.rs","byte_start":275925,"byte_end":275934,"line_start":90,"line_end":90,"column_start":5,"column_end":14}},{"value":"/ });","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\stream\\take_until.rs","byte_start":275939,"byte_end":275946,"line_start":91,"line_end":91,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\stream\\take_until.rs","byte_start":275951,"byte_end":275954,"line_start":92,"line_end":92,"column_start":5,"column_end":8}},{"value":"/ let mut stream = stream.take_until(stop_fut);","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\stream\\take_until.rs","byte_start":275959,"byte_end":276008,"line_start":93,"line_end":93,"column_start":5,"column_end":54}},{"value":"/ let _ = stream.by_ref().collect::<Vec<_>>().await;","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\stream\\take_until.rs","byte_start":276013,"byte_end":276067,"line_start":94,"line_end":94,"column_start":5,"column_end":59}},{"value":"/","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\stream\\take_until.rs","byte_start":276072,"byte_end":276075,"line_start":95,"line_end":95,"column_start":5,"column_end":8}},{"value":"/ let result = stream.take_result().unwrap();","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\stream\\take_until.rs","byte_start":276080,"byte_end":276127,"line_start":96,"line_end":96,"column_start":5,"column_end":52}},{"value":"/ assert_eq!(result, \"reason\");","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\stream\\take_until.rs","byte_start":276132,"byte_end":276165,"line_start":97,"line_end":97,"column_start":5,"column_end":38}},{"value":"/ # });","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\stream\\take_until.rs","byte_start":276170,"byte_end":276179,"line_start":98,"line_end":98,"column_start":5,"column_end":14}},{"value":"/ ```","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\stream\\take_until.rs","byte_start":276184,"byte_end":276191,"line_start":99,"line_end":99,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":3402},"span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\stream\\take_until.rs","byte_start":276390,"byte_end":276400,"line_start":106,"line_end":106,"column_start":12,"column_end":22},"name":"is_stopped","qualname":"<TakeUntil<St, Fut>>::is_stopped","value":"pub fn is_stopped(&Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Whether the stream was stopped yet by the stopping future\n being resolved.\n","sig":null,"attributes":[{"value":"/ Whether the stream was stopped yet by the stopping future","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\stream\\take_until.rs","byte_start":276293,"byte_end":276354,"line_start":104,"line_end":104,"column_start":5,"column_end":66}},{"value":"/ being resolved.","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\stream\\take_until.rs","byte_start":276359,"byte_end":276378,"line_start":105,"line_end":105,"column_start":5,"column_end":24}}]},{"kind":"Struct","id":{"krate":0,"index":14331},"span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\stream\\then.rs","byte_start":278332,"byte_end":278336,"line_start":14,"line_end":14,"column_start":16,"column_end":20},"name":"Then","qualname":"::stream::stream::then::Then","value":"Then {  }","parent":null,"children":[{"krate":0,"index":14335},{"krate":0,"index":14336},{"krate":0,"index":14337}],"decl_id":null,"docs":" Stream for the [`then`](super::StreamExt::then) method.\n","sig":null,"attributes":[{"value":"must_use = \"streams do nothing unless polled\"","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pin-project-lite-0.2.9\\src\\lib.rs","byte_start":14239710,"byte_end":14239719,"line_start":633,"line_end":633,"column_start":11,"column_end":20}}]},{"kind":"Struct","id":{"krate":0,"index":14396},"span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\stream\\zip.rs","byte_start":280876,"byte_end":280879,"line_start":12,"line_end":12,"column_start":16,"column_end":19},"name":"Zip","qualname":"::stream::stream::zip::Zip","value":"Zip {  }","parent":null,"children":[{"krate":0,"index":14399},{"krate":0,"index":14400},{"krate":0,"index":14401},{"krate":0,"index":14402}],"decl_id":null,"docs":" Stream for the [`zip`](super::StreamExt::zip) method.\n","sig":null,"attributes":[{"value":"must_use = \"streams do nothing unless polled\"","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pin-project-lite-0.2.9\\src\\lib.rs","byte_start":14239710,"byte_end":14239719,"line_start":633,"line_end":633,"column_start":11,"column_end":20}}]},{"kind":"Method","id":{"krate":0,"index":3520},"span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\stream\\zip.rs","byte_start":281397,"byte_end":281404,"line_start":29,"line_end":29,"column_start":12,"column_end":19},"name":"get_ref","qualname":"<Zip<St1, St2>>::get_ref","value":"pub fn get_ref(&Self) -> (&St1, &St2)","parent":null,"children":[],"decl_id":null,"docs":" Acquires a reference to the underlying streams that this combinator is\n pulling from.\n","sig":null,"attributes":[{"value":"/ Acquires a reference to the underlying streams that this combinator is","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\stream\\zip.rs","byte_start":281289,"byte_end":281363,"line_start":27,"line_end":27,"column_start":5,"column_end":79}},{"value":"/ pulling from.","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\stream\\zip.rs","byte_start":281368,"byte_end":281385,"line_start":28,"line_end":28,"column_start":5,"column_end":22}}]},{"kind":"Method","id":{"krate":0,"index":3521},"span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\stream\\zip.rs","byte_start":281760,"byte_end":281767,"line_start":38,"line_end":38,"column_start":12,"column_end":19},"name":"get_mut","qualname":"<Zip<St1, St2>>::get_mut","value":"pub fn get_mut(&mut Self) -> (&mut St1, &mut St2)","parent":null,"children":[],"decl_id":null,"docs":" Acquires a mutable reference to the underlying streams that this\n combinator is pulling from.","sig":null,"attributes":[{"value":"/ Acquires a mutable reference to the underlying streams that this","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\stream\\zip.rs","byte_start":281498,"byte_end":281566,"line_start":33,"line_end":33,"column_start":5,"column_end":73}},{"value":"/ combinator is pulling from.","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\stream\\zip.rs","byte_start":281571,"byte_end":281602,"line_start":34,"line_end":34,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\stream\\zip.rs","byte_start":281607,"byte_end":281610,"line_start":35,"line_end":35,"column_start":5,"column_end":8}},{"value":"/ Note that care must be taken to avoid tampering with the state of the","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\stream\\zip.rs","byte_start":281615,"byte_end":281688,"line_start":36,"line_end":36,"column_start":5,"column_end":78}},{"value":"/ stream which may otherwise confuse this combinator.","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\stream\\zip.rs","byte_start":281693,"byte_end":281748,"line_start":37,"line_end":37,"column_start":5,"column_end":60}}]},{"kind":"Method","id":{"krate":0,"index":3522},"span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\stream\\zip.rs","byte_start":282142,"byte_end":282153,"line_start":47,"line_end":47,"column_start":12,"column_end":23},"name":"get_pin_mut","qualname":"<Zip<St1, St2>>::get_pin_mut","value":"pub fn get_pin_mut(Pin<&mut Self>) -> (Pin<&mut St1>, Pin<&mut St2>)","parent":null,"children":[],"decl_id":null,"docs":" Acquires a pinned mutable reference to the underlying streams that this\n combinator is pulling from.","sig":null,"attributes":[{"value":"/ Acquires a pinned mutable reference to the underlying streams that this","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\stream\\zip.rs","byte_start":281873,"byte_end":281948,"line_start":42,"line_end":42,"column_start":5,"column_end":80}},{"value":"/ combinator is pulling from.","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\stream\\zip.rs","byte_start":281953,"byte_end":281984,"line_start":43,"line_end":43,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\stream\\zip.rs","byte_start":281989,"byte_end":281992,"line_start":44,"line_end":44,"column_start":5,"column_end":8}},{"value":"/ Note that care must be taken to avoid tampering with the state of the","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\stream\\zip.rs","byte_start":281997,"byte_end":282070,"line_start":45,"line_end":45,"column_start":5,"column_end":78}},{"value":"/ stream which may otherwise confuse this combinator.","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\stream\\zip.rs","byte_start":282075,"byte_end":282130,"line_start":46,"line_end":46,"column_start":5,"column_end":60}}]},{"kind":"Method","id":{"krate":0,"index":3523},"span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\stream\\zip.rs","byte_start":282559,"byte_end":282569,"line_start":56,"line_end":56,"column_start":12,"column_end":22},"name":"into_inner","qualname":"<Zip<St1, St2>>::into_inner","value":"pub fn into_inner(Self) -> (St1, St2)","parent":null,"children":[],"decl_id":null,"docs":" Consumes this combinator, returning the underlying streams.","sig":null,"attributes":[{"value":"/ Consumes this combinator, returning the underlying streams.","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\stream\\zip.rs","byte_start":282323,"byte_end":282386,"line_start":52,"line_end":52,"column_start":5,"column_end":68}},{"value":"/","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\stream\\zip.rs","byte_start":282391,"byte_end":282394,"line_start":53,"line_end":53,"column_start":5,"column_end":8}},{"value":"/ Note that this may discard intermediate state of this combinator, so","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\stream\\zip.rs","byte_start":282399,"byte_end":282471,"line_start":54,"line_end":54,"column_start":5,"column_end":77}},{"value":"/ care should be taken to avoid losing resources when this is called.","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\stream\\zip.rs","byte_start":282476,"byte_end":282547,"line_start":55,"line_end":55,"column_start":5,"column_end":76}}]},{"kind":"Struct","id":{"krate":0,"index":14453},"span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\stream\\chunks.rs","byte_start":285398,"byte_end":285404,"line_start":16,"line_end":16,"column_start":16,"column_end":22},"name":"Chunks","qualname":"::stream::stream::chunks::Chunks","value":"Chunks {  }","parent":null,"children":[{"krate":0,"index":14455},{"krate":0,"index":14456},{"krate":0,"index":14457}],"decl_id":null,"docs":" Stream for the [`chunks`](super::StreamExt::chunks) method.\n","sig":null,"attributes":[{"value":"must_use = \"streams do nothing unless polled\"","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pin-project-lite-0.2.9\\src\\lib.rs","byte_start":14239710,"byte_end":14239719,"line_start":633,"line_end":633,"column_start":11,"column_end":20}}]},{"kind":"Struct","id":{"krate":0,"index":14505},"span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\stream\\ready_chunks.rs","byte_start":288507,"byte_end":288518,"line_start":15,"line_end":15,"column_start":16,"column_end":27},"name":"ReadyChunks","qualname":"::stream::stream::ready_chunks::ReadyChunks","value":"ReadyChunks {  }","parent":null,"children":[{"krate":0,"index":14507},{"krate":0,"index":14508},{"krate":0,"index":14509}],"decl_id":null,"docs":" Stream for the [`ready_chunks`](super::StreamExt::ready_chunks) method.\n","sig":null,"attributes":[{"value":"must_use = \"streams do nothing unless polled\"","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pin-project-lite-0.2.9\\src\\lib.rs","byte_start":14239710,"byte_end":14239719,"line_start":633,"line_end":633,"column_start":11,"column_end":20}}]},{"kind":"Struct","id":{"krate":0,"index":14557},"span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\stream\\scan.rs","byte_start":292064,"byte_end":292068,"line_start":19,"line_end":19,"column_start":16,"column_end":20},"name":"Scan","qualname":"::stream::stream::scan::Scan","value":"Scan {  }","parent":null,"children":[{"krate":0,"index":14562},{"krate":0,"index":14563},{"krate":0,"index":14564}],"decl_id":null,"docs":" Stream for the [`scan`](super::StreamExt::scan) method.\n","sig":null,"attributes":[{"value":"must_use = \"streams do nothing unless polled\"","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pin-project-lite-0.2.9\\src\\lib.rs","byte_start":14239710,"byte_end":14239719,"line_start":633,"line_end":633,"column_start":11,"column_end":20}}]},{"kind":"Struct","id":{"krate":0,"index":14630},"span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\stream\\buffer_unordered.rs","byte_start":295492,"byte_end":295507,"line_start":15,"line_end":15,"column_start":16,"column_end":31},"name":"BufferUnordered","qualname":"::stream::stream::buffer_unordered::BufferUnordered","value":"BufferUnordered {  }","parent":null,"children":[{"krate":0,"index":14632},{"krate":0,"index":14633},{"krate":0,"index":14634}],"decl_id":null,"docs":" Stream for the [`buffer_unordered`](super::StreamExt::buffer_unordered)\n method.\n","sig":null,"attributes":[{"value":"must_use = \"streams do nothing unless polled\"","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pin-project-lite-0.2.9\\src\\lib.rs","byte_start":14239710,"byte_end":14239719,"line_start":633,"line_end":633,"column_start":11,"column_end":20}}]},{"kind":"Struct","id":{"krate":0,"index":14679},"span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\stream\\buffered.rs","byte_start":298818,"byte_end":298826,"line_start":15,"line_end":15,"column_start":16,"column_end":24},"name":"Buffered","qualname":"::stream::stream::buffered::Buffered","value":"Buffered {  }","parent":null,"children":[{"krate":0,"index":14681},{"krate":0,"index":14682},{"krate":0,"index":14683}],"decl_id":null,"docs":" Stream for the [`buffered`](super::StreamExt::buffered) method.\n","sig":null,"attributes":[{"value":"must_use = \"streams do nothing unless polled\"","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pin-project-lite-0.2.9\\src\\lib.rs","byte_start":14239710,"byte_end":14239719,"line_start":633,"line_end":633,"column_start":11,"column_end":20}}]},{"kind":"Struct","id":{"krate":0,"index":14767},"span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\stream\\flatten_unordered.rs","byte_start":311607,"byte_end":311623,"line_start":309,"line_end":309,"column_start":16,"column_end":32},"name":"FlattenUnordered","qualname":"::stream::stream::flatten_unordered::FlattenUnordered","value":"FlattenUnordered {  }","parent":null,"children":[{"krate":0,"index":14769},{"krate":0,"index":14770},{"krate":0,"index":14771},{"krate":0,"index":14772},{"krate":0,"index":14773},{"krate":0,"index":14774},{"krate":0,"index":14775}],"decl_id":null,"docs":" Stream for the [`flatten_unordered`](super::StreamExt::flatten_unordered)\n method.\n","sig":null,"attributes":[{"value":"must_use = \"streams do nothing unless polled\"","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pin-project-lite-0.2.9\\src\\lib.rs","byte_start":14239710,"byte_end":14239719,"line_start":633,"line_end":633,"column_start":11,"column_end":20}}]},{"kind":"Struct","id":{"krate":0,"index":14836},"span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\stream\\mod.rs","byte_start":157279,"byte_end":157295,"line_start":213,"line_end":213,"column_start":5,"column_end":21},"name":"FlatMapUnordered","qualname":"::stream::stream::FlatMapUnordered","value":"FlatMapUnordered {  }","parent":null,"children":[{"krate":0,"index":14840}],"decl_id":null,"docs":" Stream for the [`flat_map_unordered`](StreamExt::flat_map_unordered) method.\n","sig":null,"attributes":[{"value":"must_use =\n\"futures/streams/sinks do nothing unless you `.await` or poll them\"","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pin-project-lite-0.2.9\\src\\lib.rs","byte_start":14239710,"byte_end":14239719,"line_start":633,"line_end":633,"column_start":11,"column_end":20}}]},{"kind":"Struct","id":{"krate":0,"index":14925},"span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\stream\\for_each_concurrent.rs","byte_start":319176,"byte_end":319193,"line_start":14,"line_end":14,"column_start":16,"column_end":33},"name":"ForEachConcurrent","qualname":"::stream::stream::for_each_concurrent::ForEachConcurrent","value":"ForEachConcurrent {  }","parent":null,"children":[{"krate":0,"index":14929},{"krate":0,"index":14930},{"krate":0,"index":14931},{"krate":0,"index":14932}],"decl_id":null,"docs":" Future for the [`for_each_concurrent`](super::StreamExt::for_each_concurrent)\n method.\n","sig":null,"attributes":[{"value":"must_use = \"futures do nothing unless you `.await` or poll them\"","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pin-project-lite-0.2.9\\src\\lib.rs","byte_start":14239710,"byte_end":14239719,"line_start":633,"line_end":633,"column_start":11,"column_end":20}}]},{"kind":"Struct","id":{"krate":0,"index":14986},"span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\stream\\split.rs","byte_start":322638,"byte_end":322649,"line_start":14,"line_end":14,"column_start":12,"column_end":23},"name":"SplitStream","qualname":"::stream::stream::split::SplitStream","value":"","parent":null,"children":[],"decl_id":null,"docs":" A `Stream` part of the split pair\n","sig":null,"attributes":[{"value":"/ A `Stream` part of the split pair","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\stream\\split.rs","byte_start":322475,"byte_end":322512,"line_start":10,"line_end":10,"column_start":1,"column_end":38}},{"value":"must_use = \"streams do nothing unless polled\"","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\stream\\split.rs","byte_start":322530,"byte_end":322578,"line_start":12,"line_end":12,"column_start":1,"column_end":49}}]},{"kind":"Method","id":{"krate":0,"index":4088},"span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\stream\\split.rs","byte_start":322976,"byte_end":322983,"line_start":22,"line_end":22,"column_start":12,"column_end":19},"name":"reunite","qualname":"<SplitStream<S>>::reunite","value":"pub fn reunite<Item>(Self, SplitSink<S, Item>)\n-> Result<S, ReuniteError<S, Item>> where S: Sink<Item>","parent":null,"children":[],"decl_id":null,"docs":" Attempts to put the two \"halves\" of a split `Stream + Sink` back\n together. Succeeds only if the `SplitStream<S>` and `SplitSink<S>` are\n a matching pair originating from the same call to `StreamExt::split`.\n","sig":null,"attributes":[{"value":"/ Attempts to put the two \"halves\" of a split `Stream + Sink` back","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\stream\\split.rs","byte_start":322739,"byte_end":322807,"line_start":19,"line_end":19,"column_start":5,"column_end":73}},{"value":"/ together. Succeeds only if the `SplitStream<S>` and `SplitSink<S>` are","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\stream\\split.rs","byte_start":322812,"byte_end":322886,"line_start":20,"line_end":20,"column_start":5,"column_end":79}},{"value":"/ a matching pair originating from the same call to `StreamExt::split`.","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\stream\\split.rs","byte_start":322891,"byte_end":322964,"line_start":21,"line_end":21,"column_start":5,"column_end":78}}]},{"kind":"Struct","id":{"krate":0,"index":14993},"span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\stream\\split.rs","byte_start":323658,"byte_end":323667,"line_start":47,"line_end":47,"column_start":12,"column_end":21},"name":"SplitSink","qualname":"::stream::stream::split::SplitSink","value":"SplitSink {  }","parent":null,"children":[{"krate":0,"index":14996},{"krate":0,"index":14997}],"decl_id":null,"docs":" A `Sink` part of the split pair\n","sig":null,"attributes":[{"value":"/ A `Sink` part of the split pair","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\stream\\split.rs","byte_start":323499,"byte_end":323534,"line_start":43,"line_end":43,"column_start":1,"column_end":36}},{"value":"must_use = \"sinks do nothing unless polled\"","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\stream\\split.rs","byte_start":323552,"byte_end":323598,"line_start":45,"line_end":45,"column_start":1,"column_end":47}}]},{"kind":"Method","id":{"krate":0,"index":4103},"span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\stream\\split.rs","byte_start":324070,"byte_end":324077,"line_start":58,"line_end":58,"column_start":12,"column_end":19},"name":"reunite","qualname":"<SplitSink<S, Item>>::reunite","value":"pub fn reunite(Self, SplitStream<S>) -> Result<S, ReuniteError<S, Item>>","parent":null,"children":[],"decl_id":null,"docs":" Attempts to put the two \"halves\" of a split `Stream + Sink` back\n together. Succeeds only if the `SplitStream<S>` and `SplitSink<S>` are\n a matching pair originating from the same call to `StreamExt::split`.\n","sig":null,"attributes":[{"value":"/ Attempts to put the two \"halves\" of a split `Stream + Sink` back","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\stream\\split.rs","byte_start":323833,"byte_end":323901,"line_start":55,"line_end":55,"column_start":5,"column_end":73}},{"value":"/ together. Succeeds only if the `SplitStream<S>` and `SplitSink<S>` are","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\stream\\split.rs","byte_start":323906,"byte_end":323980,"line_start":56,"line_end":56,"column_start":5,"column_end":79}},{"value":"/ a matching pair originating from the same call to `StreamExt::split`.","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\stream\\split.rs","byte_start":323985,"byte_end":324058,"line_start":57,"line_end":57,"column_start":5,"column_end":78}}]},{"kind":"Struct","id":{"krate":0,"index":4121},"span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\stream\\split.rs","byte_start":326531,"byte_end":326543,"line_start":129,"line_end":129,"column_start":12,"column_end":24},"name":"ReuniteError","qualname":"::stream::stream::split::ReuniteError","value":"","parent":null,"children":[],"decl_id":null,"docs":" Error indicating a `SplitSink<S>` and `SplitStream<S>` were not two halves\n of a `Stream + Split`, and thus could not be `reunite`d.\n","sig":null,"attributes":[{"value":"/ Error indicating a `SplitSink<S>` and `SplitStream<S>` were not two halves","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\stream\\split.rs","byte_start":326332,"byte_end":326410,"line_start":126,"line_end":126,"column_start":1,"column_end":79}},{"value":"/ of a `Stream + Split`, and thus could not be `reunite`d.","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\stream\\split.rs","byte_start":326411,"byte_end":326471,"line_start":127,"line_end":127,"column_start":1,"column_end":61}}]},{"kind":"Field","id":{"krate":0,"index":4125},"span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\stream\\split.rs","byte_start":326553,"byte_end":326575,"line_start":129,"line_end":129,"column_start":34,"column_end":56},"name":"0","qualname":"::stream::stream::split::ReuniteError::0","value":"stream::stream::split::SplitSink<T, Item>","parent":{"krate":0,"index":4121},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":4126},"span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\stream\\split.rs","byte_start":326577,"byte_end":326595,"line_start":129,"line_end":129,"column_start":58,"column_end":76},"name":"1","qualname":"::stream::stream::split::ReuniteError::1","value":"stream::stream::split::SplitStream<T>","parent":{"krate":0,"index":4121},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":15002},"span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\stream\\catch_unwind.rs","byte_start":327513,"byte_end":327524,"line_start":12,"line_end":12,"column_start":16,"column_end":27},"name":"CatchUnwind","qualname":"::stream::stream::catch_unwind::CatchUnwind","value":"CatchUnwind {  }","parent":null,"children":[{"krate":0,"index":15004},{"krate":0,"index":15005}],"decl_id":null,"docs":" Stream for the [`catch_unwind`](super::StreamExt::catch_unwind) method.\n","sig":null,"attributes":[{"value":"must_use = \"streams do nothing unless polled\"","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pin-project-lite-0.2.9\\src\\lib.rs","byte_start":14239710,"byte_end":14239719,"line_start":633,"line_end":633,"column_start":11,"column_end":20}}]},{"kind":"Trait","id":{"krate":0,"index":4200},"span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\stream\\mod.rs","byte_start":158613,"byte_end":158622,"line_start":249,"line_end":249,"column_start":11,"column_end":20},"name":"StreamExt","qualname":"::stream::stream::StreamExt","value":"StreamExt: Stream","parent":null,"children":[{"krate":0,"index":4201},{"krate":0,"index":4202},{"krate":0,"index":4203},{"krate":0,"index":4206},{"krate":0,"index":4207},{"krate":0,"index":4210},{"krate":0,"index":4214},{"krate":0,"index":4217},{"krate":0,"index":4219},{"krate":0,"index":4224},{"krate":0,"index":4225},{"krate":0,"index":4226},{"krate":0,"index":4227},{"krate":0,"index":4231},{"krate":0,"index":4234},{"krate":0,"index":4237},{"krate":0,"index":4238},{"krate":0,"index":4240},{"krate":0,"index":4243},{"krate":0,"index":4247},{"krate":0,"index":4252},{"krate":0,"index":4255},{"krate":0,"index":4258},{"krate":0,"index":4260},{"krate":0,"index":4263},{"krate":0,"index":4267},{"krate":0,"index":4268},{"krate":0,"index":4269},{"krate":0,"index":4270},{"krate":0,"index":4271},{"krate":0,"index":4272},{"krate":0,"index":4274},{"krate":0,"index":4276},{"krate":0,"index":4277},{"krate":0,"index":4278},{"krate":0,"index":4280},{"krate":0,"index":4282},{"krate":0,"index":4283},{"krate":0,"index":4284},{"krate":0,"index":4285},{"krate":0,"index":4287},{"krate":0,"index":4289},{"krate":0,"index":4291},{"krate":0,"index":4293},{"krate":0,"index":4295},{"krate":0,"index":4296}],"decl_id":null,"docs":" An extension trait for `Stream`s that provides a variety of convenient\n combinator functions.\n","sig":null,"attributes":[{"value":"/ An extension trait for `Stream`s that provides a variety of convenient","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\stream\\mod.rs","byte_start":158502,"byte_end":158576,"line_start":247,"line_end":247,"column_start":1,"column_end":75}},{"value":"/ combinator functions.","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\stream\\mod.rs","byte_start":158577,"byte_end":158602,"line_start":248,"line_end":248,"column_start":1,"column_end":26}}]},{"kind":"Method","id":{"krate":0,"index":4201},"span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\stream\\mod.rs","byte_start":159532,"byte_end":159536,"line_start":273,"line_end":273,"column_start":8,"column_end":12},"name":"next","qualname":"::stream::stream::StreamExt::next","value":"pub fn next(&mut Self) -> Next<, Self> where Self: Unpin","parent":{"krate":0,"index":4200},"children":[],"decl_id":null,"docs":" Creates a future that resolves to the next item in the stream.","sig":null,"attributes":[{"value":"/ Creates a future that resolves to the next item in the stream.","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\stream\\mod.rs","byte_start":158637,"byte_end":158703,"line_start":250,"line_end":250,"column_start":5,"column_end":71}},{"value":"/","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\stream\\mod.rs","byte_start":158708,"byte_end":158711,"line_start":251,"line_end":251,"column_start":5,"column_end":8}},{"value":"/ Note that because `next` doesn't take ownership over the stream,","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\stream\\mod.rs","byte_start":158716,"byte_end":158784,"line_start":252,"line_end":252,"column_start":5,"column_end":73}},{"value":"/ the [`Stream`] type must be [`Unpin`]. If you want to use `next` with a","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\stream\\mod.rs","byte_start":158789,"byte_end":158864,"line_start":253,"line_end":253,"column_start":5,"column_end":80}},{"value":"/ [`!Unpin`](Unpin) stream, you'll first have to pin the stream. This can","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\stream\\mod.rs","byte_start":158869,"byte_end":158944,"line_start":254,"line_end":254,"column_start":5,"column_end":80}},{"value":"/ be done by boxing the stream using [`Box::pin`] or","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\stream\\mod.rs","byte_start":158949,"byte_end":159003,"line_start":255,"line_end":255,"column_start":5,"column_end":59}},{"value":"/ pinning it to the stack using the `pin_mut!` macro from the `pin_utils`","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\stream\\mod.rs","byte_start":159008,"byte_end":159083,"line_start":256,"line_end":256,"column_start":5,"column_end":80}},{"value":"/ crate.","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\stream\\mod.rs","byte_start":159088,"byte_end":159098,"line_start":257,"line_end":257,"column_start":5,"column_end":15}},{"value":"/","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\stream\\mod.rs","byte_start":159103,"byte_end":159106,"line_start":258,"line_end":258,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\stream\\mod.rs","byte_start":159111,"byte_end":159125,"line_start":259,"line_end":259,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\stream\\mod.rs","byte_start":159130,"byte_end":159133,"line_start":260,"line_end":260,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\stream\\mod.rs","byte_start":159138,"byte_end":159145,"line_start":261,"line_end":261,"column_start":5,"column_end":12}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\stream\\mod.rs","byte_start":159150,"byte_end":159191,"line_start":262,"line_end":262,"column_start":5,"column_end":46}},{"value":"/ use futures::stream::{self, StreamExt};","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\stream\\mod.rs","byte_start":159196,"byte_end":159239,"line_start":263,"line_end":263,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\stream\\mod.rs","byte_start":159244,"byte_end":159247,"line_start":264,"line_end":264,"column_start":5,"column_end":8}},{"value":"/ let mut stream = stream::iter(1..=3);","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\stream\\mod.rs","byte_start":159252,"byte_end":159293,"line_start":265,"line_end":265,"column_start":5,"column_end":46}},{"value":"/","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\stream\\mod.rs","byte_start":159298,"byte_end":159301,"line_start":266,"line_end":266,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(stream.next().await, Some(1));","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\stream\\mod.rs","byte_start":159306,"byte_end":159351,"line_start":267,"line_end":267,"column_start":5,"column_end":50}},{"value":"/ assert_eq!(stream.next().await, Some(2));","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\stream\\mod.rs","byte_start":159356,"byte_end":159401,"line_start":268,"line_end":268,"column_start":5,"column_end":50}},{"value":"/ assert_eq!(stream.next().await, Some(3));","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\stream\\mod.rs","byte_start":159406,"byte_end":159451,"line_start":269,"line_end":269,"column_start":5,"column_end":50}},{"value":"/ assert_eq!(stream.next().await, None);","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\stream\\mod.rs","byte_start":159456,"byte_end":159498,"line_start":270,"line_end":270,"column_start":5,"column_end":47}},{"value":"/ # });","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\stream\\mod.rs","byte_start":159503,"byte_end":159512,"line_start":271,"line_end":271,"column_start":5,"column_end":14}},{"value":"/ ```","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\stream\\mod.rs","byte_start":159517,"byte_end":159524,"line_start":272,"line_end":272,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":4202},"span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\stream\\mod.rs","byte_start":160775,"byte_end":160786,"line_start":308,"line_end":308,"column_start":8,"column_end":19},"name":"into_future","qualname":"::stream::stream::StreamExt::into_future","value":"pub fn into_future(Self) -> StreamFuture<Self> where Self: Sized + Unpin","parent":{"krate":0,"index":4200},"children":[],"decl_id":null,"docs":" Converts this stream into a future of `(next_item, tail_of_stream)`.\n If the stream terminates, then the next item is [`None`].","sig":null,"attributes":[{"value":"/ Converts this stream into a future of `(next_item, tail_of_stream)`.","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\stream\\mod.rs","byte_start":159678,"byte_end":159750,"line_start":280,"line_end":280,"column_start":5,"column_end":77}},{"value":"/ If the stream terminates, then the next item is [`None`].","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\stream\\mod.rs","byte_start":159755,"byte_end":159816,"line_start":281,"line_end":281,"column_start":5,"column_end":66}},{"value":"/","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\stream\\mod.rs","byte_start":159821,"byte_end":159824,"line_start":282,"line_end":282,"column_start":5,"column_end":8}},{"value":"/ The returned future can be used to compose streams and futures together","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\stream\\mod.rs","byte_start":159829,"byte_end":159904,"line_start":283,"line_end":283,"column_start":5,"column_end":80}},{"value":"/ by placing everything into the \"world of futures\".","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\stream\\mod.rs","byte_start":159909,"byte_end":159963,"line_start":284,"line_end":284,"column_start":5,"column_end":59}},{"value":"/","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\stream\\mod.rs","byte_start":159968,"byte_end":159971,"line_start":285,"line_end":285,"column_start":5,"column_end":8}},{"value":"/ Note that because `into_future` moves the stream, the [`Stream`] type","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\stream\\mod.rs","byte_start":159976,"byte_end":160049,"line_start":286,"line_end":286,"column_start":5,"column_end":78}},{"value":"/ must be [`Unpin`]. If you want to use `into_future` with a","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\stream\\mod.rs","byte_start":160054,"byte_end":160116,"line_start":287,"line_end":287,"column_start":5,"column_end":67}},{"value":"/ [`!Unpin`](Unpin) stream, you'll first have to pin the stream. This can","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\stream\\mod.rs","byte_start":160121,"byte_end":160196,"line_start":288,"line_end":288,"column_start":5,"column_end":80}},{"value":"/ be done by boxing the stream using [`Box::pin`] or","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\stream\\mod.rs","byte_start":160201,"byte_end":160255,"line_start":289,"line_end":289,"column_start":5,"column_end":59}},{"value":"/ pinning it to the stack using the `pin_mut!` macro from the `pin_utils`","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\stream\\mod.rs","byte_start":160260,"byte_end":160335,"line_start":290,"line_end":290,"column_start":5,"column_end":80}},{"value":"/ crate.","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\stream\\mod.rs","byte_start":160340,"byte_end":160350,"line_start":291,"line_end":291,"column_start":5,"column_end":15}},{"value":"/","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\stream\\mod.rs","byte_start":160355,"byte_end":160358,"line_start":292,"line_end":292,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\stream\\mod.rs","byte_start":160363,"byte_end":160377,"line_start":293,"line_end":293,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\stream\\mod.rs","byte_start":160382,"byte_end":160385,"line_start":294,"line_end":294,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\stream\\mod.rs","byte_start":160390,"byte_end":160397,"line_start":295,"line_end":295,"column_start":5,"column_end":12}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\stream\\mod.rs","byte_start":160402,"byte_end":160443,"line_start":296,"line_end":296,"column_start":5,"column_end":46}},{"value":"/ use futures::stream::{self, StreamExt};","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\stream\\mod.rs","byte_start":160448,"byte_end":160491,"line_start":297,"line_end":297,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\stream\\mod.rs","byte_start":160496,"byte_end":160499,"line_start":298,"line_end":298,"column_start":5,"column_end":8}},{"value":"/ let stream = stream::iter(1..=3);","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\stream\\mod.rs","byte_start":160504,"byte_end":160541,"line_start":299,"line_end":299,"column_start":5,"column_end":42}},{"value":"/","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\stream\\mod.rs","byte_start":160546,"byte_end":160549,"line_start":300,"line_end":300,"column_start":5,"column_end":8}},{"value":"/ let (item, stream) = stream.into_future().await;","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\stream\\mod.rs","byte_start":160554,"byte_end":160606,"line_start":301,"line_end":301,"column_start":5,"column_end":57}},{"value":"/ assert_eq!(Some(1), item);","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\stream\\mod.rs","byte_start":160611,"byte_end":160641,"line_start":302,"line_end":302,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\stream\\mod.rs","byte_start":160646,"byte_end":160649,"line_start":303,"line_end":303,"column_start":5,"column_end":8}},{"value":"/ let (item, stream) = stream.into_future().await;","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\stream\\mod.rs","byte_start":160654,"byte_end":160706,"line_start":304,"line_end":304,"column_start":5,"column_end":57}},{"value":"/ assert_eq!(Some(2), item);","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\stream\\mod.rs","byte_start":160711,"byte_end":160741,"line_start":305,"line_end":305,"column_start":5,"column_end":35}},{"value":"/ # });","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\stream\\mod.rs","byte_start":160746,"byte_end":160755,"line_start":306,"line_end":306,"column_start":5,"column_end":14}},{"value":"/ ```","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\stream\\mod.rs","byte_start":160760,"byte_end":160767,"line_start":307,"line_end":307,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":4203},"span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\stream\\mod.rs","byte_start":161787,"byte_end":161790,"line_start":338,"line_end":338,"column_start":8,"column_end":11},"name":"map","qualname":"::stream::stream::StreamExt::map","value":"pub fn map<T, F>(Self, F) -> Map<Self, F> where F: FnMut(Self::Item) -> T,\nSelf: Sized","parent":{"krate":0,"index":4200},"children":[],"decl_id":null,"docs":" Maps this stream's items to a different type, returning a new stream of\n the resulting type.","sig":null,"attributes":[{"value":"/ Maps this stream's items to a different type, returning a new stream of","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\stream\\mod.rs","byte_start":160951,"byte_end":161026,"line_start":315,"line_end":315,"column_start":5,"column_end":80}},{"value":"/ the resulting type.","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\stream\\mod.rs","byte_start":161031,"byte_end":161054,"line_start":316,"line_end":316,"column_start":5,"column_end":28}},{"value":"/","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\stream\\mod.rs","byte_start":161059,"byte_end":161062,"line_start":317,"line_end":317,"column_start":5,"column_end":8}},{"value":"/ The provided closure is executed over all elements of this stream as","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\stream\\mod.rs","byte_start":161067,"byte_end":161139,"line_start":318,"line_end":318,"column_start":5,"column_end":77}},{"value":"/ they are made available. It is executed inline with calls to","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\stream\\mod.rs","byte_start":161144,"byte_end":161208,"line_start":319,"line_end":319,"column_start":5,"column_end":69}},{"value":"/ [`poll_next`](Stream::poll_next).","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\stream\\mod.rs","byte_start":161213,"byte_end":161250,"line_start":320,"line_end":320,"column_start":5,"column_end":42}},{"value":"/","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\stream\\mod.rs","byte_start":161255,"byte_end":161258,"line_start":321,"line_end":321,"column_start":5,"column_end":8}},{"value":"/ Note that this function consumes the stream passed into it and returns a","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\stream\\mod.rs","byte_start":161263,"byte_end":161339,"line_start":322,"line_end":322,"column_start":5,"column_end":81}},{"value":"/ wrapped version of it, similar to the existing `map` methods in the","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\stream\\mod.rs","byte_start":161344,"byte_end":161415,"line_start":323,"line_end":323,"column_start":5,"column_end":76}},{"value":"/ standard library.","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\stream\\mod.rs","byte_start":161420,"byte_end":161441,"line_start":324,"line_end":324,"column_start":5,"column_end":26}},{"value":"/","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\stream\\mod.rs","byte_start":161446,"byte_end":161449,"line_start":325,"line_end":325,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\stream\\mod.rs","byte_start":161454,"byte_end":161468,"line_start":326,"line_end":326,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\stream\\mod.rs","byte_start":161473,"byte_end":161476,"line_start":327,"line_end":327,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\stream\\mod.rs","byte_start":161481,"byte_end":161488,"line_start":328,"line_end":328,"column_start":5,"column_end":12}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\stream\\mod.rs","byte_start":161493,"byte_end":161534,"line_start":329,"line_end":329,"column_start":5,"column_end":46}},{"value":"/ use futures::stream::{self, StreamExt};","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\stream\\mod.rs","byte_start":161539,"byte_end":161582,"line_start":330,"line_end":330,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\stream\\mod.rs","byte_start":161587,"byte_end":161590,"line_start":331,"line_end":331,"column_start":5,"column_end":8}},{"value":"/ let stream = stream::iter(1..=3);","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\stream\\mod.rs","byte_start":161595,"byte_end":161632,"line_start":332,"line_end":332,"column_start":5,"column_end":42}},{"value":"/ let stream = stream.map(|x| x + 3);","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\stream\\mod.rs","byte_start":161637,"byte_end":161676,"line_start":333,"line_end":333,"column_start":5,"column_end":44}},{"value":"/","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\stream\\mod.rs","byte_start":161681,"byte_end":161684,"line_start":334,"line_end":334,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(vec![4, 5, 6], stream.collect::<Vec<_>>().await);","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\stream\\mod.rs","byte_start":161689,"byte_end":161753,"line_start":335,"line_end":335,"column_start":5,"column_end":69}},{"value":"/ # });","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\stream\\mod.rs","byte_start":161758,"byte_end":161767,"line_start":336,"line_end":336,"column_start":5,"column_end":14}},{"value":"/ ```","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\stream\\mod.rs","byte_start":161772,"byte_end":161779,"line_start":337,"line_end":337,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":4206},"span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\stream\\mod.rs","byte_start":163350,"byte_end":163359,"line_start":384,"line_end":384,"column_start":8,"column_end":17},"name":"enumerate","qualname":"::stream::stream::StreamExt::enumerate","value":"pub fn enumerate(Self) -> Enumerate<Self> where Self: Sized","parent":{"krate":0,"index":4200},"children":[],"decl_id":null,"docs":" Creates a stream which gives the current iteration count as well as\n the next value.","sig":null,"attributes":[{"value":"/ Creates a stream which gives the current iteration count as well as","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\stream\\mod.rs","byte_start":161957,"byte_end":162028,"line_start":346,"line_end":346,"column_start":5,"column_end":76}},{"value":"/ the next value.","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\stream\\mod.rs","byte_start":162033,"byte_end":162052,"line_start":347,"line_end":347,"column_start":5,"column_end":24}},{"value":"/","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\stream\\mod.rs","byte_start":162057,"byte_end":162060,"line_start":348,"line_end":348,"column_start":5,"column_end":8}},{"value":"/ The stream returned yields pairs `(i, val)`, where `i` is the","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\stream\\mod.rs","byte_start":162065,"byte_end":162130,"line_start":349,"line_end":349,"column_start":5,"column_end":70}},{"value":"/ current index of iteration and `val` is the value returned by the","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\stream\\mod.rs","byte_start":162135,"byte_end":162204,"line_start":350,"line_end":350,"column_start":5,"column_end":74}},{"value":"/ stream.","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\stream\\mod.rs","byte_start":162209,"byte_end":162220,"line_start":351,"line_end":351,"column_start":5,"column_end":16}},{"value":"/","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\stream\\mod.rs","byte_start":162225,"byte_end":162228,"line_start":352,"line_end":352,"column_start":5,"column_end":8}},{"value":"/ `enumerate()` keeps its count as a [`usize`]. If you want to count by a","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\stream\\mod.rs","byte_start":162233,"byte_end":162308,"line_start":353,"line_end":353,"column_start":5,"column_end":80}},{"value":"/ different sized integer, the [`zip`](StreamExt::zip) function provides similar","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\stream\\mod.rs","byte_start":162313,"byte_end":162395,"line_start":354,"line_end":354,"column_start":5,"column_end":87}},{"value":"/ functionality.","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\stream\\mod.rs","byte_start":162400,"byte_end":162418,"line_start":355,"line_end":355,"column_start":5,"column_end":23}},{"value":"/","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\stream\\mod.rs","byte_start":162423,"byte_end":162426,"line_start":356,"line_end":356,"column_start":5,"column_end":8}},{"value":"/ # Overflow Behavior","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\stream\\mod.rs","byte_start":162431,"byte_end":162454,"line_start":357,"line_end":357,"column_start":5,"column_end":28}},{"value":"/","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\stream\\mod.rs","byte_start":162459,"byte_end":162462,"line_start":358,"line_end":358,"column_start":5,"column_end":8}},{"value":"/ The method does no guarding against overflows, so enumerating more than","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\stream\\mod.rs","byte_start":162467,"byte_end":162542,"line_start":359,"line_end":359,"column_start":5,"column_end":80}},{"value":"/ [`prim@usize::max_value()`] elements either produces the wrong result or panics. If","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\stream\\mod.rs","byte_start":162547,"byte_end":162634,"line_start":360,"line_end":360,"column_start":5,"column_end":92}},{"value":"/ debug assertions are enabled, a panic is guaranteed.","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\stream\\mod.rs","byte_start":162639,"byte_end":162695,"line_start":361,"line_end":361,"column_start":5,"column_end":61}},{"value":"/","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\stream\\mod.rs","byte_start":162700,"byte_end":162703,"line_start":362,"line_end":362,"column_start":5,"column_end":8}},{"value":"/ # Panics","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\stream\\mod.rs","byte_start":162708,"byte_end":162720,"line_start":363,"line_end":363,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\stream\\mod.rs","byte_start":162725,"byte_end":162728,"line_start":364,"line_end":364,"column_start":5,"column_end":8}},{"value":"/ The returned stream might panic if the to-be-returned index would","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\stream\\mod.rs","byte_start":162733,"byte_end":162802,"line_start":365,"line_end":365,"column_start":5,"column_end":74}},{"value":"/ overflow a [`usize`].","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\stream\\mod.rs","byte_start":162807,"byte_end":162832,"line_start":366,"line_end":366,"column_start":5,"column_end":30}},{"value":"/","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\stream\\mod.rs","byte_start":162837,"byte_end":162840,"line_start":367,"line_end":367,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\stream\\mod.rs","byte_start":162845,"byte_end":162859,"line_start":368,"line_end":368,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\stream\\mod.rs","byte_start":162864,"byte_end":162867,"line_start":369,"line_end":369,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\stream\\mod.rs","byte_start":162872,"byte_end":162879,"line_start":370,"line_end":370,"column_start":5,"column_end":12}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\stream\\mod.rs","byte_start":162884,"byte_end":162925,"line_start":371,"line_end":371,"column_start":5,"column_end":46}},{"value":"/ use futures::stream::{self, StreamExt};","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\stream\\mod.rs","byte_start":162930,"byte_end":162973,"line_start":372,"line_end":372,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\stream\\mod.rs","byte_start":162978,"byte_end":162981,"line_start":373,"line_end":373,"column_start":5,"column_end":8}},{"value":"/ let stream = stream::iter(vec!['a', 'b', 'c']);","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\stream\\mod.rs","byte_start":162986,"byte_end":163037,"line_start":374,"line_end":374,"column_start":5,"column_end":56}},{"value":"/","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\stream\\mod.rs","byte_start":163042,"byte_end":163045,"line_start":375,"line_end":375,"column_start":5,"column_end":8}},{"value":"/ let mut stream = stream.enumerate();","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\stream\\mod.rs","byte_start":163050,"byte_end":163090,"line_start":376,"line_end":376,"column_start":5,"column_end":45}},{"value":"/","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\stream\\mod.rs","byte_start":163095,"byte_end":163098,"line_start":377,"line_end":377,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(stream.next().await, Some((0, 'a')));","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\stream\\mod.rs","byte_start":163103,"byte_end":163155,"line_start":378,"line_end":378,"column_start":5,"column_end":57}},{"value":"/ assert_eq!(stream.next().await, Some((1, 'b')));","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\stream\\mod.rs","byte_start":163160,"byte_end":163212,"line_start":379,"line_end":379,"column_start":5,"column_end":57}},{"value":"/ assert_eq!(stream.next().await, Some((2, 'c')));","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\stream\\mod.rs","byte_start":163217,"byte_end":163269,"line_start":380,"line_end":380,"column_start":5,"column_end":57}},{"value":"/ assert_eq!(stream.next().await, None);","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\stream\\mod.rs","byte_start":163274,"byte_end":163316,"line_start":381,"line_end":381,"column_start":5,"column_end":47}},{"value":"/ # });","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\stream\\mod.rs","byte_start":163321,"byte_end":163330,"line_start":382,"line_end":382,"column_start":5,"column_end":14}},{"value":"/ ```","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\stream\\mod.rs","byte_start":163335,"byte_end":163342,"line_start":383,"line_end":383,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":4207},"span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\stream\\mod.rs","byte_start":164590,"byte_end":164596,"line_start":417,"line_end":417,"column_start":8,"column_end":14},"name":"filter","qualname":"::stream::stream::StreamExt::filter","value":"pub fn filter<Fut, F>(Self, F) -> Filter<Self, Fut, F> where\nF: FnMut(&Self::Item) -> Fut, Fut: Future<Output = bool>, Self: Sized","parent":{"krate":0,"index":4200},"children":[],"decl_id":null,"docs":" Filters the values produced by this stream according to the provided\n asynchronous predicate.","sig":null,"attributes":[{"value":"/ Filters the values produced by this stream according to the provided","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\stream\\mod.rs","byte_start":163503,"byte_end":163575,"line_start":391,"line_end":391,"column_start":5,"column_end":77}},{"value":"/ asynchronous predicate.","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\stream\\mod.rs","byte_start":163580,"byte_end":163607,"line_start":392,"line_end":392,"column_start":5,"column_end":32}},{"value":"/","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\stream\\mod.rs","byte_start":163612,"byte_end":163615,"line_start":393,"line_end":393,"column_start":5,"column_end":8}},{"value":"/ As values of this stream are made available, the provided predicate `f`","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\stream\\mod.rs","byte_start":163620,"byte_end":163695,"line_start":394,"line_end":394,"column_start":5,"column_end":80}},{"value":"/ will be run against them. If the predicate returns a `Future` which","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\stream\\mod.rs","byte_start":163700,"byte_end":163771,"line_start":395,"line_end":395,"column_start":5,"column_end":76}},{"value":"/ resolves to `true`, then the stream will yield the value, but if the","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\stream\\mod.rs","byte_start":163776,"byte_end":163848,"line_start":396,"line_end":396,"column_start":5,"column_end":77}},{"value":"/ predicate returns a `Future` which resolves to `false`, then the value","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\stream\\mod.rs","byte_start":163853,"byte_end":163927,"line_start":397,"line_end":397,"column_start":5,"column_end":79}},{"value":"/ will be discarded and the next value will be produced.","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\stream\\mod.rs","byte_start":163932,"byte_end":163990,"line_start":398,"line_end":398,"column_start":5,"column_end":63}},{"value":"/","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\stream\\mod.rs","byte_start":163995,"byte_end":163998,"line_start":399,"line_end":399,"column_start":5,"column_end":8}},{"value":"/ Note that this function consumes the stream passed into it and returns a","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\stream\\mod.rs","byte_start":164003,"byte_end":164079,"line_start":400,"line_end":400,"column_start":5,"column_end":81}},{"value":"/ wrapped version of it, similar to the existing `filter` methods in the","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\stream\\mod.rs","byte_start":164084,"byte_end":164158,"line_start":401,"line_end":401,"column_start":5,"column_end":79}},{"value":"/ standard library.","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\stream\\mod.rs","byte_start":164163,"byte_end":164184,"line_start":402,"line_end":402,"column_start":5,"column_end":26}},{"value":"/","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\stream\\mod.rs","byte_start":164189,"byte_end":164192,"line_start":403,"line_end":403,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\stream\\mod.rs","byte_start":164197,"byte_end":164211,"line_start":404,"line_end":404,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\stream\\mod.rs","byte_start":164216,"byte_end":164219,"line_start":405,"line_end":405,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\stream\\mod.rs","byte_start":164224,"byte_end":164231,"line_start":406,"line_end":406,"column_start":5,"column_end":12}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\stream\\mod.rs","byte_start":164236,"byte_end":164277,"line_start":407,"line_end":407,"column_start":5,"column_end":46}},{"value":"/ use futures::future;","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\stream\\mod.rs","byte_start":164282,"byte_end":164306,"line_start":408,"line_end":408,"column_start":5,"column_end":29}},{"value":"/ use futures::stream::{self, StreamExt};","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\stream\\mod.rs","byte_start":164311,"byte_end":164354,"line_start":409,"line_end":409,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\stream\\mod.rs","byte_start":164359,"byte_end":164362,"line_start":410,"line_end":410,"column_start":5,"column_end":8}},{"value":"/ let stream = stream::iter(1..=10);","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\stream\\mod.rs","byte_start":164367,"byte_end":164405,"line_start":411,"line_end":411,"column_start":5,"column_end":43}},{"value":"/ let events = stream.filter(|x| future::ready(x % 2 == 0));","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\stream\\mod.rs","byte_start":164410,"byte_end":164472,"line_start":412,"line_end":412,"column_start":5,"column_end":67}},{"value":"/","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\stream\\mod.rs","byte_start":164477,"byte_end":164480,"line_start":413,"line_end":413,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(vec![2, 4, 6, 8, 10], events.collect::<Vec<_>>().await);","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\stream\\mod.rs","byte_start":164485,"byte_end":164556,"line_start":414,"line_end":414,"column_start":5,"column_end":76}},{"value":"/ # });","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\stream\\mod.rs","byte_start":164561,"byte_end":164570,"line_start":415,"line_end":415,"column_start":5,"column_end":14}},{"value":"/ ```","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\stream\\mod.rs","byte_start":164575,"byte_end":164582,"line_start":416,"line_end":416,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":4210},"span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\stream\\mod.rs","byte_start":165923,"byte_end":165933,"line_start":451,"line_end":451,"column_start":8,"column_end":18},"name":"filter_map","qualname":"::stream::stream::StreamExt::filter_map","value":"pub fn filter_map<Fut, T, F>(Self, F) -> FilterMap<Self, Fut, F> where\nF: FnMut(Self::Item) -> Fut, Fut: Future<Output = Option<T>>, Self: Sized","parent":{"krate":0,"index":4200},"children":[],"decl_id":null,"docs":" Filters the values produced by this stream while simultaneously mapping\n them to a different type according to the provided asynchronous closure.","sig":null,"attributes":[{"value":"/ Filters the values produced by this stream while simultaneously mapping","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\stream\\mod.rs","byte_start":164824,"byte_end":164899,"line_start":426,"line_end":426,"column_start":5,"column_end":80}},{"value":"/ them to a different type according to the provided asynchronous closure.","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\stream\\mod.rs","byte_start":164904,"byte_end":164980,"line_start":427,"line_end":427,"column_start":5,"column_end":81}},{"value":"/","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\stream\\mod.rs","byte_start":164985,"byte_end":164988,"line_start":428,"line_end":428,"column_start":5,"column_end":8}},{"value":"/ As values of this stream are made available, the provided function will","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\stream\\mod.rs","byte_start":164993,"byte_end":165068,"line_start":429,"line_end":429,"column_start":5,"column_end":80}},{"value":"/ be run on them. If the future returned by the predicate `f` resolves to","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\stream\\mod.rs","byte_start":165073,"byte_end":165148,"line_start":430,"line_end":430,"column_start":5,"column_end":80}},{"value":"/ [`Some(item)`](Some) then the stream will yield the value `item`, but if","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\stream\\mod.rs","byte_start":165153,"byte_end":165229,"line_start":431,"line_end":431,"column_start":5,"column_end":81}},{"value":"/ it resolves to [`None`] then the next value will be produced.","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\stream\\mod.rs","byte_start":165234,"byte_end":165299,"line_start":432,"line_end":432,"column_start":5,"column_end":70}},{"value":"/","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\stream\\mod.rs","byte_start":165304,"byte_end":165307,"line_start":433,"line_end":433,"column_start":5,"column_end":8}},{"value":"/ Note that this function consumes the stream passed into it and returns a","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\stream\\mod.rs","byte_start":165312,"byte_end":165388,"line_start":434,"line_end":434,"column_start":5,"column_end":81}},{"value":"/ wrapped version of it, similar to the existing `filter_map` methods in","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\stream\\mod.rs","byte_start":165393,"byte_end":165467,"line_start":435,"line_end":435,"column_start":5,"column_end":79}},{"value":"/ the standard library.","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\stream\\mod.rs","byte_start":165472,"byte_end":165497,"line_start":436,"line_end":436,"column_start":5,"column_end":30}},{"value":"/","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\stream\\mod.rs","byte_start":165502,"byte_end":165505,"line_start":437,"line_end":437,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\stream\\mod.rs","byte_start":165510,"byte_end":165524,"line_start":438,"line_end":438,"column_start":5,"column_end":19}},{"value":"/ ```","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\stream\\mod.rs","byte_start":165529,"byte_end":165536,"line_start":439,"line_end":439,"column_start":5,"column_end":12}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\stream\\mod.rs","byte_start":165541,"byte_end":165582,"line_start":440,"line_end":440,"column_start":5,"column_end":46}},{"value":"/ use futures::stream::{self, StreamExt};","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\stream\\mod.rs","byte_start":165587,"byte_end":165630,"line_start":441,"line_end":441,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\stream\\mod.rs","byte_start":165635,"byte_end":165638,"line_start":442,"line_end":442,"column_start":5,"column_end":8}},{"value":"/ let stream = stream::iter(1..=10);","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\stream\\mod.rs","byte_start":165643,"byte_end":165681,"line_start":443,"line_end":443,"column_start":5,"column_end":43}},{"value":"/ let events = stream.filter_map(|x| async move {","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\stream\\mod.rs","byte_start":165686,"byte_end":165737,"line_start":444,"line_end":444,"column_start":5,"column_end":56}},{"value":"/     if x % 2 == 0 { Some(x + 1) } else { None }","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\stream\\mod.rs","byte_start":165742,"byte_end":165793,"line_start":445,"line_end":445,"column_start":5,"column_end":56}},{"value":"/ });","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\stream\\mod.rs","byte_start":165798,"byte_end":165805,"line_start":446,"line_end":446,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\stream\\mod.rs","byte_start":165810,"byte_end":165813,"line_start":447,"line_end":447,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(vec![3, 5, 7, 9, 11], events.collect::<Vec<_>>().await);","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\stream\\mod.rs","byte_start":165818,"byte_end":165889,"line_start":448,"line_end":448,"column_start":5,"column_end":76}},{"value":"/ # });","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\stream\\mod.rs","byte_start":165894,"byte_end":165903,"line_start":449,"line_end":449,"column_start":5,"column_end":14}},{"value":"/ ```","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\stream\\mod.rs","byte_start":165908,"byte_end":165915,"line_start":450,"line_end":450,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":4214},"span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\stream\\mod.rs","byte_start":166962,"byte_end":166966,"line_start":482,"line_end":482,"column_start":8,"column_end":12},"name":"then","qualname":"::stream::stream::StreamExt::then","value":"pub fn then<Fut, F>(Self, F) -> Then<Self, Fut, F> where F: FnMut(Self::Item)\n-> Fut, Fut: Future, Self: Sized","parent":{"krate":0,"index":4200},"children":[],"decl_id":null,"docs":" Computes from this stream's items new items of a different type using\n an asynchronous closure.","sig":null,"attributes":[{"value":"/ Computes from this stream's items new items of a different type using","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\stream\\mod.rs","byte_start":166165,"byte_end":166238,"line_start":460,"line_end":460,"column_start":5,"column_end":78}},{"value":"/ an asynchronous closure.","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\stream\\mod.rs","byte_start":166243,"byte_end":166271,"line_start":461,"line_end":461,"column_start":5,"column_end":33}},{"value":"/","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\stream\\mod.rs","byte_start":166276,"byte_end":166279,"line_start":462,"line_end":462,"column_start":5,"column_end":8}},{"value":"/ The provided closure `f` will be called with an `Item` once a value is","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\stream\\mod.rs","byte_start":166284,"byte_end":166358,"line_start":463,"line_end":463,"column_start":5,"column_end":79}},{"value":"/ ready, it returns a future which will then be run to completion","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\stream\\mod.rs","byte_start":166363,"byte_end":166430,"line_start":464,"line_end":464,"column_start":5,"column_end":72}},{"value":"/ to produce the next value on this stream.","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\stream\\mod.rs","byte_start":166435,"byte_end":166480,"line_start":465,"line_end":465,"column_start":5,"column_end":50}},{"value":"/","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\stream\\mod.rs","byte_start":166485,"byte_end":166488,"line_start":466,"line_end":466,"column_start":5,"column_end":8}},{"value":"/ Note that this function consumes the stream passed into it and returns a","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\stream\\mod.rs","byte_start":166493,"byte_end":166569,"line_start":467,"line_end":467,"column_start":5,"column_end":81}},{"value":"/ wrapped version of it.","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\stream\\mod.rs","byte_start":166574,"byte_end":166600,"line_start":468,"line_end":468,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\stream\\mod.rs","byte_start":166605,"byte_end":166608,"line_start":469,"line_end":469,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\stream\\mod.rs","byte_start":166613,"byte_end":166627,"line_start":470,"line_end":470,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\stream\\mod.rs","byte_start":166632,"byte_end":166635,"line_start":471,"line_end":471,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\stream\\mod.rs","byte_start":166640,"byte_end":166647,"line_start":472,"line_end":472,"column_start":5,"column_end":12}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\stream\\mod.rs","byte_start":166652,"byte_end":166693,"line_start":473,"line_end":473,"column_start":5,"column_end":46}},{"value":"/ use futures::stream::{self, StreamExt};","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\stream\\mod.rs","byte_start":166698,"byte_end":166741,"line_start":474,"line_end":474,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\stream\\mod.rs","byte_start":166746,"byte_end":166749,"line_start":475,"line_end":475,"column_start":5,"column_end":8}},{"value":"/ let stream = stream::iter(1..=3);","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\stream\\mod.rs","byte_start":166754,"byte_end":166791,"line_start":476,"line_end":476,"column_start":5,"column_end":42}},{"value":"/ let stream = stream.then(|x| async move { x + 3 });","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\stream\\mod.rs","byte_start":166796,"byte_end":166851,"line_start":477,"line_end":477,"column_start":5,"column_end":60}},{"value":"/","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\stream\\mod.rs","byte_start":166856,"byte_end":166859,"line_start":478,"line_end":478,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(vec![4, 5, 6], stream.collect::<Vec<_>>().await);","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\stream\\mod.rs","byte_start":166864,"byte_end":166928,"line_start":479,"line_end":479,"column_start":5,"column_end":69}},{"value":"/ # });","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\stream\\mod.rs","byte_start":166933,"byte_end":166942,"line_start":480,"line_end":480,"column_start":5,"column_end":14}},{"value":"/ ```","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\stream\\mod.rs","byte_start":166947,"byte_end":166954,"line_start":481,"line_end":481,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":4217},"span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\stream\\mod.rs","byte_start":167900,"byte_end":167907,"line_start":516,"line_end":516,"column_start":8,"column_end":15},"name":"collect","qualname":"::stream::stream::StreamExt::collect","value":"pub fn collect<C: Default + Extend<Self::Item>>(Self) -> Collect<Self, C>\nwhere Self: Sized","parent":{"krate":0,"index":4200},"children":[],"decl_id":null,"docs":" Transforms a stream into a collection, returning a\n future representing the result of that computation.","sig":null,"attributes":[{"value":"/ Transforms a stream into a collection, returning a","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\stream\\mod.rs","byte_start":167175,"byte_end":167229,"line_start":491,"line_end":491,"column_start":5,"column_end":59}},{"value":"/ future representing the result of that computation.","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\stream\\mod.rs","byte_start":167234,"byte_end":167289,"line_start":492,"line_end":492,"column_start":5,"column_end":60}},{"value":"/","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\stream\\mod.rs","byte_start":167294,"byte_end":167297,"line_start":493,"line_end":493,"column_start":5,"column_end":8}},{"value":"/ The returned future will be resolved when the stream terminates.","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\stream\\mod.rs","byte_start":167302,"byte_end":167370,"line_start":494,"line_end":494,"column_start":5,"column_end":73}},{"value":"/","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\stream\\mod.rs","byte_start":167375,"byte_end":167378,"line_start":495,"line_end":495,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\stream\\mod.rs","byte_start":167383,"byte_end":167397,"line_start":496,"line_end":496,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\stream\\mod.rs","byte_start":167402,"byte_end":167405,"line_start":497,"line_end":497,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\stream\\mod.rs","byte_start":167410,"byte_end":167417,"line_start":498,"line_end":498,"column_start":5,"column_end":12}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\stream\\mod.rs","byte_start":167422,"byte_end":167463,"line_start":499,"line_end":499,"column_start":5,"column_end":46}},{"value":"/ use futures::channel::mpsc;","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\stream\\mod.rs","byte_start":167468,"byte_end":167499,"line_start":500,"line_end":500,"column_start":5,"column_end":36}},{"value":"/ use futures::stream::StreamExt;","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\stream\\mod.rs","byte_start":167504,"byte_end":167539,"line_start":501,"line_end":501,"column_start":5,"column_end":40}},{"value":"/ use std::thread;","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\stream\\mod.rs","byte_start":167544,"byte_end":167564,"line_start":502,"line_end":502,"column_start":5,"column_end":25}},{"value":"/","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\stream\\mod.rs","byte_start":167569,"byte_end":167572,"line_start":503,"line_end":503,"column_start":5,"column_end":8}},{"value":"/ let (tx, rx) = mpsc::unbounded();","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\stream\\mod.rs","byte_start":167577,"byte_end":167614,"line_start":504,"line_end":504,"column_start":5,"column_end":42}},{"value":"/","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\stream\\mod.rs","byte_start":167619,"byte_end":167622,"line_start":505,"line_end":505,"column_start":5,"column_end":8}},{"value":"/ thread::spawn(move || {","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\stream\\mod.rs","byte_start":167627,"byte_end":167654,"line_start":506,"line_end":506,"column_start":5,"column_end":32}},{"value":"/     for i in 1..=5 {","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\stream\\mod.rs","byte_start":167659,"byte_end":167683,"line_start":507,"line_end":507,"column_start":5,"column_end":29}},{"value":"/         tx.unbounded_send(i).unwrap();","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\stream\\mod.rs","byte_start":167688,"byte_end":167730,"line_start":508,"line_end":508,"column_start":5,"column_end":47}},{"value":"/     }","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\stream\\mod.rs","byte_start":167735,"byte_end":167744,"line_start":509,"line_end":509,"column_start":5,"column_end":14}},{"value":"/ });","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\stream\\mod.rs","byte_start":167749,"byte_end":167756,"line_start":510,"line_end":510,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\stream\\mod.rs","byte_start":167761,"byte_end":167764,"line_start":511,"line_end":511,"column_start":5,"column_end":8}},{"value":"/ let output = rx.collect::<Vec<i32>>().await;","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\stream\\mod.rs","byte_start":167769,"byte_end":167817,"line_start":512,"line_end":512,"column_start":5,"column_end":53}},{"value":"/ assert_eq!(output, vec![1, 2, 3, 4, 5]);","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\stream\\mod.rs","byte_start":167822,"byte_end":167866,"line_start":513,"line_end":513,"column_start":5,"column_end":49}},{"value":"/ # });","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\stream\\mod.rs","byte_start":167871,"byte_end":167880,"line_start":514,"line_end":514,"column_start":5,"column_end":14}},{"value":"/ ```","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\stream\\mod.rs","byte_start":167885,"byte_end":167892,"line_start":515,"line_end":515,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":4219},"span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\stream\\mod.rs","byte_start":169026,"byte_end":169031,"line_start":553,"line_end":553,"column_start":8,"column_end":13},"name":"unzip","qualname":"::stream::stream::StreamExt::unzip","value":"pub fn unzip<A, B, FromA, FromB>(Self) -> Unzip<Self, FromA, FromB> where\nFromA: Default + Extend<A>, FromB: Default + Extend<B>, Self: Sized +\nStream<Item = (A, B)>","parent":{"krate":0,"index":4200},"children":[],"decl_id":null,"docs":" Converts a stream of pairs into a future, which\n resolves to pair of containers.","sig":null,"attributes":[{"value":"/ Converts a stream of pairs into a future, which","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\stream\\mod.rs","byte_start":168065,"byte_end":168116,"line_start":523,"line_end":523,"column_start":5,"column_end":56}},{"value":"/ resolves to pair of containers.","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\stream\\mod.rs","byte_start":168121,"byte_end":168156,"line_start":524,"line_end":524,"column_start":5,"column_end":40}},{"value":"/","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\stream\\mod.rs","byte_start":168161,"byte_end":168164,"line_start":525,"line_end":525,"column_start":5,"column_end":8}},{"value":"/ `unzip()` produces a future, which resolves to two","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\stream\\mod.rs","byte_start":168169,"byte_end":168223,"line_start":526,"line_end":526,"column_start":5,"column_end":59}},{"value":"/ collections: one from the left elements of the pairs,","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\stream\\mod.rs","byte_start":168228,"byte_end":168285,"line_start":527,"line_end":527,"column_start":5,"column_end":62}},{"value":"/ and one from the right elements.","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\stream\\mod.rs","byte_start":168290,"byte_end":168326,"line_start":528,"line_end":528,"column_start":5,"column_end":41}},{"value":"/","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\stream\\mod.rs","byte_start":168331,"byte_end":168334,"line_start":529,"line_end":529,"column_start":5,"column_end":8}},{"value":"/ The returned future will be resolved when the stream terminates.","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\stream\\mod.rs","byte_start":168339,"byte_end":168407,"line_start":530,"line_end":530,"column_start":5,"column_end":73}},{"value":"/","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\stream\\mod.rs","byte_start":168412,"byte_end":168415,"line_start":531,"line_end":531,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\stream\\mod.rs","byte_start":168420,"byte_end":168434,"line_start":532,"line_end":532,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\stream\\mod.rs","byte_start":168439,"byte_end":168442,"line_start":533,"line_end":533,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\stream\\mod.rs","byte_start":168447,"byte_end":168454,"line_start":534,"line_end":534,"column_start":5,"column_end":12}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\stream\\mod.rs","byte_start":168459,"byte_end":168500,"line_start":535,"line_end":535,"column_start":5,"column_end":46}},{"value":"/ use futures::channel::mpsc;","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\stream\\mod.rs","byte_start":168505,"byte_end":168536,"line_start":536,"line_end":536,"column_start":5,"column_end":36}},{"value":"/ use futures::stream::StreamExt;","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\stream\\mod.rs","byte_start":168541,"byte_end":168576,"line_start":537,"line_end":537,"column_start":5,"column_end":40}},{"value":"/ use std::thread;","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\stream\\mod.rs","byte_start":168581,"byte_end":168601,"line_start":538,"line_end":538,"column_start":5,"column_end":25}},{"value":"/","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\stream\\mod.rs","byte_start":168606,"byte_end":168609,"line_start":539,"line_end":539,"column_start":5,"column_end":8}},{"value":"/ let (tx, rx) = mpsc::unbounded();","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\stream\\mod.rs","byte_start":168614,"byte_end":168651,"line_start":540,"line_end":540,"column_start":5,"column_end":42}},{"value":"/","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\stream\\mod.rs","byte_start":168656,"byte_end":168659,"line_start":541,"line_end":541,"column_start":5,"column_end":8}},{"value":"/ thread::spawn(move || {","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\stream\\mod.rs","byte_start":168664,"byte_end":168691,"line_start":542,"line_end":542,"column_start":5,"column_end":32}},{"value":"/     tx.unbounded_send((1, 2)).unwrap();","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\stream\\mod.rs","byte_start":168696,"byte_end":168739,"line_start":543,"line_end":543,"column_start":5,"column_end":48}},{"value":"/     tx.unbounded_send((3, 4)).unwrap();","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\stream\\mod.rs","byte_start":168744,"byte_end":168787,"line_start":544,"line_end":544,"column_start":5,"column_end":48}},{"value":"/     tx.unbounded_send((5, 6)).unwrap();","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\stream\\mod.rs","byte_start":168792,"byte_end":168835,"line_start":545,"line_end":545,"column_start":5,"column_end":48}},{"value":"/ });","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\stream\\mod.rs","byte_start":168840,"byte_end":168847,"line_start":546,"line_end":546,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\stream\\mod.rs","byte_start":168852,"byte_end":168855,"line_start":547,"line_end":547,"column_start":5,"column_end":8}},{"value":"/ let (o1, o2): (Vec<_>, Vec<_>) = rx.unzip().await;","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\stream\\mod.rs","byte_start":168860,"byte_end":168914,"line_start":548,"line_end":548,"column_start":5,"column_end":59}},{"value":"/ assert_eq!(o1, vec![1, 3, 5]);","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\stream\\mod.rs","byte_start":168919,"byte_end":168953,"line_start":549,"line_end":549,"column_start":5,"column_end":39}},{"value":"/ assert_eq!(o2, vec![2, 4, 6]);","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\stream\\mod.rs","byte_start":168958,"byte_end":168992,"line_start":550,"line_end":550,"column_start":5,"column_end":39}},{"value":"/ # });","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\stream\\mod.rs","byte_start":168997,"byte_end":169006,"line_start":551,"line_end":551,"column_start":5,"column_end":14}},{"value":"/ ```","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\stream\\mod.rs","byte_start":169011,"byte_end":169018,"line_start":552,"line_end":552,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":4224},"span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\stream\\mod.rs","byte_start":170327,"byte_end":170333,"line_start":594,"line_end":594,"column_start":8,"column_end":14},"name":"concat","qualname":"::stream::stream::StreamExt::concat","value":"pub fn concat(Self) -> Concat<Self> where Self: Sized,\nSelf::Item: Extend<<<Self as Stream>::Item as IntoIterator>::Item> +\nIntoIterator + Default","parent":{"krate":0,"index":4200},"children":[],"decl_id":null,"docs":" Concatenate all items of a stream into a single extendable\n destination, returning a future representing the end result.","sig":null,"attributes":[{"value":"/ Concatenate all items of a stream into a single extendable","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\stream\\mod.rs","byte_start":169292,"byte_end":169354,"line_start":562,"line_end":562,"column_start":5,"column_end":67}},{"value":"/ destination, returning a future representing the end result.","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\stream\\mod.rs","byte_start":169359,"byte_end":169423,"line_start":563,"line_end":563,"column_start":5,"column_end":69}},{"value":"/","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\stream\\mod.rs","byte_start":169428,"byte_end":169431,"line_start":564,"line_end":564,"column_start":5,"column_end":8}},{"value":"/ This combinator will extend the first item with the contents","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\stream\\mod.rs","byte_start":169436,"byte_end":169500,"line_start":565,"line_end":565,"column_start":5,"column_end":69}},{"value":"/ of all the subsequent results of the stream. If the stream is","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\stream\\mod.rs","byte_start":169505,"byte_end":169570,"line_start":566,"line_end":566,"column_start":5,"column_end":70}},{"value":"/ empty, the default value will be returned.","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\stream\\mod.rs","byte_start":169575,"byte_end":169621,"line_start":567,"line_end":567,"column_start":5,"column_end":51}},{"value":"/","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\stream\\mod.rs","byte_start":169626,"byte_end":169629,"line_start":568,"line_end":568,"column_start":5,"column_end":8}},{"value":"/ Works with all collections that implement the","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\stream\\mod.rs","byte_start":169634,"byte_end":169683,"line_start":569,"line_end":569,"column_start":5,"column_end":54}},{"value":"/ [`Extend`](std::iter::Extend) trait.","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\stream\\mod.rs","byte_start":169688,"byte_end":169728,"line_start":570,"line_end":570,"column_start":5,"column_end":45}},{"value":"/","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\stream\\mod.rs","byte_start":169733,"byte_end":169736,"line_start":571,"line_end":571,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\stream\\mod.rs","byte_start":169741,"byte_end":169755,"line_start":572,"line_end":572,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\stream\\mod.rs","byte_start":169760,"byte_end":169763,"line_start":573,"line_end":573,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\stream\\mod.rs","byte_start":169768,"byte_end":169775,"line_start":574,"line_end":574,"column_start":5,"column_end":12}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\stream\\mod.rs","byte_start":169780,"byte_end":169821,"line_start":575,"line_end":575,"column_start":5,"column_end":46}},{"value":"/ use futures::channel::mpsc;","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\stream\\mod.rs","byte_start":169826,"byte_end":169857,"line_start":576,"line_end":576,"column_start":5,"column_end":36}},{"value":"/ use futures::stream::StreamExt;","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\stream\\mod.rs","byte_start":169862,"byte_end":169897,"line_start":577,"line_end":577,"column_start":5,"column_end":40}},{"value":"/ use std::thread;","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\stream\\mod.rs","byte_start":169902,"byte_end":169922,"line_start":578,"line_end":578,"column_start":5,"column_end":25}},{"value":"/","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\stream\\mod.rs","byte_start":169927,"byte_end":169930,"line_start":579,"line_end":579,"column_start":5,"column_end":8}},{"value":"/ let (tx, rx) = mpsc::unbounded();","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\stream\\mod.rs","byte_start":169935,"byte_end":169972,"line_start":580,"line_end":580,"column_start":5,"column_end":42}},{"value":"/","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\stream\\mod.rs","byte_start":169977,"byte_end":169980,"line_start":581,"line_end":581,"column_start":5,"column_end":8}},{"value":"/ thread::spawn(move || {","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\stream\\mod.rs","byte_start":169985,"byte_end":170012,"line_start":582,"line_end":582,"column_start":5,"column_end":32}},{"value":"/     for i in (0..3).rev() {","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\stream\\mod.rs","byte_start":170017,"byte_end":170048,"line_start":583,"line_end":583,"column_start":5,"column_end":36}},{"value":"/         let n = i * 3;","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\stream\\mod.rs","byte_start":170053,"byte_end":170079,"line_start":584,"line_end":584,"column_start":5,"column_end":31}},{"value":"/         tx.unbounded_send(vec![n + 1, n + 2, n + 3]).unwrap();","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\stream\\mod.rs","byte_start":170084,"byte_end":170150,"line_start":585,"line_end":585,"column_start":5,"column_end":71}},{"value":"/     }","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\stream\\mod.rs","byte_start":170155,"byte_end":170164,"line_start":586,"line_end":586,"column_start":5,"column_end":14}},{"value":"/ });","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\stream\\mod.rs","byte_start":170169,"byte_end":170176,"line_start":587,"line_end":587,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\stream\\mod.rs","byte_start":170181,"byte_end":170184,"line_start":588,"line_end":588,"column_start":5,"column_end":8}},{"value":"/ let result = rx.concat().await;","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\stream\\mod.rs","byte_start":170189,"byte_end":170224,"line_start":589,"line_end":589,"column_start":5,"column_end":40}},{"value":"/","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\stream\\mod.rs","byte_start":170229,"byte_end":170232,"line_start":590,"line_end":590,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(result, vec![7, 8, 9, 4, 5, 6, 1, 2, 3]);","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\stream\\mod.rs","byte_start":170237,"byte_end":170293,"line_start":591,"line_end":591,"column_start":5,"column_end":61}},{"value":"/ # });","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\stream\\mod.rs","byte_start":170298,"byte_end":170307,"line_start":592,"line_end":592,"column_start":5,"column_end":14}},{"value":"/ ```","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\stream\\mod.rs","byte_start":170312,"byte_end":170319,"line_start":593,"line_end":593,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":4225},"span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\stream\\mod.rs","byte_start":171353,"byte_end":171358,"line_start":627,"line_end":627,"column_start":8,"column_end":13},"name":"count","qualname":"::stream::stream::StreamExt::count","value":"pub fn count(Self) -> Count<Self> where Self: Sized","parent":{"krate":0,"index":4200},"children":[],"decl_id":null,"docs":" Drives the stream to completion, counting the number of items.","sig":null,"attributes":[{"value":"/ Drives the stream to completion, counting the number of items.","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\stream\\mod.rs","byte_start":170563,"byte_end":170629,"line_start":602,"line_end":602,"column_start":5,"column_end":71}},{"value":"/","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\stream\\mod.rs","byte_start":170634,"byte_end":170637,"line_start":603,"line_end":603,"column_start":5,"column_end":8}},{"value":"/ # Overflow Behavior","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\stream\\mod.rs","byte_start":170642,"byte_end":170665,"line_start":604,"line_end":604,"column_start":5,"column_end":28}},{"value":"/","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\stream\\mod.rs","byte_start":170670,"byte_end":170673,"line_start":605,"line_end":605,"column_start":5,"column_end":8}},{"value":"/ The method does no guarding against overflows, so counting elements of a","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\stream\\mod.rs","byte_start":170678,"byte_end":170754,"line_start":606,"line_end":606,"column_start":5,"column_end":81}},{"value":"/ stream with more than [`usize::MAX`] elements either produces the wrong","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\stream\\mod.rs","byte_start":170759,"byte_end":170834,"line_start":607,"line_end":607,"column_start":5,"column_end":80}},{"value":"/ result or panics. If debug assertions are enabled, a panic is guaranteed.","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\stream\\mod.rs","byte_start":170839,"byte_end":170916,"line_start":608,"line_end":608,"column_start":5,"column_end":82}},{"value":"/","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\stream\\mod.rs","byte_start":170921,"byte_end":170924,"line_start":609,"line_end":609,"column_start":5,"column_end":8}},{"value":"/ # Panics","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\stream\\mod.rs","byte_start":170929,"byte_end":170941,"line_start":610,"line_end":610,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\stream\\mod.rs","byte_start":170946,"byte_end":170949,"line_start":611,"line_end":611,"column_start":5,"column_end":8}},{"value":"/ This function might panic if the iterator has more than [`usize::MAX`]","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\stream\\mod.rs","byte_start":170954,"byte_end":171028,"line_start":612,"line_end":612,"column_start":5,"column_end":79}},{"value":"/ elements.","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\stream\\mod.rs","byte_start":171033,"byte_end":171046,"line_start":613,"line_end":613,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\stream\\mod.rs","byte_start":171051,"byte_end":171054,"line_start":614,"line_end":614,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\stream\\mod.rs","byte_start":171059,"byte_end":171073,"line_start":615,"line_end":615,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\stream\\mod.rs","byte_start":171078,"byte_end":171081,"line_start":616,"line_end":616,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\stream\\mod.rs","byte_start":171086,"byte_end":171093,"line_start":617,"line_end":617,"column_start":5,"column_end":12}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\stream\\mod.rs","byte_start":171098,"byte_end":171139,"line_start":618,"line_end":618,"column_start":5,"column_end":46}},{"value":"/ use futures::stream::{self, StreamExt};","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\stream\\mod.rs","byte_start":171144,"byte_end":171187,"line_start":619,"line_end":619,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\stream\\mod.rs","byte_start":171192,"byte_end":171195,"line_start":620,"line_end":620,"column_start":5,"column_end":8}},{"value":"/ let stream = stream::iter(1..=10);","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\stream\\mod.rs","byte_start":171200,"byte_end":171238,"line_start":621,"line_end":621,"column_start":5,"column_end":43}},{"value":"/ let count = stream.count().await;","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\stream\\mod.rs","byte_start":171243,"byte_end":171280,"line_start":622,"line_end":622,"column_start":5,"column_end":42}},{"value":"/","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\stream\\mod.rs","byte_start":171285,"byte_end":171288,"line_start":623,"line_end":623,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(count, 10);","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\stream\\mod.rs","byte_start":171293,"byte_end":171319,"line_start":624,"line_end":624,"column_start":5,"column_end":31}},{"value":"/ # });","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\stream\\mod.rs","byte_start":171324,"byte_end":171333,"line_start":625,"line_end":625,"column_start":5,"column_end":14}},{"value":"/ ```","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\stream\\mod.rs","byte_start":171338,"byte_end":171345,"line_start":626,"line_end":626,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":4226},"span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\stream\\mod.rs","byte_start":172314,"byte_end":172319,"line_start":657,"line_end":657,"column_start":8,"column_end":13},"name":"cycle","qualname":"::stream::stream::StreamExt::cycle","value":"pub fn cycle(Self) -> Cycle<Self> where Self: Sized + Clone","parent":{"krate":0,"index":4200},"children":[],"decl_id":null,"docs":" Repeats a stream endlessly.","sig":null,"attributes":[{"value":"/ Repeats a stream endlessly.","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\stream\\mod.rs","byte_start":171480,"byte_end":171511,"line_start":634,"line_end":634,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\stream\\mod.rs","byte_start":171516,"byte_end":171519,"line_start":635,"line_end":635,"column_start":5,"column_end":8}},{"value":"/ The stream never terminates. Note that you likely want to avoid","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\stream\\mod.rs","byte_start":171524,"byte_end":171591,"line_start":636,"line_end":636,"column_start":5,"column_end":72}},{"value":"/ usage of `collect` or such on the returned stream as it will exhaust","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\stream\\mod.rs","byte_start":171596,"byte_end":171668,"line_start":637,"line_end":637,"column_start":5,"column_end":77}},{"value":"/ available memory as it tries to just fill up all RAM.","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\stream\\mod.rs","byte_start":171673,"byte_end":171730,"line_start":638,"line_end":638,"column_start":5,"column_end":62}},{"value":"/","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\stream\\mod.rs","byte_start":171735,"byte_end":171738,"line_start":639,"line_end":639,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\stream\\mod.rs","byte_start":171743,"byte_end":171757,"line_start":640,"line_end":640,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\stream\\mod.rs","byte_start":171762,"byte_end":171765,"line_start":641,"line_end":641,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\stream\\mod.rs","byte_start":171770,"byte_end":171777,"line_start":642,"line_end":642,"column_start":5,"column_end":12}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\stream\\mod.rs","byte_start":171782,"byte_end":171823,"line_start":643,"line_end":643,"column_start":5,"column_end":46}},{"value":"/ use futures::stream::{self, StreamExt};","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\stream\\mod.rs","byte_start":171828,"byte_end":171871,"line_start":644,"line_end":644,"column_start":5,"column_end":48}},{"value":"/ let a = [1, 2, 3];","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\stream\\mod.rs","byte_start":171876,"byte_end":171898,"line_start":645,"line_end":645,"column_start":5,"column_end":27}},{"value":"/ let mut s = stream::iter(a.iter()).cycle();","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\stream\\mod.rs","byte_start":171903,"byte_end":171950,"line_start":646,"line_end":646,"column_start":5,"column_end":52}},{"value":"/","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\stream\\mod.rs","byte_start":171955,"byte_end":171958,"line_start":647,"line_end":647,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(s.next().await, Some(&1));","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\stream\\mod.rs","byte_start":171963,"byte_end":172004,"line_start":648,"line_end":648,"column_start":5,"column_end":46}},{"value":"/ assert_eq!(s.next().await, Some(&2));","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\stream\\mod.rs","byte_start":172009,"byte_end":172050,"line_start":649,"line_end":649,"column_start":5,"column_end":46}},{"value":"/ assert_eq!(s.next().await, Some(&3));","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\stream\\mod.rs","byte_start":172055,"byte_end":172096,"line_start":650,"line_end":650,"column_start":5,"column_end":46}},{"value":"/ assert_eq!(s.next().await, Some(&1));","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\stream\\mod.rs","byte_start":172101,"byte_end":172142,"line_start":651,"line_end":651,"column_start":5,"column_end":46}},{"value":"/ assert_eq!(s.next().await, Some(&2));","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\stream\\mod.rs","byte_start":172147,"byte_end":172188,"line_start":652,"line_end":652,"column_start":5,"column_end":46}},{"value":"/ assert_eq!(s.next().await, Some(&3));","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\stream\\mod.rs","byte_start":172193,"byte_end":172234,"line_start":653,"line_end":653,"column_start":5,"column_end":46}},{"value":"/ assert_eq!(s.next().await, Some(&1));","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\stream\\mod.rs","byte_start":172239,"byte_end":172280,"line_start":654,"line_end":654,"column_start":5,"column_end":46}},{"value":"/ # });","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\stream\\mod.rs","byte_start":172285,"byte_end":172294,"line_start":655,"line_end":655,"column_start":5,"column_end":14}},{"value":"/ ```","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\stream\\mod.rs","byte_start":172299,"byte_end":172306,"line_start":656,"line_end":656,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":4227},"span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\stream\\mod.rs","byte_start":173269,"byte_end":173273,"line_start":684,"line_end":684,"column_start":8,"column_end":12},"name":"fold","qualname":"::stream::stream::StreamExt::fold","value":"pub fn fold<T, Fut, F>(Self, T, F) -> Fold<Self, Fut, T, F> where\nF: FnMut(T, Self::Item) -> Fut, Fut: Future<Output = T>, Self: Sized","parent":{"krate":0,"index":4200},"children":[],"decl_id":null,"docs":" Execute an accumulating asynchronous computation over a stream,\n collecting all the values into one final result.","sig":null,"attributes":[{"value":"/ Execute an accumulating asynchronous computation over a stream,","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\stream\\mod.rs","byte_start":172454,"byte_end":172521,"line_start":664,"line_end":664,"column_start":5,"column_end":72}},{"value":"/ collecting all the values into one final result.","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\stream\\mod.rs","byte_start":172526,"byte_end":172578,"line_start":665,"line_end":665,"column_start":5,"column_end":57}},{"value":"/","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\stream\\mod.rs","byte_start":172583,"byte_end":172586,"line_start":666,"line_end":666,"column_start":5,"column_end":8}},{"value":"/ This combinator will accumulate all values returned by this stream","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\stream\\mod.rs","byte_start":172591,"byte_end":172661,"line_start":667,"line_end":667,"column_start":5,"column_end":75}},{"value":"/ according to the closure provided. The initial state is also provided to","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\stream\\mod.rs","byte_start":172666,"byte_end":172742,"line_start":668,"line_end":668,"column_start":5,"column_end":81}},{"value":"/ this method and then is returned again by each execution of the closure.","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\stream\\mod.rs","byte_start":172747,"byte_end":172823,"line_start":669,"line_end":669,"column_start":5,"column_end":81}},{"value":"/ Once the entire stream has been exhausted the returned future will","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\stream\\mod.rs","byte_start":172828,"byte_end":172898,"line_start":670,"line_end":670,"column_start":5,"column_end":75}},{"value":"/ resolve to this value.","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\stream\\mod.rs","byte_start":172903,"byte_end":172929,"line_start":671,"line_end":671,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\stream\\mod.rs","byte_start":172934,"byte_end":172937,"line_start":672,"line_end":672,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\stream\\mod.rs","byte_start":172942,"byte_end":172956,"line_start":673,"line_end":673,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\stream\\mod.rs","byte_start":172961,"byte_end":172964,"line_start":674,"line_end":674,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\stream\\mod.rs","byte_start":172969,"byte_end":172976,"line_start":675,"line_end":675,"column_start":5,"column_end":12}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\stream\\mod.rs","byte_start":172981,"byte_end":173022,"line_start":676,"line_end":676,"column_start":5,"column_end":46}},{"value":"/ use futures::stream::{self, StreamExt};","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\stream\\mod.rs","byte_start":173027,"byte_end":173070,"line_start":677,"line_end":677,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\stream\\mod.rs","byte_start":173075,"byte_end":173078,"line_start":678,"line_end":678,"column_start":5,"column_end":8}},{"value":"/ let number_stream = stream::iter(0..6);","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\stream\\mod.rs","byte_start":173083,"byte_end":173126,"line_start":679,"line_end":679,"column_start":5,"column_end":48}},{"value":"/ let sum = number_stream.fold(0, |acc, x| async move { acc + x });","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\stream\\mod.rs","byte_start":173131,"byte_end":173200,"line_start":680,"line_end":680,"column_start":5,"column_end":74}},{"value":"/ assert_eq!(sum.await, 15);","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\stream\\mod.rs","byte_start":173205,"byte_end":173235,"line_start":681,"line_end":681,"column_start":5,"column_end":35}},{"value":"/ # });","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\stream\\mod.rs","byte_start":173240,"byte_end":173249,"line_start":682,"line_end":682,"column_start":5,"column_end":14}},{"value":"/ ```","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\stream\\mod.rs","byte_start":173254,"byte_end":173261,"line_start":683,"line_end":683,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":4231},"span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\stream\\mod.rs","byte_start":173974,"byte_end":173977,"line_start":706,"line_end":706,"column_start":8,"column_end":11},"name":"any","qualname":"::stream::stream::StreamExt::any","value":"pub fn any<Fut, F>(Self, F) -> Any<Self, Fut, F> where F: FnMut(Self::Item) ->\nFut, Fut: Future<Output = bool>, Self: Sized","parent":{"krate":0,"index":4200},"children":[],"decl_id":null,"docs":" Execute predicate over asynchronous stream, and return `true` if any element in stream satisfied a predicate.","sig":null,"attributes":[{"value":"/ Execute predicate over asynchronous stream, and return `true` if any element in stream satisfied a predicate.","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\stream\\mod.rs","byte_start":173508,"byte_end":173621,"line_start":693,"line_end":693,"column_start":5,"column_end":118}},{"value":"/","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\stream\\mod.rs","byte_start":173626,"byte_end":173629,"line_start":694,"line_end":694,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\stream\\mod.rs","byte_start":173634,"byte_end":173648,"line_start":695,"line_end":695,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\stream\\mod.rs","byte_start":173653,"byte_end":173656,"line_start":696,"line_end":696,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\stream\\mod.rs","byte_start":173661,"byte_end":173668,"line_start":697,"line_end":697,"column_start":5,"column_end":12}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\stream\\mod.rs","byte_start":173673,"byte_end":173714,"line_start":698,"line_end":698,"column_start":5,"column_end":46}},{"value":"/ use futures::stream::{self, StreamExt};","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\stream\\mod.rs","byte_start":173719,"byte_end":173762,"line_start":699,"line_end":699,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\stream\\mod.rs","byte_start":173767,"byte_end":173770,"line_start":700,"line_end":700,"column_start":5,"column_end":8}},{"value":"/ let number_stream = stream::iter(0..10);","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\stream\\mod.rs","byte_start":173775,"byte_end":173819,"line_start":701,"line_end":701,"column_start":5,"column_end":49}},{"value":"/ let contain_three = number_stream.any(|i| async move { i == 3 });","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\stream\\mod.rs","byte_start":173824,"byte_end":173893,"line_start":702,"line_end":702,"column_start":5,"column_end":74}},{"value":"/ assert_eq!(contain_three.await, true);","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\stream\\mod.rs","byte_start":173898,"byte_end":173940,"line_start":703,"line_end":703,"column_start":5,"column_end":47}},{"value":"/ # });","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\stream\\mod.rs","byte_start":173945,"byte_end":173954,"line_start":704,"line_end":704,"column_start":5,"column_end":14}},{"value":"/ ```","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\stream\\mod.rs","byte_start":173959,"byte_end":173966,"line_start":705,"line_end":705,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":4234},"span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\stream\\mod.rs","byte_start":174664,"byte_end":174667,"line_start":728,"line_end":728,"column_start":8,"column_end":11},"name":"all","qualname":"::stream::stream::StreamExt::all","value":"pub fn all<Fut, F>(Self, F) -> All<Self, Fut, F> where F: FnMut(Self::Item) ->\nFut, Fut: Future<Output = bool>, Self: Sized","parent":{"krate":0,"index":4200},"children":[],"decl_id":null,"docs":" Execute predicate over asynchronous stream, and return `true` if all element in stream satisfied a predicate.","sig":null,"attributes":[{"value":"/ Execute predicate over asynchronous stream, and return `true` if all element in stream satisfied a predicate.","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\stream\\mod.rs","byte_start":174192,"byte_end":174305,"line_start":715,"line_end":715,"column_start":5,"column_end":118}},{"value":"/","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\stream\\mod.rs","byte_start":174310,"byte_end":174313,"line_start":716,"line_end":716,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\stream\\mod.rs","byte_start":174318,"byte_end":174332,"line_start":717,"line_end":717,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\stream\\mod.rs","byte_start":174337,"byte_end":174340,"line_start":718,"line_end":718,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\stream\\mod.rs","byte_start":174345,"byte_end":174352,"line_start":719,"line_end":719,"column_start":5,"column_end":12}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\stream\\mod.rs","byte_start":174357,"byte_end":174398,"line_start":720,"line_end":720,"column_start":5,"column_end":46}},{"value":"/ use futures::stream::{self, StreamExt};","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\stream\\mod.rs","byte_start":174403,"byte_end":174446,"line_start":721,"line_end":721,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\stream\\mod.rs","byte_start":174451,"byte_end":174454,"line_start":722,"line_end":722,"column_start":5,"column_end":8}},{"value":"/ let number_stream = stream::iter(0..10);","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\stream\\mod.rs","byte_start":174459,"byte_end":174503,"line_start":723,"line_end":723,"column_start":5,"column_end":49}},{"value":"/ let less_then_twenty = number_stream.all(|i| async move { i < 20 });","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\stream\\mod.rs","byte_start":174508,"byte_end":174580,"line_start":724,"line_end":724,"column_start":5,"column_end":77}},{"value":"/ assert_eq!(less_then_twenty.await, true);","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\stream\\mod.rs","byte_start":174585,"byte_end":174630,"line_start":725,"line_end":725,"column_start":5,"column_end":50}},{"value":"/ # });","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\stream\\mod.rs","byte_start":174635,"byte_end":174644,"line_start":726,"line_end":726,"column_start":5,"column_end":14}},{"value":"/ ```","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\stream\\mod.rs","byte_start":174649,"byte_end":174656,"line_start":727,"line_end":727,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":4237},"span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\stream\\mod.rs","byte_start":175841,"byte_end":175848,"line_start":768,"line_end":768,"column_start":8,"column_end":15},"name":"flatten","qualname":"::stream::stream::StreamExt::flatten","value":"pub fn flatten(Self) -> Flatten<Self> where Self::Item: Stream, Self: Sized","parent":{"krate":0,"index":4200},"children":[],"decl_id":null,"docs":" Flattens a stream of streams into just one continuous stream.","sig":null,"attributes":[{"value":"/ Flattens a stream of streams into just one continuous stream.","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\stream\\mod.rs","byte_start":174882,"byte_end":174947,"line_start":737,"line_end":737,"column_start":5,"column_end":70}},{"value":"/","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\stream\\mod.rs","byte_start":174952,"byte_end":174955,"line_start":738,"line_end":738,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\stream\\mod.rs","byte_start":174960,"byte_end":174974,"line_start":739,"line_end":739,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\stream\\mod.rs","byte_start":174979,"byte_end":174982,"line_start":740,"line_end":740,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\stream\\mod.rs","byte_start":174987,"byte_end":174994,"line_start":741,"line_end":741,"column_start":5,"column_end":12}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\stream\\mod.rs","byte_start":174999,"byte_end":175040,"line_start":742,"line_end":742,"column_start":5,"column_end":46}},{"value":"/ use futures::channel::mpsc;","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\stream\\mod.rs","byte_start":175045,"byte_end":175076,"line_start":743,"line_end":743,"column_start":5,"column_end":36}},{"value":"/ use futures::stream::StreamExt;","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\stream\\mod.rs","byte_start":175081,"byte_end":175116,"line_start":744,"line_end":744,"column_start":5,"column_end":40}},{"value":"/ use std::thread;","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\stream\\mod.rs","byte_start":175121,"byte_end":175141,"line_start":745,"line_end":745,"column_start":5,"column_end":25}},{"value":"/","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\stream\\mod.rs","byte_start":175146,"byte_end":175149,"line_start":746,"line_end":746,"column_start":5,"column_end":8}},{"value":"/ let (tx1, rx1) = mpsc::unbounded();","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\stream\\mod.rs","byte_start":175154,"byte_end":175193,"line_start":747,"line_end":747,"column_start":5,"column_end":44}},{"value":"/ let (tx2, rx2) = mpsc::unbounded();","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\stream\\mod.rs","byte_start":175198,"byte_end":175237,"line_start":748,"line_end":748,"column_start":5,"column_end":44}},{"value":"/ let (tx3, rx3) = mpsc::unbounded();","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\stream\\mod.rs","byte_start":175242,"byte_end":175281,"line_start":749,"line_end":749,"column_start":5,"column_end":44}},{"value":"/","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\stream\\mod.rs","byte_start":175286,"byte_end":175289,"line_start":750,"line_end":750,"column_start":5,"column_end":8}},{"value":"/ thread::spawn(move || {","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\stream\\mod.rs","byte_start":175294,"byte_end":175321,"line_start":751,"line_end":751,"column_start":5,"column_end":32}},{"value":"/     tx1.unbounded_send(1).unwrap();","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\stream\\mod.rs","byte_start":175326,"byte_end":175365,"line_start":752,"line_end":752,"column_start":5,"column_end":44}},{"value":"/     tx1.unbounded_send(2).unwrap();","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\stream\\mod.rs","byte_start":175370,"byte_end":175409,"line_start":753,"line_end":753,"column_start":5,"column_end":44}},{"value":"/ });","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\stream\\mod.rs","byte_start":175414,"byte_end":175421,"line_start":754,"line_end":754,"column_start":5,"column_end":12}},{"value":"/ thread::spawn(move || {","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\stream\\mod.rs","byte_start":175426,"byte_end":175453,"line_start":755,"line_end":755,"column_start":5,"column_end":32}},{"value":"/     tx2.unbounded_send(3).unwrap();","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\stream\\mod.rs","byte_start":175458,"byte_end":175497,"line_start":756,"line_end":756,"column_start":5,"column_end":44}},{"value":"/     tx2.unbounded_send(4).unwrap();","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\stream\\mod.rs","byte_start":175502,"byte_end":175541,"line_start":757,"line_end":757,"column_start":5,"column_end":44}},{"value":"/ });","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\stream\\mod.rs","byte_start":175546,"byte_end":175553,"line_start":758,"line_end":758,"column_start":5,"column_end":12}},{"value":"/ thread::spawn(move || {","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\stream\\mod.rs","byte_start":175558,"byte_end":175585,"line_start":759,"line_end":759,"column_start":5,"column_end":32}},{"value":"/     tx3.unbounded_send(rx1).unwrap();","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\stream\\mod.rs","byte_start":175590,"byte_end":175631,"line_start":760,"line_end":760,"column_start":5,"column_end":46}},{"value":"/     tx3.unbounded_send(rx2).unwrap();","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\stream\\mod.rs","byte_start":175636,"byte_end":175677,"line_start":761,"line_end":761,"column_start":5,"column_end":46}},{"value":"/ });","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\stream\\mod.rs","byte_start":175682,"byte_end":175689,"line_start":762,"line_end":762,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\stream\\mod.rs","byte_start":175694,"byte_end":175697,"line_start":763,"line_end":763,"column_start":5,"column_end":8}},{"value":"/ let output = rx3.flatten().collect::<Vec<i32>>().await;","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\stream\\mod.rs","byte_start":175702,"byte_end":175761,"line_start":764,"line_end":764,"column_start":5,"column_end":64}},{"value":"/ assert_eq!(output, vec![1, 2, 3, 4]);","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\stream\\mod.rs","byte_start":175766,"byte_end":175807,"line_start":765,"line_end":765,"column_start":5,"column_end":46}},{"value":"/ # });","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\stream\\mod.rs","byte_start":175812,"byte_end":175821,"line_start":766,"line_end":766,"column_start":5,"column_end":14}},{"value":"/ ```","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\stream\\mod.rs","byte_start":175826,"byte_end":175833,"line_start":767,"line_end":767,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":4238},"span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\stream\\mod.rs","byte_start":177144,"byte_end":177161,"line_start":812,"line_end":812,"column_start":8,"column_end":25},"name":"flatten_unordered","qualname":"::stream::stream::StreamExt::flatten_unordered","value":"pub fn flatten_unordered<impl Into<Option<usize>>: Into<Option<usize>>>(Self,\nimpl Into<Option<usize>>) -> FlattenUnordered<Self> where Self::Item: Stream +\nUnpin, Self: Sized","parent":{"krate":0,"index":4200},"children":[],"decl_id":null,"docs":" Flattens a stream of streams into just one continuous stream. Polls\n inner streams concurrently.","sig":null,"attributes":[{"value":"/ Flattens a stream of streams into just one continuous stream. Polls","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\stream\\mod.rs","byte_start":176025,"byte_end":176096,"line_start":776,"line_end":776,"column_start":5,"column_end":76}},{"value":"/ inner streams concurrently.","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\stream\\mod.rs","byte_start":176101,"byte_end":176132,"line_start":777,"line_end":777,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\stream\\mod.rs","byte_start":176137,"byte_end":176140,"line_start":778,"line_end":778,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\stream\\mod.rs","byte_start":176145,"byte_end":176159,"line_start":779,"line_end":779,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\stream\\mod.rs","byte_start":176164,"byte_end":176167,"line_start":780,"line_end":780,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\stream\\mod.rs","byte_start":176172,"byte_end":176179,"line_start":781,"line_end":781,"column_start":5,"column_end":12}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\stream\\mod.rs","byte_start":176184,"byte_end":176225,"line_start":782,"line_end":782,"column_start":5,"column_end":46}},{"value":"/ use futures::channel::mpsc;","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\stream\\mod.rs","byte_start":176230,"byte_end":176261,"line_start":783,"line_end":783,"column_start":5,"column_end":36}},{"value":"/ use futures::stream::StreamExt;","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\stream\\mod.rs","byte_start":176266,"byte_end":176301,"line_start":784,"line_end":784,"column_start":5,"column_end":40}},{"value":"/ use std::thread;","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\stream\\mod.rs","byte_start":176306,"byte_end":176326,"line_start":785,"line_end":785,"column_start":5,"column_end":25}},{"value":"/","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\stream\\mod.rs","byte_start":176331,"byte_end":176334,"line_start":786,"line_end":786,"column_start":5,"column_end":8}},{"value":"/ let (tx1, rx1) = mpsc::unbounded();","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\stream\\mod.rs","byte_start":176339,"byte_end":176378,"line_start":787,"line_end":787,"column_start":5,"column_end":44}},{"value":"/ let (tx2, rx2) = mpsc::unbounded();","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\stream\\mod.rs","byte_start":176383,"byte_end":176422,"line_start":788,"line_end":788,"column_start":5,"column_end":44}},{"value":"/ let (tx3, rx3) = mpsc::unbounded();","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\stream\\mod.rs","byte_start":176427,"byte_end":176466,"line_start":789,"line_end":789,"column_start":5,"column_end":44}},{"value":"/","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\stream\\mod.rs","byte_start":176471,"byte_end":176474,"line_start":790,"line_end":790,"column_start":5,"column_end":8}},{"value":"/ thread::spawn(move || {","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\stream\\mod.rs","byte_start":176479,"byte_end":176506,"line_start":791,"line_end":791,"column_start":5,"column_end":32}},{"value":"/     tx1.unbounded_send(1).unwrap();","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\stream\\mod.rs","byte_start":176511,"byte_end":176550,"line_start":792,"line_end":792,"column_start":5,"column_end":44}},{"value":"/     tx1.unbounded_send(2).unwrap();","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\stream\\mod.rs","byte_start":176555,"byte_end":176594,"line_start":793,"line_end":793,"column_start":5,"column_end":44}},{"value":"/ });","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\stream\\mod.rs","byte_start":176599,"byte_end":176606,"line_start":794,"line_end":794,"column_start":5,"column_end":12}},{"value":"/ thread::spawn(move || {","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\stream\\mod.rs","byte_start":176611,"byte_end":176638,"line_start":795,"line_end":795,"column_start":5,"column_end":32}},{"value":"/     tx2.unbounded_send(3).unwrap();","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\stream\\mod.rs","byte_start":176643,"byte_end":176682,"line_start":796,"line_end":796,"column_start":5,"column_end":44}},{"value":"/     tx2.unbounded_send(4).unwrap();","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\stream\\mod.rs","byte_start":176687,"byte_end":176726,"line_start":797,"line_end":797,"column_start":5,"column_end":44}},{"value":"/ });","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\stream\\mod.rs","byte_start":176731,"byte_end":176738,"line_start":798,"line_end":798,"column_start":5,"column_end":12}},{"value":"/ thread::spawn(move || {","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\stream\\mod.rs","byte_start":176743,"byte_end":176770,"line_start":799,"line_end":799,"column_start":5,"column_end":32}},{"value":"/     tx3.unbounded_send(rx1).unwrap();","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\stream\\mod.rs","byte_start":176775,"byte_end":176816,"line_start":800,"line_end":800,"column_start":5,"column_end":46}},{"value":"/     tx3.unbounded_send(rx2).unwrap();","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\stream\\mod.rs","byte_start":176821,"byte_end":176862,"line_start":801,"line_end":801,"column_start":5,"column_end":46}},{"value":"/ });","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\stream\\mod.rs","byte_start":176867,"byte_end":176874,"line_start":802,"line_end":802,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\stream\\mod.rs","byte_start":176879,"byte_end":176882,"line_start":803,"line_end":803,"column_start":5,"column_end":8}},{"value":"/ let mut output = rx3.flatten_unordered(None).collect::<Vec<i32>>().await;","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\stream\\mod.rs","byte_start":176887,"byte_end":176964,"line_start":804,"line_end":804,"column_start":5,"column_end":82}},{"value":"/ output.sort();","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\stream\\mod.rs","byte_start":176969,"byte_end":176987,"line_start":805,"line_end":805,"column_start":5,"column_end":23}},{"value":"/","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\stream\\mod.rs","byte_start":176992,"byte_end":176995,"line_start":806,"line_end":806,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(output, vec![1, 2, 3, 4]);","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\stream\\mod.rs","byte_start":177000,"byte_end":177041,"line_start":807,"line_end":807,"column_start":5,"column_end":46}},{"value":"/ # });","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\stream\\mod.rs","byte_start":177046,"byte_end":177055,"line_start":808,"line_end":808,"column_start":5,"column_end":14}},{"value":"/ ```","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\stream\\mod.rs","byte_start":177060,"byte_end":177067,"line_start":809,"line_end":809,"column_start":5,"column_end":12}},{"value":"cfg(not(futures_no_atomic_cas))","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\stream\\mod.rs","byte_start":177072,"byte_end":177106,"line_start":810,"line_end":810,"column_start":5,"column_end":39}},{"value":"cfg(feature = \"alloc\")","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\stream\\mod.rs","byte_start":177111,"byte_end":177136,"line_start":811,"line_end":811,"column_start":5,"column_end":30}}]},{"kind":"Method","id":{"krate":0,"index":4240},"span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\stream\\mod.rs","byte_start":178447,"byte_end":178455,"line_start":845,"line_end":845,"column_start":8,"column_end":16},"name":"flat_map","qualname":"::stream::stream::StreamExt::flat_map","value":"pub fn flat_map<U, F>(Self, F) -> FlatMap<Self, U, F> where\nF: FnMut(Self::Item) -> U, U: Stream, Self: Sized","parent":{"krate":0,"index":4200},"children":[],"decl_id":null,"docs":" Maps a stream like [`StreamExt::map`] but flattens nested `Stream`s.","sig":null,"attributes":[{"value":"/ Maps a stream like [`StreamExt::map`] but flattens nested `Stream`s.","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\stream\\mod.rs","byte_start":177361,"byte_end":177433,"line_start":820,"line_end":820,"column_start":5,"column_end":77}},{"value":"/","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\stream\\mod.rs","byte_start":177438,"byte_end":177441,"line_start":821,"line_end":821,"column_start":5,"column_end":8}},{"value":"/ [`StreamExt::map`] is very useful, but if it produces a `Stream` instead,","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\stream\\mod.rs","byte_start":177446,"byte_end":177523,"line_start":822,"line_end":822,"column_start":5,"column_end":82}},{"value":"/ you would have to chain combinators like `.map(f).flatten()` while this","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\stream\\mod.rs","byte_start":177528,"byte_end":177603,"line_start":823,"line_end":823,"column_start":5,"column_end":80}},{"value":"/ combinator provides ability to write `.flat_map(f)` instead of chaining.","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\stream\\mod.rs","byte_start":177608,"byte_end":177684,"line_start":824,"line_end":824,"column_start":5,"column_end":81}},{"value":"/","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\stream\\mod.rs","byte_start":177689,"byte_end":177692,"line_start":825,"line_end":825,"column_start":5,"column_end":8}},{"value":"/ The provided closure which produces inner streams is executed over all elements","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\stream\\mod.rs","byte_start":177697,"byte_end":177780,"line_start":826,"line_end":826,"column_start":5,"column_end":88}},{"value":"/ of stream as last inner stream is terminated and next stream item is available.","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\stream\\mod.rs","byte_start":177785,"byte_end":177868,"line_start":827,"line_end":827,"column_start":5,"column_end":88}},{"value":"/","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\stream\\mod.rs","byte_start":177873,"byte_end":177876,"line_start":828,"line_end":828,"column_start":5,"column_end":8}},{"value":"/ Note that this function consumes the stream passed into it and returns a","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\stream\\mod.rs","byte_start":177881,"byte_end":177957,"line_start":829,"line_end":829,"column_start":5,"column_end":81}},{"value":"/ wrapped version of it, similar to the existing `flat_map` methods in the","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\stream\\mod.rs","byte_start":177962,"byte_end":178038,"line_start":830,"line_end":830,"column_start":5,"column_end":81}},{"value":"/ standard library.","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\stream\\mod.rs","byte_start":178043,"byte_end":178064,"line_start":831,"line_end":831,"column_start":5,"column_end":26}},{"value":"/","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\stream\\mod.rs","byte_start":178069,"byte_end":178072,"line_start":832,"line_end":832,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\stream\\mod.rs","byte_start":178077,"byte_end":178091,"line_start":833,"line_end":833,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\stream\\mod.rs","byte_start":178096,"byte_end":178099,"line_start":834,"line_end":834,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\stream\\mod.rs","byte_start":178104,"byte_end":178111,"line_start":835,"line_end":835,"column_start":5,"column_end":12}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\stream\\mod.rs","byte_start":178116,"byte_end":178157,"line_start":836,"line_end":836,"column_start":5,"column_end":46}},{"value":"/ use futures::stream::{self, StreamExt};","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\stream\\mod.rs","byte_start":178162,"byte_end":178205,"line_start":837,"line_end":837,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\stream\\mod.rs","byte_start":178210,"byte_end":178213,"line_start":838,"line_end":838,"column_start":5,"column_end":8}},{"value":"/ let stream = stream::iter(1..=3);","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\stream\\mod.rs","byte_start":178218,"byte_end":178255,"line_start":839,"line_end":839,"column_start":5,"column_end":42}},{"value":"/ let stream = stream.flat_map(|x| stream::iter(vec![x + 3; x]));","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\stream\\mod.rs","byte_start":178260,"byte_end":178327,"line_start":840,"line_end":840,"column_start":5,"column_end":72}},{"value":"/","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\stream\\mod.rs","byte_start":178332,"byte_end":178335,"line_start":841,"line_end":841,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(vec![4, 5, 5, 6, 6, 6], stream.collect::<Vec<_>>().await);","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\stream\\mod.rs","byte_start":178340,"byte_end":178413,"line_start":842,"line_end":842,"column_start":5,"column_end":78}},{"value":"/ # });","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\stream\\mod.rs","byte_start":178418,"byte_end":178427,"line_start":843,"line_end":843,"column_start":5,"column_end":14}},{"value":"/ ```","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\stream\\mod.rs","byte_start":178432,"byte_end":178439,"line_start":844,"line_end":844,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":4243},"span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\stream\\mod.rs","byte_start":180513,"byte_end":180531,"line_start":894,"line_end":894,"column_start":8,"column_end":26},"name":"flat_map_unordered","qualname":"::stream::stream::StreamExt::flat_map_unordered","value":"pub fn flat_map_unordered<U, F,\nimpl Into<Option<usize>>: Into<Option<usize>>>(Self, impl Into<Option<usize>>,\nF) -> FlatMapUnordered<Self, U, F> where U: Stream + Unpin,\nF: FnMut(Self::Item) -> U, Self: Sized","parent":{"krate":0,"index":4200},"children":[],"decl_id":null,"docs":" Maps a stream like [`StreamExt::map`] but flattens nested `Stream`s\n and polls them concurrently, yielding items in any order, as they made\n available.","sig":null,"attributes":[{"value":"/ Maps a stream like [`StreamExt::map`] but flattens nested `Stream`s","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\stream\\mod.rs","byte_start":178658,"byte_end":178729,"line_start":854,"line_end":854,"column_start":5,"column_end":76}},{"value":"/ and polls them concurrently, yielding items in any order, as they made","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\stream\\mod.rs","byte_start":178734,"byte_end":178808,"line_start":855,"line_end":855,"column_start":5,"column_end":79}},{"value":"/ available.","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\stream\\mod.rs","byte_start":178813,"byte_end":178827,"line_start":856,"line_end":856,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\stream\\mod.rs","byte_start":178832,"byte_end":178835,"line_start":857,"line_end":857,"column_start":5,"column_end":8}},{"value":"/ [`StreamExt::map`] is very useful, but if it produces `Stream`s","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\stream\\mod.rs","byte_start":178840,"byte_end":178907,"line_start":858,"line_end":858,"column_start":5,"column_end":72}},{"value":"/ instead, and you need to poll all of them concurrently, you would","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\stream\\mod.rs","byte_start":178912,"byte_end":178981,"line_start":859,"line_end":859,"column_start":5,"column_end":74}},{"value":"/ have to use something like `for_each_concurrent` and merge values","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\stream\\mod.rs","byte_start":178986,"byte_end":179055,"line_start":860,"line_end":860,"column_start":5,"column_end":74}},{"value":"/ by hand. This combinator provides ability to collect all values","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\stream\\mod.rs","byte_start":179060,"byte_end":179127,"line_start":861,"line_end":861,"column_start":5,"column_end":72}},{"value":"/ from concurrently polled streams into one stream.","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\stream\\mod.rs","byte_start":179132,"byte_end":179185,"line_start":862,"line_end":862,"column_start":5,"column_end":58}},{"value":"/","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\stream\\mod.rs","byte_start":179190,"byte_end":179193,"line_start":863,"line_end":863,"column_start":5,"column_end":8}},{"value":"/ The first argument is an optional limit on the number of concurrently","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\stream\\mod.rs","byte_start":179198,"byte_end":179271,"line_start":864,"line_end":864,"column_start":5,"column_end":78}},{"value":"/ polled streams. If this limit is not `None`, no more than `limit` streams","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\stream\\mod.rs","byte_start":179276,"byte_end":179353,"line_start":865,"line_end":865,"column_start":5,"column_end":82}},{"value":"/ will be polled concurrently. The `limit` argument is of type","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\stream\\mod.rs","byte_start":179358,"byte_end":179422,"line_start":866,"line_end":866,"column_start":5,"column_end":69}},{"value":"/ `Into<Option<usize>>`, and so can be provided as either `None`,","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\stream\\mod.rs","byte_start":179427,"byte_end":179494,"line_start":867,"line_end":867,"column_start":5,"column_end":72}},{"value":"/ `Some(10)`, or just `10`. Note: a limit of zero is interpreted as","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\stream\\mod.rs","byte_start":179499,"byte_end":179568,"line_start":868,"line_end":868,"column_start":5,"column_end":74}},{"value":"/ no limit at all, and will have the same result as passing in `None`.","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\stream\\mod.rs","byte_start":179573,"byte_end":179645,"line_start":869,"line_end":869,"column_start":5,"column_end":77}},{"value":"/","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\stream\\mod.rs","byte_start":179650,"byte_end":179653,"line_start":870,"line_end":870,"column_start":5,"column_end":8}},{"value":"/ The provided closure which produces inner streams is executed over","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\stream\\mod.rs","byte_start":179658,"byte_end":179728,"line_start":871,"line_end":871,"column_start":5,"column_end":75}},{"value":"/ all elements of stream as next stream item is available and limit","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\stream\\mod.rs","byte_start":179733,"byte_end":179802,"line_start":872,"line_end":872,"column_start":5,"column_end":74}},{"value":"/ of concurrently processed streams isn't exceeded.","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\stream\\mod.rs","byte_start":179807,"byte_end":179860,"line_start":873,"line_end":873,"column_start":5,"column_end":58}},{"value":"/","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\stream\\mod.rs","byte_start":179865,"byte_end":179868,"line_start":874,"line_end":874,"column_start":5,"column_end":8}},{"value":"/ Note that this function consumes the stream passed into it and","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\stream\\mod.rs","byte_start":179873,"byte_end":179939,"line_start":875,"line_end":875,"column_start":5,"column_end":71}},{"value":"/ returns a wrapped version of it.","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\stream\\mod.rs","byte_start":179944,"byte_end":179980,"line_start":876,"line_end":876,"column_start":5,"column_end":41}},{"value":"/","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\stream\\mod.rs","byte_start":179985,"byte_end":179988,"line_start":877,"line_end":877,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\stream\\mod.rs","byte_start":179993,"byte_end":180007,"line_start":878,"line_end":878,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\stream\\mod.rs","byte_start":180012,"byte_end":180015,"line_start":879,"line_end":879,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\stream\\mod.rs","byte_start":180020,"byte_end":180027,"line_start":880,"line_end":880,"column_start":5,"column_end":12}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\stream\\mod.rs","byte_start":180032,"byte_end":180073,"line_start":881,"line_end":881,"column_start":5,"column_end":46}},{"value":"/ use futures::stream::{self, StreamExt};","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\stream\\mod.rs","byte_start":180078,"byte_end":180121,"line_start":882,"line_end":882,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\stream\\mod.rs","byte_start":180126,"byte_end":180129,"line_start":883,"line_end":883,"column_start":5,"column_end":8}},{"value":"/ let stream = stream::iter(1..5);","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\stream\\mod.rs","byte_start":180134,"byte_end":180170,"line_start":884,"line_end":884,"column_start":5,"column_end":41}},{"value":"/ let stream = stream.flat_map_unordered(1, |x| stream::iter(vec![x; x]));","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\stream\\mod.rs","byte_start":180175,"byte_end":180251,"line_start":885,"line_end":885,"column_start":5,"column_end":81}},{"value":"/ let mut values = stream.collect::<Vec<_>>().await;","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\stream\\mod.rs","byte_start":180256,"byte_end":180310,"line_start":886,"line_end":886,"column_start":5,"column_end":59}},{"value":"/ values.sort();","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\stream\\mod.rs","byte_start":180315,"byte_end":180333,"line_start":887,"line_end":887,"column_start":5,"column_end":23}},{"value":"/","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\stream\\mod.rs","byte_start":180338,"byte_end":180341,"line_start":888,"line_end":888,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(vec![1usize, 2, 2, 3, 3, 3, 4, 4, 4, 4], values);","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\stream\\mod.rs","byte_start":180346,"byte_end":180410,"line_start":889,"line_end":889,"column_start":5,"column_end":69}},{"value":"/ # });","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\stream\\mod.rs","byte_start":180415,"byte_end":180424,"line_start":890,"line_end":890,"column_start":5,"column_end":14}},{"value":"/ ```","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\stream\\mod.rs","byte_start":180429,"byte_end":180436,"line_start":891,"line_end":891,"column_start":5,"column_end":12}},{"value":"cfg(not(futures_no_atomic_cas))","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\stream\\mod.rs","byte_start":180441,"byte_end":180475,"line_start":892,"line_end":892,"column_start":5,"column_end":39}},{"value":"cfg(feature = \"alloc\")","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\stream\\mod.rs","byte_start":180480,"byte_end":180505,"line_start":893,"line_end":893,"column_start":5,"column_end":30}}]},{"kind":"Method","id":{"krate":0,"index":4247},"span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\stream\\mod.rs","byte_start":181618,"byte_end":181622,"line_start":931,"line_end":931,"column_start":8,"column_end":12},"name":"scan","qualname":"::stream::stream::StreamExt::scan","value":"pub fn scan<S, B, Fut, F>(Self, S, F) -> Scan<Self, S, Fut, F> where\nF: FnMut(&mut S, Self::Item) -> Fut, Fut: Future<Output = Option<B>>,\nSelf: Sized","parent":{"krate":0,"index":4200},"children":[],"decl_id":null,"docs":" Combinator similar to [`StreamExt::fold`] that holds internal state\n and produces a new stream.","sig":null,"attributes":[{"value":"/ Combinator similar to [`StreamExt::fold`] that holds internal state","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\stream\\mod.rs","byte_start":180809,"byte_end":180880,"line_start":907,"line_end":907,"column_start":5,"column_end":76}},{"value":"/ and produces a new stream.","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\stream\\mod.rs","byte_start":180885,"byte_end":180915,"line_start":908,"line_end":908,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\stream\\mod.rs","byte_start":180920,"byte_end":180923,"line_start":909,"line_end":909,"column_start":5,"column_end":8}},{"value":"/ Accepts initial state and closure which will be applied to each element","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\stream\\mod.rs","byte_start":180928,"byte_end":181003,"line_start":910,"line_end":910,"column_start":5,"column_end":80}},{"value":"/ of the stream until provided closure returns `None`. Once `None` is","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\stream\\mod.rs","byte_start":181008,"byte_end":181079,"line_start":911,"line_end":911,"column_start":5,"column_end":76}},{"value":"/ returned, stream will be terminated.","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\stream\\mod.rs","byte_start":181084,"byte_end":181124,"line_start":912,"line_end":912,"column_start":5,"column_end":45}},{"value":"/","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\stream\\mod.rs","byte_start":181129,"byte_end":181132,"line_start":913,"line_end":913,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\stream\\mod.rs","byte_start":181137,"byte_end":181151,"line_start":914,"line_end":914,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\stream\\mod.rs","byte_start":181156,"byte_end":181159,"line_start":915,"line_end":915,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\stream\\mod.rs","byte_start":181164,"byte_end":181171,"line_start":916,"line_end":916,"column_start":5,"column_end":12}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\stream\\mod.rs","byte_start":181176,"byte_end":181217,"line_start":917,"line_end":917,"column_start":5,"column_end":46}},{"value":"/ use futures::future;","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\stream\\mod.rs","byte_start":181222,"byte_end":181246,"line_start":918,"line_end":918,"column_start":5,"column_end":29}},{"value":"/ use futures::stream::{self, StreamExt};","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\stream\\mod.rs","byte_start":181251,"byte_end":181294,"line_start":919,"line_end":919,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\stream\\mod.rs","byte_start":181299,"byte_end":181302,"line_start":920,"line_end":920,"column_start":5,"column_end":8}},{"value":"/ let stream = stream::iter(1..=10);","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\stream\\mod.rs","byte_start":181307,"byte_end":181345,"line_start":921,"line_end":921,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\stream\\mod.rs","byte_start":181350,"byte_end":181353,"line_start":922,"line_end":922,"column_start":5,"column_end":8}},{"value":"/ let stream = stream.scan(0, |state, x| {","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\stream\\mod.rs","byte_start":181358,"byte_end":181402,"line_start":923,"line_end":923,"column_start":5,"column_end":49}},{"value":"/     *state += x;","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\stream\\mod.rs","byte_start":181407,"byte_end":181427,"line_start":924,"line_end":924,"column_start":5,"column_end":25}},{"value":"/     future::ready(if *state < 10 { Some(x) } else { None })","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\stream\\mod.rs","byte_start":181432,"byte_end":181495,"line_start":925,"line_end":925,"column_start":5,"column_end":68}},{"value":"/ });","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\stream\\mod.rs","byte_start":181500,"byte_end":181507,"line_start":926,"line_end":926,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\stream\\mod.rs","byte_start":181512,"byte_end":181515,"line_start":927,"line_end":927,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(vec![1, 2, 3], stream.collect::<Vec<_>>().await);","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\stream\\mod.rs","byte_start":181520,"byte_end":181584,"line_start":928,"line_end":928,"column_start":5,"column_end":69}},{"value":"/ # });","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\stream\\mod.rs","byte_start":181589,"byte_end":181598,"line_start":929,"line_end":929,"column_start":5,"column_end":14}},{"value":"/ ```","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\stream\\mod.rs","byte_start":181603,"byte_end":181610,"line_start":930,"line_end":930,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":4252},"span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\stream\\mod.rs","byte_start":182669,"byte_end":182679,"line_start":962,"line_end":962,"column_start":8,"column_end":18},"name":"skip_while","qualname":"::stream::stream::StreamExt::skip_while","value":"pub fn skip_while<Fut, F>(Self, F) -> SkipWhile<Self, Fut, F> where\nF: FnMut(&Self::Item) -> Fut, Fut: Future<Output = bool>, Self: Sized","parent":{"krate":0,"index":4200},"children":[],"decl_id":null,"docs":" Skip elements on this stream while the provided asynchronous predicate\n resolves to `true`.","sig":null,"attributes":[{"value":"/ Skip elements on this stream while the provided asynchronous predicate","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\stream\\mod.rs","byte_start":181891,"byte_end":181965,"line_start":940,"line_end":940,"column_start":5,"column_end":79}},{"value":"/ resolves to `true`.","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\stream\\mod.rs","byte_start":181970,"byte_end":181993,"line_start":941,"line_end":941,"column_start":5,"column_end":28}},{"value":"/","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\stream\\mod.rs","byte_start":181998,"byte_end":182001,"line_start":942,"line_end":942,"column_start":5,"column_end":8}},{"value":"/ This function, like `Iterator::skip_while`, will skip elements on the","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\stream\\mod.rs","byte_start":182006,"byte_end":182079,"line_start":943,"line_end":943,"column_start":5,"column_end":78}},{"value":"/ stream until the predicate `f` resolves to `false`. Once one element","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\stream\\mod.rs","byte_start":182084,"byte_end":182156,"line_start":944,"line_end":944,"column_start":5,"column_end":77}},{"value":"/ returns `false`, all future elements will be returned from the underlying","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\stream\\mod.rs","byte_start":182161,"byte_end":182238,"line_start":945,"line_end":945,"column_start":5,"column_end":82}},{"value":"/ stream.","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\stream\\mod.rs","byte_start":182243,"byte_end":182254,"line_start":946,"line_end":946,"column_start":5,"column_end":16}},{"value":"/","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\stream\\mod.rs","byte_start":182259,"byte_end":182262,"line_start":947,"line_end":947,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\stream\\mod.rs","byte_start":182267,"byte_end":182281,"line_start":948,"line_end":948,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\stream\\mod.rs","byte_start":182286,"byte_end":182289,"line_start":949,"line_end":949,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\stream\\mod.rs","byte_start":182294,"byte_end":182301,"line_start":950,"line_end":950,"column_start":5,"column_end":12}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\stream\\mod.rs","byte_start":182306,"byte_end":182347,"line_start":951,"line_end":951,"column_start":5,"column_end":46}},{"value":"/ use futures::future;","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\stream\\mod.rs","byte_start":182352,"byte_end":182376,"line_start":952,"line_end":952,"column_start":5,"column_end":29}},{"value":"/ use futures::stream::{self, StreamExt};","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\stream\\mod.rs","byte_start":182381,"byte_end":182424,"line_start":953,"line_end":953,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\stream\\mod.rs","byte_start":182429,"byte_end":182432,"line_start":954,"line_end":954,"column_start":5,"column_end":8}},{"value":"/ let stream = stream::iter(1..=10);","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\stream\\mod.rs","byte_start":182437,"byte_end":182475,"line_start":955,"line_end":955,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\stream\\mod.rs","byte_start":182480,"byte_end":182483,"line_start":956,"line_end":956,"column_start":5,"column_end":8}},{"value":"/ let stream = stream.skip_while(|x| future::ready(*x <= 5));","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\stream\\mod.rs","byte_start":182488,"byte_end":182551,"line_start":957,"line_end":957,"column_start":5,"column_end":68}},{"value":"/","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\stream\\mod.rs","byte_start":182556,"byte_end":182559,"line_start":958,"line_end":958,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(vec![6, 7, 8, 9, 10], stream.collect::<Vec<_>>().await);","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\stream\\mod.rs","byte_start":182564,"byte_end":182635,"line_start":959,"line_end":959,"column_start":5,"column_end":76}},{"value":"/ # });","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\stream\\mod.rs","byte_start":182640,"byte_end":182649,"line_start":960,"line_end":960,"column_start":5,"column_end":14}},{"value":"/ ```","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\stream\\mod.rs","byte_start":182654,"byte_end":182661,"line_start":961,"line_end":961,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":4255},"span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\stream\\mod.rs","byte_start":183668,"byte_end":183678,"line_start":992,"line_end":992,"column_start":8,"column_end":18},"name":"take_while","qualname":"::stream::stream::StreamExt::take_while","value":"pub fn take_while<Fut, F>(Self, F) -> TakeWhile<Self, Fut, F> where\nF: FnMut(&Self::Item) -> Fut, Fut: Future<Output = bool>, Self: Sized","parent":{"krate":0,"index":4200},"children":[],"decl_id":null,"docs":" Take elements from this stream while the provided asynchronous predicate\n resolves to `true`.","sig":null,"attributes":[{"value":"/ Take elements from this stream while the provided asynchronous predicate","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\stream\\mod.rs","byte_start":182913,"byte_end":182989,"line_start":971,"line_end":971,"column_start":5,"column_end":81}},{"value":"/ resolves to `true`.","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\stream\\mod.rs","byte_start":182994,"byte_end":183017,"line_start":972,"line_end":972,"column_start":5,"column_end":28}},{"value":"/","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\stream\\mod.rs","byte_start":183022,"byte_end":183025,"line_start":973,"line_end":973,"column_start":5,"column_end":8}},{"value":"/ This function, like `Iterator::take_while`, will take elements from the","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\stream\\mod.rs","byte_start":183030,"byte_end":183105,"line_start":974,"line_end":974,"column_start":5,"column_end":80}},{"value":"/ stream until the predicate `f` resolves to `false`. Once one element","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\stream\\mod.rs","byte_start":183110,"byte_end":183182,"line_start":975,"line_end":975,"column_start":5,"column_end":77}},{"value":"/ returns `false`, it will always return that the stream is done.","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\stream\\mod.rs","byte_start":183187,"byte_end":183254,"line_start":976,"line_end":976,"column_start":5,"column_end":72}},{"value":"/","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\stream\\mod.rs","byte_start":183259,"byte_end":183262,"line_start":977,"line_end":977,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\stream\\mod.rs","byte_start":183267,"byte_end":183281,"line_start":978,"line_end":978,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\stream\\mod.rs","byte_start":183286,"byte_end":183289,"line_start":979,"line_end":979,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\stream\\mod.rs","byte_start":183294,"byte_end":183301,"line_start":980,"line_end":980,"column_start":5,"column_end":12}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\stream\\mod.rs","byte_start":183306,"byte_end":183347,"line_start":981,"line_end":981,"column_start":5,"column_end":46}},{"value":"/ use futures::future;","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\stream\\mod.rs","byte_start":183352,"byte_end":183376,"line_start":982,"line_end":982,"column_start":5,"column_end":29}},{"value":"/ use futures::stream::{self, StreamExt};","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\stream\\mod.rs","byte_start":183381,"byte_end":183424,"line_start":983,"line_end":983,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\stream\\mod.rs","byte_start":183429,"byte_end":183432,"line_start":984,"line_end":984,"column_start":5,"column_end":8}},{"value":"/ let stream = stream::iter(1..=10);","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\stream\\mod.rs","byte_start":183437,"byte_end":183475,"line_start":985,"line_end":985,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\stream\\mod.rs","byte_start":183480,"byte_end":183483,"line_start":986,"line_end":986,"column_start":5,"column_end":8}},{"value":"/ let stream = stream.take_while(|x| future::ready(*x <= 5));","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\stream\\mod.rs","byte_start":183488,"byte_end":183551,"line_start":987,"line_end":987,"column_start":5,"column_end":68}},{"value":"/","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\stream\\mod.rs","byte_start":183556,"byte_end":183559,"line_start":988,"line_end":988,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(vec![1, 2, 3, 4, 5], stream.collect::<Vec<_>>().await);","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\stream\\mod.rs","byte_start":183564,"byte_end":183634,"line_start":989,"line_end":989,"column_start":5,"column_end":75}},{"value":"/ # });","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\stream\\mod.rs","byte_start":183639,"byte_end":183648,"line_start":990,"line_end":990,"column_start":5,"column_end":14}},{"value":"/ ```","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\stream\\mod.rs","byte_start":183653,"byte_end":183660,"line_start":991,"line_end":991,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":4258},"span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\stream\\mod.rs","byte_start":185194,"byte_end":185204,"line_start":1037,"line_end":1037,"column_start":8,"column_end":18},"name":"take_until","qualname":"::stream::stream::StreamExt::take_until","value":"pub fn take_until<Fut>(Self, Fut) -> TakeUntil<Self, Fut> where Fut: Future,\nSelf: Sized","parent":{"krate":0,"index":4200},"children":[],"decl_id":null,"docs":" Take elements from this stream until the provided future resolves.","sig":null,"attributes":[{"value":"/ Take elements from this stream until the provided future resolves.","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\stream\\mod.rs","byte_start":183912,"byte_end":183982,"line_start":1001,"line_end":1001,"column_start":5,"column_end":75}},{"value":"/","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\stream\\mod.rs","byte_start":183987,"byte_end":183990,"line_start":1002,"line_end":1002,"column_start":5,"column_end":8}},{"value":"/ This function will take elements from the stream until the provided","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\stream\\mod.rs","byte_start":183995,"byte_end":184066,"line_start":1003,"line_end":1003,"column_start":5,"column_end":76}},{"value":"/ stopping future `fut` resolves. Once the `fut` future becomes ready,","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\stream\\mod.rs","byte_start":184071,"byte_end":184143,"line_start":1004,"line_end":1004,"column_start":5,"column_end":77}},{"value":"/ this stream combinator will always return that the stream is done.","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\stream\\mod.rs","byte_start":184148,"byte_end":184218,"line_start":1005,"line_end":1005,"column_start":5,"column_end":75}},{"value":"/","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\stream\\mod.rs","byte_start":184223,"byte_end":184226,"line_start":1006,"line_end":1006,"column_start":5,"column_end":8}},{"value":"/ The stopping future may return any type. Once the stream is stopped","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\stream\\mod.rs","byte_start":184231,"byte_end":184302,"line_start":1007,"line_end":1007,"column_start":5,"column_end":76}},{"value":"/ the result of the stopping future may be accessed with `TakeUntil::take_result()`.","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\stream\\mod.rs","byte_start":184307,"byte_end":184393,"line_start":1008,"line_end":1008,"column_start":5,"column_end":91}},{"value":"/ The stream may also be resumed with `TakeUntil::take_future()`.","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\stream\\mod.rs","byte_start":184398,"byte_end":184465,"line_start":1009,"line_end":1009,"column_start":5,"column_end":72}},{"value":"/ See the documentation of [`TakeUntil`] for more information.","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\stream\\mod.rs","byte_start":184470,"byte_end":184534,"line_start":1010,"line_end":1010,"column_start":5,"column_end":69}},{"value":"/","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\stream\\mod.rs","byte_start":184539,"byte_end":184542,"line_start":1011,"line_end":1011,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\stream\\mod.rs","byte_start":184547,"byte_end":184561,"line_start":1012,"line_end":1012,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\stream\\mod.rs","byte_start":184566,"byte_end":184569,"line_start":1013,"line_end":1013,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\stream\\mod.rs","byte_start":184574,"byte_end":184581,"line_start":1014,"line_end":1014,"column_start":5,"column_end":12}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\stream\\mod.rs","byte_start":184586,"byte_end":184627,"line_start":1015,"line_end":1015,"column_start":5,"column_end":46}},{"value":"/ use futures::future;","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\stream\\mod.rs","byte_start":184632,"byte_end":184656,"line_start":1016,"line_end":1016,"column_start":5,"column_end":29}},{"value":"/ use futures::stream::{self, StreamExt};","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\stream\\mod.rs","byte_start":184661,"byte_end":184704,"line_start":1017,"line_end":1017,"column_start":5,"column_end":48}},{"value":"/ use futures::task::Poll;","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\stream\\mod.rs","byte_start":184709,"byte_end":184737,"line_start":1018,"line_end":1018,"column_start":5,"column_end":33}},{"value":"/","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\stream\\mod.rs","byte_start":184742,"byte_end":184745,"line_start":1019,"line_end":1019,"column_start":5,"column_end":8}},{"value":"/ let stream = stream::iter(1..=10);","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\stream\\mod.rs","byte_start":184750,"byte_end":184788,"line_start":1020,"line_end":1020,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\stream\\mod.rs","byte_start":184793,"byte_end":184796,"line_start":1021,"line_end":1021,"column_start":5,"column_end":8}},{"value":"/ let mut i = 0;","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\stream\\mod.rs","byte_start":184801,"byte_end":184819,"line_start":1022,"line_end":1022,"column_start":5,"column_end":23}},{"value":"/ let stop_fut = future::poll_fn(|_cx| {","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\stream\\mod.rs","byte_start":184824,"byte_end":184866,"line_start":1023,"line_end":1023,"column_start":5,"column_end":47}},{"value":"/     i += 1;","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\stream\\mod.rs","byte_start":184871,"byte_end":184886,"line_start":1024,"line_end":1024,"column_start":5,"column_end":20}},{"value":"/     if i <= 5 {","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\stream\\mod.rs","byte_start":184891,"byte_end":184910,"line_start":1025,"line_end":1025,"column_start":5,"column_end":24}},{"value":"/         Poll::Pending","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\stream\\mod.rs","byte_start":184915,"byte_end":184940,"line_start":1026,"line_end":1026,"column_start":5,"column_end":30}},{"value":"/     } else {","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\stream\\mod.rs","byte_start":184945,"byte_end":184961,"line_start":1027,"line_end":1027,"column_start":5,"column_end":21}},{"value":"/         Poll::Ready(())","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\stream\\mod.rs","byte_start":184966,"byte_end":184993,"line_start":1028,"line_end":1028,"column_start":5,"column_end":32}},{"value":"/     }","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\stream\\mod.rs","byte_start":184998,"byte_end":185007,"line_start":1029,"line_end":1029,"column_start":5,"column_end":14}},{"value":"/ });","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\stream\\mod.rs","byte_start":185012,"byte_end":185019,"line_start":1030,"line_end":1030,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\stream\\mod.rs","byte_start":185024,"byte_end":185027,"line_start":1031,"line_end":1031,"column_start":5,"column_end":8}},{"value":"/ let stream = stream.take_until(stop_fut);","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\stream\\mod.rs","byte_start":185032,"byte_end":185077,"line_start":1032,"line_end":1032,"column_start":5,"column_end":50}},{"value":"/","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\stream\\mod.rs","byte_start":185082,"byte_end":185085,"line_start":1033,"line_end":1033,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(vec![1, 2, 3, 4, 5], stream.collect::<Vec<_>>().await);","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\stream\\mod.rs","byte_start":185090,"byte_end":185160,"line_start":1034,"line_end":1034,"column_start":5,"column_end":75}},{"value":"/ # });","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\stream\\mod.rs","byte_start":185165,"byte_end":185174,"line_start":1035,"line_end":1035,"column_start":5,"column_end":14}},{"value":"/ ```","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\stream\\mod.rs","byte_start":185179,"byte_end":185186,"line_start":1036,"line_end":1036,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":4260},"span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\stream\\mod.rs","byte_start":186443,"byte_end":186451,"line_start":1078,"line_end":1078,"column_start":8,"column_end":16},"name":"for_each","qualname":"::stream::stream::StreamExt::for_each","value":"pub fn for_each<Fut, F>(Self, F) -> ForEach<Self, Fut, F> where\nF: FnMut(Self::Item) -> Fut, Fut: Future<Output = ()>, Self: Sized","parent":{"krate":0,"index":4200},"children":[],"decl_id":null,"docs":" Runs this stream to completion, executing the provided asynchronous\n closure for each element on the stream.","sig":null,"attributes":[{"value":"/ Runs this stream to completion, executing the provided asynchronous","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\stream\\mod.rs","byte_start":185385,"byte_end":185456,"line_start":1045,"line_end":1045,"column_start":5,"column_end":76}},{"value":"/ closure for each element on the stream.","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\stream\\mod.rs","byte_start":185461,"byte_end":185504,"line_start":1046,"line_end":1046,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\stream\\mod.rs","byte_start":185509,"byte_end":185512,"line_start":1047,"line_end":1047,"column_start":5,"column_end":8}},{"value":"/ The closure provided will be called for each item this stream produces,","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\stream\\mod.rs","byte_start":185517,"byte_end":185592,"line_start":1048,"line_end":1048,"column_start":5,"column_end":80}},{"value":"/ yielding a future. That future will then be executed to completion","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\stream\\mod.rs","byte_start":185597,"byte_end":185667,"line_start":1049,"line_end":1049,"column_start":5,"column_end":75}},{"value":"/ before moving on to the next item.","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\stream\\mod.rs","byte_start":185672,"byte_end":185710,"line_start":1050,"line_end":1050,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\stream\\mod.rs","byte_start":185715,"byte_end":185718,"line_start":1051,"line_end":1051,"column_start":5,"column_end":8}},{"value":"/ The returned value is a `Future` where the `Output` type is `()`; it is","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\stream\\mod.rs","byte_start":185723,"byte_end":185798,"line_start":1052,"line_end":1052,"column_start":5,"column_end":80}},{"value":"/ executed entirely for its side effects.","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\stream\\mod.rs","byte_start":185803,"byte_end":185846,"line_start":1053,"line_end":1053,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\stream\\mod.rs","byte_start":185851,"byte_end":185854,"line_start":1054,"line_end":1054,"column_start":5,"column_end":8}},{"value":"/ To process each item in the stream and produce another stream instead","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\stream\\mod.rs","byte_start":185859,"byte_end":185932,"line_start":1055,"line_end":1055,"column_start":5,"column_end":78}},{"value":"/ of a single future, use `then` instead.","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\stream\\mod.rs","byte_start":185937,"byte_end":185980,"line_start":1056,"line_end":1056,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\stream\\mod.rs","byte_start":185985,"byte_end":185988,"line_start":1057,"line_end":1057,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\stream\\mod.rs","byte_start":185993,"byte_end":186007,"line_start":1058,"line_end":1058,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\stream\\mod.rs","byte_start":186012,"byte_end":186015,"line_start":1059,"line_end":1059,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\stream\\mod.rs","byte_start":186020,"byte_end":186027,"line_start":1060,"line_end":1060,"column_start":5,"column_end":12}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\stream\\mod.rs","byte_start":186032,"byte_end":186073,"line_start":1061,"line_end":1061,"column_start":5,"column_end":46}},{"value":"/ use futures::future;","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\stream\\mod.rs","byte_start":186078,"byte_end":186102,"line_start":1062,"line_end":1062,"column_start":5,"column_end":29}},{"value":"/ use futures::stream::{self, StreamExt};","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\stream\\mod.rs","byte_start":186107,"byte_end":186150,"line_start":1063,"line_end":1063,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\stream\\mod.rs","byte_start":186155,"byte_end":186158,"line_start":1064,"line_end":1064,"column_start":5,"column_end":8}},{"value":"/ let mut x = 0;","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\stream\\mod.rs","byte_start":186163,"byte_end":186181,"line_start":1065,"line_end":1065,"column_start":5,"column_end":23}},{"value":"/","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\stream\\mod.rs","byte_start":186186,"byte_end":186189,"line_start":1066,"line_end":1066,"column_start":5,"column_end":8}},{"value":"/ {","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\stream\\mod.rs","byte_start":186194,"byte_end":186199,"line_start":1067,"line_end":1067,"column_start":5,"column_end":10}},{"value":"/     let fut = stream::repeat(1).take(3).for_each(|item| {","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\stream\\mod.rs","byte_start":186204,"byte_end":186265,"line_start":1068,"line_end":1068,"column_start":5,"column_end":66}},{"value":"/         x += item;","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\stream\\mod.rs","byte_start":186270,"byte_end":186292,"line_start":1069,"line_end":1069,"column_start":5,"column_end":27}},{"value":"/         future::ready(())","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\stream\\mod.rs","byte_start":186297,"byte_end":186326,"line_start":1070,"line_end":1070,"column_start":5,"column_end":34}},{"value":"/     });","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\stream\\mod.rs","byte_start":186331,"byte_end":186342,"line_start":1071,"line_end":1071,"column_start":5,"column_end":16}},{"value":"/     fut.await;","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\stream\\mod.rs","byte_start":186347,"byte_end":186365,"line_start":1072,"line_end":1072,"column_start":5,"column_end":23}},{"value":"/ }","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\stream\\mod.rs","byte_start":186370,"byte_end":186375,"line_start":1073,"line_end":1073,"column_start":5,"column_end":10}},{"value":"/","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\stream\\mod.rs","byte_start":186380,"byte_end":186383,"line_start":1074,"line_end":1074,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(x, 3);","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\stream\\mod.rs","byte_start":186388,"byte_end":186409,"line_start":1075,"line_end":1075,"column_start":5,"column_end":26}},{"value":"/ # });","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\stream\\mod.rs","byte_start":186414,"byte_end":186423,"line_start":1076,"line_end":1076,"column_start":5,"column_end":14}},{"value":"/ ```","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\stream\\mod.rs","byte_start":186428,"byte_end":186435,"line_start":1077,"line_end":1077,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":4263},"span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\stream\\mod.rs","byte_start":188613,"byte_end":188632,"line_start":1134,"line_end":1134,"column_start":8,"column_end":27},"name":"for_each_concurrent","qualname":"::stream::stream::StreamExt::for_each_concurrent","value":"pub fn for_each_concurrent<Fut, F,\nimpl Into<Option<usize>>: Into<Option<usize>>>(Self, impl Into<Option<usize>>,\nF) -> ForEachConcurrent<Self, Fut, F> where F: FnMut(Self::Item) -> Fut,\nFut: Future<Output = ()>, Self: Sized","parent":{"krate":0,"index":4200},"children":[],"decl_id":null,"docs":" Runs this stream to completion, executing the provided asynchronous\n closure for each element on the stream concurrently as elements become\n available.","sig":null,"attributes":[{"value":"/ Runs this stream to completion, executing the provided asynchronous","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\stream\\mod.rs","byte_start":186670,"byte_end":186741,"line_start":1087,"line_end":1087,"column_start":5,"column_end":76}},{"value":"/ closure for each element on the stream concurrently as elements become","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\stream\\mod.rs","byte_start":186746,"byte_end":186820,"line_start":1088,"line_end":1088,"column_start":5,"column_end":79}},{"value":"/ available.","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\stream\\mod.rs","byte_start":186825,"byte_end":186839,"line_start":1089,"line_end":1089,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\stream\\mod.rs","byte_start":186844,"byte_end":186847,"line_start":1090,"line_end":1090,"column_start":5,"column_end":8}},{"value":"/ This is similar to [`StreamExt::for_each`], but the futures","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\stream\\mod.rs","byte_start":186852,"byte_end":186915,"line_start":1091,"line_end":1091,"column_start":5,"column_end":68}},{"value":"/ produced by the closure are run concurrently (but not in parallel--","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\stream\\mod.rs","byte_start":186920,"byte_end":186991,"line_start":1092,"line_end":1092,"column_start":5,"column_end":76}},{"value":"/ this combinator does not introduce any threads).","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\stream\\mod.rs","byte_start":186996,"byte_end":187048,"line_start":1093,"line_end":1093,"column_start":5,"column_end":57}},{"value":"/","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\stream\\mod.rs","byte_start":187053,"byte_end":187056,"line_start":1094,"line_end":1094,"column_start":5,"column_end":8}},{"value":"/ The closure provided will be called for each item this stream produces,","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\stream\\mod.rs","byte_start":187061,"byte_end":187136,"line_start":1095,"line_end":1095,"column_start":5,"column_end":80}},{"value":"/ yielding a future. That future will then be executed to completion","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\stream\\mod.rs","byte_start":187141,"byte_end":187211,"line_start":1096,"line_end":1096,"column_start":5,"column_end":75}},{"value":"/ concurrently with the other futures produced by the closure.","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\stream\\mod.rs","byte_start":187216,"byte_end":187280,"line_start":1097,"line_end":1097,"column_start":5,"column_end":69}},{"value":"/","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\stream\\mod.rs","byte_start":187285,"byte_end":187288,"line_start":1098,"line_end":1098,"column_start":5,"column_end":8}},{"value":"/ The first argument is an optional limit on the number of concurrent","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\stream\\mod.rs","byte_start":187293,"byte_end":187364,"line_start":1099,"line_end":1099,"column_start":5,"column_end":76}},{"value":"/ futures. If this limit is not `None`, no more than `limit` futures","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\stream\\mod.rs","byte_start":187369,"byte_end":187439,"line_start":1100,"line_end":1100,"column_start":5,"column_end":75}},{"value":"/ will be run concurrently. The `limit` argument is of type","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\stream\\mod.rs","byte_start":187444,"byte_end":187505,"line_start":1101,"line_end":1101,"column_start":5,"column_end":66}},{"value":"/ `Into<Option<usize>>`, and so can be provided as either `None`,","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\stream\\mod.rs","byte_start":187510,"byte_end":187577,"line_start":1102,"line_end":1102,"column_start":5,"column_end":72}},{"value":"/ `Some(10)`, or just `10`. Note: a limit of zero is interpreted as","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\stream\\mod.rs","byte_start":187582,"byte_end":187651,"line_start":1103,"line_end":1103,"column_start":5,"column_end":74}},{"value":"/ no limit at all, and will have the same result as passing in `None`.","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\stream\\mod.rs","byte_start":187656,"byte_end":187728,"line_start":1104,"line_end":1104,"column_start":5,"column_end":77}},{"value":"/","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\stream\\mod.rs","byte_start":187733,"byte_end":187736,"line_start":1105,"line_end":1105,"column_start":5,"column_end":8}},{"value":"/ This method is only available when the `std` or `alloc` feature of this","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\stream\\mod.rs","byte_start":187741,"byte_end":187816,"line_start":1106,"line_end":1106,"column_start":5,"column_end":80}},{"value":"/ library is activated, and it is activated by default.","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\stream\\mod.rs","byte_start":187821,"byte_end":187878,"line_start":1107,"line_end":1107,"column_start":5,"column_end":62}},{"value":"/","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\stream\\mod.rs","byte_start":187883,"byte_end":187886,"line_start":1108,"line_end":1108,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\stream\\mod.rs","byte_start":187891,"byte_end":187905,"line_start":1109,"line_end":1109,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\stream\\mod.rs","byte_start":187910,"byte_end":187913,"line_start":1110,"line_end":1110,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\stream\\mod.rs","byte_start":187918,"byte_end":187925,"line_start":1111,"line_end":1111,"column_start":5,"column_end":12}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\stream\\mod.rs","byte_start":187930,"byte_end":187971,"line_start":1112,"line_end":1112,"column_start":5,"column_end":46}},{"value":"/ use futures::channel::oneshot;","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\stream\\mod.rs","byte_start":187976,"byte_end":188010,"line_start":1113,"line_end":1113,"column_start":5,"column_end":39}},{"value":"/ use futures::stream::{self, StreamExt};","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\stream\\mod.rs","byte_start":188015,"byte_end":188058,"line_start":1114,"line_end":1114,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\stream\\mod.rs","byte_start":188063,"byte_end":188066,"line_start":1115,"line_end":1115,"column_start":5,"column_end":8}},{"value":"/ let (tx1, rx1) = oneshot::channel();","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\stream\\mod.rs","byte_start":188071,"byte_end":188111,"line_start":1116,"line_end":1116,"column_start":5,"column_end":45}},{"value":"/ let (tx2, rx2) = oneshot::channel();","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\stream\\mod.rs","byte_start":188116,"byte_end":188156,"line_start":1117,"line_end":1117,"column_start":5,"column_end":45}},{"value":"/ let (tx3, rx3) = oneshot::channel();","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\stream\\mod.rs","byte_start":188161,"byte_end":188201,"line_start":1118,"line_end":1118,"column_start":5,"column_end":45}},{"value":"/","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\stream\\mod.rs","byte_start":188206,"byte_end":188209,"line_start":1119,"line_end":1119,"column_start":5,"column_end":8}},{"value":"/ let fut = stream::iter(vec![rx1, rx2, rx3]).for_each_concurrent(","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\stream\\mod.rs","byte_start":188214,"byte_end":188282,"line_start":1120,"line_end":1120,"column_start":5,"column_end":73}},{"value":"/     /* limit */ 2,","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\stream\\mod.rs","byte_start":188287,"byte_end":188309,"line_start":1121,"line_end":1121,"column_start":5,"column_end":27}},{"value":"/     |rx| async move {","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\stream\\mod.rs","byte_start":188314,"byte_end":188339,"line_start":1122,"line_end":1122,"column_start":5,"column_end":30}},{"value":"/         rx.await.unwrap();","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\stream\\mod.rs","byte_start":188344,"byte_end":188374,"line_start":1123,"line_end":1123,"column_start":5,"column_end":35}},{"value":"/     }","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\stream\\mod.rs","byte_start":188379,"byte_end":188388,"line_start":1124,"line_end":1124,"column_start":5,"column_end":14}},{"value":"/ );","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\stream\\mod.rs","byte_start":188393,"byte_end":188399,"line_start":1125,"line_end":1125,"column_start":5,"column_end":11}},{"value":"/ tx1.send(()).unwrap();","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\stream\\mod.rs","byte_start":188404,"byte_end":188430,"line_start":1126,"line_end":1126,"column_start":5,"column_end":31}},{"value":"/ tx2.send(()).unwrap();","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\stream\\mod.rs","byte_start":188435,"byte_end":188461,"line_start":1127,"line_end":1127,"column_start":5,"column_end":31}},{"value":"/ tx3.send(()).unwrap();","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\stream\\mod.rs","byte_start":188466,"byte_end":188492,"line_start":1128,"line_end":1128,"column_start":5,"column_end":31}},{"value":"/ fut.await;","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\stream\\mod.rs","byte_start":188497,"byte_end":188511,"line_start":1129,"line_end":1129,"column_start":5,"column_end":19}},{"value":"/ # })","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\stream\\mod.rs","byte_start":188516,"byte_end":188524,"line_start":1130,"line_end":1130,"column_start":5,"column_end":13}},{"value":"/ ```","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\stream\\mod.rs","byte_start":188529,"byte_end":188536,"line_start":1131,"line_end":1131,"column_start":5,"column_end":12}},{"value":"cfg(not(futures_no_atomic_cas))","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\stream\\mod.rs","byte_start":188541,"byte_end":188575,"line_start":1132,"line_end":1132,"column_start":5,"column_end":39}},{"value":"cfg(feature = \"alloc\")","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\stream\\mod.rs","byte_start":188580,"byte_end":188605,"line_start":1133,"line_end":1133,"column_start":5,"column_end":30}}]},{"kind":"Method","id":{"krate":0,"index":4267},"span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\stream\\mod.rs","byte_start":189457,"byte_end":189461,"line_start":1163,"line_end":1163,"column_start":8,"column_end":12},"name":"take","qualname":"::stream::stream::StreamExt::take","value":"pub fn take(Self, usize) -> Take<Self> where Self: Sized","parent":{"krate":0,"index":4200},"children":[],"decl_id":null,"docs":" Creates a new stream of at most `n` items of the underlying stream.","sig":null,"attributes":[{"value":"/ Creates a new stream of at most `n` items of the underlying stream.","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\stream\\mod.rs","byte_start":188949,"byte_end":189020,"line_start":1147,"line_end":1147,"column_start":5,"column_end":76}},{"value":"/","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\stream\\mod.rs","byte_start":189025,"byte_end":189028,"line_start":1148,"line_end":1148,"column_start":5,"column_end":8}},{"value":"/ Once `n` items have been yielded from this stream then it will always","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\stream\\mod.rs","byte_start":189033,"byte_end":189106,"line_start":1149,"line_end":1149,"column_start":5,"column_end":78}},{"value":"/ return that the stream is done.","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\stream\\mod.rs","byte_start":189111,"byte_end":189146,"line_start":1150,"line_end":1150,"column_start":5,"column_end":40}},{"value":"/","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\stream\\mod.rs","byte_start":189151,"byte_end":189154,"line_start":1151,"line_end":1151,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\stream\\mod.rs","byte_start":189159,"byte_end":189173,"line_start":1152,"line_end":1152,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\stream\\mod.rs","byte_start":189178,"byte_end":189181,"line_start":1153,"line_end":1153,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\stream\\mod.rs","byte_start":189186,"byte_end":189193,"line_start":1154,"line_end":1154,"column_start":5,"column_end":12}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\stream\\mod.rs","byte_start":189198,"byte_end":189239,"line_start":1155,"line_end":1155,"column_start":5,"column_end":46}},{"value":"/ use futures::stream::{self, StreamExt};","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\stream\\mod.rs","byte_start":189244,"byte_end":189287,"line_start":1156,"line_end":1156,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\stream\\mod.rs","byte_start":189292,"byte_end":189295,"line_start":1157,"line_end":1157,"column_start":5,"column_end":8}},{"value":"/ let stream = stream::iter(1..=10).take(3);","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\stream\\mod.rs","byte_start":189300,"byte_end":189346,"line_start":1158,"line_end":1158,"column_start":5,"column_end":51}},{"value":"/","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\stream\\mod.rs","byte_start":189351,"byte_end":189354,"line_start":1159,"line_end":1159,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(vec![1, 2, 3], stream.collect::<Vec<_>>().await);","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\stream\\mod.rs","byte_start":189359,"byte_end":189423,"line_start":1160,"line_end":1160,"column_start":5,"column_end":69}},{"value":"/ # });","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\stream\\mod.rs","byte_start":189428,"byte_end":189437,"line_start":1161,"line_end":1161,"column_start":5,"column_end":14}},{"value":"/ ```","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\stream\\mod.rs","byte_start":189442,"byte_end":189449,"line_start":1162,"line_end":1162,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":4268},"span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\stream\\mod.rs","byte_start":190126,"byte_end":190130,"line_start":1186,"line_end":1186,"column_start":8,"column_end":12},"name":"skip","qualname":"::stream::stream::StreamExt::skip","value":"pub fn skip(Self, usize) -> Skip<Self> where Self: Sized","parent":{"krate":0,"index":4200},"children":[],"decl_id":null,"docs":" Creates a new stream which skips `n` items of the underlying stream.","sig":null,"attributes":[{"value":"/ Creates a new stream which skips `n` items of the underlying stream.","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\stream\\mod.rs","byte_start":189599,"byte_end":189671,"line_start":1170,"line_end":1170,"column_start":5,"column_end":77}},{"value":"/","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\stream\\mod.rs","byte_start":189676,"byte_end":189679,"line_start":1171,"line_end":1171,"column_start":5,"column_end":8}},{"value":"/ Once `n` items have been skipped from this stream then it will always","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\stream\\mod.rs","byte_start":189684,"byte_end":189757,"line_start":1172,"line_end":1172,"column_start":5,"column_end":78}},{"value":"/ return the remaining items on this stream.","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\stream\\mod.rs","byte_start":189762,"byte_end":189808,"line_start":1173,"line_end":1173,"column_start":5,"column_end":51}},{"value":"/","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\stream\\mod.rs","byte_start":189813,"byte_end":189816,"line_start":1174,"line_end":1174,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\stream\\mod.rs","byte_start":189821,"byte_end":189835,"line_start":1175,"line_end":1175,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\stream\\mod.rs","byte_start":189840,"byte_end":189843,"line_start":1176,"line_end":1176,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\stream\\mod.rs","byte_start":189848,"byte_end":189855,"line_start":1177,"line_end":1177,"column_start":5,"column_end":12}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\stream\\mod.rs","byte_start":189860,"byte_end":189901,"line_start":1178,"line_end":1178,"column_start":5,"column_end":46}},{"value":"/ use futures::stream::{self, StreamExt};","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\stream\\mod.rs","byte_start":189906,"byte_end":189949,"line_start":1179,"line_end":1179,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\stream\\mod.rs","byte_start":189954,"byte_end":189957,"line_start":1180,"line_end":1180,"column_start":5,"column_end":8}},{"value":"/ let stream = stream::iter(1..=10).skip(5);","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\stream\\mod.rs","byte_start":189962,"byte_end":190008,"line_start":1181,"line_end":1181,"column_start":5,"column_end":51}},{"value":"/","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\stream\\mod.rs","byte_start":190013,"byte_end":190016,"line_start":1182,"line_end":1182,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(vec![6, 7, 8, 9, 10], stream.collect::<Vec<_>>().await);","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\stream\\mod.rs","byte_start":190021,"byte_end":190092,"line_start":1183,"line_end":1183,"column_start":5,"column_end":76}},{"value":"/ # });","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\stream\\mod.rs","byte_start":190097,"byte_end":190106,"line_start":1184,"line_end":1184,"column_start":5,"column_end":14}},{"value":"/ ```","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\stream\\mod.rs","byte_start":190111,"byte_end":190118,"line_start":1185,"line_end":1185,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":4269},"span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\stream\\mod.rs","byte_start":191751,"byte_end":191755,"line_start":1232,"line_end":1232,"column_start":8,"column_end":12},"name":"fuse","qualname":"::stream::stream::StreamExt::fuse","value":"pub fn fuse(Self) -> Fuse<Self> where Self: Sized","parent":{"krate":0,"index":4200},"children":[],"decl_id":null,"docs":" Fuse a stream such that [`poll_next`](Stream::poll_next) will never\n again be called once it has finished. This method can be used to turn\n any `Stream` into a `FusedStream`.","sig":null,"attributes":[{"value":"/ Fuse a stream such that [`poll_next`](Stream::poll_next) will never","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\stream\\mod.rs","byte_start":190268,"byte_end":190339,"line_start":1193,"line_end":1193,"column_start":5,"column_end":76}},{"value":"/ again be called once it has finished. This method can be used to turn","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\stream\\mod.rs","byte_start":190344,"byte_end":190417,"line_start":1194,"line_end":1194,"column_start":5,"column_end":78}},{"value":"/ any `Stream` into a `FusedStream`.","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\stream\\mod.rs","byte_start":190422,"byte_end":190460,"line_start":1195,"line_end":1195,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\stream\\mod.rs","byte_start":190465,"byte_end":190468,"line_start":1196,"line_end":1196,"column_start":5,"column_end":8}},{"value":"/ Normally, once a stream has returned [`None`] from","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\stream\\mod.rs","byte_start":190473,"byte_end":190527,"line_start":1197,"line_end":1197,"column_start":5,"column_end":59}},{"value":"/ [`poll_next`](Stream::poll_next) any further calls could exhibit bad","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\stream\\mod.rs","byte_start":190532,"byte_end":190604,"line_start":1198,"line_end":1198,"column_start":5,"column_end":77}},{"value":"/ behavior such as block forever, panic, never return, etc. If it is known","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\stream\\mod.rs","byte_start":190609,"byte_end":190685,"line_start":1199,"line_end":1199,"column_start":5,"column_end":81}},{"value":"/ that [`poll_next`](Stream::poll_next) may be called after stream","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\stream\\mod.rs","byte_start":190690,"byte_end":190758,"line_start":1200,"line_end":1200,"column_start":5,"column_end":73}},{"value":"/ has already finished, then this method can be used to ensure that it has","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\stream\\mod.rs","byte_start":190763,"byte_end":190839,"line_start":1201,"line_end":1201,"column_start":5,"column_end":81}},{"value":"/ defined semantics.","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\stream\\mod.rs","byte_start":190844,"byte_end":190866,"line_start":1202,"line_end":1202,"column_start":5,"column_end":27}},{"value":"/","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\stream\\mod.rs","byte_start":190871,"byte_end":190874,"line_start":1203,"line_end":1203,"column_start":5,"column_end":8}},{"value":"/ The [`poll_next`](Stream::poll_next) method of a `fuse`d stream","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\stream\\mod.rs","byte_start":190879,"byte_end":190946,"line_start":1204,"line_end":1204,"column_start":5,"column_end":72}},{"value":"/ is guaranteed to return [`None`] after the underlying stream has","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\stream\\mod.rs","byte_start":190951,"byte_end":191019,"line_start":1205,"line_end":1205,"column_start":5,"column_end":73}},{"value":"/ finished.","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\stream\\mod.rs","byte_start":191024,"byte_end":191037,"line_start":1206,"line_end":1206,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\stream\\mod.rs","byte_start":191042,"byte_end":191045,"line_start":1207,"line_end":1207,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\stream\\mod.rs","byte_start":191050,"byte_end":191064,"line_start":1208,"line_end":1208,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\stream\\mod.rs","byte_start":191069,"byte_end":191072,"line_start":1209,"line_end":1209,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\stream\\mod.rs","byte_start":191077,"byte_end":191084,"line_start":1210,"line_end":1210,"column_start":5,"column_end":12}},{"value":"/ use futures::executor::block_on_stream;","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\stream\\mod.rs","byte_start":191089,"byte_end":191132,"line_start":1211,"line_end":1211,"column_start":5,"column_end":48}},{"value":"/ use futures::stream::{self, StreamExt};","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\stream\\mod.rs","byte_start":191137,"byte_end":191180,"line_start":1212,"line_end":1212,"column_start":5,"column_end":48}},{"value":"/ use futures::task::Poll;","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\stream\\mod.rs","byte_start":191185,"byte_end":191213,"line_start":1213,"line_end":1213,"column_start":5,"column_end":33}},{"value":"/","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\stream\\mod.rs","byte_start":191218,"byte_end":191221,"line_start":1214,"line_end":1214,"column_start":5,"column_end":8}},{"value":"/ let mut x = 0;","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\stream\\mod.rs","byte_start":191226,"byte_end":191244,"line_start":1215,"line_end":1215,"column_start":5,"column_end":23}},{"value":"/ let stream = stream::poll_fn(|_| {","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\stream\\mod.rs","byte_start":191249,"byte_end":191287,"line_start":1216,"line_end":1216,"column_start":5,"column_end":43}},{"value":"/     x += 1;","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\stream\\mod.rs","byte_start":191292,"byte_end":191307,"line_start":1217,"line_end":1217,"column_start":5,"column_end":20}},{"value":"/     match x {","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\stream\\mod.rs","byte_start":191312,"byte_end":191329,"line_start":1218,"line_end":1218,"column_start":5,"column_end":22}},{"value":"/         0..=2 => Poll::Ready(Some(x)),","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\stream\\mod.rs","byte_start":191334,"byte_end":191376,"line_start":1219,"line_end":1219,"column_start":5,"column_end":47}},{"value":"/         3 => Poll::Ready(None),","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\stream\\mod.rs","byte_start":191381,"byte_end":191416,"line_start":1220,"line_end":1220,"column_start":5,"column_end":40}},{"value":"/         _ => panic!(\"should not happen\")","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\stream\\mod.rs","byte_start":191421,"byte_end":191465,"line_start":1221,"line_end":1221,"column_start":5,"column_end":49}},{"value":"/     }","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\stream\\mod.rs","byte_start":191470,"byte_end":191479,"line_start":1222,"line_end":1222,"column_start":5,"column_end":14}},{"value":"/ }).fuse();","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\stream\\mod.rs","byte_start":191484,"byte_end":191498,"line_start":1223,"line_end":1223,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\stream\\mod.rs","byte_start":191503,"byte_end":191506,"line_start":1224,"line_end":1224,"column_start":5,"column_end":8}},{"value":"/ let mut iter = block_on_stream(stream);","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\stream\\mod.rs","byte_start":191511,"byte_end":191554,"line_start":1225,"line_end":1225,"column_start":5,"column_end":48}},{"value":"/ assert_eq!(Some(1), iter.next());","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\stream\\mod.rs","byte_start":191559,"byte_end":191596,"line_start":1226,"line_end":1226,"column_start":5,"column_end":42}},{"value":"/ assert_eq!(Some(2), iter.next());","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\stream\\mod.rs","byte_start":191601,"byte_end":191638,"line_start":1227,"line_end":1227,"column_start":5,"column_end":42}},{"value":"/ assert_eq!(None, iter.next());","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\stream\\mod.rs","byte_start":191643,"byte_end":191677,"line_start":1228,"line_end":1228,"column_start":5,"column_end":39}},{"value":"/ assert_eq!(None, iter.next());","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\stream\\mod.rs","byte_start":191682,"byte_end":191716,"line_start":1229,"line_end":1229,"column_start":5,"column_end":39}},{"value":"/ // ...","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\stream\\mod.rs","byte_start":191721,"byte_end":191731,"line_start":1230,"line_end":1230,"column_start":5,"column_end":15}},{"value":"/ ```","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\stream\\mod.rs","byte_start":191736,"byte_end":191743,"line_start":1231,"line_end":1231,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":4270},"span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\stream\\mod.rs","byte_start":192684,"byte_end":192690,"line_start":1265,"line_end":1265,"column_start":8,"column_end":14},"name":"by_ref","qualname":"::stream::stream::StreamExt::by_ref","value":"pub fn by_ref(&mut Self) -> &mut Self","parent":{"krate":0,"index":4200},"children":[],"decl_id":null,"docs":" Borrows a stream, rather than consuming it.","sig":null,"attributes":[{"value":"/ Borrows a stream, rather than consuming it.","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\stream\\mod.rs","byte_start":191880,"byte_end":191927,"line_start":1239,"line_end":1239,"column_start":5,"column_end":52}},{"value":"/","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\stream\\mod.rs","byte_start":191932,"byte_end":191935,"line_start":1240,"line_end":1240,"column_start":5,"column_end":8}},{"value":"/ This is useful to allow applying stream adaptors while still retaining","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\stream\\mod.rs","byte_start":191940,"byte_end":192014,"line_start":1241,"line_end":1241,"column_start":5,"column_end":79}},{"value":"/ ownership of the original stream.","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\stream\\mod.rs","byte_start":192019,"byte_end":192056,"line_start":1242,"line_end":1242,"column_start":5,"column_end":42}},{"value":"/","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\stream\\mod.rs","byte_start":192061,"byte_end":192064,"line_start":1243,"line_end":1243,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\stream\\mod.rs","byte_start":192069,"byte_end":192083,"line_start":1244,"line_end":1244,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\stream\\mod.rs","byte_start":192088,"byte_end":192091,"line_start":1245,"line_end":1245,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\stream\\mod.rs","byte_start":192096,"byte_end":192103,"line_start":1246,"line_end":1246,"column_start":5,"column_end":12}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\stream\\mod.rs","byte_start":192108,"byte_end":192149,"line_start":1247,"line_end":1247,"column_start":5,"column_end":46}},{"value":"/ use futures::stream::{self, StreamExt};","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\stream\\mod.rs","byte_start":192154,"byte_end":192197,"line_start":1248,"line_end":1248,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\stream\\mod.rs","byte_start":192202,"byte_end":192205,"line_start":1249,"line_end":1249,"column_start":5,"column_end":8}},{"value":"/ let mut stream = stream::iter(1..5);","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\stream\\mod.rs","byte_start":192210,"byte_end":192250,"line_start":1250,"line_end":1250,"column_start":5,"column_end":45}},{"value":"/","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\stream\\mod.rs","byte_start":192255,"byte_end":192258,"line_start":1251,"line_end":1251,"column_start":5,"column_end":8}},{"value":"/ let sum = stream.by_ref()","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\stream\\mod.rs","byte_start":192263,"byte_end":192292,"line_start":1252,"line_end":1252,"column_start":5,"column_end":34}},{"value":"/                 .take(2)","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\stream\\mod.rs","byte_start":192297,"byte_end":192325,"line_start":1253,"line_end":1253,"column_start":5,"column_end":33}},{"value":"/                 .fold(0, |a, b| async move { a + b })","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\stream\\mod.rs","byte_start":192330,"byte_end":192387,"line_start":1254,"line_end":1254,"column_start":5,"column_end":62}},{"value":"/                 .await;","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\stream\\mod.rs","byte_start":192392,"byte_end":192419,"line_start":1255,"line_end":1255,"column_start":5,"column_end":32}},{"value":"/ assert_eq!(sum, 3);","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\stream\\mod.rs","byte_start":192424,"byte_end":192447,"line_start":1256,"line_end":1256,"column_start":5,"column_end":28}},{"value":"/","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\stream\\mod.rs","byte_start":192452,"byte_end":192455,"line_start":1257,"line_end":1257,"column_start":5,"column_end":8}},{"value":"/ // You can use the stream again","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\stream\\mod.rs","byte_start":192460,"byte_end":192495,"line_start":1258,"line_end":1258,"column_start":5,"column_end":40}},{"value":"/ let sum = stream.take(2)","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\stream\\mod.rs","byte_start":192500,"byte_end":192528,"line_start":1259,"line_end":1259,"column_start":5,"column_end":33}},{"value":"/                 .fold(0, |a, b| async move { a + b })","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\stream\\mod.rs","byte_start":192533,"byte_end":192590,"line_start":1260,"line_end":1260,"column_start":5,"column_end":62}},{"value":"/                 .await;","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\stream\\mod.rs","byte_start":192595,"byte_end":192622,"line_start":1261,"line_end":1261,"column_start":5,"column_end":32}},{"value":"/ assert_eq!(sum, 7);","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\stream\\mod.rs","byte_start":192627,"byte_end":192650,"line_start":1262,"line_end":1262,"column_start":5,"column_end":28}},{"value":"/ # });","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\stream\\mod.rs","byte_start":192655,"byte_end":192664,"line_start":1263,"line_end":1263,"column_start":5,"column_end":14}},{"value":"/ ```","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\stream\\mod.rs","byte_start":192669,"byte_end":192676,"line_start":1264,"line_end":1264,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":4271},"span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\stream\\mod.rs","byte_start":194449,"byte_end":194461,"line_start":1310,"line_end":1310,"column_start":8,"column_end":20},"name":"catch_unwind","qualname":"::stream::stream::StreamExt::catch_unwind","value":"pub fn catch_unwind(Self) -> CatchUnwind<Self> where Self: Sized +\nstd::panic::UnwindSafe","parent":{"krate":0,"index":4200},"children":[],"decl_id":null,"docs":" Catches unwinding panics while polling the stream.","sig":null,"attributes":[{"value":"/ Catches unwinding panics while polling the stream.","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\stream\\mod.rs","byte_start":192741,"byte_end":192795,"line_start":1269,"line_end":1269,"column_start":5,"column_end":59}},{"value":"/","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\stream\\mod.rs","byte_start":192800,"byte_end":192803,"line_start":1270,"line_end":1270,"column_start":5,"column_end":8}},{"value":"/ Caught panic (if any) will be the last element of the resulting stream.","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\stream\\mod.rs","byte_start":192808,"byte_end":192883,"line_start":1271,"line_end":1271,"column_start":5,"column_end":80}},{"value":"/","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\stream\\mod.rs","byte_start":192888,"byte_end":192891,"line_start":1272,"line_end":1272,"column_start":5,"column_end":8}},{"value":"/ In general, panics within a stream can propagate all the way out to the","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\stream\\mod.rs","byte_start":192896,"byte_end":192971,"line_start":1273,"line_end":1273,"column_start":5,"column_end":80}},{"value":"/ task level. This combinator makes it possible to halt unwinding within","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\stream\\mod.rs","byte_start":192976,"byte_end":193050,"line_start":1274,"line_end":1274,"column_start":5,"column_end":79}},{"value":"/ the stream itself. It's most commonly used within task executors. This","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\stream\\mod.rs","byte_start":193055,"byte_end":193129,"line_start":1275,"line_end":1275,"column_start":5,"column_end":79}},{"value":"/ method should not be used for error handling.","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\stream\\mod.rs","byte_start":193134,"byte_end":193183,"line_start":1276,"line_end":1276,"column_start":5,"column_end":54}},{"value":"/","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\stream\\mod.rs","byte_start":193188,"byte_end":193191,"line_start":1277,"line_end":1277,"column_start":5,"column_end":8}},{"value":"/ Note that this method requires the `UnwindSafe` bound from the standard","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\stream\\mod.rs","byte_start":193196,"byte_end":193271,"line_start":1278,"line_end":1278,"column_start":5,"column_end":80}},{"value":"/ library. This isn't always applied automatically, and the standard","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\stream\\mod.rs","byte_start":193276,"byte_end":193346,"line_start":1279,"line_end":1279,"column_start":5,"column_end":75}},{"value":"/ library provides an `AssertUnwindSafe` wrapper type to apply it","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\stream\\mod.rs","byte_start":193351,"byte_end":193418,"line_start":1280,"line_end":1280,"column_start":5,"column_end":72}},{"value":"/ after-the fact. To assist using this method, the [`Stream`] trait is","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\stream\\mod.rs","byte_start":193423,"byte_end":193495,"line_start":1281,"line_end":1281,"column_start":5,"column_end":77}},{"value":"/ also implemented for `AssertUnwindSafe<St>` where `St` implements","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\stream\\mod.rs","byte_start":193500,"byte_end":193569,"line_start":1282,"line_end":1282,"column_start":5,"column_end":74}},{"value":"/ [`Stream`].","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\stream\\mod.rs","byte_start":193574,"byte_end":193589,"line_start":1283,"line_end":1283,"column_start":5,"column_end":20}},{"value":"/","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\stream\\mod.rs","byte_start":193594,"byte_end":193597,"line_start":1284,"line_end":1284,"column_start":5,"column_end":8}},{"value":"/ This method is only available when the `std` feature of this","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\stream\\mod.rs","byte_start":193602,"byte_end":193666,"line_start":1285,"line_end":1285,"column_start":5,"column_end":69}},{"value":"/ library is activated, and it is activated by default.","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\stream\\mod.rs","byte_start":193671,"byte_end":193728,"line_start":1286,"line_end":1286,"column_start":5,"column_end":62}},{"value":"/","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\stream\\mod.rs","byte_start":193733,"byte_end":193736,"line_start":1287,"line_end":1287,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\stream\\mod.rs","byte_start":193741,"byte_end":193755,"line_start":1288,"line_end":1288,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\stream\\mod.rs","byte_start":193760,"byte_end":193763,"line_start":1289,"line_end":1289,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\stream\\mod.rs","byte_start":193768,"byte_end":193775,"line_start":1290,"line_end":1290,"column_start":5,"column_end":12}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\stream\\mod.rs","byte_start":193780,"byte_end":193821,"line_start":1291,"line_end":1291,"column_start":5,"column_end":46}},{"value":"/ use futures::stream::{self, StreamExt};","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\stream\\mod.rs","byte_start":193826,"byte_end":193869,"line_start":1292,"line_end":1292,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\stream\\mod.rs","byte_start":193874,"byte_end":193877,"line_start":1293,"line_end":1293,"column_start":5,"column_end":8}},{"value":"/ let stream = stream::iter(vec![Some(10), None, Some(11)]);","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\stream\\mod.rs","byte_start":193882,"byte_end":193944,"line_start":1294,"line_end":1294,"column_start":5,"column_end":67}},{"value":"/ // Panic on second element","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\stream\\mod.rs","byte_start":193949,"byte_end":193979,"line_start":1295,"line_end":1295,"column_start":5,"column_end":35}},{"value":"/ let stream_panicking = stream.map(|o| o.unwrap());","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\stream\\mod.rs","byte_start":193984,"byte_end":194038,"line_start":1296,"line_end":1296,"column_start":5,"column_end":59}},{"value":"/ // Collect all the results","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\stream\\mod.rs","byte_start":194043,"byte_end":194073,"line_start":1297,"line_end":1297,"column_start":5,"column_end":35}},{"value":"/ let stream = stream_panicking.catch_unwind();","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\stream\\mod.rs","byte_start":194078,"byte_end":194127,"line_start":1298,"line_end":1298,"column_start":5,"column_end":54}},{"value":"/","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\stream\\mod.rs","byte_start":194132,"byte_end":194135,"line_start":1299,"line_end":1299,"column_start":5,"column_end":8}},{"value":"/ let results: Vec<Result<i32, _>> = stream.collect().await;","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\stream\\mod.rs","byte_start":194140,"byte_end":194202,"line_start":1300,"line_end":1300,"column_start":5,"column_end":67}},{"value":"/ match results[0] {","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\stream\\mod.rs","byte_start":194207,"byte_end":194229,"line_start":1301,"line_end":1301,"column_start":5,"column_end":27}},{"value":"/     Ok(10) => {}","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\stream\\mod.rs","byte_start":194234,"byte_end":194254,"line_start":1302,"line_end":1302,"column_start":5,"column_end":25}},{"value":"/     _ => panic!(\"unexpected result!\"),","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\stream\\mod.rs","byte_start":194259,"byte_end":194301,"line_start":1303,"line_end":1303,"column_start":5,"column_end":47}},{"value":"/ }","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\stream\\mod.rs","byte_start":194306,"byte_end":194311,"line_start":1304,"line_end":1304,"column_start":5,"column_end":10}},{"value":"/ assert!(results[1].is_err());","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\stream\\mod.rs","byte_start":194316,"byte_end":194349,"line_start":1305,"line_end":1305,"column_start":5,"column_end":38}},{"value":"/ assert_eq!(results.len(), 2);","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\stream\\mod.rs","byte_start":194354,"byte_end":194387,"line_start":1306,"line_end":1306,"column_start":5,"column_end":38}},{"value":"/ # });","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\stream\\mod.rs","byte_start":194392,"byte_end":194401,"line_start":1307,"line_end":1307,"column_start":5,"column_end":14}},{"value":"/ ```","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\stream\\mod.rs","byte_start":194406,"byte_end":194413,"line_start":1308,"line_end":1308,"column_start":5,"column_end":12}},{"value":"cfg(feature = \"std\")","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\stream\\mod.rs","byte_start":194418,"byte_end":194441,"line_start":1309,"line_end":1309,"column_start":5,"column_end":28}}]},{"kind":"Method","id":{"krate":0,"index":4272},"span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\stream\\mod.rs","byte_start":194837,"byte_end":194842,"line_start":1322,"line_end":1322,"column_start":8,"column_end":13},"name":"boxed","qualname":"::stream::stream::StreamExt::boxed","value":"pub fn boxed<'a>(Self) -> BoxStream where Self: Sized + Send + 'a","parent":{"krate":0,"index":4200},"children":[],"decl_id":null,"docs":" Wrap the stream in a Box, pinning it.","sig":null,"attributes":[{"value":"/ Wrap the stream in a Box, pinning it.","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\stream\\mod.rs","byte_start":194608,"byte_end":194649,"line_start":1317,"line_end":1317,"column_start":5,"column_end":46}},{"value":"/","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\stream\\mod.rs","byte_start":194654,"byte_end":194657,"line_start":1318,"line_end":1318,"column_start":5,"column_end":8}},{"value":"/ This method is only available when the `std` or `alloc` feature of this","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\stream\\mod.rs","byte_start":194662,"byte_end":194737,"line_start":1319,"line_end":1319,"column_start":5,"column_end":80}},{"value":"/ library is activated, and it is activated by default.","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\stream\\mod.rs","byte_start":194742,"byte_end":194799,"line_start":1320,"line_end":1320,"column_start":5,"column_end":62}},{"value":"cfg(feature = \"alloc\")","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\stream\\mod.rs","byte_start":194804,"byte_end":194829,"line_start":1321,"line_end":1321,"column_start":5,"column_end":30}}]},{"kind":"Method","id":{"krate":0,"index":4274},"span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\stream\\mod.rs","byte_start":195298,"byte_end":195309,"line_start":1336,"line_end":1336,"column_start":8,"column_end":19},"name":"boxed_local","qualname":"::stream::stream::StreamExt::boxed_local","value":"pub fn boxed_local<'a>(Self) -> LocalBoxStream where Self: Sized + 'a","parent":{"krate":0,"index":4200},"children":[],"decl_id":null,"docs":" Wrap the stream in a Box, pinning it.","sig":null,"attributes":[{"value":"/ Wrap the stream in a Box, pinning it.","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\stream\\mod.rs","byte_start":194997,"byte_end":195038,"line_start":1329,"line_end":1329,"column_start":5,"column_end":46}},{"value":"/","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\stream\\mod.rs","byte_start":195043,"byte_end":195046,"line_start":1330,"line_end":1330,"column_start":5,"column_end":8}},{"value":"/ Similar to `boxed`, but without the `Send` requirement.","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\stream\\mod.rs","byte_start":195051,"byte_end":195110,"line_start":1331,"line_end":1331,"column_start":5,"column_end":64}},{"value":"/","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\stream\\mod.rs","byte_start":195115,"byte_end":195118,"line_start":1332,"line_end":1332,"column_start":5,"column_end":8}},{"value":"/ This method is only available when the `std` or `alloc` feature of this","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\stream\\mod.rs","byte_start":195123,"byte_end":195198,"line_start":1333,"line_end":1333,"column_start":5,"column_end":80}},{"value":"/ library is activated, and it is activated by default.","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\stream\\mod.rs","byte_start":195203,"byte_end":195260,"line_start":1334,"line_end":1334,"column_start":5,"column_end":62}},{"value":"cfg(feature = \"alloc\")","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\stream\\mod.rs","byte_start":195265,"byte_end":195290,"line_start":1335,"line_end":1335,"column_start":5,"column_end":30}}]},{"kind":"Method","id":{"krate":0,"index":4276},"span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\stream\\mod.rs","byte_start":196202,"byte_end":196210,"line_start":1357,"line_end":1357,"column_start":8,"column_end":16},"name":"buffered","qualname":"::stream::stream::StreamExt::buffered","value":"pub fn buffered(Self, usize) -> Buffered<Self> where Self::Item: Future,\nSelf: Sized","parent":{"krate":0,"index":4200},"children":[],"decl_id":null,"docs":" An adaptor for creating a buffered list of pending futures.","sig":null,"attributes":[{"value":"/ An adaptor for creating a buffered list of pending futures.","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\stream\\mod.rs","byte_start":195462,"byte_end":195525,"line_start":1343,"line_end":1343,"column_start":5,"column_end":68}},{"value":"/","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\stream\\mod.rs","byte_start":195530,"byte_end":195533,"line_start":1344,"line_end":1344,"column_start":5,"column_end":8}},{"value":"/ If this stream's item can be converted into a future, then this adaptor","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\stream\\mod.rs","byte_start":195538,"byte_end":195613,"line_start":1345,"line_end":1345,"column_start":5,"column_end":80}},{"value":"/ will buffer up to at most `n` futures and then return the outputs in the","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\stream\\mod.rs","byte_start":195618,"byte_end":195694,"line_start":1346,"line_end":1346,"column_start":5,"column_end":81}},{"value":"/ same order as the underlying stream. No more than `n` futures will be","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\stream\\mod.rs","byte_start":195699,"byte_end":195772,"line_start":1347,"line_end":1347,"column_start":5,"column_end":78}},{"value":"/ buffered at any point in time, and less than `n` may also be buffered","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\stream\\mod.rs","byte_start":195777,"byte_end":195850,"line_start":1348,"line_end":1348,"column_start":5,"column_end":78}},{"value":"/ depending on the state of each future.","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\stream\\mod.rs","byte_start":195855,"byte_end":195897,"line_start":1349,"line_end":1349,"column_start":5,"column_end":47}},{"value":"/","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\stream\\mod.rs","byte_start":195902,"byte_end":195905,"line_start":1350,"line_end":1350,"column_start":5,"column_end":8}},{"value":"/ The returned stream will be a stream of each future's output.","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\stream\\mod.rs","byte_start":195910,"byte_end":195975,"line_start":1351,"line_end":1351,"column_start":5,"column_end":70}},{"value":"/","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\stream\\mod.rs","byte_start":195980,"byte_end":195983,"line_start":1352,"line_end":1352,"column_start":5,"column_end":8}},{"value":"/ This method is only available when the `std` or `alloc` feature of this","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\stream\\mod.rs","byte_start":195988,"byte_end":196063,"line_start":1353,"line_end":1353,"column_start":5,"column_end":80}},{"value":"/ library is activated, and it is activated by default.","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\stream\\mod.rs","byte_start":196068,"byte_end":196125,"line_start":1354,"line_end":1354,"column_start":5,"column_end":62}},{"value":"cfg(not(futures_no_atomic_cas))","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\stream\\mod.rs","byte_start":196130,"byte_end":196164,"line_start":1355,"line_end":1355,"column_start":5,"column_end":39}},{"value":"cfg(feature = \"alloc\")","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\stream\\mod.rs","byte_start":196169,"byte_end":196194,"line_start":1356,"line_end":1356,"column_start":5,"column_end":30}}]},{"kind":"Method","id":{"krate":0,"index":4277},"span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\stream\\mod.rs","byte_start":197890,"byte_end":197906,"line_start":1402,"line_end":1402,"column_start":8,"column_end":24},"name":"buffer_unordered","qualname":"::stream::stream::StreamExt::buffer_unordered","value":"pub fn buffer_unordered(Self, usize) -> BufferUnordered<Self> where\nSelf::Item: Future, Self: Sized","parent":{"krate":0,"index":4200},"children":[],"decl_id":null,"docs":" An adaptor for creating a buffered list of pending futures (unordered).","sig":null,"attributes":[{"value":"/ An adaptor for creating a buffered list of pending futures (unordered).","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\stream\\mod.rs","byte_start":196404,"byte_end":196479,"line_start":1365,"line_end":1365,"column_start":5,"column_end":80}},{"value":"/","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\stream\\mod.rs","byte_start":196484,"byte_end":196487,"line_start":1366,"line_end":1366,"column_start":5,"column_end":8}},{"value":"/ If this stream's item can be converted into a future, then this adaptor","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\stream\\mod.rs","byte_start":196492,"byte_end":196567,"line_start":1367,"line_end":1367,"column_start":5,"column_end":80}},{"value":"/ will buffer up to `n` futures and then return the outputs in the order","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\stream\\mod.rs","byte_start":196572,"byte_end":196646,"line_start":1368,"line_end":1368,"column_start":5,"column_end":79}},{"value":"/ in which they complete. No more than `n` futures will be buffered at","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\stream\\mod.rs","byte_start":196651,"byte_end":196723,"line_start":1369,"line_end":1369,"column_start":5,"column_end":77}},{"value":"/ any point in time, and less than `n` may also be buffered depending on","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\stream\\mod.rs","byte_start":196728,"byte_end":196802,"line_start":1370,"line_end":1370,"column_start":5,"column_end":79}},{"value":"/ the state of each future.","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\stream\\mod.rs","byte_start":196807,"byte_end":196836,"line_start":1371,"line_end":1371,"column_start":5,"column_end":34}},{"value":"/","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\stream\\mod.rs","byte_start":196841,"byte_end":196844,"line_start":1372,"line_end":1372,"column_start":5,"column_end":8}},{"value":"/ The returned stream will be a stream of each future's output.","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\stream\\mod.rs","byte_start":196849,"byte_end":196914,"line_start":1373,"line_end":1373,"column_start":5,"column_end":70}},{"value":"/","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\stream\\mod.rs","byte_start":196919,"byte_end":196922,"line_start":1374,"line_end":1374,"column_start":5,"column_end":8}},{"value":"/ This method is only available when the `std` or `alloc` feature of this","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\stream\\mod.rs","byte_start":196927,"byte_end":197002,"line_start":1375,"line_end":1375,"column_start":5,"column_end":80}},{"value":"/ library is activated, and it is activated by default.","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\stream\\mod.rs","byte_start":197007,"byte_end":197064,"line_start":1376,"line_end":1376,"column_start":5,"column_end":62}},{"value":"/","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\stream\\mod.rs","byte_start":197069,"byte_end":197072,"line_start":1377,"line_end":1377,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\stream\\mod.rs","byte_start":197077,"byte_end":197091,"line_start":1378,"line_end":1378,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\stream\\mod.rs","byte_start":197096,"byte_end":197099,"line_start":1379,"line_end":1379,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\stream\\mod.rs","byte_start":197104,"byte_end":197111,"line_start":1380,"line_end":1380,"column_start":5,"column_end":12}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\stream\\mod.rs","byte_start":197116,"byte_end":197157,"line_start":1381,"line_end":1381,"column_start":5,"column_end":46}},{"value":"/ use futures::channel::oneshot;","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\stream\\mod.rs","byte_start":197162,"byte_end":197196,"line_start":1382,"line_end":1382,"column_start":5,"column_end":39}},{"value":"/ use futures::stream::{self, StreamExt};","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\stream\\mod.rs","byte_start":197201,"byte_end":197244,"line_start":1383,"line_end":1383,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\stream\\mod.rs","byte_start":197249,"byte_end":197252,"line_start":1384,"line_end":1384,"column_start":5,"column_end":8}},{"value":"/ let (send_one, recv_one) = oneshot::channel();","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\stream\\mod.rs","byte_start":197257,"byte_end":197307,"line_start":1385,"line_end":1385,"column_start":5,"column_end":55}},{"value":"/ let (send_two, recv_two) = oneshot::channel();","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\stream\\mod.rs","byte_start":197312,"byte_end":197362,"line_start":1386,"line_end":1386,"column_start":5,"column_end":55}},{"value":"/","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\stream\\mod.rs","byte_start":197367,"byte_end":197370,"line_start":1387,"line_end":1387,"column_start":5,"column_end":8}},{"value":"/ let stream_of_futures = stream::iter(vec![recv_one, recv_two]);","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\stream\\mod.rs","byte_start":197375,"byte_end":197442,"line_start":1388,"line_end":1388,"column_start":5,"column_end":72}},{"value":"/ let mut buffered = stream_of_futures.buffer_unordered(10);","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\stream\\mod.rs","byte_start":197447,"byte_end":197509,"line_start":1389,"line_end":1389,"column_start":5,"column_end":67}},{"value":"/","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\stream\\mod.rs","byte_start":197514,"byte_end":197517,"line_start":1390,"line_end":1390,"column_start":5,"column_end":8}},{"value":"/ send_two.send(2i32)?;","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\stream\\mod.rs","byte_start":197522,"byte_end":197547,"line_start":1391,"line_end":1391,"column_start":5,"column_end":30}},{"value":"/ assert_eq!(buffered.next().await, Some(Ok(2i32)));","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\stream\\mod.rs","byte_start":197552,"byte_end":197606,"line_start":1392,"line_end":1392,"column_start":5,"column_end":59}},{"value":"/","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\stream\\mod.rs","byte_start":197611,"byte_end":197614,"line_start":1393,"line_end":1393,"column_start":5,"column_end":8}},{"value":"/ send_one.send(1i32)?;","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\stream\\mod.rs","byte_start":197619,"byte_end":197644,"line_start":1394,"line_end":1394,"column_start":5,"column_end":30}},{"value":"/ assert_eq!(buffered.next().await, Some(Ok(1i32)));","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\stream\\mod.rs","byte_start":197649,"byte_end":197703,"line_start":1395,"line_end":1395,"column_start":5,"column_end":59}},{"value":"/","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\stream\\mod.rs","byte_start":197708,"byte_end":197711,"line_start":1396,"line_end":1396,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(buffered.next().await, None);","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\stream\\mod.rs","byte_start":197716,"byte_end":197760,"line_start":1397,"line_end":1397,"column_start":5,"column_end":49}},{"value":"/ # Ok::<(), i32>(()) }).unwrap();","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\stream\\mod.rs","byte_start":197765,"byte_end":197801,"line_start":1398,"line_end":1398,"column_start":5,"column_end":41}},{"value":"/ ```","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\stream\\mod.rs","byte_start":197806,"byte_end":197813,"line_start":1399,"line_end":1399,"column_start":5,"column_end":12}},{"value":"cfg(not(futures_no_atomic_cas))","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\stream\\mod.rs","byte_start":197818,"byte_end":197852,"line_start":1400,"line_end":1400,"column_start":5,"column_end":39}},{"value":"cfg(feature = \"alloc\")","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\stream\\mod.rs","byte_start":197857,"byte_end":197882,"line_start":1401,"line_end":1401,"column_start":5,"column_end":30}}]},{"kind":"Method","id":{"krate":0,"index":4278},"span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\stream\\mod.rs","byte_start":198802,"byte_end":198805,"line_start":1432,"line_end":1432,"column_start":8,"column_end":11},"name":"zip","qualname":"::stream::stream::StreamExt::zip","value":"pub fn zip<St>(Self, St) -> Zip<Self, St> where St: Stream, Self: Sized","parent":{"krate":0,"index":4200},"children":[],"decl_id":null,"docs":" An adapter for zipping two streams together.","sig":null,"attributes":[{"value":"/ An adapter for zipping two streams together.","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\stream\\mod.rs","byte_start":198114,"byte_end":198162,"line_start":1410,"line_end":1410,"column_start":5,"column_end":53}},{"value":"/","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\stream\\mod.rs","byte_start":198167,"byte_end":198170,"line_start":1411,"line_end":1411,"column_start":5,"column_end":8}},{"value":"/ The zipped stream waits for both streams to produce an item, and then","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\stream\\mod.rs","byte_start":198175,"byte_end":198248,"line_start":1412,"line_end":1412,"column_start":5,"column_end":78}},{"value":"/ returns that pair. If either stream ends then the zipped stream will","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\stream\\mod.rs","byte_start":198253,"byte_end":198325,"line_start":1413,"line_end":1413,"column_start":5,"column_end":77}},{"value":"/ also end.","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\stream\\mod.rs","byte_start":198330,"byte_end":198343,"line_start":1414,"line_end":1414,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\stream\\mod.rs","byte_start":198348,"byte_end":198351,"line_start":1415,"line_end":1415,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\stream\\mod.rs","byte_start":198356,"byte_end":198370,"line_start":1416,"line_end":1416,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\stream\\mod.rs","byte_start":198375,"byte_end":198378,"line_start":1417,"line_end":1417,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\stream\\mod.rs","byte_start":198383,"byte_end":198390,"line_start":1418,"line_end":1418,"column_start":5,"column_end":12}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\stream\\mod.rs","byte_start":198395,"byte_end":198436,"line_start":1419,"line_end":1419,"column_start":5,"column_end":46}},{"value":"/ use futures::stream::{self, StreamExt};","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\stream\\mod.rs","byte_start":198441,"byte_end":198484,"line_start":1420,"line_end":1420,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\stream\\mod.rs","byte_start":198489,"byte_end":198492,"line_start":1421,"line_end":1421,"column_start":5,"column_end":8}},{"value":"/ let stream1 = stream::iter(1..=3);","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\stream\\mod.rs","byte_start":198497,"byte_end":198535,"line_start":1422,"line_end":1422,"column_start":5,"column_end":43}},{"value":"/ let stream2 = stream::iter(5..=10);","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\stream\\mod.rs","byte_start":198540,"byte_end":198579,"line_start":1423,"line_end":1423,"column_start":5,"column_end":44}},{"value":"/","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\stream\\mod.rs","byte_start":198584,"byte_end":198587,"line_start":1424,"line_end":1424,"column_start":5,"column_end":8}},{"value":"/ let vec = stream1.zip(stream2)","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\stream\\mod.rs","byte_start":198592,"byte_end":198626,"line_start":1425,"line_end":1425,"column_start":5,"column_end":39}},{"value":"/                  .collect::<Vec<_>>()","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\stream\\mod.rs","byte_start":198631,"byte_end":198672,"line_start":1426,"line_end":1426,"column_start":5,"column_end":46}},{"value":"/                  .await;","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\stream\\mod.rs","byte_start":198677,"byte_end":198705,"line_start":1427,"line_end":1427,"column_start":5,"column_end":33}},{"value":"/ assert_eq!(vec![(1, 5), (2, 6), (3, 7)], vec);","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\stream\\mod.rs","byte_start":198710,"byte_end":198760,"line_start":1428,"line_end":1428,"column_start":5,"column_end":55}},{"value":"/ # });","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\stream\\mod.rs","byte_start":198765,"byte_end":198774,"line_start":1429,"line_end":1429,"column_start":5,"column_end":14}},{"value":"/ ```","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\stream\\mod.rs","byte_start":198779,"byte_end":198786,"line_start":1430,"line_end":1430,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\stream\\mod.rs","byte_start":198791,"byte_end":198794,"line_start":1431,"line_end":1431,"column_start":5,"column_end":8}}]},{"kind":"Method","id":{"krate":0,"index":4280},"span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\stream\\mod.rs","byte_start":199713,"byte_end":199718,"line_start":1463,"line_end":1463,"column_start":8,"column_end":13},"name":"chain","qualname":"::stream::stream::StreamExt::chain","value":"pub fn chain<St>(Self, St) -> Chain<Self, St> where St: Stream<Item =\nSelf::Item>, Self: Sized","parent":{"krate":0,"index":4200},"children":[],"decl_id":null,"docs":" Adapter for chaining two streams.","sig":null,"attributes":[{"value":"/ Adapter for chaining two streams.","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\stream\\mod.rs","byte_start":198986,"byte_end":199023,"line_start":1440,"line_end":1440,"column_start":5,"column_end":42}},{"value":"/","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\stream\\mod.rs","byte_start":199028,"byte_end":199031,"line_start":1441,"line_end":1441,"column_start":5,"column_end":8}},{"value":"/ The resulting stream emits elements from the first stream, and when","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\stream\\mod.rs","byte_start":199036,"byte_end":199107,"line_start":1442,"line_end":1442,"column_start":5,"column_end":76}},{"value":"/ first stream reaches the end, emits the elements from the second stream.","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\stream\\mod.rs","byte_start":199112,"byte_end":199188,"line_start":1443,"line_end":1443,"column_start":5,"column_end":81}},{"value":"/","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\stream\\mod.rs","byte_start":199193,"byte_end":199196,"line_start":1444,"line_end":1444,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\stream\\mod.rs","byte_start":199201,"byte_end":199208,"line_start":1445,"line_end":1445,"column_start":5,"column_end":12}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\stream\\mod.rs","byte_start":199213,"byte_end":199254,"line_start":1446,"line_end":1446,"column_start":5,"column_end":46}},{"value":"/ use futures::stream::{self, StreamExt};","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\stream\\mod.rs","byte_start":199259,"byte_end":199302,"line_start":1447,"line_end":1447,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\stream\\mod.rs","byte_start":199307,"byte_end":199310,"line_start":1448,"line_end":1448,"column_start":5,"column_end":8}},{"value":"/ let stream1 = stream::iter(vec![Ok(10), Err(false)]);","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\stream\\mod.rs","byte_start":199315,"byte_end":199372,"line_start":1449,"line_end":1449,"column_start":5,"column_end":62}},{"value":"/ let stream2 = stream::iter(vec![Err(true), Ok(20)]);","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\stream\\mod.rs","byte_start":199377,"byte_end":199433,"line_start":1450,"line_end":1450,"column_start":5,"column_end":61}},{"value":"/","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\stream\\mod.rs","byte_start":199438,"byte_end":199441,"line_start":1451,"line_end":1451,"column_start":5,"column_end":8}},{"value":"/ let stream = stream1.chain(stream2);","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\stream\\mod.rs","byte_start":199446,"byte_end":199486,"line_start":1452,"line_end":1452,"column_start":5,"column_end":45}},{"value":"/","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\stream\\mod.rs","byte_start":199491,"byte_end":199494,"line_start":1453,"line_end":1453,"column_start":5,"column_end":8}},{"value":"/ let result: Vec<_> = stream.collect().await;","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\stream\\mod.rs","byte_start":199499,"byte_end":199547,"line_start":1454,"line_end":1454,"column_start":5,"column_end":53}},{"value":"/ assert_eq!(result, vec![","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\stream\\mod.rs","byte_start":199552,"byte_end":199580,"line_start":1455,"line_end":1455,"column_start":5,"column_end":33}},{"value":"/     Ok(10),","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\stream\\mod.rs","byte_start":199585,"byte_end":199600,"line_start":1456,"line_end":1456,"column_start":5,"column_end":20}},{"value":"/     Err(false),","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\stream\\mod.rs","byte_start":199605,"byte_end":199624,"line_start":1457,"line_end":1457,"column_start":5,"column_end":24}},{"value":"/     Err(true),","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\stream\\mod.rs","byte_start":199629,"byte_end":199647,"line_start":1458,"line_end":1458,"column_start":5,"column_end":23}},{"value":"/     Ok(20),","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\stream\\mod.rs","byte_start":199652,"byte_end":199667,"line_start":1459,"line_end":1459,"column_start":5,"column_end":20}},{"value":"/ ]);","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\stream\\mod.rs","byte_start":199672,"byte_end":199679,"line_start":1460,"line_end":1460,"column_start":5,"column_end":12}},{"value":"/ # });","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\stream\\mod.rs","byte_start":199684,"byte_end":199693,"line_start":1461,"line_end":1461,"column_start":5,"column_end":14}},{"value":"/ ```","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\stream\\mod.rs","byte_start":199698,"byte_end":199705,"line_start":1462,"line_end":1462,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":4282},"span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\stream\\mod.rs","byte_start":200056,"byte_end":200064,"line_start":1474,"line_end":1474,"column_start":8,"column_end":16},"name":"peekable","qualname":"::stream::stream::StreamExt::peekable","value":"pub fn peekable(Self) -> Peekable<Self> where Self: Sized","parent":{"krate":0,"index":4200},"children":[],"decl_id":null,"docs":" Creates a new stream which exposes a `peek` method.","sig":null,"attributes":[{"value":"/ Creates a new stream which exposes a `peek` method.","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\stream\\mod.rs","byte_start":199910,"byte_end":199965,"line_start":1471,"line_end":1471,"column_start":5,"column_end":60}},{"value":"/","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\stream\\mod.rs","byte_start":199970,"byte_end":199973,"line_start":1472,"line_end":1472,"column_start":5,"column_end":8}},{"value":"/ Calling `peek` returns a reference to the next item in the stream.","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\stream\\mod.rs","byte_start":199978,"byte_end":200048,"line_start":1473,"line_end":1473,"column_start":5,"column_end":75}}]},{"kind":"Method","id":{"krate":0,"index":4283},"span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\stream\\mod.rs","byte_start":201099,"byte_end":201105,"line_start":1500,"line_end":1500,"column_start":8,"column_end":14},"name":"chunks","qualname":"::stream::stream::StreamExt::chunks","value":"pub fn chunks(Self, usize) -> Chunks<Self> where Self: Sized","parent":{"krate":0,"index":4200},"children":[],"decl_id":null,"docs":" An adaptor for chunking up items of the stream inside a vector.","sig":null,"attributes":[{"value":"/ An adaptor for chunking up items of the stream inside a vector.","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\stream\\mod.rs","byte_start":200197,"byte_end":200264,"line_start":1481,"line_end":1481,"column_start":5,"column_end":72}},{"value":"/","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\stream\\mod.rs","byte_start":200269,"byte_end":200272,"line_start":1482,"line_end":1482,"column_start":5,"column_end":8}},{"value":"/ This combinator will attempt to pull items from this stream and buffer","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\stream\\mod.rs","byte_start":200277,"byte_end":200351,"line_start":1483,"line_end":1483,"column_start":5,"column_end":79}},{"value":"/ them into a local vector. At most `capacity` items will get buffered","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\stream\\mod.rs","byte_start":200356,"byte_end":200428,"line_start":1484,"line_end":1484,"column_start":5,"column_end":77}},{"value":"/ before they're yielded from the returned stream.","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\stream\\mod.rs","byte_start":200433,"byte_end":200485,"line_start":1485,"line_end":1485,"column_start":5,"column_end":57}},{"value":"/","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\stream\\mod.rs","byte_start":200490,"byte_end":200493,"line_start":1486,"line_end":1486,"column_start":5,"column_end":8}},{"value":"/ Note that the vectors returned from this iterator may not always have","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\stream\\mod.rs","byte_start":200498,"byte_end":200571,"line_start":1487,"line_end":1487,"column_start":5,"column_end":78}},{"value":"/ `capacity` elements. If the underlying stream ended and only a partial","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\stream\\mod.rs","byte_start":200576,"byte_end":200650,"line_start":1488,"line_end":1488,"column_start":5,"column_end":79}},{"value":"/ vector was created, it'll be returned. Additionally if an error happens","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\stream\\mod.rs","byte_start":200655,"byte_end":200730,"line_start":1489,"line_end":1489,"column_start":5,"column_end":80}},{"value":"/ from the underlying stream then the currently buffered items will be","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\stream\\mod.rs","byte_start":200735,"byte_end":200807,"line_start":1490,"line_end":1490,"column_start":5,"column_end":77}},{"value":"/ yielded.","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\stream\\mod.rs","byte_start":200812,"byte_end":200824,"line_start":1491,"line_end":1491,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\stream\\mod.rs","byte_start":200829,"byte_end":200832,"line_start":1492,"line_end":1492,"column_start":5,"column_end":8}},{"value":"/ This method is only available when the `std` or `alloc` feature of this","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\stream\\mod.rs","byte_start":200837,"byte_end":200912,"line_start":1493,"line_end":1493,"column_start":5,"column_end":80}},{"value":"/ library is activated, and it is activated by default.","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\stream\\mod.rs","byte_start":200917,"byte_end":200974,"line_start":1494,"line_end":1494,"column_start":5,"column_end":62}},{"value":"/","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\stream\\mod.rs","byte_start":200979,"byte_end":200982,"line_start":1495,"line_end":1495,"column_start":5,"column_end":8}},{"value":"/ # Panics","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\stream\\mod.rs","byte_start":200987,"byte_end":200999,"line_start":1496,"line_end":1496,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\stream\\mod.rs","byte_start":201004,"byte_end":201007,"line_start":1497,"line_end":1497,"column_start":5,"column_end":8}},{"value":"/ This method will panic if `capacity` is zero.","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\stream\\mod.rs","byte_start":201012,"byte_end":201061,"line_start":1498,"line_end":1498,"column_start":5,"column_end":54}},{"value":"cfg(feature = \"alloc\")","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\stream\\mod.rs","byte_start":201066,"byte_end":201091,"line_start":1499,"line_end":1499,"column_start":5,"column_end":30}}]},{"kind":"Method","id":{"krate":0,"index":4284},"span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\stream\\mod.rs","byte_start":202202,"byte_end":202214,"line_start":1526,"line_end":1526,"column_start":8,"column_end":20},"name":"ready_chunks","qualname":"::stream::stream::StreamExt::ready_chunks","value":"pub fn ready_chunks(Self, usize) -> ReadyChunks<Self> where Self: Sized","parent":{"krate":0,"index":4200},"children":[],"decl_id":null,"docs":" An adaptor for chunking up ready items of the stream inside a vector.","sig":null,"attributes":[{"value":"/ An adaptor for chunking up ready items of the stream inside a vector.","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\stream\\mod.rs","byte_start":201266,"byte_end":201339,"line_start":1507,"line_end":1507,"column_start":5,"column_end":78}},{"value":"/","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\stream\\mod.rs","byte_start":201344,"byte_end":201347,"line_start":1508,"line_end":1508,"column_start":5,"column_end":8}},{"value":"/ This combinator will attempt to pull ready items from this stream and","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\stream\\mod.rs","byte_start":201352,"byte_end":201425,"line_start":1509,"line_end":1509,"column_start":5,"column_end":78}},{"value":"/ buffer them into a local vector. At most `capacity` items will get","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\stream\\mod.rs","byte_start":201430,"byte_end":201500,"line_start":1510,"line_end":1510,"column_start":5,"column_end":75}},{"value":"/ buffered before they're yielded from the returned stream. If underlying","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\stream\\mod.rs","byte_start":201505,"byte_end":201580,"line_start":1511,"line_end":1511,"column_start":5,"column_end":80}},{"value":"/ stream returns `Poll::Pending`, and collected chunk is not empty, it will","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\stream\\mod.rs","byte_start":201585,"byte_end":201662,"line_start":1512,"line_end":1512,"column_start":5,"column_end":82}},{"value":"/ be immediately returned.","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\stream\\mod.rs","byte_start":201667,"byte_end":201695,"line_start":1513,"line_end":1513,"column_start":5,"column_end":33}},{"value":"/","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\stream\\mod.rs","byte_start":201700,"byte_end":201703,"line_start":1514,"line_end":1514,"column_start":5,"column_end":8}},{"value":"/ If the underlying stream ended and only a partial vector was created,","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\stream\\mod.rs","byte_start":201708,"byte_end":201781,"line_start":1515,"line_end":1515,"column_start":5,"column_end":78}},{"value":"/ it'll be returned. Additionally if an error happens from the underlying","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\stream\\mod.rs","byte_start":201786,"byte_end":201861,"line_start":1516,"line_end":1516,"column_start":5,"column_end":80}},{"value":"/ stream then the currently buffered items will be yielded.","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\stream\\mod.rs","byte_start":201866,"byte_end":201927,"line_start":1517,"line_end":1517,"column_start":5,"column_end":66}},{"value":"/","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\stream\\mod.rs","byte_start":201932,"byte_end":201935,"line_start":1518,"line_end":1518,"column_start":5,"column_end":8}},{"value":"/ This method is only available when the `std` or `alloc` feature of this","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\stream\\mod.rs","byte_start":201940,"byte_end":202015,"line_start":1519,"line_end":1519,"column_start":5,"column_end":80}},{"value":"/ library is activated, and it is activated by default.","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\stream\\mod.rs","byte_start":202020,"byte_end":202077,"line_start":1520,"line_end":1520,"column_start":5,"column_end":62}},{"value":"/","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\stream\\mod.rs","byte_start":202082,"byte_end":202085,"line_start":1521,"line_end":1521,"column_start":5,"column_end":8}},{"value":"/ # Panics","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\stream\\mod.rs","byte_start":202090,"byte_end":202102,"line_start":1522,"line_end":1522,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\stream\\mod.rs","byte_start":202107,"byte_end":202110,"line_start":1523,"line_end":1523,"column_start":5,"column_end":8}},{"value":"/ This method will panic if `capacity` is zero.","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\stream\\mod.rs","byte_start":202115,"byte_end":202164,"line_start":1524,"line_end":1524,"column_start":5,"column_end":54}},{"value":"cfg(feature = \"alloc\")","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\stream\\mod.rs","byte_start":202169,"byte_end":202194,"line_start":1525,"line_end":1525,"column_start":5,"column_end":30}}]},{"kind":"Method","id":{"krate":0,"index":4285},"span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\stream\\mod.rs","byte_start":203252,"byte_end":203259,"line_start":1546,"line_end":1546,"column_start":8,"column_end":15},"name":"forward","qualname":"::stream::stream::StreamExt::forward","value":"pub fn forward<S>(Self, S) -> Forward<Self, S> where S: Sink<Self::Ok, Error =\nSelf::Error>, Self: TryStream + Sized","parent":{"krate":0,"index":4200},"children":[],"decl_id":null,"docs":" A future that completes after the given stream has been fully processed\n into the sink and the sink has been flushed and closed.","sig":null,"attributes":[{"value":"/ A future that completes after the given stream has been fully processed","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\stream\\mod.rs","byte_start":202385,"byte_end":202460,"line_start":1533,"line_end":1533,"column_start":5,"column_end":80}},{"value":"/ into the sink and the sink has been flushed and closed.","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\stream\\mod.rs","byte_start":202465,"byte_end":202524,"line_start":1534,"line_end":1534,"column_start":5,"column_end":64}},{"value":"/","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\stream\\mod.rs","byte_start":202529,"byte_end":202532,"line_start":1535,"line_end":1535,"column_start":5,"column_end":8}},{"value":"/ This future will drive the stream to keep producing items until it is","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\stream\\mod.rs","byte_start":202537,"byte_end":202610,"line_start":1536,"line_end":1536,"column_start":5,"column_end":78}},{"value":"/ exhausted, sending each item to the sink. It will complete once the","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\stream\\mod.rs","byte_start":202615,"byte_end":202686,"line_start":1537,"line_end":1537,"column_start":5,"column_end":76}},{"value":"/ stream is exhausted, the sink has received and flushed all items, and","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\stream\\mod.rs","byte_start":202691,"byte_end":202764,"line_start":1538,"line_end":1538,"column_start":5,"column_end":78}},{"value":"/ the sink is closed. Note that neither the original stream nor provided","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\stream\\mod.rs","byte_start":202769,"byte_end":202843,"line_start":1539,"line_end":1539,"column_start":5,"column_end":79}},{"value":"/ sink will be output by this future. Pass the sink by `Pin<&mut S>`","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\stream\\mod.rs","byte_start":202848,"byte_end":202918,"line_start":1540,"line_end":1540,"column_start":5,"column_end":75}},{"value":"/ (for example, via `forward(&mut sink)` inside an `async` fn/block) in","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\stream\\mod.rs","byte_start":202923,"byte_end":202996,"line_start":1541,"line_end":1541,"column_start":5,"column_end":78}},{"value":"/ order to preserve access to the `Sink`. If the stream produces an error,","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\stream\\mod.rs","byte_start":203001,"byte_end":203077,"line_start":1542,"line_end":1542,"column_start":5,"column_end":81}},{"value":"/ that error will be returned by this future without flushing/closing the sink.","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\stream\\mod.rs","byte_start":203082,"byte_end":203163,"line_start":1543,"line_end":1543,"column_start":5,"column_end":86}},{"value":"cfg(feature = \"sink\")","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\stream\\mod.rs","byte_start":203168,"byte_end":203192,"line_start":1544,"line_end":1544,"column_start":5,"column_end":29}}]},{"kind":"Method","id":{"krate":0,"index":4287},"span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\stream\\mod.rs","byte_start":204394,"byte_end":204399,"line_start":1570,"line_end":1570,"column_start":8,"column_end":13},"name":"split","qualname":"::stream::stream::StreamExt::split","value":"pub fn split<Item>(Self) -> (SplitSink<Self, Item>, SplitStream<Self>) where\nSelf: Sink<Item> + Sized","parent":{"krate":0,"index":4200},"children":[],"decl_id":null,"docs":" Splits this `Stream + Sink` object into separate `Sink` and `Stream`\n objects.","sig":null,"attributes":[{"value":"/ Splits this `Stream + Sink` object into separate `Sink` and `Stream`","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\stream\\mod.rs","byte_start":203817,"byte_end":203889,"line_start":1557,"line_end":1557,"column_start":5,"column_end":77}},{"value":"/ objects.","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\stream\\mod.rs","byte_start":203894,"byte_end":203906,"line_start":1558,"line_end":1558,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\stream\\mod.rs","byte_start":203911,"byte_end":203914,"line_start":1559,"line_end":1559,"column_start":5,"column_end":8}},{"value":"/ This can be useful when you want to split ownership between tasks, or","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\stream\\mod.rs","byte_start":203919,"byte_end":203992,"line_start":1560,"line_end":1560,"column_start":5,"column_end":78}},{"value":"/ allow direct interaction between the two objects (e.g. via","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\stream\\mod.rs","byte_start":203997,"byte_end":204059,"line_start":1561,"line_end":1561,"column_start":5,"column_end":67}},{"value":"/ `Sink::send_all`).","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\stream\\mod.rs","byte_start":204064,"byte_end":204086,"line_start":1562,"line_end":1562,"column_start":5,"column_end":27}},{"value":"/","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\stream\\mod.rs","byte_start":204091,"byte_end":204094,"line_start":1563,"line_end":1563,"column_start":5,"column_end":8}},{"value":"/ This method is only available when the `std` or `alloc` feature of this","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\stream\\mod.rs","byte_start":204099,"byte_end":204174,"line_start":1564,"line_end":1564,"column_start":5,"column_end":80}},{"value":"/ library is activated, and it is activated by default.","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\stream\\mod.rs","byte_start":204179,"byte_end":204236,"line_start":1565,"line_end":1565,"column_start":5,"column_end":62}},{"value":"cfg(feature = \"sink\")","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\stream\\mod.rs","byte_start":204241,"byte_end":204265,"line_start":1566,"line_end":1566,"column_start":5,"column_end":29}},{"value":"cfg(not(futures_no_atomic_cas))","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\stream\\mod.rs","byte_start":204322,"byte_end":204356,"line_start":1568,"line_end":1568,"column_start":5,"column_end":39}},{"value":"cfg(feature = \"alloc\")","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\stream\\mod.rs","byte_start":204361,"byte_end":204386,"line_start":1569,"line_end":1569,"column_start":5,"column_end":30}}]},{"kind":"Method","id":{"krate":0,"index":4289},"span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\stream\\mod.rs","byte_start":205011,"byte_end":205018,"line_start":1586,"line_end":1586,"column_start":8,"column_end":15},"name":"inspect","qualname":"::stream::stream::StreamExt::inspect","value":"pub fn inspect<F>(Self, F) -> Inspect<Self, F> where F: FnMut(&Self::Item) ->\n(), Self: Sized","parent":{"krate":0,"index":4200},"children":[],"decl_id":null,"docs":" Do something with each item of this stream, afterwards passing it on.","sig":null,"attributes":[{"value":"/ Do something with each item of this stream, afterwards passing it on.","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\stream\\mod.rs","byte_start":204708,"byte_end":204781,"line_start":1581,"line_end":1581,"column_start":5,"column_end":78}},{"value":"/","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\stream\\mod.rs","byte_start":204786,"byte_end":204789,"line_start":1582,"line_end":1582,"column_start":5,"column_end":8}},{"value":"/ This is similar to the `Iterator::inspect` method in the standard","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\stream\\mod.rs","byte_start":204794,"byte_end":204863,"line_start":1583,"line_end":1583,"column_start":5,"column_end":74}},{"value":"/ library where it allows easily inspecting each value as it passes","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\stream\\mod.rs","byte_start":204868,"byte_end":204937,"line_start":1584,"line_end":1584,"column_start":5,"column_end":74}},{"value":"/ through the stream, for example to debug what's going on.","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\stream\\mod.rs","byte_start":204942,"byte_end":205003,"line_start":1585,"line_end":1585,"column_start":5,"column_end":66}}]},{"kind":"Method","id":{"krate":0,"index":4291},"span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\stream\\mod.rs","byte_start":205474,"byte_end":205485,"line_start":1599,"line_end":1599,"column_start":8,"column_end":19},"name":"left_stream","qualname":"::stream::stream::StreamExt::left_stream","value":"pub fn left_stream<B>(Self) -> Either<Self, B> where B: Stream<Item =\nSelf::Item>, Self: Sized","parent":{"krate":0,"index":4200},"children":[],"decl_id":null,"docs":" Wrap this stream in an `Either` stream, making it the left-hand variant\n of that `Either`.","sig":null,"attributes":[{"value":"/ Wrap this stream in an `Either` stream, making it the left-hand variant","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\stream\\mod.rs","byte_start":205195,"byte_end":205270,"line_start":1594,"line_end":1594,"column_start":5,"column_end":80}},{"value":"/ of that `Either`.","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\stream\\mod.rs","byte_start":205275,"byte_end":205296,"line_start":1595,"line_end":1595,"column_start":5,"column_end":26}},{"value":"/","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\stream\\mod.rs","byte_start":205301,"byte_end":205304,"line_start":1596,"line_end":1596,"column_start":5,"column_end":8}},{"value":"/ This can be used in combination with the `right_stream` method to write `if`","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\stream\\mod.rs","byte_start":205309,"byte_end":205389,"line_start":1597,"line_end":1597,"column_start":5,"column_end":85}},{"value":"/ statements that evaluate to different streams in different branches.","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\stream\\mod.rs","byte_start":205394,"byte_end":205466,"line_start":1598,"line_end":1598,"column_start":5,"column_end":77}}]},{"kind":"Method","id":{"krate":0,"index":4293},"span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\stream\\mod.rs","byte_start":205938,"byte_end":205950,"line_start":1612,"line_end":1612,"column_start":8,"column_end":20},"name":"right_stream","qualname":"::stream::stream::StreamExt::right_stream","value":"pub fn right_stream<B>(Self) -> Either<B, Self> where B: Stream<Item =\nSelf::Item>, Self: Sized","parent":{"krate":0,"index":4200},"children":[],"decl_id":null,"docs":" Wrap this stream in an `Either` stream, making it the right-hand variant\n of that `Either`.","sig":null,"attributes":[{"value":"/ Wrap this stream in an `Either` stream, making it the right-hand variant","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\stream\\mod.rs","byte_start":205659,"byte_end":205735,"line_start":1607,"line_end":1607,"column_start":5,"column_end":81}},{"value":"/ of that `Either`.","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\stream\\mod.rs","byte_start":205740,"byte_end":205761,"line_start":1608,"line_end":1608,"column_start":5,"column_end":26}},{"value":"/","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\stream\\mod.rs","byte_start":205766,"byte_end":205769,"line_start":1609,"line_end":1609,"column_start":5,"column_end":8}},{"value":"/ This can be used in combination with the `left_stream` method to write `if`","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\stream\\mod.rs","byte_start":205774,"byte_end":205853,"line_start":1610,"line_end":1610,"column_start":5,"column_end":84}},{"value":"/ statements that evaluate to different streams in different branches.","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\stream\\mod.rs","byte_start":205858,"byte_end":205930,"line_start":1611,"line_end":1611,"column_start":5,"column_end":77}}]},{"kind":"Method","id":{"krate":0,"index":4295},"span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\stream\\mod.rs","byte_start":206226,"byte_end":206241,"line_start":1622,"line_end":1622,"column_start":8,"column_end":23},"name":"poll_next_unpin","qualname":"::stream::stream::StreamExt::poll_next_unpin","value":"pub fn poll_next_unpin(&mut Self, &mut Context) -> Poll<Option<Self::Item>>\nwhere Self: Unpin","parent":{"krate":0,"index":4200},"children":[],"decl_id":null,"docs":" A convenience method for calling [`Stream::poll_next`] on [`Unpin`]\n stream types.\n","sig":null,"attributes":[{"value":"/ A convenience method for calling [`Stream::poll_next`] on [`Unpin`]","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\stream\\mod.rs","byte_start":206125,"byte_end":206196,"line_start":1620,"line_end":1620,"column_start":5,"column_end":76}},{"value":"/ stream types.","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\stream\\mod.rs","byte_start":206201,"byte_end":206218,"line_start":1621,"line_end":1621,"column_start":5,"column_end":22}}]},{"kind":"Method","id":{"krate":0,"index":4296},"span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\stream\\mod.rs","byte_start":208342,"byte_end":208358,"line_start":1677,"line_end":1677,"column_start":8,"column_end":24},"name":"select_next_some","qualname":"::stream::stream::StreamExt::select_next_some","value":"pub fn select_next_some(&mut Self) -> SelectNextSome<, Self> where\nSelf: Unpin + FusedStream","parent":{"krate":0,"index":4200},"children":[],"decl_id":null,"docs":" Returns a [`Future`] that resolves when the next item in this stream is\n ready.","sig":null,"attributes":[{"value":"/ Returns a [`Future`] that resolves when the next item in this stream is","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\stream\\mod.rs","byte_start":206388,"byte_end":206463,"line_start":1629,"line_end":1629,"column_start":5,"column_end":80}},{"value":"/ ready.","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\stream\\mod.rs","byte_start":206468,"byte_end":206478,"line_start":1630,"line_end":1630,"column_start":5,"column_end":15}},{"value":"/","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\stream\\mod.rs","byte_start":206483,"byte_end":206486,"line_start":1631,"line_end":1631,"column_start":5,"column_end":8}},{"value":"/ This is similar to the [`next`][StreamExt::next] method, but it won't","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\stream\\mod.rs","byte_start":206491,"byte_end":206564,"line_start":1632,"line_end":1632,"column_start":5,"column_end":78}},{"value":"/ resolve to [`None`] if used on an empty [`Stream`]. Instead, the","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\stream\\mod.rs","byte_start":206569,"byte_end":206637,"line_start":1633,"line_end":1633,"column_start":5,"column_end":73}},{"value":"/ returned future type will return `true` from","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\stream\\mod.rs","byte_start":206642,"byte_end":206690,"line_start":1634,"line_end":1634,"column_start":5,"column_end":53}},{"value":"/ [`FusedFuture::is_terminated`][] when the [`Stream`] is empty, allowing","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\stream\\mod.rs","byte_start":206695,"byte_end":206770,"line_start":1635,"line_end":1635,"column_start":5,"column_end":80}},{"value":"/ [`select_next_some`][StreamExt::select_next_some] to be easily used with","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\stream\\mod.rs","byte_start":206775,"byte_end":206851,"line_start":1636,"line_end":1636,"column_start":5,"column_end":81}},{"value":"/ the [`select!`] macro.","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\stream\\mod.rs","byte_start":206856,"byte_end":206882,"line_start":1637,"line_end":1637,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\stream\\mod.rs","byte_start":206887,"byte_end":206890,"line_start":1638,"line_end":1638,"column_start":5,"column_end":8}},{"value":"/ If the future is polled after this [`Stream`] is empty it will panic.","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\stream\\mod.rs","byte_start":206895,"byte_end":206968,"line_start":1639,"line_end":1639,"column_start":5,"column_end":78}},{"value":"/ Using the future with a [`FusedFuture`][]-aware primitive like the","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\stream\\mod.rs","byte_start":206973,"byte_end":207043,"line_start":1640,"line_end":1640,"column_start":5,"column_end":75}},{"value":"/ [`select!`] macro will prevent this.","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\stream\\mod.rs","byte_start":207048,"byte_end":207088,"line_start":1641,"line_end":1641,"column_start":5,"column_end":45}},{"value":"/","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\stream\\mod.rs","byte_start":207093,"byte_end":207096,"line_start":1642,"line_end":1642,"column_start":5,"column_end":8}},{"value":"/ [`FusedFuture`]: futures_core::future::FusedFuture","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\stream\\mod.rs","byte_start":207101,"byte_end":207155,"line_start":1643,"line_end":1643,"column_start":5,"column_end":59}},{"value":"/ [`FusedFuture::is_terminated`]: futures_core::future::FusedFuture::is_terminated","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\stream\\mod.rs","byte_start":207160,"byte_end":207244,"line_start":1644,"line_end":1644,"column_start":5,"column_end":89}},{"value":"/","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\stream\\mod.rs","byte_start":207249,"byte_end":207252,"line_start":1645,"line_end":1645,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\stream\\mod.rs","byte_start":207257,"byte_end":207271,"line_start":1646,"line_end":1646,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\stream\\mod.rs","byte_start":207276,"byte_end":207279,"line_start":1647,"line_end":1647,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\stream\\mod.rs","byte_start":207284,"byte_end":207291,"line_start":1648,"line_end":1648,"column_start":5,"column_end":12}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\stream\\mod.rs","byte_start":207296,"byte_end":207337,"line_start":1649,"line_end":1649,"column_start":5,"column_end":46}},{"value":"/ use futures::{future, select};","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\stream\\mod.rs","byte_start":207342,"byte_end":207376,"line_start":1650,"line_end":1650,"column_start":5,"column_end":39}},{"value":"/ use futures::stream::{StreamExt, FuturesUnordered};","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\stream\\mod.rs","byte_start":207381,"byte_end":207436,"line_start":1651,"line_end":1651,"column_start":5,"column_end":60}},{"value":"/","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\stream\\mod.rs","byte_start":207441,"byte_end":207444,"line_start":1652,"line_end":1652,"column_start":5,"column_end":8}},{"value":"/ let mut fut = future::ready(1);","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\stream\\mod.rs","byte_start":207449,"byte_end":207484,"line_start":1653,"line_end":1653,"column_start":5,"column_end":40}},{"value":"/ let mut async_tasks = FuturesUnordered::new();","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\stream\\mod.rs","byte_start":207489,"byte_end":207539,"line_start":1654,"line_end":1654,"column_start":5,"column_end":55}},{"value":"/ let mut total = 0;","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\stream\\mod.rs","byte_start":207544,"byte_end":207566,"line_start":1655,"line_end":1655,"column_start":5,"column_end":27}},{"value":"/ loop {","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\stream\\mod.rs","byte_start":207571,"byte_end":207581,"line_start":1656,"line_end":1656,"column_start":5,"column_end":15}},{"value":"/     select! {","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\stream\\mod.rs","byte_start":207586,"byte_end":207603,"line_start":1657,"line_end":1657,"column_start":5,"column_end":22}},{"value":"/         num = fut => {","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\stream\\mod.rs","byte_start":207608,"byte_end":207634,"line_start":1658,"line_end":1658,"column_start":5,"column_end":31}},{"value":"/             // First, the `ready` future completes.","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\stream\\mod.rs","byte_start":207639,"byte_end":207694,"line_start":1659,"line_end":1659,"column_start":5,"column_end":60}},{"value":"/             total += num;","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\stream\\mod.rs","byte_start":207699,"byte_end":207728,"line_start":1660,"line_end":1660,"column_start":5,"column_end":34}},{"value":"/             // Then we spawn a new task onto `async_tasks`,","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\stream\\mod.rs","byte_start":207733,"byte_end":207796,"line_start":1661,"line_end":1661,"column_start":5,"column_end":68}},{"value":"/             async_tasks.push(async { 5 });","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\stream\\mod.rs","byte_start":207801,"byte_end":207847,"line_start":1662,"line_end":1662,"column_start":5,"column_end":51}},{"value":"/         },","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\stream\\mod.rs","byte_start":207852,"byte_end":207866,"line_start":1663,"line_end":1663,"column_start":5,"column_end":19}},{"value":"/         // On the next iteration of the loop, the task we spawned","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\stream\\mod.rs","byte_start":207871,"byte_end":207940,"line_start":1664,"line_end":1664,"column_start":5,"column_end":74}},{"value":"/         // completes.","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\stream\\mod.rs","byte_start":207945,"byte_end":207970,"line_start":1665,"line_end":1665,"column_start":5,"column_end":30}},{"value":"/         num = async_tasks.select_next_some() => {","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\stream\\mod.rs","byte_start":207975,"byte_end":208028,"line_start":1666,"line_end":1666,"column_start":5,"column_end":58}},{"value":"/             total += num;","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\stream\\mod.rs","byte_start":208033,"byte_end":208062,"line_start":1667,"line_end":1667,"column_start":5,"column_end":34}},{"value":"/         }","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\stream\\mod.rs","byte_start":208067,"byte_end":208080,"line_start":1668,"line_end":1668,"column_start":5,"column_end":18}},{"value":"/         // Finally, both the `ready` future and `async_tasks` have","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\stream\\mod.rs","byte_start":208085,"byte_end":208155,"line_start":1669,"line_end":1669,"column_start":5,"column_end":75}},{"value":"/         // finished, so we enter the `complete` branch.","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\stream\\mod.rs","byte_start":208160,"byte_end":208219,"line_start":1670,"line_end":1670,"column_start":5,"column_end":64}},{"value":"/         complete => break,","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\stream\\mod.rs","byte_start":208224,"byte_end":208254,"line_start":1671,"line_end":1671,"column_start":5,"column_end":35}},{"value":"/     }","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\stream\\mod.rs","byte_start":208259,"byte_end":208268,"line_start":1672,"line_end":1672,"column_start":5,"column_end":14}},{"value":"/ }","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\stream\\mod.rs","byte_start":208273,"byte_end":208278,"line_start":1673,"line_end":1673,"column_start":5,"column_end":10}},{"value":"/ assert_eq!(total, 6);","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\stream\\mod.rs","byte_start":208283,"byte_end":208308,"line_start":1674,"line_end":1674,"column_start":5,"column_end":30}},{"value":"/ # });","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\stream\\mod.rs","byte_start":208313,"byte_end":208322,"line_start":1675,"line_end":1675,"column_start":5,"column_end":14}},{"value":"/ ```","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\stream\\mod.rs","byte_start":208327,"byte_end":208334,"line_start":1676,"line_end":1676,"column_start":5,"column_end":12}}]},{"kind":"Struct","id":{"krate":0,"index":15046},"span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\try_stream\\and_then.rs","byte_start":367943,"byte_end":367950,"line_start":14,"line_end":14,"column_start":16,"column_end":23},"name":"AndThen","qualname":"::stream::try_stream::and_then::AndThen","value":"AndThen {  }","parent":null,"children":[{"krate":0,"index":15050},{"krate":0,"index":15051},{"krate":0,"index":15052}],"decl_id":null,"docs":" Stream for the [`and_then`](super::TryStreamExt::and_then) method.\n","sig":null,"attributes":[{"value":"must_use = \"streams do nothing unless polled\"","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pin-project-lite-0.2.9\\src\\lib.rs","byte_start":14239710,"byte_end":14239719,"line_start":633,"line_end":633,"column_start":11,"column_end":20}}]},{"kind":"Struct","id":{"krate":0,"index":15114},"span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\try_stream\\mod.rs","byte_start":329681,"byte_end":329688,"line_start":30,"line_end":30,"column_start":5,"column_end":12},"name":"ErrInto","qualname":"::stream::try_stream::ErrInto","value":"ErrInto {  }","parent":null,"children":[{"krate":0,"index":15117}],"decl_id":null,"docs":" Stream for the [`err_into`](super::TryStreamExt::err_into) method.\n","sig":null,"attributes":[{"value":"must_use =\n\"futures/streams/sinks do nothing unless you `.await` or poll them\"","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pin-project-lite-0.2.9\\src\\lib.rs","byte_start":14239710,"byte_end":14239719,"line_start":633,"line_end":633,"column_start":11,"column_end":20}}]},{"kind":"Struct","id":{"krate":0,"index":15192},"span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\try_stream\\mod.rs","byte_start":329936,"byte_end":329945,"line_start":37,"line_end":37,"column_start":5,"column_end":14},"name":"InspectOk","qualname":"::stream::try_stream::InspectOk","value":"InspectOk {  }","parent":null,"children":[{"krate":0,"index":15195}],"decl_id":null,"docs":" Stream for the [`inspect_ok`](super::TryStreamExt::inspect_ok) method.\n","sig":null,"attributes":[{"value":"must_use =\n\"futures/streams/sinks do nothing unless you `.await` or poll them\"","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pin-project-lite-0.2.9\\src\\lib.rs","byte_start":14239710,"byte_end":14239719,"line_start":633,"line_end":633,"column_start":11,"column_end":20}}]},{"kind":"Struct","id":{"krate":0,"index":15270},"span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\try_stream\\mod.rs","byte_start":330246,"byte_end":330256,"line_start":44,"line_end":44,"column_start":5,"column_end":15},"name":"InspectErr","qualname":"::stream::try_stream::InspectErr","value":"InspectErr {  }","parent":null,"children":[{"krate":0,"index":15273}],"decl_id":null,"docs":" Stream for the [`inspect_err`](super::TryStreamExt::inspect_err) method.\n","sig":null,"attributes":[{"value":"must_use =\n\"futures/streams/sinks do nothing unless you `.await` or poll them\"","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pin-project-lite-0.2.9\\src\\lib.rs","byte_start":14239710,"byte_end":14239719,"line_start":633,"line_end":633,"column_start":11,"column_end":20}}]},{"kind":"Struct","id":{"krate":0,"index":15345},"span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\try_stream\\into_stream.rs","byte_start":370692,"byte_end":370702,"line_start":12,"line_end":12,"column_start":16,"column_end":26},"name":"IntoStream","qualname":"::stream::try_stream::into_stream::IntoStream","value":"IntoStream {  }","parent":null,"children":[{"krate":0,"index":15347}],"decl_id":null,"docs":" Stream for the [`into_stream`](super::TryStreamExt::into_stream) method.\n","sig":null,"attributes":[{"value":"must_use = \"streams do nothing unless polled\"","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pin-project-lite-0.2.9\\src\\lib.rs","byte_start":14239710,"byte_end":14239719,"line_start":633,"line_end":633,"column_start":11,"column_end":20}}]},{"kind":"Struct","id":{"krate":0,"index":15392},"span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\try_stream\\mod.rs","byte_start":330682,"byte_end":330687,"line_start":55,"line_end":55,"column_start":5,"column_end":10},"name":"MapOk","qualname":"::stream::try_stream::MapOk","value":"MapOk {  }","parent":null,"children":[{"krate":0,"index":15395}],"decl_id":null,"docs":" Stream for the [`map_ok`](super::TryStreamExt::map_ok) method.\n","sig":null,"attributes":[{"value":"must_use =\n\"futures/streams/sinks do nothing unless you `.await` or poll them\"","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pin-project-lite-0.2.9\\src\\lib.rs","byte_start":14239710,"byte_end":14239719,"line_start":633,"line_end":633,"column_start":11,"column_end":20}}]},{"kind":"Struct","id":{"krate":0,"index":15470},"span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\try_stream\\mod.rs","byte_start":330964,"byte_end":330970,"line_start":62,"line_end":62,"column_start":5,"column_end":11},"name":"MapErr","qualname":"::stream::try_stream::MapErr","value":"MapErr {  }","parent":null,"children":[{"krate":0,"index":15473}],"decl_id":null,"docs":" Stream for the [`map_err`](super::TryStreamExt::map_err) method.\n","sig":null,"attributes":[{"value":"must_use =\n\"futures/streams/sinks do nothing unless you `.await` or poll them\"","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pin-project-lite-0.2.9\\src\\lib.rs","byte_start":14239710,"byte_end":14239719,"line_start":633,"line_end":633,"column_start":11,"column_end":20}}]},{"kind":"Struct","id":{"krate":0,"index":15545},"span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\try_stream\\or_else.rs","byte_start":372050,"byte_end":372056,"line_start":14,"line_end":14,"column_start":16,"column_end":22},"name":"OrElse","qualname":"::stream::try_stream::or_else::OrElse","value":"OrElse {  }","parent":null,"children":[{"krate":0,"index":15549},{"krate":0,"index":15550},{"krate":0,"index":15551}],"decl_id":null,"docs":" Stream for the [`or_else`](super::TryStreamExt::or_else) method.\n","sig":null,"attributes":[{"value":"must_use = \"streams do nothing unless polled\"","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pin-project-lite-0.2.9\\src\\lib.rs","byte_start":14239710,"byte_end":14239719,"line_start":633,"line_end":633,"column_start":11,"column_end":20}}]},{"kind":"Struct","id":{"krate":0,"index":15610},"span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\try_stream\\try_next.rs","byte_start":374892,"byte_end":374899,"line_start":10,"line_end":10,"column_start":12,"column_end":19},"name":"TryNext","qualname":"::stream::try_stream::try_next::TryNext","value":"TryNext {  }","parent":null,"children":[{"krate":0,"index":15613}],"decl_id":null,"docs":" Future for the [`try_next`](super::TryStreamExt::try_next) method.\n","sig":null,"attributes":[{"value":"/ Future for the [`try_next`](super::TryStreamExt::try_next) method.","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\try_stream\\try_next.rs","byte_start":374725,"byte_end":374795,"line_start":7,"line_end":7,"column_start":1,"column_end":71}},{"value":"must_use = \"futures do nothing unless you `.await` or poll them\"","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\try_stream\\try_next.rs","byte_start":374813,"byte_end":374880,"line_start":9,"line_end":9,"column_start":1,"column_end":68}}]},{"kind":"Struct","id":{"krate":0,"index":15618},"span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\try_stream\\try_for_each.rs","byte_start":375984,"byte_end":375994,"line_start":12,"line_end":12,"column_start":16,"column_end":26},"name":"TryForEach","qualname":"::stream::try_stream::try_for_each::TryForEach","value":"TryForEach {  }","parent":null,"children":[{"krate":0,"index":15622},{"krate":0,"index":15623},{"krate":0,"index":15624}],"decl_id":null,"docs":" Future for the [`try_for_each`](super::TryStreamExt::try_for_each) method.\n","sig":null,"attributes":[{"value":"must_use = \"futures do nothing unless you `.await` or poll them\"","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pin-project-lite-0.2.9\\src\\lib.rs","byte_start":14239710,"byte_end":14239719,"line_start":633,"line_end":633,"column_start":11,"column_end":20}}]},{"kind":"Struct","id":{"krate":0,"index":15675},"span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\try_stream\\try_filter.rs","byte_start":377880,"byte_end":377889,"line_start":15,"line_end":15,"column_start":16,"column_end":25},"name":"TryFilter","qualname":"::stream::try_stream::try_filter::TryFilter","value":"TryFilter {  }","parent":null,"children":[{"krate":0,"index":15679},{"krate":0,"index":15680},{"krate":0,"index":15681},{"krate":0,"index":15682}],"decl_id":null,"docs":" Stream for the [`try_filter`](super::TryStreamExt::try_filter)\n method.\n","sig":null,"attributes":[{"value":"must_use = \"streams do nothing unless polled\"","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pin-project-lite-0.2.9\\src\\lib.rs","byte_start":14239710,"byte_end":14239719,"line_start":633,"line_end":633,"column_start":11,"column_end":20}}]},{"kind":"Struct","id":{"krate":0,"index":15744},"span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\try_stream\\try_filter_map.rs","byte_start":381024,"byte_end":381036,"line_start":15,"line_end":15,"column_start":16,"column_end":28},"name":"TryFilterMap","qualname":"::stream::try_stream::try_filter_map::TryFilterMap","value":"TryFilterMap {  }","parent":null,"children":[{"krate":0,"index":15748},{"krate":0,"index":15749},{"krate":0,"index":15750}],"decl_id":null,"docs":" Stream for the [`try_filter_map`](super::TryStreamExt::try_filter_map)\n method.\n","sig":null,"attributes":[{"value":"must_use = \"streams do nothing unless polled\"","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pin-project-lite-0.2.9\\src\\lib.rs","byte_start":14239710,"byte_end":14239719,"line_start":633,"line_end":633,"column_start":11,"column_end":20}}]},{"kind":"Struct","id":{"krate":0,"index":15809},"span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\try_stream\\try_flatten.rs","byte_start":384041,"byte_end":384051,"line_start":13,"line_end":13,"column_start":16,"column_end":26},"name":"TryFlatten","qualname":"::stream::try_stream::try_flatten::TryFlatten","value":"TryFlatten {  }","parent":null,"children":[{"krate":0,"index":15811},{"krate":0,"index":15812}],"decl_id":null,"docs":" Stream for the [`try_flatten`](super::TryStreamExt::try_flatten) method.\n","sig":null,"attributes":[{"value":"must_use = \"streams do nothing unless polled\"","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pin-project-lite-0.2.9\\src\\lib.rs","byte_start":14239710,"byte_end":14239719,"line_start":633,"line_end":633,"column_start":11,"column_end":20}}]},{"kind":"Struct","id":{"krate":0,"index":15857},"span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\try_stream\\try_collect.rs","byte_start":386229,"byte_end":386239,"line_start":13,"line_end":13,"column_start":16,"column_end":26},"name":"TryCollect","qualname":"::stream::try_stream::try_collect::TryCollect","value":"TryCollect {  }","parent":null,"children":[{"krate":0,"index":15860},{"krate":0,"index":15861}],"decl_id":null,"docs":" Future for the [`try_collect`](super::TryStreamExt::try_collect) method.\n","sig":null,"attributes":[{"value":"must_use = \"futures do nothing unless you `.await` or poll them\"","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pin-project-lite-0.2.9\\src\\lib.rs","byte_start":14239710,"byte_end":14239719,"line_start":633,"line_end":633,"column_start":11,"column_end":20}}]},{"kind":"Struct","id":{"krate":0,"index":15906},"span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\try_stream\\try_concat.rs","byte_start":387588,"byte_end":387597,"line_start":12,"line_end":12,"column_start":16,"column_end":25},"name":"TryConcat","qualname":"::stream::try_stream::try_concat::TryConcat","value":"TryConcat {  }","parent":null,"children":[{"krate":0,"index":15908},{"krate":0,"index":15909}],"decl_id":null,"docs":" Future for the [`try_concat`](super::TryStreamExt::try_concat) method.\n","sig":null,"attributes":[{"value":"must_use = \"futures do nothing unless you `.await` or poll them\"","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pin-project-lite-0.2.9\\src\\lib.rs","byte_start":14239710,"byte_end":14239719,"line_start":633,"line_end":633,"column_start":11,"column_end":20}}]},{"kind":"Struct","id":{"krate":0,"index":15946},"span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\try_stream\\try_chunks.rs","byte_start":389108,"byte_end":389117,"line_start":17,"line_end":17,"column_start":16,"column_end":25},"name":"TryChunks","qualname":"::stream::try_stream::try_chunks::TryChunks","value":"TryChunks {  }","parent":null,"children":[{"krate":0,"index":15948},{"krate":0,"index":15949},{"krate":0,"index":15950}],"decl_id":null,"docs":" Stream for the [`try_chunks`](super::TryStreamExt::try_chunks) method.\n","sig":null,"attributes":[{"value":"must_use = \"streams do nothing unless polled\"","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pin-project-lite-0.2.9\\src\\lib.rs","byte_start":14239710,"byte_end":14239719,"line_start":633,"line_end":633,"column_start":11,"column_end":20}}]},{"kind":"Struct","id":{"krate":0,"index":15998},"span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\try_stream\\try_chunks.rs","byte_start":392369,"byte_end":392383,"line_start":116,"line_end":116,"column_start":12,"column_end":26},"name":"TryChunksError","qualname":"::stream::try_stream::try_chunks::TryChunksError","value":"","parent":null,"children":[],"decl_id":null,"docs":" Error indicating, that while chunk was collected inner stream produced an error.","sig":null,"attributes":[{"value":"/ Error indicating, that while chunk was collected inner stream produced an error.","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\try_stream\\try_chunks.rs","byte_start":392146,"byte_end":392230,"line_start":112,"line_end":112,"column_start":1,"column_end":85}},{"value":"/","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\try_stream\\try_chunks.rs","byte_start":392231,"byte_end":392234,"line_start":113,"line_end":113,"column_start":1,"column_end":4}},{"value":"/ Contains all items that were collected before an error occurred, and the stream error itself.","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\try_stream\\try_chunks.rs","byte_start":392235,"byte_end":392332,"line_start":114,"line_end":114,"column_start":1,"column_end":98}}]},{"kind":"Field","id":{"krate":0,"index":16002},"span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\try_stream\\try_chunks.rs","byte_start":392390,"byte_end":392400,"line_start":116,"line_end":116,"column_start":33,"column_end":43},"name":"0","qualname":"::stream::try_stream::try_chunks::TryChunksError::0","value":"std::vec::Vec<T>","parent":{"krate":0,"index":15998},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":16003},"span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\try_stream\\try_chunks.rs","byte_start":392402,"byte_end":392407,"line_start":116,"line_end":116,"column_start":45,"column_end":50},"name":"1","qualname":"::stream::try_stream::try_chunks::TryChunksError::1","value":"E","parent":{"krate":0,"index":15998},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":16019},"span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\try_stream\\try_fold.rs","byte_start":393245,"byte_end":393252,"line_start":12,"line_end":12,"column_start":16,"column_end":23},"name":"TryFold","qualname":"::stream::try_stream::try_fold::TryFold","value":"TryFold {  }","parent":null,"children":[{"krate":0,"index":16024},{"krate":0,"index":16025},{"krate":0,"index":16026},{"krate":0,"index":16027}],"decl_id":null,"docs":" Future for the [`try_fold`](super::TryStreamExt::try_fold) method.\n","sig":null,"attributes":[{"value":"must_use = \"futures do nothing unless you `.await` or poll them\"","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pin-project-lite-0.2.9\\src\\lib.rs","byte_start":14239710,"byte_end":14239719,"line_start":633,"line_end":633,"column_start":11,"column_end":20}}]},{"kind":"Function","id":{"krate":0,"index":5208},"span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\try_stream\\try_unfold.rs","byte_start":397700,"byte_end":397710,"line_start":59,"line_end":59,"column_start":8,"column_end":18},"name":"try_unfold","qualname":"::stream::try_stream::try_unfold::try_unfold","value":"pub fn try_unfold<T, F, Fut, Item>(T, F) -> TryUnfold<T, F, Fut> where\nF: FnMut(T) -> Fut, Fut: TryFuture<Ok = Option<(Item, T)>>","parent":null,"children":[],"decl_id":null,"docs":" Creates a `TryStream` from a seed and a closure returning a `TryFuture`.","sig":null,"attributes":[{"value":"/ Creates a `TryStream` from a seed and a closure returning a `TryFuture`.","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\try_stream\\try_unfold.rs","byte_start":395843,"byte_end":395919,"line_start":10,"line_end":10,"column_start":1,"column_end":77}},{"value":"/","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\try_stream\\try_unfold.rs","byte_start":395920,"byte_end":395923,"line_start":11,"line_end":11,"column_start":1,"column_end":4}},{"value":"/ This function is the dual for the `TryStream::try_fold()` adapter: while","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\try_stream\\try_unfold.rs","byte_start":395924,"byte_end":396000,"line_start":12,"line_end":12,"column_start":1,"column_end":77}},{"value":"/ `TryStream::try_fold()` reduces a `TryStream` to one single value,","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\try_stream\\try_unfold.rs","byte_start":396001,"byte_end":396071,"line_start":13,"line_end":13,"column_start":1,"column_end":71}},{"value":"/ `try_unfold()` creates a `TryStream` from a seed value.","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\try_stream\\try_unfold.rs","byte_start":396072,"byte_end":396131,"line_start":14,"line_end":14,"column_start":1,"column_end":60}},{"value":"/","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\try_stream\\try_unfold.rs","byte_start":396132,"byte_end":396135,"line_start":15,"line_end":15,"column_start":1,"column_end":4}},{"value":"/ `try_unfold()` will call the provided closure with the provided seed, then","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\try_stream\\try_unfold.rs","byte_start":396136,"byte_end":396214,"line_start":16,"line_end":16,"column_start":1,"column_end":79}},{"value":"/ wait for the returned `TryFuture` to complete with `(a, b)`. It will then","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\try_stream\\try_unfold.rs","byte_start":396215,"byte_end":396292,"line_start":17,"line_end":17,"column_start":1,"column_end":78}},{"value":"/ yield the value `a`, and use `b` as the next internal state.","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\try_stream\\try_unfold.rs","byte_start":396293,"byte_end":396357,"line_start":18,"line_end":18,"column_start":1,"column_end":65}},{"value":"/","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\try_stream\\try_unfold.rs","byte_start":396358,"byte_end":396361,"line_start":19,"line_end":19,"column_start":1,"column_end":4}},{"value":"/ If the closure returns `None` instead of `Some(TryFuture)`, then the","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\try_stream\\try_unfold.rs","byte_start":396362,"byte_end":396434,"line_start":20,"line_end":20,"column_start":1,"column_end":73}},{"value":"/ `try_unfold()` will stop producing items and return `Poll::Ready(None)` in","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\try_stream\\try_unfold.rs","byte_start":396435,"byte_end":396513,"line_start":21,"line_end":21,"column_start":1,"column_end":79}},{"value":"/ future calls to `poll()`.","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\try_stream\\try_unfold.rs","byte_start":396514,"byte_end":396543,"line_start":22,"line_end":22,"column_start":1,"column_end":30}},{"value":"/","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\try_stream\\try_unfold.rs","byte_start":396544,"byte_end":396547,"line_start":23,"line_end":23,"column_start":1,"column_end":4}},{"value":"/ In case of error generated by the returned `TryFuture`, the error will be","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\try_stream\\try_unfold.rs","byte_start":396548,"byte_end":396625,"line_start":24,"line_end":24,"column_start":1,"column_end":78}},{"value":"/ returned by the `TryStream`. The `TryStream` will then yield","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\try_stream\\try_unfold.rs","byte_start":396626,"byte_end":396690,"line_start":25,"line_end":25,"column_start":1,"column_end":65}},{"value":"/ `Poll::Ready(None)` in future calls to `poll()`.","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\try_stream\\try_unfold.rs","byte_start":396691,"byte_end":396743,"line_start":26,"line_end":26,"column_start":1,"column_end":53}},{"value":"/","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\try_stream\\try_unfold.rs","byte_start":396744,"byte_end":396747,"line_start":27,"line_end":27,"column_start":1,"column_end":4}},{"value":"/ This function can typically be used when wanting to go from the \"world of","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\try_stream\\try_unfold.rs","byte_start":396748,"byte_end":396825,"line_start":28,"line_end":28,"column_start":1,"column_end":78}},{"value":"/ futures\" to the \"world of streams\": the provided closure can build a","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\try_stream\\try_unfold.rs","byte_start":396826,"byte_end":396898,"line_start":29,"line_end":29,"column_start":1,"column_end":73}},{"value":"/ `TryFuture` using other library functions working on futures, and","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\try_stream\\try_unfold.rs","byte_start":396899,"byte_end":396968,"line_start":30,"line_end":30,"column_start":1,"column_end":70}},{"value":"/ `try_unfold()` will turn it into a `TryStream` by repeating the operation.","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\try_stream\\try_unfold.rs","byte_start":396969,"byte_end":397047,"line_start":31,"line_end":31,"column_start":1,"column_end":79}},{"value":"/","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\try_stream\\try_unfold.rs","byte_start":397048,"byte_end":397051,"line_start":32,"line_end":32,"column_start":1,"column_end":4}},{"value":"/ # Example","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\try_stream\\try_unfold.rs","byte_start":397052,"byte_end":397065,"line_start":33,"line_end":33,"column_start":1,"column_end":14}},{"value":"/","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\try_stream\\try_unfold.rs","byte_start":397066,"byte_end":397069,"line_start":34,"line_end":34,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\try_stream\\try_unfold.rs","byte_start":397070,"byte_end":397077,"line_start":35,"line_end":35,"column_start":1,"column_end":8}},{"value":"/ # #[derive(Debug, PartialEq)]","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\try_stream\\try_unfold.rs","byte_start":397078,"byte_end":397111,"line_start":36,"line_end":36,"column_start":1,"column_end":34}},{"value":"/ # struct SomeError;","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\try_stream\\try_unfold.rs","byte_start":397112,"byte_end":397135,"line_start":37,"line_end":37,"column_start":1,"column_end":24}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\try_stream\\try_unfold.rs","byte_start":397136,"byte_end":397177,"line_start":38,"line_end":38,"column_start":1,"column_end":42}},{"value":"/ use futures::stream::{self, TryStreamExt};","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\try_stream\\try_unfold.rs","byte_start":397178,"byte_end":397224,"line_start":39,"line_end":39,"column_start":1,"column_end":47}},{"value":"/","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\try_stream\\try_unfold.rs","byte_start":397225,"byte_end":397228,"line_start":40,"line_end":40,"column_start":1,"column_end":4}},{"value":"/ let stream = stream::try_unfold(0, |state| async move {","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\try_stream\\try_unfold.rs","byte_start":397229,"byte_end":397288,"line_start":41,"line_end":41,"column_start":1,"column_end":60}},{"value":"/     if state < 0 {","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\try_stream\\try_unfold.rs","byte_start":397289,"byte_end":397311,"line_start":42,"line_end":42,"column_start":1,"column_end":23}},{"value":"/         return Err(SomeError);","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\try_stream\\try_unfold.rs","byte_start":397312,"byte_end":397346,"line_start":43,"line_end":43,"column_start":1,"column_end":35}},{"value":"/     }","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\try_stream\\try_unfold.rs","byte_start":397347,"byte_end":397356,"line_start":44,"line_end":44,"column_start":1,"column_end":10}},{"value":"/","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\try_stream\\try_unfold.rs","byte_start":397357,"byte_end":397360,"line_start":45,"line_end":45,"column_start":1,"column_end":4}},{"value":"/     if state <= 2 {","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\try_stream\\try_unfold.rs","byte_start":397361,"byte_end":397384,"line_start":46,"line_end":46,"column_start":1,"column_end":24}},{"value":"/         let next_state = state + 1;","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\try_stream\\try_unfold.rs","byte_start":397385,"byte_end":397424,"line_start":47,"line_end":47,"column_start":1,"column_end":40}},{"value":"/         let yielded = state * 2;","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\try_stream\\try_unfold.rs","byte_start":397425,"byte_end":397461,"line_start":48,"line_end":48,"column_start":1,"column_end":37}},{"value":"/         Ok(Some((yielded, next_state)))","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\try_stream\\try_unfold.rs","byte_start":397462,"byte_end":397505,"line_start":49,"line_end":49,"column_start":1,"column_end":44}},{"value":"/     } else {","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\try_stream\\try_unfold.rs","byte_start":397506,"byte_end":397522,"line_start":50,"line_end":50,"column_start":1,"column_end":17}},{"value":"/         Ok(None)","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\try_stream\\try_unfold.rs","byte_start":397523,"byte_end":397543,"line_start":51,"line_end":51,"column_start":1,"column_end":21}},{"value":"/     }","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\try_stream\\try_unfold.rs","byte_start":397544,"byte_end":397553,"line_start":52,"line_end":52,"column_start":1,"column_end":10}},{"value":"/ });","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\try_stream\\try_unfold.rs","byte_start":397554,"byte_end":397561,"line_start":53,"line_end":53,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\try_stream\\try_unfold.rs","byte_start":397562,"byte_end":397565,"line_start":54,"line_end":54,"column_start":1,"column_end":4}},{"value":"/ let result: Result<Vec<i32>, _> = stream.try_collect().await;","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\try_stream\\try_unfold.rs","byte_start":397566,"byte_end":397631,"line_start":55,"line_end":55,"column_start":1,"column_end":66}},{"value":"/ assert_eq!(result, Ok(vec![0, 2, 4]));","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\try_stream\\try_unfold.rs","byte_start":397632,"byte_end":397674,"line_start":56,"line_end":56,"column_start":1,"column_end":43}},{"value":"/ # });","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\try_stream\\try_unfold.rs","byte_start":397675,"byte_end":397684,"line_start":57,"line_end":57,"column_start":1,"column_end":10}},{"value":"/ ```","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\try_stream\\try_unfold.rs","byte_start":397685,"byte_end":397692,"line_start":58,"line_end":58,"column_start":1,"column_end":8}}]},{"kind":"Struct","id":{"krate":0,"index":16088},"span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\try_stream\\try_unfold.rs","byte_start":398073,"byte_end":398082,"line_start":70,"line_end":70,"column_start":16,"column_end":25},"name":"TryUnfold","qualname":"::stream::try_stream::try_unfold::TryUnfold","value":"TryUnfold {  }","parent":null,"children":[{"krate":0,"index":16092},{"krate":0,"index":16093},{"krate":0,"index":16094}],"decl_id":null,"docs":" Stream for the [`try_unfold`] function.\n","sig":null,"attributes":[{"value":"must_use = \"streams do nothing unless polled\"","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pin-project-lite-0.2.9\\src\\lib.rs","byte_start":14239710,"byte_end":14239719,"line_start":633,"line_end":633,"column_start":11,"column_end":20}}]},{"kind":"Struct","id":{"krate":0,"index":16145},"span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\try_stream\\try_skip_while.rs","byte_start":399990,"byte_end":400002,"line_start":15,"line_end":15,"column_start":16,"column_end":28},"name":"TrySkipWhile","qualname":"::stream::try_stream::try_skip_while::TrySkipWhile","value":"TrySkipWhile {  }","parent":null,"children":[{"krate":0,"index":16149},{"krate":0,"index":16150},{"krate":0,"index":16151},{"krate":0,"index":16152},{"krate":0,"index":16153}],"decl_id":null,"docs":" Stream for the [`try_skip_while`](super::TryStreamExt::try_skip_while)\n method.\n","sig":null,"attributes":[{"value":"must_use = \"streams do nothing unless polled\"","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pin-project-lite-0.2.9\\src\\lib.rs","byte_start":14239710,"byte_end":14239719,"line_start":633,"line_end":633,"column_start":11,"column_end":20}}]},{"kind":"Struct","id":{"krate":0,"index":16218},"span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\try_stream\\try_take_while.rs","byte_start":403546,"byte_end":403558,"line_start":15,"line_end":15,"column_start":16,"column_end":28},"name":"TryTakeWhile","qualname":"::stream::try_stream::try_take_while::TryTakeWhile","value":"TryTakeWhile {  }","parent":null,"children":[{"krate":0,"index":16222},{"krate":0,"index":16223},{"krate":0,"index":16224},{"krate":0,"index":16225},{"krate":0,"index":16226}],"decl_id":null,"docs":" Stream for the [`try_take_while`](super::TryStreamExt::try_take_while)\n method.\n","sig":null,"attributes":[{"value":"must_use = \"streams do nothing unless polled\"","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pin-project-lite-0.2.9\\src\\lib.rs","byte_start":14239710,"byte_end":14239719,"line_start":633,"line_end":633,"column_start":11,"column_end":20}}]},{"kind":"Struct","id":{"krate":0,"index":16291},"span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\try_stream\\try_buffer_unordered.rs","byte_start":407334,"byte_end":407352,"line_start":16,"line_end":16,"column_start":16,"column_end":34},"name":"TryBufferUnordered","qualname":"::stream::try_stream::try_buffer_unordered::TryBufferUnordered","value":"TryBufferUnordered {  }","parent":null,"children":[{"krate":0,"index":16293},{"krate":0,"index":16294},{"krate":0,"index":16295}],"decl_id":null,"docs":" Stream for the\n [`try_buffer_unordered`](super::TryStreamExt::try_buffer_unordered) method.\n","sig":null,"attributes":[{"value":"must_use = \"streams do nothing unless polled\"","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pin-project-lite-0.2.9\\src\\lib.rs","byte_start":14239710,"byte_end":14239719,"line_start":633,"line_end":633,"column_start":11,"column_end":20}}]},{"kind":"Struct","id":{"krate":0,"index":16343},"span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\try_stream\\try_buffered.rs","byte_start":409892,"byte_end":409903,"line_start":15,"line_end":15,"column_start":16,"column_end":27},"name":"TryBuffered","qualname":"::stream::try_stream::try_buffered::TryBuffered","value":"TryBuffered {  }","parent":null,"children":[{"krate":0,"index":16345},{"krate":0,"index":16346},{"krate":0,"index":16347}],"decl_id":null,"docs":" Stream for the [`try_buffered`](super::TryStreamExt::try_buffered) method.\n","sig":null,"attributes":[{"value":"must_use = \"streams do nothing unless polled\"","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pin-project-lite-0.2.9\\src\\lib.rs","byte_start":14239710,"byte_end":14239719,"line_start":633,"line_end":633,"column_start":11,"column_end":20}}]},{"kind":"Struct","id":{"krate":0,"index":16395},"span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\try_stream\\try_for_each_concurrent.rs","byte_start":412435,"byte_end":412455,"line_start":16,"line_end":16,"column_start":16,"column_end":36},"name":"TryForEachConcurrent","qualname":"::stream::try_stream::try_for_each_concurrent::TryForEachConcurrent","value":"TryForEachConcurrent {  }","parent":null,"children":[{"krate":0,"index":16399},{"krate":0,"index":16400},{"krate":0,"index":16401},{"krate":0,"index":16402}],"decl_id":null,"docs":" Future for the\n [`try_for_each_concurrent`](super::TryStreamExt::try_for_each_concurrent)\n method.\n","sig":null,"attributes":[{"value":"must_use = \"futures do nothing unless you `.await` or poll them\"","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pin-project-lite-0.2.9\\src\\lib.rs","byte_start":14239710,"byte_end":14239719,"line_start":633,"line_end":633,"column_start":11,"column_end":20}}]},{"kind":"Struct","id":{"krate":0,"index":16456},"span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\try_stream\\into_async_read.rs","byte_start":416717,"byte_end":416730,"line_start":14,"line_end":14,"column_start":12,"column_end":25},"name":"IntoAsyncRead","qualname":"::stream::try_stream::into_async_read::IntoAsyncRead","value":"IntoAsyncRead {  }","parent":null,"children":[{"krate":0,"index":16458},{"krate":0,"index":16459}],"decl_id":null,"docs":" Reader for the [`into_async_read`](super::TryStreamExt::into_async_read) method.\n","sig":null,"attributes":[{"value":"/ Reader for the [`into_async_read`](super::TryStreamExt::into_async_read) method.","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\try_stream\\into_async_read.rs","byte_start":416509,"byte_end":416593,"line_start":10,"line_end":10,"column_start":1,"column_end":85}},{"value":"must_use = \"readers do nothing unless polled\"","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\try_stream\\into_async_read.rs","byte_start":416611,"byte_end":416659,"line_start":12,"line_end":12,"column_start":1,"column_end":49}}]},{"kind":"Trait","id":{"krate":0,"index":5619},"span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\try_stream\\mod.rs","byte_start":334179,"byte_end":334191,"line_start":157,"line_end":157,"column_start":11,"column_end":23},"name":"TryStreamExt","qualname":"::stream::try_stream::TryStreamExt","value":"TryStreamExt: TryStream","parent":null,"children":[{"krate":0,"index":5620},{"krate":0,"index":5622},{"krate":0,"index":5625},{"krate":0,"index":5628},{"krate":0,"index":5631},{"krate":0,"index":5634},{"krate":0,"index":5636},{"krate":0,"index":5638},{"krate":0,"index":5639},{"krate":0,"index":5640},{"krate":0,"index":5643},{"krate":0,"index":5646},{"krate":0,"index":5649},{"krate":0,"index":5653},{"krate":0,"index":5655},{"krate":0,"index":5656},{"krate":0,"index":5659},{"krate":0,"index":5663},{"krate":0,"index":5664},{"krate":0,"index":5668},{"krate":0,"index":5669},{"krate":0,"index":5670},{"krate":0,"index":5671},{"krate":0,"index":5672}],"decl_id":null,"docs":" Adapters specific to `Result`-returning streams\n","sig":null,"attributes":[{"value":"/ Adapters specific to `Result`-returning streams","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\try_stream\\mod.rs","byte_start":334117,"byte_end":334168,"line_start":156,"line_end":156,"column_start":1,"column_end":52}}]},{"kind":"Method","id":{"krate":0,"index":5620},"span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\try_stream\\mod.rs","byte_start":334733,"byte_end":334741,"line_start":175,"line_end":175,"column_start":8,"column_end":16},"name":"err_into","qualname":"::stream::try_stream::TryStreamExt::err_into","value":"pub fn err_into<E>(Self) -> ErrInto<Self, E> where Self: Sized,\nSelf::Error: Into<E>","parent":{"krate":0,"index":5619},"children":[],"decl_id":null,"docs":" Wraps the current stream in a new stream which converts the error type\n into the one provided.","sig":null,"attributes":[{"value":"/ Wraps the current stream in a new stream which converts the error type","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\try_stream\\mod.rs","byte_start":334209,"byte_end":334283,"line_start":158,"line_end":158,"column_start":5,"column_end":79}},{"value":"/ into the one provided.","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\try_stream\\mod.rs","byte_start":334288,"byte_end":334314,"line_start":159,"line_end":159,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\try_stream\\mod.rs","byte_start":334319,"byte_end":334322,"line_start":160,"line_end":160,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\try_stream\\mod.rs","byte_start":334327,"byte_end":334341,"line_start":161,"line_end":161,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\try_stream\\mod.rs","byte_start":334346,"byte_end":334349,"line_start":162,"line_end":162,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\try_stream\\mod.rs","byte_start":334354,"byte_end":334361,"line_start":163,"line_end":163,"column_start":5,"column_end":12}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\try_stream\\mod.rs","byte_start":334366,"byte_end":334407,"line_start":164,"line_end":164,"column_start":5,"column_end":46}},{"value":"/ use futures::stream::{self, TryStreamExt};","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\try_stream\\mod.rs","byte_start":334412,"byte_end":334458,"line_start":165,"line_end":165,"column_start":5,"column_end":51}},{"value":"/","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\try_stream\\mod.rs","byte_start":334463,"byte_end":334466,"line_start":166,"line_end":166,"column_start":5,"column_end":8}},{"value":"/ let mut stream =","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\try_stream\\mod.rs","byte_start":334471,"byte_end":334491,"line_start":167,"line_end":167,"column_start":5,"column_end":25}},{"value":"/     stream::iter(vec![Ok(()), Err(5i32)])","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\try_stream\\mod.rs","byte_start":334496,"byte_end":334541,"line_start":168,"line_end":168,"column_start":5,"column_end":50}},{"value":"/         .err_into::<i64>();","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\try_stream\\mod.rs","byte_start":334546,"byte_end":334577,"line_start":169,"line_end":169,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\try_stream\\mod.rs","byte_start":334582,"byte_end":334585,"line_start":170,"line_end":170,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(stream.try_next().await, Ok(Some(())));","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\try_stream\\mod.rs","byte_start":334590,"byte_end":334644,"line_start":171,"line_end":171,"column_start":5,"column_end":59}},{"value":"/ assert_eq!(stream.try_next().await, Err(5i64));","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\try_stream\\mod.rs","byte_start":334649,"byte_end":334700,"line_start":172,"line_end":172,"column_start":5,"column_end":56}},{"value":"/ # })","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\try_stream\\mod.rs","byte_start":334705,"byte_end":334713,"line_start":173,"line_end":173,"column_start":5,"column_end":13}},{"value":"/ ```","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\try_stream\\mod.rs","byte_start":334718,"byte_end":334725,"line_start":174,"line_end":174,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":5622},"span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\try_stream\\mod.rs","byte_start":335437,"byte_end":335443,"line_start":200,"line_end":200,"column_start":8,"column_end":14},"name":"map_ok","qualname":"::stream::try_stream::TryStreamExt::map_ok","value":"pub fn map_ok<T, F>(Self, F) -> MapOk<Self, F> where Self: Sized,\nF: FnMut(Self::Ok) -> T","parent":{"krate":0,"index":5619},"children":[],"decl_id":null,"docs":" Wraps the current stream in a new stream which maps the success value\n using the provided closure.","sig":null,"attributes":[{"value":"/ Wraps the current stream in a new stream which maps the success value","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\try_stream\\mod.rs","byte_start":334917,"byte_end":334990,"line_start":183,"line_end":183,"column_start":5,"column_end":78}},{"value":"/ using the provided closure.","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\try_stream\\mod.rs","byte_start":334995,"byte_end":335026,"line_start":184,"line_end":184,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\try_stream\\mod.rs","byte_start":335031,"byte_end":335034,"line_start":185,"line_end":185,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\try_stream\\mod.rs","byte_start":335039,"byte_end":335053,"line_start":186,"line_end":186,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\try_stream\\mod.rs","byte_start":335058,"byte_end":335061,"line_start":187,"line_end":187,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\try_stream\\mod.rs","byte_start":335066,"byte_end":335073,"line_start":188,"line_end":188,"column_start":5,"column_end":12}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\try_stream\\mod.rs","byte_start":335078,"byte_end":335119,"line_start":189,"line_end":189,"column_start":5,"column_end":46}},{"value":"/ use futures::stream::{self, TryStreamExt};","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\try_stream\\mod.rs","byte_start":335124,"byte_end":335170,"line_start":190,"line_end":190,"column_start":5,"column_end":51}},{"value":"/","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\try_stream\\mod.rs","byte_start":335175,"byte_end":335178,"line_start":191,"line_end":191,"column_start":5,"column_end":8}},{"value":"/ let mut stream =","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\try_stream\\mod.rs","byte_start":335183,"byte_end":335203,"line_start":192,"line_end":192,"column_start":5,"column_end":25}},{"value":"/     stream::iter(vec![Ok(5), Err(0)])","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\try_stream\\mod.rs","byte_start":335208,"byte_end":335249,"line_start":193,"line_end":193,"column_start":5,"column_end":46}},{"value":"/         .map_ok(|x| x + 2);","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\try_stream\\mod.rs","byte_start":335254,"byte_end":335285,"line_start":194,"line_end":194,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\try_stream\\mod.rs","byte_start":335290,"byte_end":335293,"line_start":195,"line_end":195,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(stream.try_next().await, Ok(Some(7)));","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\try_stream\\mod.rs","byte_start":335298,"byte_end":335351,"line_start":196,"line_end":196,"column_start":5,"column_end":58}},{"value":"/ assert_eq!(stream.try_next().await, Err(0));","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\try_stream\\mod.rs","byte_start":335356,"byte_end":335404,"line_start":197,"line_end":197,"column_start":5,"column_end":53}},{"value":"/ # })","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\try_stream\\mod.rs","byte_start":335409,"byte_end":335417,"line_start":198,"line_end":198,"column_start":5,"column_end":13}},{"value":"/ ```","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\try_stream\\mod.rs","byte_start":335422,"byte_end":335429,"line_start":199,"line_end":199,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":5625},"span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\try_stream\\mod.rs","byte_start":336152,"byte_end":336159,"line_start":225,"line_end":225,"column_start":8,"column_end":15},"name":"map_err","qualname":"::stream::try_stream::TryStreamExt::map_err","value":"pub fn map_err<E, F>(Self, F) -> MapErr<Self, F> where Self: Sized,\nF: FnMut(Self::Error) -> E","parent":{"krate":0,"index":5619},"children":[],"decl_id":null,"docs":" Wraps the current stream in a new stream which maps the error value\n using the provided closure.","sig":null,"attributes":[{"value":"/ Wraps the current stream in a new stream which maps the error value","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\try_stream\\mod.rs","byte_start":335633,"byte_end":335704,"line_start":208,"line_end":208,"column_start":5,"column_end":76}},{"value":"/ using the provided closure.","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\try_stream\\mod.rs","byte_start":335709,"byte_end":335740,"line_start":209,"line_end":209,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\try_stream\\mod.rs","byte_start":335745,"byte_end":335748,"line_start":210,"line_end":210,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\try_stream\\mod.rs","byte_start":335753,"byte_end":335767,"line_start":211,"line_end":211,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\try_stream\\mod.rs","byte_start":335772,"byte_end":335775,"line_start":212,"line_end":212,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\try_stream\\mod.rs","byte_start":335780,"byte_end":335787,"line_start":213,"line_end":213,"column_start":5,"column_end":12}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\try_stream\\mod.rs","byte_start":335792,"byte_end":335833,"line_start":214,"line_end":214,"column_start":5,"column_end":46}},{"value":"/ use futures::stream::{self, TryStreamExt};","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\try_stream\\mod.rs","byte_start":335838,"byte_end":335884,"line_start":215,"line_end":215,"column_start":5,"column_end":51}},{"value":"/","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\try_stream\\mod.rs","byte_start":335889,"byte_end":335892,"line_start":216,"line_end":216,"column_start":5,"column_end":8}},{"value":"/ let mut stream =","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\try_stream\\mod.rs","byte_start":335897,"byte_end":335917,"line_start":217,"line_end":217,"column_start":5,"column_end":25}},{"value":"/     stream::iter(vec![Ok(5), Err(0)])","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\try_stream\\mod.rs","byte_start":335922,"byte_end":335963,"line_start":218,"line_end":218,"column_start":5,"column_end":46}},{"value":"/         .map_err(|x| x + 2);","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\try_stream\\mod.rs","byte_start":335968,"byte_end":336000,"line_start":219,"line_end":219,"column_start":5,"column_end":37}},{"value":"/","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\try_stream\\mod.rs","byte_start":336005,"byte_end":336008,"line_start":220,"line_end":220,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(stream.try_next().await, Ok(Some(5)));","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\try_stream\\mod.rs","byte_start":336013,"byte_end":336066,"line_start":221,"line_end":221,"column_start":5,"column_end":58}},{"value":"/ assert_eq!(stream.try_next().await, Err(2));","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\try_stream\\mod.rs","byte_start":336071,"byte_end":336119,"line_start":222,"line_end":222,"column_start":5,"column_end":53}},{"value":"/ # })","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\try_stream\\mod.rs","byte_start":336124,"byte_end":336132,"line_start":223,"line_end":223,"column_start":5,"column_end":13}},{"value":"/ ```","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\try_stream\\mod.rs","byte_start":336137,"byte_end":336144,"line_start":224,"line_end":224,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":5628},"span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\try_stream\\mod.rs","byte_start":337764,"byte_end":337772,"line_start":271,"line_end":271,"column_start":8,"column_end":16},"name":"and_then","qualname":"::stream::try_stream::TryStreamExt::and_then","value":"pub fn and_then<Fut, F>(Self, F) -> AndThen<Self, Fut, F> where\nF: FnMut(Self::Ok) -> Fut, Fut: TryFuture<Error = Self::Error>, Self: Sized","parent":{"krate":0,"index":5619},"children":[],"decl_id":null,"docs":" Chain on a computation for when a value is ready, passing the successful\n results to the provided closure `f`.","sig":null,"attributes":[{"value":"/ Chain on a computation for when a value is ready, passing the successful","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\try_stream\\mod.rs","byte_start":336351,"byte_end":336427,"line_start":233,"line_end":233,"column_start":5,"column_end":81}},{"value":"/ results to the provided closure `f`.","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\try_stream\\mod.rs","byte_start":336432,"byte_end":336472,"line_start":234,"line_end":234,"column_start":5,"column_end":45}},{"value":"/","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\try_stream\\mod.rs","byte_start":336477,"byte_end":336480,"line_start":235,"line_end":235,"column_start":5,"column_end":8}},{"value":"/ This function can be used to run a unit of work when the next successful","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\try_stream\\mod.rs","byte_start":336485,"byte_end":336561,"line_start":236,"line_end":236,"column_start":5,"column_end":81}},{"value":"/ value on a stream is ready. The closure provided will be yielded a value","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\try_stream\\mod.rs","byte_start":336566,"byte_end":336642,"line_start":237,"line_end":237,"column_start":5,"column_end":81}},{"value":"/ when ready, and the returned future will then be run to completion to","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\try_stream\\mod.rs","byte_start":336647,"byte_end":336720,"line_start":238,"line_end":238,"column_start":5,"column_end":78}},{"value":"/ produce the next value on this stream.","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\try_stream\\mod.rs","byte_start":336725,"byte_end":336767,"line_start":239,"line_end":239,"column_start":5,"column_end":47}},{"value":"/","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\try_stream\\mod.rs","byte_start":336772,"byte_end":336775,"line_start":240,"line_end":240,"column_start":5,"column_end":8}},{"value":"/ Any errors produced by this stream will not be passed to the closure,","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\try_stream\\mod.rs","byte_start":336780,"byte_end":336853,"line_start":241,"line_end":241,"column_start":5,"column_end":78}},{"value":"/ and will be passed through.","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\try_stream\\mod.rs","byte_start":336858,"byte_end":336889,"line_start":242,"line_end":242,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\try_stream\\mod.rs","byte_start":336894,"byte_end":336897,"line_start":243,"line_end":243,"column_start":5,"column_end":8}},{"value":"/ The returned value of the closure must implement the `TryFuture` trait","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\try_stream\\mod.rs","byte_start":336902,"byte_end":336976,"line_start":244,"line_end":244,"column_start":5,"column_end":79}},{"value":"/ and can represent some more work to be done before the composed stream","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\try_stream\\mod.rs","byte_start":336981,"byte_end":337055,"line_start":245,"line_end":245,"column_start":5,"column_end":79}},{"value":"/ is finished.","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\try_stream\\mod.rs","byte_start":337060,"byte_end":337076,"line_start":246,"line_end":246,"column_start":5,"column_end":21}},{"value":"/","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\try_stream\\mod.rs","byte_start":337081,"byte_end":337084,"line_start":247,"line_end":247,"column_start":5,"column_end":8}},{"value":"/ Note that this function consumes the receiving stream and returns a","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\try_stream\\mod.rs","byte_start":337089,"byte_end":337160,"line_start":248,"line_end":248,"column_start":5,"column_end":76}},{"value":"/ wrapped version of it.","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\try_stream\\mod.rs","byte_start":337165,"byte_end":337191,"line_start":249,"line_end":249,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\try_stream\\mod.rs","byte_start":337196,"byte_end":337199,"line_start":250,"line_end":250,"column_start":5,"column_end":8}},{"value":"/ To process the entire stream and return a single future representing","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\try_stream\\mod.rs","byte_start":337204,"byte_end":337276,"line_start":251,"line_end":251,"column_start":5,"column_end":77}},{"value":"/ success or error, use `try_for_each` instead.","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\try_stream\\mod.rs","byte_start":337281,"byte_end":337330,"line_start":252,"line_end":252,"column_start":5,"column_end":54}},{"value":"/","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\try_stream\\mod.rs","byte_start":337335,"byte_end":337338,"line_start":253,"line_end":253,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\try_stream\\mod.rs","byte_start":337343,"byte_end":337357,"line_start":254,"line_end":254,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\try_stream\\mod.rs","byte_start":337362,"byte_end":337365,"line_start":255,"line_end":255,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\try_stream\\mod.rs","byte_start":337370,"byte_end":337377,"line_start":256,"line_end":256,"column_start":5,"column_end":12}},{"value":"/ use futures::channel::mpsc;","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\try_stream\\mod.rs","byte_start":337382,"byte_end":337413,"line_start":257,"line_end":257,"column_start":5,"column_end":36}},{"value":"/ use futures::future;","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\try_stream\\mod.rs","byte_start":337418,"byte_end":337442,"line_start":258,"line_end":258,"column_start":5,"column_end":29}},{"value":"/ use futures::stream::TryStreamExt;","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\try_stream\\mod.rs","byte_start":337447,"byte_end":337485,"line_start":259,"line_end":259,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\try_stream\\mod.rs","byte_start":337490,"byte_end":337493,"line_start":260,"line_end":260,"column_start":5,"column_end":8}},{"value":"/ let (_tx, rx) = mpsc::channel::<Result<i32, ()>>(1);","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\try_stream\\mod.rs","byte_start":337498,"byte_end":337554,"line_start":261,"line_end":261,"column_start":5,"column_end":61}},{"value":"/","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\try_stream\\mod.rs","byte_start":337559,"byte_end":337562,"line_start":262,"line_end":262,"column_start":5,"column_end":8}},{"value":"/ let rx = rx.and_then(|result| {","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\try_stream\\mod.rs","byte_start":337567,"byte_end":337602,"line_start":263,"line_end":263,"column_start":5,"column_end":40}},{"value":"/     future::ok(if result % 2 == 0 {","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\try_stream\\mod.rs","byte_start":337607,"byte_end":337646,"line_start":264,"line_end":264,"column_start":5,"column_end":44}},{"value":"/         Some(result)","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\try_stream\\mod.rs","byte_start":337651,"byte_end":337675,"line_start":265,"line_end":265,"column_start":5,"column_end":29}},{"value":"/     } else {","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\try_stream\\mod.rs","byte_start":337680,"byte_end":337696,"line_start":266,"line_end":266,"column_start":5,"column_end":21}},{"value":"/         None","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\try_stream\\mod.rs","byte_start":337701,"byte_end":337717,"line_start":267,"line_end":267,"column_start":5,"column_end":21}},{"value":"/     })","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\try_stream\\mod.rs","byte_start":337722,"byte_end":337732,"line_start":268,"line_end":268,"column_start":5,"column_end":15}},{"value":"/ });","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\try_stream\\mod.rs","byte_start":337737,"byte_end":337744,"line_start":269,"line_end":269,"column_start":5,"column_end":12}},{"value":"/ ```","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\try_stream\\mod.rs","byte_start":337749,"byte_end":337756,"line_start":270,"line_end":270,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":5631},"span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\try_stream\\mod.rs","byte_start":338924,"byte_end":338931,"line_start":297,"line_end":297,"column_start":8,"column_end":15},"name":"or_else","qualname":"::stream::try_stream::TryStreamExt::or_else","value":"pub fn or_else<Fut, F>(Self, F) -> OrElse<Self, Fut, F> where\nF: FnMut(Self::Error) -> Fut, Fut: TryFuture<Ok = Self::Ok>, Self: Sized","parent":{"krate":0,"index":5619},"children":[],"decl_id":null,"docs":" Chain on a computation for when an error happens, passing the\n erroneous result to the provided closure `f`.","sig":null,"attributes":[{"value":"/ Chain on a computation for when an error happens, passing the","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\try_stream\\mod.rs","byte_start":338025,"byte_end":338090,"line_start":280,"line_end":280,"column_start":5,"column_end":70}},{"value":"/ erroneous result to the provided closure `f`.","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\try_stream\\mod.rs","byte_start":338095,"byte_end":338144,"line_start":281,"line_end":281,"column_start":5,"column_end":54}},{"value":"/","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\try_stream\\mod.rs","byte_start":338149,"byte_end":338152,"line_start":282,"line_end":282,"column_start":5,"column_end":8}},{"value":"/ This function can be used to run a unit of work and attempt to recover from","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\try_stream\\mod.rs","byte_start":338157,"byte_end":338236,"line_start":283,"line_end":283,"column_start":5,"column_end":84}},{"value":"/ an error if one happens. The closure provided will be yielded an error","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\try_stream\\mod.rs","byte_start":338241,"byte_end":338315,"line_start":284,"line_end":284,"column_start":5,"column_end":79}},{"value":"/ when one appears, and the returned future will then be run to completion","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\try_stream\\mod.rs","byte_start":338320,"byte_end":338396,"line_start":285,"line_end":285,"column_start":5,"column_end":81}},{"value":"/ to produce the next value on this stream.","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\try_stream\\mod.rs","byte_start":338401,"byte_end":338446,"line_start":286,"line_end":286,"column_start":5,"column_end":50}},{"value":"/","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\try_stream\\mod.rs","byte_start":338451,"byte_end":338454,"line_start":287,"line_end":287,"column_start":5,"column_end":8}},{"value":"/ Any successful values produced by this stream will not be passed to the","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\try_stream\\mod.rs","byte_start":338459,"byte_end":338534,"line_start":288,"line_end":288,"column_start":5,"column_end":80}},{"value":"/ closure, and will be passed through.","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\try_stream\\mod.rs","byte_start":338539,"byte_end":338579,"line_start":289,"line_end":289,"column_start":5,"column_end":45}},{"value":"/","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\try_stream\\mod.rs","byte_start":338584,"byte_end":338587,"line_start":290,"line_end":290,"column_start":5,"column_end":8}},{"value":"/ The returned value of the closure must implement the [`TryFuture`](futures_core::future::TryFuture) trait","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\try_stream\\mod.rs","byte_start":338592,"byte_end":338701,"line_start":291,"line_end":291,"column_start":5,"column_end":114}},{"value":"/ and can represent some more work to be done before the composed stream","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\try_stream\\mod.rs","byte_start":338706,"byte_end":338780,"line_start":292,"line_end":292,"column_start":5,"column_end":79}},{"value":"/ is finished.","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\try_stream\\mod.rs","byte_start":338785,"byte_end":338801,"line_start":293,"line_end":293,"column_start":5,"column_end":21}},{"value":"/","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\try_stream\\mod.rs","byte_start":338806,"byte_end":338809,"line_start":294,"line_end":294,"column_start":5,"column_end":8}},{"value":"/ Note that this function consumes the receiving stream and returns a","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\try_stream\\mod.rs","byte_start":338814,"byte_end":338885,"line_start":295,"line_end":295,"column_start":5,"column_end":76}},{"value":"/ wrapped version of it.","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\try_stream\\mod.rs","byte_start":338890,"byte_end":338916,"line_start":296,"line_end":296,"column_start":5,"column_end":31}}]},{"kind":"Method","id":{"krate":0,"index":5634},"span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\try_stream\\mod.rs","byte_start":339483,"byte_end":339493,"line_start":312,"line_end":312,"column_start":8,"column_end":18},"name":"inspect_ok","qualname":"::stream::try_stream::TryStreamExt::inspect_ok","value":"pub fn inspect_ok<F>(Self, F) -> InspectOk<Self, F> where F: FnMut(&Self::Ok)\n-> (), Self: Sized","parent":{"krate":0,"index":5619},"children":[],"decl_id":null,"docs":" Do something with the success value of this stream, afterwards passing\n it on.","sig":null,"attributes":[{"value":"/ Do something with the success value of this stream, afterwards passing","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\try_stream\\mod.rs","byte_start":339180,"byte_end":339254,"line_start":306,"line_end":306,"column_start":5,"column_end":79}},{"value":"/ it on.","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\try_stream\\mod.rs","byte_start":339259,"byte_end":339269,"line_start":307,"line_end":307,"column_start":5,"column_end":15}},{"value":"/","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\try_stream\\mod.rs","byte_start":339274,"byte_end":339277,"line_start":308,"line_end":308,"column_start":5,"column_end":8}},{"value":"/ This is similar to the `StreamExt::inspect` method where it allows","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\try_stream\\mod.rs","byte_start":339282,"byte_end":339352,"line_start":309,"line_end":309,"column_start":5,"column_end":75}},{"value":"/ easily inspecting the success value as it passes through the stream, for","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\try_stream\\mod.rs","byte_start":339357,"byte_end":339433,"line_start":310,"line_end":310,"column_start":5,"column_end":81}},{"value":"/ example to debug what's going on.","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\try_stream\\mod.rs","byte_start":339438,"byte_end":339475,"line_start":311,"line_end":311,"column_start":5,"column_end":42}}]},{"kind":"Method","id":{"krate":0,"index":5636},"span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\try_stream\\mod.rs","byte_start":339982,"byte_end":339993,"line_start":325,"line_end":325,"column_start":8,"column_end":19},"name":"inspect_err","qualname":"::stream::try_stream::TryStreamExt::inspect_err","value":"pub fn inspect_err<F>(Self, F) -> InspectErr<Self, F> where\nF: FnMut(&Self::Error) -> (), Self: Sized","parent":{"krate":0,"index":5619},"children":[],"decl_id":null,"docs":" Do something with the error value of this stream, afterwards passing it on.","sig":null,"attributes":[{"value":"/ Do something with the error value of this stream, afterwards passing it on.","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\try_stream\\mod.rs","byte_start":339691,"byte_end":339770,"line_start":320,"line_end":320,"column_start":5,"column_end":84}},{"value":"/","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\try_stream\\mod.rs","byte_start":339775,"byte_end":339778,"line_start":321,"line_end":321,"column_start":5,"column_end":8}},{"value":"/ This is similar to the `StreamExt::inspect` method where it allows","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\try_stream\\mod.rs","byte_start":339783,"byte_end":339853,"line_start":322,"line_end":322,"column_start":5,"column_end":75}},{"value":"/ easily inspecting the error value as it passes through the stream, for","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\try_stream\\mod.rs","byte_start":339858,"byte_end":339932,"line_start":323,"line_end":323,"column_start":5,"column_end":79}},{"value":"/ example to debug what's going on.","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\try_stream\\mod.rs","byte_start":339937,"byte_end":339974,"line_start":324,"line_end":324,"column_start":5,"column_end":42}}]},{"kind":"Method","id":{"krate":0,"index":5638},"span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\try_stream\\mod.rs","byte_start":340914,"byte_end":340925,"line_start":354,"line_end":354,"column_start":8,"column_end":19},"name":"into_stream","qualname":"::stream::try_stream::TryStreamExt::into_stream","value":"pub fn into_stream(Self) -> IntoStream<Self> where Self: Sized","parent":{"krate":0,"index":5619},"children":[],"decl_id":null,"docs":" Wraps a [`TryStream`] into a type that implements\n [`Stream`](futures_core::stream::Stream)","sig":null,"attributes":[{"value":"/ Wraps a [`TryStream`] into a type that implements","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\try_stream\\mod.rs","byte_start":340196,"byte_end":340249,"line_start":333,"line_end":333,"column_start":5,"column_end":58}},{"value":"/ [`Stream`](futures_core::stream::Stream)","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\try_stream\\mod.rs","byte_start":340254,"byte_end":340298,"line_start":334,"line_end":334,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\try_stream\\mod.rs","byte_start":340303,"byte_end":340306,"line_start":335,"line_end":335,"column_start":5,"column_end":8}},{"value":"/ [`TryStream`]s currently do not implement the","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\try_stream\\mod.rs","byte_start":340311,"byte_end":340360,"line_start":336,"line_end":336,"column_start":5,"column_end":54}},{"value":"/ [`Stream`](futures_core::stream::Stream) trait because of limitations","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\try_stream\\mod.rs","byte_start":340365,"byte_end":340438,"line_start":337,"line_end":337,"column_start":5,"column_end":78}},{"value":"/ of the compiler.","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\try_stream\\mod.rs","byte_start":340443,"byte_end":340463,"line_start":338,"line_end":338,"column_start":5,"column_end":25}},{"value":"/","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\try_stream\\mod.rs","byte_start":340468,"byte_end":340471,"line_start":339,"line_end":339,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\try_stream\\mod.rs","byte_start":340476,"byte_end":340490,"line_start":340,"line_end":340,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\try_stream\\mod.rs","byte_start":340495,"byte_end":340498,"line_start":341,"line_end":341,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\try_stream\\mod.rs","byte_start":340503,"byte_end":340510,"line_start":342,"line_end":342,"column_start":5,"column_end":12}},{"value":"/ use futures::stream::{Stream, TryStream, TryStreamExt};","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\try_stream\\mod.rs","byte_start":340515,"byte_end":340574,"line_start":343,"line_end":343,"column_start":5,"column_end":64}},{"value":"/","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\try_stream\\mod.rs","byte_start":340579,"byte_end":340582,"line_start":344,"line_end":344,"column_start":5,"column_end":8}},{"value":"/ # type T = i32;","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\try_stream\\mod.rs","byte_start":340587,"byte_end":340606,"line_start":345,"line_end":345,"column_start":5,"column_end":24}},{"value":"/ # type E = ();","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\try_stream\\mod.rs","byte_start":340611,"byte_end":340629,"line_start":346,"line_end":346,"column_start":5,"column_end":23}},{"value":"/ fn make_try_stream() -> impl TryStream<Ok = T, Error = E> { // ... }","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\try_stream\\mod.rs","byte_start":340634,"byte_end":340706,"line_start":347,"line_end":347,"column_start":5,"column_end":77}},{"value":"/ # futures::stream::empty()","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\try_stream\\mod.rs","byte_start":340711,"byte_end":340741,"line_start":348,"line_end":348,"column_start":5,"column_end":35}},{"value":"/ # }","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\try_stream\\mod.rs","byte_start":340746,"byte_end":340753,"line_start":349,"line_end":349,"column_start":5,"column_end":12}},{"value":"/ fn take_stream(stream: impl Stream<Item = Result<T, E>>) { /* ... */ }","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\try_stream\\mod.rs","byte_start":340758,"byte_end":340832,"line_start":350,"line_end":350,"column_start":5,"column_end":79}},{"value":"/","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\try_stream\\mod.rs","byte_start":340837,"byte_end":340840,"line_start":351,"line_end":351,"column_start":5,"column_end":8}},{"value":"/ take_stream(make_try_stream().into_stream());","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\try_stream\\mod.rs","byte_start":340845,"byte_end":340894,"line_start":352,"line_end":352,"column_start":5,"column_end":54}},{"value":"/ ```","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\try_stream\\mod.rs","byte_start":340899,"byte_end":340906,"line_start":353,"line_end":353,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":5639},"span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\try_stream\\mod.rs","byte_start":341820,"byte_end":341828,"line_start":381,"line_end":381,"column_start":8,"column_end":16},"name":"try_next","qualname":"::stream::try_stream::TryStreamExt::try_next","value":"pub fn try_next(&mut Self) -> TryNext<, Self> where Self: Unpin","parent":{"krate":0,"index":5619},"children":[],"decl_id":null,"docs":" Creates a future that attempts to resolve the next item in the stream.\n If an error is encountered before the next item, the error is returned\n instead.","sig":null,"attributes":[{"value":"/ Creates a future that attempts to resolve the next item in the stream.","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\try_stream\\mod.rs","byte_start":341081,"byte_end":341155,"line_start":361,"line_end":361,"column_start":5,"column_end":79}},{"value":"/ If an error is encountered before the next item, the error is returned","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\try_stream\\mod.rs","byte_start":341160,"byte_end":341234,"line_start":362,"line_end":362,"column_start":5,"column_end":79}},{"value":"/ instead.","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\try_stream\\mod.rs","byte_start":341239,"byte_end":341251,"line_start":363,"line_end":363,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\try_stream\\mod.rs","byte_start":341256,"byte_end":341259,"line_start":364,"line_end":364,"column_start":5,"column_end":8}},{"value":"/ This is similar to the `Stream::next` combinator, but returns a","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\try_stream\\mod.rs","byte_start":341264,"byte_end":341331,"line_start":365,"line_end":365,"column_start":5,"column_end":72}},{"value":"/ `Result<Option<T>, E>` rather than an `Option<Result<T, E>>`, making","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\try_stream\\mod.rs","byte_start":341336,"byte_end":341408,"line_start":366,"line_end":366,"column_start":5,"column_end":77}},{"value":"/ for easy use with the `?` operator.","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\try_stream\\mod.rs","byte_start":341413,"byte_end":341452,"line_start":367,"line_end":367,"column_start":5,"column_end":44}},{"value":"/","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\try_stream\\mod.rs","byte_start":341457,"byte_end":341460,"line_start":368,"line_end":368,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\try_stream\\mod.rs","byte_start":341465,"byte_end":341479,"line_start":369,"line_end":369,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\try_stream\\mod.rs","byte_start":341484,"byte_end":341487,"line_start":370,"line_end":370,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\try_stream\\mod.rs","byte_start":341492,"byte_end":341499,"line_start":371,"line_end":371,"column_start":5,"column_end":12}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\try_stream\\mod.rs","byte_start":341504,"byte_end":341545,"line_start":372,"line_end":372,"column_start":5,"column_end":46}},{"value":"/ use futures::stream::{self, TryStreamExt};","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\try_stream\\mod.rs","byte_start":341550,"byte_end":341596,"line_start":373,"line_end":373,"column_start":5,"column_end":51}},{"value":"/","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\try_stream\\mod.rs","byte_start":341601,"byte_end":341604,"line_start":374,"line_end":374,"column_start":5,"column_end":8}},{"value":"/ let mut stream = stream::iter(vec![Ok(()), Err(())]);","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\try_stream\\mod.rs","byte_start":341609,"byte_end":341666,"line_start":375,"line_end":375,"column_start":5,"column_end":62}},{"value":"/","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\try_stream\\mod.rs","byte_start":341671,"byte_end":341674,"line_start":376,"line_end":376,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(stream.try_next().await, Ok(Some(())));","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\try_stream\\mod.rs","byte_start":341679,"byte_end":341733,"line_start":377,"line_end":377,"column_start":5,"column_end":59}},{"value":"/ assert_eq!(stream.try_next().await, Err(()));","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\try_stream\\mod.rs","byte_start":341738,"byte_end":341787,"line_start":378,"line_end":378,"column_start":5,"column_end":54}},{"value":"/ # })","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\try_stream\\mod.rs","byte_start":341792,"byte_end":341800,"line_start":379,"line_end":379,"column_start":5,"column_end":13}},{"value":"/ ```","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\try_stream\\mod.rs","byte_start":341805,"byte_end":341812,"line_start":380,"line_end":380,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":5640},"span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\try_stream\\mod.rs","byte_start":343180,"byte_end":343192,"line_start":421,"line_end":421,"column_start":8,"column_end":20},"name":"try_for_each","qualname":"::stream::try_stream::TryStreamExt::try_for_each","value":"pub fn try_for_each<Fut, F>(Self, F) -> TryForEach<Self, Fut, F> where\nF: FnMut(Self::Ok) -> Fut, Fut: TryFuture<Ok = (), Error = ()>, Self: Sized","parent":{"krate":0,"index":5619},"children":[],"decl_id":null,"docs":" Attempts to run this stream to completion, executing the provided\n asynchronous closure for each element on the stream.","sig":null,"attributes":[{"value":"/ Attempts to run this stream to completion, executing the provided","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\try_stream\\mod.rs","byte_start":341995,"byte_end":342064,"line_start":388,"line_end":388,"column_start":5,"column_end":74}},{"value":"/ asynchronous closure for each element on the stream.","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\try_stream\\mod.rs","byte_start":342069,"byte_end":342125,"line_start":389,"line_end":389,"column_start":5,"column_end":61}},{"value":"/","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\try_stream\\mod.rs","byte_start":342130,"byte_end":342133,"line_start":390,"line_end":390,"column_start":5,"column_end":8}},{"value":"/ The provided closure will be called for each item this stream produces,","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\try_stream\\mod.rs","byte_start":342138,"byte_end":342213,"line_start":391,"line_end":391,"column_start":5,"column_end":80}},{"value":"/ yielding a future. That future will then be executed to completion","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\try_stream\\mod.rs","byte_start":342218,"byte_end":342288,"line_start":392,"line_end":392,"column_start":5,"column_end":75}},{"value":"/ before moving on to the next item.","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\try_stream\\mod.rs","byte_start":342293,"byte_end":342331,"line_start":393,"line_end":393,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\try_stream\\mod.rs","byte_start":342336,"byte_end":342339,"line_start":394,"line_end":394,"column_start":5,"column_end":8}},{"value":"/ The returned value is a [`Future`](futures_core::future::Future) where the","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\try_stream\\mod.rs","byte_start":342344,"byte_end":342422,"line_start":395,"line_end":395,"column_start":5,"column_end":83}},{"value":"/ [`Output`](futures_core::future::Future::Output) type is","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\try_stream\\mod.rs","byte_start":342427,"byte_end":342487,"line_start":396,"line_end":396,"column_start":5,"column_end":65}},{"value":"/ `Result<(), Self::Error>`. If any of the intermediate","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\try_stream\\mod.rs","byte_start":342492,"byte_end":342549,"line_start":397,"line_end":397,"column_start":5,"column_end":62}},{"value":"/ futures or the stream returns an error, this future will return","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\try_stream\\mod.rs","byte_start":342554,"byte_end":342621,"line_start":398,"line_end":398,"column_start":5,"column_end":72}},{"value":"/ immediately with an error.","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\try_stream\\mod.rs","byte_start":342626,"byte_end":342656,"line_start":399,"line_end":399,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\try_stream\\mod.rs","byte_start":342661,"byte_end":342664,"line_start":400,"line_end":400,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\try_stream\\mod.rs","byte_start":342669,"byte_end":342683,"line_start":401,"line_end":401,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\try_stream\\mod.rs","byte_start":342688,"byte_end":342691,"line_start":402,"line_end":402,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\try_stream\\mod.rs","byte_start":342696,"byte_end":342703,"line_start":403,"line_end":403,"column_start":5,"column_end":12}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\try_stream\\mod.rs","byte_start":342708,"byte_end":342749,"line_start":404,"line_end":404,"column_start":5,"column_end":46}},{"value":"/ use futures::future;","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\try_stream\\mod.rs","byte_start":342754,"byte_end":342778,"line_start":405,"line_end":405,"column_start":5,"column_end":29}},{"value":"/ use futures::stream::{self, TryStreamExt};","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\try_stream\\mod.rs","byte_start":342783,"byte_end":342829,"line_start":406,"line_end":406,"column_start":5,"column_end":51}},{"value":"/","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\try_stream\\mod.rs","byte_start":342834,"byte_end":342837,"line_start":407,"line_end":407,"column_start":5,"column_end":8}},{"value":"/ let mut x = 0i32;","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\try_stream\\mod.rs","byte_start":342842,"byte_end":342863,"line_start":408,"line_end":408,"column_start":5,"column_end":26}},{"value":"/","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\try_stream\\mod.rs","byte_start":342868,"byte_end":342871,"line_start":409,"line_end":409,"column_start":5,"column_end":8}},{"value":"/ {","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\try_stream\\mod.rs","byte_start":342876,"byte_end":342881,"line_start":410,"line_end":410,"column_start":5,"column_end":10}},{"value":"/     let fut = stream::repeat(Ok(1)).try_for_each(|item| {","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\try_stream\\mod.rs","byte_start":342886,"byte_end":342947,"line_start":411,"line_end":411,"column_start":5,"column_end":66}},{"value":"/         x += item;","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\try_stream\\mod.rs","byte_start":342952,"byte_end":342974,"line_start":412,"line_end":412,"column_start":5,"column_end":27}},{"value":"/         future::ready(if x == 3 { Err(()) } else { Ok(()) })","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\try_stream\\mod.rs","byte_start":342979,"byte_end":343043,"line_start":413,"line_end":413,"column_start":5,"column_end":69}},{"value":"/     });","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\try_stream\\mod.rs","byte_start":343048,"byte_end":343059,"line_start":414,"line_end":414,"column_start":5,"column_end":16}},{"value":"/     assert_eq!(fut.await, Err(()));","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\try_stream\\mod.rs","byte_start":343064,"byte_end":343103,"line_start":415,"line_end":415,"column_start":5,"column_end":44}},{"value":"/ }","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\try_stream\\mod.rs","byte_start":343108,"byte_end":343113,"line_start":416,"line_end":416,"column_start":5,"column_end":10}},{"value":"/","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\try_stream\\mod.rs","byte_start":343118,"byte_end":343121,"line_start":417,"line_end":417,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(x, 3);","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\try_stream\\mod.rs","byte_start":343126,"byte_end":343147,"line_start":418,"line_end":418,"column_start":5,"column_end":26}},{"value":"/ # })","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\try_stream\\mod.rs","byte_start":343152,"byte_end":343160,"line_start":419,"line_end":419,"column_start":5,"column_end":13}},{"value":"/ ```","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\try_stream\\mod.rs","byte_start":343165,"byte_end":343172,"line_start":420,"line_end":420,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":5643},"span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\try_stream\\mod.rs","byte_start":344205,"byte_end":344219,"line_start":451,"line_end":451,"column_start":8,"column_end":22},"name":"try_skip_while","qualname":"::stream::try_stream::TryStreamExt::try_skip_while","value":"pub fn try_skip_while<Fut, F>(Self, F) -> TrySkipWhile<Self, Fut, F> where\nF: FnMut(&Self::Ok) -> Fut, Fut: TryFuture<Ok = bool, Error = bool>,\nSelf: Sized","parent":{"krate":0,"index":5619},"children":[],"decl_id":null,"docs":" Skip elements on this stream while the provided asynchronous predicate\n resolves to `true`.","sig":null,"attributes":[{"value":"/ Skip elements on this stream while the provided asynchronous predicate","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\try_stream\\mod.rs","byte_start":343456,"byte_end":343530,"line_start":430,"line_end":430,"column_start":5,"column_end":79}},{"value":"/ resolves to `true`.","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\try_stream\\mod.rs","byte_start":343535,"byte_end":343558,"line_start":431,"line_end":431,"column_start":5,"column_end":28}},{"value":"/","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\try_stream\\mod.rs","byte_start":343563,"byte_end":343566,"line_start":432,"line_end":432,"column_start":5,"column_end":8}},{"value":"/ This function is similar to","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\try_stream\\mod.rs","byte_start":343571,"byte_end":343602,"line_start":433,"line_end":433,"column_start":5,"column_end":36}},{"value":"/ [`StreamExt::skip_while`](crate::stream::StreamExt::skip_while) but exits","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\try_stream\\mod.rs","byte_start":343607,"byte_end":343684,"line_start":434,"line_end":434,"column_start":5,"column_end":82}},{"value":"/ early if an error occurs.","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\try_stream\\mod.rs","byte_start":343689,"byte_end":343718,"line_start":435,"line_end":435,"column_start":5,"column_end":34}},{"value":"/","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\try_stream\\mod.rs","byte_start":343723,"byte_end":343726,"line_start":436,"line_end":436,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\try_stream\\mod.rs","byte_start":343731,"byte_end":343745,"line_start":437,"line_end":437,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\try_stream\\mod.rs","byte_start":343750,"byte_end":343753,"line_start":438,"line_end":438,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\try_stream\\mod.rs","byte_start":343758,"byte_end":343765,"line_start":439,"line_end":439,"column_start":5,"column_end":12}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\try_stream\\mod.rs","byte_start":343770,"byte_end":343811,"line_start":440,"line_end":440,"column_start":5,"column_end":46}},{"value":"/ use futures::future;","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\try_stream\\mod.rs","byte_start":343816,"byte_end":343840,"line_start":441,"line_end":441,"column_start":5,"column_end":29}},{"value":"/ use futures::stream::{self, TryStreamExt};","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\try_stream\\mod.rs","byte_start":343845,"byte_end":343891,"line_start":442,"line_end":442,"column_start":5,"column_end":51}},{"value":"/","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\try_stream\\mod.rs","byte_start":343896,"byte_end":343899,"line_start":443,"line_end":443,"column_start":5,"column_end":8}},{"value":"/ let stream = stream::iter(vec![Ok::<i32, i32>(1), Ok(3), Ok(2)]);","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\try_stream\\mod.rs","byte_start":343904,"byte_end":343973,"line_start":444,"line_end":444,"column_start":5,"column_end":74}},{"value":"/ let stream = stream.try_skip_while(|x| future::ready(Ok(*x < 3)));","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\try_stream\\mod.rs","byte_start":343978,"byte_end":344048,"line_start":445,"line_end":445,"column_start":5,"column_end":75}},{"value":"/","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\try_stream\\mod.rs","byte_start":344053,"byte_end":344056,"line_start":446,"line_end":446,"column_start":5,"column_end":8}},{"value":"/ let output: Result<Vec<i32>, i32> = stream.try_collect().await;","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\try_stream\\mod.rs","byte_start":344061,"byte_end":344128,"line_start":447,"line_end":447,"column_start":5,"column_end":72}},{"value":"/ assert_eq!(output, Ok(vec![3, 2]));","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\try_stream\\mod.rs","byte_start":344133,"byte_end":344172,"line_start":448,"line_end":448,"column_start":5,"column_end":44}},{"value":"/ # })","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\try_stream\\mod.rs","byte_start":344177,"byte_end":344185,"line_start":449,"line_end":449,"column_start":5,"column_end":13}},{"value":"/ ```","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\try_stream\\mod.rs","byte_start":344190,"byte_end":344197,"line_start":450,"line_end":450,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":5646},"span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\try_stream\\mod.rs","byte_start":345252,"byte_end":345266,"line_start":481,"line_end":481,"column_start":8,"column_end":22},"name":"try_take_while","qualname":"::stream::try_stream::TryStreamExt::try_take_while","value":"pub fn try_take_while<Fut, F>(Self, F) -> TryTakeWhile<Self, Fut, F> where\nF: FnMut(&Self::Ok) -> Fut, Fut: TryFuture<Ok = bool, Error = bool>,\nSelf: Sized","parent":{"krate":0,"index":5619},"children":[],"decl_id":null,"docs":" Take elements on this stream while the provided asynchronous predicate\n resolves to `true`.","sig":null,"attributes":[{"value":"/ Take elements on this stream while the provided asynchronous predicate","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\try_stream\\mod.rs","byte_start":344496,"byte_end":344570,"line_start":460,"line_end":460,"column_start":5,"column_end":79}},{"value":"/ resolves to `true`.","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\try_stream\\mod.rs","byte_start":344575,"byte_end":344598,"line_start":461,"line_end":461,"column_start":5,"column_end":28}},{"value":"/","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\try_stream\\mod.rs","byte_start":344603,"byte_end":344606,"line_start":462,"line_end":462,"column_start":5,"column_end":8}},{"value":"/ This function is similar to","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\try_stream\\mod.rs","byte_start":344611,"byte_end":344642,"line_start":463,"line_end":463,"column_start":5,"column_end":36}},{"value":"/ [`StreamExt::take_while`](crate::stream::StreamExt::take_while) but exits","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\try_stream\\mod.rs","byte_start":344647,"byte_end":344724,"line_start":464,"line_end":464,"column_start":5,"column_end":82}},{"value":"/ early if an error occurs.","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\try_stream\\mod.rs","byte_start":344729,"byte_end":344758,"line_start":465,"line_end":465,"column_start":5,"column_end":34}},{"value":"/","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\try_stream\\mod.rs","byte_start":344763,"byte_end":344766,"line_start":466,"line_end":466,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\try_stream\\mod.rs","byte_start":344771,"byte_end":344785,"line_start":467,"line_end":467,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\try_stream\\mod.rs","byte_start":344790,"byte_end":344793,"line_start":468,"line_end":468,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\try_stream\\mod.rs","byte_start":344798,"byte_end":344805,"line_start":469,"line_end":469,"column_start":5,"column_end":12}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\try_stream\\mod.rs","byte_start":344810,"byte_end":344851,"line_start":470,"line_end":470,"column_start":5,"column_end":46}},{"value":"/ use futures::future;","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\try_stream\\mod.rs","byte_start":344856,"byte_end":344880,"line_start":471,"line_end":471,"column_start":5,"column_end":29}},{"value":"/ use futures::stream::{self, TryStreamExt};","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\try_stream\\mod.rs","byte_start":344885,"byte_end":344931,"line_start":472,"line_end":472,"column_start":5,"column_end":51}},{"value":"/","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\try_stream\\mod.rs","byte_start":344936,"byte_end":344939,"line_start":473,"line_end":473,"column_start":5,"column_end":8}},{"value":"/ let stream = stream::iter(vec![Ok::<i32, i32>(1), Ok(2), Ok(3), Ok(2)]);","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\try_stream\\mod.rs","byte_start":344944,"byte_end":345020,"line_start":474,"line_end":474,"column_start":5,"column_end":81}},{"value":"/ let stream = stream.try_take_while(|x| future::ready(Ok(*x < 3)));","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\try_stream\\mod.rs","byte_start":345025,"byte_end":345095,"line_start":475,"line_end":475,"column_start":5,"column_end":75}},{"value":"/","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\try_stream\\mod.rs","byte_start":345100,"byte_end":345103,"line_start":476,"line_end":476,"column_start":5,"column_end":8}},{"value":"/ let output: Result<Vec<i32>, i32> = stream.try_collect().await;","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\try_stream\\mod.rs","byte_start":345108,"byte_end":345175,"line_start":477,"line_end":477,"column_start":5,"column_end":72}},{"value":"/ assert_eq!(output, Ok(vec![1, 2]));","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\try_stream\\mod.rs","byte_start":345180,"byte_end":345219,"line_start":478,"line_end":478,"column_start":5,"column_end":44}},{"value":"/ # })","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\try_stream\\mod.rs","byte_start":345224,"byte_end":345232,"line_start":479,"line_end":479,"column_start":5,"column_end":13}},{"value":"/ ```","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\try_stream\\mod.rs","byte_start":345237,"byte_end":345244,"line_start":480,"line_end":480,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":5649},"span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\try_stream\\mod.rs","byte_start":347181,"byte_end":347204,"line_start":533,"line_end":533,"column_start":8,"column_end":31},"name":"try_for_each_concurrent","qualname":"::stream::try_stream::TryStreamExt::try_for_each_concurrent","value":"pub fn try_for_each_concurrent<Fut, F,\nimpl Into<Option<usize>>: Into<Option<usize>>>(Self, impl Into<Option<usize>>,\nF) -> TryForEachConcurrent<Self, Fut, F> where F: FnMut(Self::Ok) -> Fut,\nFut: Future<Output = Result<(), Self::Error>>, Self: Sized","parent":{"krate":0,"index":5619},"children":[],"decl_id":null,"docs":" Attempts to run this stream to completion, executing the provided asynchronous\n closure for each element on the stream concurrently as elements become\n available, exiting as soon as an error occurs.","sig":null,"attributes":[{"value":"/ Attempts to run this stream to completion, executing the provided asynchronous","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\try_stream\\mod.rs","byte_start":345543,"byte_end":345625,"line_start":490,"line_end":490,"column_start":5,"column_end":87}},{"value":"/ closure for each element on the stream concurrently as elements become","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\try_stream\\mod.rs","byte_start":345630,"byte_end":345704,"line_start":491,"line_end":491,"column_start":5,"column_end":79}},{"value":"/ available, exiting as soon as an error occurs.","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\try_stream\\mod.rs","byte_start":345709,"byte_end":345759,"line_start":492,"line_end":492,"column_start":5,"column_end":55}},{"value":"/","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\try_stream\\mod.rs","byte_start":345764,"byte_end":345767,"line_start":493,"line_end":493,"column_start":5,"column_end":8}},{"value":"/ This is similar to","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\try_stream\\mod.rs","byte_start":345772,"byte_end":345794,"line_start":494,"line_end":494,"column_start":5,"column_end":27}},{"value":"/ [`StreamExt::for_each_concurrent`](crate::stream::StreamExt::for_each_concurrent),","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\try_stream\\mod.rs","byte_start":345799,"byte_end":345885,"line_start":495,"line_end":495,"column_start":5,"column_end":91}},{"value":"/ but will resolve to an error immediately if the underlying stream or the provided","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\try_stream\\mod.rs","byte_start":345890,"byte_end":345975,"line_start":496,"line_end":496,"column_start":5,"column_end":90}},{"value":"/ closure return an error.","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\try_stream\\mod.rs","byte_start":345980,"byte_end":346008,"line_start":497,"line_end":497,"column_start":5,"column_end":33}},{"value":"/","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\try_stream\\mod.rs","byte_start":346013,"byte_end":346016,"line_start":498,"line_end":498,"column_start":5,"column_end":8}},{"value":"/ This method is only available when the `std` or `alloc` feature of this","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\try_stream\\mod.rs","byte_start":346021,"byte_end":346096,"line_start":499,"line_end":499,"column_start":5,"column_end":80}},{"value":"/ library is activated, and it is activated by default.","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\try_stream\\mod.rs","byte_start":346101,"byte_end":346158,"line_start":500,"line_end":500,"column_start":5,"column_end":62}},{"value":"/","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\try_stream\\mod.rs","byte_start":346163,"byte_end":346166,"line_start":501,"line_end":501,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\try_stream\\mod.rs","byte_start":346171,"byte_end":346185,"line_start":502,"line_end":502,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\try_stream\\mod.rs","byte_start":346190,"byte_end":346193,"line_start":503,"line_end":503,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\try_stream\\mod.rs","byte_start":346198,"byte_end":346205,"line_start":504,"line_end":504,"column_start":5,"column_end":12}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\try_stream\\mod.rs","byte_start":346210,"byte_end":346251,"line_start":505,"line_end":505,"column_start":5,"column_end":46}},{"value":"/ use futures::channel::oneshot;","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\try_stream\\mod.rs","byte_start":346256,"byte_end":346290,"line_start":506,"line_end":506,"column_start":5,"column_end":39}},{"value":"/ use futures::stream::{self, StreamExt, TryStreamExt};","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\try_stream\\mod.rs","byte_start":346295,"byte_end":346352,"line_start":507,"line_end":507,"column_start":5,"column_end":62}},{"value":"/","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\try_stream\\mod.rs","byte_start":346357,"byte_end":346360,"line_start":508,"line_end":508,"column_start":5,"column_end":8}},{"value":"/ let (tx1, rx1) = oneshot::channel();","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\try_stream\\mod.rs","byte_start":346365,"byte_end":346405,"line_start":509,"line_end":509,"column_start":5,"column_end":45}},{"value":"/ let (tx2, rx2) = oneshot::channel();","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\try_stream\\mod.rs","byte_start":346410,"byte_end":346450,"line_start":510,"line_end":510,"column_start":5,"column_end":45}},{"value":"/ let (_tx3, rx3) = oneshot::channel();","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\try_stream\\mod.rs","byte_start":346455,"byte_end":346496,"line_start":511,"line_end":511,"column_start":5,"column_end":46}},{"value":"/","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\try_stream\\mod.rs","byte_start":346501,"byte_end":346504,"line_start":512,"line_end":512,"column_start":5,"column_end":8}},{"value":"/ let stream = stream::iter(vec![rx1, rx2, rx3]);","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\try_stream\\mod.rs","byte_start":346509,"byte_end":346560,"line_start":513,"line_end":513,"column_start":5,"column_end":56}},{"value":"/ let fut = stream.map(Ok).try_for_each_concurrent(","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\try_stream\\mod.rs","byte_start":346565,"byte_end":346618,"line_start":514,"line_end":514,"column_start":5,"column_end":58}},{"value":"/     /* limit */ 2,","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\try_stream\\mod.rs","byte_start":346623,"byte_end":346645,"line_start":515,"line_end":515,"column_start":5,"column_end":27}},{"value":"/     |rx| async move {","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\try_stream\\mod.rs","byte_start":346650,"byte_end":346675,"line_start":516,"line_end":516,"column_start":5,"column_end":30}},{"value":"/         let res: Result<(), oneshot::Canceled> = rx.await;","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\try_stream\\mod.rs","byte_start":346680,"byte_end":346742,"line_start":517,"line_end":517,"column_start":5,"column_end":67}},{"value":"/         res","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\try_stream\\mod.rs","byte_start":346747,"byte_end":346762,"line_start":518,"line_end":518,"column_start":5,"column_end":20}},{"value":"/     }","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\try_stream\\mod.rs","byte_start":346767,"byte_end":346776,"line_start":519,"line_end":519,"column_start":5,"column_end":14}},{"value":"/ );","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\try_stream\\mod.rs","byte_start":346781,"byte_end":346787,"line_start":520,"line_end":520,"column_start":5,"column_end":11}},{"value":"/","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\try_stream\\mod.rs","byte_start":346792,"byte_end":346795,"line_start":521,"line_end":521,"column_start":5,"column_end":8}},{"value":"/ tx1.send(()).unwrap();","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\try_stream\\mod.rs","byte_start":346800,"byte_end":346826,"line_start":522,"line_end":522,"column_start":5,"column_end":31}},{"value":"/ // Drop the second sender so that `rx2` resolves to `Canceled`.","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\try_stream\\mod.rs","byte_start":346831,"byte_end":346898,"line_start":523,"line_end":523,"column_start":5,"column_end":72}},{"value":"/ drop(tx2);","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\try_stream\\mod.rs","byte_start":346903,"byte_end":346917,"line_start":524,"line_end":524,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\try_stream\\mod.rs","byte_start":346922,"byte_end":346925,"line_start":525,"line_end":525,"column_start":5,"column_end":8}},{"value":"/ // The final result is an error because the second future","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\try_stream\\mod.rs","byte_start":346930,"byte_end":346991,"line_start":526,"line_end":526,"column_start":5,"column_end":66}},{"value":"/ // resulted in an error.","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\try_stream\\mod.rs","byte_start":346996,"byte_end":347024,"line_start":527,"line_end":527,"column_start":5,"column_end":33}},{"value":"/ assert_eq!(Err(oneshot::Canceled), fut.await);","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\try_stream\\mod.rs","byte_start":347029,"byte_end":347079,"line_start":528,"line_end":528,"column_start":5,"column_end":55}},{"value":"/ # })","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\try_stream\\mod.rs","byte_start":347084,"byte_end":347092,"line_start":529,"line_end":529,"column_start":5,"column_end":13}},{"value":"/ ```","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\try_stream\\mod.rs","byte_start":347097,"byte_end":347104,"line_start":530,"line_end":530,"column_start":5,"column_end":12}},{"value":"cfg(not(futures_no_atomic_cas))","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\try_stream\\mod.rs","byte_start":347109,"byte_end":347143,"line_start":531,"line_end":531,"column_start":5,"column_end":39}},{"value":"cfg(feature = \"alloc\")","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\try_stream\\mod.rs","byte_start":347148,"byte_end":347173,"line_start":532,"line_end":532,"column_start":5,"column_end":30}}]},{"kind":"Method","id":{"krate":0,"index":5653},"span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\try_stream\\mod.rs","byte_start":348653,"byte_end":348664,"line_start":580,"line_end":580,"column_start":8,"column_end":19},"name":"try_collect","qualname":"::stream::try_stream::TryStreamExt::try_collect","value":"pub fn try_collect<C: Default + Extend<Self::Ok>>(Self) -> TryCollect<Self, C>\nwhere Self: Sized","parent":{"krate":0,"index":5619},"children":[],"decl_id":null,"docs":" Attempt to transform a stream into a collection,\n returning a future representing the result of that computation.","sig":null,"attributes":[{"value":"/ Attempt to transform a stream into a collection,","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\try_stream\\mod.rs","byte_start":347614,"byte_end":347666,"line_start":550,"line_end":550,"column_start":5,"column_end":57}},{"value":"/ returning a future representing the result of that computation.","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\try_stream\\mod.rs","byte_start":347671,"byte_end":347738,"line_start":551,"line_end":551,"column_start":5,"column_end":72}},{"value":"/","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\try_stream\\mod.rs","byte_start":347743,"byte_end":347746,"line_start":552,"line_end":552,"column_start":5,"column_end":8}},{"value":"/ This combinator will collect all successful results of this stream and","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\try_stream\\mod.rs","byte_start":347751,"byte_end":347825,"line_start":553,"line_end":553,"column_start":5,"column_end":79}},{"value":"/ collect them into the specified collection type. If an error happens then all","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\try_stream\\mod.rs","byte_start":347830,"byte_end":347911,"line_start":554,"line_end":554,"column_start":5,"column_end":86}},{"value":"/ collected elements will be dropped and the error will be returned.","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\try_stream\\mod.rs","byte_start":347916,"byte_end":347986,"line_start":555,"line_end":555,"column_start":5,"column_end":75}},{"value":"/","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\try_stream\\mod.rs","byte_start":347991,"byte_end":347994,"line_start":556,"line_end":556,"column_start":5,"column_end":8}},{"value":"/ The returned future will be resolved when the stream terminates.","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\try_stream\\mod.rs","byte_start":347999,"byte_end":348067,"line_start":557,"line_end":557,"column_start":5,"column_end":73}},{"value":"/","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\try_stream\\mod.rs","byte_start":348072,"byte_end":348075,"line_start":558,"line_end":558,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\try_stream\\mod.rs","byte_start":348080,"byte_end":348094,"line_start":559,"line_end":559,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\try_stream\\mod.rs","byte_start":348099,"byte_end":348102,"line_start":560,"line_end":560,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\try_stream\\mod.rs","byte_start":348107,"byte_end":348114,"line_start":561,"line_end":561,"column_start":5,"column_end":12}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\try_stream\\mod.rs","byte_start":348119,"byte_end":348160,"line_start":562,"line_end":562,"column_start":5,"column_end":46}},{"value":"/ use futures::channel::mpsc;","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\try_stream\\mod.rs","byte_start":348165,"byte_end":348196,"line_start":563,"line_end":563,"column_start":5,"column_end":36}},{"value":"/ use futures::stream::TryStreamExt;","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\try_stream\\mod.rs","byte_start":348201,"byte_end":348239,"line_start":564,"line_end":564,"column_start":5,"column_end":43}},{"value":"/ use std::thread;","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\try_stream\\mod.rs","byte_start":348244,"byte_end":348264,"line_start":565,"line_end":565,"column_start":5,"column_end":25}},{"value":"/","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\try_stream\\mod.rs","byte_start":348269,"byte_end":348272,"line_start":566,"line_end":566,"column_start":5,"column_end":8}},{"value":"/ let (tx, rx) = mpsc::unbounded();","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\try_stream\\mod.rs","byte_start":348277,"byte_end":348314,"line_start":567,"line_end":567,"column_start":5,"column_end":42}},{"value":"/","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\try_stream\\mod.rs","byte_start":348319,"byte_end":348322,"line_start":568,"line_end":568,"column_start":5,"column_end":8}},{"value":"/ thread::spawn(move || {","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\try_stream\\mod.rs","byte_start":348327,"byte_end":348354,"line_start":569,"line_end":569,"column_start":5,"column_end":32}},{"value":"/     for i in 1..=5 {","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\try_stream\\mod.rs","byte_start":348359,"byte_end":348383,"line_start":570,"line_end":570,"column_start":5,"column_end":29}},{"value":"/         tx.unbounded_send(Ok(i)).unwrap();","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\try_stream\\mod.rs","byte_start":348388,"byte_end":348434,"line_start":571,"line_end":571,"column_start":5,"column_end":51}},{"value":"/     }","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\try_stream\\mod.rs","byte_start":348439,"byte_end":348448,"line_start":572,"line_end":572,"column_start":5,"column_end":14}},{"value":"/     tx.unbounded_send(Err(6)).unwrap();","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\try_stream\\mod.rs","byte_start":348453,"byte_end":348496,"line_start":573,"line_end":573,"column_start":5,"column_end":48}},{"value":"/ });","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\try_stream\\mod.rs","byte_start":348501,"byte_end":348508,"line_start":574,"line_end":574,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\try_stream\\mod.rs","byte_start":348513,"byte_end":348516,"line_start":575,"line_end":575,"column_start":5,"column_end":8}},{"value":"/ let output: Result<Vec<i32>, i32> = rx.try_collect().await;","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\try_stream\\mod.rs","byte_start":348521,"byte_end":348584,"line_start":576,"line_end":576,"column_start":5,"column_end":68}},{"value":"/ assert_eq!(output, Err(6));","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\try_stream\\mod.rs","byte_start":348589,"byte_end":348620,"line_start":577,"line_end":577,"column_start":5,"column_end":36}},{"value":"/ # })","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\try_stream\\mod.rs","byte_start":348625,"byte_end":348633,"line_start":578,"line_end":578,"column_start":5,"column_end":13}},{"value":"/ ```","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\try_stream\\mod.rs","byte_start":348638,"byte_end":348645,"line_start":579,"line_end":579,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":5655},"span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\try_stream\\mod.rs","byte_start":350479,"byte_end":350489,"line_start":625,"line_end":625,"column_start":8,"column_end":18},"name":"try_chunks","qualname":"::stream::try_stream::TryStreamExt::try_chunks","value":"pub fn try_chunks(Self, usize) -> TryChunks<Self> where Self: Sized","parent":{"krate":0,"index":5619},"children":[],"decl_id":null,"docs":" An adaptor for chunking up successful items of the stream inside a vector.","sig":null,"attributes":[{"value":"/ An adaptor for chunking up successful items of the stream inside a vector.","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\try_stream\\mod.rs","byte_start":348847,"byte_end":348925,"line_start":587,"line_end":587,"column_start":5,"column_end":83}},{"value":"/","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\try_stream\\mod.rs","byte_start":348930,"byte_end":348933,"line_start":588,"line_end":588,"column_start":5,"column_end":8}},{"value":"/ This combinator will attempt to pull successful items from this stream and buffer","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\try_stream\\mod.rs","byte_start":348938,"byte_end":349023,"line_start":589,"line_end":589,"column_start":5,"column_end":90}},{"value":"/ them into a local vector. At most `capacity` items will get buffered","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\try_stream\\mod.rs","byte_start":349028,"byte_end":349100,"line_start":590,"line_end":590,"column_start":5,"column_end":77}},{"value":"/ before they're yielded from the returned stream.","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\try_stream\\mod.rs","byte_start":349105,"byte_end":349157,"line_start":591,"line_end":591,"column_start":5,"column_end":57}},{"value":"/","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\try_stream\\mod.rs","byte_start":349162,"byte_end":349165,"line_start":592,"line_end":592,"column_start":5,"column_end":8}},{"value":"/ Note that the vectors returned from this iterator may not always have","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\try_stream\\mod.rs","byte_start":349170,"byte_end":349243,"line_start":593,"line_end":593,"column_start":5,"column_end":78}},{"value":"/ `capacity` elements. If the underlying stream ended and only a partial","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\try_stream\\mod.rs","byte_start":349248,"byte_end":349322,"line_start":594,"line_end":594,"column_start":5,"column_end":79}},{"value":"/ vector was created, it'll be returned. Additionally if an error happens","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\try_stream\\mod.rs","byte_start":349327,"byte_end":349402,"line_start":595,"line_end":595,"column_start":5,"column_end":80}},{"value":"/ from the underlying stream then the currently buffered items will be","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\try_stream\\mod.rs","byte_start":349407,"byte_end":349479,"line_start":596,"line_end":596,"column_start":5,"column_end":77}},{"value":"/ yielded.","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\try_stream\\mod.rs","byte_start":349484,"byte_end":349496,"line_start":597,"line_end":597,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\try_stream\\mod.rs","byte_start":349501,"byte_end":349504,"line_start":598,"line_end":598,"column_start":5,"column_end":8}},{"value":"/ This method is only available when the `std` or `alloc` feature of this","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\try_stream\\mod.rs","byte_start":349509,"byte_end":349584,"line_start":599,"line_end":599,"column_start":5,"column_end":80}},{"value":"/ library is activated, and it is activated by default.","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\try_stream\\mod.rs","byte_start":349589,"byte_end":349646,"line_start":600,"line_end":600,"column_start":5,"column_end":62}},{"value":"/","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\try_stream\\mod.rs","byte_start":349651,"byte_end":349654,"line_start":601,"line_end":601,"column_start":5,"column_end":8}},{"value":"/ This function is similar to","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\try_stream\\mod.rs","byte_start":349659,"byte_end":349690,"line_start":602,"line_end":602,"column_start":5,"column_end":36}},{"value":"/ [`StreamExt::chunks`](crate::stream::StreamExt::chunks) but exits","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\try_stream\\mod.rs","byte_start":349695,"byte_end":349764,"line_start":603,"line_end":603,"column_start":5,"column_end":74}},{"value":"/ early if an error occurs.","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\try_stream\\mod.rs","byte_start":349769,"byte_end":349798,"line_start":604,"line_end":604,"column_start":5,"column_end":34}},{"value":"/","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\try_stream\\mod.rs","byte_start":349803,"byte_end":349806,"line_start":605,"line_end":605,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\try_stream\\mod.rs","byte_start":349811,"byte_end":349825,"line_start":606,"line_end":606,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\try_stream\\mod.rs","byte_start":349830,"byte_end":349833,"line_start":607,"line_end":607,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\try_stream\\mod.rs","byte_start":349838,"byte_end":349845,"line_start":608,"line_end":608,"column_start":5,"column_end":12}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\try_stream\\mod.rs","byte_start":349850,"byte_end":349891,"line_start":609,"line_end":609,"column_start":5,"column_end":46}},{"value":"/ use futures::stream::{self, TryChunksError, TryStreamExt};","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\try_stream\\mod.rs","byte_start":349896,"byte_end":349958,"line_start":610,"line_end":610,"column_start":5,"column_end":67}},{"value":"/","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\try_stream\\mod.rs","byte_start":349963,"byte_end":349966,"line_start":611,"line_end":611,"column_start":5,"column_end":8}},{"value":"/ let stream = stream::iter(vec![Ok::<i32, i32>(1), Ok(2), Ok(3), Err(4), Ok(5), Ok(6)]);","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\try_stream\\mod.rs","byte_start":349971,"byte_end":350062,"line_start":612,"line_end":612,"column_start":5,"column_end":96}},{"value":"/ let mut stream = stream.try_chunks(2);","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\try_stream\\mod.rs","byte_start":350067,"byte_end":350109,"line_start":613,"line_end":613,"column_start":5,"column_end":47}},{"value":"/","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\try_stream\\mod.rs","byte_start":350114,"byte_end":350117,"line_start":614,"line_end":614,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(stream.try_next().await, Ok(Some(vec![1, 2])));","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\try_stream\\mod.rs","byte_start":350122,"byte_end":350184,"line_start":615,"line_end":615,"column_start":5,"column_end":67}},{"value":"/ assert_eq!(stream.try_next().await, Err(TryChunksError(vec![3], 4)));","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\try_stream\\mod.rs","byte_start":350189,"byte_end":350262,"line_start":616,"line_end":616,"column_start":5,"column_end":78}},{"value":"/ assert_eq!(stream.try_next().await, Ok(Some(vec![5, 6])));","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\try_stream\\mod.rs","byte_start":350267,"byte_end":350329,"line_start":617,"line_end":617,"column_start":5,"column_end":67}},{"value":"/ # })","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\try_stream\\mod.rs","byte_start":350334,"byte_end":350342,"line_start":618,"line_end":618,"column_start":5,"column_end":13}},{"value":"/ ```","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\try_stream\\mod.rs","byte_start":350347,"byte_end":350354,"line_start":619,"line_end":619,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\try_stream\\mod.rs","byte_start":350359,"byte_end":350362,"line_start":620,"line_end":620,"column_start":5,"column_end":8}},{"value":"/ # Panics","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\try_stream\\mod.rs","byte_start":350367,"byte_end":350379,"line_start":621,"line_end":621,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\try_stream\\mod.rs","byte_start":350384,"byte_end":350387,"line_start":622,"line_end":622,"column_start":5,"column_end":8}},{"value":"/ This method will panic if `capacity` is zero.","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\try_stream\\mod.rs","byte_start":350392,"byte_end":350441,"line_start":623,"line_end":623,"column_start":5,"column_end":54}},{"value":"cfg(feature = \"alloc\")","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\try_stream\\mod.rs","byte_start":350446,"byte_end":350471,"line_start":624,"line_end":624,"column_start":5,"column_end":30}}]},{"kind":"Method","id":{"krate":0,"index":5656},"span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\try_stream\\mod.rs","byte_start":352012,"byte_end":352022,"line_start":664,"line_end":664,"column_start":8,"column_end":18},"name":"try_filter","qualname":"::stream::try_stream::TryStreamExt::try_filter","value":"pub fn try_filter<Fut, F>(Self, F) -> TryFilter<Self, Fut, F> where\nFut: Future<Output = bool>, F: FnMut(&Self::Ok) -> Fut, Self: Sized","parent":{"krate":0,"index":5619},"children":[],"decl_id":null,"docs":" Attempt to filter the values produced by this stream according to the\n provided asynchronous closure.","sig":null,"attributes":[{"value":"/ Attempt to filter the values produced by this stream according to the","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\try_stream\\mod.rs","byte_start":350724,"byte_end":350797,"line_start":634,"line_end":634,"column_start":5,"column_end":78}},{"value":"/ provided asynchronous closure.","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\try_stream\\mod.rs","byte_start":350802,"byte_end":350836,"line_start":635,"line_end":635,"column_start":5,"column_end":39}},{"value":"/","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\try_stream\\mod.rs","byte_start":350841,"byte_end":350844,"line_start":636,"line_end":636,"column_start":5,"column_end":8}},{"value":"/ As values of this stream are made available, the provided predicate `f`","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\try_stream\\mod.rs","byte_start":350849,"byte_end":350924,"line_start":637,"line_end":637,"column_start":5,"column_end":80}},{"value":"/ will be run on them. If the predicate returns a `Future` which resolves","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\try_stream\\mod.rs","byte_start":350929,"byte_end":351004,"line_start":638,"line_end":638,"column_start":5,"column_end":80}},{"value":"/ to `true`, then the stream will yield the value, but if the predicate","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\try_stream\\mod.rs","byte_start":351009,"byte_end":351082,"line_start":639,"line_end":639,"column_start":5,"column_end":78}},{"value":"/ return a `Future` which resolves to `false`, then the value will be","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\try_stream\\mod.rs","byte_start":351087,"byte_end":351158,"line_start":640,"line_end":640,"column_start":5,"column_end":76}},{"value":"/ discarded and the next value will be produced.","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\try_stream\\mod.rs","byte_start":351163,"byte_end":351213,"line_start":641,"line_end":641,"column_start":5,"column_end":55}},{"value":"/","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\try_stream\\mod.rs","byte_start":351218,"byte_end":351221,"line_start":642,"line_end":642,"column_start":5,"column_end":8}},{"value":"/ All errors are passed through without filtering in this combinator.","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\try_stream\\mod.rs","byte_start":351226,"byte_end":351297,"line_start":643,"line_end":643,"column_start":5,"column_end":76}},{"value":"/","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\try_stream\\mod.rs","byte_start":351302,"byte_end":351305,"line_start":644,"line_end":644,"column_start":5,"column_end":8}},{"value":"/ Note that this function consumes the stream passed into it and returns a","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\try_stream\\mod.rs","byte_start":351310,"byte_end":351386,"line_start":645,"line_end":645,"column_start":5,"column_end":81}},{"value":"/ wrapped version of it, similar to the existing `filter` methods in","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\try_stream\\mod.rs","byte_start":351391,"byte_end":351461,"line_start":646,"line_end":646,"column_start":5,"column_end":75}},{"value":"/ the standard library.","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\try_stream\\mod.rs","byte_start":351466,"byte_end":351491,"line_start":647,"line_end":647,"column_start":5,"column_end":30}},{"value":"/","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\try_stream\\mod.rs","byte_start":351496,"byte_end":351499,"line_start":648,"line_end":648,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\try_stream\\mod.rs","byte_start":351504,"byte_end":351518,"line_start":649,"line_end":649,"column_start":5,"column_end":19}},{"value":"/ ```","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\try_stream\\mod.rs","byte_start":351523,"byte_end":351530,"line_start":650,"line_end":650,"column_start":5,"column_end":12}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\try_stream\\mod.rs","byte_start":351535,"byte_end":351576,"line_start":651,"line_end":651,"column_start":5,"column_end":46}},{"value":"/ use futures::future;","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\try_stream\\mod.rs","byte_start":351581,"byte_end":351605,"line_start":652,"line_end":652,"column_start":5,"column_end":29}},{"value":"/ use futures::stream::{self, StreamExt, TryStreamExt};","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\try_stream\\mod.rs","byte_start":351610,"byte_end":351667,"line_start":653,"line_end":653,"column_start":5,"column_end":62}},{"value":"/","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\try_stream\\mod.rs","byte_start":351672,"byte_end":351675,"line_start":654,"line_end":654,"column_start":5,"column_end":8}},{"value":"/ let stream = stream::iter(vec![Ok(1i32), Ok(2i32), Ok(3i32), Err(\"error\")]);","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\try_stream\\mod.rs","byte_start":351680,"byte_end":351760,"line_start":655,"line_end":655,"column_start":5,"column_end":85}},{"value":"/ let mut evens = stream.try_filter(|x| {","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\try_stream\\mod.rs","byte_start":351765,"byte_end":351808,"line_start":656,"line_end":656,"column_start":5,"column_end":48}},{"value":"/     future::ready(x % 2 == 0)","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\try_stream\\mod.rs","byte_start":351813,"byte_end":351846,"line_start":657,"line_end":657,"column_start":5,"column_end":38}},{"value":"/ });","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\try_stream\\mod.rs","byte_start":351851,"byte_end":351858,"line_start":658,"line_end":658,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\try_stream\\mod.rs","byte_start":351863,"byte_end":351866,"line_start":659,"line_end":659,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(evens.next().await, Some(Ok(2)));","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\try_stream\\mod.rs","byte_start":351871,"byte_end":351919,"line_start":660,"line_end":660,"column_start":5,"column_end":53}},{"value":"/ assert_eq!(evens.next().await, Some(Err(\"error\")));","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\try_stream\\mod.rs","byte_start":351924,"byte_end":351979,"line_start":661,"line_end":661,"column_start":5,"column_end":60}},{"value":"/ # })","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\try_stream\\mod.rs","byte_start":351984,"byte_end":351992,"line_start":662,"line_end":662,"column_start":5,"column_end":13}},{"value":"/ ```","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\try_stream\\mod.rs","byte_start":351997,"byte_end":352004,"line_start":663,"line_end":663,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":5659},"span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\try_stream\\mod.rs","byte_start":353649,"byte_end":353663,"line_start":705,"line_end":705,"column_start":8,"column_end":22},"name":"try_filter_map","qualname":"::stream::try_stream::TryStreamExt::try_filter_map","value":"pub fn try_filter_map<Fut, F, T>(Self, F) -> TryFilterMap<Self, Fut, F> where\nFut: TryFuture<Ok = Option<T>, Error = Option<T>>, F: FnMut(Self::Ok) -> Fut,\nSelf: Sized","parent":{"krate":0,"index":5619},"children":[],"decl_id":null,"docs":" Attempt to filter the values produced by this stream while\n simultaneously mapping them to a different type according to the\n provided asynchronous closure.","sig":null,"attributes":[{"value":"/ Attempt to filter the values produced by this stream while","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\try_stream\\mod.rs","byte_start":352273,"byte_end":352335,"line_start":673,"line_end":673,"column_start":5,"column_end":67}},{"value":"/ simultaneously mapping them to a different type according to the","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\try_stream\\mod.rs","byte_start":352340,"byte_end":352408,"line_start":674,"line_end":674,"column_start":5,"column_end":73}},{"value":"/ provided asynchronous closure.","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\try_stream\\mod.rs","byte_start":352413,"byte_end":352447,"line_start":675,"line_end":675,"column_start":5,"column_end":39}},{"value":"/","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\try_stream\\mod.rs","byte_start":352452,"byte_end":352455,"line_start":676,"line_end":676,"column_start":5,"column_end":8}},{"value":"/ As values of this stream are made available, the provided function will","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\try_stream\\mod.rs","byte_start":352460,"byte_end":352535,"line_start":677,"line_end":677,"column_start":5,"column_end":80}},{"value":"/ be run on them. If the future returned by the predicate `f` resolves to","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\try_stream\\mod.rs","byte_start":352540,"byte_end":352615,"line_start":678,"line_end":678,"column_start":5,"column_end":80}},{"value":"/ [`Some(item)`](Some) then the stream will yield the value `item`, but if","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\try_stream\\mod.rs","byte_start":352620,"byte_end":352696,"line_start":679,"line_end":679,"column_start":5,"column_end":81}},{"value":"/ it resolves to [`None`] then the next value will be produced.","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\try_stream\\mod.rs","byte_start":352701,"byte_end":352766,"line_start":680,"line_end":680,"column_start":5,"column_end":70}},{"value":"/","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\try_stream\\mod.rs","byte_start":352771,"byte_end":352774,"line_start":681,"line_end":681,"column_start":5,"column_end":8}},{"value":"/ All errors are passed through without filtering in this combinator.","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\try_stream\\mod.rs","byte_start":352779,"byte_end":352850,"line_start":682,"line_end":682,"column_start":5,"column_end":76}},{"value":"/","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\try_stream\\mod.rs","byte_start":352855,"byte_end":352858,"line_start":683,"line_end":683,"column_start":5,"column_end":8}},{"value":"/ Note that this function consumes the stream passed into it and returns a","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\try_stream\\mod.rs","byte_start":352863,"byte_end":352939,"line_start":684,"line_end":684,"column_start":5,"column_end":81}},{"value":"/ wrapped version of it, similar to the existing `filter_map` methods in","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\try_stream\\mod.rs","byte_start":352944,"byte_end":353018,"line_start":685,"line_end":685,"column_start":5,"column_end":79}},{"value":"/ the standard library.","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\try_stream\\mod.rs","byte_start":353023,"byte_end":353048,"line_start":686,"line_end":686,"column_start":5,"column_end":30}},{"value":"/","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\try_stream\\mod.rs","byte_start":353053,"byte_end":353056,"line_start":687,"line_end":687,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\try_stream\\mod.rs","byte_start":353061,"byte_end":353075,"line_start":688,"line_end":688,"column_start":5,"column_end":19}},{"value":"/ ```","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\try_stream\\mod.rs","byte_start":353080,"byte_end":353087,"line_start":689,"line_end":689,"column_start":5,"column_end":12}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\try_stream\\mod.rs","byte_start":353092,"byte_end":353133,"line_start":690,"line_end":690,"column_start":5,"column_end":46}},{"value":"/ use futures::stream::{self, StreamExt, TryStreamExt};","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\try_stream\\mod.rs","byte_start":353138,"byte_end":353195,"line_start":691,"line_end":691,"column_start":5,"column_end":62}},{"value":"/ use futures::pin_mut;","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\try_stream\\mod.rs","byte_start":353200,"byte_end":353225,"line_start":692,"line_end":692,"column_start":5,"column_end":30}},{"value":"/","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\try_stream\\mod.rs","byte_start":353230,"byte_end":353233,"line_start":693,"line_end":693,"column_start":5,"column_end":8}},{"value":"/ let stream = stream::iter(vec![Ok(1i32), Ok(6i32), Err(\"error\")]);","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\try_stream\\mod.rs","byte_start":353238,"byte_end":353308,"line_start":694,"line_end":694,"column_start":5,"column_end":75}},{"value":"/ let halves = stream.try_filter_map(|x| async move {","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\try_stream\\mod.rs","byte_start":353313,"byte_end":353368,"line_start":695,"line_end":695,"column_start":5,"column_end":60}},{"value":"/     let ret = if x % 2 == 0 { Some(x / 2) } else { None };","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\try_stream\\mod.rs","byte_start":353373,"byte_end":353435,"line_start":696,"line_end":696,"column_start":5,"column_end":67}},{"value":"/     Ok(ret)","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\try_stream\\mod.rs","byte_start":353440,"byte_end":353455,"line_start":697,"line_end":697,"column_start":5,"column_end":20}},{"value":"/ });","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\try_stream\\mod.rs","byte_start":353460,"byte_end":353467,"line_start":698,"line_end":698,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\try_stream\\mod.rs","byte_start":353472,"byte_end":353475,"line_start":699,"line_end":699,"column_start":5,"column_end":8}},{"value":"/ pin_mut!(halves);","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\try_stream\\mod.rs","byte_start":353480,"byte_end":353501,"line_start":700,"line_end":700,"column_start":5,"column_end":26}},{"value":"/ assert_eq!(halves.next().await, Some(Ok(3)));","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\try_stream\\mod.rs","byte_start":353506,"byte_end":353555,"line_start":701,"line_end":701,"column_start":5,"column_end":54}},{"value":"/ assert_eq!(halves.next().await, Some(Err(\"error\")));","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\try_stream\\mod.rs","byte_start":353560,"byte_end":353616,"line_start":702,"line_end":702,"column_start":5,"column_end":61}},{"value":"/ # })","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\try_stream\\mod.rs","byte_start":353621,"byte_end":353629,"line_start":703,"line_end":703,"column_start":5,"column_end":13}},{"value":"/ ```","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\try_stream\\mod.rs","byte_start":353634,"byte_end":353641,"line_start":704,"line_end":704,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":5663},"span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\try_stream\\mod.rs","byte_start":355559,"byte_end":355570,"line_start":756,"line_end":756,"column_start":8,"column_end":19},"name":"try_flatten","qualname":"::stream::try_stream::TryStreamExt::try_flatten","value":"pub fn try_flatten(Self) -> TryFlatten<Self> where Self::Ok: TryStream,\n<Self::Ok as TryStream>::Error: From<Self::Error>, Self: Sized","parent":{"krate":0,"index":5619},"children":[],"decl_id":null,"docs":" Flattens a stream of streams into just one continuous stream.","sig":null,"attributes":[{"value":"/ Flattens a stream of streams into just one continuous stream.","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\try_stream\\mod.rs","byte_start":353940,"byte_end":354005,"line_start":714,"line_end":714,"column_start":5,"column_end":70}},{"value":"/","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\try_stream\\mod.rs","byte_start":354010,"byte_end":354013,"line_start":715,"line_end":715,"column_start":5,"column_end":8}},{"value":"/ If this stream's elements are themselves streams then this combinator","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\try_stream\\mod.rs","byte_start":354018,"byte_end":354091,"line_start":716,"line_end":716,"column_start":5,"column_end":78}},{"value":"/ will flatten out the entire stream to one long chain of elements. Any","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\try_stream\\mod.rs","byte_start":354096,"byte_end":354169,"line_start":717,"line_end":717,"column_start":5,"column_end":78}},{"value":"/ errors are passed through without looking at them, but otherwise each","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\try_stream\\mod.rs","byte_start":354174,"byte_end":354247,"line_start":718,"line_end":718,"column_start":5,"column_end":78}},{"value":"/ individual stream will get exhausted before moving on to the next.","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\try_stream\\mod.rs","byte_start":354252,"byte_end":354322,"line_start":719,"line_end":719,"column_start":5,"column_end":75}},{"value":"/","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\try_stream\\mod.rs","byte_start":354327,"byte_end":354330,"line_start":720,"line_end":720,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\try_stream\\mod.rs","byte_start":354335,"byte_end":354349,"line_start":721,"line_end":721,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\try_stream\\mod.rs","byte_start":354354,"byte_end":354357,"line_start":722,"line_end":722,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\try_stream\\mod.rs","byte_start":354362,"byte_end":354369,"line_start":723,"line_end":723,"column_start":5,"column_end":12}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\try_stream\\mod.rs","byte_start":354374,"byte_end":354415,"line_start":724,"line_end":724,"column_start":5,"column_end":46}},{"value":"/ use futures::channel::mpsc;","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\try_stream\\mod.rs","byte_start":354420,"byte_end":354451,"line_start":725,"line_end":725,"column_start":5,"column_end":36}},{"value":"/ use futures::stream::{StreamExt, TryStreamExt};","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\try_stream\\mod.rs","byte_start":354456,"byte_end":354507,"line_start":726,"line_end":726,"column_start":5,"column_end":56}},{"value":"/ use std::thread;","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\try_stream\\mod.rs","byte_start":354512,"byte_end":354532,"line_start":727,"line_end":727,"column_start":5,"column_end":25}},{"value":"/","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\try_stream\\mod.rs","byte_start":354537,"byte_end":354540,"line_start":728,"line_end":728,"column_start":5,"column_end":8}},{"value":"/ let (tx1, rx1) = mpsc::unbounded();","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\try_stream\\mod.rs","byte_start":354545,"byte_end":354584,"line_start":729,"line_end":729,"column_start":5,"column_end":44}},{"value":"/ let (tx2, rx2) = mpsc::unbounded();","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\try_stream\\mod.rs","byte_start":354589,"byte_end":354628,"line_start":730,"line_end":730,"column_start":5,"column_end":44}},{"value":"/ let (tx3, rx3) = mpsc::unbounded();","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\try_stream\\mod.rs","byte_start":354633,"byte_end":354672,"line_start":731,"line_end":731,"column_start":5,"column_end":44}},{"value":"/","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\try_stream\\mod.rs","byte_start":354677,"byte_end":354680,"line_start":732,"line_end":732,"column_start":5,"column_end":8}},{"value":"/ thread::spawn(move || {","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\try_stream\\mod.rs","byte_start":354685,"byte_end":354712,"line_start":733,"line_end":733,"column_start":5,"column_end":32}},{"value":"/     tx1.unbounded_send(Ok(1)).unwrap();","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\try_stream\\mod.rs","byte_start":354717,"byte_end":354760,"line_start":734,"line_end":734,"column_start":5,"column_end":48}},{"value":"/ });","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\try_stream\\mod.rs","byte_start":354765,"byte_end":354772,"line_start":735,"line_end":735,"column_start":5,"column_end":12}},{"value":"/ thread::spawn(move || {","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\try_stream\\mod.rs","byte_start":354777,"byte_end":354804,"line_start":736,"line_end":736,"column_start":5,"column_end":32}},{"value":"/     tx2.unbounded_send(Ok(2)).unwrap();","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\try_stream\\mod.rs","byte_start":354809,"byte_end":354852,"line_start":737,"line_end":737,"column_start":5,"column_end":48}},{"value":"/     tx2.unbounded_send(Err(3)).unwrap();","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\try_stream\\mod.rs","byte_start":354857,"byte_end":354901,"line_start":738,"line_end":738,"column_start":5,"column_end":49}},{"value":"/     tx2.unbounded_send(Ok(4)).unwrap();","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\try_stream\\mod.rs","byte_start":354906,"byte_end":354949,"line_start":739,"line_end":739,"column_start":5,"column_end":48}},{"value":"/ });","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\try_stream\\mod.rs","byte_start":354954,"byte_end":354961,"line_start":740,"line_end":740,"column_start":5,"column_end":12}},{"value":"/ thread::spawn(move || {","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\try_stream\\mod.rs","byte_start":354966,"byte_end":354993,"line_start":741,"line_end":741,"column_start":5,"column_end":32}},{"value":"/     tx3.unbounded_send(Ok(rx1)).unwrap();","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\try_stream\\mod.rs","byte_start":354998,"byte_end":355043,"line_start":742,"line_end":742,"column_start":5,"column_end":50}},{"value":"/     tx3.unbounded_send(Ok(rx2)).unwrap();","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\try_stream\\mod.rs","byte_start":355048,"byte_end":355093,"line_start":743,"line_end":743,"column_start":5,"column_end":50}},{"value":"/     tx3.unbounded_send(Err(5)).unwrap();","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\try_stream\\mod.rs","byte_start":355098,"byte_end":355142,"line_start":744,"line_end":744,"column_start":5,"column_end":49}},{"value":"/ });","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\try_stream\\mod.rs","byte_start":355147,"byte_end":355154,"line_start":745,"line_end":745,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\try_stream\\mod.rs","byte_start":355159,"byte_end":355162,"line_start":746,"line_end":746,"column_start":5,"column_end":8}},{"value":"/ let mut stream = rx3.try_flatten();","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\try_stream\\mod.rs","byte_start":355167,"byte_end":355206,"line_start":747,"line_end":747,"column_start":5,"column_end":44}},{"value":"/ assert_eq!(stream.next().await, Some(Ok(1)));","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\try_stream\\mod.rs","byte_start":355211,"byte_end":355260,"line_start":748,"line_end":748,"column_start":5,"column_end":54}},{"value":"/ assert_eq!(stream.next().await, Some(Ok(2)));","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\try_stream\\mod.rs","byte_start":355265,"byte_end":355314,"line_start":749,"line_end":749,"column_start":5,"column_end":54}},{"value":"/ assert_eq!(stream.next().await, Some(Err(3)));","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\try_stream\\mod.rs","byte_start":355319,"byte_end":355369,"line_start":750,"line_end":750,"column_start":5,"column_end":55}},{"value":"/ assert_eq!(stream.next().await, Some(Ok(4)));","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\try_stream\\mod.rs","byte_start":355374,"byte_end":355423,"line_start":751,"line_end":751,"column_start":5,"column_end":54}},{"value":"/ assert_eq!(stream.next().await, Some(Err(5)));","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\try_stream\\mod.rs","byte_start":355428,"byte_end":355478,"line_start":752,"line_end":752,"column_start":5,"column_end":55}},{"value":"/ assert_eq!(stream.next().await, None);","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\try_stream\\mod.rs","byte_start":355483,"byte_end":355525,"line_start":753,"line_end":753,"column_start":5,"column_end":47}},{"value":"/ # });","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\try_stream\\mod.rs","byte_start":355530,"byte_end":355539,"line_start":754,"line_end":754,"column_start":5,"column_end":14}},{"value":"/ ```","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\try_stream\\mod.rs","byte_start":355544,"byte_end":355551,"line_start":755,"line_end":755,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":5664},"span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\try_stream\\mod.rs","byte_start":357162,"byte_end":357170,"line_start":795,"line_end":795,"column_start":8,"column_end":16},"name":"try_fold","qualname":"::stream::try_stream::TryStreamExt::try_fold","value":"pub fn try_fold<T, Fut, F>(Self, T, F) -> TryFold<Self, Fut, T, F> where\nF: FnMut(T, Self::Ok) -> Fut, Fut: TryFuture<Ok = T, Error = T>, Self: Sized","parent":{"krate":0,"index":5619},"children":[],"decl_id":null,"docs":" Attempt to execute an accumulating asynchronous computation over a\n stream, collecting all the values into one final result.","sig":null,"attributes":[{"value":"/ Attempt to execute an accumulating asynchronous computation over a","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\try_stream\\mod.rs","byte_start":355875,"byte_end":355945,"line_start":767,"line_end":767,"column_start":5,"column_end":75}},{"value":"/ stream, collecting all the values into one final result.","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\try_stream\\mod.rs","byte_start":355950,"byte_end":356010,"line_start":768,"line_end":768,"column_start":5,"column_end":65}},{"value":"/","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\try_stream\\mod.rs","byte_start":356015,"byte_end":356018,"line_start":769,"line_end":769,"column_start":5,"column_end":8}},{"value":"/ This combinator will accumulate all values returned by this stream","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\try_stream\\mod.rs","byte_start":356023,"byte_end":356093,"line_start":770,"line_end":770,"column_start":5,"column_end":75}},{"value":"/ according to the closure provided. The initial state is also provided to","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\try_stream\\mod.rs","byte_start":356098,"byte_end":356174,"line_start":771,"line_end":771,"column_start":5,"column_end":81}},{"value":"/ this method and then is returned again by each execution of the closure.","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\try_stream\\mod.rs","byte_start":356179,"byte_end":356255,"line_start":772,"line_end":772,"column_start":5,"column_end":81}},{"value":"/ Once the entire stream has been exhausted the returned future will","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\try_stream\\mod.rs","byte_start":356260,"byte_end":356330,"line_start":773,"line_end":773,"column_start":5,"column_end":75}},{"value":"/ resolve to this value.","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\try_stream\\mod.rs","byte_start":356335,"byte_end":356361,"line_start":774,"line_end":774,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\try_stream\\mod.rs","byte_start":356366,"byte_end":356369,"line_start":775,"line_end":775,"column_start":5,"column_end":8}},{"value":"/ This method is similar to [`fold`](crate::stream::StreamExt::fold), but will","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\try_stream\\mod.rs","byte_start":356374,"byte_end":356454,"line_start":776,"line_end":776,"column_start":5,"column_end":85}},{"value":"/ exit early if an error is encountered in either the stream or the","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\try_stream\\mod.rs","byte_start":356459,"byte_end":356528,"line_start":777,"line_end":777,"column_start":5,"column_end":74}},{"value":"/ provided closure.","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\try_stream\\mod.rs","byte_start":356533,"byte_end":356554,"line_start":778,"line_end":778,"column_start":5,"column_end":26}},{"value":"/","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\try_stream\\mod.rs","byte_start":356559,"byte_end":356562,"line_start":779,"line_end":779,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\try_stream\\mod.rs","byte_start":356567,"byte_end":356581,"line_start":780,"line_end":780,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\try_stream\\mod.rs","byte_start":356586,"byte_end":356589,"line_start":781,"line_end":781,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\try_stream\\mod.rs","byte_start":356594,"byte_end":356601,"line_start":782,"line_end":782,"column_start":5,"column_end":12}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\try_stream\\mod.rs","byte_start":356606,"byte_end":356647,"line_start":783,"line_end":783,"column_start":5,"column_end":46}},{"value":"/ use futures::stream::{self, TryStreamExt};","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\try_stream\\mod.rs","byte_start":356652,"byte_end":356698,"line_start":784,"line_end":784,"column_start":5,"column_end":51}},{"value":"/","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\try_stream\\mod.rs","byte_start":356703,"byte_end":356706,"line_start":785,"line_end":785,"column_start":5,"column_end":8}},{"value":"/ let number_stream = stream::iter(vec![Ok::<i32, i32>(1), Ok(2)]);","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\try_stream\\mod.rs","byte_start":356711,"byte_end":356780,"line_start":786,"line_end":786,"column_start":5,"column_end":74}},{"value":"/ let sum = number_stream.try_fold(0, |acc, x| async move { Ok(acc + x) });","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\try_stream\\mod.rs","byte_start":356785,"byte_end":356862,"line_start":787,"line_end":787,"column_start":5,"column_end":82}},{"value":"/ assert_eq!(sum.await, Ok(3));","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\try_stream\\mod.rs","byte_start":356867,"byte_end":356900,"line_start":788,"line_end":788,"column_start":5,"column_end":38}},{"value":"/","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\try_stream\\mod.rs","byte_start":356905,"byte_end":356908,"line_start":789,"line_end":789,"column_start":5,"column_end":8}},{"value":"/ let number_stream_with_err = stream::iter(vec![Ok::<i32, i32>(1), Err(2), Ok(1)]);","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\try_stream\\mod.rs","byte_start":356913,"byte_end":356999,"line_start":790,"line_end":790,"column_start":5,"column_end":91}},{"value":"/ let sum = number_stream_with_err.try_fold(0, |acc, x| async move { Ok(acc + x) });","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\try_stream\\mod.rs","byte_start":357004,"byte_end":357090,"line_start":791,"line_end":791,"column_start":5,"column_end":91}},{"value":"/ assert_eq!(sum.await, Err(2));","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\try_stream\\mod.rs","byte_start":357095,"byte_end":357129,"line_start":792,"line_end":792,"column_start":5,"column_end":39}},{"value":"/ # })","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\try_stream\\mod.rs","byte_start":357134,"byte_end":357142,"line_start":793,"line_end":793,"column_start":5,"column_end":13}},{"value":"/ ```","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\try_stream\\mod.rs","byte_start":357147,"byte_end":357154,"line_start":794,"line_end":794,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":5668},"span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\try_stream\\mod.rs","byte_start":358696,"byte_end":358706,"line_start":838,"line_end":838,"column_start":8,"column_end":18},"name":"try_concat","qualname":"::stream::try_stream::TryStreamExt::try_concat","value":"pub fn try_concat(Self) -> TryConcat<Self> where Self: Sized,\nSelf::Ok: Extend<<<Self as TryStream>::Ok as IntoIterator>::Item> +\nIntoIterator + Default","parent":{"krate":0,"index":5619},"children":[],"decl_id":null,"docs":" Attempt to concatenate all items of a stream into a single\n extendable destination, returning a future representing the end result.","sig":null,"attributes":[{"value":"/ Attempt to concatenate all items of a stream into a single","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\try_stream\\mod.rs","byte_start":357450,"byte_end":357512,"line_start":804,"line_end":804,"column_start":5,"column_end":67}},{"value":"/ extendable destination, returning a future representing the end result.","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\try_stream\\mod.rs","byte_start":357517,"byte_end":357592,"line_start":805,"line_end":805,"column_start":5,"column_end":80}},{"value":"/","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\try_stream\\mod.rs","byte_start":357597,"byte_end":357600,"line_start":806,"line_end":806,"column_start":5,"column_end":8}},{"value":"/ This combinator will extend the first item with the contents of all","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\try_stream\\mod.rs","byte_start":357605,"byte_end":357676,"line_start":807,"line_end":807,"column_start":5,"column_end":76}},{"value":"/ the subsequent successful results of the stream. If the stream is empty,","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\try_stream\\mod.rs","byte_start":357681,"byte_end":357757,"line_start":808,"line_end":808,"column_start":5,"column_end":81}},{"value":"/ the default value will be returned.","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\try_stream\\mod.rs","byte_start":357762,"byte_end":357801,"line_start":809,"line_end":809,"column_start":5,"column_end":44}},{"value":"/","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\try_stream\\mod.rs","byte_start":357806,"byte_end":357809,"line_start":810,"line_end":810,"column_start":5,"column_end":8}},{"value":"/ Works with all collections that implement the [`Extend`](std::iter::Extend) trait.","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\try_stream\\mod.rs","byte_start":357814,"byte_end":357900,"line_start":811,"line_end":811,"column_start":5,"column_end":91}},{"value":"/","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\try_stream\\mod.rs","byte_start":357905,"byte_end":357908,"line_start":812,"line_end":812,"column_start":5,"column_end":8}},{"value":"/ This method is similar to [`concat`](crate::stream::StreamExt::concat), but will","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\try_stream\\mod.rs","byte_start":357913,"byte_end":357997,"line_start":813,"line_end":813,"column_start":5,"column_end":89}},{"value":"/ exit early if an error is encountered in the stream.","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\try_stream\\mod.rs","byte_start":358002,"byte_end":358058,"line_start":814,"line_end":814,"column_start":5,"column_end":61}},{"value":"/","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\try_stream\\mod.rs","byte_start":358063,"byte_end":358066,"line_start":815,"line_end":815,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\try_stream\\mod.rs","byte_start":358071,"byte_end":358085,"line_start":816,"line_end":816,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\try_stream\\mod.rs","byte_start":358090,"byte_end":358093,"line_start":817,"line_end":817,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\try_stream\\mod.rs","byte_start":358098,"byte_end":358105,"line_start":818,"line_end":818,"column_start":5,"column_end":12}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\try_stream\\mod.rs","byte_start":358110,"byte_end":358151,"line_start":819,"line_end":819,"column_start":5,"column_end":46}},{"value":"/ use futures::channel::mpsc;","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\try_stream\\mod.rs","byte_start":358156,"byte_end":358187,"line_start":820,"line_end":820,"column_start":5,"column_end":36}},{"value":"/ use futures::stream::TryStreamExt;","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\try_stream\\mod.rs","byte_start":358192,"byte_end":358230,"line_start":821,"line_end":821,"column_start":5,"column_end":43}},{"value":"/ use std::thread;","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\try_stream\\mod.rs","byte_start":358235,"byte_end":358255,"line_start":822,"line_end":822,"column_start":5,"column_end":25}},{"value":"/","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\try_stream\\mod.rs","byte_start":358260,"byte_end":358263,"line_start":823,"line_end":823,"column_start":5,"column_end":8}},{"value":"/ let (tx, rx) = mpsc::unbounded::<Result<Vec<i32>, ()>>();","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\try_stream\\mod.rs","byte_start":358268,"byte_end":358329,"line_start":824,"line_end":824,"column_start":5,"column_end":66}},{"value":"/","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\try_stream\\mod.rs","byte_start":358334,"byte_end":358337,"line_start":825,"line_end":825,"column_start":5,"column_end":8}},{"value":"/ thread::spawn(move || {","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\try_stream\\mod.rs","byte_start":358342,"byte_end":358369,"line_start":826,"line_end":826,"column_start":5,"column_end":32}},{"value":"/     for i in (0..3).rev() {","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\try_stream\\mod.rs","byte_start":358374,"byte_end":358405,"line_start":827,"line_end":827,"column_start":5,"column_end":36}},{"value":"/         let n = i * 3;","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\try_stream\\mod.rs","byte_start":358410,"byte_end":358436,"line_start":828,"line_end":828,"column_start":5,"column_end":31}},{"value":"/         tx.unbounded_send(Ok(vec![n + 1, n + 2, n + 3])).unwrap();","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\try_stream\\mod.rs","byte_start":358441,"byte_end":358511,"line_start":829,"line_end":829,"column_start":5,"column_end":75}},{"value":"/     }","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\try_stream\\mod.rs","byte_start":358516,"byte_end":358525,"line_start":830,"line_end":830,"column_start":5,"column_end":14}},{"value":"/ });","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\try_stream\\mod.rs","byte_start":358530,"byte_end":358537,"line_start":831,"line_end":831,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\try_stream\\mod.rs","byte_start":358542,"byte_end":358545,"line_start":832,"line_end":832,"column_start":5,"column_end":8}},{"value":"/ let result = rx.try_concat().await;","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\try_stream\\mod.rs","byte_start":358550,"byte_end":358589,"line_start":833,"line_end":833,"column_start":5,"column_end":44}},{"value":"/","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\try_stream\\mod.rs","byte_start":358594,"byte_end":358597,"line_start":834,"line_end":834,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(result, Ok(vec![7, 8, 9, 4, 5, 6, 1, 2, 3]));","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\try_stream\\mod.rs","byte_start":358602,"byte_end":358662,"line_start":835,"line_end":835,"column_start":5,"column_end":65}},{"value":"/ # });","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\try_stream\\mod.rs","byte_start":358667,"byte_end":358676,"line_start":836,"line_end":836,"column_start":5,"column_end":14}},{"value":"/ ```","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\try_stream\\mod.rs","byte_start":358681,"byte_end":358688,"line_start":837,"line_end":837,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":5669},"span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\try_stream\\mod.rs","byte_start":361428,"byte_end":361448,"line_start":905,"line_end":905,"column_start":8,"column_end":28},"name":"try_buffer_unordered","qualname":"::stream::try_stream::TryStreamExt::try_buffer_unordered","value":"pub fn try_buffer_unordered(Self, usize) -> TryBufferUnordered<Self> where\nSelf::Ok: TryFuture<Error = Self::Error>, Self: Sized","parent":{"krate":0,"index":5619},"children":[],"decl_id":null,"docs":" Attempt to execute several futures from a stream concurrently (unordered).","sig":null,"attributes":[{"value":"/ Attempt to execute several futures from a stream concurrently (unordered).","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\try_stream\\mod.rs","byte_start":358960,"byte_end":359038,"line_start":846,"line_end":846,"column_start":5,"column_end":83}},{"value":"/","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\try_stream\\mod.rs","byte_start":359043,"byte_end":359046,"line_start":847,"line_end":847,"column_start":5,"column_end":8}},{"value":"/ This stream's `Ok` type must be a [`TryFuture`](futures_core::future::TryFuture) with an `Error` type","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\try_stream\\mod.rs","byte_start":359051,"byte_end":359156,"line_start":848,"line_end":848,"column_start":5,"column_end":110}},{"value":"/ that matches the stream's `Error` type.","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\try_stream\\mod.rs","byte_start":359161,"byte_end":359204,"line_start":849,"line_end":849,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\try_stream\\mod.rs","byte_start":359209,"byte_end":359212,"line_start":850,"line_end":850,"column_start":5,"column_end":8}},{"value":"/ This adaptor will buffer up to `n` futures and then return their","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\try_stream\\mod.rs","byte_start":359217,"byte_end":359285,"line_start":851,"line_end":851,"column_start":5,"column_end":73}},{"value":"/ outputs in the order in which they complete. If the underlying stream","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\try_stream\\mod.rs","byte_start":359290,"byte_end":359363,"line_start":852,"line_end":852,"column_start":5,"column_end":78}},{"value":"/ returns an error, it will be immediately propagated.","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\try_stream\\mod.rs","byte_start":359368,"byte_end":359424,"line_start":853,"line_end":853,"column_start":5,"column_end":61}},{"value":"/","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\try_stream\\mod.rs","byte_start":359429,"byte_end":359432,"line_start":854,"line_end":854,"column_start":5,"column_end":8}},{"value":"/ The returned stream will be a stream of results, each containing either","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\try_stream\\mod.rs","byte_start":359437,"byte_end":359512,"line_start":855,"line_end":855,"column_start":5,"column_end":80}},{"value":"/ an error or a future's output. An error can be produced either by the","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\try_stream\\mod.rs","byte_start":359517,"byte_end":359590,"line_start":856,"line_end":856,"column_start":5,"column_end":78}},{"value":"/ underlying stream itself or by one of the futures it yielded.","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\try_stream\\mod.rs","byte_start":359595,"byte_end":359660,"line_start":857,"line_end":857,"column_start":5,"column_end":70}},{"value":"/","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\try_stream\\mod.rs","byte_start":359665,"byte_end":359668,"line_start":858,"line_end":858,"column_start":5,"column_end":8}},{"value":"/ This method is only available when the `std` or `alloc` feature of this","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\try_stream\\mod.rs","byte_start":359673,"byte_end":359748,"line_start":859,"line_end":859,"column_start":5,"column_end":80}},{"value":"/ library is activated, and it is activated by default.","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\try_stream\\mod.rs","byte_start":359753,"byte_end":359810,"line_start":860,"line_end":860,"column_start":5,"column_end":62}},{"value":"/","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\try_stream\\mod.rs","byte_start":359815,"byte_end":359818,"line_start":861,"line_end":861,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\try_stream\\mod.rs","byte_start":359823,"byte_end":359837,"line_start":862,"line_end":862,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\try_stream\\mod.rs","byte_start":359842,"byte_end":359845,"line_start":863,"line_end":863,"column_start":5,"column_end":8}},{"value":"/ Results are returned in the order of completion:","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\try_stream\\mod.rs","byte_start":359850,"byte_end":359902,"line_start":864,"line_end":864,"column_start":5,"column_end":57}},{"value":"/ ```","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\try_stream\\mod.rs","byte_start":359907,"byte_end":359914,"line_start":865,"line_end":865,"column_start":5,"column_end":12}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\try_stream\\mod.rs","byte_start":359919,"byte_end":359960,"line_start":866,"line_end":866,"column_start":5,"column_end":46}},{"value":"/ use futures::channel::oneshot;","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\try_stream\\mod.rs","byte_start":359965,"byte_end":359999,"line_start":867,"line_end":867,"column_start":5,"column_end":39}},{"value":"/ use futures::stream::{self, StreamExt, TryStreamExt};","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\try_stream\\mod.rs","byte_start":360004,"byte_end":360061,"line_start":868,"line_end":868,"column_start":5,"column_end":62}},{"value":"/","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\try_stream\\mod.rs","byte_start":360066,"byte_end":360069,"line_start":869,"line_end":869,"column_start":5,"column_end":8}},{"value":"/ let (send_one, recv_one) = oneshot::channel();","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\try_stream\\mod.rs","byte_start":360074,"byte_end":360124,"line_start":870,"line_end":870,"column_start":5,"column_end":55}},{"value":"/ let (send_two, recv_two) = oneshot::channel();","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\try_stream\\mod.rs","byte_start":360129,"byte_end":360179,"line_start":871,"line_end":871,"column_start":5,"column_end":55}},{"value":"/","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\try_stream\\mod.rs","byte_start":360184,"byte_end":360187,"line_start":872,"line_end":872,"column_start":5,"column_end":8}},{"value":"/ let stream_of_futures = stream::iter(vec![Ok(recv_one), Ok(recv_two)]);","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\try_stream\\mod.rs","byte_start":360192,"byte_end":360267,"line_start":873,"line_end":873,"column_start":5,"column_end":80}},{"value":"/","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\try_stream\\mod.rs","byte_start":360272,"byte_end":360275,"line_start":874,"line_end":874,"column_start":5,"column_end":8}},{"value":"/ let mut buffered = stream_of_futures.try_buffer_unordered(10);","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\try_stream\\mod.rs","byte_start":360280,"byte_end":360346,"line_start":875,"line_end":875,"column_start":5,"column_end":71}},{"value":"/","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\try_stream\\mod.rs","byte_start":360351,"byte_end":360354,"line_start":876,"line_end":876,"column_start":5,"column_end":8}},{"value":"/ send_two.send(2i32)?;","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\try_stream\\mod.rs","byte_start":360359,"byte_end":360384,"line_start":877,"line_end":877,"column_start":5,"column_end":30}},{"value":"/ assert_eq!(buffered.next().await, Some(Ok(2i32)));","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\try_stream\\mod.rs","byte_start":360389,"byte_end":360443,"line_start":878,"line_end":878,"column_start":5,"column_end":59}},{"value":"/","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\try_stream\\mod.rs","byte_start":360448,"byte_end":360451,"line_start":879,"line_end":879,"column_start":5,"column_end":8}},{"value":"/ send_one.send(1i32)?;","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\try_stream\\mod.rs","byte_start":360456,"byte_end":360481,"line_start":880,"line_end":880,"column_start":5,"column_end":30}},{"value":"/ assert_eq!(buffered.next().await, Some(Ok(1i32)));","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\try_stream\\mod.rs","byte_start":360486,"byte_end":360540,"line_start":881,"line_end":881,"column_start":5,"column_end":59}},{"value":"/","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\try_stream\\mod.rs","byte_start":360545,"byte_end":360548,"line_start":882,"line_end":882,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(buffered.next().await, None);","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\try_stream\\mod.rs","byte_start":360553,"byte_end":360597,"line_start":883,"line_end":883,"column_start":5,"column_end":49}},{"value":"/ # Ok::<(), i32>(()) }).unwrap();","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\try_stream\\mod.rs","byte_start":360602,"byte_end":360638,"line_start":884,"line_end":884,"column_start":5,"column_end":41}},{"value":"/ ```","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\try_stream\\mod.rs","byte_start":360643,"byte_end":360650,"line_start":885,"line_end":885,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\try_stream\\mod.rs","byte_start":360655,"byte_end":360658,"line_start":886,"line_end":886,"column_start":5,"column_end":8}},{"value":"/ Errors from the underlying stream itself are propagated:","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\try_stream\\mod.rs","byte_start":360663,"byte_end":360723,"line_start":887,"line_end":887,"column_start":5,"column_end":65}},{"value":"/ ```","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\try_stream\\mod.rs","byte_start":360728,"byte_end":360735,"line_start":888,"line_end":888,"column_start":5,"column_end":12}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\try_stream\\mod.rs","byte_start":360740,"byte_end":360781,"line_start":889,"line_end":889,"column_start":5,"column_end":46}},{"value":"/ use futures::channel::mpsc;","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\try_stream\\mod.rs","byte_start":360786,"byte_end":360817,"line_start":890,"line_end":890,"column_start":5,"column_end":36}},{"value":"/ use futures::stream::{StreamExt, TryStreamExt};","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\try_stream\\mod.rs","byte_start":360822,"byte_end":360873,"line_start":891,"line_end":891,"column_start":5,"column_end":56}},{"value":"/","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\try_stream\\mod.rs","byte_start":360878,"byte_end":360881,"line_start":892,"line_end":892,"column_start":5,"column_end":8}},{"value":"/ let (sink, stream_of_futures) = mpsc::unbounded();","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\try_stream\\mod.rs","byte_start":360886,"byte_end":360940,"line_start":893,"line_end":893,"column_start":5,"column_end":59}},{"value":"/ let mut buffered = stream_of_futures.try_buffer_unordered(10);","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\try_stream\\mod.rs","byte_start":360945,"byte_end":361011,"line_start":894,"line_end":894,"column_start":5,"column_end":71}},{"value":"/","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\try_stream\\mod.rs","byte_start":361016,"byte_end":361019,"line_start":895,"line_end":895,"column_start":5,"column_end":8}},{"value":"/ sink.unbounded_send(Ok(async { Ok(7i32) }))?;","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\try_stream\\mod.rs","byte_start":361024,"byte_end":361073,"line_start":896,"line_end":896,"column_start":5,"column_end":54}},{"value":"/ assert_eq!(buffered.next().await, Some(Ok(7i32)));","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\try_stream\\mod.rs","byte_start":361078,"byte_end":361132,"line_start":897,"line_end":897,"column_start":5,"column_end":59}},{"value":"/","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\try_stream\\mod.rs","byte_start":361137,"byte_end":361140,"line_start":898,"line_end":898,"column_start":5,"column_end":8}},{"value":"/ sink.unbounded_send(Err(\"error in the stream\"))?;","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\try_stream\\mod.rs","byte_start":361145,"byte_end":361198,"line_start":899,"line_end":899,"column_start":5,"column_end":58}},{"value":"/ assert_eq!(buffered.next().await, Some(Err(\"error in the stream\")));","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\try_stream\\mod.rs","byte_start":361203,"byte_end":361275,"line_start":900,"line_end":900,"column_start":5,"column_end":77}},{"value":"/ # Ok::<(), Box<dyn std::error::Error>>(()) }).unwrap();","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\try_stream\\mod.rs","byte_start":361280,"byte_end":361339,"line_start":901,"line_end":901,"column_start":5,"column_end":64}},{"value":"/ ```","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\try_stream\\mod.rs","byte_start":361344,"byte_end":361351,"line_start":902,"line_end":902,"column_start":5,"column_end":12}},{"value":"cfg(not(futures_no_atomic_cas))","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\try_stream\\mod.rs","byte_start":361356,"byte_end":361390,"line_start":903,"line_end":903,"column_start":5,"column_end":39}},{"value":"cfg(feature = \"alloc\")","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\try_stream\\mod.rs","byte_start":361395,"byte_end":361420,"line_start":904,"line_end":904,"column_start":5,"column_end":30}}]},{"kind":"Method","id":{"krate":0,"index":5670},"span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\try_stream\\mod.rs","byte_start":364429,"byte_end":364441,"line_start":981,"line_end":981,"column_start":8,"column_end":20},"name":"try_buffered","qualname":"::stream::try_stream::TryStreamExt::try_buffered","value":"pub fn try_buffered(Self, usize) -> TryBuffered<Self> where\nSelf::Ok: TryFuture<Error = Self::Error>, Self: Sized","parent":{"krate":0,"index":5619},"children":[],"decl_id":null,"docs":" Attempt to execute several futures from a stream concurrently.","sig":null,"attributes":[{"value":"/ Attempt to execute several futures from a stream concurrently.","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\try_stream\\mod.rs","byte_start":361725,"byte_end":361791,"line_start":915,"line_end":915,"column_start":5,"column_end":71}},{"value":"/","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\try_stream\\mod.rs","byte_start":361796,"byte_end":361799,"line_start":916,"line_end":916,"column_start":5,"column_end":8}},{"value":"/ This stream's `Ok` type must be a [`TryFuture`](futures_core::future::TryFuture) with an `Error` type","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\try_stream\\mod.rs","byte_start":361804,"byte_end":361909,"line_start":917,"line_end":917,"column_start":5,"column_end":110}},{"value":"/ that matches the stream's `Error` type.","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\try_stream\\mod.rs","byte_start":361914,"byte_end":361957,"line_start":918,"line_end":918,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\try_stream\\mod.rs","byte_start":361962,"byte_end":361965,"line_start":919,"line_end":919,"column_start":5,"column_end":8}},{"value":"/ This adaptor will buffer up to `n` futures and then return their","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\try_stream\\mod.rs","byte_start":361970,"byte_end":362038,"line_start":920,"line_end":920,"column_start":5,"column_end":73}},{"value":"/ outputs in the order. If the underlying stream returns an error, it will","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\try_stream\\mod.rs","byte_start":362043,"byte_end":362119,"line_start":921,"line_end":921,"column_start":5,"column_end":81}},{"value":"/ be immediately propagated.","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\try_stream\\mod.rs","byte_start":362124,"byte_end":362154,"line_start":922,"line_end":922,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\try_stream\\mod.rs","byte_start":362159,"byte_end":362162,"line_start":923,"line_end":923,"column_start":5,"column_end":8}},{"value":"/ The returned stream will be a stream of results, each containing either","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\try_stream\\mod.rs","byte_start":362167,"byte_end":362242,"line_start":924,"line_end":924,"column_start":5,"column_end":80}},{"value":"/ an error or a future's output. An error can be produced either by the","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\try_stream\\mod.rs","byte_start":362247,"byte_end":362320,"line_start":925,"line_end":925,"column_start":5,"column_end":78}},{"value":"/ underlying stream itself or by one of the futures it yielded.","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\try_stream\\mod.rs","byte_start":362325,"byte_end":362390,"line_start":926,"line_end":926,"column_start":5,"column_end":70}},{"value":"/","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\try_stream\\mod.rs","byte_start":362395,"byte_end":362398,"line_start":927,"line_end":927,"column_start":5,"column_end":8}},{"value":"/ This method is only available when the `std` or `alloc` feature of this","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\try_stream\\mod.rs","byte_start":362403,"byte_end":362478,"line_start":928,"line_end":928,"column_start":5,"column_end":80}},{"value":"/ library is activated, and it is activated by default.","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\try_stream\\mod.rs","byte_start":362483,"byte_end":362540,"line_start":929,"line_end":929,"column_start":5,"column_end":62}},{"value":"/","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\try_stream\\mod.rs","byte_start":362545,"byte_end":362548,"line_start":930,"line_end":930,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\try_stream\\mod.rs","byte_start":362553,"byte_end":362567,"line_start":931,"line_end":931,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\try_stream\\mod.rs","byte_start":362572,"byte_end":362575,"line_start":932,"line_end":932,"column_start":5,"column_end":8}},{"value":"/ Results are returned in the order of addition:","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\try_stream\\mod.rs","byte_start":362580,"byte_end":362630,"line_start":933,"line_end":933,"column_start":5,"column_end":55}},{"value":"/ ```","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\try_stream\\mod.rs","byte_start":362635,"byte_end":362642,"line_start":934,"line_end":934,"column_start":5,"column_end":12}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\try_stream\\mod.rs","byte_start":362647,"byte_end":362688,"line_start":935,"line_end":935,"column_start":5,"column_end":46}},{"value":"/ use futures::channel::oneshot;","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\try_stream\\mod.rs","byte_start":362693,"byte_end":362727,"line_start":936,"line_end":936,"column_start":5,"column_end":39}},{"value":"/ use futures::future::lazy;","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\try_stream\\mod.rs","byte_start":362732,"byte_end":362762,"line_start":937,"line_end":937,"column_start":5,"column_end":35}},{"value":"/ use futures::stream::{self, StreamExt, TryStreamExt};","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\try_stream\\mod.rs","byte_start":362767,"byte_end":362824,"line_start":938,"line_end":938,"column_start":5,"column_end":62}},{"value":"/","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\try_stream\\mod.rs","byte_start":362829,"byte_end":362832,"line_start":939,"line_end":939,"column_start":5,"column_end":8}},{"value":"/ let (send_one, recv_one) = oneshot::channel();","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\try_stream\\mod.rs","byte_start":362837,"byte_end":362887,"line_start":940,"line_end":940,"column_start":5,"column_end":55}},{"value":"/ let (send_two, recv_two) = oneshot::channel();","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\try_stream\\mod.rs","byte_start":362892,"byte_end":362942,"line_start":941,"line_end":941,"column_start":5,"column_end":55}},{"value":"/","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\try_stream\\mod.rs","byte_start":362947,"byte_end":362950,"line_start":942,"line_end":942,"column_start":5,"column_end":8}},{"value":"/ let mut buffered = lazy(move |cx| {","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\try_stream\\mod.rs","byte_start":362955,"byte_end":362994,"line_start":943,"line_end":943,"column_start":5,"column_end":44}},{"value":"/     let stream_of_futures = stream::iter(vec![Ok(recv_one), Ok(recv_two)]);","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\try_stream\\mod.rs","byte_start":362999,"byte_end":363078,"line_start":944,"line_end":944,"column_start":5,"column_end":84}},{"value":"/","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\try_stream\\mod.rs","byte_start":363083,"byte_end":363086,"line_start":945,"line_end":945,"column_start":5,"column_end":8}},{"value":"/     let mut buffered = stream_of_futures.try_buffered(10);","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\try_stream\\mod.rs","byte_start":363091,"byte_end":363153,"line_start":946,"line_end":946,"column_start":5,"column_end":67}},{"value":"/","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\try_stream\\mod.rs","byte_start":363158,"byte_end":363161,"line_start":947,"line_end":947,"column_start":5,"column_end":8}},{"value":"/     assert!(buffered.try_poll_next_unpin(cx).is_pending());","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\try_stream\\mod.rs","byte_start":363166,"byte_end":363229,"line_start":948,"line_end":948,"column_start":5,"column_end":68}},{"value":"/","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\try_stream\\mod.rs","byte_start":363234,"byte_end":363237,"line_start":949,"line_end":949,"column_start":5,"column_end":8}},{"value":"/     send_two.send(2i32)?;","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\try_stream\\mod.rs","byte_start":363242,"byte_end":363271,"line_start":950,"line_end":950,"column_start":5,"column_end":34}},{"value":"/     assert!(buffered.try_poll_next_unpin(cx).is_pending());","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\try_stream\\mod.rs","byte_start":363276,"byte_end":363339,"line_start":951,"line_end":951,"column_start":5,"column_end":68}},{"value":"/     Ok::<_, i32>(buffered)","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\try_stream\\mod.rs","byte_start":363344,"byte_end":363374,"line_start":952,"line_end":952,"column_start":5,"column_end":35}},{"value":"/ }).await?;","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\try_stream\\mod.rs","byte_start":363379,"byte_end":363393,"line_start":953,"line_end":953,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\try_stream\\mod.rs","byte_start":363398,"byte_end":363401,"line_start":954,"line_end":954,"column_start":5,"column_end":8}},{"value":"/ send_one.send(1i32)?;","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\try_stream\\mod.rs","byte_start":363406,"byte_end":363431,"line_start":955,"line_end":955,"column_start":5,"column_end":30}},{"value":"/ assert_eq!(buffered.next().await, Some(Ok(1i32)));","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\try_stream\\mod.rs","byte_start":363436,"byte_end":363490,"line_start":956,"line_end":956,"column_start":5,"column_end":59}},{"value":"/ assert_eq!(buffered.next().await, Some(Ok(2i32)));","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\try_stream\\mod.rs","byte_start":363495,"byte_end":363549,"line_start":957,"line_end":957,"column_start":5,"column_end":59}},{"value":"/","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\try_stream\\mod.rs","byte_start":363554,"byte_end":363557,"line_start":958,"line_end":958,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(buffered.next().await, None);","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\try_stream\\mod.rs","byte_start":363562,"byte_end":363606,"line_start":959,"line_end":959,"column_start":5,"column_end":49}},{"value":"/ # Ok::<(), i32>(()) }).unwrap();","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\try_stream\\mod.rs","byte_start":363611,"byte_end":363647,"line_start":960,"line_end":960,"column_start":5,"column_end":41}},{"value":"/ ```","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\try_stream\\mod.rs","byte_start":363652,"byte_end":363659,"line_start":961,"line_end":961,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\try_stream\\mod.rs","byte_start":363664,"byte_end":363667,"line_start":962,"line_end":962,"column_start":5,"column_end":8}},{"value":"/ Errors from the underlying stream itself are propagated:","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\try_stream\\mod.rs","byte_start":363672,"byte_end":363732,"line_start":963,"line_end":963,"column_start":5,"column_end":65}},{"value":"/ ```","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\try_stream\\mod.rs","byte_start":363737,"byte_end":363744,"line_start":964,"line_end":964,"column_start":5,"column_end":12}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\try_stream\\mod.rs","byte_start":363749,"byte_end":363790,"line_start":965,"line_end":965,"column_start":5,"column_end":46}},{"value":"/ use futures::channel::mpsc;","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\try_stream\\mod.rs","byte_start":363795,"byte_end":363826,"line_start":966,"line_end":966,"column_start":5,"column_end":36}},{"value":"/ use futures::stream::{StreamExt, TryStreamExt};","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\try_stream\\mod.rs","byte_start":363831,"byte_end":363882,"line_start":967,"line_end":967,"column_start":5,"column_end":56}},{"value":"/","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\try_stream\\mod.rs","byte_start":363887,"byte_end":363890,"line_start":968,"line_end":968,"column_start":5,"column_end":8}},{"value":"/ let (sink, stream_of_futures) = mpsc::unbounded();","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\try_stream\\mod.rs","byte_start":363895,"byte_end":363949,"line_start":969,"line_end":969,"column_start":5,"column_end":59}},{"value":"/ let mut buffered = stream_of_futures.try_buffered(10);","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\try_stream\\mod.rs","byte_start":363954,"byte_end":364012,"line_start":970,"line_end":970,"column_start":5,"column_end":63}},{"value":"/","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\try_stream\\mod.rs","byte_start":364017,"byte_end":364020,"line_start":971,"line_end":971,"column_start":5,"column_end":8}},{"value":"/ sink.unbounded_send(Ok(async { Ok(7i32) }))?;","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\try_stream\\mod.rs","byte_start":364025,"byte_end":364074,"line_start":972,"line_end":972,"column_start":5,"column_end":54}},{"value":"/ assert_eq!(buffered.next().await, Some(Ok(7i32)));","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\try_stream\\mod.rs","byte_start":364079,"byte_end":364133,"line_start":973,"line_end":973,"column_start":5,"column_end":59}},{"value":"/","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\try_stream\\mod.rs","byte_start":364138,"byte_end":364141,"line_start":974,"line_end":974,"column_start":5,"column_end":8}},{"value":"/ sink.unbounded_send(Err(\"error in the stream\"))?;","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\try_stream\\mod.rs","byte_start":364146,"byte_end":364199,"line_start":975,"line_end":975,"column_start":5,"column_end":58}},{"value":"/ assert_eq!(buffered.next().await, Some(Err(\"error in the stream\")));","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\try_stream\\mod.rs","byte_start":364204,"byte_end":364276,"line_start":976,"line_end":976,"column_start":5,"column_end":77}},{"value":"/ # Ok::<(), Box<dyn std::error::Error>>(()) }).unwrap();","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\try_stream\\mod.rs","byte_start":364281,"byte_end":364340,"line_start":977,"line_end":977,"column_start":5,"column_end":64}},{"value":"/ ```","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\try_stream\\mod.rs","byte_start":364345,"byte_end":364352,"line_start":978,"line_end":978,"column_start":5,"column_end":12}},{"value":"cfg(not(futures_no_atomic_cas))","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\try_stream\\mod.rs","byte_start":364357,"byte_end":364391,"line_start":979,"line_end":979,"column_start":5,"column_end":39}},{"value":"cfg(feature = \"alloc\")","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\try_stream\\mod.rs","byte_start":364396,"byte_end":364421,"line_start":980,"line_end":980,"column_start":5,"column_end":30}}]},{"kind":"Method","id":{"krate":0,"index":5671},"span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\try_stream\\mod.rs","byte_start":364896,"byte_end":364915,"line_start":995,"line_end":995,"column_start":8,"column_end":27},"name":"try_poll_next_unpin","qualname":"::stream::try_stream::TryStreamExt::try_poll_next_unpin","value":"pub fn try_poll_next_unpin(&mut Self, &mut Context)\n-> Poll<Option<Result<Self::Ok, Self::Error>>> where Self: Unpin","parent":{"krate":0,"index":5619},"children":[],"decl_id":null,"docs":" A convenience method for calling [`TryStream::try_poll_next`] on [`Unpin`]\n stream types.\n","sig":null,"attributes":[{"value":"/ A convenience method for calling [`TryStream::try_poll_next`] on [`Unpin`]","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\try_stream\\mod.rs","byte_start":364788,"byte_end":364866,"line_start":993,"line_end":993,"column_start":5,"column_end":83}},{"value":"/ stream types.","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\try_stream\\mod.rs","byte_start":364871,"byte_end":364888,"line_start":994,"line_end":994,"column_start":5,"column_end":22}}]},{"kind":"Method","id":{"krate":0,"index":5672},"span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\try_stream\\mod.rs","byte_start":367276,"byte_end":367291,"line_start":1062,"line_end":1062,"column_start":8,"column_end":23},"name":"into_async_read","qualname":"::stream::try_stream::TryStreamExt::into_async_read","value":"pub fn into_async_read(Self) -> IntoAsyncRead<Self> where Self: Sized +\nTryStreamExt<Error = std::io::Error> + Unpin, Self::Ok: AsRef<[u8]>","parent":{"krate":0,"index":5619},"children":[],"decl_id":null,"docs":" Adapter that converts this stream into an [`AsyncRead`](crate::io::AsyncRead).","sig":null,"attributes":[{"value":"/ Adapter that converts this stream into an [`AsyncRead`](crate::io::AsyncRead).","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\try_stream\\mod.rs","byte_start":366054,"byte_end":366136,"line_start":1034,"line_end":1034,"column_start":5,"column_end":87}},{"value":"/","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\try_stream\\mod.rs","byte_start":366141,"byte_end":366144,"line_start":1035,"line_end":1035,"column_start":5,"column_end":8}},{"value":"/ Note that because `into_async_read` moves the stream, the [`Stream`](futures_core::stream::Stream) type must be","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\try_stream\\mod.rs","byte_start":366149,"byte_end":366264,"line_start":1036,"line_end":1036,"column_start":5,"column_end":120}},{"value":"/ [`Unpin`]. If you want to use `into_async_read` with a [`!Unpin`](Unpin) stream, you'll","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\try_stream\\mod.rs","byte_start":366269,"byte_end":366360,"line_start":1037,"line_end":1037,"column_start":5,"column_end":96}},{"value":"/ first have to pin the stream. This can be done by boxing the stream using [`Box::pin`]","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\try_stream\\mod.rs","byte_start":366365,"byte_end":366455,"line_start":1038,"line_end":1038,"column_start":5,"column_end":95}},{"value":"/ or pinning it to the stack using the `pin_mut!` macro from the `pin_utils` crate.","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\try_stream\\mod.rs","byte_start":366460,"byte_end":366545,"line_start":1039,"line_end":1039,"column_start":5,"column_end":90}},{"value":"/","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\try_stream\\mod.rs","byte_start":366550,"byte_end":366553,"line_start":1040,"line_end":1040,"column_start":5,"column_end":8}},{"value":"/ This method is only available when the `std` feature of this","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\try_stream\\mod.rs","byte_start":366558,"byte_end":366622,"line_start":1041,"line_end":1041,"column_start":5,"column_end":69}},{"value":"/ library is activated, and it is activated by default.","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\try_stream\\mod.rs","byte_start":366627,"byte_end":366684,"line_start":1042,"line_end":1042,"column_start":5,"column_end":62}},{"value":"/","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\try_stream\\mod.rs","byte_start":366689,"byte_end":366692,"line_start":1043,"line_end":1043,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\try_stream\\mod.rs","byte_start":366697,"byte_end":366711,"line_start":1044,"line_end":1044,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\try_stream\\mod.rs","byte_start":366716,"byte_end":366719,"line_start":1045,"line_end":1045,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\try_stream\\mod.rs","byte_start":366724,"byte_end":366731,"line_start":1046,"line_end":1046,"column_start":5,"column_end":12}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\try_stream\\mod.rs","byte_start":366736,"byte_end":366777,"line_start":1047,"line_end":1047,"column_start":5,"column_end":46}},{"value":"/ use futures::stream::{self, TryStreamExt};","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\try_stream\\mod.rs","byte_start":366782,"byte_end":366828,"line_start":1048,"line_end":1048,"column_start":5,"column_end":51}},{"value":"/ use futures::io::AsyncReadExt;","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\try_stream\\mod.rs","byte_start":366833,"byte_end":366867,"line_start":1049,"line_end":1049,"column_start":5,"column_end":39}},{"value":"/","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\try_stream\\mod.rs","byte_start":366872,"byte_end":366875,"line_start":1050,"line_end":1050,"column_start":5,"column_end":8}},{"value":"/ let stream = stream::iter(vec![Ok(vec![1, 2, 3, 4, 5])]);","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\try_stream\\mod.rs","byte_start":366880,"byte_end":366941,"line_start":1051,"line_end":1051,"column_start":5,"column_end":66}},{"value":"/ let mut reader = stream.into_async_read();","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\try_stream\\mod.rs","byte_start":366946,"byte_end":366992,"line_start":1052,"line_end":1052,"column_start":5,"column_end":51}},{"value":"/ let mut buf = Vec::new();","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\try_stream\\mod.rs","byte_start":366997,"byte_end":367026,"line_start":1053,"line_end":1053,"column_start":5,"column_end":34}},{"value":"/","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\try_stream\\mod.rs","byte_start":367031,"byte_end":367034,"line_start":1054,"line_end":1054,"column_start":5,"column_end":8}},{"value":"/ assert!(reader.read_to_end(&mut buf).await.is_ok());","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\try_stream\\mod.rs","byte_start":367039,"byte_end":367095,"line_start":1055,"line_end":1055,"column_start":5,"column_end":61}},{"value":"/ assert_eq!(buf, &[1, 2, 3, 4, 5]);","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\try_stream\\mod.rs","byte_start":367100,"byte_end":367138,"line_start":1056,"line_end":1056,"column_start":5,"column_end":43}},{"value":"/ # })","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\try_stream\\mod.rs","byte_start":367143,"byte_end":367151,"line_start":1057,"line_end":1057,"column_start":5,"column_end":13}},{"value":"/ ```","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\try_stream\\mod.rs","byte_start":367156,"byte_end":367163,"line_start":1058,"line_end":1058,"column_start":5,"column_end":12}},{"value":"cfg(feature = \"io\")","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\try_stream\\mod.rs","byte_start":367168,"byte_end":367190,"line_start":1059,"line_end":1059,"column_start":5,"column_end":27}},{"value":"cfg(feature = \"std\")","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\try_stream\\mod.rs","byte_start":367245,"byte_end":367268,"line_start":1061,"line_end":1061,"column_start":5,"column_end":28}}]},{"kind":"Struct","id":{"krate":0,"index":16475},"span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\iter.rs","byte_start":421591,"byte_end":421595,"line_start":9,"line_end":9,"column_start":12,"column_end":16},"name":"Iter","qualname":"::stream::iter::Iter","value":"Iter {  }","parent":null,"children":[{"krate":0,"index":16477}],"decl_id":null,"docs":" Stream for the [`iter`] function.\n","sig":null,"attributes":[{"value":"/ Stream for the [`iter`] function.","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\iter.rs","byte_start":421469,"byte_end":421506,"line_start":6,"line_end":6,"column_start":1,"column_end":38}},{"value":"must_use = \"streams do nothing unless polled\"","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\iter.rs","byte_start":421531,"byte_end":421579,"line_start":8,"line_end":8,"column_start":1,"column_end":49}}]},{"kind":"Function","id":{"krate":0,"index":5776},"span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\iter.rs","byte_start":422113,"byte_end":422117,"line_start":29,"line_end":29,"column_start":8,"column_end":12},"name":"iter","qualname":"::stream::iter::iter","value":"pub fn iter<I>(I) -> Iter<I::IntoIter> where I: IntoIterator","parent":null,"children":[],"decl_id":null,"docs":" Converts an `Iterator` into a `Stream` which is always ready\n to yield the next value.","sig":null,"attributes":[{"value":"/ Converts an `Iterator` into a `Stream` which is always ready","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\iter.rs","byte_start":421647,"byte_end":421711,"line_start":15,"line_end":15,"column_start":1,"column_end":65}},{"value":"/ to yield the next value.","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\iter.rs","byte_start":421712,"byte_end":421740,"line_start":16,"line_end":16,"column_start":1,"column_end":29}},{"value":"/","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\iter.rs","byte_start":421741,"byte_end":421744,"line_start":17,"line_end":17,"column_start":1,"column_end":4}},{"value":"/ Iterators in Rust don't express the ability to block, so this adapter","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\iter.rs","byte_start":421745,"byte_end":421818,"line_start":18,"line_end":18,"column_start":1,"column_end":74}},{"value":"/ simply always calls `iter.next()` and returns that.","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\iter.rs","byte_start":421819,"byte_end":421874,"line_start":19,"line_end":19,"column_start":1,"column_end":56}},{"value":"/","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\iter.rs","byte_start":421875,"byte_end":421878,"line_start":20,"line_end":20,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\iter.rs","byte_start":421879,"byte_end":421886,"line_start":21,"line_end":21,"column_start":1,"column_end":8}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\iter.rs","byte_start":421887,"byte_end":421928,"line_start":22,"line_end":22,"column_start":1,"column_end":42}},{"value":"/ use futures::stream::{self, StreamExt};","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\iter.rs","byte_start":421929,"byte_end":421972,"line_start":23,"line_end":23,"column_start":1,"column_end":44}},{"value":"/","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\iter.rs","byte_start":421973,"byte_end":421976,"line_start":24,"line_end":24,"column_start":1,"column_end":4}},{"value":"/ let stream = stream::iter(vec![17, 19]);","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\iter.rs","byte_start":421977,"byte_end":422021,"line_start":25,"line_end":25,"column_start":1,"column_end":45}},{"value":"/ assert_eq!(vec![17, 19], stream.collect::<Vec<i32>>().await);","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\iter.rs","byte_start":422022,"byte_end":422087,"line_start":26,"line_end":26,"column_start":1,"column_end":66}},{"value":"/ # });","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\iter.rs","byte_start":422088,"byte_end":422097,"line_start":27,"line_end":27,"column_start":1,"column_end":10}},{"value":"/ ```","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\iter.rs","byte_start":422098,"byte_end":422105,"line_start":28,"line_end":28,"column_start":1,"column_end":8}}]},{"kind":"Struct","id":{"krate":0,"index":16484},"span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\repeat.rs","byte_start":422808,"byte_end":422814,"line_start":9,"line_end":9,"column_start":12,"column_end":18},"name":"Repeat","qualname":"::stream::repeat::Repeat","value":"Repeat {  }","parent":null,"children":[{"krate":0,"index":16486}],"decl_id":null,"docs":" Stream for the [`repeat`] function.\n","sig":null,"attributes":[{"value":"/ Stream for the [`repeat`] function.","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\repeat.rs","byte_start":422684,"byte_end":422723,"line_start":6,"line_end":6,"column_start":1,"column_end":40}},{"value":"must_use = \"streams do nothing unless polled\"","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\repeat.rs","byte_start":422748,"byte_end":422796,"line_start":8,"line_end":8,"column_start":1,"column_end":49}}]},{"kind":"Function","id":{"krate":0,"index":5811},"span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\repeat.rs","byte_start":423338,"byte_end":423344,"line_start":27,"line_end":27,"column_start":8,"column_end":14},"name":"repeat","qualname":"::stream::repeat::repeat","value":"pub fn repeat<T>(T) -> Repeat<T> where T: Clone","parent":null,"children":[],"decl_id":null,"docs":" Create a stream which produces the same item repeatedly.","sig":null,"attributes":[{"value":"/ Create a stream which produces the same item repeatedly.","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\repeat.rs","byte_start":422836,"byte_end":422896,"line_start":13,"line_end":13,"column_start":1,"column_end":61}},{"value":"/","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\repeat.rs","byte_start":422897,"byte_end":422900,"line_start":14,"line_end":14,"column_start":1,"column_end":4}},{"value":"/ The stream never terminates. Note that you likely want to avoid","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\repeat.rs","byte_start":422901,"byte_end":422968,"line_start":15,"line_end":15,"column_start":1,"column_end":68}},{"value":"/ usage of `collect` or such on the returned stream as it will exhaust","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\repeat.rs","byte_start":422969,"byte_end":423041,"line_start":16,"line_end":16,"column_start":1,"column_end":73}},{"value":"/ available memory as it tries to just fill up all RAM.","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\repeat.rs","byte_start":423042,"byte_end":423099,"line_start":17,"line_end":17,"column_start":1,"column_end":58}},{"value":"/","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\repeat.rs","byte_start":423100,"byte_end":423103,"line_start":18,"line_end":18,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\repeat.rs","byte_start":423104,"byte_end":423111,"line_start":19,"line_end":19,"column_start":1,"column_end":8}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\repeat.rs","byte_start":423112,"byte_end":423153,"line_start":20,"line_end":20,"column_start":1,"column_end":42}},{"value":"/ use futures::stream::{self, StreamExt};","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\repeat.rs","byte_start":423154,"byte_end":423197,"line_start":21,"line_end":21,"column_start":1,"column_end":44}},{"value":"/","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\repeat.rs","byte_start":423198,"byte_end":423201,"line_start":22,"line_end":22,"column_start":1,"column_end":4}},{"value":"/ let stream = stream::repeat(9);","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\repeat.rs","byte_start":423202,"byte_end":423237,"line_start":23,"line_end":23,"column_start":1,"column_end":36}},{"value":"/ assert_eq!(vec![9, 9, 9], stream.take(3).collect::<Vec<i32>>().await);","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\repeat.rs","byte_start":423238,"byte_end":423312,"line_start":24,"line_end":24,"column_start":1,"column_end":75}},{"value":"/ # });","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\repeat.rs","byte_start":423313,"byte_end":423322,"line_start":25,"line_end":25,"column_start":1,"column_end":10}},{"value":"/ ```","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\repeat.rs","byte_start":423323,"byte_end":423330,"line_start":26,"line_end":26,"column_start":1,"column_end":8}}]},{"kind":"Struct","id":{"krate":0,"index":16493},"span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\repeat_with.rs","byte_start":424335,"byte_end":424345,"line_start":13,"line_end":13,"column_start":12,"column_end":22},"name":"RepeatWith","qualname":"::stream::repeat_with::RepeatWith","value":"RepeatWith {  }","parent":null,"children":[{"krate":0,"index":16495}],"decl_id":null,"docs":" An stream that repeats elements of type `A` endlessly by\n applying the provided closure `F: FnMut() -> A`.","sig":null,"attributes":[{"value":"/ An stream that repeats elements of type `A` endlessly by","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\repeat_with.rs","byte_start":424033,"byte_end":424093,"line_start":6,"line_end":6,"column_start":1,"column_end":61}},{"value":"/ applying the provided closure `F: FnMut() -> A`.","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\repeat_with.rs","byte_start":424094,"byte_end":424146,"line_start":7,"line_end":7,"column_start":1,"column_end":53}},{"value":"/","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\repeat_with.rs","byte_start":424147,"byte_end":424150,"line_start":8,"line_end":8,"column_start":1,"column_end":4}},{"value":"/ This `struct` is created by the [`repeat_with()`] function.","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\repeat_with.rs","byte_start":424151,"byte_end":424214,"line_start":9,"line_end":9,"column_start":1,"column_end":64}},{"value":"/ See its documentation for more.","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\repeat_with.rs","byte_start":424215,"byte_end":424250,"line_start":10,"line_end":10,"column_start":1,"column_end":36}},{"value":"must_use = \"streams do nothing unless polled\"","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\repeat_with.rs","byte_start":424275,"byte_end":424323,"line_start":12,"line_end":12,"column_start":1,"column_end":49}}]},{"kind":"Function","id":{"krate":0,"index":5864},"span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\repeat_with.rs","byte_start":426633,"byte_end":426644,"line_start":91,"line_end":91,"column_start":8,"column_end":19},"name":"repeat_with","qualname":"::stream::repeat_with::repeat_with","value":"pub fn repeat_with<A, F: FnMut() -> A>(F) -> RepeatWith<F>","parent":null,"children":[],"decl_id":null,"docs":" Creates a new stream that repeats elements of type `A` endlessly by\n applying the provided closure, the repeater, `F: FnMut() -> A`.","sig":null,"attributes":[{"value":"/ Creates a new stream that repeats elements of type `A` endlessly by","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\repeat_with.rs","byte_start":424861,"byte_end":424932,"line_start":37,"line_end":37,"column_start":1,"column_end":72}},{"value":"/ applying the provided closure, the repeater, `F: FnMut() -> A`.","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\repeat_with.rs","byte_start":424933,"byte_end":425000,"line_start":38,"line_end":38,"column_start":1,"column_end":68}},{"value":"/","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\repeat_with.rs","byte_start":425001,"byte_end":425004,"line_start":39,"line_end":39,"column_start":1,"column_end":4}},{"value":"/ The `repeat_with()` function calls the repeater over and over again.","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\repeat_with.rs","byte_start":425005,"byte_end":425077,"line_start":40,"line_end":40,"column_start":1,"column_end":73}},{"value":"/","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\repeat_with.rs","byte_start":425078,"byte_end":425081,"line_start":41,"line_end":41,"column_start":1,"column_end":4}},{"value":"/ Infinite stream like `repeat_with()` are often used with adapters like","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\repeat_with.rs","byte_start":425082,"byte_end":425156,"line_start":42,"line_end":42,"column_start":1,"column_end":75}},{"value":"/ [`stream.take()`], in order to make them finite.","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\repeat_with.rs","byte_start":425157,"byte_end":425209,"line_start":43,"line_end":43,"column_start":1,"column_end":53}},{"value":"/","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\repeat_with.rs","byte_start":425210,"byte_end":425213,"line_start":44,"line_end":44,"column_start":1,"column_end":4}},{"value":"/ If the element type of the stream you need implements [`Clone`], and","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\repeat_with.rs","byte_start":425214,"byte_end":425286,"line_start":45,"line_end":45,"column_start":1,"column_end":73}},{"value":"/ it is OK to keep the source element in memory, you should instead use","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\repeat_with.rs","byte_start":425287,"byte_end":425360,"line_start":46,"line_end":46,"column_start":1,"column_end":74}},{"value":"/ the [`stream.repeat()`] function.","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\repeat_with.rs","byte_start":425361,"byte_end":425398,"line_start":47,"line_end":47,"column_start":1,"column_end":38}},{"value":"/","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\repeat_with.rs","byte_start":425399,"byte_end":425402,"line_start":48,"line_end":48,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\repeat_with.rs","byte_start":425403,"byte_end":425417,"line_start":49,"line_end":49,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\repeat_with.rs","byte_start":425418,"byte_end":425421,"line_start":50,"line_end":50,"column_start":1,"column_end":4}},{"value":"/ Basic usage:","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\repeat_with.rs","byte_start":425422,"byte_end":425438,"line_start":51,"line_end":51,"column_start":1,"column_end":17}},{"value":"/","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\repeat_with.rs","byte_start":425439,"byte_end":425442,"line_start":52,"line_end":52,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\repeat_with.rs","byte_start":425443,"byte_end":425450,"line_start":53,"line_end":53,"column_start":1,"column_end":8}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\repeat_with.rs","byte_start":425451,"byte_end":425492,"line_start":54,"line_end":54,"column_start":1,"column_end":42}},{"value":"/ use futures::stream::{self, StreamExt};","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\repeat_with.rs","byte_start":425493,"byte_end":425536,"line_start":55,"line_end":55,"column_start":1,"column_end":44}},{"value":"/","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\repeat_with.rs","byte_start":425537,"byte_end":425540,"line_start":56,"line_end":56,"column_start":1,"column_end":4}},{"value":"/ // let's assume we have some value of a type that is not `Clone`","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\repeat_with.rs","byte_start":425541,"byte_end":425609,"line_start":57,"line_end":57,"column_start":1,"column_end":69}},{"value":"/ // or which don't want to have in memory just yet because it is expensive:","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\repeat_with.rs","byte_start":425610,"byte_end":425688,"line_start":58,"line_end":58,"column_start":1,"column_end":79}},{"value":"/ #[derive(PartialEq, Debug)]","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\repeat_with.rs","byte_start":425689,"byte_end":425720,"line_start":59,"line_end":59,"column_start":1,"column_end":32}},{"value":"/ struct Expensive;","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\repeat_with.rs","byte_start":425721,"byte_end":425742,"line_start":60,"line_end":60,"column_start":1,"column_end":22}},{"value":"/","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\repeat_with.rs","byte_start":425743,"byte_end":425746,"line_start":61,"line_end":61,"column_start":1,"column_end":4}},{"value":"/ // a particular value forever:","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\repeat_with.rs","byte_start":425747,"byte_end":425781,"line_start":62,"line_end":62,"column_start":1,"column_end":35}},{"value":"/ let mut things = stream::repeat_with(|| Expensive);","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\repeat_with.rs","byte_start":425782,"byte_end":425837,"line_start":63,"line_end":63,"column_start":1,"column_end":56}},{"value":"/","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\repeat_with.rs","byte_start":425838,"byte_end":425841,"line_start":64,"line_end":64,"column_start":1,"column_end":4}},{"value":"/ assert_eq!(Some(Expensive), things.next().await);","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\repeat_with.rs","byte_start":425842,"byte_end":425895,"line_start":65,"line_end":65,"column_start":1,"column_end":54}},{"value":"/ assert_eq!(Some(Expensive), things.next().await);","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\repeat_with.rs","byte_start":425896,"byte_end":425949,"line_start":66,"line_end":66,"column_start":1,"column_end":54}},{"value":"/ assert_eq!(Some(Expensive), things.next().await);","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\repeat_with.rs","byte_start":425950,"byte_end":426003,"line_start":67,"line_end":67,"column_start":1,"column_end":54}},{"value":"/ # });","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\repeat_with.rs","byte_start":426004,"byte_end":426013,"line_start":68,"line_end":68,"column_start":1,"column_end":10}},{"value":"/ ```","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\repeat_with.rs","byte_start":426014,"byte_end":426021,"line_start":69,"line_end":69,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\repeat_with.rs","byte_start":426022,"byte_end":426025,"line_start":70,"line_end":70,"column_start":1,"column_end":4}},{"value":"/ Using mutation and going finite:","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\repeat_with.rs","byte_start":426026,"byte_end":426062,"line_start":71,"line_end":71,"column_start":1,"column_end":37}},{"value":"/","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\repeat_with.rs","byte_start":426063,"byte_end":426066,"line_start":72,"line_end":72,"column_start":1,"column_end":4}},{"value":"/ ```rust","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\repeat_with.rs","byte_start":426067,"byte_end":426078,"line_start":73,"line_end":73,"column_start":1,"column_end":12}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\repeat_with.rs","byte_start":426079,"byte_end":426120,"line_start":74,"line_end":74,"column_start":1,"column_end":42}},{"value":"/ use futures::stream::{self, StreamExt};","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\repeat_with.rs","byte_start":426121,"byte_end":426164,"line_start":75,"line_end":75,"column_start":1,"column_end":44}},{"value":"/","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\repeat_with.rs","byte_start":426165,"byte_end":426168,"line_start":76,"line_end":76,"column_start":1,"column_end":4}},{"value":"/ // From the zeroth to the third power of two:","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\repeat_with.rs","byte_start":426169,"byte_end":426218,"line_start":77,"line_end":77,"column_start":1,"column_end":50}},{"value":"/ let mut curr = 1;","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\repeat_with.rs","byte_start":426219,"byte_end":426240,"line_start":78,"line_end":78,"column_start":1,"column_end":22}},{"value":"/ let mut pow2 = stream::repeat_with(|| { let tmp = curr; curr *= 2; tmp })","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\repeat_with.rs","byte_start":426241,"byte_end":426318,"line_start":79,"line_end":79,"column_start":1,"column_end":78}},{"value":"/                     .take(4);","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\repeat_with.rs","byte_start":426319,"byte_end":426352,"line_start":80,"line_end":80,"column_start":1,"column_end":34}},{"value":"/","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\repeat_with.rs","byte_start":426353,"byte_end":426356,"line_start":81,"line_end":81,"column_start":1,"column_end":4}},{"value":"/ assert_eq!(Some(1), pow2.next().await);","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\repeat_with.rs","byte_start":426357,"byte_end":426400,"line_start":82,"line_end":82,"column_start":1,"column_end":44}},{"value":"/ assert_eq!(Some(2), pow2.next().await);","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\repeat_with.rs","byte_start":426401,"byte_end":426444,"line_start":83,"line_end":83,"column_start":1,"column_end":44}},{"value":"/ assert_eq!(Some(4), pow2.next().await);","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\repeat_with.rs","byte_start":426445,"byte_end":426488,"line_start":84,"line_end":84,"column_start":1,"column_end":44}},{"value":"/ assert_eq!(Some(8), pow2.next().await);","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\repeat_with.rs","byte_start":426489,"byte_end":426532,"line_start":85,"line_end":85,"column_start":1,"column_end":44}},{"value":"/","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\repeat_with.rs","byte_start":426533,"byte_end":426536,"line_start":86,"line_end":86,"column_start":1,"column_end":4}},{"value":"/ // ... and now we're done","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\repeat_with.rs","byte_start":426537,"byte_end":426566,"line_start":87,"line_end":87,"column_start":1,"column_end":30}},{"value":"/ assert_eq!(None, pow2.next().await);","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\repeat_with.rs","byte_start":426567,"byte_end":426607,"line_start":88,"line_end":88,"column_start":1,"column_end":41}},{"value":"/ # });","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\repeat_with.rs","byte_start":426608,"byte_end":426617,"line_start":89,"line_end":89,"column_start":1,"column_end":10}},{"value":"/ ```","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\repeat_with.rs","byte_start":426618,"byte_end":426625,"line_start":90,"line_end":90,"column_start":1,"column_end":8}}]},{"kind":"Struct","id":{"krate":0,"index":16502},"span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\empty.rs","byte_start":427035,"byte_end":427040,"line_start":10,"line_end":10,"column_start":12,"column_end":17},"name":"Empty","qualname":"::stream::empty::Empty","value":"Empty {  }","parent":null,"children":[{"krate":0,"index":16504}],"decl_id":null,"docs":" Stream for the [`empty`] function.\n","sig":null,"attributes":[{"value":"/ Stream for the [`empty`] function.","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\empty.rs","byte_start":426919,"byte_end":426957,"line_start":7,"line_end":7,"column_start":1,"column_end":39}},{"value":"must_use = \"streams do nothing unless polled\"","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\empty.rs","byte_start":426975,"byte_end":427023,"line_start":9,"line_end":9,"column_start":1,"column_end":49}}]},{"kind":"Function","id":{"krate":0,"index":5898},"span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\empty.rs","byte_start":427209,"byte_end":427214,"line_start":17,"line_end":17,"column_start":8,"column_end":13},"name":"empty","qualname":"::stream::empty::empty","value":"pub fn empty<T>() -> Empty<T>","parent":null,"children":[],"decl_id":null,"docs":" Creates a stream which contains no elements.","sig":null,"attributes":[{"value":"/ Creates a stream which contains no elements.","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\empty.rs","byte_start":427079,"byte_end":427127,"line_start":14,"line_end":14,"column_start":1,"column_end":49}},{"value":"/","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\empty.rs","byte_start":427128,"byte_end":427131,"line_start":15,"line_end":15,"column_start":1,"column_end":4}},{"value":"/ The returned stream will always return `Ready(None)` when polled.","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\empty.rs","byte_start":427132,"byte_end":427201,"line_start":16,"line_end":16,"column_start":1,"column_end":70}}]},{"kind":"Function","id":{"krate":0,"index":5950},"span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\once.rs","byte_start":428299,"byte_end":428303,"line_start":20,"line_end":20,"column_start":8,"column_end":12},"name":"once","qualname":"::stream::once::once","value":"pub fn once<Fut: Future>(Fut) -> Once<Fut>","parent":null,"children":[],"decl_id":null,"docs":" Creates a stream of a single element.","sig":null,"attributes":[{"value":"/ Creates a stream of a single element.","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\once.rs","byte_start":427992,"byte_end":428033,"line_start":9,"line_end":9,"column_start":1,"column_end":42}},{"value":"/","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\once.rs","byte_start":428034,"byte_end":428037,"line_start":10,"line_end":10,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\once.rs","byte_start":428038,"byte_end":428045,"line_start":11,"line_end":11,"column_start":1,"column_end":8}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\once.rs","byte_start":428046,"byte_end":428087,"line_start":12,"line_end":12,"column_start":1,"column_end":42}},{"value":"/ use futures::stream::{self, StreamExt};","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\once.rs","byte_start":428088,"byte_end":428131,"line_start":13,"line_end":13,"column_start":1,"column_end":44}},{"value":"/","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\once.rs","byte_start":428132,"byte_end":428135,"line_start":14,"line_end":14,"column_start":1,"column_end":4}},{"value":"/ let stream = stream::once(async { 17 });","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\once.rs","byte_start":428136,"byte_end":428180,"line_start":15,"line_end":15,"column_start":1,"column_end":45}},{"value":"/ let collected = stream.collect::<Vec<i32>>().await;","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\once.rs","byte_start":428181,"byte_end":428236,"line_start":16,"line_end":16,"column_start":1,"column_end":56}},{"value":"/ assert_eq!(collected, vec![17]);","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\once.rs","byte_start":428237,"byte_end":428273,"line_start":17,"line_end":17,"column_start":1,"column_end":37}},{"value":"/ # });","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\once.rs","byte_start":428274,"byte_end":428283,"line_start":18,"line_end":18,"column_start":1,"column_end":10}},{"value":"/ ```","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\once.rs","byte_start":428284,"byte_end":428291,"line_start":19,"line_end":19,"column_start":1,"column_end":8}}]},{"kind":"Struct","id":{"krate":0,"index":16508},"span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\once.rs","byte_start":428565,"byte_end":428569,"line_start":28,"line_end":28,"column_start":16,"column_end":20},"name":"Once","qualname":"::stream::once::Once","value":"Once {  }","parent":null,"children":[{"krate":0,"index":16510}],"decl_id":null,"docs":" A stream which emits single element and then EOF.\n","sig":null,"attributes":[{"value":"must_use = \"streams do nothing unless polled\"","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pin-project-lite-0.2.9\\src\\lib.rs","byte_start":14239710,"byte_end":14239719,"line_start":633,"line_end":633,"column_start":11,"column_end":20}}]},{"kind":"Struct","id":{"krate":0,"index":16544},"span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\pending.rs","byte_start":429745,"byte_end":429752,"line_start":10,"line_end":10,"column_start":12,"column_end":19},"name":"Pending","qualname":"::stream::pending::Pending","value":"Pending {  }","parent":null,"children":[{"krate":0,"index":16546}],"decl_id":null,"docs":" Stream for the [`pending()`] function.\n","sig":null,"attributes":[{"value":"/ Stream for the [`pending()`] function.","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\pending.rs","byte_start":429625,"byte_end":429667,"line_start":7,"line_end":7,"column_start":1,"column_end":43}},{"value":"must_use = \"streams do nothing unless polled\"","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\pending.rs","byte_start":429685,"byte_end":429733,"line_start":9,"line_end":9,"column_start":1,"column_end":49}}]},{"kind":"Function","id":{"krate":0,"index":5994},"span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\pending.rs","byte_start":429928,"byte_end":429935,"line_start":17,"line_end":17,"column_start":8,"column_end":15},"name":"pending","qualname":"::stream::pending::pending","value":"pub fn pending<T>() -> Pending<T>","parent":null,"children":[],"decl_id":null,"docs":" Creates a stream which never returns any elements.","sig":null,"attributes":[{"value":"/ Creates a stream which never returns any elements.","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\pending.rs","byte_start":429796,"byte_end":429850,"line_start":14,"line_end":14,"column_start":1,"column_end":55}},{"value":"/","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\pending.rs","byte_start":429851,"byte_end":429854,"line_start":15,"line_end":15,"column_start":1,"column_end":4}},{"value":"/ The returned stream will always return `Pending` when polled.","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\pending.rs","byte_start":429855,"byte_end":429920,"line_start":16,"line_end":16,"column_start":1,"column_end":66}}]},{"kind":"Struct","id":{"krate":0,"index":6036},"span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\poll_fn.rs","byte_start":430778,"byte_end":430784,"line_start":11,"line_end":11,"column_start":12,"column_end":18},"name":"PollFn","qualname":"::stream::poll_fn::PollFn","value":"PollFn {  }","parent":null,"children":[{"krate":0,"index":6038}],"decl_id":null,"docs":" Stream for the [`poll_fn`] function.\n","sig":null,"attributes":[{"value":"/ Stream for the [`poll_fn`] function.","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\poll_fn.rs","byte_start":430677,"byte_end":430717,"line_start":9,"line_end":9,"column_start":1,"column_end":41}},{"value":"must_use = \"streams do nothing unless polled\"","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\poll_fn.rs","byte_start":430718,"byte_end":430766,"line_start":10,"line_end":10,"column_start":1,"column_end":49}}]},{"kind":"Function","id":{"krate":0,"index":6044},"span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\poll_fn.rs","byte_start":431472,"byte_end":431479,"line_start":41,"line_end":41,"column_start":8,"column_end":15},"name":"poll_fn","qualname":"::stream::poll_fn::poll_fn","value":"pub fn poll_fn<T, F>(F) -> PollFn<F> where F: FnMut(&mut Context) ->\nPoll<Option<T>>","parent":null,"children":[],"decl_id":null,"docs":" Creates a new stream wrapping a function returning `Poll<Option<T>>`.","sig":null,"attributes":[{"value":"/ Creates a new stream wrapping a function returning `Poll<Option<T>>`.","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\poll_fn.rs","byte_start":430984,"byte_end":431057,"line_start":23,"line_end":23,"column_start":1,"column_end":74}},{"value":"/","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\poll_fn.rs","byte_start":431058,"byte_end":431061,"line_start":24,"line_end":24,"column_start":1,"column_end":4}},{"value":"/ Polling the returned stream calls the wrapped function.","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\poll_fn.rs","byte_start":431062,"byte_end":431121,"line_start":25,"line_end":25,"column_start":1,"column_end":60}},{"value":"/","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\poll_fn.rs","byte_start":431122,"byte_end":431125,"line_start":26,"line_end":26,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\poll_fn.rs","byte_start":431126,"byte_end":431140,"line_start":27,"line_end":27,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\poll_fn.rs","byte_start":431141,"byte_end":431144,"line_start":28,"line_end":28,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\poll_fn.rs","byte_start":431145,"byte_end":431152,"line_start":29,"line_end":29,"column_start":1,"column_end":8}},{"value":"/ use futures::stream::poll_fn;","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\poll_fn.rs","byte_start":431153,"byte_end":431186,"line_start":30,"line_end":30,"column_start":1,"column_end":34}},{"value":"/ use futures::task::Poll;","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\poll_fn.rs","byte_start":431187,"byte_end":431215,"line_start":31,"line_end":31,"column_start":1,"column_end":29}},{"value":"/","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\poll_fn.rs","byte_start":431216,"byte_end":431219,"line_start":32,"line_end":32,"column_start":1,"column_end":4}},{"value":"/ let mut counter = 1usize;","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\poll_fn.rs","byte_start":431220,"byte_end":431249,"line_start":33,"line_end":33,"column_start":1,"column_end":30}},{"value":"/","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\poll_fn.rs","byte_start":431250,"byte_end":431253,"line_start":34,"line_end":34,"column_start":1,"column_end":4}},{"value":"/ let read_stream = poll_fn(move |_| -> Poll<Option<String>> {","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\poll_fn.rs","byte_start":431254,"byte_end":431318,"line_start":35,"line_end":35,"column_start":1,"column_end":65}},{"value":"/     if counter == 0 { return Poll::Ready(None); }","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\poll_fn.rs","byte_start":431319,"byte_end":431372,"line_start":36,"line_end":36,"column_start":1,"column_end":54}},{"value":"/     counter -= 1;","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\poll_fn.rs","byte_start":431373,"byte_end":431394,"line_start":37,"line_end":37,"column_start":1,"column_end":22}},{"value":"/     Poll::Ready(Some(\"Hello, World!\".to_owned()))","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\poll_fn.rs","byte_start":431395,"byte_end":431448,"line_start":38,"line_end":38,"column_start":1,"column_end":54}},{"value":"/ });","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\poll_fn.rs","byte_start":431449,"byte_end":431456,"line_start":39,"line_end":39,"column_start":1,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\poll_fn.rs","byte_start":431457,"byte_end":431464,"line_start":40,"line_end":40,"column_start":1,"column_end":8}}]},{"kind":"Struct","id":{"krate":0,"index":16550},"span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\poll_immediate.rs","byte_start":432240,"byte_end":432253,"line_start":12,"line_end":12,"column_start":16,"column_end":29},"name":"PollImmediate","qualname":"::stream::poll_immediate::PollImmediate","value":"PollImmediate {  }","parent":null,"children":[{"krate":0,"index":16552}],"decl_id":null,"docs":" Stream for the [poll_immediate](poll_immediate()) function.","sig":null,"attributes":[{"value":"must_use = \"futures do nothing unless you `.await` or poll them\"","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pin-project-lite-0.2.9\\src\\lib.rs","byte_start":14239710,"byte_end":14239719,"line_start":633,"line_end":633,"column_start":11,"column_end":20}}]},{"kind":"Function","id":{"krate":0,"index":6085},"span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\poll_immediate.rs","byte_start":434234,"byte_end":434248,"line_start":78,"line_end":78,"column_start":8,"column_end":22},"name":"poll_immediate","qualname":"::stream::poll_immediate::poll_immediate","value":"pub fn poll_immediate<S: Stream>(S) -> PollImmediate<S>","parent":null,"children":[],"decl_id":null,"docs":" Creates a new stream that always immediately returns [Poll::Ready](core::task::Poll::Ready) when awaiting it.","sig":null,"attributes":[{"value":"/ Creates a new stream that always immediately returns [Poll::Ready](core::task::Poll::Ready) when awaiting it.","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\poll_immediate.rs","byte_start":433353,"byte_end":433466,"line_start":53,"line_end":53,"column_start":1,"column_end":114}},{"value":"/","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\poll_immediate.rs","byte_start":433467,"byte_end":433470,"line_start":54,"line_end":54,"column_start":1,"column_end":4}},{"value":"/ This is useful when immediacy is more important than waiting for the next item to be ready.","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\poll_immediate.rs","byte_start":433471,"byte_end":433566,"line_start":55,"line_end":55,"column_start":1,"column_end":96}},{"value":"/","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\poll_immediate.rs","byte_start":433567,"byte_end":433570,"line_start":56,"line_end":56,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\poll_immediate.rs","byte_start":433571,"byte_end":433585,"line_start":57,"line_end":57,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\poll_immediate.rs","byte_start":433586,"byte_end":433589,"line_start":58,"line_end":58,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\poll_immediate.rs","byte_start":433590,"byte_end":433597,"line_start":59,"line_end":59,"column_start":1,"column_end":8}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\poll_immediate.rs","byte_start":433598,"byte_end":433639,"line_start":60,"line_end":60,"column_start":1,"column_end":42}},{"value":"/ use futures::stream::{self, StreamExt};","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\poll_immediate.rs","byte_start":433640,"byte_end":433683,"line_start":61,"line_end":61,"column_start":1,"column_end":44}},{"value":"/ use futures::task::Poll;","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\poll_immediate.rs","byte_start":433684,"byte_end":433712,"line_start":62,"line_end":62,"column_start":1,"column_end":29}},{"value":"/","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\poll_immediate.rs","byte_start":433713,"byte_end":433716,"line_start":63,"line_end":63,"column_start":1,"column_end":4}},{"value":"/ let mut r = stream::poll_immediate(Box::pin(stream::iter(1_u32..3)));","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\poll_immediate.rs","byte_start":433717,"byte_end":433790,"line_start":64,"line_end":64,"column_start":1,"column_end":74}},{"value":"/ assert_eq!(r.next().await, Some(Poll::Ready(1)));","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\poll_immediate.rs","byte_start":433791,"byte_end":433844,"line_start":65,"line_end":65,"column_start":1,"column_end":54}},{"value":"/ assert_eq!(r.next().await, Some(Poll::Ready(2)));","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\poll_immediate.rs","byte_start":433845,"byte_end":433898,"line_start":66,"line_end":66,"column_start":1,"column_end":54}},{"value":"/ assert_eq!(r.next().await, None);","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\poll_immediate.rs","byte_start":433899,"byte_end":433936,"line_start":67,"line_end":67,"column_start":1,"column_end":38}},{"value":"/","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\poll_immediate.rs","byte_start":433937,"byte_end":433940,"line_start":68,"line_end":68,"column_start":1,"column_end":4}},{"value":"/ let mut p = stream::poll_immediate(Box::pin(stream::once(async {","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\poll_immediate.rs","byte_start":433941,"byte_end":434009,"line_start":69,"line_end":69,"column_start":1,"column_end":69}},{"value":"/     futures::pending!();","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\poll_immediate.rs","byte_start":434010,"byte_end":434038,"line_start":70,"line_end":70,"column_start":1,"column_end":29}},{"value":"/     42_u8","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\poll_immediate.rs","byte_start":434039,"byte_end":434052,"line_start":71,"line_end":71,"column_start":1,"column_end":14}},{"value":"/ })));","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\poll_immediate.rs","byte_start":434053,"byte_end":434062,"line_start":72,"line_end":72,"column_start":1,"column_end":10}},{"value":"/ assert_eq!(p.next().await, Some(Poll::Pending));","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\poll_immediate.rs","byte_start":434063,"byte_end":434115,"line_start":73,"line_end":73,"column_start":1,"column_end":53}},{"value":"/ assert_eq!(p.next().await, Some(Poll::Ready(42)));","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\poll_immediate.rs","byte_start":434116,"byte_end":434170,"line_start":74,"line_end":74,"column_start":1,"column_end":55}},{"value":"/ assert_eq!(p.next().await, None);","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\poll_immediate.rs","byte_start":434171,"byte_end":434208,"line_start":75,"line_end":75,"column_start":1,"column_end":38}},{"value":"/ # });","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\poll_immediate.rs","byte_start":434209,"byte_end":434218,"line_start":76,"line_end":76,"column_start":1,"column_end":10}},{"value":"/ ```","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\poll_immediate.rs","byte_start":434219,"byte_end":434226,"line_start":77,"line_end":77,"column_start":1,"column_end":8}}]},{"kind":"Struct","id":{"krate":0,"index":16589},"span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\select.rs","byte_start":434781,"byte_end":434787,"line_start":12,"line_end":12,"column_start":16,"column_end":22},"name":"Select","qualname":"::stream::select::Select","value":"Select {  }","parent":null,"children":[{"krate":0,"index":16592}],"decl_id":null,"docs":" Stream for the [`select()`] function.\n","sig":null,"attributes":[{"value":"must_use = \"streams do nothing unless polled\"","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pin-project-lite-0.2.9\\src\\lib.rs","byte_start":14239710,"byte_end":14239719,"line_start":633,"line_end":633,"column_start":11,"column_end":20}}]},{"kind":"Function","id":{"krate":0,"index":6128},"span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\select.rs","byte_start":435813,"byte_end":435819,"line_start":47,"line_end":47,"column_start":8,"column_end":14},"name":"select","qualname":"::stream::select::select","value":"pub fn select<St1, St2>(St1, St2) -> Select<St1, St2> where St1: Stream,\nSt2: Stream<Item = St1::Item>","parent":null,"children":[],"decl_id":null,"docs":" This function will attempt to pull items from both streams. Each\n stream will be polled in a round-robin fashion, and whenever a stream is\n ready to yield an item that item is yielded.","sig":null,"attributes":[{"value":"/ This function will attempt to pull items from both streams. Each","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\select.rs","byte_start":434909,"byte_end":434977,"line_start":18,"line_end":18,"column_start":1,"column_end":69}},{"value":"/ stream will be polled in a round-robin fashion, and whenever a stream is","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\select.rs","byte_start":434978,"byte_end":435054,"line_start":19,"line_end":19,"column_start":1,"column_end":77}},{"value":"/ ready to yield an item that item is yielded.","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\select.rs","byte_start":435055,"byte_end":435103,"line_start":20,"line_end":20,"column_start":1,"column_end":49}},{"value":"/","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\select.rs","byte_start":435104,"byte_end":435107,"line_start":21,"line_end":21,"column_start":1,"column_end":4}},{"value":"/ After one of the two input streams completes, the remaining one will be","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\select.rs","byte_start":435108,"byte_end":435183,"line_start":22,"line_end":22,"column_start":1,"column_end":76}},{"value":"/ polled exclusively. The returned stream completes when both input","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\select.rs","byte_start":435184,"byte_end":435253,"line_start":23,"line_end":23,"column_start":1,"column_end":70}},{"value":"/ streams have completed.","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\select.rs","byte_start":435254,"byte_end":435281,"line_start":24,"line_end":24,"column_start":1,"column_end":28}},{"value":"/","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\select.rs","byte_start":435282,"byte_end":435285,"line_start":25,"line_end":25,"column_start":1,"column_end":4}},{"value":"/ Note that this function consumes both streams and returns a wrapped","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\select.rs","byte_start":435286,"byte_end":435357,"line_start":26,"line_end":26,"column_start":1,"column_end":72}},{"value":"/ version of them.","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\select.rs","byte_start":435358,"byte_end":435378,"line_start":27,"line_end":27,"column_start":1,"column_end":21}},{"value":"/","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\select.rs","byte_start":435379,"byte_end":435382,"line_start":28,"line_end":28,"column_start":1,"column_end":4}},{"value":"/ ## Examples","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\select.rs","byte_start":435383,"byte_end":435398,"line_start":29,"line_end":29,"column_start":1,"column_end":16}},{"value":"/","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\select.rs","byte_start":435399,"byte_end":435402,"line_start":30,"line_end":30,"column_start":1,"column_end":4}},{"value":"/ ```rust","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\select.rs","byte_start":435403,"byte_end":435414,"line_start":31,"line_end":31,"column_start":1,"column_end":12}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\select.rs","byte_start":435415,"byte_end":435456,"line_start":32,"line_end":32,"column_start":1,"column_end":42}},{"value":"/ use futures::stream::{ repeat, select, StreamExt };","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\select.rs","byte_start":435457,"byte_end":435512,"line_start":33,"line_end":33,"column_start":1,"column_end":56}},{"value":"/","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\select.rs","byte_start":435513,"byte_end":435516,"line_start":34,"line_end":34,"column_start":1,"column_end":4}},{"value":"/ let left = repeat(1);","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\select.rs","byte_start":435517,"byte_end":435542,"line_start":35,"line_end":35,"column_start":1,"column_end":26}},{"value":"/ let right = repeat(2);","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\select.rs","byte_start":435543,"byte_end":435569,"line_start":36,"line_end":36,"column_start":1,"column_end":27}},{"value":"/","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\select.rs","byte_start":435570,"byte_end":435573,"line_start":37,"line_end":37,"column_start":1,"column_end":4}},{"value":"/ let mut out = select(left, right);","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\select.rs","byte_start":435574,"byte_end":435612,"line_start":38,"line_end":38,"column_start":1,"column_end":39}},{"value":"/","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\select.rs","byte_start":435613,"byte_end":435616,"line_start":39,"line_end":39,"column_start":1,"column_end":4}},{"value":"/ for _ in 0..100 {","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\select.rs","byte_start":435617,"byte_end":435638,"line_start":40,"line_end":40,"column_start":1,"column_end":22}},{"value":"/     // We should be alternating.","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\select.rs","byte_start":435639,"byte_end":435675,"line_start":41,"line_end":41,"column_start":1,"column_end":37}},{"value":"/     assert_eq!(1, out.select_next_some().await);","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\select.rs","byte_start":435676,"byte_end":435728,"line_start":42,"line_end":42,"column_start":1,"column_end":53}},{"value":"/     assert_eq!(2, out.select_next_some().await);","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\select.rs","byte_start":435729,"byte_end":435781,"line_start":43,"line_end":43,"column_start":1,"column_end":53}},{"value":"/ }","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\select.rs","byte_start":435782,"byte_end":435787,"line_start":44,"line_end":44,"column_start":1,"column_end":6}},{"value":"/ # });","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\select.rs","byte_start":435788,"byte_end":435797,"line_start":45,"line_end":45,"column_start":1,"column_end":10}},{"value":"/ ```","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\select.rs","byte_start":435798,"byte_end":435805,"line_start":46,"line_end":46,"column_start":1,"column_end":8}}]},{"kind":"Method","id":{"krate":0,"index":6135},"span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\select.rs","byte_start":436288,"byte_end":436295,"line_start":64,"line_end":64,"column_start":12,"column_end":19},"name":"get_ref","qualname":"<Select<St1, St2>>::get_ref","value":"pub fn get_ref(&Self) -> (&St1, &St2)","parent":null,"children":[],"decl_id":null,"docs":" Acquires a reference to the underlying streams that this combinator is\n pulling from.\n","sig":null,"attributes":[{"value":"/ Acquires a reference to the underlying streams that this combinator is","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\select.rs","byte_start":436180,"byte_end":436254,"line_start":62,"line_end":62,"column_start":5,"column_end":79}},{"value":"/ pulling from.","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\select.rs","byte_start":436259,"byte_end":436276,"line_start":63,"line_end":63,"column_start":5,"column_end":22}}]},{"kind":"Method","id":{"krate":0,"index":6136},"span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\select.rs","byte_start":436623,"byte_end":436630,"line_start":73,"line_end":73,"column_start":12,"column_end":19},"name":"get_mut","qualname":"<Select<St1, St2>>::get_mut","value":"pub fn get_mut(&mut Self) -> (&mut St1, &mut St2)","parent":null,"children":[],"decl_id":null,"docs":" Acquires a mutable reference to the underlying streams that this\n combinator is pulling from.","sig":null,"attributes":[{"value":"/ Acquires a mutable reference to the underlying streams that this","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\select.rs","byte_start":436361,"byte_end":436429,"line_start":68,"line_end":68,"column_start":5,"column_end":73}},{"value":"/ combinator is pulling from.","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\select.rs","byte_start":436434,"byte_end":436465,"line_start":69,"line_end":69,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\select.rs","byte_start":436470,"byte_end":436473,"line_start":70,"line_end":70,"column_start":5,"column_end":8}},{"value":"/ Note that care must be taken to avoid tampering with the state of the","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\select.rs","byte_start":436478,"byte_end":436551,"line_start":71,"line_end":71,"column_start":5,"column_end":78}},{"value":"/ stream which may otherwise confuse this combinator.","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\select.rs","byte_start":436556,"byte_end":436611,"line_start":72,"line_end":72,"column_start":5,"column_end":60}}]},{"kind":"Method","id":{"krate":0,"index":6137},"span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\select.rs","byte_start":436977,"byte_end":436988,"line_start":82,"line_end":82,"column_start":12,"column_end":23},"name":"get_pin_mut","qualname":"<Select<St1, St2>>::get_pin_mut","value":"pub fn get_pin_mut(Pin<&mut Self>) -> (Pin<&mut St1>, Pin<&mut St2>)","parent":null,"children":[],"decl_id":null,"docs":" Acquires a pinned mutable reference to the underlying streams that this\n combinator is pulling from.","sig":null,"attributes":[{"value":"/ Acquires a pinned mutable reference to the underlying streams that this","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\select.rs","byte_start":436708,"byte_end":436783,"line_start":77,"line_end":77,"column_start":5,"column_end":80}},{"value":"/ combinator is pulling from.","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\select.rs","byte_start":436788,"byte_end":436819,"line_start":78,"line_end":78,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\select.rs","byte_start":436824,"byte_end":436827,"line_start":79,"line_end":79,"column_start":5,"column_end":8}},{"value":"/ Note that care must be taken to avoid tampering with the state of the","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\select.rs","byte_start":436832,"byte_end":436905,"line_start":80,"line_end":80,"column_start":5,"column_end":78}},{"value":"/ stream which may otherwise confuse this combinator.","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\select.rs","byte_start":436910,"byte_end":436965,"line_start":81,"line_end":81,"column_start":5,"column_end":60}}]},{"kind":"Method","id":{"krate":0,"index":6138},"span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\select.rs","byte_start":437362,"byte_end":437372,"line_start":91,"line_end":91,"column_start":12,"column_end":22},"name":"into_inner","qualname":"<Select<St1, St2>>::into_inner","value":"pub fn into_inner(Self) -> (St1, St2)","parent":null,"children":[],"decl_id":null,"docs":" Consumes this combinator, returning the underlying streams.","sig":null,"attributes":[{"value":"/ Consumes this combinator, returning the underlying streams.","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\select.rs","byte_start":437126,"byte_end":437189,"line_start":87,"line_end":87,"column_start":5,"column_end":68}},{"value":"/","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\select.rs","byte_start":437194,"byte_end":437197,"line_start":88,"line_end":88,"column_start":5,"column_end":8}},{"value":"/ Note that this may discard intermediate state of this combinator, so","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\select.rs","byte_start":437202,"byte_end":437274,"line_start":89,"line_end":89,"column_start":5,"column_end":77}},{"value":"/ care should be taken to avoid losing resources when this is called.","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\select.rs","byte_start":437279,"byte_end":437350,"line_start":90,"line_end":90,"column_start":5,"column_end":76}}]},{"kind":"TupleVariant","id":{"krate":0,"index":16635},"span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\select_with_strategy.rs","byte_start":438314,"byte_end":438318,"line_start":12,"line_end":12,"column_start":5,"column_end":9},"name":"Left","qualname":"::stream::select_with_strategy::PollNext::Left","value":"PollNext::Left","parent":{"krate":0,"index":16634},"children":[],"decl_id":null,"docs":" Poll the first stream.\n","sig":null,"attributes":[{"value":"/ Poll the first stream.","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\select_with_strategy.rs","byte_start":438283,"byte_end":438309,"line_start":11,"line_end":11,"column_start":5,"column_end":31}}]},{"kind":"TupleVariant","id":{"krate":0,"index":16637},"span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\select_with_strategy.rs","byte_start":438356,"byte_end":438361,"line_start":14,"line_end":14,"column_start":5,"column_end":10},"name":"Right","qualname":"::stream::select_with_strategy::PollNext::Right","value":"PollNext::Right","parent":{"krate":0,"index":16634},"children":[],"decl_id":null,"docs":" Poll the second stream.\n","sig":null,"attributes":[{"value":"/ Poll the second stream.","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\select_with_strategy.rs","byte_start":438324,"byte_end":438351,"line_start":13,"line_end":13,"column_start":5,"column_end":32}}]},{"kind":"Enum","id":{"krate":0,"index":16634},"span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\select_with_strategy.rs","byte_start":438268,"byte_end":438276,"line_start":10,"line_end":10,"column_start":10,"column_end":18},"name":"PollNext","qualname":"::stream::select_with_strategy::PollNext","value":"pub enum PollNext { Left, Right, }","parent":null,"children":[{"krate":0,"index":16635},{"krate":0,"index":16637}],"decl_id":null,"docs":" Type to tell [`SelectWithStrategy`] which stream to poll next.\n","sig":null,"attributes":[{"value":"/ Type to tell [`SelectWithStrategy`] which stream to poll next.","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\select_with_strategy.rs","byte_start":438141,"byte_end":438207,"line_start":8,"line_end":8,"column_start":1,"column_end":67}}]},{"kind":"Method","id":{"krate":0,"index":6191},"span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\select_with_strategy.rs","byte_start":438442,"byte_end":438448,"line_start":19,"line_end":19,"column_start":12,"column_end":18},"name":"toggle","qualname":"<PollNext>::toggle","value":"pub fn toggle(&mut Self) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Toggle the value and return the old one.\n","sig":null,"attributes":[{"value":"/ Toggle the value and return the old one.","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\select_with_strategy.rs","byte_start":438386,"byte_end":438430,"line_start":18,"line_end":18,"column_start":5,"column_end":49}}]},{"kind":"Struct","id":{"krate":0,"index":16653},"span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\select_with_strategy.rs","byte_start":438920,"byte_end":438938,"line_start":40,"line_end":40,"column_start":16,"column_end":34},"name":"SelectWithStrategy","qualname":"::stream::select_with_strategy::SelectWithStrategy","value":"SelectWithStrategy {  }","parent":null,"children":[{"krate":0,"index":16658},{"krate":0,"index":16659},{"krate":0,"index":16660},{"krate":0,"index":16661}],"decl_id":null,"docs":" Stream for the [`select_with_strategy()`] function. See function docs for details.\n","sig":null,"attributes":[{"value":"must_use = \"streams do nothing unless polled\"","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pin-project-lite-0.2.9\\src\\lib.rs","byte_start":14239710,"byte_end":14239719,"line_start":633,"line_end":633,"column_start":11,"column_end":20}}]},{"kind":"Function","id":{"krate":0,"index":6194},"span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\select_with_strategy.rs","byte_start":441230,"byte_end":441250,"line_start":111,"line_end":111,"column_start":8,"column_end":28},"name":"select_with_strategy","qualname":"::stream::select_with_strategy::select_with_strategy","value":"pub fn select_with_strategy<St1, St2, Clos, State>(St1, St2, Clos)\n-> SelectWithStrategy<St1, St2, Clos, State> where St1: Stream,\nSt2: Stream<Item = St1::Item>, Clos: FnMut(&mut State) -> PollNext,\nState: Default","parent":null,"children":[],"decl_id":null,"docs":" This function will attempt to pull items from both streams. You provide a\n closure to tell [`SelectWithStrategy`] which stream to poll. The closure can\n store state on `SelectWithStrategy` to which it will receive a `&mut` on every\n invocation. This allows basing the strategy on prior choices.","sig":null,"attributes":[{"value":"/ This function will attempt to pull items from both streams. You provide a","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\select_with_strategy.rs","byte_start":439101,"byte_end":439178,"line_start":50,"line_end":50,"column_start":1,"column_end":78}},{"value":"/ closure to tell [`SelectWithStrategy`] which stream to poll. The closure can","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\select_with_strategy.rs","byte_start":439179,"byte_end":439259,"line_start":51,"line_end":51,"column_start":1,"column_end":81}},{"value":"/ store state on `SelectWithStrategy` to which it will receive a `&mut` on every","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\select_with_strategy.rs","byte_start":439260,"byte_end":439342,"line_start":52,"line_end":52,"column_start":1,"column_end":83}},{"value":"/ invocation. This allows basing the strategy on prior choices.","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\select_with_strategy.rs","byte_start":439343,"byte_end":439408,"line_start":53,"line_end":53,"column_start":1,"column_end":66}},{"value":"/","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\select_with_strategy.rs","byte_start":439409,"byte_end":439412,"line_start":54,"line_end":54,"column_start":1,"column_end":4}},{"value":"/ After one of the two input streams completes, the remaining one will be","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\select_with_strategy.rs","byte_start":439413,"byte_end":439488,"line_start":55,"line_end":55,"column_start":1,"column_end":76}},{"value":"/ polled exclusively. The returned stream completes when both input","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\select_with_strategy.rs","byte_start":439489,"byte_end":439558,"line_start":56,"line_end":56,"column_start":1,"column_end":70}},{"value":"/ streams have completed.","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\select_with_strategy.rs","byte_start":439559,"byte_end":439586,"line_start":57,"line_end":57,"column_start":1,"column_end":28}},{"value":"/","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\select_with_strategy.rs","byte_start":439587,"byte_end":439590,"line_start":58,"line_end":58,"column_start":1,"column_end":4}},{"value":"/ Note that this function consumes both streams and returns a wrapped","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\select_with_strategy.rs","byte_start":439591,"byte_end":439662,"line_start":59,"line_end":59,"column_start":1,"column_end":72}},{"value":"/ version of them.","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\select_with_strategy.rs","byte_start":439663,"byte_end":439683,"line_start":60,"line_end":60,"column_start":1,"column_end":21}},{"value":"/","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\select_with_strategy.rs","byte_start":439684,"byte_end":439687,"line_start":61,"line_end":61,"column_start":1,"column_end":4}},{"value":"/ ## Examples","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\select_with_strategy.rs","byte_start":439688,"byte_end":439703,"line_start":62,"line_end":62,"column_start":1,"column_end":16}},{"value":"/","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\select_with_strategy.rs","byte_start":439704,"byte_end":439707,"line_start":63,"line_end":63,"column_start":1,"column_end":4}},{"value":"/ ### Priority","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\select_with_strategy.rs","byte_start":439708,"byte_end":439724,"line_start":64,"line_end":64,"column_start":1,"column_end":17}},{"value":"/ This example shows how to always prioritize the left stream.","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\select_with_strategy.rs","byte_start":439725,"byte_end":439789,"line_start":65,"line_end":65,"column_start":1,"column_end":65}},{"value":"/","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\select_with_strategy.rs","byte_start":439790,"byte_end":439793,"line_start":66,"line_end":66,"column_start":1,"column_end":4}},{"value":"/ ```rust","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\select_with_strategy.rs","byte_start":439794,"byte_end":439805,"line_start":67,"line_end":67,"column_start":1,"column_end":12}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\select_with_strategy.rs","byte_start":439806,"byte_end":439847,"line_start":68,"line_end":68,"column_start":1,"column_end":42}},{"value":"/ use futures::stream::{ repeat, select_with_strategy, PollNext, StreamExt };","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\select_with_strategy.rs","byte_start":439848,"byte_end":439927,"line_start":69,"line_end":69,"column_start":1,"column_end":80}},{"value":"/","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\select_with_strategy.rs","byte_start":439928,"byte_end":439931,"line_start":70,"line_end":70,"column_start":1,"column_end":4}},{"value":"/ let left = repeat(1);","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\select_with_strategy.rs","byte_start":439932,"byte_end":439957,"line_start":71,"line_end":71,"column_start":1,"column_end":26}},{"value":"/ let right = repeat(2);","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\select_with_strategy.rs","byte_start":439958,"byte_end":439984,"line_start":72,"line_end":72,"column_start":1,"column_end":27}},{"value":"/","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\select_with_strategy.rs","byte_start":439985,"byte_end":439988,"line_start":73,"line_end":73,"column_start":1,"column_end":4}},{"value":"/ // We don't need any state, so let's make it an empty tuple.","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\select_with_strategy.rs","byte_start":439989,"byte_end":440053,"line_start":74,"line_end":74,"column_start":1,"column_end":65}},{"value":"/ // We must provide some type here, as there is no way for the compiler","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\select_with_strategy.rs","byte_start":440054,"byte_end":440128,"line_start":75,"line_end":75,"column_start":1,"column_end":75}},{"value":"/ // to infer it. As we don't need to capture variables, we can just","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\select_with_strategy.rs","byte_start":440129,"byte_end":440199,"line_start":76,"line_end":76,"column_start":1,"column_end":71}},{"value":"/ // use a function pointer instead of a closure.","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\select_with_strategy.rs","byte_start":440200,"byte_end":440251,"line_start":77,"line_end":77,"column_start":1,"column_end":52}},{"value":"/ fn prio_left(_: &mut ()) -> PollNext { PollNext::Left }","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\select_with_strategy.rs","byte_start":440252,"byte_end":440311,"line_start":78,"line_end":78,"column_start":1,"column_end":60}},{"value":"/","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\select_with_strategy.rs","byte_start":440312,"byte_end":440315,"line_start":79,"line_end":79,"column_start":1,"column_end":4}},{"value":"/ let mut out = select_with_strategy(left, right, prio_left);","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\select_with_strategy.rs","byte_start":440316,"byte_end":440379,"line_start":80,"line_end":80,"column_start":1,"column_end":64}},{"value":"/","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\select_with_strategy.rs","byte_start":440380,"byte_end":440383,"line_start":81,"line_end":81,"column_start":1,"column_end":4}},{"value":"/ for _ in 0..100 {","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\select_with_strategy.rs","byte_start":440384,"byte_end":440405,"line_start":82,"line_end":82,"column_start":1,"column_end":22}},{"value":"/     // Whenever we poll out, we will alwas get `1`.","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\select_with_strategy.rs","byte_start":440406,"byte_end":440461,"line_start":83,"line_end":83,"column_start":1,"column_end":56}},{"value":"/     assert_eq!(1, out.select_next_some().await);","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\select_with_strategy.rs","byte_start":440462,"byte_end":440514,"line_start":84,"line_end":84,"column_start":1,"column_end":53}},{"value":"/ }","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\select_with_strategy.rs","byte_start":440515,"byte_end":440520,"line_start":85,"line_end":85,"column_start":1,"column_end":6}},{"value":"/ # });","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\select_with_strategy.rs","byte_start":440521,"byte_end":440530,"line_start":86,"line_end":86,"column_start":1,"column_end":10}},{"value":"/ ```","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\select_with_strategy.rs","byte_start":440531,"byte_end":440538,"line_start":87,"line_end":87,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\select_with_strategy.rs","byte_start":440539,"byte_end":440542,"line_start":88,"line_end":88,"column_start":1,"column_end":4}},{"value":"/ ### Round Robin","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\select_with_strategy.rs","byte_start":440543,"byte_end":440562,"line_start":89,"line_end":89,"column_start":1,"column_end":20}},{"value":"/ This example shows how to select from both streams round robin.","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\select_with_strategy.rs","byte_start":440563,"byte_end":440630,"line_start":90,"line_end":90,"column_start":1,"column_end":68}},{"value":"/ Note: this special case is provided by [`futures-util::stream::select`].","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\select_with_strategy.rs","byte_start":440631,"byte_end":440707,"line_start":91,"line_end":91,"column_start":1,"column_end":77}},{"value":"/","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\select_with_strategy.rs","byte_start":440708,"byte_end":440711,"line_start":92,"line_end":92,"column_start":1,"column_end":4}},{"value":"/ ```rust","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\select_with_strategy.rs","byte_start":440712,"byte_end":440723,"line_start":93,"line_end":93,"column_start":1,"column_end":12}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\select_with_strategy.rs","byte_start":440724,"byte_end":440765,"line_start":94,"line_end":94,"column_start":1,"column_end":42}},{"value":"/ use futures::stream::{ repeat, select_with_strategy, PollNext, StreamExt };","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\select_with_strategy.rs","byte_start":440766,"byte_end":440845,"line_start":95,"line_end":95,"column_start":1,"column_end":80}},{"value":"/","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\select_with_strategy.rs","byte_start":440846,"byte_end":440849,"line_start":96,"line_end":96,"column_start":1,"column_end":4}},{"value":"/ let left = repeat(1);","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\select_with_strategy.rs","byte_start":440850,"byte_end":440875,"line_start":97,"line_end":97,"column_start":1,"column_end":26}},{"value":"/ let right = repeat(2);","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\select_with_strategy.rs","byte_start":440876,"byte_end":440902,"line_start":98,"line_end":98,"column_start":1,"column_end":27}},{"value":"/","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\select_with_strategy.rs","byte_start":440903,"byte_end":440906,"line_start":99,"line_end":99,"column_start":1,"column_end":4}},{"value":"/ let rrobin = |last: &mut PollNext| last.toggle();","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\select_with_strategy.rs","byte_start":440907,"byte_end":440960,"line_start":100,"line_end":100,"column_start":1,"column_end":54}},{"value":"/","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\select_with_strategy.rs","byte_start":440961,"byte_end":440964,"line_start":101,"line_end":101,"column_start":1,"column_end":4}},{"value":"/ let mut out = select_with_strategy(left, right, rrobin);","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\select_with_strategy.rs","byte_start":440965,"byte_end":441025,"line_start":102,"line_end":102,"column_start":1,"column_end":61}},{"value":"/","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\select_with_strategy.rs","byte_start":441026,"byte_end":441029,"line_start":103,"line_end":103,"column_start":1,"column_end":4}},{"value":"/ for _ in 0..100 {","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\select_with_strategy.rs","byte_start":441030,"byte_end":441051,"line_start":104,"line_end":104,"column_start":1,"column_end":22}},{"value":"/     // We should be alternating now.","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\select_with_strategy.rs","byte_start":441052,"byte_end":441092,"line_start":105,"line_end":105,"column_start":1,"column_end":41}},{"value":"/     assert_eq!(1, out.select_next_some().await);","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\select_with_strategy.rs","byte_start":441093,"byte_end":441145,"line_start":106,"line_end":106,"column_start":1,"column_end":53}},{"value":"/     assert_eq!(2, out.select_next_some().await);","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\select_with_strategy.rs","byte_start":441146,"byte_end":441198,"line_start":107,"line_end":107,"column_start":1,"column_end":53}},{"value":"/ }","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\select_with_strategy.rs","byte_start":441199,"byte_end":441204,"line_start":108,"line_end":108,"column_start":1,"column_end":6}},{"value":"/ # });","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\select_with_strategy.rs","byte_start":441205,"byte_end":441214,"line_start":109,"line_end":109,"column_start":1,"column_end":10}},{"value":"/ ```","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\select_with_strategy.rs","byte_start":441215,"byte_end":441222,"line_start":110,"line_end":110,"column_start":1,"column_end":8}}]},{"kind":"Method","id":{"krate":0,"index":6204},"span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\select_with_strategy.rs","byte_start":441867,"byte_end":441874,"line_start":133,"line_end":133,"column_start":12,"column_end":19},"name":"get_ref","qualname":"<SelectWithStrategy<St1, St2, Clos, State>>::get_ref","value":"pub fn get_ref(&Self) -> (&St1, &St2)","parent":null,"children":[],"decl_id":null,"docs":" Acquires a reference to the underlying streams that this combinator is\n pulling from.\n","sig":null,"attributes":[{"value":"/ Acquires a reference to the underlying streams that this combinator is","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\select_with_strategy.rs","byte_start":441759,"byte_end":441833,"line_start":131,"line_end":131,"column_start":5,"column_end":79}},{"value":"/ pulling from.","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\select_with_strategy.rs","byte_start":441838,"byte_end":441855,"line_start":132,"line_end":132,"column_start":5,"column_end":22}}]},{"kind":"Method","id":{"krate":0,"index":6205},"span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\select_with_strategy.rs","byte_start":442230,"byte_end":442237,"line_start":142,"line_end":142,"column_start":12,"column_end":19},"name":"get_mut","qualname":"<SelectWithStrategy<St1, St2, Clos, State>>::get_mut","value":"pub fn get_mut(&mut Self) -> (&mut St1, &mut St2)","parent":null,"children":[],"decl_id":null,"docs":" Acquires a mutable reference to the underlying streams that this\n combinator is pulling from.","sig":null,"attributes":[{"value":"/ Acquires a mutable reference to the underlying streams that this","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\select_with_strategy.rs","byte_start":441968,"byte_end":442036,"line_start":137,"line_end":137,"column_start":5,"column_end":73}},{"value":"/ combinator is pulling from.","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\select_with_strategy.rs","byte_start":442041,"byte_end":442072,"line_start":138,"line_end":138,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\select_with_strategy.rs","byte_start":442077,"byte_end":442080,"line_start":139,"line_end":139,"column_start":5,"column_end":8}},{"value":"/ Note that care must be taken to avoid tampering with the state of the","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\select_with_strategy.rs","byte_start":442085,"byte_end":442158,"line_start":140,"line_end":140,"column_start":5,"column_end":78}},{"value":"/ stream which may otherwise confuse this combinator.","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\select_with_strategy.rs","byte_start":442163,"byte_end":442218,"line_start":141,"line_end":141,"column_start":5,"column_end":60}}]},{"kind":"Method","id":{"krate":0,"index":6206},"span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\select_with_strategy.rs","byte_start":442612,"byte_end":442623,"line_start":151,"line_end":151,"column_start":12,"column_end":23},"name":"get_pin_mut","qualname":"<SelectWithStrategy<St1, St2, Clos, State>>::get_pin_mut","value":"pub fn get_pin_mut(Pin<&mut Self>) -> (Pin<&mut St1>, Pin<&mut St2>)","parent":null,"children":[],"decl_id":null,"docs":" Acquires a pinned mutable reference to the underlying streams that this\n combinator is pulling from.","sig":null,"attributes":[{"value":"/ Acquires a pinned mutable reference to the underlying streams that this","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\select_with_strategy.rs","byte_start":442343,"byte_end":442418,"line_start":146,"line_end":146,"column_start":5,"column_end":80}},{"value":"/ combinator is pulling from.","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\select_with_strategy.rs","byte_start":442423,"byte_end":442454,"line_start":147,"line_end":147,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\select_with_strategy.rs","byte_start":442459,"byte_end":442462,"line_start":148,"line_end":148,"column_start":5,"column_end":8}},{"value":"/ Note that care must be taken to avoid tampering with the state of the","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\select_with_strategy.rs","byte_start":442467,"byte_end":442540,"line_start":149,"line_end":149,"column_start":5,"column_end":78}},{"value":"/ stream which may otherwise confuse this combinator.","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\select_with_strategy.rs","byte_start":442545,"byte_end":442600,"line_start":150,"line_end":150,"column_start":5,"column_end":60}}]},{"kind":"Method","id":{"krate":0,"index":6207},"span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\select_with_strategy.rs","byte_start":443029,"byte_end":443039,"line_start":160,"line_end":160,"column_start":12,"column_end":22},"name":"into_inner","qualname":"<SelectWithStrategy<St1, St2, Clos, State>>::into_inner","value":"pub fn into_inner(Self) -> (St1, St2)","parent":null,"children":[],"decl_id":null,"docs":" Consumes this combinator, returning the underlying streams.","sig":null,"attributes":[{"value":"/ Consumes this combinator, returning the underlying streams.","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\select_with_strategy.rs","byte_start":442793,"byte_end":442856,"line_start":156,"line_end":156,"column_start":5,"column_end":68}},{"value":"/","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\select_with_strategy.rs","byte_start":442861,"byte_end":442864,"line_start":157,"line_end":157,"column_start":5,"column_end":8}},{"value":"/ Note that this may discard intermediate state of this combinator, so","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\select_with_strategy.rs","byte_start":442869,"byte_end":442941,"line_start":158,"line_end":158,"column_start":5,"column_end":77}},{"value":"/ care should be taken to avoid losing resources when this is called.","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\select_with_strategy.rs","byte_start":442946,"byte_end":443017,"line_start":159,"line_end":159,"column_start":5,"column_end":76}}]},{"kind":"Function","id":{"krate":0,"index":6276},"span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\unfold.rs","byte_start":446717,"byte_end":446723,"line_start":50,"line_end":50,"column_start":8,"column_end":14},"name":"unfold","qualname":"::stream::unfold::unfold","value":"pub fn unfold<T, F, Fut, Item>(T, F) -> Unfold<T, F, Fut> where F: FnMut(T) ->\nFut, Fut: Future<Output = Option<(Item, T)>>","parent":null,"children":[],"decl_id":null,"docs":" Creates a `Stream` from a seed and a closure returning a `Future`.","sig":null,"attributes":[{"value":"/ Creates a `Stream` from a seed and a closure returning a `Future`.","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\unfold.rs","byte_start":445275,"byte_end":445345,"line_start":11,"line_end":11,"column_start":1,"column_end":71}},{"value":"/","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\unfold.rs","byte_start":445346,"byte_end":445349,"line_start":12,"line_end":12,"column_start":1,"column_end":4}},{"value":"/ This function is the dual for the `Stream::fold()` adapter: while","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\unfold.rs","byte_start":445350,"byte_end":445419,"line_start":13,"line_end":13,"column_start":1,"column_end":70}},{"value":"/ `Stream::fold()` reduces a `Stream` to one single value, `unfold()` creates a","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\unfold.rs","byte_start":445420,"byte_end":445501,"line_start":14,"line_end":14,"column_start":1,"column_end":82}},{"value":"/ `Stream` from a seed value.","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\unfold.rs","byte_start":445502,"byte_end":445533,"line_start":15,"line_end":15,"column_start":1,"column_end":32}},{"value":"/","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\unfold.rs","byte_start":445534,"byte_end":445537,"line_start":16,"line_end":16,"column_start":1,"column_end":4}},{"value":"/ `unfold()` will call the provided closure with the provided seed, then wait","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\unfold.rs","byte_start":445538,"byte_end":445617,"line_start":17,"line_end":17,"column_start":1,"column_end":80}},{"value":"/ for the returned `Future` to complete with `(a, b)`. It will then yield the","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\unfold.rs","byte_start":445618,"byte_end":445697,"line_start":18,"line_end":18,"column_start":1,"column_end":80}},{"value":"/ value `a`, and use `b` as the next internal state.","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\unfold.rs","byte_start":445698,"byte_end":445752,"line_start":19,"line_end":19,"column_start":1,"column_end":55}},{"value":"/","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\unfold.rs","byte_start":445753,"byte_end":445756,"line_start":20,"line_end":20,"column_start":1,"column_end":4}},{"value":"/ If the closure returns `None` instead of `Some(Future)`, then the `unfold()`","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\unfold.rs","byte_start":445757,"byte_end":445837,"line_start":21,"line_end":21,"column_start":1,"column_end":81}},{"value":"/ will stop producing items and return `Poll::Ready(None)` in future","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\unfold.rs","byte_start":445838,"byte_end":445908,"line_start":22,"line_end":22,"column_start":1,"column_end":71}},{"value":"/ calls to `poll()`.","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\unfold.rs","byte_start":445909,"byte_end":445931,"line_start":23,"line_end":23,"column_start":1,"column_end":23}},{"value":"/","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\unfold.rs","byte_start":445932,"byte_end":445935,"line_start":24,"line_end":24,"column_start":1,"column_end":4}},{"value":"/ This function can typically be used when wanting to go from the \"world of","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\unfold.rs","byte_start":445936,"byte_end":446013,"line_start":25,"line_end":25,"column_start":1,"column_end":78}},{"value":"/ futures\" to the \"world of streams\": the provided closure can build a","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\unfold.rs","byte_start":446014,"byte_end":446086,"line_start":26,"line_end":26,"column_start":1,"column_end":73}},{"value":"/ `Future` using other library functions working on futures, and `unfold()`","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\unfold.rs","byte_start":446087,"byte_end":446164,"line_start":27,"line_end":27,"column_start":1,"column_end":78}},{"value":"/ will turn it into a `Stream` by repeating the operation.","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\unfold.rs","byte_start":446165,"byte_end":446225,"line_start":28,"line_end":28,"column_start":1,"column_end":61}},{"value":"/","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\unfold.rs","byte_start":446226,"byte_end":446229,"line_start":29,"line_end":29,"column_start":1,"column_end":4}},{"value":"/ # Example","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\unfold.rs","byte_start":446230,"byte_end":446243,"line_start":30,"line_end":30,"column_start":1,"column_end":14}},{"value":"/","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\unfold.rs","byte_start":446244,"byte_end":446247,"line_start":31,"line_end":31,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\unfold.rs","byte_start":446248,"byte_end":446255,"line_start":32,"line_end":32,"column_start":1,"column_end":8}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\unfold.rs","byte_start":446256,"byte_end":446297,"line_start":33,"line_end":33,"column_start":1,"column_end":42}},{"value":"/ use futures::stream::{self, StreamExt};","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\unfold.rs","byte_start":446298,"byte_end":446341,"line_start":34,"line_end":34,"column_start":1,"column_end":44}},{"value":"/","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\unfold.rs","byte_start":446342,"byte_end":446345,"line_start":35,"line_end":35,"column_start":1,"column_end":4}},{"value":"/ let stream = stream::unfold(0, |state| async move {","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\unfold.rs","byte_start":446346,"byte_end":446401,"line_start":36,"line_end":36,"column_start":1,"column_end":56}},{"value":"/     if state <= 2 {","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\unfold.rs","byte_start":446402,"byte_end":446425,"line_start":37,"line_end":37,"column_start":1,"column_end":24}},{"value":"/         let next_state = state + 1;","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\unfold.rs","byte_start":446426,"byte_end":446465,"line_start":38,"line_end":38,"column_start":1,"column_end":40}},{"value":"/         let yielded = state  * 2;","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\unfold.rs","byte_start":446466,"byte_end":446503,"line_start":39,"line_end":39,"column_start":1,"column_end":38}},{"value":"/         Some((yielded, next_state))","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\unfold.rs","byte_start":446504,"byte_end":446543,"line_start":40,"line_end":40,"column_start":1,"column_end":40}},{"value":"/     } else {","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\unfold.rs","byte_start":446544,"byte_end":446560,"line_start":41,"line_end":41,"column_start":1,"column_end":17}},{"value":"/         None","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\unfold.rs","byte_start":446561,"byte_end":446577,"line_start":42,"line_end":42,"column_start":1,"column_end":17}},{"value":"/     }","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\unfold.rs","byte_start":446578,"byte_end":446587,"line_start":43,"line_end":43,"column_start":1,"column_end":10}},{"value":"/ });","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\unfold.rs","byte_start":446588,"byte_end":446595,"line_start":44,"line_end":44,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\unfold.rs","byte_start":446596,"byte_end":446599,"line_start":45,"line_end":45,"column_start":1,"column_end":4}},{"value":"/ let result = stream.collect::<Vec<i32>>().await;","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\unfold.rs","byte_start":446600,"byte_end":446652,"line_start":46,"line_end":46,"column_start":1,"column_end":53}},{"value":"/ assert_eq!(result, vec![0, 2, 4]);","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\unfold.rs","byte_start":446653,"byte_end":446691,"line_start":47,"line_end":47,"column_start":1,"column_end":39}},{"value":"/ # });","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\unfold.rs","byte_start":446692,"byte_end":446701,"line_start":48,"line_end":48,"column_start":1,"column_end":10}},{"value":"/ ```","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\unfold.rs","byte_start":446702,"byte_end":446709,"line_start":49,"line_end":49,"column_start":1,"column_end":8}}]},{"kind":"Struct","id":{"krate":0,"index":16722},"span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\unfold.rs","byte_start":447070,"byte_end":447076,"line_start":61,"line_end":61,"column_start":16,"column_end":22},"name":"Unfold","qualname":"::stream::unfold::Unfold","value":"Unfold {  }","parent":null,"children":[{"krate":0,"index":16726},{"krate":0,"index":16727}],"decl_id":null,"docs":" Stream for the [`unfold`] function.\n","sig":null,"attributes":[{"value":"must_use = \"streams do nothing unless polled\"","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pin-project-lite-0.2.9\\src\\lib.rs","byte_start":14239710,"byte_end":14239719,"line_start":633,"line_end":633,"column_start":11,"column_end":20}}]},{"kind":"Struct","id":{"krate":0,"index":6376},"span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\futures_ordered.rs","byte_start":452127,"byte_end":452141,"line_start":95,"line_end":95,"column_start":12,"column_end":26},"name":"FuturesOrdered","qualname":"::stream::futures_ordered::FuturesOrdered","value":"FuturesOrdered {  }","parent":null,"children":[{"krate":0,"index":6378},{"krate":0,"index":6379},{"krate":0,"index":6380},{"krate":0,"index":6381}],"decl_id":null,"docs":" An unbounded queue of futures.","sig":null,"attributes":[{"value":"/ An unbounded queue of futures.","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\futures_ordered.rs","byte_start":450061,"byte_end":450095,"line_start":59,"line_end":59,"column_start":1,"column_end":35}},{"value":"/","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\futures_ordered.rs","byte_start":450096,"byte_end":450099,"line_start":60,"line_end":60,"column_start":1,"column_end":4}},{"value":"/ This \"combinator\" is similar to `FuturesUnordered`, but it imposes an order","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\futures_ordered.rs","byte_start":450100,"byte_end":450179,"line_start":61,"line_end":61,"column_start":1,"column_end":80}},{"value":"/ on top of the set of futures. While futures in the set will race to","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\futures_ordered.rs","byte_start":450180,"byte_end":450251,"line_start":62,"line_end":62,"column_start":1,"column_end":72}},{"value":"/ completion in parallel, results will only be returned in the order their","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\futures_ordered.rs","byte_start":450252,"byte_end":450328,"line_start":63,"line_end":63,"column_start":1,"column_end":77}},{"value":"/ originating futures were added to the queue.","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\futures_ordered.rs","byte_start":450329,"byte_end":450377,"line_start":64,"line_end":64,"column_start":1,"column_end":49}},{"value":"/","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\futures_ordered.rs","byte_start":450378,"byte_end":450381,"line_start":65,"line_end":65,"column_start":1,"column_end":4}},{"value":"/ Futures are pushed into this queue and their realized values are yielded in","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\futures_ordered.rs","byte_start":450382,"byte_end":450461,"line_start":66,"line_end":66,"column_start":1,"column_end":80}},{"value":"/ order. This structure is optimized to manage a large number of futures.","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\futures_ordered.rs","byte_start":450462,"byte_end":450537,"line_start":67,"line_end":67,"column_start":1,"column_end":76}},{"value":"/ Futures managed by `FuturesOrdered` will only be polled when they generate","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\futures_ordered.rs","byte_start":450538,"byte_end":450616,"line_start":68,"line_end":68,"column_start":1,"column_end":79}},{"value":"/ notifications. This reduces the required amount of work needed to coordinate","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\futures_ordered.rs","byte_start":450617,"byte_end":450697,"line_start":69,"line_end":69,"column_start":1,"column_end":81}},{"value":"/ large numbers of futures.","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\futures_ordered.rs","byte_start":450698,"byte_end":450727,"line_start":70,"line_end":70,"column_start":1,"column_end":30}},{"value":"/","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\futures_ordered.rs","byte_start":450728,"byte_end":450731,"line_start":71,"line_end":71,"column_start":1,"column_end":4}},{"value":"/ When a `FuturesOrdered` is first created, it does not contain any futures.","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\futures_ordered.rs","byte_start":450732,"byte_end":450810,"line_start":72,"line_end":72,"column_start":1,"column_end":79}},{"value":"/ Calling `poll` in this state will result in `Poll::Ready(None))` to be","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\futures_ordered.rs","byte_start":450811,"byte_end":450885,"line_start":73,"line_end":73,"column_start":1,"column_end":75}},{"value":"/ returned. Futures are submitted to the queue using `push`; however, the","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\futures_ordered.rs","byte_start":450886,"byte_end":450961,"line_start":74,"line_end":74,"column_start":1,"column_end":76}},{"value":"/ future will **not** be polled at this point. `FuturesOrdered` will only","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\futures_ordered.rs","byte_start":450962,"byte_end":451037,"line_start":75,"line_end":75,"column_start":1,"column_end":76}},{"value":"/ poll managed futures when `FuturesOrdered::poll` is called. As such, it","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\futures_ordered.rs","byte_start":451038,"byte_end":451113,"line_start":76,"line_end":76,"column_start":1,"column_end":76}},{"value":"/ is important to call `poll` after pushing new futures.","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\futures_ordered.rs","byte_start":451114,"byte_end":451172,"line_start":77,"line_end":77,"column_start":1,"column_end":59}},{"value":"/","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\futures_ordered.rs","byte_start":451173,"byte_end":451176,"line_start":78,"line_end":78,"column_start":1,"column_end":4}},{"value":"/ If `FuturesOrdered::poll` returns `Poll::Ready(None)` this means that","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\futures_ordered.rs","byte_start":451177,"byte_end":451250,"line_start":79,"line_end":79,"column_start":1,"column_end":74}},{"value":"/ the queue is currently not managing any futures. A future may be submitted","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\futures_ordered.rs","byte_start":451251,"byte_end":451329,"line_start":80,"line_end":80,"column_start":1,"column_end":79}},{"value":"/ to the queue at a later time. At that point, a call to","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\futures_ordered.rs","byte_start":451330,"byte_end":451388,"line_start":81,"line_end":81,"column_start":1,"column_end":59}},{"value":"/ `FuturesOrdered::poll` will either return the future's resolved value","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\futures_ordered.rs","byte_start":451389,"byte_end":451462,"line_start":82,"line_end":82,"column_start":1,"column_end":74}},{"value":"/ **or** `Poll::Pending` if the future has not yet completed. When","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\futures_ordered.rs","byte_start":451463,"byte_end":451531,"line_start":83,"line_end":83,"column_start":1,"column_end":69}},{"value":"/ multiple futures are submitted to the queue, `FuturesOrdered::poll` will","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\futures_ordered.rs","byte_start":451532,"byte_end":451608,"line_start":84,"line_end":84,"column_start":1,"column_end":77}},{"value":"/ return `Poll::Pending` until the first future completes, even if","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\futures_ordered.rs","byte_start":451609,"byte_end":451677,"line_start":85,"line_end":85,"column_start":1,"column_end":69}},{"value":"/ some of the later futures have already completed.","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\futures_ordered.rs","byte_start":451678,"byte_end":451731,"line_start":86,"line_end":86,"column_start":1,"column_end":54}},{"value":"/","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\futures_ordered.rs","byte_start":451732,"byte_end":451735,"line_start":87,"line_end":87,"column_start":1,"column_end":4}},{"value":"/ Note that you can create a ready-made `FuturesOrdered` via the","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\futures_ordered.rs","byte_start":451736,"byte_end":451802,"line_start":88,"line_end":88,"column_start":1,"column_end":67}},{"value":"/ [`collect`](Iterator::collect) method, or you can start with an empty queue","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\futures_ordered.rs","byte_start":451803,"byte_end":451882,"line_start":89,"line_end":89,"column_start":1,"column_end":80}},{"value":"/ with the `FuturesOrdered::new` constructor.","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\futures_ordered.rs","byte_start":451883,"byte_end":451930,"line_start":90,"line_end":90,"column_start":1,"column_end":48}},{"value":"/","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\futures_ordered.rs","byte_start":451931,"byte_end":451934,"line_start":91,"line_end":91,"column_start":1,"column_end":4}},{"value":"/ This type is only available when the `std` or `alloc` feature of this","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\futures_ordered.rs","byte_start":451935,"byte_end":452008,"line_start":92,"line_end":92,"column_start":1,"column_end":74}},{"value":"/ library is activated, and it is activated by default.","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\futures_ordered.rs","byte_start":452009,"byte_end":452066,"line_start":93,"line_end":93,"column_start":1,"column_end":58}},{"value":"must_use = \"streams do nothing unless polled\"","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\futures_ordered.rs","byte_start":452067,"byte_end":452115,"line_start":94,"line_end":94,"column_start":1,"column_end":49}}]},{"kind":"Method","id":{"krate":0,"index":6386},"span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\futures_ordered.rs","byte_start":452649,"byte_end":452652,"line_start":109,"line_end":109,"column_start":12,"column_end":15},"name":"new","qualname":"<FuturesOrdered<Fut>>::new","value":"pub fn new() -> Self","parent":null,"children":[],"decl_id":null,"docs":" Constructs a new, empty `FuturesOrdered`","sig":null,"attributes":[{"value":"/ Constructs a new, empty `FuturesOrdered`","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\futures_ordered.rs","byte_start":452429,"byte_end":452473,"line_start":105,"line_end":105,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\futures_ordered.rs","byte_start":452478,"byte_end":452481,"line_start":106,"line_end":106,"column_start":5,"column_end":8}},{"value":"/ The returned `FuturesOrdered` does not contain any futures and, in this","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\futures_ordered.rs","byte_start":452486,"byte_end":452561,"line_start":107,"line_end":107,"column_start":5,"column_end":80}},{"value":"/ state, `FuturesOrdered::poll_next` will return `Poll::Ready(None)`.","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\futures_ordered.rs","byte_start":452566,"byte_end":452637,"line_start":108,"line_end":108,"column_start":5,"column_end":76}}]},{"kind":"Method","id":{"krate":0,"index":6387},"span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\futures_ordered.rs","byte_start":453149,"byte_end":453152,"line_start":123,"line_end":123,"column_start":12,"column_end":15},"name":"len","qualname":"<FuturesOrdered<Fut>>::len","value":"pub fn len(&Self) -> usize","parent":null,"children":[],"decl_id":null,"docs":" Returns the number of futures contained in the queue.","sig":null,"attributes":[{"value":"/ Returns the number of futures contained in the queue.","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\futures_ordered.rs","byte_start":452876,"byte_end":452933,"line_start":118,"line_end":118,"column_start":5,"column_end":62}},{"value":"/","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\futures_ordered.rs","byte_start":452938,"byte_end":452941,"line_start":119,"line_end":119,"column_start":5,"column_end":8}},{"value":"/ This represents the total number of in-flight futures, both","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\futures_ordered.rs","byte_start":452946,"byte_end":453009,"line_start":120,"line_end":120,"column_start":5,"column_end":68}},{"value":"/ those currently processing and those that have completed but","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\futures_ordered.rs","byte_start":453014,"byte_end":453078,"line_start":121,"line_end":121,"column_start":5,"column_end":69}},{"value":"/ which are waiting for earlier futures to complete.","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\futures_ordered.rs","byte_start":453083,"byte_end":453137,"line_start":122,"line_end":122,"column_start":5,"column_end":59}}]},{"kind":"Method","id":{"krate":0,"index":6388},"span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\futures_ordered.rs","byte_start":453310,"byte_end":453318,"line_start":128,"line_end":128,"column_start":12,"column_end":20},"name":"is_empty","qualname":"<FuturesOrdered<Fut>>::is_empty","value":"pub fn is_empty(&Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Returns `true` if the queue contains no futures\n","sig":null,"attributes":[{"value":"/ Returns `true` if the queue contains no futures","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\futures_ordered.rs","byte_start":453247,"byte_end":453298,"line_start":127,"line_end":127,"column_start":5,"column_end":56}}]},{"kind":"Method","id":{"krate":0,"index":6389},"span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\futures_ordered.rs","byte_start":453742,"byte_end":453746,"line_start":138,"line_end":138,"column_start":12,"column_end":16},"name":"push","qualname":"<FuturesOrdered<Fut>>::push","value":"pub fn push(&mut Self, Fut)","parent":null,"children":[],"decl_id":null,"docs":" Push a future into the queue.","sig":null,"attributes":[{"value":"/ Push a future into the queue.","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\futures_ordered.rs","byte_start":453423,"byte_end":453456,"line_start":132,"line_end":132,"column_start":5,"column_end":38}},{"value":"/","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\futures_ordered.rs","byte_start":453461,"byte_end":453464,"line_start":133,"line_end":133,"column_start":5,"column_end":8}},{"value":"/ This function submits the given future to the internal set for managing.","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\futures_ordered.rs","byte_start":453469,"byte_end":453545,"line_start":134,"line_end":134,"column_start":5,"column_end":81}},{"value":"/ This function will not call `poll` on the submitted future. The caller","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\futures_ordered.rs","byte_start":453550,"byte_end":453624,"line_start":135,"line_end":135,"column_start":5,"column_end":79}},{"value":"/ must ensure that `FuturesOrdered::poll` is called in order to receive","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\futures_ordered.rs","byte_start":453629,"byte_end":453702,"line_start":136,"line_end":136,"column_start":5,"column_end":78}},{"value":"/ task notifications.","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\futures_ordered.rs","byte_start":453707,"byte_end":453730,"line_start":137,"line_end":137,"column_start":5,"column_end":28}}]},{"kind":"Mod","id":{"krate":0,"index":6416},"span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\futures_unordered\\mod.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"futures_unordered","qualname":"::stream::futures_unordered","value":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\futures_unordered\\mod.rs","parent":null,"children":[{"krate":0,"index":6417},{"krate":0,"index":6420},{"krate":0,"index":6421},{"krate":0,"index":6424},{"krate":0,"index":6427},{"krate":0,"index":6430},{"krate":0,"index":6431},{"krate":0,"index":6434},{"krate":0,"index":6435},{"krate":0,"index":6437},{"krate":0,"index":6440},{"krate":0,"index":6441},{"krate":0,"index":6443},{"krate":0,"index":6446},{"krate":0,"index":6449},{"krate":0,"index":6452},{"krate":0,"index":6453},{"krate":0,"index":6454},{"krate":0,"index":6456},{"krate":0,"index":6457},{"krate":0,"index":6459},{"krate":0,"index":6460},{"krate":0,"index":6462},{"krate":0,"index":6463},{"krate":0,"index":6465},{"krate":0,"index":6466},{"krate":0,"index":6468},{"krate":0,"index":6469},{"krate":0,"index":6472},{"krate":0,"index":6475},{"krate":0,"index":6478},{"krate":0,"index":6479},{"krate":0,"index":6482},{"krate":0,"index":6485},{"krate":0,"index":6486},{"krate":0,"index":6489},{"krate":0,"index":6492},{"krate":0,"index":6493},{"krate":0,"index":6496},{"krate":0,"index":6499},{"krate":0,"index":6502},{"krate":0,"index":6505},{"krate":0,"index":6508},{"krate":0,"index":6514},{"krate":0,"index":6581},{"krate":0,"index":6582},{"krate":0,"index":6585},{"krate":0,"index":6586},{"krate":0,"index":6588},{"krate":0,"index":6589},{"krate":0,"index":6591},{"krate":0,"index":6594},{"krate":0,"index":6597},{"krate":0,"index":6665},{"krate":0,"index":6668},{"krate":0,"index":6727},{"krate":0,"index":6728},{"krate":0,"index":6731},{"krate":0,"index":6734},{"krate":0,"index":6739},{"krate":0,"index":6741},{"krate":0,"index":6743},{"krate":0,"index":6745},{"krate":0,"index":6747},{"krate":0,"index":6749},{"krate":0,"index":6752},{"krate":0,"index":6767},{"krate":0,"index":6780},{"krate":0,"index":6783},{"krate":0,"index":6787},{"krate":0,"index":6790},{"krate":0,"index":6796},{"krate":0,"index":6802},{"krate":0,"index":6807},{"krate":0,"index":6812},{"krate":0,"index":6815}],"decl_id":null,"docs":" An unbounded set of futures.","sig":null,"attributes":[{"value":"cfg(not(futures_no_atomic_cas))","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\mod.rs","byte_start":149933,"byte_end":149967,"line_start":110,"line_end":110,"column_start":1,"column_end":35}},{"value":"cfg(feature = \"alloc\")","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\mod.rs","byte_start":149968,"byte_end":149993,"line_start":111,"line_end":111,"column_start":1,"column_end":26}},{"value":"/ An unbounded set of futures.","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\futures_unordered\\mod.rs","byte_start":456111,"byte_end":456143,"line_start":1,"line_end":1,"column_start":1,"column_end":33}},{"value":"/","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\futures_unordered\\mod.rs","byte_start":456144,"byte_end":456147,"line_start":2,"line_end":2,"column_start":1,"column_end":4}},{"value":"/ This module is only available when the `std` or `alloc` feature of this","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\futures_unordered\\mod.rs","byte_start":456148,"byte_end":456223,"line_start":3,"line_end":3,"column_start":1,"column_end":76}},{"value":"/ library is activated, and it is activated by default.","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\futures_unordered\\mod.rs","byte_start":456224,"byte_end":456281,"line_start":4,"line_end":4,"column_start":1,"column_end":58}}]},{"kind":"Struct","id":{"krate":0,"index":16815},"span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\futures_unordered\\iter.rs","byte_start":483311,"byte_end":483321,"line_start":9,"line_end":9,"column_start":12,"column_end":22},"name":"IterPinMut","qualname":"::stream::futures_unordered::iter::IterPinMut","value":"IterPinMut {  }","parent":null,"children":[{"krate":0,"index":16818},{"krate":0,"index":16819},{"krate":0,"index":16820}],"decl_id":null,"docs":" Mutable iterator over all futures in the unordered set.\n","sig":null,"attributes":[{"value":"/ Mutable iterator over all futures in the unordered set.","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\futures_unordered\\iter.rs","byte_start":483223,"byte_end":483282,"line_start":7,"line_end":7,"column_start":1,"column_end":60}}]},{"kind":"Struct","id":{"krate":0,"index":16825},"span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\futures_unordered\\iter.rs","byte_start":483558,"byte_end":483565,"line_start":17,"line_end":17,"column_start":12,"column_end":19},"name":"IterMut","qualname":"::stream::futures_unordered::iter::IterMut","value":"","parent":null,"children":[],"decl_id":null,"docs":" Mutable iterator over all futures in the unordered set.\n","sig":null,"attributes":[{"value":"/ Mutable iterator over all futures in the unordered set.","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\futures_unordered\\iter.rs","byte_start":483470,"byte_end":483529,"line_start":15,"line_end":15,"column_start":1,"column_end":60}}]},{"kind":"Struct","id":{"krate":0,"index":16834},"span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\futures_unordered\\iter.rs","byte_start":483706,"byte_end":483716,"line_start":21,"line_end":21,"column_start":12,"column_end":22},"name":"IterPinRef","qualname":"::stream::futures_unordered::iter::IterPinRef","value":"IterPinRef {  }","parent":null,"children":[{"krate":0,"index":16837},{"krate":0,"index":16838},{"krate":0,"index":16839},{"krate":0,"index":16840}],"decl_id":null,"docs":" Immutable iterator over all futures in the unordered set.\n","sig":null,"attributes":[{"value":"/ Immutable iterator over all futures in the unordered set.","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\futures_unordered\\iter.rs","byte_start":483616,"byte_end":483677,"line_start":19,"line_end":19,"column_start":1,"column_end":62}}]},{"kind":"Struct","id":{"krate":0,"index":16845},"span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\futures_unordered\\iter.rs","byte_start":484004,"byte_end":484008,"line_start":30,"line_end":30,"column_start":12,"column_end":16},"name":"Iter","qualname":"::stream::futures_unordered::iter::Iter","value":"","parent":null,"children":[],"decl_id":null,"docs":" Immutable iterator over all the futures in the unordered set.\n","sig":null,"attributes":[{"value":"/ Immutable iterator over all the futures in the unordered set.","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\futures_unordered\\iter.rs","byte_start":483910,"byte_end":483975,"line_start":28,"line_end":28,"column_start":1,"column_end":66}}]},{"kind":"Struct","id":{"krate":0,"index":16854},"span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\futures_unordered\\iter.rs","byte_start":484145,"byte_end":484153,"line_start":34,"line_end":34,"column_start":12,"column_end":20},"name":"IntoIter","qualname":"::stream::futures_unordered::iter::IntoIter","value":"IntoIter {  }","parent":null,"children":[{"krate":0,"index":16856},{"krate":0,"index":16857}],"decl_id":null,"docs":" Owned iterator over all futures in the unordered set.\n","sig":null,"attributes":[{"value":"/ Owned iterator over all futures in the unordered set.","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\futures_unordered\\iter.rs","byte_start":484059,"byte_end":484116,"line_start":32,"line_end":32,"column_start":1,"column_end":58}}]},{"kind":"Struct","id":{"krate":0,"index":6734},"span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\futures_unordered\\mod.rs","byte_start":458148,"byte_end":458164,"line_start":54,"line_end":54,"column_start":12,"column_end":28},"name":"FuturesUnordered","qualname":"::stream::futures_unordered::FuturesUnordered","value":"FuturesUnordered {  }","parent":null,"children":[{"krate":0,"index":6736},{"krate":0,"index":6737},{"krate":0,"index":6738}],"decl_id":null,"docs":" A set of futures which may complete in any order.","sig":null,"attributes":[{"value":"/ A set of futures which may complete in any order.","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\futures_unordered\\mod.rs","byte_start":457053,"byte_end":457106,"line_start":33,"line_end":33,"column_start":1,"column_end":54}},{"value":"/","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\futures_unordered\\mod.rs","byte_start":457107,"byte_end":457110,"line_start":34,"line_end":34,"column_start":1,"column_end":4}},{"value":"/ This structure is optimized to manage a large number of futures.","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\futures_unordered\\mod.rs","byte_start":457111,"byte_end":457179,"line_start":35,"line_end":35,"column_start":1,"column_end":69}},{"value":"/ Futures managed by [`FuturesUnordered`] will only be polled when they","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\futures_unordered\\mod.rs","byte_start":457180,"byte_end":457253,"line_start":36,"line_end":36,"column_start":1,"column_end":74}},{"value":"/ generate wake-up notifications. This reduces the required amount of work","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\futures_unordered\\mod.rs","byte_start":457254,"byte_end":457330,"line_start":37,"line_end":37,"column_start":1,"column_end":77}},{"value":"/ needed to poll large numbers of futures.","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\futures_unordered\\mod.rs","byte_start":457331,"byte_end":457375,"line_start":38,"line_end":38,"column_start":1,"column_end":45}},{"value":"/","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\futures_unordered\\mod.rs","byte_start":457376,"byte_end":457379,"line_start":39,"line_end":39,"column_start":1,"column_end":4}},{"value":"/ [`FuturesUnordered`] can be filled by [`collect`](Iterator::collect)ing an","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\futures_unordered\\mod.rs","byte_start":457380,"byte_end":457458,"line_start":40,"line_end":40,"column_start":1,"column_end":79}},{"value":"/ iterator of futures into a [`FuturesUnordered`], or by","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\futures_unordered\\mod.rs","byte_start":457459,"byte_end":457517,"line_start":41,"line_end":41,"column_start":1,"column_end":59}},{"value":"/ [`push`](FuturesUnordered::push)ing futures onto an existing","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\futures_unordered\\mod.rs","byte_start":457518,"byte_end":457582,"line_start":42,"line_end":42,"column_start":1,"column_end":65}},{"value":"/ [`FuturesUnordered`]. When new futures are added,","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\futures_unordered\\mod.rs","byte_start":457583,"byte_end":457636,"line_start":43,"line_end":43,"column_start":1,"column_end":54}},{"value":"/ [`poll_next`](Stream::poll_next) must be called in order to begin receiving","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\futures_unordered\\mod.rs","byte_start":457637,"byte_end":457716,"line_start":44,"line_end":44,"column_start":1,"column_end":80}},{"value":"/ wake-ups for new futures.","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\futures_unordered\\mod.rs","byte_start":457717,"byte_end":457746,"line_start":45,"line_end":45,"column_start":1,"column_end":30}},{"value":"/","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\futures_unordered\\mod.rs","byte_start":457747,"byte_end":457750,"line_start":46,"line_end":46,"column_start":1,"column_end":4}},{"value":"/ Note that you can create a ready-made [`FuturesUnordered`] via the","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\futures_unordered\\mod.rs","byte_start":457751,"byte_end":457821,"line_start":47,"line_end":47,"column_start":1,"column_end":71}},{"value":"/ [`collect`](Iterator::collect) method, or you can start with an empty set","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\futures_unordered\\mod.rs","byte_start":457822,"byte_end":457899,"line_start":48,"line_end":48,"column_start":1,"column_end":78}},{"value":"/ with the [`FuturesUnordered::new`] constructor.","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\futures_unordered\\mod.rs","byte_start":457900,"byte_end":457951,"line_start":49,"line_end":49,"column_start":1,"column_end":52}},{"value":"/","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\futures_unordered\\mod.rs","byte_start":457952,"byte_end":457955,"line_start":50,"line_end":50,"column_start":1,"column_end":4}},{"value":"/ This type is only available when the `std` or `alloc` feature of this","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\futures_unordered\\mod.rs","byte_start":457956,"byte_end":458029,"line_start":51,"line_end":51,"column_start":1,"column_end":74}},{"value":"/ library is activated, and it is activated by default.","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\futures_unordered\\mod.rs","byte_start":458030,"byte_end":458087,"line_start":52,"line_end":52,"column_start":1,"column_end":58}},{"value":"must_use = \"streams do nothing unless polled\"","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\futures_unordered\\mod.rs","byte_start":458088,"byte_end":458136,"line_start":53,"line_end":53,"column_start":1,"column_end":49}}]},{"kind":"Method","id":{"krate":0,"index":6754},"span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\futures_unordered\\mod.rs","byte_start":460781,"byte_end":460784,"line_start":115,"line_end":115,"column_start":12,"column_end":15},"name":"new","qualname":"<FuturesUnordered<Fut>>::new","value":"pub fn new() -> Self","parent":null,"children":[],"decl_id":null,"docs":" Constructs a new, empty [`FuturesUnordered`].","sig":null,"attributes":[{"value":"/ Constructs a new, empty [`FuturesUnordered`].","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\futures_unordered\\mod.rs","byte_start":460510,"byte_end":460559,"line_start":110,"line_end":110,"column_start":5,"column_end":54}},{"value":"/","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\futures_unordered\\mod.rs","byte_start":460564,"byte_end":460567,"line_start":111,"line_end":111,"column_start":5,"column_end":8}},{"value":"/ The returned [`FuturesUnordered`] does not contain any futures.","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\futures_unordered\\mod.rs","byte_start":460572,"byte_end":460639,"line_start":112,"line_end":112,"column_start":5,"column_end":72}},{"value":"/ In this state, [`FuturesUnordered::poll_next`](Stream::poll_next) will","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\futures_unordered\\mod.rs","byte_start":460644,"byte_end":460718,"line_start":113,"line_end":113,"column_start":5,"column_end":79}},{"value":"/ return [`Poll::Ready(None)`](Poll::Ready).","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\futures_unordered\\mod.rs","byte_start":460723,"byte_end":460769,"line_start":114,"line_end":114,"column_start":5,"column_end":51}}]},{"kind":"Method","id":{"krate":0,"index":6755},"span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\futures_unordered\\mod.rs","byte_start":461814,"byte_end":461817,"line_start":144,"line_end":144,"column_start":12,"column_end":15},"name":"len","qualname":"<FuturesUnordered<Fut>>::len","value":"pub fn len(&Self) -> usize","parent":null,"children":[],"decl_id":null,"docs":" Returns the number of futures contained in the set.","sig":null,"attributes":[{"value":"/ Returns the number of futures contained in the set.","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\futures_unordered\\mod.rs","byte_start":461676,"byte_end":461731,"line_start":141,"line_end":141,"column_start":5,"column_end":60}},{"value":"/","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\futures_unordered\\mod.rs","byte_start":461736,"byte_end":461739,"line_start":142,"line_end":142,"column_start":5,"column_end":8}},{"value":"/ This represents the total number of in-flight futures.","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\futures_unordered\\mod.rs","byte_start":461744,"byte_end":461802,"line_start":143,"line_end":143,"column_start":5,"column_end":63}}]},{"kind":"Method","id":{"krate":0,"index":6756},"span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\futures_unordered\\mod.rs","byte_start":461981,"byte_end":461989,"line_start":150,"line_end":150,"column_start":12,"column_end":20},"name":"is_empty","qualname":"<FuturesUnordered<Fut>>::is_empty","value":"pub fn is_empty(&Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Returns `true` if the set contains no futures.\n","sig":null,"attributes":[{"value":"/ Returns `true` if the set contains no futures.","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\futures_unordered\\mod.rs","byte_start":461919,"byte_end":461969,"line_start":149,"line_end":149,"column_start":5,"column_end":55}}]},{"kind":"Method","id":{"krate":0,"index":6757},"span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\futures_unordered\\mod.rs","byte_start":462572,"byte_end":462576,"line_start":162,"line_end":162,"column_start":12,"column_end":16},"name":"push","qualname":"<FuturesUnordered<Fut>>::push","value":"pub fn push(&Self, Fut)","parent":null,"children":[],"decl_id":null,"docs":" Push a future into the set.","sig":null,"attributes":[{"value":"/ Push a future into the set.","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\futures_unordered\\mod.rs","byte_start":462202,"byte_end":462233,"line_start":156,"line_end":156,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\futures_unordered\\mod.rs","byte_start":462238,"byte_end":462241,"line_start":157,"line_end":157,"column_start":5,"column_end":8}},{"value":"/ This method adds the given future to the set. This method will not","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\futures_unordered\\mod.rs","byte_start":462246,"byte_end":462316,"line_start":158,"line_end":158,"column_start":5,"column_end":75}},{"value":"/ call [`poll`](core::future::Future::poll) on the submitted future. The caller must","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\futures_unordered\\mod.rs","byte_start":462321,"byte_end":462407,"line_start":159,"line_end":159,"column_start":5,"column_end":91}},{"value":"/ ensure that [`FuturesUnordered::poll_next`](Stream::poll_next) is called","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\futures_unordered\\mod.rs","byte_start":462412,"byte_end":462488,"line_start":160,"line_end":160,"column_start":5,"column_end":81}},{"value":"/ in order to receive wake-up notifications for the given future.","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\futures_unordered\\mod.rs","byte_start":462493,"byte_end":462560,"line_start":161,"line_end":161,"column_start":5,"column_end":72}}]},{"kind":"Method","id":{"krate":0,"index":6758},"span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\futures_unordered\\mod.rs","byte_start":463894,"byte_end":463898,"line_start":191,"line_end":191,"column_start":12,"column_end":16},"name":"iter","qualname":"<FuturesUnordered<Fut>>::iter","value":"pub fn iter(&Self) -> Iter<, Fut> where Fut: Unpin","parent":null,"children":[],"decl_id":null,"docs":" Returns an iterator that allows inspecting each future in the set.\n","sig":null,"attributes":[{"value":"/ Returns an iterator that allows inspecting each future in the set.","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\futures_unordered\\mod.rs","byte_start":463812,"byte_end":463882,"line_start":190,"line_end":190,"column_start":5,"column_end":75}}]},{"kind":"Method","id":{"krate":0,"index":6759},"span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\futures_unordered\\mod.rs","byte_start":464096,"byte_end":464108,"line_start":199,"line_end":199,"column_start":12,"column_end":24},"name":"iter_pin_ref","qualname":"<FuturesUnordered<Fut>>::iter_pin_ref","value":"pub fn iter_pin_ref(Pin<&Self>) -> IterPinRef<, Fut>","parent":null,"children":[],"decl_id":null,"docs":" Returns an iterator that allows inspecting each future in the set.\n","sig":null,"attributes":[{"value":"/ Returns an iterator that allows inspecting each future in the set.","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\futures_unordered\\mod.rs","byte_start":464014,"byte_end":464084,"line_start":198,"line_end":198,"column_start":5,"column_end":75}}]},{"kind":"Method","id":{"krate":0,"index":6760},"span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\futures_unordered\\mod.rs","byte_start":464437,"byte_end":464445,"line_start":207,"line_end":207,"column_start":12,"column_end":20},"name":"iter_mut","qualname":"<FuturesUnordered<Fut>>::iter_mut","value":"pub fn iter_mut(&mut Self) -> IterMut<, Fut> where Fut: Unpin","parent":null,"children":[],"decl_id":null,"docs":" Returns an iterator that allows modifying each future in the set.\n","sig":null,"attributes":[{"value":"/ Returns an iterator that allows modifying each future in the set.","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\futures_unordered\\mod.rs","byte_start":464356,"byte_end":464425,"line_start":206,"line_end":206,"column_start":5,"column_end":74}}]},{"kind":"Method","id":{"krate":0,"index":6761},"span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\futures_unordered\\mod.rs","byte_start":464652,"byte_end":464664,"line_start":215,"line_end":215,"column_start":12,"column_end":24},"name":"iter_pin_mut","qualname":"<FuturesUnordered<Fut>>::iter_pin_mut","value":"pub fn iter_pin_mut(Pin<&mut Self>) -> IterPinMut<, Fut>","parent":null,"children":[],"decl_id":null,"docs":" Returns an iterator that allows modifying each future in the set.\n","sig":null,"attributes":[{"value":"/ Returns an iterator that allows modifying each future in the set.","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\futures_unordered\\mod.rs","byte_start":464571,"byte_end":464640,"line_start":214,"line_end":214,"column_start":5,"column_end":74}}]},{"kind":"Method","id":{"krate":0,"index":6785},"span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\futures_unordered\\mod.rs","byte_start":479547,"byte_end":479552,"line_start":556,"line_end":556,"column_start":12,"column_end":17},"name":"clear","qualname":"<FuturesUnordered<Fut>>::clear","value":"pub fn clear(&mut Self)","parent":null,"children":[],"decl_id":null,"docs":" Clears the set, removing all futures.\n","sig":null,"attributes":[{"value":"/ Clears the set, removing all futures.","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\futures_unordered\\mod.rs","byte_start":479494,"byte_end":479535,"line_start":555,"line_end":555,"column_start":5,"column_end":46}}]},{"kind":"Mod","id":{"krate":0,"index":6822},"span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\select_all.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"select_all","qualname":"::stream::select_all","value":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\select_all.rs","parent":null,"children":[{"krate":0,"index":6823},{"krate":0,"index":6824},{"krate":0,"index":6827},{"krate":0,"index":6828},{"krate":0,"index":6830},{"krate":0,"index":6833},{"krate":0,"index":6836},{"krate":0,"index":6839},{"krate":0,"index":6840},{"krate":0,"index":6843},{"krate":0,"index":6846},{"krate":0,"index":6847},{"krate":0,"index":6850},{"krate":0,"index":6853},{"krate":0,"index":6856},{"krate":0,"index":6859},{"krate":0,"index":6860},{"krate":0,"index":6863},{"krate":0,"index":6866},{"krate":0,"index":6869},{"krate":0,"index":16861},{"krate":0,"index":16864},{"krate":0,"index":6872},{"krate":0,"index":6875},{"krate":0,"index":6884},{"krate":0,"index":6887},{"krate":0,"index":6891},{"krate":0,"index":6894},{"krate":0,"index":6896},{"krate":0,"index":6900},{"krate":0,"index":6904},{"krate":0,"index":6909},{"krate":0,"index":6915},{"krate":0,"index":16894},{"krate":0,"index":16899},{"krate":0,"index":16903},{"krate":0,"index":16908},{"krate":0,"index":16912},{"krate":0,"index":16916},{"krate":0,"index":6921},{"krate":0,"index":6927},{"krate":0,"index":6929},{"krate":0,"index":6935},{"krate":0,"index":6937},{"krate":0,"index":6942}],"decl_id":null,"docs":" An unbounded set of streams\n","sig":null,"attributes":[{"value":"cfg(not(futures_no_atomic_cas))","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\mod.rs","byte_start":150149,"byte_end":150183,"line_start":118,"line_end":118,"column_start":1,"column_end":35}},{"value":"cfg(feature = \"alloc\")","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\mod.rs","byte_start":150184,"byte_end":150209,"line_start":119,"line_end":119,"column_start":1,"column_end":26}},{"value":"/ An unbounded set of streams","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\select_all.rs","byte_start":496766,"byte_end":496797,"line_start":1,"line_end":1,"column_start":1,"column_end":32}}]},{"kind":"Struct","id":{"krate":0,"index":16861},"span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\select_all.rs","byte_start":497837,"byte_end":497846,"line_start":30,"line_end":30,"column_start":16,"column_end":25},"name":"SelectAll","qualname":"::stream::select_all::SelectAll","value":"SelectAll {  }","parent":null,"children":[{"krate":0,"index":16863}],"decl_id":null,"docs":" An unbounded set of streams","sig":null,"attributes":[{"value":"must_use = \"streams do nothing unless polled\"","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pin-project-lite-0.2.9\\src\\lib.rs","byte_start":14239710,"byte_end":14239719,"line_start":633,"line_end":633,"column_start":11,"column_end":20}}]},{"kind":"Method","id":{"krate":0,"index":6877},"span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\select_all.rs","byte_start":498328,"byte_end":498331,"line_start":47,"line_end":47,"column_start":12,"column_end":15},"name":"new","qualname":"<SelectAll<St>>::new","value":"pub fn new() -> Self","parent":null,"children":[],"decl_id":null,"docs":" Constructs a new, empty `SelectAll`","sig":null,"attributes":[{"value":"/ Constructs a new, empty `SelectAll`","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\select_all.rs","byte_start":498128,"byte_end":498167,"line_start":43,"line_end":43,"column_start":5,"column_end":44}},{"value":"/","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\select_all.rs","byte_start":498172,"byte_end":498175,"line_start":44,"line_end":44,"column_start":5,"column_end":8}},{"value":"/ The returned `SelectAll` does not contain any streams and, in this","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\select_all.rs","byte_start":498180,"byte_end":498250,"line_start":45,"line_end":45,"column_start":5,"column_end":75}},{"value":"/ state, `SelectAll::poll` will return `Poll::Ready(None)`.","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\select_all.rs","byte_start":498255,"byte_end":498316,"line_start":46,"line_end":46,"column_start":5,"column_end":66}}]},{"kind":"Method","id":{"krate":0,"index":6878},"span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\select_all.rs","byte_start":498541,"byte_end":498544,"line_start":54,"line_end":54,"column_start":12,"column_end":15},"name":"len","qualname":"<SelectAll<St>>::len","value":"pub fn len(&Self) -> usize","parent":null,"children":[],"decl_id":null,"docs":" Returns the number of streams contained in the set.","sig":null,"attributes":[{"value":"/ Returns the number of streams contained in the set.","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\select_all.rs","byte_start":498403,"byte_end":498458,"line_start":51,"line_end":51,"column_start":5,"column_end":60}},{"value":"/","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\select_all.rs","byte_start":498463,"byte_end":498466,"line_start":52,"line_end":52,"column_start":5,"column_end":8}},{"value":"/ This represents the total number of in-flight streams.","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\select_all.rs","byte_start":498471,"byte_end":498529,"line_start":53,"line_end":53,"column_start":5,"column_end":63}}]},{"kind":"Method","id":{"krate":0,"index":6879},"span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\select_all.rs","byte_start":498660,"byte_end":498668,"line_start":59,"line_end":59,"column_start":12,"column_end":20},"name":"is_empty","qualname":"<SelectAll<St>>::is_empty","value":"pub fn is_empty(&Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Returns `true` if the set contains no streams\n","sig":null,"attributes":[{"value":"/ Returns `true` if the set contains no streams","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\select_all.rs","byte_start":498599,"byte_end":498648,"line_start":58,"line_end":58,"column_start":5,"column_end":54}}]},{"kind":"Method","id":{"krate":0,"index":6880},"span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\select_all.rs","byte_start":499030,"byte_end":499034,"line_start":69,"line_end":69,"column_start":12,"column_end":16},"name":"push","qualname":"<SelectAll<St>>::push","value":"pub fn push(&mut Self, St)","parent":null,"children":[],"decl_id":null,"docs":" Push a stream into the set.","sig":null,"attributes":[{"value":"/ Push a stream into the set.","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\select_all.rs","byte_start":498727,"byte_end":498758,"line_start":63,"line_end":63,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\select_all.rs","byte_start":498763,"byte_end":498766,"line_start":64,"line_end":64,"column_start":5,"column_end":8}},{"value":"/ This function submits the given stream to the set for managing. This","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\select_all.rs","byte_start":498771,"byte_end":498843,"line_start":65,"line_end":65,"column_start":5,"column_end":77}},{"value":"/ function will not call `poll` on the submitted stream. The caller must","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\select_all.rs","byte_start":498848,"byte_end":498922,"line_start":66,"line_end":66,"column_start":5,"column_end":79}},{"value":"/ ensure that `SelectAll::poll` is called in order to receive task","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\select_all.rs","byte_start":498927,"byte_end":498995,"line_start":67,"line_end":67,"column_start":5,"column_end":73}},{"value":"/ notifications.","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\select_all.rs","byte_start":499000,"byte_end":499018,"line_start":68,"line_end":68,"column_start":5,"column_end":23}}]},{"kind":"Method","id":{"krate":0,"index":6881},"span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\select_all.rs","byte_start":499200,"byte_end":499204,"line_start":74,"line_end":74,"column_start":12,"column_end":16},"name":"iter","qualname":"<SelectAll<St>>::iter","value":"pub fn iter(&Self) -> Iter<, St>","parent":null,"children":[],"decl_id":null,"docs":" Returns an iterator that allows inspecting each stream in the set.\n","sig":null,"attributes":[{"value":"/ Returns an iterator that allows inspecting each stream in the set.","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\select_all.rs","byte_start":499118,"byte_end":499188,"line_start":73,"line_end":73,"column_start":5,"column_end":75}}]},{"kind":"Method","id":{"krate":0,"index":6882},"span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\select_all.rs","byte_start":499354,"byte_end":499362,"line_start":79,"line_end":79,"column_start":12,"column_end":20},"name":"iter_mut","qualname":"<SelectAll<St>>::iter_mut","value":"pub fn iter_mut(&mut Self) -> IterMut<, St>","parent":null,"children":[],"decl_id":null,"docs":" Returns an iterator that allows modifying each stream in the set.\n","sig":null,"attributes":[{"value":"/ Returns an iterator that allows modifying each stream in the set.","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\select_all.rs","byte_start":499273,"byte_end":499342,"line_start":78,"line_end":78,"column_start":5,"column_end":74}}]},{"kind":"Method","id":{"krate":0,"index":6883},"span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\select_all.rs","byte_start":499498,"byte_end":499503,"line_start":84,"line_end":84,"column_start":12,"column_end":17},"name":"clear","qualname":"<SelectAll<St>>::clear","value":"pub fn clear(&mut Self)","parent":null,"children":[],"decl_id":null,"docs":" Clears the set, removing all streams.\n","sig":null,"attributes":[{"value":"/ Clears the set, removing all streams.","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\select_all.rs","byte_start":499445,"byte_end":499486,"line_start":83,"line_end":83,"column_start":5,"column_end":46}}]},{"kind":"Function","id":{"krate":0,"index":6894},"span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\select_all.rs","byte_start":501210,"byte_end":501220,"line_start":135,"line_end":135,"column_start":8,"column_end":18},"name":"select_all","qualname":"::stream::select_all::select_all","value":"pub fn select_all<I>(I) -> SelectAll<I::Item> where I: IntoIterator,\nI::Item: Stream + Unpin","parent":null,"children":[],"decl_id":null,"docs":" Convert a list of streams into a `Stream` of results from the streams.","sig":null,"attributes":[{"value":"/ Convert a list of streams into a `Stream` of results from the streams.","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\select_all.rs","byte_start":500589,"byte_end":500663,"line_start":123,"line_end":123,"column_start":1,"column_end":75}},{"value":"/","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\select_all.rs","byte_start":500664,"byte_end":500667,"line_start":124,"line_end":124,"column_start":1,"column_end":4}},{"value":"/ This essentially takes a list of streams (e.g. a vector, an iterator, etc.)","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\select_all.rs","byte_start":500668,"byte_end":500747,"line_start":125,"line_end":125,"column_start":1,"column_end":80}},{"value":"/ and bundles them together into a single stream.","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\select_all.rs","byte_start":500748,"byte_end":500799,"line_start":126,"line_end":126,"column_start":1,"column_end":52}},{"value":"/ The stream will yield items as they become available on the underlying","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\select_all.rs","byte_start":500800,"byte_end":500874,"line_start":127,"line_end":127,"column_start":1,"column_end":75}},{"value":"/ streams internally, in the order they become available.","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\select_all.rs","byte_start":500875,"byte_end":500934,"line_start":128,"line_end":128,"column_start":1,"column_end":60}},{"value":"/","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\select_all.rs","byte_start":500935,"byte_end":500938,"line_start":129,"line_end":129,"column_start":1,"column_end":4}},{"value":"/ Note that the returned set can also be used to dynamically push more","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\select_all.rs","byte_start":500939,"byte_end":501011,"line_start":130,"line_end":130,"column_start":1,"column_end":73}},{"value":"/ streams into the set as they become available.","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\select_all.rs","byte_start":501012,"byte_end":501062,"line_start":131,"line_end":131,"column_start":1,"column_end":51}},{"value":"/","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\select_all.rs","byte_start":501063,"byte_end":501066,"line_start":132,"line_end":132,"column_start":1,"column_end":4}},{"value":"/ This function is only available when the `std` or `alloc` feature of this","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\select_all.rs","byte_start":501067,"byte_end":501144,"line_start":133,"line_end":133,"column_start":1,"column_end":78}},{"value":"/ library is activated, and it is activated by default.","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\select_all.rs","byte_start":501145,"byte_end":501202,"line_start":134,"line_end":134,"column_start":1,"column_end":58}}]},{"kind":"Struct","id":{"krate":0,"index":16894},"span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\select_all.rs","byte_start":502527,"byte_end":502531,"line_start":192,"line_end":192,"column_start":12,"column_end":16},"name":"Iter","qualname":"::stream::select_all::Iter","value":"","parent":null,"children":[],"decl_id":null,"docs":" Immutable iterator over all streams in the unordered set.\n","sig":null,"attributes":[{"value":"/ Immutable iterator over all streams in the unordered set.","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\select_all.rs","byte_start":502437,"byte_end":502498,"line_start":190,"line_end":190,"column_start":1,"column_end":62}}]},{"kind":"Struct","id":{"krate":0,"index":16903},"span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\select_all.rs","byte_start":502684,"byte_end":502691,"line_start":196,"line_end":196,"column_start":12,"column_end":19},"name":"IterMut","qualname":"::stream::select_all::IterMut","value":"","parent":null,"children":[],"decl_id":null,"docs":" Mutable iterator over all streams in the unordered set.\n","sig":null,"attributes":[{"value":"/ Mutable iterator over all streams in the unordered set.","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\select_all.rs","byte_start":502596,"byte_end":502655,"line_start":194,"line_end":194,"column_start":1,"column_end":60}}]},{"kind":"Struct","id":{"krate":0,"index":16912},"span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\select_all.rs","byte_start":502845,"byte_end":502853,"line_start":200,"line_end":200,"column_start":12,"column_end":20},"name":"IntoIter","qualname":"::stream::select_all::IntoIter","value":"","parent":null,"children":[],"decl_id":null,"docs":" Owned iterator over all streams in the unordered set.\n","sig":null,"attributes":[{"value":"/ Owned iterator over all streams in the unordered set.","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\select_all.rs","byte_start":502759,"byte_end":502816,"line_start":198,"line_end":198,"column_start":1,"column_end":58}}]},{"kind":"Function","id":{"krate":0,"index":6965},"span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\abortable.rs","byte_start":504868,"byte_end":504877,"line_start":12,"line_end":12,"column_start":8,"column_end":17},"name":"abortable","qualname":"::stream::abortable::abortable","value":"pub fn abortable<St>(St) -> (Abortable<St>, AbortHandle) where St: Stream","parent":null,"children":[],"decl_id":null,"docs":" Creates a new `Abortable` stream and an `AbortHandle` which can be used to stop it.","sig":null,"attributes":[{"value":"/ Creates a new `Abortable` stream and an `AbortHandle` which can be used to stop it.","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\abortable.rs","byte_start":504498,"byte_end":504585,"line_start":5,"line_end":5,"column_start":1,"column_end":88}},{"value":"/","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\abortable.rs","byte_start":504586,"byte_end":504589,"line_start":6,"line_end":6,"column_start":1,"column_end":4}},{"value":"/ This function is a convenient (but less flexible) alternative to calling","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\abortable.rs","byte_start":504590,"byte_end":504666,"line_start":7,"line_end":7,"column_start":1,"column_end":77}},{"value":"/ `AbortHandle::new` and `Abortable::new` manually.","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\abortable.rs","byte_start":504667,"byte_end":504720,"line_start":8,"line_end":8,"column_start":1,"column_end":54}},{"value":"/","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\abortable.rs","byte_start":504721,"byte_end":504724,"line_start":9,"line_end":9,"column_start":1,"column_end":4}},{"value":"/ This function is only available when the `std` or `alloc` feature of this","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\abortable.rs","byte_start":504725,"byte_end":504802,"line_start":10,"line_end":10,"column_start":1,"column_end":78}},{"value":"/ library is activated, and it is activated by default.","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\abortable.rs","byte_start":504803,"byte_end":504860,"line_start":11,"line_end":11,"column_start":1,"column_end":58}}]},{"kind":"Mod","id":{"krate":0,"index":6999},"span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\sink\\mod.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"sink","qualname":"::sink","value":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\sink\\mod.rs","parent":null,"children":[{"krate":0,"index":7000},{"krate":0,"index":7001},{"krate":0,"index":7004},{"krate":0,"index":7007},{"krate":0,"index":7010},{"krate":0,"index":7013},{"krate":0,"index":7014},{"krate":0,"index":7017},{"krate":0,"index":7020},{"krate":0,"index":7021},{"krate":0,"index":7024},{"krate":0,"index":7027},{"krate":0,"index":7030},{"krate":0,"index":7063},{"krate":0,"index":7066},{"krate":0,"index":7100},{"krate":0,"index":7101},{"krate":0,"index":7104},{"krate":0,"index":7107},{"krate":0,"index":7155},{"krate":0,"index":7158},{"krate":0,"index":7193},{"krate":0,"index":7196},{"krate":0,"index":7229},{"krate":0,"index":7232},{"krate":0,"index":7273},{"krate":0,"index":7276},{"krate":0,"index":7327},{"krate":0,"index":7330},{"krate":0,"index":7366},{"krate":0,"index":7369},{"krate":0,"index":7438},{"krate":0,"index":7441},{"krate":0,"index":7488},{"krate":0,"index":7489},{"krate":0,"index":7492},{"krate":0,"index":7495},{"krate":0,"index":7576},{"krate":0,"index":7579},{"krate":0,"index":7652},{"krate":0,"index":7655},{"krate":0,"index":7708},{"krate":0,"index":7711},{"krate":0,"index":7714},{"krate":0,"index":7748}],"decl_id":null,"docs":" Asynchronous sinks.","sig":null,"attributes":[{"value":"cfg(feature = \"sink\")","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\lib.rs","byte_start":10823,"byte_end":10847,"line_start":302,"line_end":302,"column_start":1,"column_end":25}},{"value":"/ Asynchronous sinks.","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\sink\\mod.rs","byte_start":505105,"byte_end":505128,"line_start":1,"line_end":1,"column_start":1,"column_end":24}},{"value":"/","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\sink\\mod.rs","byte_start":505129,"byte_end":505132,"line_start":2,"line_end":2,"column_start":1,"column_end":4}},{"value":"/ This module contains:","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\sink\\mod.rs","byte_start":505133,"byte_end":505158,"line_start":3,"line_end":3,"column_start":1,"column_end":26}},{"value":"/","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\sink\\mod.rs","byte_start":505159,"byte_end":505162,"line_start":4,"line_end":4,"column_start":1,"column_end":4}},{"value":"/ - The [`Sink`] trait, which allows you to asynchronously write data.","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\sink\\mod.rs","byte_start":505163,"byte_end":505235,"line_start":5,"line_end":5,"column_start":1,"column_end":73}},{"value":"/ - The [`SinkExt`] trait, which provides adapters for chaining and composing","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\sink\\mod.rs","byte_start":505236,"byte_end":505315,"line_start":6,"line_end":6,"column_start":1,"column_end":80}},{"value":"/   sinks.","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\sink\\mod.rs","byte_start":505316,"byte_end":505328,"line_start":7,"line_end":7,"column_start":1,"column_end":13}}]},{"kind":"Struct","id":{"krate":0,"index":16919},"span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\sink\\close.rs","byte_start":516609,"byte_end":516614,"line_start":10,"line_end":10,"column_start":12,"column_end":17},"name":"Close","qualname":"::sink::close::Close","value":"Close {  }","parent":null,"children":[{"krate":0,"index":16923},{"krate":0,"index":16924}],"decl_id":null,"docs":" Future for the [`close`](super::SinkExt::close) method.\n","sig":null,"attributes":[{"value":"/ Future for the [`close`](super::SinkExt::close) method.","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\sink\\close.rs","byte_start":516453,"byte_end":516512,"line_start":7,"line_end":7,"column_start":1,"column_end":60}},{"value":"must_use = \"futures do nothing unless you `.await` or poll them\"","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\sink\\close.rs","byte_start":516530,"byte_end":516597,"line_start":9,"line_end":9,"column_start":1,"column_end":68}}]},{"kind":"Struct","id":{"krate":0,"index":16930},"span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\sink\\drain.rs","byte_start":517605,"byte_end":517610,"line_start":11,"line_end":11,"column_start":12,"column_end":17},"name":"Drain","qualname":"::sink::drain::Drain","value":"Drain {  }","parent":null,"children":[{"krate":0,"index":16932}],"decl_id":null,"docs":" Sink for the [`drain`] function.\n","sig":null,"attributes":[{"value":"/ Sink for the [`drain`] function.","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\sink\\drain.rs","byte_start":517493,"byte_end":517529,"line_start":8,"line_end":8,"column_start":1,"column_end":37}},{"value":"must_use = \"sinks do nothing unless polled\"","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\sink\\drain.rs","byte_start":517547,"byte_end":517593,"line_start":10,"line_end":10,"column_start":1,"column_end":47}}]},{"kind":"Function","id":{"krate":0,"index":7089},"span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\sink\\drain.rs","byte_start":518009,"byte_end":518014,"line_start":29,"line_end":29,"column_start":8,"column_end":13},"name":"drain","qualname":"::sink::drain::drain","value":"pub fn drain<T>() -> Drain<T>","parent":null,"children":[],"decl_id":null,"docs":" Create a sink that will just discard all items given to it.","sig":null,"attributes":[{"value":"/ Create a sink that will just discard all items given to it.","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\sink\\drain.rs","byte_start":517647,"byte_end":517710,"line_start":15,"line_end":15,"column_start":1,"column_end":64}},{"value":"/","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\sink\\drain.rs","byte_start":517711,"byte_end":517714,"line_start":16,"line_end":16,"column_start":1,"column_end":4}},{"value":"/ Similar to [`io::Sink`](::std::io::Sink).","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\sink\\drain.rs","byte_start":517715,"byte_end":517760,"line_start":17,"line_end":17,"column_start":1,"column_end":46}},{"value":"/","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\sink\\drain.rs","byte_start":517761,"byte_end":517764,"line_start":18,"line_end":18,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\sink\\drain.rs","byte_start":517765,"byte_end":517779,"line_start":19,"line_end":19,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\sink\\drain.rs","byte_start":517780,"byte_end":517783,"line_start":20,"line_end":20,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\sink\\drain.rs","byte_start":517784,"byte_end":517791,"line_start":21,"line_end":21,"column_start":1,"column_end":8}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\sink\\drain.rs","byte_start":517792,"byte_end":517833,"line_start":22,"line_end":22,"column_start":1,"column_end":42}},{"value":"/ use futures::sink::{self, SinkExt};","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\sink\\drain.rs","byte_start":517834,"byte_end":517873,"line_start":23,"line_end":23,"column_start":1,"column_end":40}},{"value":"/","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\sink\\drain.rs","byte_start":517874,"byte_end":517877,"line_start":24,"line_end":24,"column_start":1,"column_end":4}},{"value":"/ let mut drain = sink::drain();","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\sink\\drain.rs","byte_start":517878,"byte_end":517912,"line_start":25,"line_end":25,"column_start":1,"column_end":35}},{"value":"/ drain.send(5).await?;","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\sink\\drain.rs","byte_start":517913,"byte_end":517938,"line_start":26,"line_end":26,"column_start":1,"column_end":26}},{"value":"/ # Ok::<(), futures::never::Never>(()) }).unwrap();","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\sink\\drain.rs","byte_start":517939,"byte_end":517993,"line_start":27,"line_end":27,"column_start":1,"column_end":55}},{"value":"/ ```","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\sink\\drain.rs","byte_start":517994,"byte_end":518001,"line_start":28,"line_end":28,"column_start":1,"column_end":8}}]},{"kind":"Struct","id":{"krate":0,"index":16936},"span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\sink\\fanout.rs","byte_start":519204,"byte_end":519210,"line_start":13,"line_end":13,"column_start":16,"column_end":22},"name":"Fanout","qualname":"::sink::fanout::Fanout","value":"Fanout {  }","parent":null,"children":[{"krate":0,"index":16939},{"krate":0,"index":16940}],"decl_id":null,"docs":" Sink that clones incoming items and forwards them to two sinks at the same time.","sig":null,"attributes":[{"value":"must_use = \"sinks do nothing unless polled\"","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pin-project-lite-0.2.9\\src\\lib.rs","byte_start":14239710,"byte_end":14239719,"line_start":633,"line_end":633,"column_start":11,"column_end":20}}]},{"kind":"Method","id":{"krate":0,"index":7138},"span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\sink\\fanout.rs","byte_start":519490,"byte_end":519497,"line_start":27,"line_end":27,"column_start":12,"column_end":19},"name":"get_ref","qualname":"<Fanout<Si1, Si2>>::get_ref","value":"pub fn get_ref(&Self) -> (&Si1, &Si2)","parent":null,"children":[],"decl_id":null,"docs":" Get a shared reference to the inner sinks.\n","sig":null,"attributes":[{"value":"/ Get a shared reference to the inner sinks.","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\sink\\fanout.rs","byte_start":519432,"byte_end":519478,"line_start":26,"line_end":26,"column_start":5,"column_end":51}}]},{"kind":"Method","id":{"krate":0,"index":7139},"span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\sink\\fanout.rs","byte_start":519628,"byte_end":519635,"line_start":32,"line_end":32,"column_start":12,"column_end":19},"name":"get_mut","qualname":"<Fanout<Si1, Si2>>::get_mut","value":"pub fn get_mut(&mut Self) -> (&mut Si1, &mut Si2)","parent":null,"children":[],"decl_id":null,"docs":" Get a mutable reference to the inner sinks.\n","sig":null,"attributes":[{"value":"/ Get a mutable reference to the inner sinks.","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\sink\\fanout.rs","byte_start":519569,"byte_end":519616,"line_start":31,"line_end":31,"column_start":5,"column_end":52}}]},{"kind":"Method","id":{"krate":0,"index":7140},"span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\sink\\fanout.rs","byte_start":519793,"byte_end":519804,"line_start":37,"line_end":37,"column_start":12,"column_end":23},"name":"get_pin_mut","qualname":"<Fanout<Si1, Si2>>::get_pin_mut","value":"pub fn get_pin_mut(Pin<&mut Self>) -> (Pin<&mut Si1>, Pin<&mut Si2>)","parent":null,"children":[],"decl_id":null,"docs":" Get a pinned mutable reference to the inner sinks.\n","sig":null,"attributes":[{"value":"/ Get a pinned mutable reference to the inner sinks.","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\sink\\fanout.rs","byte_start":519727,"byte_end":519781,"line_start":36,"line_end":36,"column_start":5,"column_end":59}}]},{"kind":"Method","id":{"krate":0,"index":7141},"span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\sink\\fanout.rs","byte_start":520176,"byte_end":520186,"line_start":46,"line_end":46,"column_start":12,"column_end":22},"name":"into_inner","qualname":"<Fanout<Si1, Si2>>::into_inner","value":"pub fn into_inner(Self) -> (Si1, Si2)","parent":null,"children":[],"decl_id":null,"docs":" Consumes this combinator, returning the underlying sinks.","sig":null,"attributes":[{"value":"/ Consumes this combinator, returning the underlying sinks.","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\sink\\fanout.rs","byte_start":519942,"byte_end":520003,"line_start":42,"line_end":42,"column_start":5,"column_end":66}},{"value":"/","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\sink\\fanout.rs","byte_start":520008,"byte_end":520011,"line_start":43,"line_end":43,"column_start":5,"column_end":8}},{"value":"/ Note that this may discard intermediate state of this combinator,","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\sink\\fanout.rs","byte_start":520016,"byte_end":520085,"line_start":44,"line_end":44,"column_start":5,"column_end":74}},{"value":"/ so care should be taken to avoid losing resources when this is called.","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\sink\\fanout.rs","byte_start":520090,"byte_end":520164,"line_start":45,"line_end":45,"column_start":5,"column_end":79}}]},{"kind":"Struct","id":{"krate":0,"index":16981},"span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\sink\\feed.rs","byte_start":522432,"byte_end":522436,"line_start":10,"line_end":10,"column_start":12,"column_end":16},"name":"Feed","qualname":"::sink::feed::Feed","value":"Feed {  }","parent":null,"children":[{"krate":0,"index":16985},{"krate":0,"index":16986}],"decl_id":null,"docs":" Future for the [`feed`](super::SinkExt::feed) method.\n","sig":null,"attributes":[{"value":"/ Future for the [`feed`](super::SinkExt::feed) method.","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\sink\\feed.rs","byte_start":522278,"byte_end":522335,"line_start":7,"line_end":7,"column_start":1,"column_end":58}},{"value":"must_use = \"futures do nothing unless you `.await` or poll them\"","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\sink\\feed.rs","byte_start":522353,"byte_end":522420,"line_start":9,"line_end":9,"column_start":1,"column_end":68}}]},{"kind":"Struct","id":{"krate":0,"index":16992},"span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\sink\\flush.rs","byte_start":523767,"byte_end":523772,"line_start":10,"line_end":10,"column_start":12,"column_end":17},"name":"Flush","qualname":"::sink::flush::Flush","value":"Flush {  }","parent":null,"children":[{"krate":0,"index":16996},{"krate":0,"index":16997}],"decl_id":null,"docs":" Future for the [`flush`](super::SinkExt::flush) method.\n","sig":null,"attributes":[{"value":"/ Future for the [`flush`](super::SinkExt::flush) method.","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\sink\\flush.rs","byte_start":523611,"byte_end":523670,"line_start":7,"line_end":7,"column_start":1,"column_end":60}},{"value":"must_use = \"futures do nothing unless you `.await` or poll them\"","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\sink\\flush.rs","byte_start":523688,"byte_end":523755,"line_start":9,"line_end":9,"column_start":1,"column_end":68}}]},{"kind":"Struct","id":{"krate":0,"index":17003},"span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\sink\\err_into.rs","byte_start":525009,"byte_end":525020,"line_start":10,"line_end":10,"column_start":16,"column_end":27},"name":"SinkErrInto","qualname":"::sink::err_into::SinkErrInto","value":"SinkErrInto {  }","parent":null,"children":[{"krate":0,"index":17007}],"decl_id":null,"docs":" Sink for the [`sink_err_into`](super::SinkExt::sink_err_into) method.\n","sig":null,"attributes":[{"value":"must_use = \"sinks do nothing unless polled\"","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pin-project-lite-0.2.9\\src\\lib.rs","byte_start":14239710,"byte_end":14239719,"line_start":633,"line_end":633,"column_start":11,"column_end":20}}]},{"kind":"Struct","id":{"krate":0,"index":17067},"span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\sink\\map_err.rs","byte_start":526320,"byte_end":526330,"line_start":11,"line_end":11,"column_start":16,"column_end":26},"name":"SinkMapErr","qualname":"::sink::map_err::SinkMapErr","value":"SinkMapErr {  }","parent":null,"children":[{"krate":0,"index":17070},{"krate":0,"index":17071}],"decl_id":null,"docs":" Sink for the [`sink_map_err`](super::SinkExt::sink_map_err) method.\n","sig":null,"attributes":[{"value":"must_use = \"sinks do nothing unless polled\"","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pin-project-lite-0.2.9\\src\\lib.rs","byte_start":14239710,"byte_end":14239719,"line_start":633,"line_end":633,"column_start":11,"column_end":20}}]},{"kind":"Struct","id":{"krate":0,"index":17126},"span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\sink\\send.rs","byte_start":528227,"byte_end":528231,"line_start":11,"line_end":11,"column_start":12,"column_end":16},"name":"Send","qualname":"::sink::send::Send","value":"Send {  }","parent":null,"children":[{"krate":0,"index":17130}],"decl_id":null,"docs":" Future for the [`send`](super::SinkExt::send) method.\n","sig":null,"attributes":[{"value":"/ Future for the [`send`](super::SinkExt::send) method.","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\sink\\send.rs","byte_start":528073,"byte_end":528130,"line_start":8,"line_end":8,"column_start":1,"column_end":58}},{"value":"must_use = \"futures do nothing unless you `.await` or poll them\"","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\sink\\send.rs","byte_start":528148,"byte_end":528215,"line_start":10,"line_end":10,"column_start":1,"column_end":68}}]},{"kind":"Struct","id":{"krate":0,"index":7409},"span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\sink\\send_all.rs","byte_start":529660,"byte_end":529667,"line_start":13,"line_end":13,"column_start":12,"column_end":19},"name":"SendAll","qualname":"::sink::send_all::SendAll","value":"SendAll {  }","parent":null,"children":[{"krate":0,"index":7413},{"krate":0,"index":7414},{"krate":0,"index":7415}],"decl_id":null,"docs":" Future for the [`send_all`](super::SinkExt::send_all) method.\n","sig":null,"attributes":[{"value":"/ Future for the [`send_all`](super::SinkExt::send_all) method.","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\sink\\send_all.rs","byte_start":529424,"byte_end":529489,"line_start":10,"line_end":10,"column_start":1,"column_end":66}},{"value":"allow(explicit_outlives_requirements)","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\sink\\send_all.rs","byte_start":529490,"byte_end":529530,"line_start":11,"line_end":11,"column_start":1,"column_end":41}},{"value":"must_use = \"futures do nothing unless you `.await` or poll them\"","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\sink\\send_all.rs","byte_start":529581,"byte_end":529648,"line_start":12,"line_end":12,"column_start":1,"column_end":68}}]},{"kind":"Struct","id":{"krate":0,"index":17136},"span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\sink\\unfold.rs","byte_start":532618,"byte_end":532624,"line_start":13,"line_end":13,"column_start":16,"column_end":22},"name":"Unfold","qualname":"::sink::unfold::Unfold","value":"Unfold {  }","parent":null,"children":[{"krate":0,"index":17140},{"krate":0,"index":17141}],"decl_id":null,"docs":" Sink for the [`unfold`] function.\n","sig":null,"attributes":[{"value":"must_use = \"sinks do nothing unless polled\"","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pin-project-lite-0.2.9\\src\\lib.rs","byte_start":14239710,"byte_end":14239719,"line_start":633,"line_end":633,"column_start":11,"column_end":20}}]},{"kind":"Function","id":{"krate":0,"index":7471},"span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\sink\\unfold.rs","byte_start":533224,"byte_end":533230,"line_start":39,"line_end":39,"column_start":8,"column_end":14},"name":"unfold","qualname":"::sink::unfold::unfold","value":"pub fn unfold<T, F, R, Item, E>(T, F) -> Unfold<T, F, R> where\nF: FnMut(T, Item) -> R, R: Future<Output = Result<T, E>>","parent":null,"children":[],"decl_id":null,"docs":" Create a sink from a function which processes one item at a time.","sig":null,"attributes":[{"value":"/ Create a sink from a function which processes one item at a time.","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\sink\\unfold.rs","byte_start":532715,"byte_end":532784,"line_start":20,"line_end":20,"column_start":1,"column_end":70}},{"value":"/","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\sink\\unfold.rs","byte_start":532785,"byte_end":532788,"line_start":21,"line_end":21,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\sink\\unfold.rs","byte_start":532789,"byte_end":532803,"line_start":22,"line_end":22,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\sink\\unfold.rs","byte_start":532804,"byte_end":532807,"line_start":23,"line_end":23,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\sink\\unfold.rs","byte_start":532808,"byte_end":532815,"line_start":24,"line_end":24,"column_start":1,"column_end":8}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\sink\\unfold.rs","byte_start":532816,"byte_end":532857,"line_start":25,"line_end":25,"column_start":1,"column_end":42}},{"value":"/ use futures::sink::{self, SinkExt};","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\sink\\unfold.rs","byte_start":532858,"byte_end":532897,"line_start":26,"line_end":26,"column_start":1,"column_end":40}},{"value":"/","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\sink\\unfold.rs","byte_start":532898,"byte_end":532901,"line_start":27,"line_end":27,"column_start":1,"column_end":4}},{"value":"/ let unfold = sink::unfold(0, |mut sum, i: i32| {","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\sink\\unfold.rs","byte_start":532902,"byte_end":532954,"line_start":28,"line_end":28,"column_start":1,"column_end":53}},{"value":"/     async move {","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\sink\\unfold.rs","byte_start":532955,"byte_end":532975,"line_start":29,"line_end":29,"column_start":1,"column_end":21}},{"value":"/         sum += i;","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\sink\\unfold.rs","byte_start":532976,"byte_end":532997,"line_start":30,"line_end":30,"column_start":1,"column_end":22}},{"value":"/         eprintln!(\"{}\", i);","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\sink\\unfold.rs","byte_start":532998,"byte_end":533029,"line_start":31,"line_end":31,"column_start":1,"column_end":32}},{"value":"/         Ok::<_, futures::never::Never>(sum)","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\sink\\unfold.rs","byte_start":533030,"byte_end":533077,"line_start":32,"line_end":32,"column_start":1,"column_end":48}},{"value":"/     }","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\sink\\unfold.rs","byte_start":533078,"byte_end":533087,"line_start":33,"line_end":33,"column_start":1,"column_end":10}},{"value":"/ });","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\sink\\unfold.rs","byte_start":533088,"byte_end":533095,"line_start":34,"line_end":34,"column_start":1,"column_end":8}},{"value":"/ futures::pin_mut!(unfold);","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\sink\\unfold.rs","byte_start":533096,"byte_end":533126,"line_start":35,"line_end":35,"column_start":1,"column_end":31}},{"value":"/ unfold.send(5).await?;","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\sink\\unfold.rs","byte_start":533127,"byte_end":533153,"line_start":36,"line_end":36,"column_start":1,"column_end":27}},{"value":"/ # Ok::<(), futures::never::Never>(()) }).unwrap();","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\sink\\unfold.rs","byte_start":533154,"byte_end":533208,"line_start":37,"line_end":37,"column_start":1,"column_end":55}},{"value":"/ ```","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\sink\\unfold.rs","byte_start":533209,"byte_end":533216,"line_start":38,"line_end":38,"column_start":1,"column_end":8}}]},{"kind":"Struct","id":{"krate":0,"index":17194},"span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\sink\\with.rs","byte_start":535208,"byte_end":535212,"line_start":14,"line_end":14,"column_start":16,"column_end":20},"name":"With","qualname":"::sink::with::With","value":"With {  }","parent":null,"children":[{"krate":0,"index":17200},{"krate":0,"index":17201},{"krate":0,"index":17202},{"krate":0,"index":17203}],"decl_id":null,"docs":" Sink for the [`with`](super::SinkExt::with) method.\n","sig":null,"attributes":[{"value":"must_use = \"sinks do nothing unless polled\"","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pin-project-lite-0.2.9\\src\\lib.rs","byte_start":14239710,"byte_end":14239719,"line_start":633,"line_end":633,"column_start":11,"column_end":20}}]},{"kind":"Struct","id":{"krate":0,"index":17277},"span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\sink\\with_flat_map.rs","byte_start":538755,"byte_end":538766,"line_start":13,"line_end":13,"column_start":16,"column_end":27},"name":"WithFlatMap","qualname":"::sink::with_flat_map::WithFlatMap","value":"WithFlatMap {  }","parent":null,"children":[{"krate":0,"index":17283},{"krate":0,"index":17284},{"krate":0,"index":17285},{"krate":0,"index":17286},{"krate":0,"index":17287}],"decl_id":null,"docs":" Sink for the [`with_flat_map`](super::SinkExt::with_flat_map) method.\n","sig":null,"attributes":[{"value":"must_use = \"sinks do nothing unless polled\"","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pin-project-lite-0.2.9\\src\\lib.rs","byte_start":14239710,"byte_end":14239719,"line_start":633,"line_end":633,"column_start":11,"column_end":20}}]},{"kind":"Struct","id":{"krate":0,"index":17364},"span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\sink\\buffer.rs","byte_start":542501,"byte_end":542507,"line_start":13,"line_end":13,"column_start":16,"column_end":22},"name":"Buffer","qualname":"::sink::buffer::Buffer","value":"Buffer {  }","parent":null,"children":[{"krate":0,"index":17367},{"krate":0,"index":17368},{"krate":0,"index":17369}],"decl_id":null,"docs":" Sink for the [`buffer`](super::SinkExt::buffer) method.\n","sig":null,"attributes":[{"value":"must_use = \"sinks do nothing unless polled\"","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pin-project-lite-0.2.9\\src\\lib.rs","byte_start":14239710,"byte_end":14239719,"line_start":633,"line_end":633,"column_start":11,"column_end":20}}]},{"kind":"Trait","id":{"krate":0,"index":7714},"span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\sink\\mod.rs","byte_start":506422,"byte_end":506429,"line_start":65,"line_end":65,"column_start":11,"column_end":18},"name":"SinkExt","qualname":"::sink::SinkExt","value":"SinkExt<Item>: Sink<Item>","parent":null,"children":[{"krate":0,"index":7716},{"krate":0,"index":7721},{"krate":0,"index":7725},{"krate":0,"index":7728},{"krate":0,"index":7730},{"krate":0,"index":7731},{"krate":0,"index":7732},{"krate":0,"index":7734},{"krate":0,"index":7735},{"krate":0,"index":7736},{"krate":0,"index":7737},{"krate":0,"index":7740},{"krate":0,"index":7742},{"krate":0,"index":7744},{"krate":0,"index":7745},{"krate":0,"index":7746},{"krate":0,"index":7747}],"decl_id":null,"docs":" An extension trait for `Sink`s that provides a variety of convenient\n combinator functions.\n","sig":null,"attributes":[{"value":"/ An extension trait for `Sink`s that provides a variety of convenient","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\sink\\mod.rs","byte_start":506313,"byte_end":506385,"line_start":63,"line_end":63,"column_start":1,"column_end":73}},{"value":"/ combinator functions.","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\sink\\mod.rs","byte_start":506386,"byte_end":506411,"line_start":64,"line_end":64,"column_start":1,"column_end":26}}]},{"kind":"Method","id":{"krate":0,"index":7716},"span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\sink\\mod.rs","byte_start":507021,"byte_end":507025,"line_start":77,"line_end":77,"column_start":8,"column_end":12},"name":"with","qualname":"::sink::SinkExt::with","value":"pub fn with<U, Fut, F, E>(Self, F) -> With<Self, Item, U, Fut, F> where\nF: FnMut(U) -> Fut, Fut: Future<Output = Result<Item, E>>,\nE: From<Self::Error>, Self: Sized","parent":{"krate":0,"index":7714},"children":[],"decl_id":null,"docs":" Composes a function *in front of* the sink.","sig":null,"attributes":[{"value":"/ Composes a function *in front of* the sink.","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\sink\\mod.rs","byte_start":506454,"byte_end":506501,"line_start":66,"line_end":66,"column_start":5,"column_end":52}},{"value":"/","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\sink\\mod.rs","byte_start":506506,"byte_end":506509,"line_start":67,"line_end":67,"column_start":5,"column_end":8}},{"value":"/ This adapter produces a new sink that passes each value through the","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\sink\\mod.rs","byte_start":506514,"byte_end":506585,"line_start":68,"line_end":68,"column_start":5,"column_end":76}},{"value":"/ given function `f` before sending it to `self`.","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\sink\\mod.rs","byte_start":506590,"byte_end":506641,"line_start":69,"line_end":69,"column_start":5,"column_end":56}},{"value":"/","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\sink\\mod.rs","byte_start":506646,"byte_end":506649,"line_start":70,"line_end":70,"column_start":5,"column_end":8}},{"value":"/ To process each value, `f` produces a *future*, which is then polled to","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\sink\\mod.rs","byte_start":506654,"byte_end":506729,"line_start":71,"line_end":71,"column_start":5,"column_end":80}},{"value":"/ completion before passing its result down to the underlying sink. If the","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\sink\\mod.rs","byte_start":506734,"byte_end":506810,"line_start":72,"line_end":72,"column_start":5,"column_end":81}},{"value":"/ future produces an error, that error is returned by the new sink.","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\sink\\mod.rs","byte_start":506815,"byte_end":506884,"line_start":73,"line_end":73,"column_start":5,"column_end":74}},{"value":"/","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\sink\\mod.rs","byte_start":506889,"byte_end":506892,"line_start":74,"line_end":74,"column_start":5,"column_end":8}},{"value":"/ Note that this function consumes the given sink, returning a wrapped","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\sink\\mod.rs","byte_start":506897,"byte_end":506969,"line_start":75,"line_end":75,"column_start":5,"column_end":77}},{"value":"/ version, much like `Iterator::map`.","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\sink\\mod.rs","byte_start":506974,"byte_end":507013,"line_start":76,"line_end":76,"column_start":5,"column_end":44}}]},{"kind":"Method","id":{"krate":0,"index":7721},"span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\sink\\mod.rs","byte_start":508381,"byte_end":508394,"line_start":119,"line_end":119,"column_start":8,"column_end":21},"name":"with_flat_map","qualname":"::sink::SinkExt::with_flat_map","value":"pub fn with_flat_map<U, St, F>(Self, F) -> WithFlatMap<Self, Item, U, St, F>\nwhere F: FnMut(U) -> St, St: Stream<Item = Result<Item, Self::Error>>,\nSelf: Sized","parent":{"krate":0,"index":7714},"children":[],"decl_id":null,"docs":" Composes a function *in front of* the sink.","sig":null,"attributes":[{"value":"/ Composes a function *in front of* the sink.","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\sink\\mod.rs","byte_start":507287,"byte_end":507334,"line_start":87,"line_end":87,"column_start":5,"column_end":52}},{"value":"/","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\sink\\mod.rs","byte_start":507339,"byte_end":507342,"line_start":88,"line_end":88,"column_start":5,"column_end":8}},{"value":"/ This adapter produces a new sink that passes each value through the","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\sink\\mod.rs","byte_start":507347,"byte_end":507418,"line_start":89,"line_end":89,"column_start":5,"column_end":76}},{"value":"/ given function `f` before sending it to `self`.","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\sink\\mod.rs","byte_start":507423,"byte_end":507474,"line_start":90,"line_end":90,"column_start":5,"column_end":56}},{"value":"/","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\sink\\mod.rs","byte_start":507479,"byte_end":507482,"line_start":91,"line_end":91,"column_start":5,"column_end":8}},{"value":"/ To process each value, `f` produces a *stream*, of which each value","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\sink\\mod.rs","byte_start":507487,"byte_end":507558,"line_start":92,"line_end":92,"column_start":5,"column_end":76}},{"value":"/ is passed to the underlying sink. A new value will not be accepted until","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\sink\\mod.rs","byte_start":507563,"byte_end":507639,"line_start":93,"line_end":93,"column_start":5,"column_end":81}},{"value":"/ the stream has been drained","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\sink\\mod.rs","byte_start":507644,"byte_end":507675,"line_start":94,"line_end":94,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\sink\\mod.rs","byte_start":507680,"byte_end":507683,"line_start":95,"line_end":95,"column_start":5,"column_end":8}},{"value":"/ Note that this function consumes the given sink, returning a wrapped","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\sink\\mod.rs","byte_start":507688,"byte_end":507760,"line_start":96,"line_end":96,"column_start":5,"column_end":77}},{"value":"/ version, much like `Iterator::flat_map`.","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\sink\\mod.rs","byte_start":507765,"byte_end":507809,"line_start":97,"line_end":97,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\sink\\mod.rs","byte_start":507814,"byte_end":507817,"line_start":98,"line_end":98,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\sink\\mod.rs","byte_start":507822,"byte_end":507836,"line_start":99,"line_end":99,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\sink\\mod.rs","byte_start":507841,"byte_end":507844,"line_start":100,"line_end":100,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\sink\\mod.rs","byte_start":507849,"byte_end":507856,"line_start":101,"line_end":101,"column_start":5,"column_end":12}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\sink\\mod.rs","byte_start":507861,"byte_end":507902,"line_start":102,"line_end":102,"column_start":5,"column_end":46}},{"value":"/ use futures::channel::mpsc;","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\sink\\mod.rs","byte_start":507907,"byte_end":507938,"line_start":103,"line_end":103,"column_start":5,"column_end":36}},{"value":"/ use futures::sink::SinkExt;","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\sink\\mod.rs","byte_start":507943,"byte_end":507974,"line_start":104,"line_end":104,"column_start":5,"column_end":36}},{"value":"/ use futures::stream::{self, StreamExt};","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\sink\\mod.rs","byte_start":507979,"byte_end":508022,"line_start":105,"line_end":105,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\sink\\mod.rs","byte_start":508027,"byte_end":508030,"line_start":106,"line_end":106,"column_start":5,"column_end":8}},{"value":"/ let (tx, rx) = mpsc::channel(5);","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\sink\\mod.rs","byte_start":508035,"byte_end":508071,"line_start":107,"line_end":107,"column_start":5,"column_end":41}},{"value":"/","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\sink\\mod.rs","byte_start":508076,"byte_end":508079,"line_start":108,"line_end":108,"column_start":5,"column_end":8}},{"value":"/ let mut tx = tx.with_flat_map(|x| {","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\sink\\mod.rs","byte_start":508084,"byte_end":508123,"line_start":109,"line_end":109,"column_start":5,"column_end":44}},{"value":"/     stream::iter(vec![Ok(42); x])","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\sink\\mod.rs","byte_start":508128,"byte_end":508165,"line_start":110,"line_end":110,"column_start":5,"column_end":42}},{"value":"/ });","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\sink\\mod.rs","byte_start":508170,"byte_end":508177,"line_start":111,"line_end":111,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\sink\\mod.rs","byte_start":508182,"byte_end":508185,"line_start":112,"line_end":112,"column_start":5,"column_end":8}},{"value":"/ tx.send(5).await.unwrap();","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\sink\\mod.rs","byte_start":508190,"byte_end":508220,"line_start":113,"line_end":113,"column_start":5,"column_end":35}},{"value":"/ drop(tx);","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\sink\\mod.rs","byte_start":508225,"byte_end":508238,"line_start":114,"line_end":114,"column_start":5,"column_end":18}},{"value":"/ let received: Vec<i32> = rx.collect().await;","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\sink\\mod.rs","byte_start":508243,"byte_end":508291,"line_start":115,"line_end":115,"column_start":5,"column_end":53}},{"value":"/ assert_eq!(received, vec![42, 42, 42, 42, 42]);","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\sink\\mod.rs","byte_start":508296,"byte_end":508347,"line_start":116,"line_end":116,"column_start":5,"column_end":56}},{"value":"/ # });","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\sink\\mod.rs","byte_start":508352,"byte_end":508361,"line_start":117,"line_end":117,"column_start":5,"column_end":14}},{"value":"/ ```","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\sink\\mod.rs","byte_start":508366,"byte_end":508373,"line_start":118,"line_end":118,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":7725},"span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\sink\\mod.rs","byte_start":509134,"byte_end":509146,"line_start":143,"line_end":143,"column_start":8,"column_end":20},"name":"sink_map_err","qualname":"::sink::SinkExt::sink_map_err","value":"pub fn sink_map_err<E, F>(Self, F) -> SinkMapErr<Self, F> where\nF: FnOnce(Self::Error) -> E, Self: Sized","parent":{"krate":0,"index":7714},"children":[],"decl_id":null,"docs":" Transforms the error returned by the sink.\n","sig":null,"attributes":[{"value":"/ Transforms the error returned by the sink.","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\sink\\mod.rs","byte_start":509080,"byte_end":509126,"line_start":142,"line_end":142,"column_start":5,"column_end":51}}]},{"kind":"Method","id":{"krate":0,"index":7728},"span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\sink\\mod.rs","byte_start":509514,"byte_end":509527,"line_start":154,"line_end":154,"column_start":8,"column_end":21},"name":"sink_err_into","qualname":"::sink::SinkExt::sink_err_into","value":"pub fn sink_err_into<E>(Self) -> err_into::SinkErrInto<Self, Item, E> where\nSelf: Sized, Self::Error: Into<E>","parent":{"krate":0,"index":7714},"children":[],"decl_id":null,"docs":" Map this sink's error to a different error type using the `Into` trait.","sig":null,"attributes":[{"value":"/ Map this sink's error to a different error type using the `Into` trait.","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\sink\\mod.rs","byte_start":509333,"byte_end":509408,"line_start":151,"line_end":151,"column_start":5,"column_end":80}},{"value":"/","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\sink\\mod.rs","byte_start":509413,"byte_end":509416,"line_start":152,"line_end":152,"column_start":5,"column_end":8}},{"value":"/ If wanting to map errors of a `Sink + Stream`, use `.sink_err_into().err_into()`.","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\sink\\mod.rs","byte_start":509421,"byte_end":509506,"line_start":153,"line_end":153,"column_start":5,"column_end":90}}]},{"kind":"Method","id":{"krate":0,"index":7730},"span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\sink\\mod.rs","byte_start":510362,"byte_end":510368,"line_start":175,"line_end":175,"column_start":8,"column_end":14},"name":"buffer","qualname":"::sink::SinkExt::buffer","value":"pub fn buffer(Self, usize) -> Buffer<Self, Item> where Self: Sized","parent":{"krate":0,"index":7714},"children":[],"decl_id":null,"docs":" Adds a fixed-size buffer to the current sink.","sig":null,"attributes":[{"value":"/ Adds a fixed-size buffer to the current sink.","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\sink\\mod.rs","byte_start":509713,"byte_end":509762,"line_start":162,"line_end":162,"column_start":5,"column_end":54}},{"value":"/","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\sink\\mod.rs","byte_start":509767,"byte_end":509770,"line_start":163,"line_end":163,"column_start":5,"column_end":8}},{"value":"/ The resulting sink will buffer up to `capacity` items when the","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\sink\\mod.rs","byte_start":509775,"byte_end":509841,"line_start":164,"line_end":164,"column_start":5,"column_end":71}},{"value":"/ underlying sink is unwilling to accept additional items. Calling `flush`","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\sink\\mod.rs","byte_start":509846,"byte_end":509922,"line_start":165,"line_end":165,"column_start":5,"column_end":81}},{"value":"/ on the buffered sink will attempt to both empty the buffer and complete","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\sink\\mod.rs","byte_start":509927,"byte_end":510002,"line_start":166,"line_end":166,"column_start":5,"column_end":80}},{"value":"/ processing on the underlying sink.","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\sink\\mod.rs","byte_start":510007,"byte_end":510045,"line_start":167,"line_end":167,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\sink\\mod.rs","byte_start":510050,"byte_end":510053,"line_start":168,"line_end":168,"column_start":5,"column_end":8}},{"value":"/ Note that this function consumes the given sink, returning a wrapped","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\sink\\mod.rs","byte_start":510058,"byte_end":510130,"line_start":169,"line_end":169,"column_start":5,"column_end":77}},{"value":"/ version, much like `Iterator::map`.","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\sink\\mod.rs","byte_start":510135,"byte_end":510174,"line_start":170,"line_end":170,"column_start":5,"column_end":44}},{"value":"/","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\sink\\mod.rs","byte_start":510179,"byte_end":510182,"line_start":171,"line_end":171,"column_start":5,"column_end":8}},{"value":"/ This method is only available when the `std` or `alloc` feature of this","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\sink\\mod.rs","byte_start":510187,"byte_end":510262,"line_start":172,"line_end":172,"column_start":5,"column_end":80}},{"value":"/ library is activated, and it is activated by default.","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\sink\\mod.rs","byte_start":510267,"byte_end":510324,"line_start":173,"line_end":173,"column_start":5,"column_end":62}},{"value":"cfg(feature = \"alloc\")","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\sink\\mod.rs","byte_start":510329,"byte_end":510354,"line_start":174,"line_end":174,"column_start":5,"column_end":30}}]},{"kind":"Method","id":{"krate":0,"index":7731},"span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\sink\\mod.rs","byte_start":510562,"byte_end":510567,"line_start":183,"line_end":183,"column_start":8,"column_end":13},"name":"close","qualname":"::sink::SinkExt::close","value":"pub fn close(&mut Self) -> Close<, Self, Item> where Self: Unpin","parent":{"krate":0,"index":7714},"children":[],"decl_id":null,"docs":" Close the sink.\n","sig":null,"attributes":[{"value":"/ Close the sink.","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\sink\\mod.rs","byte_start":510535,"byte_end":510554,"line_start":182,"line_end":182,"column_start":5,"column_end":24}}]},{"kind":"Method","id":{"krate":0,"index":7732},"span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\sink\\mod.rs","byte_start":510901,"byte_end":510907,"line_start":194,"line_end":194,"column_start":8,"column_end":14},"name":"fanout","qualname":"::sink::SinkExt::fanout","value":"pub fn fanout<Si>(Self, Si) -> Fanout<Self, Si> where Self: Sized,\nItem: Clone, Si: Sink<Item, Error = Self::Error>","parent":{"krate":0,"index":7714},"children":[],"decl_id":null,"docs":" Fanout items to multiple sinks.","sig":null,"attributes":[{"value":"/ Fanout items to multiple sinks.","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\sink\\mod.rs","byte_start":510722,"byte_end":510757,"line_start":190,"line_end":190,"column_start":5,"column_end":40}},{"value":"/","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\sink\\mod.rs","byte_start":510762,"byte_end":510765,"line_start":191,"line_end":191,"column_start":5,"column_end":8}},{"value":"/ This adapter clones each incoming item and forwards it to both this as well as","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\sink\\mod.rs","byte_start":510770,"byte_end":510852,"line_start":192,"line_end":192,"column_start":5,"column_end":87}},{"value":"/ the other sink at the same time.","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\sink\\mod.rs","byte_start":510857,"byte_end":510893,"line_start":193,"line_end":193,"column_start":5,"column_end":41}}]},{"kind":"Method","id":{"krate":0,"index":7734},"span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\sink\\mod.rs","byte_start":511334,"byte_end":511339,"line_start":207,"line_end":207,"column_start":8,"column_end":13},"name":"flush","qualname":"::sink::SinkExt::flush","value":"pub fn flush(&mut Self) -> Flush<, Self, Item> where Self: Unpin","parent":{"krate":0,"index":7714},"children":[],"decl_id":null,"docs":" Flush the sink, processing all pending items.","sig":null,"attributes":[{"value":"/ Flush the sink, processing all pending items.","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\sink\\mod.rs","byte_start":511133,"byte_end":511182,"line_start":203,"line_end":203,"column_start":5,"column_end":54}},{"value":"/","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\sink\\mod.rs","byte_start":511187,"byte_end":511190,"line_start":204,"line_end":204,"column_start":5,"column_end":8}},{"value":"/ This adapter is intended to be used when you want to stop sending to the sink","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\sink\\mod.rs","byte_start":511195,"byte_end":511276,"line_start":205,"line_end":205,"column_start":5,"column_end":86}},{"value":"/ until all current requests are processed.","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\sink\\mod.rs","byte_start":511281,"byte_end":511326,"line_start":206,"line_end":206,"column_start":5,"column_end":50}}]},{"kind":"Method","id":{"krate":0,"index":7735},"span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\sink\\mod.rs","byte_start":511821,"byte_end":511825,"line_start":220,"line_end":220,"column_start":8,"column_end":12},"name":"send","qualname":"::sink::SinkExt::send","value":"pub fn send(&mut Self, Item) -> Send<, Self, Item> where Self: Unpin","parent":{"krate":0,"index":7714},"children":[],"decl_id":null,"docs":" A future that completes after the given item has been fully processed\n into the sink, including flushing.","sig":null,"attributes":[{"value":"/ A future that completes after the given item has been fully processed","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\sink\\mod.rs","byte_start":511494,"byte_end":511567,"line_start":214,"line_end":214,"column_start":5,"column_end":78}},{"value":"/ into the sink, including flushing.","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\sink\\mod.rs","byte_start":511572,"byte_end":511610,"line_start":215,"line_end":215,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\sink\\mod.rs","byte_start":511615,"byte_end":511618,"line_start":216,"line_end":216,"column_start":5,"column_end":8}},{"value":"/ Note that, **because of the flushing requirement, it is usually better","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\sink\\mod.rs","byte_start":511623,"byte_end":511697,"line_start":217,"line_end":217,"column_start":5,"column_end":79}},{"value":"/ to batch together items to send via `feed` or `send_all`,","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\sink\\mod.rs","byte_start":511702,"byte_end":511763,"line_start":218,"line_end":218,"column_start":5,"column_end":66}},{"value":"/ rather than flushing between each item.**","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\sink\\mod.rs","byte_start":511768,"byte_end":511813,"line_start":219,"line_end":219,"column_start":5,"column_end":50}}]},{"kind":"Method","id":{"krate":0,"index":7736},"span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\sink\\mod.rs","byte_start":512302,"byte_end":512306,"line_start":233,"line_end":233,"column_start":8,"column_end":12},"name":"feed","qualname":"::sink::SinkExt::feed","value":"pub fn feed(&mut Self, Item) -> Feed<, Self, Item> where Self: Unpin","parent":{"krate":0,"index":7714},"children":[],"decl_id":null,"docs":" A future that completes after the given item has been received\n by the sink.","sig":null,"attributes":[{"value":"/ A future that completes after the given item has been received","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\sink\\mod.rs","byte_start":511996,"byte_end":512062,"line_start":227,"line_end":227,"column_start":5,"column_end":71}},{"value":"/ by the sink.","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\sink\\mod.rs","byte_start":512067,"byte_end":512083,"line_start":228,"line_end":228,"column_start":5,"column_end":21}},{"value":"/","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\sink\\mod.rs","byte_start":512088,"byte_end":512091,"line_start":229,"line_end":229,"column_start":5,"column_end":8}},{"value":"/ Unlike `send`, the returned future does not flush the sink.","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\sink\\mod.rs","byte_start":512096,"byte_end":512159,"line_start":230,"line_end":230,"column_start":5,"column_end":68}},{"value":"/ It is the caller's responsibility to ensure all pending items","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\sink\\mod.rs","byte_start":512164,"byte_end":512229,"line_start":231,"line_end":231,"column_start":5,"column_end":70}},{"value":"/ are processed, which can be done via `flush` or `close`.","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\sink\\mod.rs","byte_start":512234,"byte_end":512294,"line_start":232,"line_end":232,"column_start":5,"column_end":65}}]},{"kind":"Method","id":{"krate":0,"index":7737},"span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\sink\\mod.rs","byte_start":513213,"byte_end":513221,"line_start":252,"line_end":252,"column_start":8,"column_end":16},"name":"send_all","qualname":"::sink::SinkExt::send_all","value":"pub fn send_all<'a, St>(&'a mut Self, &'a mut St) -> SendAll where\nSt: TryStream<Ok = Item, Error = Item> + Stream + Unpin + ?Sized, Self: Unpin","parent":{"krate":0,"index":7714},"children":[],"decl_id":null,"docs":" A future that completes after the given stream has been fully processed\n into the sink, including flushing.","sig":null,"attributes":[{"value":"/ A future that completes after the given stream has been fully processed","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\sink\\mod.rs","byte_start":512477,"byte_end":512552,"line_start":240,"line_end":240,"column_start":5,"column_end":80}},{"value":"/ into the sink, including flushing.","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\sink\\mod.rs","byte_start":512557,"byte_end":512595,"line_start":241,"line_end":241,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\sink\\mod.rs","byte_start":512600,"byte_end":512603,"line_start":242,"line_end":242,"column_start":5,"column_end":8}},{"value":"/ This future will drive the stream to keep producing items until it is","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\sink\\mod.rs","byte_start":512608,"byte_end":512681,"line_start":243,"line_end":243,"column_start":5,"column_end":78}},{"value":"/ exhausted, sending each item to the sink. It will complete once both the","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\sink\\mod.rs","byte_start":512686,"byte_end":512762,"line_start":244,"line_end":244,"column_start":5,"column_end":81}},{"value":"/ stream is exhausted, the sink has received all items, and the sink has","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\sink\\mod.rs","byte_start":512767,"byte_end":512841,"line_start":245,"line_end":245,"column_start":5,"column_end":79}},{"value":"/ been flushed. Note that the sink is **not** closed. If the stream produces","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\sink\\mod.rs","byte_start":512846,"byte_end":512924,"line_start":246,"line_end":246,"column_start":5,"column_end":83}},{"value":"/ an error, that error will be returned by this future without flushing the sink.","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\sink\\mod.rs","byte_start":512929,"byte_end":513012,"line_start":247,"line_end":247,"column_start":5,"column_end":88}},{"value":"/","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\sink\\mod.rs","byte_start":513017,"byte_end":513020,"line_start":248,"line_end":248,"column_start":5,"column_end":8}},{"value":"/ Doing `sink.send_all(stream)` is roughly equivalent to","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\sink\\mod.rs","byte_start":513025,"byte_end":513083,"line_start":249,"line_end":249,"column_start":5,"column_end":63}},{"value":"/ `stream.forward(sink)`. The returned future will exhaust all items from","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\sink\\mod.rs","byte_start":513088,"byte_end":513163,"line_start":250,"line_end":250,"column_start":5,"column_end":80}},{"value":"/ `stream` and send them to `self`.","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\sink\\mod.rs","byte_start":513168,"byte_end":513205,"line_start":251,"line_end":251,"column_start":5,"column_end":42}}]},{"kind":"Method","id":{"krate":0,"index":7740},"span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\sink\\mod.rs","byte_start":514019,"byte_end":514028,"line_start":268,"line_end":268,"column_start":8,"column_end":17},"name":"left_sink","qualname":"::sink::SinkExt::left_sink","value":"pub fn left_sink<Si2>(Self) -> Either<Self, Si2> where Si2: Sink<Item, Error =\nSelf::Error>, Self: Sized","parent":{"krate":0,"index":7714},"children":[],"decl_id":null,"docs":" Wrap this sink in an `Either` sink, making it the left-hand variant\n of that `Either`.","sig":null,"attributes":[{"value":"/ Wrap this sink in an `Either` sink, making it the left-hand variant","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\sink\\mod.rs","byte_start":513746,"byte_end":513817,"line_start":263,"line_end":263,"column_start":5,"column_end":76}},{"value":"/ of that `Either`.","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\sink\\mod.rs","byte_start":513822,"byte_end":513843,"line_start":264,"line_end":264,"column_start":5,"column_end":26}},{"value":"/","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\sink\\mod.rs","byte_start":513848,"byte_end":513851,"line_start":265,"line_end":265,"column_start":5,"column_end":8}},{"value":"/ This can be used in combination with the `right_sink` method to write `if`","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\sink\\mod.rs","byte_start":513856,"byte_end":513934,"line_start":266,"line_end":266,"column_start":5,"column_end":83}},{"value":"/ statements that evaluate to different streams in different branches.","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\sink\\mod.rs","byte_start":513939,"byte_end":514011,"line_start":267,"line_end":267,"column_start":5,"column_end":77}}]},{"kind":"Method","id":{"krate":0,"index":7742},"span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\sink\\mod.rs","byte_start":514496,"byte_end":514506,"line_start":281,"line_end":281,"column_start":8,"column_end":18},"name":"right_sink","qualname":"::sink::SinkExt::right_sink","value":"pub fn right_sink<Si1>(Self) -> Either<Si1, Self> where Si1: Sink<Item, Error\n= Self::Error>, Self: Sized","parent":{"krate":0,"index":7714},"children":[],"decl_id":null,"docs":" Wrap this stream in an `Either` stream, making it the right-hand variant\n of that `Either`.","sig":null,"attributes":[{"value":"/ Wrap this stream in an `Either` stream, making it the right-hand variant","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\sink\\mod.rs","byte_start":514219,"byte_end":514295,"line_start":276,"line_end":276,"column_start":5,"column_end":81}},{"value":"/ of that `Either`.","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\sink\\mod.rs","byte_start":514300,"byte_end":514321,"line_start":277,"line_end":277,"column_start":5,"column_end":26}},{"value":"/","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\sink\\mod.rs","byte_start":514326,"byte_end":514329,"line_start":278,"line_end":278,"column_start":5,"column_end":8}},{"value":"/ This can be used in combination with the `left_sink` method to write `if`","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\sink\\mod.rs","byte_start":514334,"byte_end":514411,"line_start":279,"line_end":279,"column_start":5,"column_end":82}},{"value":"/ statements that evaluate to different streams in different branches.","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\sink\\mod.rs","byte_start":514416,"byte_end":514488,"line_start":280,"line_end":280,"column_start":5,"column_end":77}}]},{"kind":"Method","id":{"krate":0,"index":7744},"span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\sink\\mod.rs","byte_start":515151,"byte_end":515167,"line_start":302,"line_end":302,"column_start":8,"column_end":24},"name":"poll_ready_unpin","qualname":"::sink::SinkExt::poll_ready_unpin","value":"pub fn poll_ready_unpin(&mut Self, &mut Context)\n-> Poll<Result<(), Self::Error>> where Self: Unpin","parent":{"krate":0,"index":7714},"children":[],"decl_id":null,"docs":" A convenience method for calling [`Sink::poll_ready`] on [`Unpin`]\n sink types.\n","sig":null,"attributes":[{"value":"/ A convenience method for calling [`Sink::poll_ready`] on [`Unpin`]","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\sink\\mod.rs","byte_start":515053,"byte_end":515123,"line_start":300,"line_end":300,"column_start":5,"column_end":75}},{"value":"/ sink types.","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\sink\\mod.rs","byte_start":515128,"byte_end":515143,"line_start":301,"line_end":301,"column_start":5,"column_end":20}}]},{"kind":"Method","id":{"krate":0,"index":7745},"span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\sink\\mod.rs","byte_start":515418,"byte_end":515434,"line_start":311,"line_end":311,"column_start":8,"column_end":24},"name":"start_send_unpin","qualname":"::sink::SinkExt::start_send_unpin","value":"pub fn start_send_unpin(&mut Self, Item) -> Result<(), Self::Error> where\nSelf: Unpin","parent":{"krate":0,"index":7714},"children":[],"decl_id":null,"docs":" A convenience method for calling [`Sink::start_send`] on [`Unpin`]\n sink types.\n","sig":null,"attributes":[{"value":"/ A convenience method for calling [`Sink::start_send`] on [`Unpin`]","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\sink\\mod.rs","byte_start":515320,"byte_end":515390,"line_start":309,"line_end":309,"column_start":5,"column_end":75}},{"value":"/ sink types.","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\sink\\mod.rs","byte_start":515395,"byte_end":515410,"line_start":310,"line_end":310,"column_start":5,"column_end":20}}]},{"kind":"Method","id":{"krate":0,"index":7746},"span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\sink\\mod.rs","byte_start":515671,"byte_end":515687,"line_start":320,"line_end":320,"column_start":8,"column_end":24},"name":"poll_flush_unpin","qualname":"::sink::SinkExt::poll_flush_unpin","value":"pub fn poll_flush_unpin(&mut Self, &mut Context)\n-> Poll<Result<(), Self::Error>> where Self: Unpin","parent":{"krate":0,"index":7714},"children":[],"decl_id":null,"docs":" A convenience method for calling [`Sink::poll_flush`] on [`Unpin`]\n sink types.\n","sig":null,"attributes":[{"value":"/ A convenience method for calling [`Sink::poll_flush`] on [`Unpin`]","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\sink\\mod.rs","byte_start":515573,"byte_end":515643,"line_start":318,"line_end":318,"column_start":5,"column_end":75}},{"value":"/ sink types.","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\sink\\mod.rs","byte_start":515648,"byte_end":515663,"line_start":319,"line_end":319,"column_start":5,"column_end":20}}]},{"kind":"Method","id":{"krate":0,"index":7747},"span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\sink\\mod.rs","byte_start":515938,"byte_end":515954,"line_start":329,"line_end":329,"column_start":8,"column_end":24},"name":"poll_close_unpin","qualname":"::sink::SinkExt::poll_close_unpin","value":"pub fn poll_close_unpin(&mut Self, &mut Context)\n-> Poll<Result<(), Self::Error>> where Self: Unpin","parent":{"krate":0,"index":7714},"children":[],"decl_id":null,"docs":" A convenience method for calling [`Sink::poll_close`] on [`Unpin`]\n sink types.\n","sig":null,"attributes":[{"value":"/ A convenience method for calling [`Sink::poll_close`] on [`Unpin`]","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\sink\\mod.rs","byte_start":515840,"byte_end":515910,"line_start":327,"line_end":327,"column_start":5,"column_end":75}},{"value":"/ sink types.","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\sink\\mod.rs","byte_start":515915,"byte_end":515930,"line_start":328,"line_end":328,"column_start":5,"column_end":20}}]},{"kind":"Mod","id":{"krate":0,"index":7759},"span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\task\\mod.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"task","qualname":"::task","value":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\task\\mod.rs","parent":null,"children":[{"krate":0,"index":7760},{"krate":0,"index":7761},{"krate":0,"index":7764},{"krate":0,"index":7767},{"krate":0,"index":7770},{"krate":0,"index":7773},{"krate":0,"index":7776},{"krate":0,"index":7777},{"krate":0,"index":7780},{"krate":0,"index":7783},{"krate":0,"index":7786},{"krate":0,"index":7789},{"krate":0,"index":7792},{"krate":0,"index":7795},{"krate":0,"index":7798},{"krate":0,"index":7801},{"krate":0,"index":7804},{"krate":0,"index":7807},{"krate":0,"index":7808},{"krate":0,"index":7811},{"krate":0,"index":7814},{"krate":0,"index":7817},{"krate":0,"index":7851},{"krate":0,"index":7852},{"krate":0,"index":7855}],"decl_id":null,"docs":" Tools for working with tasks.","sig":null,"attributes":[{"value":"/ Tools for working with tasks.","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\task\\mod.rs","byte_start":545175,"byte_end":545208,"line_start":1,"line_end":1,"column_start":1,"column_end":34}},{"value":"/","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\task\\mod.rs","byte_start":545209,"byte_end":545212,"line_start":2,"line_end":2,"column_start":1,"column_end":4}},{"value":"/ This module contains:","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\task\\mod.rs","byte_start":545213,"byte_end":545238,"line_start":3,"line_end":3,"column_start":1,"column_end":26}},{"value":"/","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\task\\mod.rs","byte_start":545239,"byte_end":545242,"line_start":4,"line_end":4,"column_start":1,"column_end":4}},{"value":"/ - [`Spawn`], a trait for spawning new tasks.","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\task\\mod.rs","byte_start":545243,"byte_end":545291,"line_start":5,"line_end":5,"column_start":1,"column_end":49}},{"value":"/ - [`Context`], a context of an asynchronous task,","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\task\\mod.rs","byte_start":545292,"byte_end":545345,"line_start":6,"line_end":6,"column_start":1,"column_end":54}},{"value":"/   including a handle for waking up the task.","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\task\\mod.rs","byte_start":545346,"byte_end":545394,"line_start":7,"line_end":7,"column_start":1,"column_end":49}},{"value":"/ - [`Waker`], a handle for waking up a task.","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\task\\mod.rs","byte_start":545395,"byte_end":545442,"line_start":8,"line_end":8,"column_start":1,"column_end":48}},{"value":"/","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\task\\mod.rs","byte_start":545443,"byte_end":545446,"line_start":9,"line_end":9,"column_start":1,"column_end":4}},{"value":"/ The remaining types and traits in the module are used for implementing","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\task\\mod.rs","byte_start":545447,"byte_end":545521,"line_start":10,"line_end":10,"column_start":1,"column_end":75}},{"value":"/ executors or dealing with synchronization issues around task wakeup.","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\task\\mod.rs","byte_start":545522,"byte_end":545594,"line_start":11,"line_end":11,"column_start":1,"column_end":73}}]},{"kind":"Trait","id":{"krate":0,"index":7845},"span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\task\\spawn.rs","byte_start":546844,"byte_end":546852,"line_start":20,"line_end":20,"column_start":11,"column_end":19},"name":"SpawnExt","qualname":"::task::spawn::SpawnExt","value":"SpawnExt: Spawn","parent":null,"children":[{"krate":0,"index":7846}],"decl_id":null,"docs":" Extension trait for `Spawn`.\n","sig":null,"attributes":[{"value":"/ Extension trait for `Spawn`.","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\task\\spawn.rs","byte_start":546801,"byte_end":546833,"line_start":19,"line_end":19,"column_start":1,"column_end":33}}]},{"kind":"Method","id":{"krate":0,"index":7846},"span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\task\\spawn.rs","byte_start":547934,"byte_end":547939,"line_start":47,"line_end":47,"column_start":8,"column_end":13},"name":"spawn","qualname":"::task::spawn::SpawnExt::spawn","value":"pub fn spawn<Fut>(&Self, Fut) -> Result<(), SpawnError> where\nFut: Future<Output = ()> + Send + 'static","parent":{"krate":0,"index":7845},"children":[],"decl_id":null,"docs":" Spawns a task that polls the given future with output `()` to\n completion.","sig":null,"attributes":[{"value":"/ Spawns a task that polls the given future with output `()` to","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\task\\spawn.rs","byte_start":546866,"byte_end":546931,"line_start":21,"line_end":21,"column_start":5,"column_end":70}},{"value":"/ completion.","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\task\\spawn.rs","byte_start":546936,"byte_end":546951,"line_start":22,"line_end":22,"column_start":5,"column_end":20}},{"value":"/","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\task\\spawn.rs","byte_start":546956,"byte_end":546959,"line_start":23,"line_end":23,"column_start":5,"column_end":8}},{"value":"/ This method returns a [`Result`] that contains a [`SpawnError`] if","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\task\\spawn.rs","byte_start":546964,"byte_end":547034,"line_start":24,"line_end":24,"column_start":5,"column_end":75}},{"value":"/ spawning fails.","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\task\\spawn.rs","byte_start":547039,"byte_end":547058,"line_start":25,"line_end":25,"column_start":5,"column_end":24}},{"value":"/","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\task\\spawn.rs","byte_start":547063,"byte_end":547066,"line_start":26,"line_end":26,"column_start":5,"column_end":8}},{"value":"/ You can use [`spawn_with_handle`](SpawnExt::spawn_with_handle) if","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\task\\spawn.rs","byte_start":547071,"byte_end":547140,"line_start":27,"line_end":27,"column_start":5,"column_end":74}},{"value":"/ you want to spawn a future with output other than `()` or if you want","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\task\\spawn.rs","byte_start":547145,"byte_end":547218,"line_start":28,"line_end":28,"column_start":5,"column_end":78}},{"value":"/ to be able to await its completion.","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\task\\spawn.rs","byte_start":547223,"byte_end":547262,"line_start":29,"line_end":29,"column_start":5,"column_end":44}},{"value":"/","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\task\\spawn.rs","byte_start":547267,"byte_end":547270,"line_start":30,"line_end":30,"column_start":5,"column_end":8}},{"value":"/ Note this method will eventually be replaced with the upcoming","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\task\\spawn.rs","byte_start":547275,"byte_end":547341,"line_start":31,"line_end":31,"column_start":5,"column_end":71}},{"value":"/ `Spawn::spawn` method which will take a `dyn Future` as input.","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\task\\spawn.rs","byte_start":547346,"byte_end":547412,"line_start":32,"line_end":32,"column_start":5,"column_end":71}},{"value":"/ Technical limitations prevent `Spawn::spawn` from being implemented","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\task\\spawn.rs","byte_start":547417,"byte_end":547488,"line_start":33,"line_end":33,"column_start":5,"column_end":76}},{"value":"/ today. Feel free to use this method in the meantime.","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\task\\spawn.rs","byte_start":547493,"byte_end":547549,"line_start":34,"line_end":34,"column_start":5,"column_end":61}},{"value":"/","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\task\\spawn.rs","byte_start":547554,"byte_end":547557,"line_start":35,"line_end":35,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\task\\spawn.rs","byte_start":547562,"byte_end":547569,"line_start":36,"line_end":36,"column_start":5,"column_end":12}},{"value":"/ # if cfg!(miri) { return; } // https://github.com/rust-lang/miri/issues/1038","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\task\\spawn.rs","byte_start":547574,"byte_end":547654,"line_start":37,"line_end":37,"column_start":5,"column_end":85}},{"value":"/ use futures::executor::ThreadPool;","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\task\\spawn.rs","byte_start":547659,"byte_end":547697,"line_start":38,"line_end":38,"column_start":5,"column_end":43}},{"value":"/ use futures::task::SpawnExt;","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\task\\spawn.rs","byte_start":547702,"byte_end":547734,"line_start":39,"line_end":39,"column_start":5,"column_end":37}},{"value":"/","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\task\\spawn.rs","byte_start":547739,"byte_end":547742,"line_start":40,"line_end":40,"column_start":5,"column_end":8}},{"value":"/ let executor = ThreadPool::new().unwrap();","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\task\\spawn.rs","byte_start":547747,"byte_end":547793,"line_start":41,"line_end":41,"column_start":5,"column_end":51}},{"value":"/","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\task\\spawn.rs","byte_start":547798,"byte_end":547801,"line_start":42,"line_end":42,"column_start":5,"column_end":8}},{"value":"/ let future = async { /* ... */ };","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\task\\spawn.rs","byte_start":547806,"byte_end":547843,"line_start":43,"line_end":43,"column_start":5,"column_end":42}},{"value":"/ executor.spawn(future).unwrap();","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\task\\spawn.rs","byte_start":547848,"byte_end":547884,"line_start":44,"line_end":44,"column_start":5,"column_end":41}},{"value":"/ ```","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\task\\spawn.rs","byte_start":547889,"byte_end":547896,"line_start":45,"line_end":45,"column_start":5,"column_end":12}},{"value":"cfg(feature = \"alloc\")","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\task\\spawn.rs","byte_start":547901,"byte_end":547926,"line_start":46,"line_end":46,"column_start":5,"column_end":30}}]},{"kind":"Trait","id":{"krate":0,"index":7848},"span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\task\\spawn.rs","byte_start":549778,"byte_end":549791,"line_start":99,"line_end":99,"column_start":11,"column_end":24},"name":"LocalSpawnExt","qualname":"::task::spawn::LocalSpawnExt","value":"LocalSpawnExt: LocalSpawn","parent":null,"children":[{"krate":0,"index":7849}],"decl_id":null,"docs":" Extension trait for `LocalSpawn`.\n","sig":null,"attributes":[{"value":"/ Extension trait for `LocalSpawn`.","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\task\\spawn.rs","byte_start":549730,"byte_end":549767,"line_start":98,"line_end":98,"column_start":1,"column_end":38}}]},{"kind":"Method","id":{"krate":0,"index":7849},"span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\task\\spawn.rs","byte_start":550834,"byte_end":550845,"line_start":126,"line_end":126,"column_start":8,"column_end":19},"name":"spawn_local","qualname":"::task::spawn::LocalSpawnExt::spawn_local","value":"pub fn spawn_local<Fut>(&Self, Fut) -> Result<(), SpawnError> where\nFut: Future<Output = ()> + 'static","parent":{"krate":0,"index":7848},"children":[],"decl_id":null,"docs":" Spawns a task that polls the given future with output `()` to\n completion.","sig":null,"attributes":[{"value":"/ Spawns a task that polls the given future with output `()` to","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\task\\spawn.rs","byte_start":549810,"byte_end":549875,"line_start":100,"line_end":100,"column_start":5,"column_end":70}},{"value":"/ completion.","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\task\\spawn.rs","byte_start":549880,"byte_end":549895,"line_start":101,"line_end":101,"column_start":5,"column_end":20}},{"value":"/","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\task\\spawn.rs","byte_start":549900,"byte_end":549903,"line_start":102,"line_end":102,"column_start":5,"column_end":8}},{"value":"/ This method returns a [`Result`] that contains a [`SpawnError`] if","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\task\\spawn.rs","byte_start":549908,"byte_end":549978,"line_start":103,"line_end":103,"column_start":5,"column_end":75}},{"value":"/ spawning fails.","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\task\\spawn.rs","byte_start":549983,"byte_end":550002,"line_start":104,"line_end":104,"column_start":5,"column_end":24}},{"value":"/","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\task\\spawn.rs","byte_start":550007,"byte_end":550010,"line_start":105,"line_end":105,"column_start":5,"column_end":8}},{"value":"/ You can use [`spawn_with_handle`](SpawnExt::spawn_with_handle) if","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\task\\spawn.rs","byte_start":550015,"byte_end":550084,"line_start":106,"line_end":106,"column_start":5,"column_end":74}},{"value":"/ you want to spawn a future with output other than `()` or if you want","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\task\\spawn.rs","byte_start":550089,"byte_end":550162,"line_start":107,"line_end":107,"column_start":5,"column_end":78}},{"value":"/ to be able to await its completion.","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\task\\spawn.rs","byte_start":550167,"byte_end":550206,"line_start":108,"line_end":108,"column_start":5,"column_end":44}},{"value":"/","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\task\\spawn.rs","byte_start":550211,"byte_end":550214,"line_start":109,"line_end":109,"column_start":5,"column_end":8}},{"value":"/ Note this method will eventually be replaced with the upcoming","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\task\\spawn.rs","byte_start":550219,"byte_end":550285,"line_start":110,"line_end":110,"column_start":5,"column_end":71}},{"value":"/ `Spawn::spawn` method which will take a `dyn Future` as input.","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\task\\spawn.rs","byte_start":550290,"byte_end":550356,"line_start":111,"line_end":111,"column_start":5,"column_end":71}},{"value":"/ Technical limitations prevent `Spawn::spawn` from being implemented","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\task\\spawn.rs","byte_start":550361,"byte_end":550432,"line_start":112,"line_end":112,"column_start":5,"column_end":76}},{"value":"/ today. Feel free to use this method in the meantime.","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\task\\spawn.rs","byte_start":550437,"byte_end":550493,"line_start":113,"line_end":113,"column_start":5,"column_end":61}},{"value":"/","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\task\\spawn.rs","byte_start":550498,"byte_end":550501,"line_start":114,"line_end":114,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\task\\spawn.rs","byte_start":550506,"byte_end":550513,"line_start":115,"line_end":115,"column_start":5,"column_end":12}},{"value":"/ use futures::executor::LocalPool;","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\task\\spawn.rs","byte_start":550518,"byte_end":550555,"line_start":116,"line_end":116,"column_start":5,"column_end":42}},{"value":"/ use futures::task::LocalSpawnExt;","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\task\\spawn.rs","byte_start":550560,"byte_end":550597,"line_start":117,"line_end":117,"column_start":5,"column_end":42}},{"value":"/","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\task\\spawn.rs","byte_start":550602,"byte_end":550605,"line_start":118,"line_end":118,"column_start":5,"column_end":8}},{"value":"/ let executor = LocalPool::new();","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\task\\spawn.rs","byte_start":550610,"byte_end":550646,"line_start":119,"line_end":119,"column_start":5,"column_end":41}},{"value":"/ let spawner = executor.spawner();","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\task\\spawn.rs","byte_start":550651,"byte_end":550688,"line_start":120,"line_end":120,"column_start":5,"column_end":42}},{"value":"/","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\task\\spawn.rs","byte_start":550693,"byte_end":550696,"line_start":121,"line_end":121,"column_start":5,"column_end":8}},{"value":"/ let future = async { /* ... */ };","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\task\\spawn.rs","byte_start":550701,"byte_end":550738,"line_start":122,"line_end":122,"column_start":5,"column_end":42}},{"value":"/ spawner.spawn_local(future).unwrap();","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\task\\spawn.rs","byte_start":550743,"byte_end":550784,"line_start":123,"line_end":123,"column_start":5,"column_end":46}},{"value":"/ ```","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\task\\spawn.rs","byte_start":550789,"byte_end":550796,"line_start":124,"line_end":124,"column_start":5,"column_end":12}},{"value":"cfg(feature = \"alloc\")","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\task\\spawn.rs","byte_start":550801,"byte_end":550826,"line_start":125,"line_end":125,"column_start":5,"column_end":30}}]},{"kind":"Mod","id":{"krate":0,"index":7858},"span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\never.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"never","qualname":"::never","value":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\never.rs","parent":null,"children":[{"krate":0,"index":7859}],"decl_id":null,"docs":" This module contains the `Never` type.","sig":null,"attributes":[{"value":"/ This module contains the `Never` type.","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\never.rs","byte_start":552335,"byte_end":552377,"line_start":1,"line_end":1,"column_start":1,"column_end":43}},{"value":"/","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\never.rs","byte_start":552378,"byte_end":552381,"line_start":2,"line_end":2,"column_start":1,"column_end":4}},{"value":"/ Values of this type can never be created and will never exist.","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\never.rs","byte_start":552382,"byte_end":552448,"line_start":3,"line_end":3,"column_start":1,"column_end":67}}]},{"kind":"Type","id":{"krate":0,"index":7859},"span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\never.rs","byte_start":553085,"byte_end":553090,"line_start":18,"line_end":18,"column_start":10,"column_end":15},"name":"Never","qualname":"::never::Never","value":"core::convert::Infallible","parent":null,"children":[],"decl_id":null,"docs":" A type with no possible values.","sig":null,"attributes":[{"value":"/ A type with no possible values.","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\never.rs","byte_start":552450,"byte_end":552485,"line_start":5,"line_end":5,"column_start":1,"column_end":36}},{"value":"/","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\never.rs","byte_start":552486,"byte_end":552489,"line_start":6,"line_end":6,"column_start":1,"column_end":4}},{"value":"/ This is used to indicate values which can never be created, such as the","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\never.rs","byte_start":552490,"byte_end":552565,"line_start":7,"line_end":7,"column_start":1,"column_end":76}},{"value":"/ error type of infallible futures.","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\never.rs","byte_start":552566,"byte_end":552603,"line_start":8,"line_end":8,"column_start":1,"column_end":38}},{"value":"/","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\never.rs","byte_start":552604,"byte_end":552607,"line_start":9,"line_end":9,"column_start":1,"column_end":4}},{"value":"/ This type is a stable equivalent to the `!` type from `std`.","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\never.rs","byte_start":552608,"byte_end":552672,"line_start":10,"line_end":10,"column_start":1,"column_end":65}},{"value":"/","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\never.rs","byte_start":552673,"byte_end":552676,"line_start":11,"line_end":11,"column_start":1,"column_end":4}},{"value":"/ This is currently an alias for [`std::convert::Infallible`], but in","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\never.rs","byte_start":552677,"byte_end":552748,"line_start":12,"line_end":12,"column_start":1,"column_end":72}},{"value":"/ the future it may be an alias for [`!`][never].","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\never.rs","byte_start":552749,"byte_end":552800,"line_start":13,"line_end":13,"column_start":1,"column_end":52}},{"value":"/ See [\"Future compatibility\" section of `std::convert::Infallible`][infallible] for more.","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\never.rs","byte_start":552801,"byte_end":552893,"line_start":14,"line_end":14,"column_start":1,"column_end":93}},{"value":"/","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\never.rs","byte_start":552894,"byte_end":552897,"line_start":15,"line_end":15,"column_start":1,"column_end":4}},{"value":"/ [never]: https://doc.rust-lang.org/nightly/std/primitive.never.html","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\never.rs","byte_start":552898,"byte_end":552969,"line_start":16,"line_end":16,"column_start":1,"column_end":72}},{"value":"/ [infallible]: https://doc.rust-lang.org/nightly/std/convert/enum.Infallible.html#future-compatibility","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\never.rs","byte_start":552970,"byte_end":553075,"line_start":17,"line_end":17,"column_start":1,"column_end":106}}]},{"kind":"Mod","id":{"krate":0,"index":7860},"span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\io\\mod.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"io","qualname":"::io","value":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\io\\mod.rs","parent":null,"children":[{"krate":0,"index":7861},{"krate":0,"index":7864},{"krate":0,"index":7867},{"krate":0,"index":7868},{"krate":0,"index":7871},{"krate":0,"index":7874},{"krate":0,"index":7875},{"krate":0,"index":7878},{"krate":0,"index":7881},{"krate":0,"index":7884},{"krate":0,"index":7887},{"krate":0,"index":7890},{"krate":0,"index":7893},{"krate":0,"index":7894},{"krate":0,"index":7897},{"krate":0,"index":7900},{"krate":0,"index":7903},{"krate":0,"index":7906},{"krate":0,"index":7907},{"krate":0,"index":7909},{"krate":0,"index":7996},{"krate":0,"index":7999},{"krate":0,"index":8090},{"krate":0,"index":8091},{"krate":0,"index":8094},{"krate":0,"index":8097},{"krate":0,"index":8178},{"krate":0,"index":8181},{"krate":0,"index":8229},{"krate":0,"index":8232},{"krate":0,"index":8288},{"krate":0,"index":8291},{"krate":0,"index":8321},{"krate":0,"index":8324},{"krate":0,"index":8369},{"krate":0,"index":8370},{"krate":0,"index":8373},{"krate":0,"index":8376},{"krate":0,"index":8414},{"krate":0,"index":8415},{"krate":0,"index":8418},{"krate":0,"index":8421},{"krate":0,"index":8481},{"krate":0,"index":8484},{"krate":0,"index":8518},{"krate":0,"index":8519},{"krate":0,"index":8522},{"krate":0,"index":8525},{"krate":0,"index":8556},{"krate":0,"index":8559},{"krate":0,"index":8589},{"krate":0,"index":8592},{"krate":0,"index":8631},{"krate":0,"index":8634},{"krate":0,"index":8673},{"krate":0,"index":8676},{"krate":0,"index":8706},{"krate":0,"index":8709},{"krate":0,"index":8743},{"krate":0,"index":8746},{"krate":0,"index":8782},{"krate":0,"index":8785},{"krate":0,"index":8830},{"krate":0,"index":8833},{"krate":0,"index":8877},{"krate":0,"index":8880},{"krate":0,"index":8929},{"krate":0,"index":8932},{"krate":0,"index":8970},{"krate":0,"index":8973},{"krate":0,"index":9008},{"krate":0,"index":9009},{"krate":0,"index":9012},{"krate":0,"index":9015},{"krate":0,"index":9049},{"krate":0,"index":9052},{"krate":0,"index":9087},{"krate":0,"index":9088},{"krate":0,"index":9091},{"krate":0,"index":9094},{"krate":0,"index":9173},{"krate":0,"index":9174},{"krate":0,"index":9177},{"krate":0,"index":9178},{"krate":0,"index":9180},{"krate":0,"index":9183},{"krate":0,"index":9226},{"krate":0,"index":9229},{"krate":0,"index":9256},{"krate":0,"index":9259},{"krate":0,"index":9289},{"krate":0,"index":9292},{"krate":0,"index":9326},{"krate":0,"index":9329},{"krate":0,"index":9365},{"krate":0,"index":9368},{"krate":0,"index":9383},{"krate":0,"index":9385},{"krate":0,"index":9396},{"krate":0,"index":9398},{"krate":0,"index":9401},{"krate":0,"index":9403},{"krate":0,"index":9411},{"krate":0,"index":9413},{"krate":0,"index":9415}],"decl_id":null,"docs":" Asynchronous I/O.","sig":null,"attributes":[{"value":"cfg(feature = \"io\")","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\lib.rs","byte_start":11117,"byte_end":11139,"line_start":317,"line_end":317,"column_start":1,"column_end":23}},{"value":"cfg(feature = \"std\")","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\lib.rs","byte_start":11186,"byte_end":11209,"line_start":319,"line_end":319,"column_start":1,"column_end":24}},{"value":"/ Asynchronous I/O.","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\io\\mod.rs","byte_start":553121,"byte_end":553142,"line_start":1,"line_end":1,"column_start":1,"column_end":22}},{"value":"/","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\io\\mod.rs","byte_start":553143,"byte_end":553146,"line_start":2,"line_end":2,"column_start":1,"column_end":4}},{"value":"/ This module is the asynchronous version of `std::io`. It defines four","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\io\\mod.rs","byte_start":553147,"byte_end":553220,"line_start":3,"line_end":3,"column_start":1,"column_end":74}},{"value":"/ traits, [`AsyncRead`], [`AsyncWrite`], [`AsyncSeek`], and [`AsyncBufRead`],","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\io\\mod.rs","byte_start":553221,"byte_end":553300,"line_start":4,"line_end":4,"column_start":1,"column_end":80}},{"value":"/ which mirror the `Read`, `Write`, `Seek`, and `BufRead` traits of the","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\io\\mod.rs","byte_start":553301,"byte_end":553374,"line_start":5,"line_end":5,"column_start":1,"column_end":74}},{"value":"/ standard library. However, these traits integrate with the asynchronous","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\io\\mod.rs","byte_start":553375,"byte_end":553450,"line_start":6,"line_end":6,"column_start":1,"column_end":76}},{"value":"/ task system, so that if an I/O object isn't ready for reading (or writing),","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\io\\mod.rs","byte_start":553451,"byte_end":553530,"line_start":7,"line_end":7,"column_start":1,"column_end":80}},{"value":"/ the thread is not blocked, and instead the current task is queued to be","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\io\\mod.rs","byte_start":553531,"byte_end":553606,"line_start":8,"line_end":8,"column_start":1,"column_end":76}},{"value":"/ woken when I/O is ready.","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\io\\mod.rs","byte_start":553607,"byte_end":553635,"line_start":9,"line_end":9,"column_start":1,"column_end":29}},{"value":"/","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\io\\mod.rs","byte_start":553636,"byte_end":553639,"line_start":10,"line_end":10,"column_start":1,"column_end":4}},{"value":"/ In addition, the [`AsyncReadExt`], [`AsyncWriteExt`], [`AsyncSeekExt`], and","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\io\\mod.rs","byte_start":553640,"byte_end":553719,"line_start":11,"line_end":11,"column_start":1,"column_end":80}},{"value":"/ [`AsyncBufReadExt`] extension traits offer a variety of useful combinators","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\io\\mod.rs","byte_start":553720,"byte_end":553798,"line_start":12,"line_end":12,"column_start":1,"column_end":79}},{"value":"/ for operating with asynchronous I/O objects, including ways to work with","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\io\\mod.rs","byte_start":553799,"byte_end":553875,"line_start":13,"line_end":13,"column_start":1,"column_end":77}},{"value":"/ them using futures, streams and sinks.","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\io\\mod.rs","byte_start":553876,"byte_end":553918,"line_start":14,"line_end":14,"column_start":1,"column_end":43}},{"value":"/","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\io\\mod.rs","byte_start":553919,"byte_end":553922,"line_start":15,"line_end":15,"column_start":1,"column_end":4}},{"value":"/ This module is only available when the `std` feature of this","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\io\\mod.rs","byte_start":553923,"byte_end":553987,"line_start":16,"line_end":16,"column_start":1,"column_end":65}},{"value":"/ library is activated, and it is activated by default.","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\io\\mod.rs","byte_start":553988,"byte_end":554045,"line_start":17,"line_end":17,"column_start":1,"column_end":58}}]},{"kind":"Struct","id":{"krate":0,"index":17421},"span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\io\\allow_std.rs","byte_start":581132,"byte_end":581142,"line_start":17,"line_end":17,"column_start":12,"column_end":22},"name":"AllowStdIo","qualname":"::io::allow_std::AllowStdIo","value":"","parent":null,"children":[],"decl_id":null,"docs":" A simple wrapper type which allows types which implement only\n implement `std::io::Read` or `std::io::Write`\n to be used in contexts which expect an `AsyncRead` or `AsyncWrite`.","sig":null,"attributes":[{"value":"/ A simple wrapper type which allows types which implement only","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\io\\allow_std.rs","byte_start":580483,"byte_end":580548,"line_start":6,"line_end":6,"column_start":1,"column_end":66}},{"value":"/ implement `std::io::Read` or `std::io::Write`","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\io\\allow_std.rs","byte_start":580549,"byte_end":580598,"line_start":7,"line_end":7,"column_start":1,"column_end":50}},{"value":"/ to be used in contexts which expect an `AsyncRead` or `AsyncWrite`.","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\io\\allow_std.rs","byte_start":580599,"byte_end":580670,"line_start":8,"line_end":8,"column_start":1,"column_end":72}},{"value":"/","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\io\\allow_std.rs","byte_start":580671,"byte_end":580674,"line_start":9,"line_end":9,"column_start":1,"column_end":4}},{"value":"/ If these types issue an error with the kind `io::ErrorKind::WouldBlock`,","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\io\\allow_std.rs","byte_start":580675,"byte_end":580751,"line_start":10,"line_end":10,"column_start":1,"column_end":77}},{"value":"/ it is expected that they will notify the current task on readiness.","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\io\\allow_std.rs","byte_start":580752,"byte_end":580823,"line_start":11,"line_end":11,"column_start":1,"column_end":72}},{"value":"/ Synchronous `std` types should not issue errors of this kind and","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\io\\allow_std.rs","byte_start":580824,"byte_end":580892,"line_start":12,"line_end":12,"column_start":1,"column_end":69}},{"value":"/ are safe to use in this context. However, using these types with","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\io\\allow_std.rs","byte_start":580893,"byte_end":580961,"line_start":13,"line_end":13,"column_start":1,"column_end":69}},{"value":"/ `AllowStdIo` will cause the event loop to block, so they should be used","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\io\\allow_std.rs","byte_start":580962,"byte_end":581037,"line_start":14,"line_end":14,"column_start":1,"column_end":76}},{"value":"/ with care.","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\io\\allow_std.rs","byte_start":581038,"byte_end":581052,"line_start":15,"line_end":15,"column_start":1,"column_end":15}}]},{"kind":"Method","id":{"krate":0,"index":7954},"span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\io\\allow_std.rs","byte_start":581707,"byte_end":581710,"line_start":41,"line_end":41,"column_start":12,"column_end":15},"name":"new","qualname":"<AllowStdIo<T>>::new","value":"pub fn new(T) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Creates a new `AllowStdIo` from an existing IO object.\n","sig":null,"attributes":[{"value":"/ Creates a new `AllowStdIo` from an existing IO object.","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\io\\allow_std.rs","byte_start":581637,"byte_end":581695,"line_start":40,"line_end":40,"column_start":5,"column_end":63}}]},{"kind":"Method","id":{"krate":0,"index":7955},"span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\io\\allow_std.rs","byte_start":581819,"byte_end":581826,"line_start":46,"line_end":46,"column_start":12,"column_end":19},"name":"get_ref","qualname":"<AllowStdIo<T>>::get_ref","value":"pub fn get_ref(&Self) -> &T","parent":null,"children":[],"decl_id":null,"docs":" Returns a reference to the contained IO object.\n","sig":null,"attributes":[{"value":"/ Returns a reference to the contained IO object.","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\io\\allow_std.rs","byte_start":581756,"byte_end":581807,"line_start":45,"line_end":45,"column_start":5,"column_end":56}}]},{"kind":"Method","id":{"krate":0,"index":7956},"span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\io\\allow_std.rs","byte_start":581940,"byte_end":581947,"line_start":51,"line_end":51,"column_start":12,"column_end":19},"name":"get_mut","qualname":"<AllowStdIo<T>>::get_mut","value":"pub fn get_mut(&mut Self) -> &mut T","parent":null,"children":[],"decl_id":null,"docs":" Returns a mutable reference to the contained IO object.\n","sig":null,"attributes":[{"value":"/ Returns a mutable reference to the contained IO object.","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\io\\allow_std.rs","byte_start":581869,"byte_end":581928,"line_start":50,"line_end":50,"column_start":5,"column_end":64}}]},{"kind":"Method","id":{"krate":0,"index":7957},"span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\io\\allow_std.rs","byte_start":582068,"byte_end":582078,"line_start":56,"line_end":56,"column_start":12,"column_end":22},"name":"into_inner","qualname":"<AllowStdIo<T>>::into_inner","value":"pub fn into_inner(Self) -> T","parent":null,"children":[],"decl_id":null,"docs":" Consumes self and returns the contained IO object.\n","sig":null,"attributes":[{"value":"/ Consumes self and returns the contained IO object.","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\io\\allow_std.rs","byte_start":582002,"byte_end":582056,"line_start":55,"line_end":55,"column_start":5,"column_end":59}}]},{"kind":"Struct","id":{"krate":0,"index":17454},"span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\io\\buf_reader.rs","byte_start":586944,"byte_end":586953,"line_start":31,"line_end":31,"column_start":16,"column_end":25},"name":"BufReader","qualname":"::io::buf_reader::BufReader","value":"BufReader {  }","parent":null,"children":[{"krate":0,"index":17456},{"krate":0,"index":17457},{"krate":0,"index":17458},{"krate":0,"index":17459}],"decl_id":null,"docs":" The `BufReader` struct adds buffering to any reader.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":8057},"span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\io\\buf_reader.rs","byte_start":587248,"byte_end":587251,"line_start":43,"line_end":43,"column_start":12,"column_end":15},"name":"new","qualname":"<BufReader<R>>::new","value":"pub fn new(R) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Creates a new `BufReader` with a default buffer capacity. The default is currently 8 KB,\n but may change in the future.\n","sig":null,"attributes":[{"value":"/ Creates a new `BufReader` with a default buffer capacity. The default is currently 8 KB,","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\io\\buf_reader.rs","byte_start":587106,"byte_end":587198,"line_start":41,"line_end":41,"column_start":5,"column_end":97}},{"value":"/ but may change in the future.","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\io\\buf_reader.rs","byte_start":587203,"byte_end":587236,"line_start":42,"line_end":42,"column_start":5,"column_end":38}}]},{"kind":"Method","id":{"krate":0,"index":8058},"span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\io\\buf_reader.rs","byte_start":587413,"byte_end":587426,"line_start":48,"line_end":48,"column_start":12,"column_end":25},"name":"with_capacity","qualname":"<BufReader<R>>::with_capacity","value":"pub fn with_capacity(usize, R) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Creates a new `BufReader` with the specified buffer capacity.\n","sig":null,"attributes":[{"value":"/ Creates a new `BufReader` with the specified buffer capacity.","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\io\\buf_reader.rs","byte_start":587336,"byte_end":587401,"line_start":47,"line_end":47,"column_start":5,"column_end":70}}]},{"kind":"Method","id":{"krate":0,"index":8059},"span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\io\\buf_reader.rs","byte_start":587932,"byte_end":587938,"line_start":62,"line_end":62,"column_start":12,"column_end":18},"name":"buffer","qualname":"<BufReader<R>>::buffer","value":"pub fn buffer(&Self) -> &[u8]","parent":null,"children":[],"decl_id":null,"docs":" Returns a reference to the internally buffered data.","sig":null,"attributes":[{"value":"/ Returns a reference to the internally buffered data.","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\io\\buf_reader.rs","byte_start":587772,"byte_end":587828,"line_start":59,"line_end":59,"column_start":5,"column_end":61}},{"value":"/","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\io\\buf_reader.rs","byte_start":587833,"byte_end":587836,"line_start":60,"line_end":60,"column_start":5,"column_end":8}},{"value":"/ Unlike `fill_buf`, this will not attempt to fill the buffer if it is empty.","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\io\\buf_reader.rs","byte_start":587841,"byte_end":587920,"line_start":61,"line_end":61,"column_start":5,"column_end":84}}]},{"kind":"Method","id":{"krate":0,"index":8063},"span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\io\\buf_reader.rs","byte_start":588587,"byte_end":588600,"line_start":80,"line_end":80,"column_start":12,"column_end":25},"name":"seek_relative","qualname":"<BufReader<R>>::seek_relative","value":"pub fn seek_relative(Pin<&mut Self>, i64) -> SeeKRelative<, R>","parent":null,"children":[],"decl_id":null,"docs":" Seeks relative to the current position. If the new position lies within the buffer,\n the buffer will not be flushed, allowing for more efficient seeks.\n This method does not return the location of the underlying reader, so the caller\n must track this information themselves if it is required.\n","sig":null,"attributes":[{"value":"/ Seeks relative to the current position. If the new position lies within the buffer,","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\io\\buf_reader.rs","byte_start":588258,"byte_end":588345,"line_start":76,"line_end":76,"column_start":5,"column_end":92}},{"value":"/ the buffer will not be flushed, allowing for more efficient seeks.","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\io\\buf_reader.rs","byte_start":588350,"byte_end":588420,"line_start":77,"line_end":77,"column_start":5,"column_end":75}},{"value":"/ This method does not return the location of the underlying reader, so the caller","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\io\\buf_reader.rs","byte_start":588425,"byte_end":588509,"line_start":78,"line_end":78,"column_start":5,"column_end":89}},{"value":"/ must track this information themselves if it is required.","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\io\\buf_reader.rs","byte_start":588514,"byte_end":588575,"line_start":79,"line_end":79,"column_start":5,"column_end":66}}]},{"kind":"Method","id":{"krate":0,"index":8064},"span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\io\\buf_reader.rs","byte_start":589070,"byte_end":589088,"line_start":88,"line_end":88,"column_start":12,"column_end":30},"name":"poll_seek_relative","qualname":"<BufReader<R>>::poll_seek_relative","value":"pub fn poll_seek_relative(Pin<&mut Self>, &mut Context, i64)\n-> Poll<io::Result<()>>","parent":null,"children":[],"decl_id":null,"docs":" Attempts to seek relative to the current position. If the new position lies within the buffer,\n the buffer will not be flushed, allowing for more efficient seeks.\n This method does not return the location of the underlying reader, so the caller\n must track this information themselves if it is required.\n","sig":null,"attributes":[{"value":"/ Attempts to seek relative to the current position. If the new position lies within the buffer,","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\io\\buf_reader.rs","byte_start":588730,"byte_end":588828,"line_start":84,"line_end":84,"column_start":5,"column_end":103}},{"value":"/ the buffer will not be flushed, allowing for more efficient seeks.","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\io\\buf_reader.rs","byte_start":588833,"byte_end":588903,"line_start":85,"line_end":85,"column_start":5,"column_end":75}},{"value":"/ This method does not return the location of the underlying reader, so the caller","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\io\\buf_reader.rs","byte_start":588908,"byte_end":588992,"line_start":86,"line_end":86,"column_start":5,"column_end":89}},{"value":"/ must track this information themselves if it is required.","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\io\\buf_reader.rs","byte_start":588997,"byte_end":589058,"line_start":87,"line_end":87,"column_start":5,"column_end":66}}]},{"kind":"Struct","id":{"krate":0,"index":17507},"span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\io\\buf_reader.rs","byte_start":595284,"byte_end":595296,"line_start":238,"line_end":238,"column_start":12,"column_end":24},"name":"SeeKRelative","qualname":"::io::buf_reader::SeeKRelative","value":"SeeKRelative {  }","parent":null,"children":[{"krate":0,"index":17510},{"krate":0,"index":17511},{"krate":0,"index":17512}],"decl_id":null,"docs":" Future for the [`BufReader::seek_relative`](self::BufReader::seek_relative) method.\n","sig":null,"attributes":[{"value":"/ Future for the [`BufReader::seek_relative`](self::BufReader::seek_relative) method.","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\io\\buf_reader.rs","byte_start":595119,"byte_end":595206,"line_start":235,"line_end":235,"column_start":1,"column_end":88}},{"value":"must_use = \"futures do nothing unless polled\"","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\io\\buf_reader.rs","byte_start":595224,"byte_end":595272,"line_start":237,"line_end":237,"column_start":1,"column_end":49}}]},{"kind":"Struct","id":{"krate":0,"index":17517},"span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\io\\buf_writer.rs","byte_start":597371,"byte_end":597380,"line_start":33,"line_end":33,"column_start":16,"column_end":25},"name":"BufWriter","qualname":"::io::buf_writer::BufWriter","value":"BufWriter {  }","parent":null,"children":[{"krate":0,"index":17519},{"krate":0,"index":17520},{"krate":0,"index":17521}],"decl_id":null,"docs":" Wraps a writer and buffers its output.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":8151},"span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\io\\buf_writer.rs","byte_start":597655,"byte_end":597658,"line_start":44,"line_end":44,"column_start":12,"column_end":15},"name":"new","qualname":"<BufWriter<W>>::new","value":"pub fn new(W) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Creates a new `BufWriter` with a default buffer capacity. The default is currently 8 KB,\n but may change in the future.\n","sig":null,"attributes":[{"value":"/ Creates a new `BufWriter` with a default buffer capacity. The default is currently 8 KB,","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\io\\buf_writer.rs","byte_start":597513,"byte_end":597605,"line_start":42,"line_end":42,"column_start":5,"column_end":97}},{"value":"/ but may change in the future.","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\io\\buf_writer.rs","byte_start":597610,"byte_end":597643,"line_start":43,"line_end":43,"column_start":5,"column_end":38}}]},{"kind":"Method","id":{"krate":0,"index":8152},"span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\io\\buf_writer.rs","byte_start":597820,"byte_end":597833,"line_start":49,"line_end":49,"column_start":12,"column_end":25},"name":"with_capacity","qualname":"<BufWriter<W>>::with_capacity","value":"pub fn with_capacity(usize, W) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Creates a new `BufWriter` with the specified buffer capacity.\n","sig":null,"attributes":[{"value":"/ Creates a new `BufWriter` with the specified buffer capacity.","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\io\\buf_writer.rs","byte_start":597743,"byte_end":597808,"line_start":48,"line_end":48,"column_start":5,"column_end":70}}]},{"kind":"Method","id":{"krate":0,"index":8154},"span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\io\\buf_writer.rs","byte_start":598956,"byte_end":598962,"line_start":84,"line_end":84,"column_start":12,"column_end":18},"name":"buffer","qualname":"<BufWriter<W>>::buffer","value":"pub fn buffer(&Self) -> &[u8]","parent":null,"children":[],"decl_id":null,"docs":" Returns a reference to the internally buffered data.\n","sig":null,"attributes":[{"value":"/ Returns a reference to the internally buffered data.","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\io\\buf_writer.rs","byte_start":598888,"byte_end":598944,"line_start":83,"line_end":83,"column_start":5,"column_end":61}}]},{"kind":"Struct","id":{"krate":0,"index":17566},"span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\io\\line_writer.rs","byte_start":604051,"byte_end":604061,"line_start":19,"line_end":19,"column_start":12,"column_end":22},"name":"LineWriter","qualname":"::io::line_writer::LineWriter","value":"LineWriter {  }","parent":null,"children":[{"krate":0,"index":17568}],"decl_id":null,"docs":" Wrap a writer, like [`BufWriter`] does, but prioritizes buffering lines","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":8212},"span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\io\\line_writer.rs","byte_start":604316,"byte_end":604319,"line_start":28,"line_end":28,"column_start":12,"column_end":15},"name":"new","qualname":"<LineWriter<W>>::new","value":"pub fn new(W) -> LineWriter<W>","parent":null,"children":[],"decl_id":null,"docs":" Create a new `LineWriter` with default buffer capacity. The default is currently 1KB\n which was taken from `std::io::LineWriter`\n","sig":null,"attributes":[{"value":"/ Create a new `LineWriter` with default buffer capacity. The default is currently 1KB","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\io\\line_writer.rs","byte_start":604165,"byte_end":604253,"line_start":26,"line_end":26,"column_start":5,"column_end":93}},{"value":"/ which was taken from `std::io::LineWriter`","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\io\\line_writer.rs","byte_start":604258,"byte_end":604304,"line_start":27,"line_end":27,"column_start":5,"column_end":51}}]},{"kind":"Method","id":{"krate":0,"index":8213},"span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\io\\line_writer.rs","byte_start":604485,"byte_end":604498,"line_start":33,"line_end":33,"column_start":12,"column_end":25},"name":"with_capacity","qualname":"<LineWriter<W>>::with_capacity","value":"pub fn with_capacity(usize, W) -> LineWriter<W>","parent":null,"children":[],"decl_id":null,"docs":" Creates a new `LineWriter` with the specified buffer capacity.\n","sig":null,"attributes":[{"value":"/ Creates a new `LineWriter` with the specified buffer capacity.","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\io\\line_writer.rs","byte_start":604407,"byte_end":604473,"line_start":32,"line_end":32,"column_start":5,"column_end":71}}]},{"kind":"Method","id":{"krate":0,"index":8215},"span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\io\\line_writer.rs","byte_start":605072,"byte_end":605078,"line_start":47,"line_end":47,"column_start":12,"column_end":18},"name":"buffer","qualname":"<LineWriter<W>>::buffer","value":"pub fn buffer(&Self) -> &[u8]","parent":null,"children":[],"decl_id":null,"docs":" Returns a reference to `buf_writer`'s internally buffered data.\n","sig":null,"attributes":[{"value":"/ Returns a reference to `buf_writer`'s internally buffered data.","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\io\\line_writer.rs","byte_start":604993,"byte_end":605060,"line_start":46,"line_end":46,"column_start":5,"column_end":72}}]},{"kind":"Method","id":{"krate":0,"index":8216},"span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\io\\line_writer.rs","byte_start":605256,"byte_end":605263,"line_start":53,"line_end":53,"column_start":12,"column_end":19},"name":"get_ref","qualname":"<LineWriter<W>>::get_ref","value":"pub fn get_ref(&Self) -> &W","parent":null,"children":[],"decl_id":null,"docs":" Acquires a reference to the underlying sink or stream that this combinator is\n pulling from.\n","sig":null,"attributes":[{"value":"/ Acquires a reference to the underlying sink or stream that this combinator is","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\io\\line_writer.rs","byte_start":605141,"byte_end":605222,"line_start":51,"line_end":51,"column_start":5,"column_end":86}},{"value":"/ pulling from.","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\io\\line_writer.rs","byte_start":605227,"byte_end":605244,"line_start":52,"line_end":52,"column_start":5,"column_end":22}}]},{"kind":"Struct","id":{"krate":0,"index":17602},"span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\io\\chain.rs","byte_start":609100,"byte_end":609105,"line_start":12,"line_end":12,"column_start":16,"column_end":21},"name":"Chain","qualname":"::io::chain::Chain","value":"Chain {  }","parent":null,"children":[{"krate":0,"index":17605},{"krate":0,"index":17606},{"krate":0,"index":17607}],"decl_id":null,"docs":" Reader for the [`chain`](super::AsyncReadExt::chain) method.\n","sig":null,"attributes":[{"value":"must_use = \"readers do nothing unless polled\"","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pin-project-lite-0.2.9\\src\\lib.rs","byte_start":14239710,"byte_end":14239719,"line_start":633,"line_end":633,"column_start":11,"column_end":20}}]},{"kind":"Method","id":{"krate":0,"index":8269},"span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\io\\chain.rs","byte_start":609471,"byte_end":609478,"line_start":31,"line_end":31,"column_start":12,"column_end":19},"name":"get_ref","qualname":"<Chain<T, U>>::get_ref","value":"pub fn get_ref(&Self) -> (&T, &U)","parent":null,"children":[],"decl_id":null,"docs":" Gets references to the underlying readers in this `Chain`.\n","sig":null,"attributes":[{"value":"/ Gets references to the underlying readers in this `Chain`.","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\io\\chain.rs","byte_start":609397,"byte_end":609459,"line_start":30,"line_end":30,"column_start":5,"column_end":67}}]},{"kind":"Method","id":{"krate":0,"index":8270},"span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\io\\chain.rs","byte_start":609810,"byte_end":609817,"line_start":40,"line_end":40,"column_start":12,"column_end":19},"name":"get_mut","qualname":"<Chain<T, U>>::get_mut","value":"pub fn get_mut(&mut Self) -> (&mut T, &mut U)","parent":null,"children":[],"decl_id":null,"docs":" Gets mutable references to the underlying readers in this `Chain`.","sig":null,"attributes":[{"value":"/ Gets mutable references to the underlying readers in this `Chain`.","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\io\\chain.rs","byte_start":609547,"byte_end":609617,"line_start":35,"line_end":35,"column_start":5,"column_end":75}},{"value":"/","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\io\\chain.rs","byte_start":609622,"byte_end":609625,"line_start":36,"line_end":36,"column_start":5,"column_end":8}},{"value":"/ Care should be taken to avoid modifying the internal I/O state of the","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\io\\chain.rs","byte_start":609630,"byte_end":609703,"line_start":37,"line_end":37,"column_start":5,"column_end":78}},{"value":"/ underlying readers as doing so may corrupt the internal state of this","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\io\\chain.rs","byte_start":609708,"byte_end":609781,"line_start":38,"line_end":38,"column_start":5,"column_end":78}},{"value":"/ `Chain`.","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\io\\chain.rs","byte_start":609786,"byte_end":609798,"line_start":39,"line_end":39,"column_start":5,"column_end":17}}]},{"kind":"Method","id":{"krate":0,"index":8271},"span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\io\\chain.rs","byte_start":610176,"byte_end":610187,"line_start":49,"line_end":49,"column_start":12,"column_end":23},"name":"get_pin_mut","qualname":"<Chain<T, U>>::get_pin_mut","value":"pub fn get_pin_mut(Pin<&mut Self>) -> (Pin<&mut T>, Pin<&mut U>)","parent":null,"children":[],"decl_id":null,"docs":" Gets pinned mutable references to the underlying readers in this `Chain`.","sig":null,"attributes":[{"value":"/ Gets pinned mutable references to the underlying readers in this `Chain`.","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\io\\chain.rs","byte_start":609906,"byte_end":609983,"line_start":44,"line_end":44,"column_start":5,"column_end":82}},{"value":"/","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\io\\chain.rs","byte_start":609988,"byte_end":609991,"line_start":45,"line_end":45,"column_start":5,"column_end":8}},{"value":"/ Care should be taken to avoid modifying the internal I/O state of the","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\io\\chain.rs","byte_start":609996,"byte_end":610069,"line_start":46,"line_end":46,"column_start":5,"column_end":78}},{"value":"/ underlying readers as doing so may corrupt the internal state of this","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\io\\chain.rs","byte_start":610074,"byte_end":610147,"line_start":47,"line_end":47,"column_start":5,"column_end":78}},{"value":"/ `Chain`.","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\io\\chain.rs","byte_start":610152,"byte_end":610164,"line_start":48,"line_end":48,"column_start":5,"column_end":17}}]},{"kind":"Method","id":{"krate":0,"index":8272},"span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\io\\chain.rs","byte_start":610390,"byte_end":610400,"line_start":55,"line_end":55,"column_start":12,"column_end":22},"name":"into_inner","qualname":"<Chain<T, U>>::into_inner","value":"pub fn into_inner(Self) -> (T, U)","parent":null,"children":[],"decl_id":null,"docs":" Consumes the `Chain`, returning the wrapped readers.\n","sig":null,"attributes":[{"value":"/ Consumes the `Chain`, returning the wrapped readers.","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\io\\chain.rs","byte_start":610322,"byte_end":610378,"line_start":54,"line_end":54,"column_start":5,"column_end":61}}]},{"kind":"Struct","id":{"krate":0,"index":17651},"span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\io\\close.rs","byte_start":612930,"byte_end":612935,"line_start":10,"line_end":10,"column_start":12,"column_end":17},"name":"Close","qualname":"::io::close::Close","value":"Close {  }","parent":null,"children":[{"krate":0,"index":17654}],"decl_id":null,"docs":" Future for the [`close`](super::AsyncWriteExt::close) method.\n","sig":null,"attributes":[{"value":"/ Future for the [`close`](super::AsyncWriteExt::close) method.","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\io\\close.rs","byte_start":612768,"byte_end":612833,"line_start":7,"line_end":7,"column_start":1,"column_end":66}},{"value":"must_use = \"futures do nothing unless you `.await` or poll them\"","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\io\\close.rs","byte_start":612851,"byte_end":612918,"line_start":9,"line_end":9,"column_start":1,"column_end":68}}]},{"kind":"Function","id":{"krate":0,"index":8361},"span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\io\\copy.rs","byte_start":614488,"byte_end":614492,"line_start":34,"line_end":34,"column_start":8,"column_end":12},"name":"copy","qualname":"::io::copy::copy","value":"pub fn copy<R, W>(R, &mut W) -> Copy<, R, W> where R: AsyncRead,\nW: AsyncWrite + Unpin + ?Sized","parent":null,"children":[],"decl_id":null,"docs":" Creates a future which copies all the bytes from one object to another.","sig":null,"attributes":[{"value":"/ Creates a future which copies all the bytes from one object to another.","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\io\\copy.rs","byte_start":613639,"byte_end":613714,"line_start":9,"line_end":9,"column_start":1,"column_end":76}},{"value":"/","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\io\\copy.rs","byte_start":613715,"byte_end":613718,"line_start":10,"line_end":10,"column_start":1,"column_end":4}},{"value":"/ The returned future will copy all the bytes read from this `AsyncRead` into the","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\io\\copy.rs","byte_start":613719,"byte_end":613802,"line_start":11,"line_end":11,"column_start":1,"column_end":84}},{"value":"/ `writer` specified. This future will only complete once the `reader` has hit","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\io\\copy.rs","byte_start":613803,"byte_end":613883,"line_start":12,"line_end":12,"column_start":1,"column_end":81}},{"value":"/ EOF and all bytes have been written to and flushed from the `writer`","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\io\\copy.rs","byte_start":613884,"byte_end":613956,"line_start":13,"line_end":13,"column_start":1,"column_end":73}},{"value":"/ provided.","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\io\\copy.rs","byte_start":613957,"byte_end":613970,"line_start":14,"line_end":14,"column_start":1,"column_end":14}},{"value":"/","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\io\\copy.rs","byte_start":613971,"byte_end":613974,"line_start":15,"line_end":15,"column_start":1,"column_end":4}},{"value":"/ On success the number of bytes is returned.","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\io\\copy.rs","byte_start":613975,"byte_end":614022,"line_start":16,"line_end":16,"column_start":1,"column_end":48}},{"value":"/","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\io\\copy.rs","byte_start":614023,"byte_end":614026,"line_start":17,"line_end":17,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\io\\copy.rs","byte_start":614027,"byte_end":614041,"line_start":18,"line_end":18,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\io\\copy.rs","byte_start":614042,"byte_end":614045,"line_start":19,"line_end":19,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\io\\copy.rs","byte_start":614046,"byte_end":614053,"line_start":20,"line_end":20,"column_start":1,"column_end":8}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\io\\copy.rs","byte_start":614054,"byte_end":614095,"line_start":21,"line_end":21,"column_start":1,"column_end":42}},{"value":"/ use futures::io::{self, AsyncWriteExt, Cursor};","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\io\\copy.rs","byte_start":614096,"byte_end":614147,"line_start":22,"line_end":22,"column_start":1,"column_end":52}},{"value":"/","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\io\\copy.rs","byte_start":614148,"byte_end":614151,"line_start":23,"line_end":23,"column_start":1,"column_end":4}},{"value":"/ let reader = Cursor::new([1, 2, 3, 4]);","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\io\\copy.rs","byte_start":614152,"byte_end":614195,"line_start":24,"line_end":24,"column_start":1,"column_end":44}},{"value":"/ let mut writer = Cursor::new(vec![0u8; 5]);","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\io\\copy.rs","byte_start":614196,"byte_end":614243,"line_start":25,"line_end":25,"column_start":1,"column_end":48}},{"value":"/","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\io\\copy.rs","byte_start":614244,"byte_end":614247,"line_start":26,"line_end":26,"column_start":1,"column_end":4}},{"value":"/ let bytes = io::copy(reader, &mut writer).await?;","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\io\\copy.rs","byte_start":614248,"byte_end":614301,"line_start":27,"line_end":27,"column_start":1,"column_end":54}},{"value":"/ writer.close().await?;","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\io\\copy.rs","byte_start":614302,"byte_end":614328,"line_start":28,"line_end":28,"column_start":1,"column_end":27}},{"value":"/","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\io\\copy.rs","byte_start":614329,"byte_end":614332,"line_start":29,"line_end":29,"column_start":1,"column_end":4}},{"value":"/ assert_eq!(bytes, 4);","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\io\\copy.rs","byte_start":614333,"byte_end":614358,"line_start":30,"line_end":30,"column_start":1,"column_end":26}},{"value":"/ assert_eq!(writer.into_inner(), [1, 2, 3, 4, 0]);","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\io\\copy.rs","byte_start":614359,"byte_end":614412,"line_start":31,"line_end":31,"column_start":1,"column_end":54}},{"value":"/ # Ok::<(), Box<dyn std::error::Error>>(()) }).unwrap();","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\io\\copy.rs","byte_start":614413,"byte_end":614472,"line_start":32,"line_end":32,"column_start":1,"column_end":60}},{"value":"/ ```","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\io\\copy.rs","byte_start":614473,"byte_end":614480,"line_start":33,"line_end":33,"column_start":1,"column_end":8}}]},{"kind":"Struct","id":{"krate":0,"index":17659},"span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\io\\copy.rs","byte_start":614837,"byte_end":614841,"line_start":46,"line_end":46,"column_start":16,"column_end":20},"name":"Copy","qualname":"::io::copy::Copy","value":"Copy {  }","parent":null,"children":[{"krate":0,"index":17663}],"decl_id":null,"docs":" Future for the [`copy()`] function.\n","sig":null,"attributes":[{"value":"must_use = \"futures do nothing unless you `.await` or poll them\"","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pin-project-lite-0.2.9\\src\\lib.rs","byte_start":14239710,"byte_end":14239719,"line_start":633,"line_end":633,"column_start":11,"column_end":20}}]},{"kind":"Function","id":{"krate":0,"index":8406},"span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\io\\copy_buf.rs","byte_start":616241,"byte_end":616249,"line_start":34,"line_end":34,"column_start":8,"column_end":16},"name":"copy_buf","qualname":"::io::copy_buf::copy_buf","value":"pub fn copy_buf<R, W>(R, &mut W) -> CopyBuf<, R, W> where R: AsyncBufRead,\nW: AsyncWrite + Unpin + ?Sized","parent":null,"children":[],"decl_id":null,"docs":" Creates a future which copies all the bytes from one object to another.","sig":null,"attributes":[{"value":"/ Creates a future which copies all the bytes from one object to another.","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\io\\copy_buf.rs","byte_start":615385,"byte_end":615460,"line_start":9,"line_end":9,"column_start":1,"column_end":76}},{"value":"/","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\io\\copy_buf.rs","byte_start":615461,"byte_end":615464,"line_start":10,"line_end":10,"column_start":1,"column_end":4}},{"value":"/ The returned future will copy all the bytes read from this `AsyncBufRead` into the","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\io\\copy_buf.rs","byte_start":615465,"byte_end":615551,"line_start":11,"line_end":11,"column_start":1,"column_end":87}},{"value":"/ `writer` specified. This future will only complete once the `reader` has hit","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\io\\copy_buf.rs","byte_start":615552,"byte_end":615632,"line_start":12,"line_end":12,"column_start":1,"column_end":81}},{"value":"/ EOF and all bytes have been written to and flushed from the `writer`","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\io\\copy_buf.rs","byte_start":615633,"byte_end":615705,"line_start":13,"line_end":13,"column_start":1,"column_end":73}},{"value":"/ provided.","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\io\\copy_buf.rs","byte_start":615706,"byte_end":615719,"line_start":14,"line_end":14,"column_start":1,"column_end":14}},{"value":"/","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\io\\copy_buf.rs","byte_start":615720,"byte_end":615723,"line_start":15,"line_end":15,"column_start":1,"column_end":4}},{"value":"/ On success the number of bytes is returned.","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\io\\copy_buf.rs","byte_start":615724,"byte_end":615771,"line_start":16,"line_end":16,"column_start":1,"column_end":48}},{"value":"/","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\io\\copy_buf.rs","byte_start":615772,"byte_end":615775,"line_start":17,"line_end":17,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\io\\copy_buf.rs","byte_start":615776,"byte_end":615790,"line_start":18,"line_end":18,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\io\\copy_buf.rs","byte_start":615791,"byte_end":615794,"line_start":19,"line_end":19,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\io\\copy_buf.rs","byte_start":615795,"byte_end":615802,"line_start":20,"line_end":20,"column_start":1,"column_end":8}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\io\\copy_buf.rs","byte_start":615803,"byte_end":615844,"line_start":21,"line_end":21,"column_start":1,"column_end":42}},{"value":"/ use futures::io::{self, AsyncWriteExt, Cursor};","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\io\\copy_buf.rs","byte_start":615845,"byte_end":615896,"line_start":22,"line_end":22,"column_start":1,"column_end":52}},{"value":"/","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\io\\copy_buf.rs","byte_start":615897,"byte_end":615900,"line_start":23,"line_end":23,"column_start":1,"column_end":4}},{"value":"/ let reader = Cursor::new([1, 2, 3, 4]);","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\io\\copy_buf.rs","byte_start":615901,"byte_end":615944,"line_start":24,"line_end":24,"column_start":1,"column_end":44}},{"value":"/ let mut writer = Cursor::new(vec![0u8; 5]);","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\io\\copy_buf.rs","byte_start":615945,"byte_end":615992,"line_start":25,"line_end":25,"column_start":1,"column_end":48}},{"value":"/","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\io\\copy_buf.rs","byte_start":615993,"byte_end":615996,"line_start":26,"line_end":26,"column_start":1,"column_end":4}},{"value":"/ let bytes = io::copy_buf(reader, &mut writer).await?;","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\io\\copy_buf.rs","byte_start":615997,"byte_end":616054,"line_start":27,"line_end":27,"column_start":1,"column_end":58}},{"value":"/ writer.close().await?;","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\io\\copy_buf.rs","byte_start":616055,"byte_end":616081,"line_start":28,"line_end":28,"column_start":1,"column_end":27}},{"value":"/","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\io\\copy_buf.rs","byte_start":616082,"byte_end":616085,"line_start":29,"line_end":29,"column_start":1,"column_end":4}},{"value":"/ assert_eq!(bytes, 4);","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\io\\copy_buf.rs","byte_start":616086,"byte_end":616111,"line_start":30,"line_end":30,"column_start":1,"column_end":26}},{"value":"/ assert_eq!(writer.into_inner(), [1, 2, 3, 4, 0]);","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\io\\copy_buf.rs","byte_start":616112,"byte_end":616165,"line_start":31,"line_end":31,"column_start":1,"column_end":54}},{"value":"/ # Ok::<(), Box<dyn std::error::Error>>(()) }).unwrap();","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\io\\copy_buf.rs","byte_start":616166,"byte_end":616225,"line_start":32,"line_end":32,"column_start":1,"column_end":60}},{"value":"/ ```","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\io\\copy_buf.rs","byte_start":616226,"byte_end":616233,"line_start":33,"line_end":33,"column_start":1,"column_end":8}}]},{"kind":"Struct","id":{"krate":0,"index":17713},"span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\io\\copy_buf.rs","byte_start":616582,"byte_end":616589,"line_start":46,"line_end":46,"column_start":16,"column_end":23},"name":"CopyBuf","qualname":"::io::copy_buf::CopyBuf","value":"CopyBuf {  }","parent":null,"children":[{"krate":0,"index":17717},{"krate":0,"index":17718},{"krate":0,"index":17719}],"decl_id":null,"docs":" Future for the [`copy_buf()`] function.\n","sig":null,"attributes":[{"value":"must_use = \"futures do nothing unless you `.await` or poll them\"","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pin-project-lite-0.2.9\\src\\lib.rs","byte_start":14239710,"byte_end":14239719,"line_start":633,"line_end":633,"column_start":11,"column_end":20}}]},{"kind":"Struct","id":{"krate":0,"index":17775},"span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\io\\cursor.rs","byte_start":618511,"byte_end":618517,"line_start":25,"line_end":25,"column_start":12,"column_end":18},"name":"Cursor","qualname":"::io::cursor::Cursor","value":"Cursor {  }","parent":null,"children":[{"krate":0,"index":17777}],"decl_id":null,"docs":" A `Cursor` wraps an in-memory buffer and provides it with a\n [`AsyncSeek`] implementation.","sig":null,"attributes":[{"value":"/ A `Cursor` wraps an in-memory buffer and provides it with a","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\io\\cursor.rs","byte_start":617744,"byte_end":617807,"line_start":8,"line_end":8,"column_start":1,"column_end":64}},{"value":"/ [`AsyncSeek`] implementation.","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\io\\cursor.rs","byte_start":617808,"byte_end":617841,"line_start":9,"line_end":9,"column_start":1,"column_end":34}},{"value":"/","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\io\\cursor.rs","byte_start":617842,"byte_end":617845,"line_start":10,"line_end":10,"column_start":1,"column_end":4}},{"value":"/ `Cursor`s are used with in-memory buffers, anything implementing","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\io\\cursor.rs","byte_start":617846,"byte_end":617914,"line_start":11,"line_end":11,"column_start":1,"column_end":69}},{"value":"/ `AsRef<[u8]>`, to allow them to implement [`AsyncRead`] and/or [`AsyncWrite`],","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\io\\cursor.rs","byte_start":617915,"byte_end":617997,"line_start":12,"line_end":12,"column_start":1,"column_end":83}},{"value":"/ allowing these buffers to be used anywhere you might use a reader or writer","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\io\\cursor.rs","byte_start":617998,"byte_end":618077,"line_start":13,"line_end":13,"column_start":1,"column_end":80}},{"value":"/ that does actual I/O.","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\io\\cursor.rs","byte_start":618078,"byte_end":618103,"line_start":14,"line_end":14,"column_start":1,"column_end":26}},{"value":"/","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\io\\cursor.rs","byte_start":618104,"byte_end":618107,"line_start":15,"line_end":15,"column_start":1,"column_end":4}},{"value":"/ This library implements some I/O traits on various types which","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\io\\cursor.rs","byte_start":618108,"byte_end":618174,"line_start":16,"line_end":16,"column_start":1,"column_end":67}},{"value":"/ are commonly used as a buffer, like `Cursor<`[`Vec`]`<u8>>` and","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\io\\cursor.rs","byte_start":618175,"byte_end":618242,"line_start":17,"line_end":17,"column_start":1,"column_end":68}},{"value":"/ `Cursor<`[`&[u8]`][bytes]`>`.","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\io\\cursor.rs","byte_start":618243,"byte_end":618276,"line_start":18,"line_end":18,"column_start":1,"column_end":34}},{"value":"/","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\io\\cursor.rs","byte_start":618277,"byte_end":618280,"line_start":19,"line_end":19,"column_start":1,"column_end":4}},{"value":"/ [`AsyncSeek`]: trait.AsyncSeek.html","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\io\\cursor.rs","byte_start":618281,"byte_end":618320,"line_start":20,"line_end":20,"column_start":1,"column_end":40}},{"value":"/ [`AsyncRead`]: trait.AsyncRead.html","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\io\\cursor.rs","byte_start":618321,"byte_end":618360,"line_start":21,"line_end":21,"column_start":1,"column_end":40}},{"value":"/ [`AsyncWrite`]: trait.AsyncWrite.html","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\io\\cursor.rs","byte_start":618361,"byte_end":618402,"line_start":22,"line_end":22,"column_start":1,"column_end":42}},{"value":"/ [bytes]: https://doc.rust-lang.org/std/primitive.slice.html","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\io\\cursor.rs","byte_start":618403,"byte_end":618466,"line_start":23,"line_end":23,"column_start":1,"column_end":64}}]},{"kind":"Method","id":{"krate":0,"index":8459},"span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\io\\cursor.rs","byte_start":619097,"byte_end":619100,"line_start":45,"line_end":45,"column_start":12,"column_end":15},"name":"new","qualname":"<Cursor<T>>::new","value":"pub fn new(T) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Creates a new cursor wrapping the provided underlying in-memory buffer.","sig":null,"attributes":[{"value":"/ Creates a new cursor wrapping the provided underlying in-memory buffer.","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\io\\cursor.rs","byte_start":618576,"byte_end":618651,"line_start":30,"line_end":30,"column_start":5,"column_end":80}},{"value":"/","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\io\\cursor.rs","byte_start":618656,"byte_end":618659,"line_start":31,"line_end":31,"column_start":5,"column_end":8}},{"value":"/ Cursor initial position is `0` even if underlying buffer (e.g., `Vec`)","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\io\\cursor.rs","byte_start":618664,"byte_end":618738,"line_start":32,"line_end":32,"column_start":5,"column_end":79}},{"value":"/ is not empty. So writing to cursor starts with overwriting `Vec`","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\io\\cursor.rs","byte_start":618743,"byte_end":618811,"line_start":33,"line_end":33,"column_start":5,"column_end":73}},{"value":"/ content, not with appending to it.","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\io\\cursor.rs","byte_start":618816,"byte_end":618854,"line_start":34,"line_end":34,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\io\\cursor.rs","byte_start":618859,"byte_end":618862,"line_start":35,"line_end":35,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\io\\cursor.rs","byte_start":618867,"byte_end":618881,"line_start":36,"line_end":36,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\io\\cursor.rs","byte_start":618886,"byte_end":618889,"line_start":37,"line_end":37,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\io\\cursor.rs","byte_start":618894,"byte_end":618901,"line_start":38,"line_end":38,"column_start":5,"column_end":12}},{"value":"/ use futures::io::Cursor;","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\io\\cursor.rs","byte_start":618906,"byte_end":618934,"line_start":39,"line_end":39,"column_start":5,"column_end":33}},{"value":"/","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\io\\cursor.rs","byte_start":618939,"byte_end":618942,"line_start":40,"line_end":40,"column_start":5,"column_end":8}},{"value":"/ let buff = Cursor::new(Vec::new());","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\io\\cursor.rs","byte_start":618947,"byte_end":618986,"line_start":41,"line_end":41,"column_start":5,"column_end":44}},{"value":"/ # fn force_inference(_: &Cursor<Vec<u8>>) {}","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\io\\cursor.rs","byte_start":618991,"byte_end":619039,"line_start":42,"line_end":42,"column_start":5,"column_end":53}},{"value":"/ # force_inference(&buff);","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\io\\cursor.rs","byte_start":619044,"byte_end":619073,"line_start":43,"line_end":43,"column_start":5,"column_end":34}},{"value":"/ ```","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\io\\cursor.rs","byte_start":619078,"byte_end":619085,"line_start":44,"line_end":44,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":8460},"span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\io\\cursor.rs","byte_start":619524,"byte_end":619534,"line_start":62,"line_end":62,"column_start":12,"column_end":22},"name":"into_inner","qualname":"<Cursor<T>>::into_inner","value":"pub fn into_inner(Self) -> T","parent":null,"children":[],"decl_id":null,"docs":" Consumes this cursor, returning the underlying value.","sig":null,"attributes":[{"value":"/ Consumes this cursor, returning the underlying value.","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\io\\cursor.rs","byte_start":619179,"byte_end":619236,"line_start":49,"line_end":49,"column_start":5,"column_end":62}},{"value":"/","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\io\\cursor.rs","byte_start":619241,"byte_end":619244,"line_start":50,"line_end":50,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\io\\cursor.rs","byte_start":619249,"byte_end":619263,"line_start":51,"line_end":51,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\io\\cursor.rs","byte_start":619268,"byte_end":619271,"line_start":52,"line_end":52,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\io\\cursor.rs","byte_start":619276,"byte_end":619283,"line_start":53,"line_end":53,"column_start":5,"column_end":12}},{"value":"/ use futures::io::Cursor;","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\io\\cursor.rs","byte_start":619288,"byte_end":619316,"line_start":54,"line_end":54,"column_start":5,"column_end":33}},{"value":"/","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\io\\cursor.rs","byte_start":619321,"byte_end":619324,"line_start":55,"line_end":55,"column_start":5,"column_end":8}},{"value":"/ let buff = Cursor::new(Vec::new());","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\io\\cursor.rs","byte_start":619329,"byte_end":619368,"line_start":56,"line_end":56,"column_start":5,"column_end":44}},{"value":"/ # fn force_inference(_: &Cursor<Vec<u8>>) {}","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\io\\cursor.rs","byte_start":619373,"byte_end":619421,"line_start":57,"line_end":57,"column_start":5,"column_end":53}},{"value":"/ # force_inference(&buff);","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\io\\cursor.rs","byte_start":619426,"byte_end":619455,"line_start":58,"line_end":58,"column_start":5,"column_end":34}},{"value":"/","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\io\\cursor.rs","byte_start":619460,"byte_end":619463,"line_start":59,"line_end":59,"column_start":5,"column_end":8}},{"value":"/ let vec = buff.into_inner();","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\io\\cursor.rs","byte_start":619468,"byte_end":619500,"line_start":60,"line_end":60,"column_start":5,"column_end":37}},{"value":"/ ```","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\io\\cursor.rs","byte_start":619505,"byte_end":619512,"line_start":61,"line_end":61,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":8461},"span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\io\\cursor.rs","byte_start":619942,"byte_end":619949,"line_start":79,"line_end":79,"column_start":12,"column_end":19},"name":"get_ref","qualname":"<Cursor<T>>::get_ref","value":"pub fn get_ref(&Self) -> &T","parent":null,"children":[],"decl_id":null,"docs":" Gets a reference to the underlying value in this cursor.","sig":null,"attributes":[{"value":"/ Gets a reference to the underlying value in this cursor.","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\io\\cursor.rs","byte_start":619591,"byte_end":619651,"line_start":66,"line_end":66,"column_start":5,"column_end":65}},{"value":"/","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\io\\cursor.rs","byte_start":619656,"byte_end":619659,"line_start":67,"line_end":67,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\io\\cursor.rs","byte_start":619664,"byte_end":619678,"line_start":68,"line_end":68,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\io\\cursor.rs","byte_start":619683,"byte_end":619686,"line_start":69,"line_end":69,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\io\\cursor.rs","byte_start":619691,"byte_end":619698,"line_start":70,"line_end":70,"column_start":5,"column_end":12}},{"value":"/ use futures::io::Cursor;","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\io\\cursor.rs","byte_start":619703,"byte_end":619731,"line_start":71,"line_end":71,"column_start":5,"column_end":33}},{"value":"/","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\io\\cursor.rs","byte_start":619736,"byte_end":619739,"line_start":72,"line_end":72,"column_start":5,"column_end":8}},{"value":"/ let buff = Cursor::new(Vec::new());","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\io\\cursor.rs","byte_start":619744,"byte_end":619783,"line_start":73,"line_end":73,"column_start":5,"column_end":44}},{"value":"/ # fn force_inference(_: &Cursor<Vec<u8>>) {}","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\io\\cursor.rs","byte_start":619788,"byte_end":619836,"line_start":74,"line_end":74,"column_start":5,"column_end":53}},{"value":"/ # force_inference(&buff);","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\io\\cursor.rs","byte_start":619841,"byte_end":619870,"line_start":75,"line_end":75,"column_start":5,"column_end":34}},{"value":"/","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\io\\cursor.rs","byte_start":619875,"byte_end":619878,"line_start":76,"line_end":76,"column_start":5,"column_end":8}},{"value":"/ let reference = buff.get_ref();","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\io\\cursor.rs","byte_start":619883,"byte_end":619918,"line_start":77,"line_end":77,"column_start":5,"column_end":40}},{"value":"/ ```","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\io\\cursor.rs","byte_start":619923,"byte_end":619930,"line_start":78,"line_end":78,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":8462},"span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\io\\cursor.rs","byte_start":620521,"byte_end":620528,"line_start":99,"line_end":99,"column_start":12,"column_end":19},"name":"get_mut","qualname":"<Cursor<T>>::get_mut","value":"pub fn get_mut(&mut Self) -> &mut T","parent":null,"children":[],"decl_id":null,"docs":" Gets a mutable reference to the underlying value in this cursor.","sig":null,"attributes":[{"value":"/ Gets a mutable reference to the underlying value in this cursor.","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\io\\cursor.rs","byte_start":620005,"byte_end":620073,"line_start":83,"line_end":83,"column_start":5,"column_end":73}},{"value":"/","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\io\\cursor.rs","byte_start":620078,"byte_end":620081,"line_start":84,"line_end":84,"column_start":5,"column_end":8}},{"value":"/ Care should be taken to avoid modifying the internal I/O state of the","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\io\\cursor.rs","byte_start":620086,"byte_end":620159,"line_start":85,"line_end":85,"column_start":5,"column_end":78}},{"value":"/ underlying value as it may corrupt this cursor's position.","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\io\\cursor.rs","byte_start":620164,"byte_end":620226,"line_start":86,"line_end":86,"column_start":5,"column_end":67}},{"value":"/","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\io\\cursor.rs","byte_start":620231,"byte_end":620234,"line_start":87,"line_end":87,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\io\\cursor.rs","byte_start":620239,"byte_end":620253,"line_start":88,"line_end":88,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\io\\cursor.rs","byte_start":620258,"byte_end":620261,"line_start":89,"line_end":89,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\io\\cursor.rs","byte_start":620266,"byte_end":620273,"line_start":90,"line_end":90,"column_start":5,"column_end":12}},{"value":"/ use futures::io::Cursor;","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\io\\cursor.rs","byte_start":620278,"byte_end":620306,"line_start":91,"line_end":91,"column_start":5,"column_end":33}},{"value":"/","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\io\\cursor.rs","byte_start":620311,"byte_end":620314,"line_start":92,"line_end":92,"column_start":5,"column_end":8}},{"value":"/ let mut buff = Cursor::new(Vec::new());","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\io\\cursor.rs","byte_start":620319,"byte_end":620362,"line_start":93,"line_end":93,"column_start":5,"column_end":48}},{"value":"/ # fn force_inference(_: &Cursor<Vec<u8>>) {}","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\io\\cursor.rs","byte_start":620367,"byte_end":620415,"line_start":94,"line_end":94,"column_start":5,"column_end":53}},{"value":"/ # force_inference(&buff);","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\io\\cursor.rs","byte_start":620420,"byte_end":620449,"line_start":95,"line_end":95,"column_start":5,"column_end":34}},{"value":"/","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\io\\cursor.rs","byte_start":620454,"byte_end":620457,"line_start":96,"line_end":96,"column_start":5,"column_end":8}},{"value":"/ let reference = buff.get_mut();","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\io\\cursor.rs","byte_start":620462,"byte_end":620497,"line_start":97,"line_end":97,"column_start":5,"column_end":40}},{"value":"/ ```","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\io\\cursor.rs","byte_start":620502,"byte_end":620509,"line_start":98,"line_end":98,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":8463},"span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\io\\cursor.rs","byte_start":621186,"byte_end":621194,"line_start":122,"line_end":122,"column_start":12,"column_end":20},"name":"position","qualname":"<Cursor<T>>::position","value":"pub fn position(&Self) -> u64","parent":null,"children":[],"decl_id":null,"docs":" Returns the current position of this cursor.","sig":null,"attributes":[{"value":"/ Returns the current position of this cursor.","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\io\\cursor.rs","byte_start":620592,"byte_end":620640,"line_start":103,"line_end":103,"column_start":5,"column_end":53}},{"value":"/","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\io\\cursor.rs","byte_start":620645,"byte_end":620648,"line_start":104,"line_end":104,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\io\\cursor.rs","byte_start":620653,"byte_end":620667,"line_start":105,"line_end":105,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\io\\cursor.rs","byte_start":620672,"byte_end":620675,"line_start":106,"line_end":106,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\io\\cursor.rs","byte_start":620680,"byte_end":620687,"line_start":107,"line_end":107,"column_start":5,"column_end":12}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\io\\cursor.rs","byte_start":620692,"byte_end":620733,"line_start":108,"line_end":108,"column_start":5,"column_end":46}},{"value":"/ use futures::io::{AsyncSeekExt, Cursor, SeekFrom};","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\io\\cursor.rs","byte_start":620738,"byte_end":620792,"line_start":109,"line_end":109,"column_start":5,"column_end":59}},{"value":"/","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\io\\cursor.rs","byte_start":620797,"byte_end":620800,"line_start":110,"line_end":110,"column_start":5,"column_end":8}},{"value":"/ let mut buff = Cursor::new(vec![1, 2, 3, 4, 5]);","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\io\\cursor.rs","byte_start":620805,"byte_end":620857,"line_start":111,"line_end":111,"column_start":5,"column_end":57}},{"value":"/","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\io\\cursor.rs","byte_start":620862,"byte_end":620865,"line_start":112,"line_end":112,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(buff.position(), 0);","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\io\\cursor.rs","byte_start":620870,"byte_end":620905,"line_start":113,"line_end":113,"column_start":5,"column_end":40}},{"value":"/","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\io\\cursor.rs","byte_start":620910,"byte_end":620913,"line_start":114,"line_end":114,"column_start":5,"column_end":8}},{"value":"/ buff.seek(SeekFrom::Current(2)).await?;","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\io\\cursor.rs","byte_start":620918,"byte_end":620961,"line_start":115,"line_end":115,"column_start":5,"column_end":48}},{"value":"/ assert_eq!(buff.position(), 2);","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\io\\cursor.rs","byte_start":620966,"byte_end":621001,"line_start":116,"line_end":116,"column_start":5,"column_end":40}},{"value":"/","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\io\\cursor.rs","byte_start":621006,"byte_end":621009,"line_start":117,"line_end":117,"column_start":5,"column_end":8}},{"value":"/ buff.seek(SeekFrom::Current(-1)).await?;","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\io\\cursor.rs","byte_start":621014,"byte_end":621058,"line_start":118,"line_end":118,"column_start":5,"column_end":49}},{"value":"/ assert_eq!(buff.position(), 1);","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\io\\cursor.rs","byte_start":621063,"byte_end":621098,"line_start":119,"line_end":119,"column_start":5,"column_end":40}},{"value":"/ # Ok::<(), Box<dyn std::error::Error>>(()) }).unwrap();","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\io\\cursor.rs","byte_start":621103,"byte_end":621162,"line_start":120,"line_end":120,"column_start":5,"column_end":64}},{"value":"/ ```","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\io\\cursor.rs","byte_start":621167,"byte_end":621174,"line_start":121,"line_end":121,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":8464},"span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\io\\cursor.rs","byte_start":621662,"byte_end":621674,"line_start":143,"line_end":143,"column_start":12,"column_end":24},"name":"set_position","qualname":"<Cursor<T>>::set_position","value":"pub fn set_position(&mut Self, u64)","parent":null,"children":[],"decl_id":null,"docs":" Sets the position of this cursor.","sig":null,"attributes":[{"value":"/ Sets the position of this cursor.","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\io\\cursor.rs","byte_start":621252,"byte_end":621289,"line_start":126,"line_end":126,"column_start":5,"column_end":42}},{"value":"/","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\io\\cursor.rs","byte_start":621294,"byte_end":621297,"line_start":127,"line_end":127,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\io\\cursor.rs","byte_start":621302,"byte_end":621316,"line_start":128,"line_end":128,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\io\\cursor.rs","byte_start":621321,"byte_end":621324,"line_start":129,"line_end":129,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\io\\cursor.rs","byte_start":621329,"byte_end":621336,"line_start":130,"line_end":130,"column_start":5,"column_end":12}},{"value":"/ use futures::io::Cursor;","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\io\\cursor.rs","byte_start":621341,"byte_end":621369,"line_start":131,"line_end":131,"column_start":5,"column_end":33}},{"value":"/","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\io\\cursor.rs","byte_start":621374,"byte_end":621377,"line_start":132,"line_end":132,"column_start":5,"column_end":8}},{"value":"/ let mut buff = Cursor::new(vec![1, 2, 3, 4, 5]);","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\io\\cursor.rs","byte_start":621382,"byte_end":621434,"line_start":133,"line_end":133,"column_start":5,"column_end":57}},{"value":"/","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\io\\cursor.rs","byte_start":621439,"byte_end":621442,"line_start":134,"line_end":134,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(buff.position(), 0);","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\io\\cursor.rs","byte_start":621447,"byte_end":621482,"line_start":135,"line_end":135,"column_start":5,"column_end":40}},{"value":"/","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\io\\cursor.rs","byte_start":621487,"byte_end":621490,"line_start":136,"line_end":136,"column_start":5,"column_end":8}},{"value":"/ buff.set_position(2);","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\io\\cursor.rs","byte_start":621495,"byte_end":621520,"line_start":137,"line_end":137,"column_start":5,"column_end":30}},{"value":"/ assert_eq!(buff.position(), 2);","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\io\\cursor.rs","byte_start":621525,"byte_end":621560,"line_start":138,"line_end":138,"column_start":5,"column_end":40}},{"value":"/","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\io\\cursor.rs","byte_start":621565,"byte_end":621568,"line_start":139,"line_end":139,"column_start":5,"column_end":8}},{"value":"/ buff.set_position(4);","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\io\\cursor.rs","byte_start":621573,"byte_end":621598,"line_start":140,"line_end":140,"column_start":5,"column_end":30}},{"value":"/ assert_eq!(buff.position(), 4);","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\io\\cursor.rs","byte_start":621603,"byte_end":621638,"line_start":141,"line_end":141,"column_start":5,"column_end":40}},{"value":"/ ```","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\io\\cursor.rs","byte_start":621643,"byte_end":621650,"line_start":142,"line_end":142,"column_start":5,"column_end":12}}]},{"kind":"Struct","id":{"krate":0,"index":8508},"span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\io\\empty.rs","byte_start":624444,"byte_end":624449,"line_start":9,"line_end":9,"column_start":12,"column_end":17},"name":"Empty","qualname":"::io::empty::Empty","value":"Empty {  }","parent":null,"children":[{"krate":0,"index":8509}],"decl_id":null,"docs":" Reader for the [`empty()`] function.\n","sig":null,"attributes":[{"value":"/ Reader for the [`empty()`] function.","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\io\\empty.rs","byte_start":624343,"byte_end":624383,"line_start":7,"line_end":7,"column_start":1,"column_end":41}},{"value":"must_use = \"readers do nothing unless polled\"","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\io\\empty.rs","byte_start":624384,"byte_end":624432,"line_start":8,"line_end":8,"column_start":1,"column_end":49}}]},{"kind":"Function","id":{"krate":0,"index":8510},"span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\io\\empty.rs","byte_start":625009,"byte_end":625014,"line_start":31,"line_end":31,"column_start":8,"column_end":13},"name":"empty","qualname":"::io::empty::empty","value":"pub fn empty() -> Empty","parent":null,"children":[],"decl_id":null,"docs":" Constructs a new handle to an empty reader.","sig":null,"attributes":[{"value":"/ Constructs a new handle to an empty reader.","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\io\\empty.rs","byte_start":624470,"byte_end":624517,"line_start":13,"line_end":13,"column_start":1,"column_end":48}},{"value":"/","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\io\\empty.rs","byte_start":624518,"byte_end":624521,"line_start":14,"line_end":14,"column_start":1,"column_end":4}},{"value":"/ All reads from the returned reader will return `Poll::Ready(Ok(0))`.","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\io\\empty.rs","byte_start":624522,"byte_end":624594,"line_start":15,"line_end":15,"column_start":1,"column_end":73}},{"value":"/","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\io\\empty.rs","byte_start":624595,"byte_end":624598,"line_start":16,"line_end":16,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\io\\empty.rs","byte_start":624599,"byte_end":624613,"line_start":17,"line_end":17,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\io\\empty.rs","byte_start":624614,"byte_end":624617,"line_start":18,"line_end":18,"column_start":1,"column_end":4}},{"value":"/ A slightly sad example of not reading anything into a buffer:","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\io\\empty.rs","byte_start":624618,"byte_end":624683,"line_start":19,"line_end":19,"column_start":1,"column_end":66}},{"value":"/","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\io\\empty.rs","byte_start":624684,"byte_end":624687,"line_start":20,"line_end":20,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\io\\empty.rs","byte_start":624688,"byte_end":624695,"line_start":21,"line_end":21,"column_start":1,"column_end":8}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\io\\empty.rs","byte_start":624696,"byte_end":624737,"line_start":22,"line_end":22,"column_start":1,"column_end":42}},{"value":"/ use futures::io::{self, AsyncReadExt};","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\io\\empty.rs","byte_start":624738,"byte_end":624780,"line_start":23,"line_end":23,"column_start":1,"column_end":43}},{"value":"/","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\io\\empty.rs","byte_start":624781,"byte_end":624784,"line_start":24,"line_end":24,"column_start":1,"column_end":4}},{"value":"/ let mut buffer = String::new();","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\io\\empty.rs","byte_start":624785,"byte_end":624820,"line_start":25,"line_end":25,"column_start":1,"column_end":36}},{"value":"/ let mut reader = io::empty();","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\io\\empty.rs","byte_start":624821,"byte_end":624854,"line_start":26,"line_end":26,"column_start":1,"column_end":34}},{"value":"/ reader.read_to_string(&mut buffer).await?;","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\io\\empty.rs","byte_start":624855,"byte_end":624901,"line_start":27,"line_end":27,"column_start":1,"column_end":47}},{"value":"/ assert!(buffer.is_empty());","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\io\\empty.rs","byte_start":624902,"byte_end":624933,"line_start":28,"line_end":28,"column_start":1,"column_end":32}},{"value":"/ # Ok::<(), Box<dyn std::error::Error>>(()) }).unwrap();","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\io\\empty.rs","byte_start":624934,"byte_end":624993,"line_start":29,"line_end":29,"column_start":1,"column_end":60}},{"value":"/ ```","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\io\\empty.rs","byte_start":624994,"byte_end":625001,"line_start":30,"line_end":30,"column_start":1,"column_end":8}}]},{"kind":"Struct","id":{"krate":0,"index":17803},"span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\io\\fill_buf.rs","byte_start":625943,"byte_end":625950,"line_start":10,"line_end":10,"column_start":12,"column_end":19},"name":"FillBuf","qualname":"::io::fill_buf::FillBuf","value":"FillBuf {  }","parent":null,"children":[{"krate":0,"index":17806}],"decl_id":null,"docs":" Future for the [`fill_buf`](super::AsyncBufReadExt::fill_buf) method.\n","sig":null,"attributes":[{"value":"/ Future for the [`fill_buf`](super::AsyncBufReadExt::fill_buf) method.","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\io\\fill_buf.rs","byte_start":625773,"byte_end":625846,"line_start":7,"line_end":7,"column_start":1,"column_end":74}},{"value":"must_use = \"futures do nothing unless you `.await` or poll them\"","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\io\\fill_buf.rs","byte_start":625864,"byte_end":625931,"line_start":9,"line_end":9,"column_start":1,"column_end":68}}]},{"kind":"Struct","id":{"krate":0,"index":17811},"span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\io\\flush.rs","byte_start":627722,"byte_end":627727,"line_start":10,"line_end":10,"column_start":12,"column_end":17},"name":"Flush","qualname":"::io::flush::Flush","value":"Flush {  }","parent":null,"children":[{"krate":0,"index":17814}],"decl_id":null,"docs":" Future for the [`flush`](super::AsyncWriteExt::flush) method.\n","sig":null,"attributes":[{"value":"/ Future for the [`flush`](super::AsyncWriteExt::flush) method.","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\io\\flush.rs","byte_start":627560,"byte_end":627625,"line_start":7,"line_end":7,"column_start":1,"column_end":66}},{"value":"must_use = \"futures do nothing unless you `.await` or poll them\"","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\io\\flush.rs","byte_start":627643,"byte_end":627710,"line_start":9,"line_end":9,"column_start":1,"column_end":68}}]},{"kind":"Struct","id":{"krate":0,"index":17826},"span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\io\\into_sink.rs","byte_start":628710,"byte_end":628718,"line_start":20,"line_end":20,"column_start":16,"column_end":24},"name":"IntoSink","qualname":"::io::into_sink::IntoSink","value":"IntoSink {  }","parent":null,"children":[{"krate":0,"index":17829},{"krate":0,"index":17830}],"decl_id":null,"docs":" Sink for the [`into_sink`](super::AsyncWriteExt::into_sink) method.\n","sig":null,"attributes":[{"value":"must_use = \"sinks do nothing unless polled\"","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pin-project-lite-0.2.9\\src\\lib.rs","byte_start":14239710,"byte_end":14239719,"line_start":633,"line_end":633,"column_start":11,"column_end":20}}]},{"kind":"Struct","id":{"krate":0,"index":17875},"span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\io\\lines.rs","byte_start":631319,"byte_end":631324,"line_start":15,"line_end":15,"column_start":16,"column_end":21},"name":"Lines","qualname":"::io::lines::Lines","value":"Lines {  }","parent":null,"children":[{"krate":0,"index":17877},{"krate":0,"index":17878},{"krate":0,"index":17879},{"krate":0,"index":17880}],"decl_id":null,"docs":" Stream for the [`lines`](super::AsyncBufReadExt::lines) method.\n","sig":null,"attributes":[{"value":"must_use = \"streams do nothing unless polled\"","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pin-project-lite-0.2.9\\src\\lib.rs","byte_start":14239710,"byte_end":14239719,"line_start":633,"line_end":633,"column_start":11,"column_end":20}}]},{"kind":"Struct","id":{"krate":0,"index":17923},"span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\io\\read.rs","byte_start":632524,"byte_end":632528,"line_start":10,"line_end":10,"column_start":12,"column_end":16},"name":"Read","qualname":"::io::read::Read","value":"Read {  }","parent":null,"children":[{"krate":0,"index":17926},{"krate":0,"index":17927}],"decl_id":null,"docs":" Future for the [`read`](super::AsyncReadExt::read) method.\n","sig":null,"attributes":[{"value":"/ Future for the [`read`](super::AsyncReadExt::read) method.","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\io\\read.rs","byte_start":632365,"byte_end":632427,"line_start":7,"line_end":7,"column_start":1,"column_end":63}},{"value":"must_use = \"futures do nothing unless you `.await` or poll them\"","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\io\\read.rs","byte_start":632445,"byte_end":632512,"line_start":9,"line_end":9,"column_start":1,"column_end":68}}]},{"kind":"Struct","id":{"krate":0,"index":17932},"span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\io\\read_vectored.rs","byte_start":633420,"byte_end":633432,"line_start":10,"line_end":10,"column_start":12,"column_end":24},"name":"ReadVectored","qualname":"::io::read_vectored::ReadVectored","value":"ReadVectored {  }","parent":null,"children":[{"krate":0,"index":17935},{"krate":0,"index":17936}],"decl_id":null,"docs":" Future for the [`read_vectored`](super::AsyncReadExt::read_vectored) method.\n","sig":null,"attributes":[{"value":"/ Future for the [`read_vectored`](super::AsyncReadExt::read_vectored) method.","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\io\\read_vectored.rs","byte_start":633243,"byte_end":633323,"line_start":7,"line_end":7,"column_start":1,"column_end":81}},{"value":"must_use = \"futures do nothing unless you `.await` or poll them\"","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\io\\read_vectored.rs","byte_start":633341,"byte_end":633408,"line_start":9,"line_end":9,"column_start":1,"column_end":68}}]},{"kind":"Struct","id":{"krate":0,"index":17941},"span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\io\\read_exact.rs","byte_start":634398,"byte_end":634407,"line_start":12,"line_end":12,"column_start":12,"column_end":21},"name":"ReadExact","qualname":"::io::read_exact::ReadExact","value":"ReadExact {  }","parent":null,"children":[{"krate":0,"index":17944},{"krate":0,"index":17945}],"decl_id":null,"docs":" Future for the [`read_exact`](super::AsyncReadExt::read_exact) method.\n","sig":null,"attributes":[{"value":"/ Future for the [`read_exact`](super::AsyncReadExt::read_exact) method.","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\io\\read_exact.rs","byte_start":634227,"byte_end":634301,"line_start":9,"line_end":9,"column_start":1,"column_end":75}},{"value":"must_use = \"futures do nothing unless you `.await` or poll them\"","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\io\\read_exact.rs","byte_start":634319,"byte_end":634386,"line_start":11,"line_end":11,"column_start":1,"column_end":68}}]},{"kind":"Struct","id":{"krate":0,"index":17950},"span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\io\\read_line.rs","byte_start":635747,"byte_end":635755,"line_start":14,"line_end":14,"column_start":12,"column_end":20},"name":"ReadLine","qualname":"::io::read_line::ReadLine","value":"ReadLine {  }","parent":null,"children":[{"krate":0,"index":17953},{"krate":0,"index":17954},{"krate":0,"index":17955},{"krate":0,"index":17956}],"decl_id":null,"docs":" Future for the [`read_line`](super::AsyncBufReadExt::read_line) method.\n","sig":null,"attributes":[{"value":"/ Future for the [`read_line`](super::AsyncBufReadExt::read_line) method.","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\io\\read_line.rs","byte_start":635575,"byte_end":635650,"line_start":11,"line_end":11,"column_start":1,"column_end":76}},{"value":"must_use = \"futures do nothing unless you `.await` or poll them\"","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\io\\read_line.rs","byte_start":635668,"byte_end":635735,"line_start":13,"line_end":13,"column_start":1,"column_end":68}}]},{"kind":"Struct","id":{"krate":0,"index":17961},"span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\io\\read_to_end.rs","byte_start":637563,"byte_end":637572,"line_start":12,"line_end":12,"column_start":12,"column_end":21},"name":"ReadToEnd","qualname":"::io::read_to_end::ReadToEnd","value":"ReadToEnd {  }","parent":null,"children":[{"krate":0,"index":17964},{"krate":0,"index":17965},{"krate":0,"index":17966}],"decl_id":null,"docs":" Future for the [`read_to_end`](super::AsyncReadExt::read_to_end) method.\n","sig":null,"attributes":[{"value":"/ Future for the [`read_to_end`](super::AsyncReadExt::read_to_end) method.","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\io\\read_to_end.rs","byte_start":637390,"byte_end":637466,"line_start":9,"line_end":9,"column_start":1,"column_end":77}},{"value":"must_use = \"futures do nothing unless you `.await` or poll them\"","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\io\\read_to_end.rs","byte_start":637484,"byte_end":637551,"line_start":11,"line_end":11,"column_start":1,"column_end":68}}]},{"kind":"Struct","id":{"krate":0,"index":17971},"span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\io\\read_to_string.rs","byte_start":640578,"byte_end":640590,"line_start":13,"line_end":13,"column_start":12,"column_end":24},"name":"ReadToString","qualname":"::io::read_to_string::ReadToString","value":"ReadToString {  }","parent":null,"children":[{"krate":0,"index":17974},{"krate":0,"index":17975},{"krate":0,"index":17976},{"krate":0,"index":17977}],"decl_id":null,"docs":" Future for the [`read_to_string`](super::AsyncReadExt::read_to_string) method.\n","sig":null,"attributes":[{"value":"/ Future for the [`read_to_string`](super::AsyncReadExt::read_to_string) method.","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\io\\read_to_string.rs","byte_start":640399,"byte_end":640481,"line_start":10,"line_end":10,"column_start":1,"column_end":83}},{"value":"must_use = \"futures do nothing unless you `.await` or poll them\"","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\io\\read_to_string.rs","byte_start":640499,"byte_end":640566,"line_start":12,"line_end":12,"column_start":1,"column_end":68}}]},{"kind":"Struct","id":{"krate":0,"index":17982},"span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\io\\read_until.rs","byte_start":642428,"byte_end":642437,"line_start":12,"line_end":12,"column_start":12,"column_end":21},"name":"ReadUntil","qualname":"::io::read_until::ReadUntil","value":"ReadUntil {  }","parent":null,"children":[{"krate":0,"index":17985},{"krate":0,"index":17986},{"krate":0,"index":17987},{"krate":0,"index":17988}],"decl_id":null,"docs":" Future for the [`read_until`](super::AsyncBufReadExt::read_until) method.\n","sig":null,"attributes":[{"value":"/ Future for the [`read_until`](super::AsyncBufReadExt::read_until) method.","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\io\\read_until.rs","byte_start":642254,"byte_end":642331,"line_start":9,"line_end":9,"column_start":1,"column_end":78}},{"value":"must_use = \"futures do nothing unless you `.await` or poll them\"","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\io\\read_until.rs","byte_start":642349,"byte_end":642416,"line_start":11,"line_end":11,"column_start":1,"column_end":68}}]},{"kind":"Struct","id":{"krate":0,"index":9000},"span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\io\\repeat.rs","byte_start":644150,"byte_end":644156,"line_start":10,"line_end":10,"column_start":12,"column_end":18},"name":"Repeat","qualname":"::io::repeat::Repeat","value":"Repeat {  }","parent":null,"children":[{"krate":0,"index":9001}],"decl_id":null,"docs":" Reader for the [`repeat()`] function.\n","sig":null,"attributes":[{"value":"/ Reader for the [`repeat()`] function.","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\io\\repeat.rs","byte_start":644048,"byte_end":644089,"line_start":8,"line_end":8,"column_start":1,"column_end":42}},{"value":"must_use = \"readers do nothing unless polled\"","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\io\\repeat.rs","byte_start":644090,"byte_end":644138,"line_start":9,"line_end":9,"column_start":1,"column_end":49}}]},{"kind":"Function","id":{"krate":0,"index":9002},"span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\io\\repeat.rs","byte_start":644713,"byte_end":644719,"line_start":31,"line_end":31,"column_start":8,"column_end":14},"name":"repeat","qualname":"::io::repeat::repeat","value":"pub fn repeat(u8) -> Repeat","parent":null,"children":[],"decl_id":null,"docs":" Creates an instance of a reader that infinitely repeats one byte.","sig":null,"attributes":[{"value":"/ Creates an instance of a reader that infinitely repeats one byte.","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\io\\repeat.rs","byte_start":644176,"byte_end":644245,"line_start":14,"line_end":14,"column_start":1,"column_end":70}},{"value":"/","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\io\\repeat.rs","byte_start":644246,"byte_end":644249,"line_start":15,"line_end":15,"column_start":1,"column_end":4}},{"value":"/ All reads from this reader will succeed by filling the specified buffer with","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\io\\repeat.rs","byte_start":644250,"byte_end":644330,"line_start":16,"line_end":16,"column_start":1,"column_end":81}},{"value":"/ the given byte.","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\io\\repeat.rs","byte_start":644331,"byte_end":644350,"line_start":17,"line_end":17,"column_start":1,"column_end":20}},{"value":"/","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\io\\repeat.rs","byte_start":644351,"byte_end":644354,"line_start":18,"line_end":18,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\io\\repeat.rs","byte_start":644355,"byte_end":644369,"line_start":19,"line_end":19,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\io\\repeat.rs","byte_start":644370,"byte_end":644373,"line_start":20,"line_end":20,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\io\\repeat.rs","byte_start":644374,"byte_end":644381,"line_start":21,"line_end":21,"column_start":1,"column_end":8}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\io\\repeat.rs","byte_start":644382,"byte_end":644423,"line_start":22,"line_end":22,"column_start":1,"column_end":42}},{"value":"/ use futures::io::{self, AsyncReadExt};","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\io\\repeat.rs","byte_start":644424,"byte_end":644466,"line_start":23,"line_end":23,"column_start":1,"column_end":43}},{"value":"/","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\io\\repeat.rs","byte_start":644467,"byte_end":644470,"line_start":24,"line_end":24,"column_start":1,"column_end":4}},{"value":"/ let mut buffer = [0; 3];","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\io\\repeat.rs","byte_start":644471,"byte_end":644499,"line_start":25,"line_end":25,"column_start":1,"column_end":29}},{"value":"/ let mut reader = io::repeat(0b101);","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\io\\repeat.rs","byte_start":644500,"byte_end":644539,"line_start":26,"line_end":26,"column_start":1,"column_end":40}},{"value":"/ reader.read_exact(&mut buffer).await.unwrap();","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\io\\repeat.rs","byte_start":644540,"byte_end":644590,"line_start":27,"line_end":27,"column_start":1,"column_end":51}},{"value":"/ assert_eq!(buffer, [0b101, 0b101, 0b101]);","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\io\\repeat.rs","byte_start":644591,"byte_end":644637,"line_start":28,"line_end":28,"column_start":1,"column_end":47}},{"value":"/ # Ok::<(), Box<dyn std::error::Error>>(()) }).unwrap();","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\io\\repeat.rs","byte_start":644638,"byte_end":644697,"line_start":29,"line_end":29,"column_start":1,"column_end":60}},{"value":"/ ```","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\io\\repeat.rs","byte_start":644698,"byte_end":644705,"line_start":30,"line_end":30,"column_start":1,"column_end":8}}]},{"kind":"Struct","id":{"krate":0,"index":17993},"span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\io\\seek.rs","byte_start":645852,"byte_end":645856,"line_start":10,"line_end":10,"column_start":12,"column_end":16},"name":"Seek","qualname":"::io::seek::Seek","value":"Seek {  }","parent":null,"children":[{"krate":0,"index":17996},{"krate":0,"index":17997}],"decl_id":null,"docs":" Future for the [`seek`](crate::io::AsyncSeekExt::seek) method.\n","sig":null,"attributes":[{"value":"/ Future for the [`seek`](crate::io::AsyncSeekExt::seek) method.","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\io\\seek.rs","byte_start":645689,"byte_end":645755,"line_start":7,"line_end":7,"column_start":1,"column_end":67}},{"value":"must_use = \"futures do nothing unless you `.await` or poll them\"","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\io\\seek.rs","byte_start":645773,"byte_end":645840,"line_start":9,"line_end":9,"column_start":1,"column_end":68}}]},{"kind":"Struct","id":{"krate":0,"index":9076},"span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\io\\sink.rs","byte_start":646626,"byte_end":646630,"line_start":9,"line_end":9,"column_start":12,"column_end":16},"name":"Sink","qualname":"::io::sink::Sink","value":"Sink {  }","parent":null,"children":[{"krate":0,"index":9077}],"decl_id":null,"docs":" Writer for the [`sink()`] function.\n","sig":null,"attributes":[{"value":"/ Writer for the [`sink()`] function.","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\io\\sink.rs","byte_start":646526,"byte_end":646565,"line_start":7,"line_end":7,"column_start":1,"column_end":40}},{"value":"must_use = \"writers do nothing unless polled\"","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\io\\sink.rs","byte_start":646566,"byte_end":646614,"line_start":8,"line_end":8,"column_start":1,"column_end":49}}]},{"kind":"Function","id":{"krate":0,"index":9078},"span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\io\\sink.rs","byte_start":647238,"byte_end":647242,"line_start":30,"line_end":30,"column_start":8,"column_end":12},"name":"sink","qualname":"::io::sink::sink","value":"pub fn sink() -> Sink","parent":null,"children":[],"decl_id":null,"docs":" Creates an instance of a writer which will successfully consume all data.","sig":null,"attributes":[{"value":"/ Creates an instance of a writer which will successfully consume all data.","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\io\\sink.rs","byte_start":646651,"byte_end":646728,"line_start":13,"line_end":13,"column_start":1,"column_end":78}},{"value":"/","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\io\\sink.rs","byte_start":646729,"byte_end":646732,"line_start":14,"line_end":14,"column_start":1,"column_end":4}},{"value":"/ All calls to `poll_write` on the returned instance will return `Poll::Ready(Ok(buf.len()))`","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\io\\sink.rs","byte_start":646733,"byte_end":646828,"line_start":15,"line_end":15,"column_start":1,"column_end":96}},{"value":"/ and the contents of the buffer will not be inspected.","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\io\\sink.rs","byte_start":646829,"byte_end":646886,"line_start":16,"line_end":16,"column_start":1,"column_end":58}},{"value":"/","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\io\\sink.rs","byte_start":646887,"byte_end":646890,"line_start":17,"line_end":17,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\io\\sink.rs","byte_start":646891,"byte_end":646905,"line_start":18,"line_end":18,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\io\\sink.rs","byte_start":646906,"byte_end":646909,"line_start":19,"line_end":19,"column_start":1,"column_end":4}},{"value":"/ ```rust","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\io\\sink.rs","byte_start":646910,"byte_end":646921,"line_start":20,"line_end":20,"column_start":1,"column_end":12}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\io\\sink.rs","byte_start":646922,"byte_end":646963,"line_start":21,"line_end":21,"column_start":1,"column_end":42}},{"value":"/ use futures::io::{self, AsyncWriteExt};","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\io\\sink.rs","byte_start":646964,"byte_end":647007,"line_start":22,"line_end":22,"column_start":1,"column_end":44}},{"value":"/","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\io\\sink.rs","byte_start":647008,"byte_end":647011,"line_start":23,"line_end":23,"column_start":1,"column_end":4}},{"value":"/ let buffer = vec![1, 2, 3, 5, 8];","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\io\\sink.rs","byte_start":647012,"byte_end":647049,"line_start":24,"line_end":24,"column_start":1,"column_end":38}},{"value":"/ let mut writer = io::sink();","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\io\\sink.rs","byte_start":647050,"byte_end":647082,"line_start":25,"line_end":25,"column_start":1,"column_end":33}},{"value":"/ let num_bytes = writer.write(&buffer).await?;","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\io\\sink.rs","byte_start":647083,"byte_end":647132,"line_start":26,"line_end":26,"column_start":1,"column_end":50}},{"value":"/ assert_eq!(num_bytes, 5);","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\io\\sink.rs","byte_start":647133,"byte_end":647162,"line_start":27,"line_end":27,"column_start":1,"column_end":30}},{"value":"/ # Ok::<(), Box<dyn std::error::Error>>(()) }).unwrap();","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\io\\sink.rs","byte_start":647163,"byte_end":647222,"line_start":28,"line_end":28,"column_start":1,"column_end":60}},{"value":"/ ```","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\io\\sink.rs","byte_start":647223,"byte_end":647230,"line_start":29,"line_end":29,"column_start":1,"column_end":8}}]},{"kind":"Struct","id":{"krate":0,"index":18002},"span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\io\\split.rs","byte_start":648429,"byte_end":648437,"line_start":11,"line_end":11,"column_start":12,"column_end":20},"name":"ReadHalf","qualname":"::io::split::ReadHalf","value":"ReadHalf {  }","parent":null,"children":[{"krate":0,"index":18004}],"decl_id":null,"docs":" The readable half of an object returned from `AsyncRead::split`.\n","sig":null,"attributes":[{"value":"/ The readable half of an object returned from `AsyncRead::split`.","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\io\\split.rs","byte_start":648332,"byte_end":648400,"line_start":9,"line_end":9,"column_start":1,"column_end":69}}]},{"kind":"Struct","id":{"krate":0,"index":18008},"span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\io\\split.rs","byte_start":648566,"byte_end":648575,"line_start":17,"line_end":17,"column_start":12,"column_end":21},"name":"WriteHalf","qualname":"::io::split::WriteHalf","value":"WriteHalf {  }","parent":null,"children":[{"krate":0,"index":18010}],"decl_id":null,"docs":" The writable half of an object returned from `AsyncRead::split`.\n","sig":null,"attributes":[{"value":"/ The writable half of an object returned from `AsyncRead::split`.","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\io\\split.rs","byte_start":648469,"byte_end":648537,"line_start":15,"line_end":15,"column_start":1,"column_end":69}}]},{"kind":"Method","id":{"krate":0,"index":9139},"span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\io\\split.rs","byte_start":649308,"byte_end":649315,"line_start":38,"line_end":38,"column_start":12,"column_end":19},"name":"reunite","qualname":"<ReadHalf<T>>::reunite","value":"pub fn reunite(Self, WriteHalf<T>) -> Result<T, ReuniteError<T>>","parent":null,"children":[],"decl_id":null,"docs":" Attempts to put the two \"halves\" of a split `AsyncRead + AsyncWrite` back\n together. Succeeds only if the `ReadHalf<T>` and `WriteHalf<T>` are\n a matching pair originating from the same call to `AsyncReadExt::split`.\n","sig":null,"attributes":[{"value":"/ Attempts to put the two \"halves\" of a split `AsyncRead + AsyncWrite` back","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\io\\split.rs","byte_start":649062,"byte_end":649139,"line_start":35,"line_end":35,"column_start":5,"column_end":82}},{"value":"/ together. Succeeds only if the `ReadHalf<T>` and `WriteHalf<T>` are","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\io\\split.rs","byte_start":649144,"byte_end":649215,"line_start":36,"line_end":36,"column_start":5,"column_end":76}},{"value":"/ a matching pair originating from the same call to `AsyncReadExt::split`.","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\io\\split.rs","byte_start":649220,"byte_end":649296,"line_start":37,"line_end":37,"column_start":5,"column_end":81}}]},{"kind":"Method","id":{"krate":0,"index":9143},"span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\io\\split.rs","byte_start":649817,"byte_end":649824,"line_start":49,"line_end":49,"column_start":12,"column_end":19},"name":"reunite","qualname":"<WriteHalf<T>>::reunite","value":"pub fn reunite(Self, ReadHalf<T>) -> Result<T, ReuniteError<T>>","parent":null,"children":[],"decl_id":null,"docs":" Attempts to put the two \"halves\" of a split `AsyncRead + AsyncWrite` back\n together. Succeeds only if the `ReadHalf<T>` and `WriteHalf<T>` are\n a matching pair originating from the same call to `AsyncReadExt::split`.\n","sig":null,"attributes":[{"value":"/ Attempts to put the two \"halves\" of a split `AsyncRead + AsyncWrite` back","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\io\\split.rs","byte_start":649571,"byte_end":649648,"line_start":46,"line_end":46,"column_start":5,"column_end":82}},{"value":"/ together. Succeeds only if the `ReadHalf<T>` and `WriteHalf<T>` are","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\io\\split.rs","byte_start":649653,"byte_end":649724,"line_start":47,"line_end":47,"column_start":5,"column_end":76}},{"value":"/ a matching pair originating from the same call to `AsyncReadExt::split`.","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\io\\split.rs","byte_start":649729,"byte_end":649805,"line_start":48,"line_end":48,"column_start":5,"column_end":81}}]},{"kind":"Struct","id":{"krate":0,"index":9160},"span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\io\\split.rs","byte_start":651412,"byte_end":651424,"line_start":100,"line_end":100,"column_start":12,"column_end":24},"name":"ReuniteError","qualname":"::io::split::ReuniteError","value":"","parent":null,"children":[],"decl_id":null,"docs":" Error indicating a `ReadHalf<T>` and `WriteHalf<T>` were not two halves\n of a `AsyncRead + AsyncWrite`, and thus could not be `reunite`d.\n","sig":null,"attributes":[{"value":"/ Error indicating a `ReadHalf<T>` and `WriteHalf<T>` were not two halves","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\io\\split.rs","byte_start":651256,"byte_end":651331,"line_start":98,"line_end":98,"column_start":1,"column_end":76}},{"value":"/ of a `AsyncRead + AsyncWrite`, and thus could not be `reunite`d.","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\io\\split.rs","byte_start":651332,"byte_end":651400,"line_start":99,"line_end":99,"column_start":1,"column_end":69}}]},{"kind":"Field","id":{"krate":0,"index":9163},"span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\io\\split.rs","byte_start":651428,"byte_end":651443,"line_start":100,"line_end":100,"column_start":28,"column_end":43},"name":"0","qualname":"::io::split::ReuniteError::0","value":"io::split::ReadHalf<T>","parent":{"krate":0,"index":9160},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":9164},"span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\io\\split.rs","byte_start":651445,"byte_end":651461,"line_start":100,"line_end":100,"column_start":45,"column_end":61},"name":"1","qualname":"::io::split::ReuniteError::1","value":"io::split::WriteHalf<T>","parent":{"krate":0,"index":9160},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":18014},"span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\io\\take.rs","byte_start":652304,"byte_end":652308,"line_start":12,"line_end":12,"column_start":16,"column_end":20},"name":"Take","qualname":"::io::take::Take","value":"Take {  }","parent":null,"children":[{"krate":0,"index":18016},{"krate":0,"index":18017}],"decl_id":null,"docs":" Reader for the [`take`](super::AsyncReadExt::take) method.\n","sig":null,"attributes":[{"value":"must_use = \"readers do nothing unless you `.await` or poll them\"","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pin-project-lite-0.2.9\\src\\lib.rs","byte_start":14239710,"byte_end":14239719,"line_start":633,"line_end":633,"column_start":11,"column_end":20}}]},{"kind":"Method","id":{"krate":0,"index":9217},"span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\io\\take.rs","byte_start":653253,"byte_end":653258,"line_start":47,"line_end":47,"column_start":12,"column_end":17},"name":"limit","qualname":"<Take<R>>::limit","value":"pub fn limit(&Self) -> u64","parent":null,"children":[],"decl_id":null,"docs":" Returns the remaining number of bytes that can be\n read before this instance will return EOF.","sig":null,"attributes":[{"value":"/ Returns the remaining number of bytes that can be","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\io\\take.rs","byte_start":652500,"byte_end":652553,"line_start":24,"line_end":24,"column_start":5,"column_end":58}},{"value":"/ read before this instance will return EOF.","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\io\\take.rs","byte_start":652558,"byte_end":652604,"line_start":25,"line_end":25,"column_start":5,"column_end":51}},{"value":"/","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\io\\take.rs","byte_start":652609,"byte_end":652612,"line_start":26,"line_end":26,"column_start":5,"column_end":8}},{"value":"/ # Note","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\io\\take.rs","byte_start":652617,"byte_end":652627,"line_start":27,"line_end":27,"column_start":5,"column_end":15}},{"value":"/","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\io\\take.rs","byte_start":652632,"byte_end":652635,"line_start":28,"line_end":28,"column_start":5,"column_end":8}},{"value":"/ This instance may reach `EOF` after reading fewer bytes than indicated by","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\io\\take.rs","byte_start":652640,"byte_end":652717,"line_start":29,"line_end":29,"column_start":5,"column_end":82}},{"value":"/ this method if the underlying [`AsyncRead`] instance reaches EOF.","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\io\\take.rs","byte_start":652722,"byte_end":652791,"line_start":30,"line_end":30,"column_start":5,"column_end":74}},{"value":"/","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\io\\take.rs","byte_start":652796,"byte_end":652799,"line_start":31,"line_end":31,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\io\\take.rs","byte_start":652804,"byte_end":652818,"line_start":32,"line_end":32,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\io\\take.rs","byte_start":652823,"byte_end":652826,"line_start":33,"line_end":33,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\io\\take.rs","byte_start":652831,"byte_end":652838,"line_start":34,"line_end":34,"column_start":5,"column_end":12}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\io\\take.rs","byte_start":652843,"byte_end":652884,"line_start":35,"line_end":35,"column_start":5,"column_end":46}},{"value":"/ use futures::io::{AsyncReadExt, Cursor};","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\io\\take.rs","byte_start":652889,"byte_end":652933,"line_start":36,"line_end":36,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\io\\take.rs","byte_start":652938,"byte_end":652941,"line_start":37,"line_end":37,"column_start":5,"column_end":8}},{"value":"/ let reader = Cursor::new(&b\"12345678\"[..]);","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\io\\take.rs","byte_start":652946,"byte_end":652993,"line_start":38,"line_end":38,"column_start":5,"column_end":52}},{"value":"/ let mut buffer = [0; 2];","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\io\\take.rs","byte_start":652998,"byte_end":653026,"line_start":39,"line_end":39,"column_start":5,"column_end":33}},{"value":"/","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\io\\take.rs","byte_start":653031,"byte_end":653034,"line_start":40,"line_end":40,"column_start":5,"column_end":8}},{"value":"/ let mut take = reader.take(4);","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\io\\take.rs","byte_start":653039,"byte_end":653073,"line_start":41,"line_end":41,"column_start":5,"column_end":39}},{"value":"/ let n = take.read(&mut buffer).await?;","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\io\\take.rs","byte_start":653078,"byte_end":653120,"line_start":42,"line_end":42,"column_start":5,"column_end":47}},{"value":"/","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\io\\take.rs","byte_start":653125,"byte_end":653128,"line_start":43,"line_end":43,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(take.limit(), 2);","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\io\\take.rs","byte_start":653133,"byte_end":653165,"line_start":44,"line_end":44,"column_start":5,"column_end":37}},{"value":"/ # Ok::<(), Box<dyn std::error::Error>>(()) }).unwrap();","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\io\\take.rs","byte_start":653170,"byte_end":653229,"line_start":45,"line_end":45,"column_start":5,"column_end":64}},{"value":"/ ```","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\io\\take.rs","byte_start":653234,"byte_end":653241,"line_start":46,"line_end":46,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":9218},"span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\io\\take.rs","byte_start":654169,"byte_end":654178,"line_start":77,"line_end":77,"column_start":12,"column_end":21},"name":"set_limit","qualname":"<Take<R>>::set_limit","value":"pub fn set_limit(&mut Self, u64)","parent":null,"children":[],"decl_id":null,"docs":" Sets the number of bytes that can be read before this instance will\n return EOF. This is the same as constructing a new `Take` instance, so\n the amount of bytes read and the previous limit value don't matter when\n calling this method.","sig":null,"attributes":[{"value":"/ Sets the number of bytes that can be read before this instance will","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\io\\take.rs","byte_start":653305,"byte_end":653376,"line_start":51,"line_end":51,"column_start":5,"column_end":76}},{"value":"/ return EOF. This is the same as constructing a new `Take` instance, so","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\io\\take.rs","byte_start":653381,"byte_end":653455,"line_start":52,"line_end":52,"column_start":5,"column_end":79}},{"value":"/ the amount of bytes read and the previous limit value don't matter when","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\io\\take.rs","byte_start":653460,"byte_end":653535,"line_start":53,"line_end":53,"column_start":5,"column_end":80}},{"value":"/ calling this method.","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\io\\take.rs","byte_start":653540,"byte_end":653564,"line_start":54,"line_end":54,"column_start":5,"column_end":29}},{"value":"/","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\io\\take.rs","byte_start":653569,"byte_end":653572,"line_start":55,"line_end":55,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\io\\take.rs","byte_start":653577,"byte_end":653591,"line_start":56,"line_end":56,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\io\\take.rs","byte_start":653596,"byte_end":653599,"line_start":57,"line_end":57,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\io\\take.rs","byte_start":653604,"byte_end":653611,"line_start":58,"line_end":58,"column_start":5,"column_end":12}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\io\\take.rs","byte_start":653616,"byte_end":653657,"line_start":59,"line_end":59,"column_start":5,"column_end":46}},{"value":"/ use futures::io::{AsyncReadExt, Cursor};","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\io\\take.rs","byte_start":653662,"byte_end":653706,"line_start":60,"line_end":60,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\io\\take.rs","byte_start":653711,"byte_end":653714,"line_start":61,"line_end":61,"column_start":5,"column_end":8}},{"value":"/ let reader = Cursor::new(&b\"12345678\"[..]);","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\io\\take.rs","byte_start":653719,"byte_end":653766,"line_start":62,"line_end":62,"column_start":5,"column_end":52}},{"value":"/ let mut buffer = [0; 4];","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\io\\take.rs","byte_start":653771,"byte_end":653799,"line_start":63,"line_end":63,"column_start":5,"column_end":33}},{"value":"/","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\io\\take.rs","byte_start":653804,"byte_end":653807,"line_start":64,"line_end":64,"column_start":5,"column_end":8}},{"value":"/ let mut take = reader.take(4);","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\io\\take.rs","byte_start":653812,"byte_end":653846,"line_start":65,"line_end":65,"column_start":5,"column_end":39}},{"value":"/ let n = take.read(&mut buffer).await?;","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\io\\take.rs","byte_start":653851,"byte_end":653893,"line_start":66,"line_end":66,"column_start":5,"column_end":47}},{"value":"/","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\io\\take.rs","byte_start":653898,"byte_end":653901,"line_start":67,"line_end":67,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(n, 4);","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\io\\take.rs","byte_start":653906,"byte_end":653927,"line_start":68,"line_end":68,"column_start":5,"column_end":26}},{"value":"/ assert_eq!(take.limit(), 0);","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\io\\take.rs","byte_start":653932,"byte_end":653964,"line_start":69,"line_end":69,"column_start":5,"column_end":37}},{"value":"/","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\io\\take.rs","byte_start":653969,"byte_end":653972,"line_start":70,"line_end":70,"column_start":5,"column_end":8}},{"value":"/ take.set_limit(10);","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\io\\take.rs","byte_start":653977,"byte_end":654000,"line_start":71,"line_end":71,"column_start":5,"column_end":28}},{"value":"/ let n = take.read(&mut buffer).await?;","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\io\\take.rs","byte_start":654005,"byte_end":654047,"line_start":72,"line_end":72,"column_start":5,"column_end":47}},{"value":"/ assert_eq!(n, 4);","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\io\\take.rs","byte_start":654052,"byte_end":654073,"line_start":73,"line_end":73,"column_start":5,"column_end":26}},{"value":"/","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\io\\take.rs","byte_start":654078,"byte_end":654081,"line_start":74,"line_end":74,"column_start":5,"column_end":8}},{"value":"/ # Ok::<(), Box<dyn std::error::Error>>(()) }).unwrap();","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\io\\take.rs","byte_start":654086,"byte_end":654145,"line_start":75,"line_end":75,"column_start":5,"column_end":64}},{"value":"/ ```","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\io\\take.rs","byte_start":654150,"byte_end":654157,"line_start":76,"line_end":76,"column_start":5,"column_end":12}}]},{"kind":"Struct","id":{"krate":0,"index":18058},"span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\io\\window.rs","byte_start":656602,"byte_end":656608,"line_start":21,"line_end":21,"column_start":12,"column_end":18},"name":"Window","qualname":"::io::window::Window","value":"Window {  }","parent":null,"children":[{"krate":0,"index":18060},{"krate":0,"index":18061}],"decl_id":null,"docs":" A owned window around an underlying buffer.","sig":null,"attributes":[{"value":"/ A owned window around an underlying buffer.","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\io\\window.rs","byte_start":655647,"byte_end":655694,"line_start":3,"line_end":3,"column_start":1,"column_end":48}},{"value":"/","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\io\\window.rs","byte_start":655695,"byte_end":655698,"line_start":4,"line_end":4,"column_start":1,"column_end":4}},{"value":"/ Normally slices work great for considering sub-portions of a buffer, but","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\io\\window.rs","byte_start":655699,"byte_end":655775,"line_start":5,"line_end":5,"column_start":1,"column_end":77}},{"value":"/ unfortunately a slice is a *borrowed* type in Rust which has an associated","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\io\\window.rs","byte_start":655776,"byte_end":655854,"line_start":6,"line_end":6,"column_start":1,"column_end":79}},{"value":"/ lifetime. When working with future and async I/O these lifetimes are not","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\io\\window.rs","byte_start":655855,"byte_end":655931,"line_start":7,"line_end":7,"column_start":1,"column_end":77}},{"value":"/ always appropriate, and are sometimes difficult to store in tasks. This","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\io\\window.rs","byte_start":655932,"byte_end":656007,"line_start":8,"line_end":8,"column_start":1,"column_end":76}},{"value":"/ type strives to fill this gap by providing an \"owned slice\" around an","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\io\\window.rs","byte_start":656008,"byte_end":656081,"line_start":9,"line_end":9,"column_start":1,"column_end":74}},{"value":"/ underlying buffer of bytes.","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\io\\window.rs","byte_start":656082,"byte_end":656113,"line_start":10,"line_end":10,"column_start":1,"column_end":32}},{"value":"/","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\io\\window.rs","byte_start":656114,"byte_end":656117,"line_start":11,"line_end":11,"column_start":1,"column_end":4}},{"value":"/ A `Window<T>` wraps an underlying buffer, `T`, and has configurable","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\io\\window.rs","byte_start":656118,"byte_end":656189,"line_start":12,"line_end":12,"column_start":1,"column_end":72}},{"value":"/ start/end indexes to alter the behavior of the `AsRef<[u8]>` implementation","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\io\\window.rs","byte_start":656190,"byte_end":656269,"line_start":13,"line_end":13,"column_start":1,"column_end":80}},{"value":"/ that this type carries.","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\io\\window.rs","byte_start":656270,"byte_end":656297,"line_start":14,"line_end":14,"column_start":1,"column_end":28}},{"value":"/","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\io\\window.rs","byte_start":656298,"byte_end":656301,"line_start":15,"line_end":15,"column_start":1,"column_end":4}},{"value":"/ This type can be particularly useful when working with the `write_all`","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\io\\window.rs","byte_start":656302,"byte_end":656376,"line_start":16,"line_end":16,"column_start":1,"column_end":75}},{"value":"/ combinator in this crate. Data can be sliced via `Window`, consumed by","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\io\\window.rs","byte_start":656377,"byte_end":656451,"line_start":17,"line_end":17,"column_start":1,"column_end":75}},{"value":"/ `write_all`, and then earned back once the write operation finishes through","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\io\\window.rs","byte_start":656452,"byte_end":656531,"line_start":18,"line_end":18,"column_start":1,"column_end":80}},{"value":"/ the `into_inner` method on this type.","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\io\\window.rs","byte_start":656532,"byte_end":656573,"line_start":19,"line_end":19,"column_start":1,"column_end":42}}]},{"kind":"Method","id":{"krate":0,"index":9242},"span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\io\\window.rs","byte_start":656917,"byte_end":656920,"line_start":32,"line_end":32,"column_start":12,"column_end":15},"name":"new","qualname":"<Window<T>>::new","value":"pub fn new(T) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Creates a new window around the buffer `t` defaulting to the entire\n slice.","sig":null,"attributes":[{"value":"/ Creates a new window around the buffer `t` defaulting to the entire","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\io\\window.rs","byte_start":656693,"byte_end":656764,"line_start":27,"line_end":27,"column_start":5,"column_end":76}},{"value":"/ slice.","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\io\\window.rs","byte_start":656769,"byte_end":656779,"line_start":28,"line_end":28,"column_start":5,"column_end":15}},{"value":"/","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\io\\window.rs","byte_start":656784,"byte_end":656787,"line_start":29,"line_end":29,"column_start":5,"column_end":8}},{"value":"/ Further methods can be called on the returned `Window<T>` to alter the","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\io\\window.rs","byte_start":656792,"byte_end":656866,"line_start":30,"line_end":30,"column_start":5,"column_end":79}},{"value":"/ window into the data provided.","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\io\\window.rs","byte_start":656871,"byte_end":656905,"line_start":31,"line_end":31,"column_start":5,"column_end":39}}]},{"kind":"Method","id":{"krate":0,"index":9243},"span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\io\\window.rs","byte_start":657099,"byte_end":657106,"line_start":38,"line_end":38,"column_start":12,"column_end":19},"name":"get_ref","qualname":"<Window<T>>::get_ref","value":"pub fn get_ref(&Self) -> &T","parent":null,"children":[],"decl_id":null,"docs":" Gets a shared reference to the underlying buffer inside of this\n `Window`.\n","sig":null,"attributes":[{"value":"/ Gets a shared reference to the underlying buffer inside of this","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\io\\window.rs","byte_start":657002,"byte_end":657069,"line_start":36,"line_end":36,"column_start":5,"column_end":72}},{"value":"/ `Window`.","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\io\\window.rs","byte_start":657074,"byte_end":657087,"line_start":37,"line_end":37,"column_start":5,"column_end":18}}]},{"kind":"Method","id":{"krate":0,"index":9244},"span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\io\\window.rs","byte_start":657251,"byte_end":657258,"line_start":44,"line_end":44,"column_start":12,"column_end":19},"name":"get_mut","qualname":"<Window<T>>::get_mut","value":"pub fn get_mut(&mut Self) -> &mut T","parent":null,"children":[],"decl_id":null,"docs":" Gets a mutable reference to the underlying buffer inside of this\n `Window`.\n","sig":null,"attributes":[{"value":"/ Gets a mutable reference to the underlying buffer inside of this","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\io\\window.rs","byte_start":657153,"byte_end":657221,"line_start":42,"line_end":42,"column_start":5,"column_end":73}},{"value":"/ `Window`.","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\io\\window.rs","byte_start":657226,"byte_end":657239,"line_start":43,"line_end":43,"column_start":5,"column_end":18}}]},{"kind":"Method","id":{"krate":0,"index":9245},"span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\io\\window.rs","byte_start":657389,"byte_end":657399,"line_start":49,"line_end":49,"column_start":12,"column_end":22},"name":"into_inner","qualname":"<Window<T>>::into_inner","value":"pub fn into_inner(Self) -> T","parent":null,"children":[],"decl_id":null,"docs":" Consumes this `Window`, returning the underlying buffer.\n","sig":null,"attributes":[{"value":"/ Consumes this `Window`, returning the underlying buffer.","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\io\\window.rs","byte_start":657317,"byte_end":657377,"line_start":48,"line_end":48,"column_start":5,"column_end":65}}]},{"kind":"Method","id":{"krate":0,"index":9246},"span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\io\\window.rs","byte_start":657540,"byte_end":657545,"line_start":55,"line_end":55,"column_start":12,"column_end":17},"name":"start","qualname":"<Window<T>>::start","value":"pub fn start(&Self) -> usize","parent":null,"children":[],"decl_id":null,"docs":" Returns the starting index of this window into the underlying buffer\n `T`.\n","sig":null,"attributes":[{"value":"/ Returns the starting index of this window into the underlying buffer","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\io\\window.rs","byte_start":657443,"byte_end":657515,"line_start":53,"line_end":53,"column_start":5,"column_end":77}},{"value":"/ `T`.","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\io\\window.rs","byte_start":657520,"byte_end":657528,"line_start":54,"line_end":54,"column_start":5,"column_end":13}}]},{"kind":"Method","id":{"krate":0,"index":9247},"span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\io\\window.rs","byte_start":657692,"byte_end":657695,"line_start":61,"line_end":61,"column_start":12,"column_end":15},"name":"end","qualname":"<Window<T>>::end","value":"pub fn end(&Self) -> usize","parent":null,"children":[],"decl_id":null,"docs":" Returns the end index of this window into the underlying buffer\n `T`.\n","sig":null,"attributes":[{"value":"/ Returns the end index of this window into the underlying buffer","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\io\\window.rs","byte_start":657600,"byte_end":657667,"line_start":59,"line_end":59,"column_start":5,"column_end":72}},{"value":"/ `T`.","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\io\\window.rs","byte_start":657672,"byte_end":657680,"line_start":60,"line_end":60,"column_start":5,"column_end":13}}]},{"kind":"Method","id":{"krate":0,"index":9248},"span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\io\\window.rs","byte_start":658141,"byte_end":658144,"line_start":74,"line_end":74,"column_start":12,"column_end":15},"name":"set","qualname":"<Window<T>>::set","value":"pub fn set<R: RangeBounds<usize>>(&mut Self, R)","parent":null,"children":[],"decl_id":null,"docs":" Changes the range of this window to the range specified.","sig":null,"attributes":[{"value":"/ Changes the range of this window to the range specified.","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\io\\window.rs","byte_start":657748,"byte_end":657808,"line_start":65,"line_end":65,"column_start":5,"column_end":65}},{"value":"/","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\io\\window.rs","byte_start":657813,"byte_end":657816,"line_start":66,"line_end":66,"column_start":5,"column_end":8}},{"value":"/ # Panics","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\io\\window.rs","byte_start":657821,"byte_end":657833,"line_start":67,"line_end":67,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\io\\window.rs","byte_start":657838,"byte_end":657841,"line_start":68,"line_end":68,"column_start":5,"column_end":8}},{"value":"/ This method will panic if `range` is out of bounds for the underlying","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\io\\window.rs","byte_start":657846,"byte_end":657919,"line_start":69,"line_end":69,"column_start":5,"column_end":78}},{"value":"/ slice or if [`start_bound()`] of `range` comes after the [`end_bound()`].","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\io\\window.rs","byte_start":657924,"byte_end":658001,"line_start":70,"line_end":70,"column_start":5,"column_end":82}},{"value":"/","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\io\\window.rs","byte_start":658006,"byte_end":658009,"line_start":71,"line_end":71,"column_start":5,"column_end":8}},{"value":"/ [`start_bound()`]: std::ops::RangeBounds::start_bound","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\io\\window.rs","byte_start":658014,"byte_end":658071,"line_start":72,"line_end":72,"column_start":5,"column_end":62}},{"value":"/ [`end_bound()`]: std::ops::RangeBounds::end_bound","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\io\\window.rs","byte_start":658076,"byte_end":658129,"line_start":73,"line_end":73,"column_start":5,"column_end":58}}]},{"kind":"Struct","id":{"krate":0,"index":18065},"span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\io\\write.rs","byte_start":659331,"byte_end":659336,"line_start":10,"line_end":10,"column_start":12,"column_end":17},"name":"Write","qualname":"::io::write::Write","value":"Write {  }","parent":null,"children":[{"krate":0,"index":18068},{"krate":0,"index":18069}],"decl_id":null,"docs":" Future for the [`write`](super::AsyncWriteExt::write) method.\n","sig":null,"attributes":[{"value":"/ Future for the [`write`](super::AsyncWriteExt::write) method.","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\io\\write.rs","byte_start":659169,"byte_end":659234,"line_start":7,"line_end":7,"column_start":1,"column_end":66}},{"value":"must_use = \"futures do nothing unless you `.await` or poll them\"","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\io\\write.rs","byte_start":659252,"byte_end":659319,"line_start":9,"line_end":9,"column_start":1,"column_end":68}}]},{"kind":"Struct","id":{"krate":0,"index":18074},"span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\io\\write_vectored.rs","byte_start":660227,"byte_end":660240,"line_start":10,"line_end":10,"column_start":12,"column_end":25},"name":"WriteVectored","qualname":"::io::write_vectored::WriteVectored","value":"WriteVectored {  }","parent":null,"children":[{"krate":0,"index":18077},{"krate":0,"index":18078}],"decl_id":null,"docs":" Future for the [`write_vectored`](super::AsyncWriteExt::write_vectored) method.\n","sig":null,"attributes":[{"value":"/ Future for the [`write_vectored`](super::AsyncWriteExt::write_vectored) method.","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\io\\write_vectored.rs","byte_start":660047,"byte_end":660130,"line_start":7,"line_end":7,"column_start":1,"column_end":84}},{"value":"must_use = \"futures do nothing unless you `.await` or poll them\"","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\io\\write_vectored.rs","byte_start":660148,"byte_end":660215,"line_start":9,"line_end":9,"column_start":1,"column_end":68}}]},{"kind":"Struct","id":{"krate":0,"index":18083},"span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\io\\write_all.rs","byte_start":661199,"byte_end":661207,"line_start":12,"line_end":12,"column_start":12,"column_end":20},"name":"WriteAll","qualname":"::io::write_all::WriteAll","value":"WriteAll {  }","parent":null,"children":[{"krate":0,"index":18086},{"krate":0,"index":18087}],"decl_id":null,"docs":" Future for the [`write_all`](super::AsyncWriteExt::write_all) method.\n","sig":null,"attributes":[{"value":"/ Future for the [`write_all`](super::AsyncWriteExt::write_all) method.","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\io\\write_all.rs","byte_start":661029,"byte_end":661102,"line_start":9,"line_end":9,"column_start":1,"column_end":74}},{"value":"must_use = \"futures do nothing unless you `.await` or poll them\"","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\io\\write_all.rs","byte_start":661120,"byte_end":661187,"line_start":11,"line_end":11,"column_start":1,"column_end":68}}]},{"kind":"Trait","id":{"krate":0,"index":9368},"span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\io\\mod.rs","byte_start":556829,"byte_end":556841,"line_start":145,"line_end":145,"column_start":11,"column_end":23},"name":"AsyncReadExt","qualname":"::io::AsyncReadExt","value":"AsyncReadExt: AsyncRead","parent":null,"children":[{"krate":0,"index":9369},{"krate":0,"index":9371},{"krate":0,"index":9373},{"krate":0,"index":9375},{"krate":0,"index":9377},{"krate":0,"index":9379},{"krate":0,"index":9381},{"krate":0,"index":9382}],"decl_id":null,"docs":" An extension trait which adds utility methods to `AsyncRead` types.\n","sig":null,"attributes":[{"value":"/ An extension trait which adds utility methods to `AsyncRead` types.","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\io\\mod.rs","byte_start":556747,"byte_end":556818,"line_start":144,"line_end":144,"column_start":1,"column_end":72}}]},{"kind":"Method","id":{"krate":0,"index":9369},"span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\io\\mod.rs","byte_start":557694,"byte_end":557699,"line_start":169,"line_end":169,"column_start":8,"column_end":13},"name":"chain","qualname":"::io::AsyncReadExt::chain","value":"pub fn chain<R>(Self, R) -> Chain<Self, R> where Self: Sized, R: AsyncRead","parent":{"krate":0,"index":9368},"children":[],"decl_id":null,"docs":" Creates an adaptor which will chain this stream with another.","sig":null,"attributes":[{"value":"/ Creates an adaptor which will chain this stream with another.","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\io\\mod.rs","byte_start":556859,"byte_end":556924,"line_start":146,"line_end":146,"column_start":5,"column_end":70}},{"value":"/","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\io\\mod.rs","byte_start":556929,"byte_end":556932,"line_start":147,"line_end":147,"column_start":5,"column_end":8}},{"value":"/ The returned `AsyncRead` instance will first read all bytes from this object","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\io\\mod.rs","byte_start":556937,"byte_end":557017,"line_start":148,"line_end":148,"column_start":5,"column_end":85}},{"value":"/ until EOF is encountered. Afterwards the output is equivalent to the","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\io\\mod.rs","byte_start":557022,"byte_end":557094,"line_start":149,"line_end":149,"column_start":5,"column_end":77}},{"value":"/ output of `next`.","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\io\\mod.rs","byte_start":557099,"byte_end":557120,"line_start":150,"line_end":150,"column_start":5,"column_end":26}},{"value":"/","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\io\\mod.rs","byte_start":557125,"byte_end":557128,"line_start":151,"line_end":151,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\io\\mod.rs","byte_start":557133,"byte_end":557147,"line_start":152,"line_end":152,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\io\\mod.rs","byte_start":557152,"byte_end":557155,"line_start":153,"line_end":153,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\io\\mod.rs","byte_start":557160,"byte_end":557167,"line_start":154,"line_end":154,"column_start":5,"column_end":12}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\io\\mod.rs","byte_start":557172,"byte_end":557213,"line_start":155,"line_end":155,"column_start":5,"column_end":46}},{"value":"/ use futures::io::{AsyncReadExt, Cursor};","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\io\\mod.rs","byte_start":557218,"byte_end":557262,"line_start":156,"line_end":156,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\io\\mod.rs","byte_start":557267,"byte_end":557270,"line_start":157,"line_end":157,"column_start":5,"column_end":8}},{"value":"/ let reader1 = Cursor::new([1, 2, 3, 4]);","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\io\\mod.rs","byte_start":557275,"byte_end":557319,"line_start":158,"line_end":158,"column_start":5,"column_end":49}},{"value":"/ let reader2 = Cursor::new([5, 6, 7, 8]);","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\io\\mod.rs","byte_start":557324,"byte_end":557368,"line_start":159,"line_end":159,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\io\\mod.rs","byte_start":557373,"byte_end":557376,"line_start":160,"line_end":160,"column_start":5,"column_end":8}},{"value":"/ let mut reader = reader1.chain(reader2);","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\io\\mod.rs","byte_start":557381,"byte_end":557425,"line_start":161,"line_end":161,"column_start":5,"column_end":49}},{"value":"/ let mut buffer = Vec::new();","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\io\\mod.rs","byte_start":557430,"byte_end":557462,"line_start":162,"line_end":162,"column_start":5,"column_end":37}},{"value":"/","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\io\\mod.rs","byte_start":557467,"byte_end":557470,"line_start":163,"line_end":163,"column_start":5,"column_end":8}},{"value":"/ // read the value into a Vec.","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\io\\mod.rs","byte_start":557475,"byte_end":557508,"line_start":164,"line_end":164,"column_start":5,"column_end":38}},{"value":"/ reader.read_to_end(&mut buffer).await?;","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\io\\mod.rs","byte_start":557513,"byte_end":557556,"line_start":165,"line_end":165,"column_start":5,"column_end":48}},{"value":"/ assert_eq!(buffer, [1, 2, 3, 4, 5, 6, 7, 8]);","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\io\\mod.rs","byte_start":557561,"byte_end":557610,"line_start":166,"line_end":166,"column_start":5,"column_end":54}},{"value":"/ # Ok::<(), Box<dyn std::error::Error>>(()) }).unwrap();","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\io\\mod.rs","byte_start":557615,"byte_end":557674,"line_start":167,"line_end":167,"column_start":5,"column_end":64}},{"value":"/ ```","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\io\\mod.rs","byte_start":557679,"byte_end":557686,"line_start":168,"line_end":168,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":9371},"span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\io\\mod.rs","byte_start":558752,"byte_end":558756,"line_start":201,"line_end":201,"column_start":8,"column_end":12},"name":"read","qualname":"::io::AsyncReadExt::read","value":"pub fn read<'a>(&'a mut Self, &'a mut [u8]) -> Read where Self: Unpin","parent":{"krate":0,"index":9368},"children":[],"decl_id":null,"docs":" Tries to read some bytes directly into the given `buf` in asynchronous\n manner, returning a future type.","sig":null,"attributes":[{"value":"/ Tries to read some bytes directly into the given `buf` in asynchronous","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\io\\mod.rs","byte_start":557850,"byte_end":557924,"line_start":177,"line_end":177,"column_start":5,"column_end":79}},{"value":"/ manner, returning a future type.","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\io\\mod.rs","byte_start":557929,"byte_end":557965,"line_start":178,"line_end":178,"column_start":5,"column_end":41}},{"value":"/","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\io\\mod.rs","byte_start":557970,"byte_end":557973,"line_start":179,"line_end":179,"column_start":5,"column_end":8}},{"value":"/ The returned future will resolve to the number of bytes read once the read","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\io\\mod.rs","byte_start":557978,"byte_end":558056,"line_start":180,"line_end":180,"column_start":5,"column_end":83}},{"value":"/ operation is completed.","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\io\\mod.rs","byte_start":558061,"byte_end":558088,"line_start":181,"line_end":181,"column_start":5,"column_end":32}},{"value":"/","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\io\\mod.rs","byte_start":558093,"byte_end":558096,"line_start":182,"line_end":182,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\io\\mod.rs","byte_start":558101,"byte_end":558115,"line_start":183,"line_end":183,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\io\\mod.rs","byte_start":558120,"byte_end":558123,"line_start":184,"line_end":184,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\io\\mod.rs","byte_start":558128,"byte_end":558135,"line_start":185,"line_end":185,"column_start":5,"column_end":12}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\io\\mod.rs","byte_start":558140,"byte_end":558181,"line_start":186,"line_end":186,"column_start":5,"column_end":46}},{"value":"/ use futures::io::{AsyncReadExt, Cursor};","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\io\\mod.rs","byte_start":558186,"byte_end":558230,"line_start":187,"line_end":187,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\io\\mod.rs","byte_start":558235,"byte_end":558238,"line_start":188,"line_end":188,"column_start":5,"column_end":8}},{"value":"/ let mut reader = Cursor::new([1, 2, 3, 4]);","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\io\\mod.rs","byte_start":558243,"byte_end":558290,"line_start":189,"line_end":189,"column_start":5,"column_end":52}},{"value":"/ let mut output = [0u8; 5];","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\io\\mod.rs","byte_start":558295,"byte_end":558325,"line_start":190,"line_end":190,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\io\\mod.rs","byte_start":558330,"byte_end":558333,"line_start":191,"line_end":191,"column_start":5,"column_end":8}},{"value":"/ let bytes = reader.read(&mut output[..]).await?;","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\io\\mod.rs","byte_start":558338,"byte_end":558390,"line_start":192,"line_end":192,"column_start":5,"column_end":57}},{"value":"/","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\io\\mod.rs","byte_start":558395,"byte_end":558398,"line_start":193,"line_end":193,"column_start":5,"column_end":8}},{"value":"/ // This is only guaranteed to be 4 because `&[u8]` is a synchronous","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\io\\mod.rs","byte_start":558403,"byte_end":558474,"line_start":194,"line_end":194,"column_start":5,"column_end":76}},{"value":"/ // reader. In a real system you could get anywhere from 1 to","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\io\\mod.rs","byte_start":558479,"byte_end":558543,"line_start":195,"line_end":195,"column_start":5,"column_end":69}},{"value":"/ // `output.len()` bytes in a single read.","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\io\\mod.rs","byte_start":558548,"byte_end":558593,"line_start":196,"line_end":196,"column_start":5,"column_end":50}},{"value":"/ assert_eq!(bytes, 4);","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\io\\mod.rs","byte_start":558598,"byte_end":558623,"line_start":197,"line_end":197,"column_start":5,"column_end":30}},{"value":"/ assert_eq!(output, [1, 2, 3, 4, 0]);","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\io\\mod.rs","byte_start":558628,"byte_end":558668,"line_start":198,"line_end":198,"column_start":5,"column_end":45}},{"value":"/ # Ok::<(), Box<dyn std::error::Error>>(()) }).unwrap();","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\io\\mod.rs","byte_start":558673,"byte_end":558732,"line_start":199,"line_end":199,"column_start":5,"column_end":64}},{"value":"/ ```","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\io\\mod.rs","byte_start":558737,"byte_end":558744,"line_start":200,"line_end":200,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":9373},"span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\io\\mod.rs","byte_start":559162,"byte_end":559175,"line_start":213,"line_end":213,"column_start":8,"column_end":21},"name":"read_vectored","qualname":"::io::AsyncReadExt::read_vectored","value":"pub fn read_vectored<'a>(&'a mut Self, &'a mut [IoSliceMut]) -> ReadVectored\nwhere Self: Unpin","parent":{"krate":0,"index":9368},"children":[],"decl_id":null,"docs":" Creates a future which will read from the `AsyncRead` into `bufs` using vectored\n IO operations.","sig":null,"attributes":[{"value":"/ Creates a future which will read from the `AsyncRead` into `bufs` using vectored","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\io\\mod.rs","byte_start":558924,"byte_end":559008,"line_start":208,"line_end":208,"column_start":5,"column_end":89}},{"value":"/ IO operations.","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\io\\mod.rs","byte_start":559013,"byte_end":559031,"line_start":209,"line_end":209,"column_start":5,"column_end":23}},{"value":"/","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\io\\mod.rs","byte_start":559036,"byte_end":559039,"line_start":210,"line_end":210,"column_start":5,"column_end":8}},{"value":"/ The returned future will resolve to the number of bytes read once the read","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\io\\mod.rs","byte_start":559044,"byte_end":559122,"line_start":211,"line_end":211,"column_start":5,"column_end":83}},{"value":"/ operation is completed.","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\io\\mod.rs","byte_start":559127,"byte_end":559154,"line_start":212,"line_end":212,"column_start":5,"column_end":32}}]},{"kind":"Method","id":{"krate":0,"index":9375},"span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\io\\mod.rs","byte_start":560586,"byte_end":560596,"line_start":257,"line_end":257,"column_start":8,"column_end":18},"name":"read_exact","qualname":"::io::AsyncReadExt::read_exact","value":"pub fn read_exact<'a>(&'a mut Self, &'a mut [u8]) -> ReadExact where\nSelf: Unpin","parent":{"krate":0,"index":9368},"children":[],"decl_id":null,"docs":" Creates a future which will read exactly enough bytes to fill `buf`,\n returning an error if end of file (EOF) is hit sooner.","sig":null,"attributes":[{"value":"/ Creates a future which will read exactly enough bytes to fill `buf`,","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\io\\mod.rs","byte_start":559373,"byte_end":559445,"line_start":220,"line_end":220,"column_start":5,"column_end":77}},{"value":"/ returning an error if end of file (EOF) is hit sooner.","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\io\\mod.rs","byte_start":559450,"byte_end":559508,"line_start":221,"line_end":221,"column_start":5,"column_end":63}},{"value":"/","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\io\\mod.rs","byte_start":559513,"byte_end":559516,"line_start":222,"line_end":222,"column_start":5,"column_end":8}},{"value":"/ The returned future will resolve once the read operation is completed.","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\io\\mod.rs","byte_start":559521,"byte_end":559595,"line_start":223,"line_end":223,"column_start":5,"column_end":79}},{"value":"/","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\io\\mod.rs","byte_start":559600,"byte_end":559603,"line_start":224,"line_end":224,"column_start":5,"column_end":8}},{"value":"/ In the case of an error the buffer and the object will be discarded, with","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\io\\mod.rs","byte_start":559608,"byte_end":559685,"line_start":225,"line_end":225,"column_start":5,"column_end":82}},{"value":"/ the error yielded.","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\io\\mod.rs","byte_start":559690,"byte_end":559712,"line_start":226,"line_end":226,"column_start":5,"column_end":27}},{"value":"/","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\io\\mod.rs","byte_start":559717,"byte_end":559720,"line_start":227,"line_end":227,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\io\\mod.rs","byte_start":559725,"byte_end":559739,"line_start":228,"line_end":228,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\io\\mod.rs","byte_start":559744,"byte_end":559747,"line_start":229,"line_end":229,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\io\\mod.rs","byte_start":559752,"byte_end":559759,"line_start":230,"line_end":230,"column_start":5,"column_end":12}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\io\\mod.rs","byte_start":559764,"byte_end":559805,"line_start":231,"line_end":231,"column_start":5,"column_end":46}},{"value":"/ use futures::io::{AsyncReadExt, Cursor};","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\io\\mod.rs","byte_start":559810,"byte_end":559854,"line_start":232,"line_end":232,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\io\\mod.rs","byte_start":559859,"byte_end":559862,"line_start":233,"line_end":233,"column_start":5,"column_end":8}},{"value":"/ let mut reader = Cursor::new([1, 2, 3, 4]);","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\io\\mod.rs","byte_start":559867,"byte_end":559914,"line_start":234,"line_end":234,"column_start":5,"column_end":52}},{"value":"/ let mut output = [0u8; 4];","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\io\\mod.rs","byte_start":559919,"byte_end":559949,"line_start":235,"line_end":235,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\io\\mod.rs","byte_start":559954,"byte_end":559957,"line_start":236,"line_end":236,"column_start":5,"column_end":8}},{"value":"/ reader.read_exact(&mut output).await?;","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\io\\mod.rs","byte_start":559962,"byte_end":560004,"line_start":237,"line_end":237,"column_start":5,"column_end":47}},{"value":"/","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\io\\mod.rs","byte_start":560009,"byte_end":560012,"line_start":238,"line_end":238,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(output, [1, 2, 3, 4]);","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\io\\mod.rs","byte_start":560017,"byte_end":560054,"line_start":239,"line_end":239,"column_start":5,"column_end":42}},{"value":"/ # Ok::<(), Box<dyn std::error::Error>>(()) }).unwrap();","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\io\\mod.rs","byte_start":560059,"byte_end":560118,"line_start":240,"line_end":240,"column_start":5,"column_end":64}},{"value":"/ ```","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\io\\mod.rs","byte_start":560123,"byte_end":560130,"line_start":241,"line_end":241,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\io\\mod.rs","byte_start":560135,"byte_end":560138,"line_start":242,"line_end":242,"column_start":5,"column_end":8}},{"value":"/ ## EOF is hit before `buf` is filled","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\io\\mod.rs","byte_start":560143,"byte_end":560183,"line_start":243,"line_end":243,"column_start":5,"column_end":45}},{"value":"/","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\io\\mod.rs","byte_start":560188,"byte_end":560191,"line_start":244,"line_end":244,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\io\\mod.rs","byte_start":560196,"byte_end":560203,"line_start":245,"line_end":245,"column_start":5,"column_end":12}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\io\\mod.rs","byte_start":560208,"byte_end":560249,"line_start":246,"line_end":246,"column_start":5,"column_end":46}},{"value":"/ use futures::io::{self, AsyncReadExt, Cursor};","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\io\\mod.rs","byte_start":560254,"byte_end":560304,"line_start":247,"line_end":247,"column_start":5,"column_end":55}},{"value":"/","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\io\\mod.rs","byte_start":560309,"byte_end":560312,"line_start":248,"line_end":248,"column_start":5,"column_end":8}},{"value":"/ let mut reader = Cursor::new([1, 2, 3, 4]);","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\io\\mod.rs","byte_start":560317,"byte_end":560364,"line_start":249,"line_end":249,"column_start":5,"column_end":52}},{"value":"/ let mut output = [0u8; 5];","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\io\\mod.rs","byte_start":560369,"byte_end":560399,"line_start":250,"line_end":250,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\io\\mod.rs","byte_start":560404,"byte_end":560407,"line_start":251,"line_end":251,"column_start":5,"column_end":8}},{"value":"/ let result = reader.read_exact(&mut output).await;","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\io\\mod.rs","byte_start":560412,"byte_end":560466,"line_start":252,"line_end":252,"column_start":5,"column_end":59}},{"value":"/","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\io\\mod.rs","byte_start":560471,"byte_end":560474,"line_start":253,"line_end":253,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(result.unwrap_err().kind(), io::ErrorKind::UnexpectedEof);","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\io\\mod.rs","byte_start":560479,"byte_end":560552,"line_start":254,"line_end":254,"column_start":5,"column_end":78}},{"value":"/ # });","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\io\\mod.rs","byte_start":560557,"byte_end":560566,"line_start":255,"line_end":255,"column_start":5,"column_end":14}},{"value":"/ ```","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\io\\mod.rs","byte_start":560571,"byte_end":560578,"line_start":256,"line_end":256,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":9377},"span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\io\\mod.rs","byte_start":561401,"byte_end":561412,"line_start":283,"line_end":283,"column_start":8,"column_end":19},"name":"read_to_end","qualname":"::io::AsyncReadExt::read_to_end","value":"pub fn read_to_end<'a>(&'a mut Self, &'a mut Vec<u8>) -> ReadToEnd where\nSelf: Unpin","parent":{"krate":0,"index":9368},"children":[],"decl_id":null,"docs":" Creates a future which will read all the bytes from this `AsyncRead`.","sig":null,"attributes":[{"value":"/ Creates a future which will read all the bytes from this `AsyncRead`.","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\io\\mod.rs","byte_start":560771,"byte_end":560844,"line_start":264,"line_end":264,"column_start":5,"column_end":78}},{"value":"/","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\io\\mod.rs","byte_start":560849,"byte_end":560852,"line_start":265,"line_end":265,"column_start":5,"column_end":8}},{"value":"/ On success the total number of bytes read is returned.","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\io\\mod.rs","byte_start":560857,"byte_end":560915,"line_start":266,"line_end":266,"column_start":5,"column_end":63}},{"value":"/","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\io\\mod.rs","byte_start":560920,"byte_end":560923,"line_start":267,"line_end":267,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\io\\mod.rs","byte_start":560928,"byte_end":560942,"line_start":268,"line_end":268,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\io\\mod.rs","byte_start":560947,"byte_end":560950,"line_start":269,"line_end":269,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\io\\mod.rs","byte_start":560955,"byte_end":560962,"line_start":270,"line_end":270,"column_start":5,"column_end":12}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\io\\mod.rs","byte_start":560967,"byte_end":561008,"line_start":271,"line_end":271,"column_start":5,"column_end":46}},{"value":"/ use futures::io::{AsyncReadExt, Cursor};","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\io\\mod.rs","byte_start":561013,"byte_end":561057,"line_start":272,"line_end":272,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\io\\mod.rs","byte_start":561062,"byte_end":561065,"line_start":273,"line_end":273,"column_start":5,"column_end":8}},{"value":"/ let mut reader = Cursor::new([1, 2, 3, 4]);","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\io\\mod.rs","byte_start":561070,"byte_end":561117,"line_start":274,"line_end":274,"column_start":5,"column_end":52}},{"value":"/ let mut output = Vec::with_capacity(4);","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\io\\mod.rs","byte_start":561122,"byte_end":561165,"line_start":275,"line_end":275,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\io\\mod.rs","byte_start":561170,"byte_end":561173,"line_start":276,"line_end":276,"column_start":5,"column_end":8}},{"value":"/ let bytes = reader.read_to_end(&mut output).await?;","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\io\\mod.rs","byte_start":561178,"byte_end":561233,"line_start":277,"line_end":277,"column_start":5,"column_end":60}},{"value":"/","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\io\\mod.rs","byte_start":561238,"byte_end":561241,"line_start":278,"line_end":278,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(bytes, 4);","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\io\\mod.rs","byte_start":561246,"byte_end":561271,"line_start":279,"line_end":279,"column_start":5,"column_end":30}},{"value":"/ assert_eq!(output, vec![1, 2, 3, 4]);","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\io\\mod.rs","byte_start":561276,"byte_end":561317,"line_start":280,"line_end":280,"column_start":5,"column_end":46}},{"value":"/ # Ok::<(), Box<dyn std::error::Error>>(()) }).unwrap();","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\io\\mod.rs","byte_start":561322,"byte_end":561381,"line_start":281,"line_end":281,"column_start":5,"column_end":64}},{"value":"/ ```","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\io\\mod.rs","byte_start":561386,"byte_end":561393,"line_start":282,"line_end":282,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":9379},"span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\io\\mod.rs","byte_start":562233,"byte_end":562247,"line_start":309,"line_end":309,"column_start":8,"column_end":22},"name":"read_to_string","qualname":"::io::AsyncReadExt::read_to_string","value":"pub fn read_to_string<'a>(&'a mut Self, &'a mut String) -> ReadToString where\nSelf: Unpin","parent":{"krate":0,"index":9368},"children":[],"decl_id":null,"docs":" Creates a future which will read all the bytes from this `AsyncRead`.","sig":null,"attributes":[{"value":"/ Creates a future which will read all the bytes from this `AsyncRead`.","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\io\\mod.rs","byte_start":561593,"byte_end":561666,"line_start":290,"line_end":290,"column_start":5,"column_end":78}},{"value":"/","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\io\\mod.rs","byte_start":561671,"byte_end":561674,"line_start":291,"line_end":291,"column_start":5,"column_end":8}},{"value":"/ On success the total number of bytes read is returned.","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\io\\mod.rs","byte_start":561679,"byte_end":561737,"line_start":292,"line_end":292,"column_start":5,"column_end":63}},{"value":"/","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\io\\mod.rs","byte_start":561742,"byte_end":561745,"line_start":293,"line_end":293,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\io\\mod.rs","byte_start":561750,"byte_end":561764,"line_start":294,"line_end":294,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\io\\mod.rs","byte_start":561769,"byte_end":561772,"line_start":295,"line_end":295,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\io\\mod.rs","byte_start":561777,"byte_end":561784,"line_start":296,"line_end":296,"column_start":5,"column_end":12}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\io\\mod.rs","byte_start":561789,"byte_end":561830,"line_start":297,"line_end":297,"column_start":5,"column_end":46}},{"value":"/ use futures::io::{AsyncReadExt, Cursor};","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\io\\mod.rs","byte_start":561835,"byte_end":561879,"line_start":298,"line_end":298,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\io\\mod.rs","byte_start":561884,"byte_end":561887,"line_start":299,"line_end":299,"column_start":5,"column_end":8}},{"value":"/ let mut reader = Cursor::new(&b\"1234\"[..]);","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\io\\mod.rs","byte_start":561892,"byte_end":561939,"line_start":300,"line_end":300,"column_start":5,"column_end":52}},{"value":"/ let mut buffer = String::with_capacity(4);","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\io\\mod.rs","byte_start":561944,"byte_end":561990,"line_start":301,"line_end":301,"column_start":5,"column_end":51}},{"value":"/","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\io\\mod.rs","byte_start":561995,"byte_end":561998,"line_start":302,"line_end":302,"column_start":5,"column_end":8}},{"value":"/ let bytes = reader.read_to_string(&mut buffer).await?;","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\io\\mod.rs","byte_start":562003,"byte_end":562061,"line_start":303,"line_end":303,"column_start":5,"column_end":63}},{"value":"/","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\io\\mod.rs","byte_start":562066,"byte_end":562069,"line_start":304,"line_end":304,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(bytes, 4);","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\io\\mod.rs","byte_start":562074,"byte_end":562099,"line_start":305,"line_end":305,"column_start":5,"column_end":30}},{"value":"/ assert_eq!(buffer, String::from(\"1234\"));","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\io\\mod.rs","byte_start":562104,"byte_end":562149,"line_start":306,"line_end":306,"column_start":5,"column_end":50}},{"value":"/ # Ok::<(), Box<dyn std::error::Error>>(()) }).unwrap();","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\io\\mod.rs","byte_start":562154,"byte_end":562213,"line_start":307,"line_end":307,"column_start":5,"column_end":64}},{"value":"/ ```","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\io\\mod.rs","byte_start":562218,"byte_end":562225,"line_start":308,"line_end":308,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":9381},"span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\io\\mod.rs","byte_start":563590,"byte_end":563595,"line_start":345,"line_end":345,"column_start":8,"column_end":13},"name":"split","qualname":"::io::AsyncReadExt::split","value":"pub fn split(Self) -> (ReadHalf<Self>, WriteHalf<Self>) where\nSelf: AsyncWrite + Sized","parent":{"krate":0,"index":9368},"children":[],"decl_id":null,"docs":" Helper method for splitting this read/write object into two halves.","sig":null,"attributes":[{"value":"/ Helper method for splitting this read/write object into two halves.","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\io\\mod.rs","byte_start":562433,"byte_end":562504,"line_start":316,"line_end":316,"column_start":5,"column_end":76}},{"value":"/","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\io\\mod.rs","byte_start":562509,"byte_end":562512,"line_start":317,"line_end":317,"column_start":5,"column_end":8}},{"value":"/ The two halves returned implement the `AsyncRead` and `AsyncWrite`","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\io\\mod.rs","byte_start":562517,"byte_end":562587,"line_start":318,"line_end":318,"column_start":5,"column_end":75}},{"value":"/ traits, respectively.","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\io\\mod.rs","byte_start":562592,"byte_end":562617,"line_start":319,"line_end":319,"column_start":5,"column_end":30}},{"value":"/","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\io\\mod.rs","byte_start":562622,"byte_end":562625,"line_start":320,"line_end":320,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\io\\mod.rs","byte_start":562630,"byte_end":562644,"line_start":321,"line_end":321,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\io\\mod.rs","byte_start":562649,"byte_end":562652,"line_start":322,"line_end":322,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\io\\mod.rs","byte_start":562657,"byte_end":562664,"line_start":323,"line_end":323,"column_start":5,"column_end":12}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\io\\mod.rs","byte_start":562669,"byte_end":562710,"line_start":324,"line_end":324,"column_start":5,"column_end":46}},{"value":"/ use futures::io::{self, AsyncReadExt, Cursor};","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\io\\mod.rs","byte_start":562715,"byte_end":562765,"line_start":325,"line_end":325,"column_start":5,"column_end":55}},{"value":"/","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\io\\mod.rs","byte_start":562770,"byte_end":562773,"line_start":326,"line_end":326,"column_start":5,"column_end":8}},{"value":"/ // Note that for `Cursor` the read and write halves share a single","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\io\\mod.rs","byte_start":562778,"byte_end":562848,"line_start":327,"line_end":327,"column_start":5,"column_end":75}},{"value":"/ // seek position. This may or may not be true for other types that","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\io\\mod.rs","byte_start":562853,"byte_end":562923,"line_start":328,"line_end":328,"column_start":5,"column_end":75}},{"value":"/ // implement both `AsyncRead` and `AsyncWrite`.","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\io\\mod.rs","byte_start":562928,"byte_end":562979,"line_start":329,"line_end":329,"column_start":5,"column_end":56}},{"value":"/","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\io\\mod.rs","byte_start":562984,"byte_end":562987,"line_start":330,"line_end":330,"column_start":5,"column_end":8}},{"value":"/ let reader = Cursor::new([1, 2, 3, 4]);","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\io\\mod.rs","byte_start":562992,"byte_end":563035,"line_start":331,"line_end":331,"column_start":5,"column_end":48}},{"value":"/ let mut buffer = Cursor::new(vec![0, 0, 0, 0, 5, 6, 7, 8]);","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\io\\mod.rs","byte_start":563040,"byte_end":563103,"line_start":332,"line_end":332,"column_start":5,"column_end":68}},{"value":"/ let mut writer = Cursor::new(vec![0u8; 5]);","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\io\\mod.rs","byte_start":563108,"byte_end":563155,"line_start":333,"line_end":333,"column_start":5,"column_end":52}},{"value":"/","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\io\\mod.rs","byte_start":563160,"byte_end":563163,"line_start":334,"line_end":334,"column_start":5,"column_end":8}},{"value":"/ {","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\io\\mod.rs","byte_start":563168,"byte_end":563173,"line_start":335,"line_end":335,"column_start":5,"column_end":10}},{"value":"/     let (buffer_reader, mut buffer_writer) = (&mut buffer).split();","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\io\\mod.rs","byte_start":563178,"byte_end":563249,"line_start":336,"line_end":336,"column_start":5,"column_end":76}},{"value":"/     io::copy(reader, &mut buffer_writer).await?;","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\io\\mod.rs","byte_start":563254,"byte_end":563306,"line_start":337,"line_end":337,"column_start":5,"column_end":57}},{"value":"/     io::copy(buffer_reader, &mut writer).await?;","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\io\\mod.rs","byte_start":563311,"byte_end":563363,"line_start":338,"line_end":338,"column_start":5,"column_end":57}},{"value":"/ }","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\io\\mod.rs","byte_start":563368,"byte_end":563373,"line_start":339,"line_end":339,"column_start":5,"column_end":10}},{"value":"/","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\io\\mod.rs","byte_start":563378,"byte_end":563381,"line_start":340,"line_end":340,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(buffer.into_inner(), [1, 2, 3, 4, 5, 6, 7, 8]);","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\io\\mod.rs","byte_start":563386,"byte_end":563448,"line_start":341,"line_end":341,"column_start":5,"column_end":67}},{"value":"/ assert_eq!(writer.into_inner(), [5, 6, 7, 8, 0]);","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\io\\mod.rs","byte_start":563453,"byte_end":563506,"line_start":342,"line_end":342,"column_start":5,"column_end":58}},{"value":"/ # Ok::<(), Box<dyn std::error::Error>>(()) }).unwrap();","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\io\\mod.rs","byte_start":563511,"byte_end":563570,"line_start":343,"line_end":343,"column_start":5,"column_end":64}},{"value":"/ ```","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\io\\mod.rs","byte_start":563575,"byte_end":563582,"line_start":344,"line_end":344,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":9382},"span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\io\\mod.rs","byte_start":564376,"byte_end":564380,"line_start":372,"line_end":372,"column_start":8,"column_end":12},"name":"take","qualname":"::io::AsyncReadExt::take","value":"pub fn take(Self, u64) -> Take<Self> where Self: Sized","parent":{"krate":0,"index":9368},"children":[],"decl_id":null,"docs":" Creates an AsyncRead adapter which will read at most `limit` bytes\n from the underlying reader.","sig":null,"attributes":[{"value":"/ Creates an AsyncRead adapter which will read at most `limit` bytes","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\io\\mod.rs","byte_start":563783,"byte_end":563853,"line_start":353,"line_end":353,"column_start":5,"column_end":75}},{"value":"/ from the underlying reader.","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\io\\mod.rs","byte_start":563858,"byte_end":563889,"line_start":354,"line_end":354,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\io\\mod.rs","byte_start":563894,"byte_end":563897,"line_start":355,"line_end":355,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\io\\mod.rs","byte_start":563902,"byte_end":563916,"line_start":356,"line_end":356,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\io\\mod.rs","byte_start":563921,"byte_end":563924,"line_start":357,"line_end":357,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\io\\mod.rs","byte_start":563929,"byte_end":563936,"line_start":358,"line_end":358,"column_start":5,"column_end":12}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\io\\mod.rs","byte_start":563941,"byte_end":563982,"line_start":359,"line_end":359,"column_start":5,"column_end":46}},{"value":"/ use futures::io::{AsyncReadExt, Cursor};","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\io\\mod.rs","byte_start":563987,"byte_end":564031,"line_start":360,"line_end":360,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\io\\mod.rs","byte_start":564036,"byte_end":564039,"line_start":361,"line_end":361,"column_start":5,"column_end":8}},{"value":"/ let reader = Cursor::new(&b\"12345678\"[..]);","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\io\\mod.rs","byte_start":564044,"byte_end":564091,"line_start":362,"line_end":362,"column_start":5,"column_end":52}},{"value":"/ let mut buffer = [0; 5];","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\io\\mod.rs","byte_start":564096,"byte_end":564124,"line_start":363,"line_end":363,"column_start":5,"column_end":33}},{"value":"/","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\io\\mod.rs","byte_start":564129,"byte_end":564132,"line_start":364,"line_end":364,"column_start":5,"column_end":8}},{"value":"/ let mut take = reader.take(4);","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\io\\mod.rs","byte_start":564137,"byte_end":564171,"line_start":365,"line_end":365,"column_start":5,"column_end":39}},{"value":"/ let n = take.read(&mut buffer).await?;","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\io\\mod.rs","byte_start":564176,"byte_end":564218,"line_start":366,"line_end":366,"column_start":5,"column_end":47}},{"value":"/","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\io\\mod.rs","byte_start":564223,"byte_end":564226,"line_start":367,"line_end":367,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(n, 4);","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\io\\mod.rs","byte_start":564231,"byte_end":564252,"line_start":368,"line_end":368,"column_start":5,"column_end":26}},{"value":"/ assert_eq!(&buffer, b\"1234\\0\");","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\io\\mod.rs","byte_start":564257,"byte_end":564292,"line_start":369,"line_end":369,"column_start":5,"column_end":40}},{"value":"/ # Ok::<(), Box<dyn std::error::Error>>(()) }).unwrap();","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\io\\mod.rs","byte_start":564297,"byte_end":564356,"line_start":370,"line_end":370,"column_start":5,"column_end":64}},{"value":"/ ```","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\io\\mod.rs","byte_start":564361,"byte_end":564368,"line_start":371,"line_end":371,"column_start":5,"column_end":12}}]},{"kind":"Trait","id":{"krate":0,"index":9385},"span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\io\\mod.rs","byte_start":565189,"byte_end":565202,"line_start":398,"line_end":398,"column_start":11,"column_end":24},"name":"AsyncWriteExt","qualname":"::io::AsyncWriteExt","value":"AsyncWriteExt: AsyncWrite","parent":null,"children":[{"krate":0,"index":9386},{"krate":0,"index":9387},{"krate":0,"index":9388},{"krate":0,"index":9390},{"krate":0,"index":9392},{"krate":0,"index":9394}],"decl_id":null,"docs":" An extension trait which adds utility methods to `AsyncWrite` types.\n","sig":null,"attributes":[{"value":"/ An extension trait which adds utility methods to `AsyncWrite` types.","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\io\\mod.rs","byte_start":565106,"byte_end":565178,"line_start":397,"line_end":397,"column_start":1,"column_end":73}}]},{"kind":"Method","id":{"krate":0,"index":9386},"span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\io\\mod.rs","byte_start":565943,"byte_end":565948,"line_start":421,"line_end":421,"column_start":8,"column_end":13},"name":"flush","qualname":"::io::AsyncWriteExt::flush","value":"pub fn flush(&mut Self) -> Flush<, Self> where Self: Unpin","parent":{"krate":0,"index":9385},"children":[],"decl_id":null,"docs":" Creates a future which will entirely flush this `AsyncWrite`.","sig":null,"attributes":[{"value":"/ Creates a future which will entirely flush this `AsyncWrite`.","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\io\\mod.rs","byte_start":565221,"byte_end":565286,"line_start":399,"line_end":399,"column_start":5,"column_end":70}},{"value":"/","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\io\\mod.rs","byte_start":565291,"byte_end":565294,"line_start":400,"line_end":400,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\io\\mod.rs","byte_start":565299,"byte_end":565313,"line_start":401,"line_end":401,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\io\\mod.rs","byte_start":565318,"byte_end":565321,"line_start":402,"line_end":402,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\io\\mod.rs","byte_start":565326,"byte_end":565333,"line_start":403,"line_end":403,"column_start":5,"column_end":12}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\io\\mod.rs","byte_start":565338,"byte_end":565379,"line_start":404,"line_end":404,"column_start":5,"column_end":46}},{"value":"/ use futures::io::{AllowStdIo, AsyncWriteExt};","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\io\\mod.rs","byte_start":565384,"byte_end":565433,"line_start":405,"line_end":405,"column_start":5,"column_end":54}},{"value":"/ use std::io::{BufWriter, Cursor};","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\io\\mod.rs","byte_start":565438,"byte_end":565475,"line_start":406,"line_end":406,"column_start":5,"column_end":42}},{"value":"/","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\io\\mod.rs","byte_start":565480,"byte_end":565483,"line_start":407,"line_end":407,"column_start":5,"column_end":8}},{"value":"/ let mut output = vec![0u8; 5];","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\io\\mod.rs","byte_start":565488,"byte_end":565522,"line_start":408,"line_end":408,"column_start":5,"column_end":39}},{"value":"/","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\io\\mod.rs","byte_start":565527,"byte_end":565530,"line_start":409,"line_end":409,"column_start":5,"column_end":8}},{"value":"/ {","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\io\\mod.rs","byte_start":565535,"byte_end":565540,"line_start":410,"line_end":410,"column_start":5,"column_end":10}},{"value":"/     let writer = Cursor::new(&mut output);","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\io\\mod.rs","byte_start":565545,"byte_end":565591,"line_start":411,"line_end":411,"column_start":5,"column_end":51}},{"value":"/     let mut buffered = AllowStdIo::new(BufWriter::new(writer));","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\io\\mod.rs","byte_start":565596,"byte_end":565663,"line_start":412,"line_end":412,"column_start":5,"column_end":72}},{"value":"/     buffered.write_all(&[1, 2]).await?;","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\io\\mod.rs","byte_start":565668,"byte_end":565711,"line_start":413,"line_end":413,"column_start":5,"column_end":48}},{"value":"/     buffered.write_all(&[3, 4]).await?;","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\io\\mod.rs","byte_start":565716,"byte_end":565759,"line_start":414,"line_end":414,"column_start":5,"column_end":48}},{"value":"/     buffered.flush().await?;","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\io\\mod.rs","byte_start":565764,"byte_end":565796,"line_start":415,"line_end":415,"column_start":5,"column_end":37}},{"value":"/ }","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\io\\mod.rs","byte_start":565801,"byte_end":565806,"line_start":416,"line_end":416,"column_start":5,"column_end":10}},{"value":"/","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\io\\mod.rs","byte_start":565811,"byte_end":565814,"line_start":417,"line_end":417,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(output, [1, 2, 3, 4, 0]);","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\io\\mod.rs","byte_start":565819,"byte_end":565859,"line_start":418,"line_end":418,"column_start":5,"column_end":45}},{"value":"/ # Ok::<(), Box<dyn std::error::Error>>(()) }).unwrap();","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\io\\mod.rs","byte_start":565864,"byte_end":565923,"line_start":419,"line_end":419,"column_start":5,"column_end":64}},{"value":"/ ```","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\io\\mod.rs","byte_start":565928,"byte_end":565935,"line_start":420,"line_end":420,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":9387},"span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\io\\mod.rs","byte_start":566157,"byte_end":566162,"line_start":429,"line_end":429,"column_start":8,"column_end":13},"name":"close","qualname":"::io::AsyncWriteExt::close","value":"pub fn close(&mut Self) -> Close<, Self> where Self: Unpin","parent":{"krate":0,"index":9385},"children":[],"decl_id":null,"docs":" Creates a future which will entirely close this `AsyncWrite`.\n","sig":null,"attributes":[{"value":"/ Creates a future which will entirely close this `AsyncWrite`.","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\io\\mod.rs","byte_start":566084,"byte_end":566149,"line_start":428,"line_end":428,"column_start":5,"column_end":70}}]},{"kind":"Method","id":{"krate":0,"index":9388},"span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\io\\mod.rs","byte_start":566504,"byte_end":566509,"line_start":440,"line_end":440,"column_start":8,"column_end":13},"name":"write","qualname":"::io::AsyncWriteExt::write","value":"pub fn write<'a>(&'a mut Self, &'a [u8]) -> Write where Self: Unpin","parent":{"krate":0,"index":9385},"children":[],"decl_id":null,"docs":" Creates a future which will write bytes from `buf` into the object.","sig":null,"attributes":[{"value":"/ Creates a future which will write bytes from `buf` into the object.","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\io\\mod.rs","byte_start":566298,"byte_end":566369,"line_start":436,"line_end":436,"column_start":5,"column_end":76}},{"value":"/","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\io\\mod.rs","byte_start":566374,"byte_end":566377,"line_start":437,"line_end":437,"column_start":5,"column_end":8}},{"value":"/ The returned future will resolve to the number of bytes written once the write","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\io\\mod.rs","byte_start":566382,"byte_end":566464,"line_start":438,"line_end":438,"column_start":5,"column_end":87}},{"value":"/ operation is completed.","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\io\\mod.rs","byte_start":566469,"byte_end":566496,"line_start":439,"line_end":439,"column_start":5,"column_end":32}}]},{"kind":"Method","id":{"krate":0,"index":9390},"span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\io\\mod.rs","byte_start":566919,"byte_end":566933,"line_start":452,"line_end":452,"column_start":8,"column_end":22},"name":"write_vectored","qualname":"::io::AsyncWriteExt::write_vectored","value":"pub fn write_vectored<'a>(&'a mut Self, &'a [IoSlice]) -> WriteVectored where\nSelf: Unpin","parent":{"krate":0,"index":9385},"children":[],"decl_id":null,"docs":" Creates a future which will write bytes from `bufs` into the object using vectored\n IO operations.","sig":null,"attributes":[{"value":"/ Creates a future which will write bytes from `bufs` into the object using vectored","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\io\\mod.rs","byte_start":566675,"byte_end":566761,"line_start":447,"line_end":447,"column_start":5,"column_end":91}},{"value":"/ IO operations.","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\io\\mod.rs","byte_start":566766,"byte_end":566784,"line_start":448,"line_end":448,"column_start":5,"column_end":23}},{"value":"/","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\io\\mod.rs","byte_start":566789,"byte_end":566792,"line_start":449,"line_end":449,"column_start":5,"column_end":8}},{"value":"/ The returned future will resolve to the number of bytes written once the write","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\io\\mod.rs","byte_start":566797,"byte_end":566879,"line_start":450,"line_end":450,"column_start":5,"column_end":87}},{"value":"/ operation is completed.","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\io\\mod.rs","byte_start":566884,"byte_end":566911,"line_start":451,"line_end":451,"column_start":5,"column_end":32}}]},{"kind":"Method","id":{"krate":0,"index":9392},"span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\io\\mod.rs","byte_start":567779,"byte_end":567788,"line_start":479,"line_end":479,"column_start":8,"column_end":17},"name":"write_all","qualname":"::io::AsyncWriteExt::write_all","value":"pub fn write_all<'a>(&'a mut Self, &'a [u8]) -> WriteAll where Self: Unpin","parent":{"krate":0,"index":9385},"children":[],"decl_id":null,"docs":" Write data into this object.","sig":null,"attributes":[{"value":"/ Write data into this object.","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\io\\mod.rs","byte_start":567126,"byte_end":567158,"line_start":459,"line_end":459,"column_start":5,"column_end":37}},{"value":"/","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\io\\mod.rs","byte_start":567163,"byte_end":567166,"line_start":460,"line_end":460,"column_start":5,"column_end":8}},{"value":"/ Creates a future that will write the entire contents of the buffer `buf` into","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\io\\mod.rs","byte_start":567171,"byte_end":567252,"line_start":461,"line_end":461,"column_start":5,"column_end":86}},{"value":"/ this `AsyncWrite`.","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\io\\mod.rs","byte_start":567257,"byte_end":567279,"line_start":462,"line_end":462,"column_start":5,"column_end":27}},{"value":"/","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\io\\mod.rs","byte_start":567284,"byte_end":567287,"line_start":463,"line_end":463,"column_start":5,"column_end":8}},{"value":"/ The returned future will not complete until all the data has been written.","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\io\\mod.rs","byte_start":567292,"byte_end":567370,"line_start":464,"line_end":464,"column_start":5,"column_end":83}},{"value":"/","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\io\\mod.rs","byte_start":567375,"byte_end":567378,"line_start":465,"line_end":465,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\io\\mod.rs","byte_start":567383,"byte_end":567397,"line_start":466,"line_end":466,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\io\\mod.rs","byte_start":567402,"byte_end":567405,"line_start":467,"line_end":467,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\io\\mod.rs","byte_start":567410,"byte_end":567417,"line_start":468,"line_end":468,"column_start":5,"column_end":12}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\io\\mod.rs","byte_start":567422,"byte_end":567463,"line_start":469,"line_end":469,"column_start":5,"column_end":46}},{"value":"/ use futures::io::{AsyncWriteExt, Cursor};","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\io\\mod.rs","byte_start":567468,"byte_end":567513,"line_start":470,"line_end":470,"column_start":5,"column_end":50}},{"value":"/","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\io\\mod.rs","byte_start":567518,"byte_end":567521,"line_start":471,"line_end":471,"column_start":5,"column_end":8}},{"value":"/ let mut writer = Cursor::new(vec![0u8; 5]);","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\io\\mod.rs","byte_start":567526,"byte_end":567573,"line_start":472,"line_end":472,"column_start":5,"column_end":52}},{"value":"/","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\io\\mod.rs","byte_start":567578,"byte_end":567581,"line_start":473,"line_end":473,"column_start":5,"column_end":8}},{"value":"/ writer.write_all(&[1, 2, 3, 4]).await?;","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\io\\mod.rs","byte_start":567586,"byte_end":567629,"line_start":474,"line_end":474,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\io\\mod.rs","byte_start":567634,"byte_end":567637,"line_start":475,"line_end":475,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(writer.into_inner(), [1, 2, 3, 4, 0]);","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\io\\mod.rs","byte_start":567642,"byte_end":567695,"line_start":476,"line_end":476,"column_start":5,"column_end":58}},{"value":"/ # Ok::<(), Box<dyn std::error::Error>>(()) }).unwrap();","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\io\\mod.rs","byte_start":567700,"byte_end":567759,"line_start":477,"line_end":477,"column_start":5,"column_end":64}},{"value":"/ ```","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\io\\mod.rs","byte_start":567764,"byte_end":567771,"line_start":478,"line_end":478,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":9394},"span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\io\\mod.rs","byte_start":571332,"byte_end":571341,"line_start":581,"line_end":581,"column_start":8,"column_end":17},"name":"into_sink","qualname":"::io::AsyncWriteExt::into_sink","value":"pub fn into_sink<Item: AsRef<[u8]>>(Self) -> IntoSink<Self, Item> where\nSelf: Sized","parent":{"krate":0,"index":9385},"children":[],"decl_id":null,"docs":" Allow using an [`AsyncWrite`] as a [`Sink`](futures_sink::Sink)`<Item: AsRef<[u8]>>`.","sig":null,"attributes":[{"value":"/ Allow using an [`AsyncWrite`] as a [`Sink`](futures_sink::Sink)`<Item: AsRef<[u8]>>`.","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\io\\mod.rs","byte_start":570373,"byte_end":570462,"line_start":553,"line_end":553,"column_start":5,"column_end":94}},{"value":"/","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\io\\mod.rs","byte_start":570467,"byte_end":570470,"line_start":554,"line_end":554,"column_start":5,"column_end":8}},{"value":"/ This adapter produces a sink that will write each value passed to it","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\io\\mod.rs","byte_start":570475,"byte_end":570547,"line_start":555,"line_end":555,"column_start":5,"column_end":77}},{"value":"/ into the underlying writer.","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\io\\mod.rs","byte_start":570552,"byte_end":570583,"line_start":556,"line_end":556,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\io\\mod.rs","byte_start":570588,"byte_end":570591,"line_start":557,"line_end":557,"column_start":5,"column_end":8}},{"value":"/ Note that this function consumes the given writer, returning a wrapped","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\io\\mod.rs","byte_start":570596,"byte_end":570670,"line_start":558,"line_end":558,"column_start":5,"column_end":79}},{"value":"/ version.","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\io\\mod.rs","byte_start":570675,"byte_end":570687,"line_start":559,"line_end":559,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\io\\mod.rs","byte_start":570692,"byte_end":570695,"line_start":560,"line_end":560,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\io\\mod.rs","byte_start":570700,"byte_end":570714,"line_start":561,"line_end":561,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\io\\mod.rs","byte_start":570719,"byte_end":570722,"line_start":562,"line_end":562,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\io\\mod.rs","byte_start":570727,"byte_end":570734,"line_start":563,"line_end":563,"column_start":5,"column_end":12}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\io\\mod.rs","byte_start":570739,"byte_end":570780,"line_start":564,"line_end":564,"column_start":5,"column_end":46}},{"value":"/ use futures::io::AsyncWriteExt;","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\io\\mod.rs","byte_start":570785,"byte_end":570820,"line_start":565,"line_end":565,"column_start":5,"column_end":40}},{"value":"/ use futures::stream::{self, StreamExt};","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\io\\mod.rs","byte_start":570825,"byte_end":570868,"line_start":566,"line_end":566,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\io\\mod.rs","byte_start":570873,"byte_end":570876,"line_start":567,"line_end":567,"column_start":5,"column_end":8}},{"value":"/ let stream = stream::iter(vec![Ok([1, 2, 3]), Ok([4, 5, 6])]);","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\io\\mod.rs","byte_start":570881,"byte_end":570947,"line_start":568,"line_end":568,"column_start":5,"column_end":71}},{"value":"/","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\io\\mod.rs","byte_start":570952,"byte_end":570955,"line_start":569,"line_end":569,"column_start":5,"column_end":8}},{"value":"/ let mut writer = vec![];","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\io\\mod.rs","byte_start":570960,"byte_end":570988,"line_start":570,"line_end":570,"column_start":5,"column_end":33}},{"value":"/","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\io\\mod.rs","byte_start":570993,"byte_end":570996,"line_start":571,"line_end":571,"column_start":5,"column_end":8}},{"value":"/ stream.forward((&mut writer).into_sink()).await?;","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\io\\mod.rs","byte_start":571001,"byte_end":571054,"line_start":572,"line_end":572,"column_start":5,"column_end":58}},{"value":"/","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\io\\mod.rs","byte_start":571059,"byte_end":571062,"line_start":573,"line_end":573,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(writer, vec![1, 2, 3, 4, 5, 6]);","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\io\\mod.rs","byte_start":571067,"byte_end":571114,"line_start":574,"line_end":574,"column_start":5,"column_end":52}},{"value":"/ # Ok::<(), Box<dyn std::error::Error>>(())","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\io\\mod.rs","byte_start":571119,"byte_end":571165,"line_start":575,"line_end":575,"column_start":5,"column_end":51}},{"value":"/ # })?;","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\io\\mod.rs","byte_start":571170,"byte_end":571180,"line_start":576,"line_end":576,"column_start":5,"column_end":15}},{"value":"/ # Ok::<(), Box<dyn std::error::Error>>(())","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\io\\mod.rs","byte_start":571185,"byte_end":571231,"line_start":577,"line_end":577,"column_start":5,"column_end":51}},{"value":"/ ```","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\io\\mod.rs","byte_start":571236,"byte_end":571243,"line_start":578,"line_end":578,"column_start":5,"column_end":12}},{"value":"cfg(feature = \"sink\")","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\io\\mod.rs","byte_start":571248,"byte_end":571272,"line_start":579,"line_end":579,"column_start":5,"column_end":29}}]},{"kind":"Trait","id":{"krate":0,"index":9398},"span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\io\\mod.rs","byte_start":571644,"byte_end":571656,"line_start":592,"line_end":592,"column_start":11,"column_end":23},"name":"AsyncSeekExt","qualname":"::io::AsyncSeekExt","value":"AsyncSeekExt: AsyncSeek","parent":null,"children":[{"krate":0,"index":9399},{"krate":0,"index":9400}],"decl_id":null,"docs":" An extension trait which adds utility methods to `AsyncSeek` types.\n","sig":null,"attributes":[{"value":"/ An extension trait which adds utility methods to `AsyncSeek` types.","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\io\\mod.rs","byte_start":571562,"byte_end":571633,"line_start":591,"line_end":591,"column_start":1,"column_end":72}}]},{"kind":"Method","id":{"krate":0,"index":9399},"span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\io\\mod.rs","byte_start":571926,"byte_end":571930,"line_start":598,"line_end":598,"column_start":8,"column_end":12},"name":"seek","qualname":"::io::AsyncSeekExt::seek","value":"pub fn seek(&mut Self, SeekFrom) -> Seek<, Self> where Self: Unpin","parent":{"krate":0,"index":9398},"children":[],"decl_id":null,"docs":" Creates a future which will seek an IO object, and then yield the\n new position in the object and the object itself.","sig":null,"attributes":[{"value":"/ Creates a future which will seek an IO object, and then yield the","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\io\\mod.rs","byte_start":571674,"byte_end":571743,"line_start":593,"line_end":593,"column_start":5,"column_end":74}},{"value":"/ new position in the object and the object itself.","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\io\\mod.rs","byte_start":571748,"byte_end":571801,"line_start":594,"line_end":594,"column_start":5,"column_end":58}},{"value":"/","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\io\\mod.rs","byte_start":571806,"byte_end":571809,"line_start":595,"line_end":595,"column_start":5,"column_end":8}},{"value":"/ In the case of an error the buffer and the object will be discarded, with","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\io\\mod.rs","byte_start":571814,"byte_end":571891,"line_start":596,"line_end":596,"column_start":5,"column_end":82}},{"value":"/ the error yielded.","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\io\\mod.rs","byte_start":571896,"byte_end":571918,"line_start":597,"line_end":597,"column_start":5,"column_end":27}}]},{"kind":"Method","id":{"krate":0,"index":9400},"span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\io\\mod.rs","byte_start":572268,"byte_end":572283,"line_start":609,"line_end":609,"column_start":8,"column_end":23},"name":"stream_position","qualname":"::io::AsyncSeekExt::stream_position","value":"pub fn stream_position(&mut Self) -> Seek<, Self> where Self: Unpin","parent":{"krate":0,"index":9398},"children":[],"decl_id":null,"docs":" Creates a future which will return the current seek position from the\n start of the stream.","sig":null,"attributes":[{"value":"/ Creates a future which will return the current seek position from the","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\io\\mod.rs","byte_start":572085,"byte_end":572158,"line_start":605,"line_end":605,"column_start":5,"column_end":78}},{"value":"/ start of the stream.","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\io\\mod.rs","byte_start":572163,"byte_end":572187,"line_start":606,"line_end":606,"column_start":5,"column_end":29}},{"value":"/","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\io\\mod.rs","byte_start":572192,"byte_end":572195,"line_start":607,"line_end":607,"column_start":5,"column_end":8}},{"value":"/ This is equivalent to `self.seek(SeekFrom::Current(0))`.","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\io\\mod.rs","byte_start":572200,"byte_end":572260,"line_start":608,"line_end":608,"column_start":5,"column_end":65}}]},{"kind":"Trait","id":{"krate":0,"index":9403},"span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\io\\mod.rs","byte_start":572535,"byte_end":572550,"line_start":620,"line_end":620,"column_start":11,"column_end":26},"name":"AsyncBufReadExt","qualname":"::io::AsyncBufReadExt","value":"AsyncBufReadExt: AsyncBufRead","parent":null,"children":[{"krate":0,"index":9404},{"krate":0,"index":9405},{"krate":0,"index":9406},{"krate":0,"index":9408},{"krate":0,"index":9410}],"decl_id":null,"docs":" An extension trait which adds utility methods to `AsyncBufRead` types.\n","sig":null,"attributes":[{"value":"/ An extension trait which adds utility methods to `AsyncBufRead` types.","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\io\\mod.rs","byte_start":572450,"byte_end":572524,"line_start":619,"line_end":619,"column_start":1,"column_end":75}}]},{"kind":"Method","id":{"krate":0,"index":9404},"span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\io\\mod.rs","byte_start":573504,"byte_end":573512,"line_start":644,"line_end":644,"column_start":8,"column_end":16},"name":"fill_buf","qualname":"::io::AsyncBufReadExt::fill_buf","value":"pub fn fill_buf(&mut Self) -> FillBuf<, Self> where Self: Unpin","parent":{"krate":0,"index":9403},"children":[],"decl_id":null,"docs":" Creates a future which will wait for a non-empty buffer to be available from this I/O\n object or EOF to be reached.","sig":null,"attributes":[{"value":"/ Creates a future which will wait for a non-empty buffer to be available from this I/O","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\io\\mod.rs","byte_start":572571,"byte_end":572660,"line_start":621,"line_end":621,"column_start":5,"column_end":94}},{"value":"/ object or EOF to be reached.","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\io\\mod.rs","byte_start":572665,"byte_end":572697,"line_start":622,"line_end":622,"column_start":5,"column_end":37}},{"value":"/","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\io\\mod.rs","byte_start":572702,"byte_end":572705,"line_start":623,"line_end":623,"column_start":5,"column_end":8}},{"value":"/ This method is the async equivalent to [`BufRead::fill_buf`](std::io::BufRead::fill_buf).","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\io\\mod.rs","byte_start":572710,"byte_end":572803,"line_start":624,"line_end":624,"column_start":5,"column_end":98}},{"value":"/","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\io\\mod.rs","byte_start":572808,"byte_end":572811,"line_start":625,"line_end":625,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\io\\mod.rs","byte_start":572816,"byte_end":572827,"line_start":626,"line_end":626,"column_start":5,"column_end":16}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\io\\mod.rs","byte_start":572832,"byte_end":572873,"line_start":627,"line_end":627,"column_start":5,"column_end":46}},{"value":"/ use futures::{io::AsyncBufReadExt as _, stream::{iter, TryStreamExt as _}};","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\io\\mod.rs","byte_start":572878,"byte_end":572957,"line_start":628,"line_end":628,"column_start":5,"column_end":84}},{"value":"/","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\io\\mod.rs","byte_start":572962,"byte_end":572965,"line_start":629,"line_end":629,"column_start":5,"column_end":8}},{"value":"/ let mut stream = iter(vec![Ok(vec![1, 2, 3]), Ok(vec![4, 5, 6])]).into_async_read();","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\io\\mod.rs","byte_start":572970,"byte_end":573058,"line_start":630,"line_end":630,"column_start":5,"column_end":93}},{"value":"/","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\io\\mod.rs","byte_start":573063,"byte_end":573066,"line_start":631,"line_end":631,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(stream.fill_buf().await?, vec![1, 2, 3]);","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\io\\mod.rs","byte_start":573071,"byte_end":573127,"line_start":632,"line_end":632,"column_start":5,"column_end":61}},{"value":"/ stream.consume_unpin(2);","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\io\\mod.rs","byte_start":573132,"byte_end":573160,"line_start":633,"line_end":633,"column_start":5,"column_end":33}},{"value":"/","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\io\\mod.rs","byte_start":573165,"byte_end":573168,"line_start":634,"line_end":634,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(stream.fill_buf().await?, vec![3]);","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\io\\mod.rs","byte_start":573173,"byte_end":573223,"line_start":635,"line_end":635,"column_start":5,"column_end":55}},{"value":"/ stream.consume_unpin(1);","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\io\\mod.rs","byte_start":573228,"byte_end":573256,"line_start":636,"line_end":636,"column_start":5,"column_end":33}},{"value":"/","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\io\\mod.rs","byte_start":573261,"byte_end":573264,"line_start":637,"line_end":637,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(stream.fill_buf().await?, vec![4, 5, 6]);","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\io\\mod.rs","byte_start":573269,"byte_end":573325,"line_start":638,"line_end":638,"column_start":5,"column_end":61}},{"value":"/ stream.consume_unpin(3);","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\io\\mod.rs","byte_start":573330,"byte_end":573358,"line_start":639,"line_end":639,"column_start":5,"column_end":33}},{"value":"/","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\io\\mod.rs","byte_start":573363,"byte_end":573366,"line_start":640,"line_end":640,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(stream.fill_buf().await?, vec![]);","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\io\\mod.rs","byte_start":573371,"byte_end":573420,"line_start":641,"line_end":641,"column_start":5,"column_end":54}},{"value":"/ # Ok::<(), Box<dyn std::error::Error>>(()) }).unwrap();","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\io\\mod.rs","byte_start":573425,"byte_end":573484,"line_start":642,"line_end":642,"column_start":5,"column_end":64}},{"value":"/ ```","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\io\\mod.rs","byte_start":573489,"byte_end":573496,"line_start":643,"line_end":643,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":9405},"span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\io\\mod.rs","byte_start":574313,"byte_end":574326,"line_start":668,"line_end":668,"column_start":8,"column_end":21},"name":"consume_unpin","qualname":"::io::AsyncBufReadExt::consume_unpin","value":"pub fn consume_unpin(&mut Self, usize) where Self: Unpin","parent":{"krate":0,"index":9403},"children":[],"decl_id":null,"docs":" A convenience for calling [`AsyncBufRead::consume`] on [`Unpin`] IO types.","sig":null,"attributes":[{"value":"/ A convenience for calling [`AsyncBufRead::consume`] on [`Unpin`] IO types.","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\io\\mod.rs","byte_start":573655,"byte_end":573733,"line_start":651,"line_end":651,"column_start":5,"column_end":83}},{"value":"/","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\io\\mod.rs","byte_start":573738,"byte_end":573741,"line_start":652,"line_end":652,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\io\\mod.rs","byte_start":573746,"byte_end":573757,"line_start":653,"line_end":653,"column_start":5,"column_end":16}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\io\\mod.rs","byte_start":573762,"byte_end":573803,"line_start":654,"line_end":654,"column_start":5,"column_end":46}},{"value":"/ use futures::{io::AsyncBufReadExt as _, stream::{iter, TryStreamExt as _}};","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\io\\mod.rs","byte_start":573808,"byte_end":573887,"line_start":655,"line_end":655,"column_start":5,"column_end":84}},{"value":"/","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\io\\mod.rs","byte_start":573892,"byte_end":573895,"line_start":656,"line_end":656,"column_start":5,"column_end":8}},{"value":"/ let mut stream = iter(vec![Ok(vec![1, 2, 3])]).into_async_read();","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\io\\mod.rs","byte_start":573900,"byte_end":573969,"line_start":657,"line_end":657,"column_start":5,"column_end":74}},{"value":"/","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\io\\mod.rs","byte_start":573974,"byte_end":573977,"line_start":658,"line_end":658,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(stream.fill_buf().await?, vec![1, 2, 3]);","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\io\\mod.rs","byte_start":573982,"byte_end":574038,"line_start":659,"line_end":659,"column_start":5,"column_end":61}},{"value":"/ stream.consume_unpin(2);","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\io\\mod.rs","byte_start":574043,"byte_end":574071,"line_start":660,"line_end":660,"column_start":5,"column_end":33}},{"value":"/","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\io\\mod.rs","byte_start":574076,"byte_end":574079,"line_start":661,"line_end":661,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(stream.fill_buf().await?, vec![3]);","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\io\\mod.rs","byte_start":574084,"byte_end":574134,"line_start":662,"line_end":662,"column_start":5,"column_end":55}},{"value":"/ stream.consume_unpin(1);","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\io\\mod.rs","byte_start":574139,"byte_end":574167,"line_start":663,"line_end":663,"column_start":5,"column_end":33}},{"value":"/","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\io\\mod.rs","byte_start":574172,"byte_end":574175,"line_start":664,"line_end":664,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(stream.fill_buf().await?, vec![]);","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\io\\mod.rs","byte_start":574180,"byte_end":574229,"line_start":665,"line_end":665,"column_start":5,"column_end":54}},{"value":"/ # Ok::<(), Box<dyn std::error::Error>>(()) }).unwrap();","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\io\\mod.rs","byte_start":574234,"byte_end":574293,"line_start":666,"line_end":666,"column_start":5,"column_end":64}},{"value":"/ ```","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\io\\mod.rs","byte_start":574298,"byte_end":574305,"line_start":667,"line_end":667,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":9406},"span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\io\\mod.rs","byte_start":576017,"byte_end":576027,"line_start":716,"line_end":716,"column_start":8,"column_end":18},"name":"read_until","qualname":"::io::AsyncBufReadExt::read_until","value":"pub fn read_until<'a>(&'a mut Self, u8, &'a mut Vec<u8>) -> ReadUntil where\nSelf: Unpin","parent":{"krate":0,"index":9403},"children":[],"decl_id":null,"docs":" Creates a future which will read all the bytes associated with this I/O\n object into `buf` until the delimiter `byte` or EOF is reached.\n This method is the async equivalent to [`BufRead::read_until`](std::io::BufRead::read_until).","sig":null,"attributes":[{"value":"/ Creates a future which will read all the bytes associated with this I/O","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\io\\mod.rs","byte_start":574434,"byte_end":574509,"line_start":675,"line_end":675,"column_start":5,"column_end":80}},{"value":"/ object into `buf` until the delimiter `byte` or EOF is reached.","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\io\\mod.rs","byte_start":574514,"byte_end":574581,"line_start":676,"line_end":676,"column_start":5,"column_end":72}},{"value":"/ This method is the async equivalent to [`BufRead::read_until`](std::io::BufRead::read_until).","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\io\\mod.rs","byte_start":574586,"byte_end":574683,"line_start":677,"line_end":677,"column_start":5,"column_end":102}},{"value":"/","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\io\\mod.rs","byte_start":574688,"byte_end":574691,"line_start":678,"line_end":678,"column_start":5,"column_end":8}},{"value":"/ This function will read bytes from the underlying stream until the","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\io\\mod.rs","byte_start":574696,"byte_end":574766,"line_start":679,"line_end":679,"column_start":5,"column_end":75}},{"value":"/ delimiter or EOF is found. Once found, all bytes up to, and including,","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\io\\mod.rs","byte_start":574771,"byte_end":574845,"line_start":680,"line_end":680,"column_start":5,"column_end":79}},{"value":"/ the delimiter (if found) will be appended to `buf`.","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\io\\mod.rs","byte_start":574850,"byte_end":574905,"line_start":681,"line_end":681,"column_start":5,"column_end":60}},{"value":"/","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\io\\mod.rs","byte_start":574910,"byte_end":574913,"line_start":682,"line_end":682,"column_start":5,"column_end":8}},{"value":"/ The returned future will resolve to the number of bytes read once the read","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\io\\mod.rs","byte_start":574918,"byte_end":574996,"line_start":683,"line_end":683,"column_start":5,"column_end":83}},{"value":"/ operation is completed.","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\io\\mod.rs","byte_start":575001,"byte_end":575028,"line_start":684,"line_end":684,"column_start":5,"column_end":32}},{"value":"/","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\io\\mod.rs","byte_start":575033,"byte_end":575036,"line_start":685,"line_end":685,"column_start":5,"column_end":8}},{"value":"/ In the case of an error the buffer and the object will be discarded, with","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\io\\mod.rs","byte_start":575041,"byte_end":575118,"line_start":686,"line_end":686,"column_start":5,"column_end":82}},{"value":"/ the error yielded.","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\io\\mod.rs","byte_start":575123,"byte_end":575145,"line_start":687,"line_end":687,"column_start":5,"column_end":27}},{"value":"/","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\io\\mod.rs","byte_start":575150,"byte_end":575153,"line_start":688,"line_end":688,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\io\\mod.rs","byte_start":575158,"byte_end":575172,"line_start":689,"line_end":689,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\io\\mod.rs","byte_start":575177,"byte_end":575180,"line_start":690,"line_end":690,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\io\\mod.rs","byte_start":575185,"byte_end":575192,"line_start":691,"line_end":691,"column_start":5,"column_end":12}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\io\\mod.rs","byte_start":575197,"byte_end":575238,"line_start":692,"line_end":692,"column_start":5,"column_end":46}},{"value":"/ use futures::io::{AsyncBufReadExt, Cursor};","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\io\\mod.rs","byte_start":575243,"byte_end":575290,"line_start":693,"line_end":693,"column_start":5,"column_end":52}},{"value":"/","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\io\\mod.rs","byte_start":575295,"byte_end":575298,"line_start":694,"line_end":694,"column_start":5,"column_end":8}},{"value":"/ let mut cursor = Cursor::new(b\"lorem-ipsum\");","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\io\\mod.rs","byte_start":575303,"byte_end":575352,"line_start":695,"line_end":695,"column_start":5,"column_end":54}},{"value":"/ let mut buf = vec![];","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\io\\mod.rs","byte_start":575357,"byte_end":575382,"line_start":696,"line_end":696,"column_start":5,"column_end":30}},{"value":"/","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\io\\mod.rs","byte_start":575387,"byte_end":575390,"line_start":697,"line_end":697,"column_start":5,"column_end":8}},{"value":"/ // cursor is at 'l'","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\io\\mod.rs","byte_start":575395,"byte_end":575418,"line_start":698,"line_end":698,"column_start":5,"column_end":28}},{"value":"/ let num_bytes = cursor.read_until(b'-', &mut buf).await?;","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\io\\mod.rs","byte_start":575423,"byte_end":575484,"line_start":699,"line_end":699,"column_start":5,"column_end":66}},{"value":"/ assert_eq!(num_bytes, 6);","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\io\\mod.rs","byte_start":575489,"byte_end":575518,"line_start":700,"line_end":700,"column_start":5,"column_end":34}},{"value":"/ assert_eq!(buf, b\"lorem-\");","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\io\\mod.rs","byte_start":575523,"byte_end":575554,"line_start":701,"line_end":701,"column_start":5,"column_end":36}},{"value":"/ buf.clear();","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\io\\mod.rs","byte_start":575559,"byte_end":575575,"line_start":702,"line_end":702,"column_start":5,"column_end":21}},{"value":"/","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\io\\mod.rs","byte_start":575580,"byte_end":575583,"line_start":703,"line_end":703,"column_start":5,"column_end":8}},{"value":"/ // cursor is at 'i'","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\io\\mod.rs","byte_start":575588,"byte_end":575611,"line_start":704,"line_end":704,"column_start":5,"column_end":28}},{"value":"/ let num_bytes = cursor.read_until(b'-', &mut buf).await?;","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\io\\mod.rs","byte_start":575616,"byte_end":575677,"line_start":705,"line_end":705,"column_start":5,"column_end":66}},{"value":"/ assert_eq!(num_bytes, 5);","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\io\\mod.rs","byte_start":575682,"byte_end":575711,"line_start":706,"line_end":706,"column_start":5,"column_end":34}},{"value":"/ assert_eq!(buf, b\"ipsum\");","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\io\\mod.rs","byte_start":575716,"byte_end":575746,"line_start":707,"line_end":707,"column_start":5,"column_end":35}},{"value":"/ buf.clear();","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\io\\mod.rs","byte_start":575751,"byte_end":575767,"line_start":708,"line_end":708,"column_start":5,"column_end":21}},{"value":"/","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\io\\mod.rs","byte_start":575772,"byte_end":575775,"line_start":709,"line_end":709,"column_start":5,"column_end":8}},{"value":"/ // cursor is at EOF","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\io\\mod.rs","byte_start":575780,"byte_end":575803,"line_start":710,"line_end":710,"column_start":5,"column_end":28}},{"value":"/ let num_bytes = cursor.read_until(b'-', &mut buf).await?;","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\io\\mod.rs","byte_start":575808,"byte_end":575869,"line_start":711,"line_end":711,"column_start":5,"column_end":66}},{"value":"/ assert_eq!(num_bytes, 0);","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\io\\mod.rs","byte_start":575874,"byte_end":575903,"line_start":712,"line_end":712,"column_start":5,"column_end":34}},{"value":"/ assert_eq!(buf, b\"\");","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\io\\mod.rs","byte_start":575908,"byte_end":575933,"line_start":713,"line_end":713,"column_start":5,"column_end":30}},{"value":"/ # Ok::<(), Box<dyn std::error::Error>>(()) }).unwrap();","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\io\\mod.rs","byte_start":575938,"byte_end":575997,"line_start":714,"line_end":714,"column_start":5,"column_end":64}},{"value":"/ ```","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\io\\mod.rs","byte_start":576002,"byte_end":576009,"line_start":715,"line_end":715,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":9408},"span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\io\\mod.rs","byte_start":578206,"byte_end":578215,"line_start":774,"line_end":774,"column_start":8,"column_end":17},"name":"read_line","qualname":"::io::AsyncBufReadExt::read_line","value":"pub fn read_line<'a>(&'a mut Self, &'a mut String) -> ReadLine where\nSelf: Unpin","parent":{"krate":0,"index":9403},"children":[],"decl_id":null,"docs":" Creates a future which will read all the bytes associated with this I/O\n object into `buf` until a newline (the 0xA byte) or EOF is reached,\n This method is the async equivalent to [`BufRead::read_line`](std::io::BufRead::read_line).","sig":null,"attributes":[{"value":"/ Creates a future which will read all the bytes associated with this I/O","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\io\\mod.rs","byte_start":576224,"byte_end":576299,"line_start":723,"line_end":723,"column_start":5,"column_end":80}},{"value":"/ object into `buf` until a newline (the 0xA byte) or EOF is reached,","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\io\\mod.rs","byte_start":576304,"byte_end":576375,"line_start":724,"line_end":724,"column_start":5,"column_end":76}},{"value":"/ This method is the async equivalent to [`BufRead::read_line`](std::io::BufRead::read_line).","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\io\\mod.rs","byte_start":576380,"byte_end":576475,"line_start":725,"line_end":725,"column_start":5,"column_end":100}},{"value":"/","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\io\\mod.rs","byte_start":576480,"byte_end":576483,"line_start":726,"line_end":726,"column_start":5,"column_end":8}},{"value":"/ This function will read bytes from the underlying stream until the","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\io\\mod.rs","byte_start":576488,"byte_end":576558,"line_start":727,"line_end":727,"column_start":5,"column_end":75}},{"value":"/ newline delimiter (the 0xA byte) or EOF is found. Once found, all bytes","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\io\\mod.rs","byte_start":576563,"byte_end":576638,"line_start":728,"line_end":728,"column_start":5,"column_end":80}},{"value":"/ up to, and including, the delimiter (if found) will be appended to","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\io\\mod.rs","byte_start":576643,"byte_end":576713,"line_start":729,"line_end":729,"column_start":5,"column_end":75}},{"value":"/ `buf`.","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\io\\mod.rs","byte_start":576718,"byte_end":576728,"line_start":730,"line_end":730,"column_start":5,"column_end":15}},{"value":"/","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\io\\mod.rs","byte_start":576733,"byte_end":576736,"line_start":731,"line_end":731,"column_start":5,"column_end":8}},{"value":"/ The returned future will resolve to the number of bytes read once the read","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\io\\mod.rs","byte_start":576741,"byte_end":576819,"line_start":732,"line_end":732,"column_start":5,"column_end":83}},{"value":"/ operation is completed.","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\io\\mod.rs","byte_start":576824,"byte_end":576851,"line_start":733,"line_end":733,"column_start":5,"column_end":32}},{"value":"/","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\io\\mod.rs","byte_start":576856,"byte_end":576859,"line_start":734,"line_end":734,"column_start":5,"column_end":8}},{"value":"/ In the case of an error the buffer and the object will be discarded, with","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\io\\mod.rs","byte_start":576864,"byte_end":576941,"line_start":735,"line_end":735,"column_start":5,"column_end":82}},{"value":"/ the error yielded.","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\io\\mod.rs","byte_start":576946,"byte_end":576968,"line_start":736,"line_end":736,"column_start":5,"column_end":27}},{"value":"/","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\io\\mod.rs","byte_start":576973,"byte_end":576976,"line_start":737,"line_end":737,"column_start":5,"column_end":8}},{"value":"/ # Errors","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\io\\mod.rs","byte_start":576981,"byte_end":576993,"line_start":738,"line_end":738,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\io\\mod.rs","byte_start":576998,"byte_end":577001,"line_start":739,"line_end":739,"column_start":5,"column_end":8}},{"value":"/ This function has the same error semantics as [`read_until`] and will","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\io\\mod.rs","byte_start":577006,"byte_end":577079,"line_start":740,"line_end":740,"column_start":5,"column_end":78}},{"value":"/ also return an error if the read bytes are not valid UTF-8. If an I/O","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\io\\mod.rs","byte_start":577084,"byte_end":577157,"line_start":741,"line_end":741,"column_start":5,"column_end":78}},{"value":"/ error is encountered then `buf` may contain some bytes already read in","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\io\\mod.rs","byte_start":577162,"byte_end":577236,"line_start":742,"line_end":742,"column_start":5,"column_end":79}},{"value":"/ the event that all data read so far was valid UTF-8.","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\io\\mod.rs","byte_start":577241,"byte_end":577297,"line_start":743,"line_end":743,"column_start":5,"column_end":61}},{"value":"/","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\io\\mod.rs","byte_start":577302,"byte_end":577305,"line_start":744,"line_end":744,"column_start":5,"column_end":8}},{"value":"/ [`read_until`]: AsyncBufReadExt::read_until","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\io\\mod.rs","byte_start":577310,"byte_end":577357,"line_start":745,"line_end":745,"column_start":5,"column_end":52}},{"value":"/","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\io\\mod.rs","byte_start":577362,"byte_end":577365,"line_start":746,"line_end":746,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\io\\mod.rs","byte_start":577370,"byte_end":577384,"line_start":747,"line_end":747,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\io\\mod.rs","byte_start":577389,"byte_end":577392,"line_start":748,"line_end":748,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\io\\mod.rs","byte_start":577397,"byte_end":577404,"line_start":749,"line_end":749,"column_start":5,"column_end":12}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\io\\mod.rs","byte_start":577409,"byte_end":577450,"line_start":750,"line_end":750,"column_start":5,"column_end":46}},{"value":"/ use futures::io::{AsyncBufReadExt, Cursor};","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\io\\mod.rs","byte_start":577455,"byte_end":577502,"line_start":751,"line_end":751,"column_start":5,"column_end":52}},{"value":"/","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\io\\mod.rs","byte_start":577507,"byte_end":577510,"line_start":752,"line_end":752,"column_start":5,"column_end":8}},{"value":"/ let mut cursor = Cursor::new(b\"foo\\nbar\");","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\io\\mod.rs","byte_start":577515,"byte_end":577561,"line_start":753,"line_end":753,"column_start":5,"column_end":51}},{"value":"/ let mut buf = String::new();","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\io\\mod.rs","byte_start":577566,"byte_end":577598,"line_start":754,"line_end":754,"column_start":5,"column_end":37}},{"value":"/","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\io\\mod.rs","byte_start":577603,"byte_end":577606,"line_start":755,"line_end":755,"column_start":5,"column_end":8}},{"value":"/ // cursor is at 'f'","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\io\\mod.rs","byte_start":577611,"byte_end":577634,"line_start":756,"line_end":756,"column_start":5,"column_end":28}},{"value":"/ let num_bytes = cursor.read_line(&mut buf).await?;","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\io\\mod.rs","byte_start":577639,"byte_end":577693,"line_start":757,"line_end":757,"column_start":5,"column_end":59}},{"value":"/ assert_eq!(num_bytes, 4);","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\io\\mod.rs","byte_start":577698,"byte_end":577727,"line_start":758,"line_end":758,"column_start":5,"column_end":34}},{"value":"/ assert_eq!(buf, \"foo\\n\");","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\io\\mod.rs","byte_start":577732,"byte_end":577761,"line_start":759,"line_end":759,"column_start":5,"column_end":34}},{"value":"/ buf.clear();","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\io\\mod.rs","byte_start":577766,"byte_end":577782,"line_start":760,"line_end":760,"column_start":5,"column_end":21}},{"value":"/","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\io\\mod.rs","byte_start":577787,"byte_end":577790,"line_start":761,"line_end":761,"column_start":5,"column_end":8}},{"value":"/ // cursor is at 'b'","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\io\\mod.rs","byte_start":577795,"byte_end":577818,"line_start":762,"line_end":762,"column_start":5,"column_end":28}},{"value":"/ let num_bytes = cursor.read_line(&mut buf).await?;","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\io\\mod.rs","byte_start":577823,"byte_end":577877,"line_start":763,"line_end":763,"column_start":5,"column_end":59}},{"value":"/ assert_eq!(num_bytes, 3);","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\io\\mod.rs","byte_start":577882,"byte_end":577911,"line_start":764,"line_end":764,"column_start":5,"column_end":34}},{"value":"/ assert_eq!(buf, \"bar\");","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\io\\mod.rs","byte_start":577916,"byte_end":577943,"line_start":765,"line_end":765,"column_start":5,"column_end":32}},{"value":"/ buf.clear();","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\io\\mod.rs","byte_start":577948,"byte_end":577964,"line_start":766,"line_end":766,"column_start":5,"column_end":21}},{"value":"/","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\io\\mod.rs","byte_start":577969,"byte_end":577972,"line_start":767,"line_end":767,"column_start":5,"column_end":8}},{"value":"/ // cursor is at EOF","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\io\\mod.rs","byte_start":577977,"byte_end":578000,"line_start":768,"line_end":768,"column_start":5,"column_end":28}},{"value":"/ let num_bytes = cursor.read_line(&mut buf).await?;","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\io\\mod.rs","byte_start":578005,"byte_end":578059,"line_start":769,"line_end":769,"column_start":5,"column_end":59}},{"value":"/ assert_eq!(num_bytes, 0);","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\io\\mod.rs","byte_start":578064,"byte_end":578093,"line_start":770,"line_end":770,"column_start":5,"column_end":34}},{"value":"/ assert_eq!(buf, \"\");","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\io\\mod.rs","byte_start":578098,"byte_end":578122,"line_start":771,"line_end":771,"column_start":5,"column_end":29}},{"value":"/ # Ok::<(), Box<dyn std::error::Error>>(()) }).unwrap();","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\io\\mod.rs","byte_start":578127,"byte_end":578186,"line_start":772,"line_end":772,"column_start":5,"column_end":64}},{"value":"/ ```","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\io\\mod.rs","byte_start":578191,"byte_end":578198,"line_start":773,"line_end":773,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":9410},"span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\io\\mod.rs","byte_start":579739,"byte_end":579744,"line_start":813,"line_end":813,"column_start":8,"column_end":13},"name":"lines","qualname":"::io::AsyncBufReadExt::lines","value":"pub fn lines(Self) -> Lines<Self> where Self: Sized","parent":{"krate":0,"index":9403},"children":[],"decl_id":null,"docs":" Returns a stream over the lines of this reader.\n This method is the async equivalent to [`BufRead::lines`](std::io::BufRead::lines).","sig":null,"attributes":[{"value":"/ Returns a stream over the lines of this reader.","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\io\\mod.rs","byte_start":578393,"byte_end":578444,"line_start":781,"line_end":781,"column_start":5,"column_end":56}},{"value":"/ This method is the async equivalent to [`BufRead::lines`](std::io::BufRead::lines).","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\io\\mod.rs","byte_start":578449,"byte_end":578536,"line_start":782,"line_end":782,"column_start":5,"column_end":92}},{"value":"/","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\io\\mod.rs","byte_start":578541,"byte_end":578544,"line_start":783,"line_end":783,"column_start":5,"column_end":8}},{"value":"/ The stream returned from this function will yield instances of","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\io\\mod.rs","byte_start":578549,"byte_end":578615,"line_start":784,"line_end":784,"column_start":5,"column_end":71}},{"value":"/ [`io::Result`]`<`[`String`]`>`. Each string returned will *not* have a newline","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\io\\mod.rs","byte_start":578620,"byte_end":578702,"line_start":785,"line_end":785,"column_start":5,"column_end":87}},{"value":"/ byte (the 0xA byte) or CRLF (0xD, 0xA bytes) at the end.","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\io\\mod.rs","byte_start":578707,"byte_end":578767,"line_start":786,"line_end":786,"column_start":5,"column_end":65}},{"value":"/","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\io\\mod.rs","byte_start":578772,"byte_end":578775,"line_start":787,"line_end":787,"column_start":5,"column_end":8}},{"value":"/ [`io::Result`]: std::io::Result","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\io\\mod.rs","byte_start":578780,"byte_end":578815,"line_start":788,"line_end":788,"column_start":5,"column_end":40}},{"value":"/ [`String`]: String","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\io\\mod.rs","byte_start":578820,"byte_end":578842,"line_start":789,"line_end":789,"column_start":5,"column_end":27}},{"value":"/","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\io\\mod.rs","byte_start":578847,"byte_end":578850,"line_start":790,"line_end":790,"column_start":5,"column_end":8}},{"value":"/ # Errors","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\io\\mod.rs","byte_start":578855,"byte_end":578867,"line_start":791,"line_end":791,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\io\\mod.rs","byte_start":578872,"byte_end":578875,"line_start":792,"line_end":792,"column_start":5,"column_end":8}},{"value":"/ Each line of the stream has the same error semantics as [`AsyncBufReadExt::read_line`].","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\io\\mod.rs","byte_start":578880,"byte_end":578971,"line_start":793,"line_end":793,"column_start":5,"column_end":96}},{"value":"/","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\io\\mod.rs","byte_start":578976,"byte_end":578979,"line_start":794,"line_end":794,"column_start":5,"column_end":8}},{"value":"/ [`AsyncBufReadExt::read_line`]: AsyncBufReadExt::read_line","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\io\\mod.rs","byte_start":578984,"byte_end":579046,"line_start":795,"line_end":795,"column_start":5,"column_end":67}},{"value":"/","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\io\\mod.rs","byte_start":579051,"byte_end":579054,"line_start":796,"line_end":796,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\io\\mod.rs","byte_start":579059,"byte_end":579073,"line_start":797,"line_end":797,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\io\\mod.rs","byte_start":579078,"byte_end":579081,"line_start":798,"line_end":798,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\io\\mod.rs","byte_start":579086,"byte_end":579093,"line_start":799,"line_end":799,"column_start":5,"column_end":12}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\io\\mod.rs","byte_start":579098,"byte_end":579139,"line_start":800,"line_end":800,"column_start":5,"column_end":46}},{"value":"/ use futures::io::{AsyncBufReadExt, Cursor};","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\io\\mod.rs","byte_start":579144,"byte_end":579191,"line_start":801,"line_end":801,"column_start":5,"column_end":52}},{"value":"/ use futures::stream::StreamExt;","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\io\\mod.rs","byte_start":579196,"byte_end":579231,"line_start":802,"line_end":802,"column_start":5,"column_end":40}},{"value":"/","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\io\\mod.rs","byte_start":579236,"byte_end":579239,"line_start":803,"line_end":803,"column_start":5,"column_end":8}},{"value":"/ let cursor = Cursor::new(b\"lorem\\nipsum\\r\\ndolor\");","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\io\\mod.rs","byte_start":579244,"byte_end":579299,"line_start":804,"line_end":804,"column_start":5,"column_end":60}},{"value":"/","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\io\\mod.rs","byte_start":579304,"byte_end":579307,"line_start":805,"line_end":805,"column_start":5,"column_end":8}},{"value":"/ let mut lines_stream = cursor.lines().map(|l| l.unwrap());","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\io\\mod.rs","byte_start":579312,"byte_end":579374,"line_start":806,"line_end":806,"column_start":5,"column_end":67}},{"value":"/ assert_eq!(lines_stream.next().await, Some(String::from(\"lorem\")));","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\io\\mod.rs","byte_start":579379,"byte_end":579450,"line_start":807,"line_end":807,"column_start":5,"column_end":76}},{"value":"/ assert_eq!(lines_stream.next().await, Some(String::from(\"ipsum\")));","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\io\\mod.rs","byte_start":579455,"byte_end":579526,"line_start":808,"line_end":808,"column_start":5,"column_end":76}},{"value":"/ assert_eq!(lines_stream.next().await, Some(String::from(\"dolor\")));","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\io\\mod.rs","byte_start":579531,"byte_end":579602,"line_start":809,"line_end":809,"column_start":5,"column_end":76}},{"value":"/ assert_eq!(lines_stream.next().await, None);","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\io\\mod.rs","byte_start":579607,"byte_end":579655,"line_start":810,"line_end":810,"column_start":5,"column_end":53}},{"value":"/ # Ok::<(), Box<dyn std::error::Error>>(()) }).unwrap();","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\io\\mod.rs","byte_start":579660,"byte_end":579719,"line_start":811,"line_end":811,"column_start":5,"column_end":64}},{"value":"/ ```","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\io\\mod.rs","byte_start":579724,"byte_end":579731,"line_start":812,"line_end":812,"column_start":5,"column_end":12}}]},{"kind":"Mod","id":{"krate":0,"index":9442},"span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\lock\\mod.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"lock","qualname":"::lock","value":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\lock\\mod.rs","parent":null,"children":[{"krate":0,"index":9443},{"krate":0,"index":9625},{"krate":0,"index":9626},{"krate":0,"index":9629},{"krate":0,"index":9632},{"krate":0,"index":9635},{"krate":0,"index":9638},{"krate":0,"index":9720}],"decl_id":null,"docs":" Futures-powered synchronization primitives.","sig":null,"attributes":[{"value":"cfg(feature = \"alloc\")","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\lib.rs","byte_start":11428,"byte_end":11453,"line_start":329,"line_end":329,"column_start":1,"column_end":26}},{"value":"/ Futures-powered synchronization primitives.","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\lock\\mod.rs","byte_start":662123,"byte_end":662170,"line_start":1,"line_end":1,"column_start":1,"column_end":48}},{"value":"/","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\lock\\mod.rs","byte_start":662171,"byte_end":662174,"line_start":2,"line_end":2,"column_start":1,"column_end":4}},{"value":"/ This module is only available when the `std` or `alloc` feature of this","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\lock\\mod.rs","byte_start":662175,"byte_end":662250,"line_start":3,"line_end":3,"column_start":1,"column_end":76}},{"value":"/ library is activated, and it is activated by default.","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\lock\\mod.rs","byte_start":662251,"byte_end":662308,"line_start":4,"line_end":4,"column_start":1,"column_end":58}}]},{"kind":"Struct","id":{"krate":0,"index":9497},"span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\lock\\mutex.rs","byte_start":663731,"byte_end":663736,"line_start":20,"line_end":20,"column_start":12,"column_end":17},"name":"Mutex","qualname":"::lock::mutex::Mutex","value":"Mutex {  }","parent":null,"children":[{"krate":0,"index":9499},{"krate":0,"index":9500},{"krate":0,"index":9501}],"decl_id":null,"docs":" A futures-aware mutex.","sig":null,"attributes":[{"value":"/ A futures-aware mutex.","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\lock\\mutex.rs","byte_start":663404,"byte_end":663430,"line_start":12,"line_end":12,"column_start":1,"column_end":27}},{"value":"/","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\lock\\mutex.rs","byte_start":663431,"byte_end":663434,"line_start":13,"line_end":13,"column_start":1,"column_end":4}},{"value":"/ # Fairness","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\lock\\mutex.rs","byte_start":663435,"byte_end":663449,"line_start":14,"line_end":14,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\lock\\mutex.rs","byte_start":663450,"byte_end":663453,"line_start":15,"line_end":15,"column_start":1,"column_end":4}},{"value":"/ This mutex provides no fairness guarantees. Tasks may not acquire the mutex","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\lock\\mutex.rs","byte_start":663454,"byte_end":663533,"line_start":16,"line_end":16,"column_start":1,"column_end":80}},{"value":"/ in the order that they requested the lock, and it's possible for a single task","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\lock\\mutex.rs","byte_start":663534,"byte_end":663616,"line_start":17,"line_end":17,"column_start":1,"column_end":83}},{"value":"/ which repeatedly takes the lock to starve other tasks, which may be left waiting","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\lock\\mutex.rs","byte_start":663617,"byte_end":663701,"line_start":18,"line_end":18,"column_start":1,"column_end":85}},{"value":"/ indefinitely.","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\lock\\mutex.rs","byte_start":663702,"byte_end":663719,"line_start":19,"line_end":19,"column_start":1,"column_end":18}}]},{"kind":"Method","id":{"krate":0,"index":9524},"span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\lock\\mutex.rs","byte_start":664962,"byte_end":664965,"line_start":74,"line_end":74,"column_start":12,"column_end":15},"name":"new","qualname":"<Mutex<T>>::new","value":"pub fn new(T) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Creates a new futures-aware mutex.\n","sig":null,"attributes":[{"value":"/ Creates a new futures-aware mutex.","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\lock\\mutex.rs","byte_start":664912,"byte_end":664950,"line_start":73,"line_end":73,"column_start":5,"column_end":43}}]},{"kind":"Method","id":{"krate":0,"index":9525},"span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\lock\\mutex.rs","byte_start":665392,"byte_end":665402,"line_start":92,"line_end":92,"column_start":12,"column_end":22},"name":"into_inner","qualname":"<Mutex<T>>::into_inner","value":"pub fn into_inner(Self) -> T","parent":null,"children":[],"decl_id":null,"docs":" Consumes this mutex, returning the underlying data.","sig":null,"attributes":[{"value":"/ Consumes this mutex, returning the underlying data.","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\lock\\mutex.rs","byte_start":665146,"byte_end":665201,"line_start":82,"line_end":82,"column_start":5,"column_end":60}},{"value":"/","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\lock\\mutex.rs","byte_start":665206,"byte_end":665209,"line_start":83,"line_end":83,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\lock\\mutex.rs","byte_start":665214,"byte_end":665228,"line_start":84,"line_end":84,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\lock\\mutex.rs","byte_start":665233,"byte_end":665236,"line_start":85,"line_end":85,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\lock\\mutex.rs","byte_start":665241,"byte_end":665248,"line_start":86,"line_end":86,"column_start":5,"column_end":12}},{"value":"/ use futures::lock::Mutex;","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\lock\\mutex.rs","byte_start":665253,"byte_end":665282,"line_start":87,"line_end":87,"column_start":5,"column_end":34}},{"value":"/","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\lock\\mutex.rs","byte_start":665287,"byte_end":665290,"line_start":88,"line_end":88,"column_start":5,"column_end":8}},{"value":"/ let mutex = Mutex::new(0);","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\lock\\mutex.rs","byte_start":665295,"byte_end":665325,"line_start":89,"line_end":89,"column_start":5,"column_end":35}},{"value":"/ assert_eq!(mutex.into_inner(), 0);","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\lock\\mutex.rs","byte_start":665330,"byte_end":665368,"line_start":90,"line_end":90,"column_start":5,"column_end":43}},{"value":"/ ```","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\lock\\mutex.rs","byte_start":665373,"byte_end":665380,"line_start":91,"line_end":91,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":9528},"span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\lock\\mutex.rs","byte_start":665616,"byte_end":665624,"line_start":101,"line_end":101,"column_start":12,"column_end":20},"name":"try_lock","qualname":"<Mutex<T>>::try_lock","value":"pub fn try_lock(&Self) -> Option<MutexGuard<, T>>","parent":null,"children":[],"decl_id":null,"docs":" Attempt to acquire the lock immediately.","sig":null,"attributes":[{"value":"/ Attempt to acquire the lock immediately.","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\lock\\mutex.rs","byte_start":665488,"byte_end":665532,"line_start":98,"line_end":98,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\lock\\mutex.rs","byte_start":665537,"byte_end":665540,"line_start":99,"line_end":99,"column_start":5,"column_end":8}},{"value":"/ If the lock is currently held, this will return `None`.","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\lock\\mutex.rs","byte_start":665545,"byte_end":665604,"line_start":100,"line_end":100,"column_start":5,"column_end":64}}]},{"kind":"Method","id":{"krate":0,"index":9529},"span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\lock\\mutex.rs","byte_start":666045,"byte_end":666049,"line_start":114,"line_end":114,"column_start":12,"column_end":16},"name":"lock","qualname":"<Mutex<T>>::lock","value":"pub fn lock(&Self) -> MutexLockFuture<, T>","parent":null,"children":[],"decl_id":null,"docs":" Acquire the lock asynchronously.","sig":null,"attributes":[{"value":"/ Acquire the lock asynchronously.","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\lock\\mutex.rs","byte_start":665880,"byte_end":665916,"line_start":110,"line_end":110,"column_start":5,"column_end":41}},{"value":"/","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\lock\\mutex.rs","byte_start":665921,"byte_end":665924,"line_start":111,"line_end":111,"column_start":5,"column_end":8}},{"value":"/ This method returns a future that will resolve once the lock has been","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\lock\\mutex.rs","byte_start":665929,"byte_end":666002,"line_start":112,"line_end":112,"column_start":5,"column_end":78}},{"value":"/ successfully acquired.","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\lock\\mutex.rs","byte_start":666007,"byte_end":666033,"line_start":113,"line_end":113,"column_start":5,"column_end":31}}]},{"kind":"Method","id":{"krate":0,"index":9530},"span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\lock\\mutex.rs","byte_start":666677,"byte_end":666684,"line_start":134,"line_end":134,"column_start":12,"column_end":19},"name":"get_mut","qualname":"<Mutex<T>>::get_mut","value":"pub fn get_mut(&mut Self) -> &mut T","parent":null,"children":[],"decl_id":null,"docs":" Returns a mutable reference to the underlying data.","sig":null,"attributes":[{"value":"/ Returns a mutable reference to the underlying data.","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\lock\\mutex.rs","byte_start":666167,"byte_end":666222,"line_start":118,"line_end":118,"column_start":5,"column_end":60}},{"value":"/","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\lock\\mutex.rs","byte_start":666227,"byte_end":666230,"line_start":119,"line_end":119,"column_start":5,"column_end":8}},{"value":"/ Since this call borrows the `Mutex` mutably, no actual locking needs to","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\lock\\mutex.rs","byte_start":666235,"byte_end":666310,"line_start":120,"line_end":120,"column_start":5,"column_end":80}},{"value":"/ take place -- the mutable borrow statically guarantees no locks exist.","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\lock\\mutex.rs","byte_start":666315,"byte_end":666389,"line_start":121,"line_end":121,"column_start":5,"column_end":79}},{"value":"/","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\lock\\mutex.rs","byte_start":666394,"byte_end":666397,"line_start":122,"line_end":122,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\lock\\mutex.rs","byte_start":666402,"byte_end":666416,"line_start":123,"line_end":123,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\lock\\mutex.rs","byte_start":666421,"byte_end":666424,"line_start":124,"line_end":124,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\lock\\mutex.rs","byte_start":666429,"byte_end":666436,"line_start":125,"line_end":125,"column_start":5,"column_end":12}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\lock\\mutex.rs","byte_start":666441,"byte_end":666482,"line_start":126,"line_end":126,"column_start":5,"column_end":46}},{"value":"/ use futures::lock::Mutex;","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\lock\\mutex.rs","byte_start":666487,"byte_end":666516,"line_start":127,"line_end":127,"column_start":5,"column_end":34}},{"value":"/","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\lock\\mutex.rs","byte_start":666521,"byte_end":666524,"line_start":128,"line_end":128,"column_start":5,"column_end":8}},{"value":"/ let mut mutex = Mutex::new(0);","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\lock\\mutex.rs","byte_start":666529,"byte_end":666563,"line_start":129,"line_end":129,"column_start":5,"column_end":39}},{"value":"/ *mutex.get_mut() = 10;","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\lock\\mutex.rs","byte_start":666568,"byte_end":666594,"line_start":130,"line_end":130,"column_start":5,"column_end":31}},{"value":"/ assert_eq!(*mutex.lock().await, 10);","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\lock\\mutex.rs","byte_start":666599,"byte_end":666639,"line_start":131,"line_end":131,"column_start":5,"column_end":45}},{"value":"/ # });","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\lock\\mutex.rs","byte_start":666644,"byte_end":666653,"line_start":132,"line_end":132,"column_start":5,"column_end":14}},{"value":"/ ```","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\lock\\mutex.rs","byte_start":666658,"byte_end":666665,"line_start":133,"line_end":133,"column_start":5,"column_end":12}}]},{"kind":"Struct","id":{"krate":0,"index":9534},"span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\lock\\mutex.rs","byte_start":668406,"byte_end":668421,"line_start":179,"line_end":179,"column_start":12,"column_end":27},"name":"MutexLockFuture","qualname":"::lock::mutex::MutexLockFuture","value":"MutexLockFuture {  }","parent":null,"children":[{"krate":0,"index":9537},{"krate":0,"index":9538}],"decl_id":null,"docs":" A future which resolves when the target mutex has been successfully acquired.\n","sig":null,"attributes":[{"value":"/ A future which resolves when the target mutex has been successfully acquired.","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\lock\\mutex.rs","byte_start":668313,"byte_end":668394,"line_start":178,"line_end":178,"column_start":1,"column_end":82}}]},{"kind":"Struct","id":{"krate":0,"index":9553},"span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\lock\\mutex.rs","byte_start":670956,"byte_end":670966,"line_start":255,"line_end":255,"column_start":12,"column_end":22},"name":"MutexGuard","qualname":"::lock::mutex::MutexGuard","value":"MutexGuard {  }","parent":null,"children":[{"krate":0,"index":9556}],"decl_id":null,"docs":" An RAII guard returned by the `lock` and `try_lock` methods.\n When this structure is dropped (falls out of scope), the lock will be\n unlocked.\n","sig":null,"attributes":[{"value":"/ An RAII guard returned by the `lock` and `try_lock` methods.","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\lock\\mutex.rs","byte_start":670792,"byte_end":670856,"line_start":252,"line_end":252,"column_start":1,"column_end":65}},{"value":"/ When this structure is dropped (falls out of scope), the lock will be","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\lock\\mutex.rs","byte_start":670857,"byte_end":670930,"line_start":253,"line_end":253,"column_start":1,"column_end":74}},{"value":"/ unlocked.","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\lock\\mutex.rs","byte_start":670931,"byte_end":670944,"line_start":254,"line_end":254,"column_start":1,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":9560},"span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\lock\\mutex.rs","byte_start":671535,"byte_end":671538,"line_start":276,"line_end":276,"column_start":12,"column_end":15},"name":"map","qualname":"<MutexGuard>::map","value":"pub fn map<U: ?Sized, F>(Self, F) -> MappedMutexGuard where F: FnOnce(&mut T)\n-> &mut U","parent":null,"children":[],"decl_id":null,"docs":" Returns a locked view over a portion of the locked data.","sig":null,"attributes":[{"value":"/ Returns a locked view over a portion of the locked data.","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\lock\\mutex.rs","byte_start":671056,"byte_end":671116,"line_start":260,"line_end":260,"column_start":5,"column_end":65}},{"value":"/","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\lock\\mutex.rs","byte_start":671121,"byte_end":671124,"line_start":261,"line_end":261,"column_start":5,"column_end":8}},{"value":"/ # Example","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\lock\\mutex.rs","byte_start":671129,"byte_end":671142,"line_start":262,"line_end":262,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\lock\\mutex.rs","byte_start":671147,"byte_end":671150,"line_start":263,"line_end":263,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\lock\\mutex.rs","byte_start":671155,"byte_end":671162,"line_start":264,"line_end":264,"column_start":5,"column_end":12}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\lock\\mutex.rs","byte_start":671167,"byte_end":671208,"line_start":265,"line_end":265,"column_start":5,"column_end":46}},{"value":"/ use futures::lock::{Mutex, MutexGuard};","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\lock\\mutex.rs","byte_start":671213,"byte_end":671256,"line_start":266,"line_end":266,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\lock\\mutex.rs","byte_start":671261,"byte_end":671264,"line_start":267,"line_end":267,"column_start":5,"column_end":8}},{"value":"/ let data = Mutex::new(Some(\"value\".to_string()));","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\lock\\mutex.rs","byte_start":671269,"byte_end":671322,"line_start":268,"line_end":268,"column_start":5,"column_end":58}},{"value":"/ {","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\lock\\mutex.rs","byte_start":671327,"byte_end":671332,"line_start":269,"line_end":269,"column_start":5,"column_end":10}},{"value":"/     let locked_str = MutexGuard::map(data.lock().await, |opt| opt.as_mut().unwrap());","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\lock\\mutex.rs","byte_start":671337,"byte_end":671426,"line_start":270,"line_end":270,"column_start":5,"column_end":94}},{"value":"/     assert_eq!(&*locked_str, \"value\");","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\lock\\mutex.rs","byte_start":671431,"byte_end":671473,"line_start":271,"line_end":271,"column_start":5,"column_end":47}},{"value":"/ }","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\lock\\mutex.rs","byte_start":671478,"byte_end":671483,"line_start":272,"line_end":272,"column_start":5,"column_end":10}},{"value":"/ # });","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\lock\\mutex.rs","byte_start":671488,"byte_end":671497,"line_start":273,"line_end":273,"column_start":5,"column_end":14}},{"value":"/ ```","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\lock\\mutex.rs","byte_start":671502,"byte_end":671509,"line_start":274,"line_end":274,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\lock\\mutex.rs","byte_start":671514,"byte_end":671523,"line_start":275,"line_end":275,"column_start":5,"column_end":14}}]},{"kind":"Struct","id":{"krate":0,"index":9576},"span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\lock\\mutex.rs","byte_start":672830,"byte_end":672846,"line_start":316,"line_end":316,"column_start":12,"column_end":28},"name":"MappedMutexGuard","qualname":"::lock::mutex::MappedMutexGuard","value":"MappedMutexGuard {  }","parent":null,"children":[{"krate":0,"index":9580},{"krate":0,"index":9581},{"krate":0,"index":9582}],"decl_id":null,"docs":" An RAII guard returned by the `MutexGuard::map` and `MappedMutexGuard::map` methods.\n When this structure is dropped (falls out of scope), the lock will be unlocked.\n","sig":null,"attributes":[{"value":"/ An RAII guard returned by the `MutexGuard::map` and `MappedMutexGuard::map` methods.","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\lock\\mutex.rs","byte_start":672646,"byte_end":672734,"line_start":314,"line_end":314,"column_start":1,"column_end":89}},{"value":"/ When this structure is dropped (falls out of scope), the lock will be unlocked.","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\lock\\mutex.rs","byte_start":672735,"byte_end":672818,"line_start":315,"line_end":315,"column_start":1,"column_end":84}}]},{"kind":"Method","id":{"krate":0,"index":9587},"span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\lock\\mutex.rs","byte_start":673612,"byte_end":673615,"line_start":340,"line_end":340,"column_start":12,"column_end":15},"name":"map","qualname":"<MappedMutexGuard>::map","value":"pub fn map<V: ?Sized, F>(Self, F) -> MappedMutexGuard where F: FnOnce(&mut U)\n-> &mut V","parent":null,"children":[],"decl_id":null,"docs":" Returns a locked view over a portion of the locked data.","sig":null,"attributes":[{"value":"/ Returns a locked view over a portion of the locked data.","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\lock\\mutex.rs","byte_start":673023,"byte_end":673083,"line_start":323,"line_end":323,"column_start":5,"column_end":65}},{"value":"/","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\lock\\mutex.rs","byte_start":673088,"byte_end":673091,"line_start":324,"line_end":324,"column_start":5,"column_end":8}},{"value":"/ # Example","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\lock\\mutex.rs","byte_start":673096,"byte_end":673109,"line_start":325,"line_end":325,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\lock\\mutex.rs","byte_start":673114,"byte_end":673117,"line_start":326,"line_end":326,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\lock\\mutex.rs","byte_start":673122,"byte_end":673129,"line_start":327,"line_end":327,"column_start":5,"column_end":12}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\lock\\mutex.rs","byte_start":673134,"byte_end":673175,"line_start":328,"line_end":328,"column_start":5,"column_end":46}},{"value":"/ use futures::lock::{MappedMutexGuard, Mutex, MutexGuard};","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\lock\\mutex.rs","byte_start":673180,"byte_end":673241,"line_start":329,"line_end":329,"column_start":5,"column_end":66}},{"value":"/","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\lock\\mutex.rs","byte_start":673246,"byte_end":673249,"line_start":330,"line_end":330,"column_start":5,"column_end":8}},{"value":"/ let data = Mutex::new(Some(\"value\".to_string()));","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\lock\\mutex.rs","byte_start":673254,"byte_end":673307,"line_start":331,"line_end":331,"column_start":5,"column_end":58}},{"value":"/ {","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\lock\\mutex.rs","byte_start":673312,"byte_end":673317,"line_start":332,"line_end":332,"column_start":5,"column_end":10}},{"value":"/     let locked_str = MutexGuard::map(data.lock().await, |opt| opt.as_mut().unwrap());","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\lock\\mutex.rs","byte_start":673322,"byte_end":673411,"line_start":333,"line_end":333,"column_start":5,"column_end":94}},{"value":"/     let locked_char = MappedMutexGuard::map(locked_str, |s| s.get_mut(0..1).unwrap());","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\lock\\mutex.rs","byte_start":673416,"byte_end":673506,"line_start":334,"line_end":334,"column_start":5,"column_end":95}},{"value":"/     assert_eq!(&*locked_char, \"v\");","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\lock\\mutex.rs","byte_start":673511,"byte_end":673550,"line_start":335,"line_end":335,"column_start":5,"column_end":44}},{"value":"/ }","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\lock\\mutex.rs","byte_start":673555,"byte_end":673560,"line_start":336,"line_end":336,"column_start":5,"column_end":10}},{"value":"/ # });","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\lock\\mutex.rs","byte_start":673565,"byte_end":673574,"line_start":337,"line_end":337,"column_start":5,"column_end":14}},{"value":"/ ```","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\lock\\mutex.rs","byte_start":673579,"byte_end":673586,"line_start":338,"line_end":338,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\lock\\mutex.rs","byte_start":673591,"byte_end":673600,"line_start":339,"line_end":339,"column_start":5,"column_end":14}}]},{"kind":"Struct","id":{"krate":0,"index":18113},"span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\abortable.rs","byte_start":686669,"byte_end":686678,"line_start":15,"line_end":15,"column_start":16,"column_end":25},"name":"Abortable","qualname":"::abortable::Abortable","value":"Abortable {  }","parent":null,"children":[{"krate":0,"index":18115},{"krate":0,"index":18116}],"decl_id":null,"docs":" A future/stream which can be remotely short-circuited using an `AbortHandle`.\n","sig":null,"attributes":[{"value":"must_use = \"futures/streams do nothing unless you poll them\"","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pin-project-lite-0.2.9\\src\\lib.rs","byte_start":14239710,"byte_end":14239719,"line_start":633,"line_end":633,"column_start":11,"column_end":20}}]},{"kind":"Method","id":{"krate":0,"index":9761},"span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\abortable.rs","byte_start":688088,"byte_end":688091,"line_start":58,"line_end":58,"column_start":12,"column_end":15},"name":"new","qualname":"<Abortable<T>>::new","value":"pub fn new(T, AbortRegistration) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Creates a new `Abortable` future/stream using an existing `AbortRegistration`.\n `AbortRegistration`s can be acquired through `AbortHandle::new`.","sig":null,"attributes":[{"value":"/ Creates a new `Abortable` future/stream using an existing `AbortRegistration`.","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\abortable.rs","byte_start":686784,"byte_end":686866,"line_start":23,"line_end":23,"column_start":5,"column_end":87}},{"value":"/ `AbortRegistration`s can be acquired through `AbortHandle::new`.","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\abortable.rs","byte_start":686871,"byte_end":686939,"line_start":24,"line_end":24,"column_start":5,"column_end":73}},{"value":"/","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\abortable.rs","byte_start":686944,"byte_end":686947,"line_start":25,"line_end":25,"column_start":5,"column_end":8}},{"value":"/ When `abort` is called on the handle tied to `reg` or if `abort` has","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\abortable.rs","byte_start":686952,"byte_end":687024,"line_start":26,"line_end":26,"column_start":5,"column_end":77}},{"value":"/ already been called, the future/stream will complete immediately without making","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\abortable.rs","byte_start":687029,"byte_end":687112,"line_start":27,"line_end":27,"column_start":5,"column_end":88}},{"value":"/ any further progress.","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\abortable.rs","byte_start":687117,"byte_end":687142,"line_start":28,"line_end":28,"column_start":5,"column_end":30}},{"value":"/","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\abortable.rs","byte_start":687147,"byte_end":687150,"line_start":29,"line_end":29,"column_start":5,"column_end":8}},{"value":"/ # Examples:","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\abortable.rs","byte_start":687155,"byte_end":687170,"line_start":30,"line_end":30,"column_start":5,"column_end":20}},{"value":"/","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\abortable.rs","byte_start":687175,"byte_end":687178,"line_start":31,"line_end":31,"column_start":5,"column_end":8}},{"value":"/ Usage with futures:","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\abortable.rs","byte_start":687183,"byte_end":687206,"line_start":32,"line_end":32,"column_start":5,"column_end":28}},{"value":"/","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\abortable.rs","byte_start":687211,"byte_end":687214,"line_start":33,"line_end":33,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\abortable.rs","byte_start":687219,"byte_end":687226,"line_start":34,"line_end":34,"column_start":5,"column_end":12}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\abortable.rs","byte_start":687231,"byte_end":687272,"line_start":35,"line_end":35,"column_start":5,"column_end":46}},{"value":"/ use futures::future::{Abortable, AbortHandle, Aborted};","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\abortable.rs","byte_start":687277,"byte_end":687336,"line_start":36,"line_end":36,"column_start":5,"column_end":64}},{"value":"/","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\abortable.rs","byte_start":687341,"byte_end":687344,"line_start":37,"line_end":37,"column_start":5,"column_end":8}},{"value":"/ let (abort_handle, abort_registration) = AbortHandle::new_pair();","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\abortable.rs","byte_start":687349,"byte_end":687418,"line_start":38,"line_end":38,"column_start":5,"column_end":74}},{"value":"/ let future = Abortable::new(async { 2 }, abort_registration);","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\abortable.rs","byte_start":687423,"byte_end":687488,"line_start":39,"line_end":39,"column_start":5,"column_end":70}},{"value":"/ abort_handle.abort();","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\abortable.rs","byte_start":687493,"byte_end":687518,"line_start":40,"line_end":40,"column_start":5,"column_end":30}},{"value":"/ assert_eq!(future.await, Err(Aborted));","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\abortable.rs","byte_start":687523,"byte_end":687566,"line_start":41,"line_end":41,"column_start":5,"column_end":48}},{"value":"/ # });","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\abortable.rs","byte_start":687571,"byte_end":687580,"line_start":42,"line_end":42,"column_start":5,"column_end":14}},{"value":"/ ```","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\abortable.rs","byte_start":687585,"byte_end":687592,"line_start":43,"line_end":43,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\abortable.rs","byte_start":687597,"byte_end":687600,"line_start":44,"line_end":44,"column_start":5,"column_end":8}},{"value":"/ Usage with streams:","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\abortable.rs","byte_start":687605,"byte_end":687628,"line_start":45,"line_end":45,"column_start":5,"column_end":28}},{"value":"/","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\abortable.rs","byte_start":687633,"byte_end":687636,"line_start":46,"line_end":46,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\abortable.rs","byte_start":687641,"byte_end":687648,"line_start":47,"line_end":47,"column_start":5,"column_end":12}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\abortable.rs","byte_start":687653,"byte_end":687694,"line_start":48,"line_end":48,"column_start":5,"column_end":46}},{"value":"/ # use futures::future::{Abortable, AbortHandle};","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\abortable.rs","byte_start":687699,"byte_end":687751,"line_start":49,"line_end":49,"column_start":5,"column_end":57}},{"value":"/ # use futures::stream::{self, StreamExt};","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\abortable.rs","byte_start":687756,"byte_end":687801,"line_start":50,"line_end":50,"column_start":5,"column_end":50}},{"value":"/","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\abortable.rs","byte_start":687806,"byte_end":687809,"line_start":51,"line_end":51,"column_start":5,"column_end":8}},{"value":"/ let (abort_handle, abort_registration) = AbortHandle::new_pair();","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\abortable.rs","byte_start":687814,"byte_end":687883,"line_start":52,"line_end":52,"column_start":5,"column_end":74}},{"value":"/ let mut stream = Abortable::new(stream::iter(vec![1, 2, 3]), abort_registration);","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\abortable.rs","byte_start":687888,"byte_end":687973,"line_start":53,"line_end":53,"column_start":5,"column_end":90}},{"value":"/ abort_handle.abort();","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\abortable.rs","byte_start":687978,"byte_end":688003,"line_start":54,"line_end":54,"column_start":5,"column_end":30}},{"value":"/ assert_eq!(stream.next().await, None);","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\abortable.rs","byte_start":688008,"byte_end":688050,"line_start":55,"line_end":55,"column_start":5,"column_end":47}},{"value":"/ # });","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\abortable.rs","byte_start":688055,"byte_end":688064,"line_start":56,"line_end":56,"column_start":5,"column_end":14}},{"value":"/ ```","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\abortable.rs","byte_start":688069,"byte_end":688076,"line_start":57,"line_end":57,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":9762},"span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\abortable.rs","byte_start":688596,"byte_end":688606,"line_start":68,"line_end":68,"column_start":12,"column_end":22},"name":"is_aborted","qualname":"<Abortable<T>>::is_aborted","value":"pub fn is_aborted(&Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Checks whether the task has been aborted. Note that all this\n method indicates is whether [`AbortHandle::abort`] was *called*.\n This means that it will return `true` even if:\n * `abort` was called after the task had completed.\n * `abort` was called while the task was being polled - the task may still be running and\n will not be stopped until `poll` returns.\n","sig":null,"attributes":[{"value":"/ Checks whether the task has been aborted. Note that all this","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\abortable.rs","byte_start":688186,"byte_end":688250,"line_start":62,"line_end":62,"column_start":5,"column_end":69}},{"value":"/ method indicates is whether [`AbortHandle::abort`] was *called*.","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\abortable.rs","byte_start":688255,"byte_end":688323,"line_start":63,"line_end":63,"column_start":5,"column_end":73}},{"value":"/ This means that it will return `true` even if:","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\abortable.rs","byte_start":688328,"byte_end":688378,"line_start":64,"line_end":64,"column_start":5,"column_end":55}},{"value":"/ * `abort` was called after the task had completed.","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\abortable.rs","byte_start":688383,"byte_end":688437,"line_start":65,"line_end":65,"column_start":5,"column_end":59}},{"value":"/ * `abort` was called while the task was being polled - the task may still be running and","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\abortable.rs","byte_start":688442,"byte_end":688534,"line_start":66,"line_end":66,"column_start":5,"column_end":97}},{"value":"/ will not be stopped until `poll` returns.","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\abortable.rs","byte_start":688539,"byte_end":688584,"line_start":67,"line_end":67,"column_start":5,"column_end":50}}]},{"kind":"Struct","id":{"krate":0,"index":18156},"span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\abortable.rs","byte_start":688874,"byte_end":688891,"line_start":77,"line_end":77,"column_start":12,"column_end":29},"name":"AbortRegistration","qualname":"::abortable::AbortRegistration","value":"AbortRegistration {  }","parent":null,"children":[{"krate":0,"index":18157}],"decl_id":null,"docs":" A registration handle for an `Abortable` task.\n Values of this type can be acquired from `AbortHandle::new` and are used\n in calls to `Abortable::new`.\n","sig":null,"attributes":[{"value":"/ A registration handle for an `Abortable` task.","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\abortable.rs","byte_start":688684,"byte_end":688734,"line_start":73,"line_end":73,"column_start":1,"column_end":51}},{"value":"/ Values of this type can be acquired from `AbortHandle::new` and are used","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\abortable.rs","byte_start":688735,"byte_end":688811,"line_start":74,"line_end":74,"column_start":1,"column_end":77}},{"value":"/ in calls to `Abortable::new`.","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\abortable.rs","byte_start":688812,"byte_end":688845,"line_start":75,"line_end":75,"column_start":1,"column_end":34}}]},{"kind":"Struct","id":{"krate":0,"index":18160},"span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\abortable.rs","byte_start":688997,"byte_end":689008,"line_start":83,"line_end":83,"column_start":12,"column_end":23},"name":"AbortHandle","qualname":"::abortable::AbortHandle","value":"AbortHandle {  }","parent":null,"children":[{"krate":0,"index":18161}],"decl_id":null,"docs":" A handle to an `Abortable` task.\n","sig":null,"attributes":[{"value":"/ A handle to an `Abortable` task.","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\abortable.rs","byte_start":688925,"byte_end":688961,"line_start":81,"line_end":81,"column_start":1,"column_end":37}}]},{"kind":"Method","id":{"krate":0,"index":9764},"span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\abortable.rs","byte_start":689279,"byte_end":689287,"line_start":92,"line_end":92,"column_start":12,"column_end":20},"name":"new_pair","qualname":"<AbortHandle>::new_pair","value":"pub fn new_pair() -> (Self, AbortRegistration)","parent":null,"children":[],"decl_id":null,"docs":" Creates an (`AbortHandle`, `AbortRegistration`) pair which can be used\n to abort a running future or stream.","sig":null,"attributes":[{"value":"/ Creates an (`AbortHandle`, `AbortRegistration`) pair which can be used","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\abortable.rs","byte_start":689065,"byte_end":689139,"line_start":88,"line_end":88,"column_start":5,"column_end":79}},{"value":"/ to abort a running future or stream.","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\abortable.rs","byte_start":689144,"byte_end":689184,"line_start":89,"line_end":89,"column_start":5,"column_end":45}},{"value":"/","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\abortable.rs","byte_start":689189,"byte_end":689192,"line_start":90,"line_end":90,"column_start":5,"column_end":8}},{"value":"/ This function is usually paired with a call to [`Abortable::new`].","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\abortable.rs","byte_start":689197,"byte_end":689267,"line_start":91,"line_end":91,"column_start":5,"column_end":75}}]},{"kind":"Struct","id":{"krate":0,"index":18171},"span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\abortable.rs","byte_start":689809,"byte_end":689816,"line_start":110,"line_end":110,"column_start":12,"column_end":19},"name":"Aborted","qualname":"::abortable::Aborted","value":"","parent":null,"children":[],"decl_id":null,"docs":" Indicator that the `Abortable` task was aborted.\n","sig":null,"attributes":[{"value":"/ Indicator that the `Abortable` task was aborted.","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\abortable.rs","byte_start":689700,"byte_end":689752,"line_start":108,"line_end":108,"column_start":1,"column_end":53}}]},{"kind":"Method","id":{"krate":0,"index":9784},"span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\abortable.rs","byte_start":691950,"byte_end":691955,"line_start":181,"line_end":181,"column_start":12,"column_end":17},"name":"abort","qualname":"<AbortHandle>::abort","value":"pub fn abort(&Self)","parent":null,"children":[],"decl_id":null,"docs":" Abort the `Abortable` stream/future associated with this handle.","sig":null,"attributes":[{"value":"/ Abort the `Abortable` stream/future associated with this handle.","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\abortable.rs","byte_start":691583,"byte_end":691651,"line_start":175,"line_end":175,"column_start":5,"column_end":73}},{"value":"/","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\abortable.rs","byte_start":691656,"byte_end":691659,"line_start":176,"line_end":176,"column_start":5,"column_end":8}},{"value":"/ Notifies the Abortable task associated with this handle that it","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\abortable.rs","byte_start":691664,"byte_end":691731,"line_start":177,"line_end":177,"column_start":5,"column_end":72}},{"value":"/ should abort. Note that if the task is currently being polled on","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\abortable.rs","byte_start":691736,"byte_end":691804,"line_start":178,"line_end":178,"column_start":5,"column_end":73}},{"value":"/ another thread, it will not immediately stop running. Instead, it will","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\abortable.rs","byte_start":691809,"byte_end":691883,"line_start":179,"line_end":179,"column_start":5,"column_end":79}},{"value":"/ continue to run until its poll method returns.","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\abortable.rs","byte_start":691888,"byte_end":691938,"line_start":180,"line_end":180,"column_start":5,"column_end":55}}]},{"kind":"Trait","id":{"krate":0,"index":9796},"span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\fns.rs","byte_start":692138,"byte_end":692145,"line_start":4,"line_end":4,"column_start":11,"column_end":18},"name":"FnOnce1","qualname":"::fns::FnOnce1","value":"FnOnce1<A>","parent":null,"children":[{"krate":0,"index":9798},{"krate":0,"index":9799}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Type","id":{"krate":0,"index":9798},"span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\fns.rs","byte_start":692160,"byte_end":692166,"line_start":5,"line_end":5,"column_start":10,"column_end":16},"name":"Output","qualname":"::fns::FnOnce1::Output","value":"type Output;","parent":{"krate":0,"index":9796},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":9799},"span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\fns.rs","byte_start":692175,"byte_end":692184,"line_start":6,"line_end":6,"column_start":8,"column_end":17},"name":"call_once","qualname":"::fns::FnOnce1::call_once","value":"pub fn call_once(Self, A) -> Self::Output","parent":{"krate":0,"index":9796},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Trait","id":{"krate":0,"index":9806},"span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\fns.rs","byte_start":692377,"byte_end":692383,"line_start":19,"line_end":19,"column_start":11,"column_end":17},"name":"FnMut1","qualname":"::fns::FnMut1","value":"FnMut1<A>: FnOnce1<A>","parent":null,"children":[{"krate":0,"index":9808}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":9808},"span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\fns.rs","byte_start":692408,"byte_end":692416,"line_start":20,"line_end":20,"column_start":8,"column_end":16},"name":"call_mut","qualname":"::fns::FnMut1::call_mut","value":"pub fn call_mut(&mut Self, A) -> Self::Output","parent":{"krate":0,"index":9806},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":9823},"span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\fns.rs","byte_start":693722,"byte_end":693726,"line_start":74,"line_end":74,"column_start":12,"column_end":16},"name":"OkFn","qualname":"::fns::OkFn","value":"","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":18202},"span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\fns.rs","byte_start":694082,"byte_end":694089,"line_start":92,"line_end":92,"column_start":12,"column_end":19},"name":"ChainFn","qualname":"::fns::ChainFn","value":"","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":18223},"span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\fns.rs","byte_start":694823,"byte_end":694836,"line_start":127,"line_end":127,"column_start":12,"column_end":25},"name":"MergeResultFn","qualname":"::fns::MergeResultFn","value":"","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":18239},"span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\fns.rs","byte_start":695178,"byte_end":695187,"line_start":141,"line_end":141,"column_start":12,"column_end":21},"name":"InspectFn","qualname":"::fns::InspectFn","value":"","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":18254},"span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\fns.rs","byte_start":696142,"byte_end":696149,"line_start":179,"line_end":179,"column_start":12,"column_end":19},"name":"MapOkFn","qualname":"::fns::MapOkFn","value":"","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":18269},"span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\fns.rs","byte_start":696860,"byte_end":696868,"line_start":211,"line_end":211,"column_start":12,"column_end":20},"name":"MapErrFn","qualname":"::fns::MapErrFn","value":"","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":18284},"span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\fns.rs","byte_start":697588,"byte_end":697599,"line_start":243,"line_end":243,"column_start":12,"column_end":23},"name":"InspectOkFn","qualname":"::fns::InspectOkFn","value":"","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":18296},"span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\fns.rs","byte_start":698484,"byte_end":698496,"line_start":281,"line_end":281,"column_start":12,"column_end":24},"name":"InspectErrFn","qualname":"::fns::InspectErrFn","value":"","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":18308},"span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\fns.rs","byte_start":699644,"byte_end":699658,"line_start":324,"line_end":324,"column_start":12,"column_end":26},"name":"UnwrapOrElseFn","qualname":"::fns::UnwrapOrElseFn","value":"","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":9987},"span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\fns.rs","byte_start":700423,"byte_end":700429,"line_start":355,"line_end":355,"column_start":12,"column_end":18},"name":"IntoFn","qualname":"::fns::IntoFn","value":"","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]}],"impls":[{"id":0,"kind":"Inherent","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\future\\future\\flatten.rs","byte_start":35483,"byte_end":35490,"line_start":20,"line_end":20,"column_start":18,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":146}],"docs":"","sig":null,"attributes":[]},{"id":1,"kind":"Direct","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\future\\future\\flatten.rs","byte_start":35620,"byte_end":35627,"line_start":26,"line_end":26,"column_start":27,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":149}],"docs":"","sig":null,"attributes":[]},{"id":2,"kind":"Direct","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\future\\future\\flatten.rs","byte_start":35852,"byte_end":35859,"line_start":39,"line_end":39,"column_start":22,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":152},{"krate":0,"index":153}],"docs":"","sig":null,"attributes":[]},{"id":3,"kind":"Direct","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\future\\future\\flatten.rs","byte_start":36633,"byte_end":36640,"line_start":64,"line_end":64,"column_start":27,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":156}],"docs":"","sig":null,"attributes":[]},{"id":4,"kind":"Direct","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\future\\future\\flatten.rs","byte_start":36865,"byte_end":36872,"line_start":77,"line_end":77,"column_start":22,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":159},{"krate":0,"index":160}],"docs":"","sig":null,"attributes":[]},{"id":5,"kind":"Direct","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\future\\future\\flatten.rs","byte_start":37725,"byte_end":37732,"line_start":105,"line_end":105,"column_start":32,"column_end":39},"value":"","parent":null,"children":[{"krate":0,"index":164},{"krate":0,"index":165},{"krate":0,"index":166},{"krate":0,"index":167},{"krate":0,"index":168}],"docs":"","sig":null,"attributes":[]},{"id":6,"kind":"Inherent","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\future\\future\\fuse.rs","byte_start":39886,"byte_end":39890,"line_start":17,"line_end":17,"column_start":11,"column_end":15},"value":"","parent":null,"children":[{"krate":0,"index":195}],"docs":"","sig":null,"attributes":[]},{"id":7,"kind":"Inherent","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\future\\future\\fuse.rs","byte_start":39997,"byte_end":40001,"line_start":23,"line_end":23,"column_start":19,"column_end":23},"value":"","parent":null,"children":[{"krate":0,"index":198}],"docs":"","sig":null,"attributes":[]},{"id":8,"kind":"Direct","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\future\\future\\fuse.rs","byte_start":41730,"byte_end":41734,"line_start":74,"line_end":74,"column_start":35,"column_end":39},"value":"","parent":null,"children":[{"krate":0,"index":201}],"docs":"","sig":null,"attributes":[]},{"id":9,"kind":"Direct","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\future\\future\\fuse.rs","byte_start":41847,"byte_end":41851,"line_start":80,"line_end":80,"column_start":30,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":204},{"krate":0,"index":205}],"docs":"","sig":null,"attributes":[]},{"id":10,"kind":"Inherent","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\future\\future\\map.rs","byte_start":42829,"byte_end":42832,"line_start":25,"line_end":25,"column_start":14,"column_end":17},"value":"","parent":null,"children":[{"krate":0,"index":236}],"docs":"","sig":null,"attributes":[]},{"id":11,"kind":"Direct","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\future\\future\\map.rs","byte_start":43001,"byte_end":43004,"line_start":32,"line_end":32,"column_start":33,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":241}],"docs":"","sig":null,"attributes":[]},{"id":12,"kind":"Direct","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\future\\future\\map.rs","byte_start":43266,"byte_end":43269,"line_start":45,"line_end":45,"column_start":28,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":246},{"krate":0,"index":247}],"docs":"","sig":null,"attributes":[]},{"id":13,"kind":"Inherent","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\future\\future\\catch_unwind.rs","byte_start":44475,"byte_end":44486,"line_start":19,"line_end":19,"column_start":11,"column_end":22},"value":"","parent":null,"children":[{"krate":0,"index":283}],"docs":"","sig":null,"attributes":[]},{"id":14,"kind":"Direct","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\future\\future\\catch_unwind.rs","byte_start":44629,"byte_end":44640,"line_start":28,"line_end":28,"column_start":22,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":286},{"krate":0,"index":287}],"docs":"","sig":null,"attributes":[]},{"id":15,"kind":"Direct","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\future\\future\\shared.rs","byte_start":45867,"byte_end":45877,"line_start":32,"line_end":32,"column_start":29,"column_end":39},"value":"","parent":null,"children":[{"krate":0,"index":366}],"docs":"","sig":null,"attributes":[]},{"id":16,"kind":"Direct","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\future\\future\\shared.rs","byte_start":46078,"byte_end":46084,"line_start":40,"line_end":40,"column_start":29,"column_end":35},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":17,"kind":"Direct","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\future\\future\\shared.rs","byte_start":46127,"byte_end":46133,"line_start":42,"line_end":42,"column_start":34,"column_end":40},"value":"","parent":null,"children":[{"krate":0,"index":371}],"docs":"","sig":null,"attributes":[]},{"id":18,"kind":"Direct","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\future\\future\\shared.rs","byte_start":46391,"byte_end":46396,"line_start":51,"line_end":51,"column_start":34,"column_end":39},"value":"","parent":null,"children":[{"krate":0,"index":374}],"docs":"","sig":null,"attributes":[]},{"id":19,"kind":"Direct","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\future\\future\\shared.rs","byte_start":46550,"byte_end":46560,"line_start":57,"line_end":57,"column_start":34,"column_end":44},"value":"","parent":null,"children":[{"krate":0,"index":377}],"docs":"","sig":null,"attributes":[]},{"id":20,"kind":"Direct","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\future\\future\\shared.rs","byte_start":46792,"byte_end":46797,"line_start":68,"line_end":68,"column_start":27,"column_end":32},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":21,"kind":"Direct","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\future\\future\\shared.rs","byte_start":46894,"byte_end":46899,"line_start":75,"line_end":75,"column_start":27,"column_end":32},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":22,"kind":"Inherent","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\future\\future\\shared.rs","byte_start":47143,"byte_end":47149,"line_start":89,"line_end":89,"column_start":19,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":397}],"docs":"","sig":null,"attributes":[]},{"id":23,"kind":"Inherent","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\future\\future\\shared.rs","byte_start":47573,"byte_end":47579,"line_start":103,"line_end":103,"column_start":11,"column_end":17},"value":"","parent":null,"children":[{"krate":0,"index":400},{"krate":0,"index":401},{"krate":0,"index":402},{"krate":0,"index":404}],"docs":"","sig":null,"attributes":[]},{"id":24,"kind":"Inherent","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\future\\future\\shared.rs","byte_start":49645,"byte_end":49650,"line_start":160,"line_end":160,"column_start":11,"column_end":16},"value":"","parent":null,"children":[{"krate":0,"index":408},{"krate":0,"index":409},{"krate":0,"index":410}],"docs":"","sig":null,"attributes":[]},{"id":25,"kind":"Direct","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\future\\future\\shared.rs","byte_start":51346,"byte_end":51352,"line_start":209,"line_end":209,"column_start":27,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":413}],"docs":"","sig":null,"attributes":[]},{"id":26,"kind":"Direct","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\future\\future\\shared.rs","byte_start":51504,"byte_end":51510,"line_start":219,"line_end":219,"column_start":22,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":416},{"krate":0,"index":417}],"docs":"","sig":null,"attributes":[]},{"id":27,"kind":"Direct","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\future\\future\\shared.rs","byte_start":53099,"byte_end":53104,"line_start":267,"line_end":267,"column_start":23,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":424}],"docs":"","sig":null,"attributes":[]},{"id":28,"kind":"Direct","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\future\\future\\shared.rs","byte_start":54811,"byte_end":54817,"line_start":324,"line_end":324,"column_start":21,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":430}],"docs":"","sig":null,"attributes":[]},{"id":29,"kind":"Direct","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\future\\future\\shared.rs","byte_start":54976,"byte_end":54982,"line_start":333,"line_end":333,"column_start":20,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":433}],"docs":"","sig":null,"attributes":[]},{"id":30,"kind":"Direct","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\future\\future\\shared.rs","byte_start":55410,"byte_end":55418,"line_start":350,"line_end":350,"column_start":18,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":435}],"docs":"","sig":null,"attributes":[]},{"id":31,"kind":"Inherent","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\future\\future\\shared.rs","byte_start":55777,"byte_end":55787,"line_start":363,"line_end":363,"column_start":19,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":438}],"docs":"","sig":null,"attributes":[]},{"id":32,"kind":"Direct","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\future\\future\\mod.rs","byte_start":18634,"byte_end":18635,"line_start":119,"line_end":119,"column_start":31,"column_end":32},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":33,"kind":"Inherent","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\future\\try_future\\into_future.rs","byte_start":78213,"byte_end":78223,"line_start":16,"line_end":16,"column_start":11,"column_end":21},"value":"","parent":null,"children":[{"krate":0,"index":624}],"docs":"","sig":null,"attributes":[]},{"id":34,"kind":"Direct","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\future\\try_future\\into_future.rs","byte_start":78374,"byte_end":78384,"line_start":23,"line_end":23,"column_start":52,"column_end":62},"value":"","parent":null,"children":[{"krate":0,"index":627}],"docs":"","sig":null,"attributes":[]},{"id":35,"kind":"Direct","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\future\\try_future\\into_future.rs","byte_start":78507,"byte_end":78517,"line_start":29,"line_end":29,"column_start":33,"column_end":43},"value":"","parent":null,"children":[{"krate":0,"index":630},{"krate":0,"index":631}],"docs":"","sig":null,"attributes":[]},{"id":36,"kind":"Inherent","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\future\\try_future\\try_flatten.rs","byte_start":79226,"byte_end":79236,"line_start":20,"line_end":20,"column_start":18,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":675}],"docs":"","sig":null,"attributes":[]},{"id":37,"kind":"Direct","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\future\\try_future\\try_flatten.rs","byte_start":79366,"byte_end":79376,"line_start":26,"line_end":26,"column_start":27,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":678}],"docs":"","sig":null,"attributes":[]},{"id":38,"kind":"Direct","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\future\\try_future\\try_flatten.rs","byte_start":79619,"byte_end":79629,"line_start":39,"line_end":39,"column_start":22,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":681},{"krate":0,"index":682}],"docs":"","sig":null,"attributes":[]},{"id":39,"kind":"Direct","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\future\\try_future\\try_flatten.rs","byte_start":80582,"byte_end":80592,"line_start":67,"line_end":67,"column_start":27,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":685}],"docs":"","sig":null,"attributes":[]},{"id":40,"kind":"Direct","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\future\\try_future\\try_flatten.rs","byte_start":80835,"byte_end":80845,"line_start":80,"line_end":80,"column_start":22,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":688},{"krate":0,"index":689}],"docs":"","sig":null,"attributes":[]},{"id":41,"kind":"Direct","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\future\\try_future\\try_flatten.rs","byte_start":81882,"byte_end":81892,"line_start":111,"line_end":111,"column_start":32,"column_end":42},"value":"","parent":null,"children":[{"krate":0,"index":693},{"krate":0,"index":694},{"krate":0,"index":695},{"krate":0,"index":696},{"krate":0,"index":697}],"docs":"","sig":null,"attributes":[]},{"id":42,"kind":"Inherent","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\future\\try_future\\try_flatten_err.rs","byte_start":84169,"byte_end":84182,"line_start":17,"line_end":17,"column_start":18,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":728}],"docs":"","sig":null,"attributes":[]},{"id":43,"kind":"Direct","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\future\\try_future\\try_flatten_err.rs","byte_start":84312,"byte_end":84325,"line_start":23,"line_end":23,"column_start":27,"column_end":40},"value":"","parent":null,"children":[{"krate":0,"index":731}],"docs":"","sig":null,"attributes":[]},{"id":44,"kind":"Direct","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\future\\try_future\\try_flatten_err.rs","byte_start":84568,"byte_end":84581,"line_start":36,"line_end":36,"column_start":22,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":734},{"krate":0,"index":735}],"docs":"","sig":null,"attributes":[]},{"id":45,"kind":"Direct","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\future\\try_future\\mod.rs","byte_start":60759,"byte_end":60762,"line_start":134,"line_end":134,"column_start":48,"column_end":51},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":46,"kind":"Direct","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\future\\lazy.rs","byte_start":85890,"byte_end":85894,"line_start":14,"line_end":14,"column_start":19,"column_end":23},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":47,"kind":"Direct","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\future\\lazy.rs","byte_start":86490,"byte_end":86494,"line_start":42,"line_end":42,"column_start":28,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":849}],"docs":"","sig":null,"attributes":[]},{"id":48,"kind":"Direct","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\future\\lazy.rs","byte_start":86638,"byte_end":86642,"line_start":51,"line_end":51,"column_start":23,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":853},{"krate":0,"index":854}],"docs":"","sig":null,"attributes":[]},{"id":49,"kind":"Direct","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\future\\pending.rs","byte_start":87245,"byte_end":87252,"line_start":14,"line_end":14,"column_start":25,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":888}],"docs":"","sig":null,"attributes":[]},{"id":50,"kind":"Direct","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\future\\pending.rs","byte_start":87813,"byte_end":87820,"line_start":40,"line_end":40,"column_start":20,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":893},{"krate":0,"index":894}],"docs":"","sig":null,"attributes":[]},{"id":51,"kind":"Direct","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\future\\pending.rs","byte_start":87965,"byte_end":87972,"line_start":48,"line_end":48,"column_start":19,"column_end":26},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":52,"kind":"Direct","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\future\\pending.rs","byte_start":87998,"byte_end":88005,"line_start":50,"line_end":50,"column_start":19,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":899}],"docs":"","sig":null,"attributes":[]},{"id":53,"kind":"Direct","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\future\\maybe_done.rs","byte_start":88759,"byte_end":88768,"line_start":24,"line_end":24,"column_start":37,"column_end":46},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":54,"kind":"Inherent","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\future\\maybe_done.rs","byte_start":89371,"byte_end":89380,"line_start":47,"line_end":47,"column_start":19,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":940},{"krate":0,"index":941}],"docs":"","sig":null,"attributes":[]},{"id":55,"kind":"Direct","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\future\\maybe_done.rs","byte_start":90478,"byte_end":90487,"line_start":79,"line_end":79,"column_start":35,"column_end":44},"value":"","parent":null,"children":[{"krate":0,"index":944}],"docs":"","sig":null,"attributes":[]},{"id":56,"kind":"Direct","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\future\\maybe_done.rs","byte_start":90688,"byte_end":90697,"line_start":88,"line_end":88,"column_start":30,"column_end":39},"value":"","parent":null,"children":[{"krate":0,"index":947},{"krate":0,"index":948}],"docs":"","sig":null,"attributes":[]},{"id":57,"kind":"Direct","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\future\\try_maybe_done.rs","byte_start":92017,"byte_end":92029,"line_start":25,"line_end":25,"column_start":40,"column_end":52},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":58,"kind":"Inherent","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\future\\try_maybe_done.rs","byte_start":92255,"byte_end":92267,"line_start":32,"line_end":32,"column_start":22,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":992},{"krate":0,"index":993}],"docs":"","sig":null,"attributes":[]},{"id":59,"kind":"Direct","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\future\\try_maybe_done.rs","byte_start":93380,"byte_end":93392,"line_start":64,"line_end":64,"column_start":38,"column_end":50},"value":"","parent":null,"children":[{"krate":0,"index":996}],"docs":"","sig":null,"attributes":[]},{"id":60,"kind":"Direct","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\future\\try_maybe_done.rs","byte_start":93596,"byte_end":93608,"line_start":73,"line_end":73,"column_start":33,"column_end":45},"value":"","parent":null,"children":[{"krate":0,"index":999},{"krate":0,"index":1000}],"docs":"","sig":null,"attributes":[]},{"id":61,"kind":"Direct","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\future\\option.rs","byte_start":95258,"byte_end":95270,"line_start":34,"line_end":34,"column_start":21,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":1031}],"docs":"","sig":null,"attributes":[]},{"id":62,"kind":"Direct","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\future\\option.rs","byte_start":95368,"byte_end":95380,"line_start":40,"line_end":40,"column_start":28,"column_end":40},"value":"","parent":null,"children":[{"krate":0,"index":1034},{"krate":0,"index":1035}],"docs":"","sig":null,"attributes":[]},{"id":63,"kind":"Direct","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\future\\option.rs","byte_start":95694,"byte_end":95706,"line_start":51,"line_end":51,"column_start":38,"column_end":50},"value":"","parent":null,"children":[{"krate":0,"index":1038}],"docs":"","sig":null,"attributes":[]},{"id":64,"kind":"Direct","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\future\\option.rs","byte_start":95893,"byte_end":95905,"line_start":60,"line_end":60,"column_start":29,"column_end":41},"value":"","parent":null,"children":[{"krate":0,"index":1041}],"docs":"","sig":null,"attributes":[]},{"id":65,"kind":"Direct","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\future\\poll_fn.rs","byte_start":96343,"byte_end":96349,"line_start":15,"line_end":15,"column_start":19,"column_end":25},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":66,"kind":"Direct","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\future\\poll_fn.rs","byte_start":97043,"byte_end":97049,"line_start":43,"line_end":43,"column_start":24,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":1075}],"docs":"","sig":null,"attributes":[]},{"id":67,"kind":"Direct","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\future\\poll_fn.rs","byte_start":97191,"byte_end":97197,"line_start":49,"line_end":49,"column_start":23,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":1079},{"krate":0,"index":1080}],"docs":"","sig":null,"attributes":[]},{"id":68,"kind":"Direct","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\future\\poll_immediate.rs","byte_start":97925,"byte_end":97938,"line_start":19,"line_end":19,"column_start":23,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":1118},{"krate":0,"index":1119}],"docs":"","sig":null,"attributes":[]},{"id":69,"kind":"Direct","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\future\\poll_immediate.rs","byte_start":98504,"byte_end":98517,"line_start":40,"line_end":40,"column_start":33,"column_end":46},"value":"","parent":null,"children":[{"krate":0,"index":1122}],"docs":"","sig":null,"attributes":[]},{"id":70,"kind":"Direct","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\future\\poll_immediate.rs","byte_start":99537,"byte_end":99550,"line_start":70,"line_end":70,"column_start":23,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":1126},{"krate":0,"index":1127}],"docs":"","sig":null,"attributes":[]},{"id":71,"kind":"Inherent","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\future\\ready.rs","byte_start":101722,"byte_end":101727,"line_start":11,"line_end":11,"column_start":9,"column_end":14},"value":"","parent":null,"children":[{"krate":0,"index":1161}],"docs":"","sig":null,"attributes":[]},{"id":72,"kind":"Direct","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\future\\ready.rs","byte_start":101906,"byte_end":101911,"line_start":19,"line_end":19,"column_start":19,"column_end":24},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":73,"kind":"Direct","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\future\\ready.rs","byte_start":101943,"byte_end":101948,"line_start":21,"line_end":21,"column_start":25,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":1166}],"docs":"","sig":null,"attributes":[]},{"id":74,"kind":"Direct","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\future\\ready.rs","byte_start":102045,"byte_end":102050,"line_start":27,"line_end":27,"column_start":20,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":1169},{"krate":0,"index":1170}],"docs":"","sig":null,"attributes":[]},{"id":75,"kind":"Direct","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\future\\join_all.rs","byte_start":110037,"byte_end":110044,"line_start":50,"line_end":50,"column_start":24,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":1332}],"docs":"","sig":null,"attributes":[]},{"id":76,"kind":"Direct","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\future\\join_all.rs","byte_start":112805,"byte_end":112812,"line_start":131,"line_end":131,"column_start":20,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":1337},{"krate":0,"index":1338}],"docs":"","sig":null,"attributes":[]},{"id":77,"kind":"Direct","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\future\\join_all.rs","byte_start":113800,"byte_end":113807,"line_start":163,"line_end":163,"column_start":37,"column_end":44},"value":"","parent":null,"children":[{"krate":0,"index":1342}],"docs":"","sig":null,"attributes":[]},{"id":78,"kind":"Direct","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\future\\select.rs","byte_start":114303,"byte_end":114309,"line_start":14,"line_end":14,"column_start":36,"column_end":42},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":79,"kind":"Direct","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\future\\select.rs","byte_start":116745,"byte_end":116751,"line_start":94,"line_end":94,"column_start":23,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":1388},{"krate":0,"index":1389}],"docs":"","sig":null,"attributes":[]},{"id":80,"kind":"Direct","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\future\\select.rs","byte_start":117455,"byte_end":117461,"line_start":116,"line_end":116,"column_start":28,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":1393}],"docs":"","sig":null,"attributes":[]},{"id":81,"kind":"Direct","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\future\\select_all.rs","byte_start":118024,"byte_end":118033,"line_start":17,"line_end":17,"column_start":28,"column_end":37},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":82,"kind":"Inherent","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\future\\select_all.rs","byte_start":119040,"byte_end":119049,"line_start":44,"line_end":44,"column_start":11,"column_end":20},"value":"","parent":null,"children":[{"krate":0,"index":1436}],"docs":"","sig":null,"attributes":[]},{"id":83,"kind":"Direct","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\future\\select_all.rs","byte_start":119232,"byte_end":119241,"line_start":51,"line_end":51,"column_start":38,"column_end":47},"value":"","parent":null,"children":[{"krate":0,"index":1439},{"krate":0,"index":1440}],"docs":"","sig":null,"attributes":[]},{"id":84,"kind":"Direct","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\future\\select_all.rs","byte_start":119911,"byte_end":119920,"line_start":70,"line_end":70,"column_start":49,"column_end":58},"value":"","parent":null,"children":[{"krate":0,"index":1444}],"docs":"","sig":null,"attributes":[]},{"id":85,"kind":"Direct","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\future\\try_join_all.rs","byte_start":128528,"byte_end":128538,"line_start":37,"line_end":37,"column_start":24,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":1588}],"docs":"","sig":null,"attributes":[]},{"id":86,"kind":"Direct","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\future\\try_join_all.rs","byte_start":130368,"byte_end":130378,"line_start":97,"line_end":97,"column_start":20,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":1593},{"krate":0,"index":1594}],"docs":"","sig":null,"attributes":[]},{"id":87,"kind":"Direct","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\future\\try_join_all.rs","byte_start":131526,"byte_end":131536,"line_start":133,"line_end":133,"column_start":40,"column_end":50},"value":"","parent":null,"children":[{"krate":0,"index":1598}],"docs":"","sig":null,"attributes":[]},{"id":88,"kind":"Direct","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\future\\try_select.rs","byte_start":132018,"byte_end":132027,"line_start":13,"line_end":13,"column_start":36,"column_end":45},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":89,"kind":"Direct","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\future\\try_select.rs","byte_start":133866,"byte_end":133875,"line_start":61,"line_end":61,"column_start":37,"column_end":46},"value":"","parent":null,"children":[{"krate":0,"index":1641},{"krate":0,"index":1642}],"docs":"","sig":null,"attributes":[]},{"id":90,"kind":"Direct","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\future\\select_ok.rs","byte_start":135237,"byte_end":135245,"line_start":17,"line_end":17,"column_start":28,"column_end":36},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":91,"kind":"Direct","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\future\\select_ok.rs","byte_start":136323,"byte_end":136331,"line_start":45,"line_end":45,"column_start":41,"column_end":49},"value":"","parent":null,"children":[{"krate":0,"index":1689},{"krate":0,"index":1690}],"docs":"","sig":null,"attributes":[]},{"id":92,"kind":"Direct","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\future\\select_ok.rs","byte_start":137762,"byte_end":137770,"line_start":81,"line_end":81,"column_start":52,"column_end":60},"value":"","parent":null,"children":[{"krate":0,"index":1694}],"docs":"","sig":null,"attributes":[]},{"id":93,"kind":"Inherent","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\future\\either.rs","byte_start":138749,"byte_end":138755,"line_start":35,"line_end":35,"column_start":12,"column_end":18},"value":"","parent":null,"children":[{"krate":0,"index":1734}],"docs":"","sig":null,"attributes":[]},{"id":94,"kind":"Inherent","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\future\\either.rs","byte_start":139094,"byte_end":139100,"line_start":46,"line_end":46,"column_start":15,"column_end":21},"value":"","parent":null,"children":[{"krate":0,"index":1739}],"docs":"","sig":null,"attributes":[]},{"id":95,"kind":"Inherent","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\future\\either.rs","byte_start":139485,"byte_end":139491,"line_start":58,"line_end":58,"column_start":15,"column_end":21},"value":"","parent":null,"children":[{"krate":0,"index":1744}],"docs":"","sig":null,"attributes":[]},{"id":96,"kind":"Inherent","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\future\\either.rs","byte_start":139872,"byte_end":139878,"line_start":70,"line_end":70,"column_start":9,"column_end":15},"value":"","parent":null,"children":[{"krate":0,"index":1747}],"docs":"","sig":null,"attributes":[]},{"id":97,"kind":"Direct","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\future\\either.rs","byte_start":140119,"byte_end":140125,"line_start":80,"line_end":80,"column_start":23,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":1751},{"krate":0,"index":1752}],"docs":"","sig":null,"attributes":[]},{"id":98,"kind":"Direct","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\future\\either.rs","byte_start":140464,"byte_end":140470,"line_start":95,"line_end":95,"column_start":28,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":1756}],"docs":"","sig":null,"attributes":[]},{"id":99,"kind":"Direct","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\future\\either.rs","byte_start":140746,"byte_end":140752,"line_start":108,"line_end":108,"column_start":23,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":1760},{"krate":0,"index":1761},{"krate":0,"index":1762}],"docs":"","sig":null,"attributes":[]},{"id":100,"kind":"Direct","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\future\\either.rs","byte_start":141287,"byte_end":141293,"line_start":130,"line_end":130,"column_start":28,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":1766}],"docs":"","sig":null,"attributes":[]},{"id":101,"kind":"Direct","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\future\\either.rs","byte_start":141600,"byte_end":141606,"line_start":144,"line_end":144,"column_start":33,"column_end":39},"value":"","parent":null,"children":[{"krate":0,"index":1771},{"krate":0,"index":1772},{"krate":0,"index":1773},{"krate":0,"index":1774},{"krate":0,"index":1775}],"docs":"","sig":null,"attributes":[]},{"id":102,"kind":"Direct","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\future\\either.rs","byte_start":142965,"byte_end":142971,"line_start":191,"line_end":191,"column_start":30,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":1816},{"krate":0,"index":1817}],"docs":"","sig":null,"attributes":[]},{"id":103,"kind":"Direct","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\future\\either.rs","byte_start":143772,"byte_end":143778,"line_start":219,"line_end":219,"column_start":31,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":1821},{"krate":0,"index":1822},{"krate":0,"index":1823},{"krate":0,"index":1824}],"docs":"","sig":null,"attributes":[]},{"id":104,"kind":"Direct","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\future\\either.rs","byte_start":145085,"byte_end":145091,"line_start":261,"line_end":261,"column_start":30,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":1828}],"docs":"","sig":null,"attributes":[]},{"id":105,"kind":"Direct","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\future\\either.rs","byte_start":145521,"byte_end":145527,"line_start":278,"line_end":278,"column_start":33,"column_end":39},"value":"","parent":null,"children":[{"krate":0,"index":1832},{"krate":0,"index":1833}],"docs":"","sig":null,"attributes":[]},{"id":106,"kind":"Inherent","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\stream\\chain.rs","byte_start":209062,"byte_end":209067,"line_start":20,"line_end":20,"column_start":16,"column_end":21},"value":"","parent":null,"children":[{"krate":0,"index":1991}],"docs":"","sig":null,"attributes":[]},{"id":107,"kind":"Direct","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\stream\\chain.rs","byte_start":209293,"byte_end":209298,"line_start":30,"line_end":30,"column_start":32,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":1995}],"docs":"","sig":null,"attributes":[]},{"id":108,"kind":"Direct","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\stream\\chain.rs","byte_start":209507,"byte_end":209512,"line_start":40,"line_end":40,"column_start":27,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":1999},{"krate":0,"index":2000},{"krate":0,"index":2001}],"docs":"","sig":null,"attributes":[]},{"id":109,"kind":"Inherent","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\stream\\collect.rs","byte_start":211108,"byte_end":211115,"line_start":20,"line_end":20,"column_start":30,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":2042},{"krate":0,"index":2043}],"docs":"","sig":null,"attributes":[]},{"id":110,"kind":"Direct","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\stream\\collect.rs","byte_start":211380,"byte_end":211387,"line_start":30,"line_end":30,"column_start":29,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":2047}],"docs":"","sig":null,"attributes":[]},{"id":111,"kind":"Direct","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\stream\\collect.rs","byte_start":211565,"byte_end":211572,"line_start":40,"line_end":40,"column_start":24,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":2051},{"krate":0,"index":2052}],"docs":"","sig":null,"attributes":[]},{"id":112,"kind":"Inherent","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\stream\\unzip.rs","byte_start":212598,"byte_end":212603,"line_start":21,"line_end":21,"column_start":50,"column_end":55},"value":"","parent":null,"children":[{"krate":0,"index":2094},{"krate":0,"index":2095}],"docs":"","sig":null,"attributes":[]},{"id":113,"kind":"Direct","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\stream\\unzip.rs","byte_start":212997,"byte_end":213002,"line_start":32,"line_end":32,"column_start":46,"column_end":51},"value":"","parent":null,"children":[{"krate":0,"index":2102}],"docs":"","sig":null,"attributes":[]},{"id":114,"kind":"Direct","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\stream\\unzip.rs","byte_start":213252,"byte_end":213257,"line_start":43,"line_end":43,"column_start":41,"column_end":46},"value":"","parent":null,"children":[{"krate":0,"index":2109},{"krate":0,"index":2110}],"docs":"","sig":null,"attributes":[]},{"id":115,"kind":"Inherent","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\stream\\concat.rs","byte_start":214382,"byte_end":214388,"line_start":19,"line_end":19,"column_start":10,"column_end":16},"value":"","parent":null,"children":[{"krate":0,"index":2147}],"docs":"","sig":null,"attributes":[]},{"id":116,"kind":"Direct","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\stream\\concat.rs","byte_start":214608,"byte_end":214614,"line_start":29,"line_end":29,"column_start":21,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":2150},{"krate":0,"index":2151}],"docs":"","sig":null,"attributes":[]},{"id":117,"kind":"Direct","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\stream\\concat.rs","byte_start":215322,"byte_end":215328,"line_start":54,"line_end":54,"column_start":26,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":2154}],"docs":"","sig":null,"attributes":[]},{"id":118,"kind":"Direct","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\stream\\count.rs","byte_start":216054,"byte_end":216059,"line_start":19,"line_end":19,"column_start":25,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":2194}],"docs":"","sig":null,"attributes":[]},{"id":119,"kind":"Inherent","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\stream\\count.rs","byte_start":216280,"byte_end":216285,"line_start":28,"line_end":28,"column_start":18,"column_end":23},"value":"","parent":null,"children":[{"krate":0,"index":2197}],"docs":"","sig":null,"attributes":[]},{"id":120,"kind":"Direct","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\stream\\count.rs","byte_start":216417,"byte_end":216422,"line_start":34,"line_end":34,"column_start":39,"column_end":44},"value":"","parent":null,"children":[{"krate":0,"index":2200}],"docs":"","sig":null,"attributes":[]},{"id":121,"kind":"Direct","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\stream\\count.rs","byte_start":216540,"byte_end":216545,"line_start":40,"line_end":40,"column_start":29,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":2203},{"krate":0,"index":2204}],"docs":"","sig":null,"attributes":[]},{"id":122,"kind":"Inherent","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\stream\\cycle.rs","byte_start":217351,"byte_end":217356,"line_start":19,"line_end":19,"column_start":10,"column_end":15},"value":"","parent":null,"children":[{"krate":0,"index":2237}],"docs":"","sig":null,"attributes":[]},{"id":123,"kind":"Direct","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\stream\\cycle.rs","byte_start":217512,"byte_end":217517,"line_start":28,"line_end":28,"column_start":21,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":2240},{"krate":0,"index":2241},{"krate":0,"index":2242}],"docs":"","sig":null,"attributes":[]},{"id":124,"kind":"Direct","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\stream\\cycle.rs","byte_start":218266,"byte_end":218271,"line_start":56,"line_end":56,"column_start":26,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":2245}],"docs":"","sig":null,"attributes":[]},{"id":125,"kind":"Inherent","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\stream\\enumerate.rs","byte_start":219019,"byte_end":219028,"line_start":20,"line_end":20,"column_start":18,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":2278},{"krate":0,"index":12873},{"krate":0,"index":12874},{"krate":0,"index":12875},{"krate":0,"index":12876}],"docs":"","sig":null,"attributes":[]},{"id":126,"kind":"Direct","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\stream\\enumerate.rs","byte_start":219214,"byte_end":219223,"line_start":28,"line_end":28,"column_start":48,"column_end":57},"value":"","parent":null,"children":[{"krate":0,"index":2281}],"docs":"","sig":null,"attributes":[]},{"id":127,"kind":"Direct","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\stream\\enumerate.rs","byte_start":219341,"byte_end":219350,"line_start":34,"line_end":34,"column_start":29,"column_end":38},"value":"","parent":null,"children":[{"krate":0,"index":2284},{"krate":0,"index":2285},{"krate":0,"index":2286}],"docs":"","sig":null,"attributes":[]},{"id":128,"kind":"Direct","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\stream\\enumerate.rs","byte_start":220003,"byte_end":220012,"line_start":57,"line_end":57,"column_start":30,"column_end":39},"value":"","parent":null,"children":[{"krate":0,"index":2290},{"krate":0,"index":12877},{"krate":0,"index":12878},{"krate":0,"index":12879},{"krate":0,"index":12880}],"docs":"","sig":null,"attributes":[]},{"id":129,"kind":"Direct","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\stream\\filter.rs","byte_start":220791,"byte_end":220797,"line_start":27,"line_end":27,"column_start":33,"column_end":39},"value":"","parent":null,"children":[{"krate":0,"index":2334}],"docs":"","sig":null,"attributes":[]},{"id":130,"kind":"Inherent","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\stream\\filter.rs","byte_start":221270,"byte_end":221276,"line_start":43,"line_end":43,"column_start":18,"column_end":24},"value":"","parent":null,"children":[{"krate":0,"index":2340},{"krate":0,"index":12942},{"krate":0,"index":12943},{"krate":0,"index":12944},{"krate":0,"index":12945}],"docs":"","sig":null,"attributes":[]},{"id":131,"kind":"Direct","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\stream\\filter.rs","byte_start":221599,"byte_end":221605,"line_start":56,"line_end":56,"column_start":34,"column_end":40},"value":"","parent":null,"children":[{"krate":0,"index":2345}],"docs":"","sig":null,"attributes":[]},{"id":132,"kind":"Direct","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\stream\\filter.rs","byte_start":221942,"byte_end":221948,"line_start":68,"line_end":68,"column_start":29,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":2351},{"krate":0,"index":2352},{"krate":0,"index":2353}],"docs":"","sig":null,"attributes":[]},{"id":133,"kind":"Direct","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\stream\\filter.rs","byte_start":223327,"byte_end":223333,"line_start":108,"line_end":108,"column_start":38,"column_end":44},"value":"","parent":null,"children":[{"krate":0,"index":2359},{"krate":0,"index":12946},{"krate":0,"index":12947},{"krate":0,"index":12948},{"krate":0,"index":12949}],"docs":"","sig":null,"attributes":[]},{"id":134,"kind":"Direct","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\stream\\filter_map.rs","byte_start":224120,"byte_end":224129,"line_start":24,"line_end":24,"column_start":33,"column_end":42},"value":"","parent":null,"children":[{"krate":0,"index":2403}],"docs":"","sig":null,"attributes":[]},{"id":135,"kind":"Inherent","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\stream\\filter_map.rs","byte_start":224426,"byte_end":224435,"line_start":37,"line_end":37,"column_start":18,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":2408},{"krate":0,"index":13007},{"krate":0,"index":13008},{"krate":0,"index":13009},{"krate":0,"index":13010}],"docs":"","sig":null,"attributes":[]},{"id":136,"kind":"Direct","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\stream\\filter_map.rs","byte_start":224702,"byte_end":224711,"line_start":50,"line_end":50,"column_start":37,"column_end":46},"value":"","parent":null,"children":[{"krate":0,"index":2414}],"docs":"","sig":null,"attributes":[]},{"id":137,"kind":"Direct","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\stream\\filter_map.rs","byte_start":224978,"byte_end":224987,"line_start":61,"line_end":61,"column_start":32,"column_end":41},"value":"","parent":null,"children":[{"krate":0,"index":2420},{"krate":0,"index":2421},{"krate":0,"index":2422}],"docs":"","sig":null,"attributes":[]},{"id":138,"kind":"Direct","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\stream\\filter_map.rs","byte_start":226405,"byte_end":226414,"line_start":102,"line_end":102,"column_start":38,"column_end":47},"value":"","parent":null,"children":[{"krate":0,"index":2428},{"krate":0,"index":13011},{"krate":0,"index":13012},{"krate":0,"index":13013},{"krate":0,"index":13014}],"docs":"","sig":null,"attributes":[]},{"id":139,"kind":"Inherent","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\stream\\flatten.rs","byte_start":227089,"byte_end":227096,"line_start":21,"line_end":21,"column_start":13,"column_end":20},"value":"","parent":null,"children":[{"krate":0,"index":2462},{"krate":0,"index":13064},{"krate":0,"index":13065},{"krate":0,"index":13066},{"krate":0,"index":13067}],"docs":"","sig":null,"attributes":[]},{"id":140,"kind":"Direct","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\stream\\flatten.rs","byte_start":227265,"byte_end":227272,"line_start":29,"line_end":29,"column_start":26,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":2465}],"docs":"","sig":null,"attributes":[]},{"id":141,"kind":"Direct","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\stream\\flatten.rs","byte_start":227464,"byte_end":227471,"line_start":39,"line_end":39,"column_start":21,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":2468},{"krate":0,"index":2469}],"docs":"","sig":null,"attributes":[]},{"id":142,"kind":"Direct","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\stream\\flatten.rs","byte_start":228293,"byte_end":228300,"line_start":66,"line_end":66,"column_start":30,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":2473},{"krate":0,"index":13068},{"krate":0,"index":13069},{"krate":0,"index":13070},{"krate":0,"index":13071}],"docs":"","sig":null,"attributes":[]},{"id":143,"kind":"Direct","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\stream\\fold.rs","byte_start":228985,"byte_end":228989,"line_start":22,"line_end":22,"column_start":36,"column_end":40},"value":"","parent":null,"children":[{"krate":0,"index":2509}],"docs":"","sig":null,"attributes":[]},{"id":144,"kind":"Inherent","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\stream\\fold.rs","byte_start":229345,"byte_end":229349,"line_start":37,"line_end":37,"column_start":21,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":2515}],"docs":"","sig":null,"attributes":[]},{"id":145,"kind":"Direct","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\stream\\fold.rs","byte_start":229610,"byte_end":229614,"line_start":48,"line_end":48,"column_start":37,"column_end":41},"value":"","parent":null,"children":[{"krate":0,"index":2521}],"docs":"","sig":null,"attributes":[]},{"id":146,"kind":"Direct","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\stream\\fold.rs","byte_start":229849,"byte_end":229853,"line_start":59,"line_end":59,"column_start":32,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":2527},{"krate":0,"index":2528}],"docs":"","sig":null,"attributes":[]},{"id":147,"kind":"Direct","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\stream\\any.rs","byte_start":231442,"byte_end":231445,"line_start":22,"line_end":22,"column_start":33,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":2566}],"docs":"","sig":null,"attributes":[]},{"id":148,"kind":"Inherent","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\stream\\any.rs","byte_start":231775,"byte_end":231778,"line_start":36,"line_end":36,"column_start":18,"column_end":21},"value":"","parent":null,"children":[{"krate":0,"index":2571}],"docs":"","sig":null,"attributes":[]},{"id":149,"kind":"Direct","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\stream\\any.rs","byte_start":232031,"byte_end":232034,"line_start":47,"line_end":47,"column_start":34,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":2576}],"docs":"","sig":null,"attributes":[]},{"id":150,"kind":"Direct","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\stream\\any.rs","byte_start":232263,"byte_end":232266,"line_start":58,"line_end":58,"column_start":29,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":2581},{"krate":0,"index":2582}],"docs":"","sig":null,"attributes":[]},{"id":151,"kind":"Direct","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\stream\\all.rs","byte_start":234018,"byte_end":234021,"line_start":22,"line_end":22,"column_start":33,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":2620}],"docs":"","sig":null,"attributes":[]},{"id":152,"kind":"Inherent","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\stream\\all.rs","byte_start":234351,"byte_end":234354,"line_start":36,"line_end":36,"column_start":18,"column_end":21},"value":"","parent":null,"children":[{"krate":0,"index":2625}],"docs":"","sig":null,"attributes":[]},{"id":153,"kind":"Direct","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\stream\\all.rs","byte_start":234606,"byte_end":234609,"line_start":47,"line_end":47,"column_start":34,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":2630}],"docs":"","sig":null,"attributes":[]},{"id":154,"kind":"Direct","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\stream\\all.rs","byte_start":234838,"byte_end":234841,"line_start":58,"line_end":58,"column_start":29,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":2635},{"krate":0,"index":2636}],"docs":"","sig":null,"attributes":[]},{"id":155,"kind":"Inherent","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\stream\\forward.rs","byte_start":236677,"byte_end":236684,"line_start":24,"line_end":24,"column_start":20,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":2677}],"docs":"","sig":null,"attributes":[]},{"id":156,"kind":"Direct","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\stream\\forward.rs","byte_start":236884,"byte_end":236891,"line_start":30,"line_end":30,"column_start":39,"column_end":46},"value":"","parent":null,"children":[{"krate":0,"index":2683}],"docs":"","sig":null,"attributes":[]},{"id":157,"kind":"Direct","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\stream\\forward.rs","byte_start":237093,"byte_end":237100,"line_start":40,"line_end":40,"column_start":34,"column_end":41},"value":"","parent":null,"children":[{"krate":0,"index":2689},{"krate":0,"index":2690}],"docs":"","sig":null,"attributes":[]},{"id":158,"kind":"Direct","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\stream\\for_each.rs","byte_start":238905,"byte_end":238912,"line_start":21,"line_end":21,"column_start":33,"column_end":40},"value":"","parent":null,"children":[{"krate":0,"index":2729}],"docs":"","sig":null,"attributes":[]},{"id":159,"kind":"Inherent","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\stream\\for_each.rs","byte_start":239205,"byte_end":239212,"line_start":34,"line_end":34,"column_start":18,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":2734}],"docs":"","sig":null,"attributes":[]},{"id":160,"kind":"Direct","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\stream\\for_each.rs","byte_start":239443,"byte_end":239450,"line_start":45,"line_end":45,"column_start":34,"column_end":41},"value":"","parent":null,"children":[{"krate":0,"index":2739}],"docs":"","sig":null,"attributes":[]},{"id":161,"kind":"Direct","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\stream\\for_each.rs","byte_start":239689,"byte_end":239696,"line_start":56,"line_end":56,"column_start":29,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":2744},{"krate":0,"index":2745}],"docs":"","sig":null,"attributes":[]},{"id":162,"kind":"Inherent","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\stream\\fuse.rs","byte_start":240797,"byte_end":240801,"line_start":20,"line_end":20,"column_start":10,"column_end":14},"value":"","parent":null,"children":[{"krate":0,"index":2778},{"krate":0,"index":2779},{"krate":0,"index":13546},{"krate":0,"index":13547},{"krate":0,"index":13548},{"krate":0,"index":13549}],"docs":"","sig":null,"attributes":[]},{"id":163,"kind":"Direct","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\stream\\fuse.rs","byte_start":241298,"byte_end":241302,"line_start":37,"line_end":37,"column_start":33,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":2782}],"docs":"","sig":null,"attributes":[]},{"id":164,"kind":"Direct","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\stream\\fuse.rs","byte_start":241400,"byte_end":241404,"line_start":43,"line_end":43,"column_start":28,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":2785},{"krate":0,"index":2786},{"krate":0,"index":2787}],"docs":"","sig":null,"attributes":[]},{"id":165,"kind":"Direct","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\stream\\fuse.rs","byte_start":242090,"byte_end":242094,"line_start":71,"line_end":71,"column_start":51,"column_end":55},"value":"","parent":null,"children":[{"krate":0,"index":2791},{"krate":0,"index":13550},{"krate":0,"index":13551},{"krate":0,"index":13552},{"krate":0,"index":13553}],"docs":"","sig":null,"attributes":[]},{"id":166,"kind":"Inherent","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\stream\\into_future.rs","byte_start":242606,"byte_end":242618,"line_start":15,"line_end":15,"column_start":26,"column_end":38},"value":"","parent":null,"children":[{"krate":0,"index":2824},{"krate":0,"index":2825},{"krate":0,"index":2826},{"krate":0,"index":2827},{"krate":0,"index":2828}],"docs":"","sig":null,"attributes":[]},{"id":167,"kind":"Direct","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\stream\\into_future.rs","byte_start":245108,"byte_end":245120,"line_start":73,"line_end":73,"column_start":42,"column_end":54},"value":"","parent":null,"children":[{"krate":0,"index":2831}],"docs":"","sig":null,"attributes":[]},{"id":168,"kind":"Direct","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\stream\\into_future.rs","byte_start":245240,"byte_end":245252,"line_start":79,"line_end":79,"column_start":37,"column_end":49},"value":"","parent":null,"children":[{"krate":0,"index":2834},{"krate":0,"index":2835}],"docs":"","sig":null,"attributes":[]},{"id":169,"kind":"Direct","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\stream\\map.rs","byte_start":246137,"byte_end":246140,"line_start":22,"line_end":22,"column_start":28,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":2875}],"docs":"","sig":null,"attributes":[]},{"id":170,"kind":"Inherent","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\stream\\map.rs","byte_start":246329,"byte_end":246332,"line_start":31,"line_end":31,"column_start":13,"column_end":16},"value":"","parent":null,"children":[{"krate":0,"index":2879},{"krate":0,"index":13683},{"krate":0,"index":13684},{"krate":0,"index":13685},{"krate":0,"index":13686}],"docs":"","sig":null,"attributes":[]},{"id":171,"kind":"Direct","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\stream\\map.rs","byte_start":246501,"byte_end":246504,"line_start":39,"line_end":39,"column_start":29,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":2883}],"docs":"","sig":null,"attributes":[]},{"id":172,"kind":"Direct","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\stream\\map.rs","byte_start":246672,"byte_end":246675,"line_start":49,"line_end":49,"column_start":24,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":2887},{"krate":0,"index":2888},{"krate":0,"index":2890}],"docs":"","sig":null,"attributes":[]},{"id":173,"kind":"Direct","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\stream\\map.rs","byte_start":247217,"byte_end":247220,"line_start":69,"line_end":69,"column_start":34,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":2895},{"krate":0,"index":13687},{"krate":0,"index":13688},{"krate":0,"index":13689},{"krate":0,"index":13690}],"docs":"","sig":null,"attributes":[]},{"id":174,"kind":"Direct","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\stream\\next.rs","byte_start":247787,"byte_end":247791,"line_start":14,"line_end":14,"column_start":36,"column_end":40},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":175,"kind":"Inherent","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\stream\\next.rs","byte_start":247842,"byte_end":247846,"line_start":16,"line_end":16,"column_start":39,"column_end":43},"value":"","parent":null,"children":[{"krate":0,"index":2932}],"docs":"","sig":null,"attributes":[]},{"id":176,"kind":"Direct","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\stream\\next.rs","byte_start":247997,"byte_end":248001,"line_start":22,"line_end":22,"column_start":56,"column_end":60},"value":"","parent":null,"children":[{"krate":0,"index":2935}],"docs":"","sig":null,"attributes":[]},{"id":177,"kind":"Direct","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\stream\\next.rs","byte_start":248140,"byte_end":248144,"line_start":28,"line_end":28,"column_start":46,"column_end":50},"value":"","parent":null,"children":[{"krate":0,"index":2938},{"krate":0,"index":2939}],"docs":"","sig":null,"attributes":[]},{"id":178,"kind":"Inherent","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\stream\\select_next_some.rs","byte_start":248795,"byte_end":248809,"line_start":16,"line_end":16,"column_start":22,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":2973}],"docs":"","sig":null,"attributes":[]},{"id":179,"kind":"Direct","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\stream\\select_next_some.rs","byte_start":248960,"byte_end":248974,"line_start":22,"line_end":22,"column_start":56,"column_end":70},"value":"","parent":null,"children":[{"krate":0,"index":2976}],"docs":"","sig":null,"attributes":[]},{"id":180,"kind":"Direct","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\stream\\select_next_some.rs","byte_start":249118,"byte_end":249132,"line_start":28,"line_end":28,"column_start":51,"column_end":65},"value":"","parent":null,"children":[{"krate":0,"index":2979},{"krate":0,"index":2980}],"docs":"","sig":null,"attributes":[]},{"id":181,"kind":"Inherent","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\stream\\peek.rs","byte_start":250443,"byte_end":250451,"line_start":29,"line_end":29,"column_start":18,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":3036},{"krate":0,"index":13840},{"krate":0,"index":13841},{"krate":0,"index":13842},{"krate":0,"index":13843},{"krate":0,"index":3037},{"krate":0,"index":3038},{"krate":0,"index":3039},{"krate":0,"index":3040},{"krate":0,"index":3041},{"krate":0,"index":3043}],"docs":"","sig":null,"attributes":[]},{"id":182,"kind":"Direct","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\stream\\peek.rs","byte_start":255948,"byte_end":255956,"line_start":189,"line_end":189,"column_start":34,"column_end":42},"value":"","parent":null,"children":[{"krate":0,"index":3048}],"docs":"","sig":null,"attributes":[]},{"id":183,"kind":"Direct","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\stream\\peek.rs","byte_start":256098,"byte_end":256106,"line_start":195,"line_end":195,"column_start":28,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":3051},{"krate":0,"index":3052},{"krate":0,"index":3053}],"docs":"","sig":null,"attributes":[]},{"id":184,"kind":"Direct","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\stream\\peek.rs","byte_start":256891,"byte_end":256899,"line_start":220,"line_end":220,"column_start":30,"column_end":38},"value":"","parent":null,"children":[{"krate":0,"index":3057},{"krate":0,"index":13844},{"krate":0,"index":13845},{"krate":0,"index":13846},{"krate":0,"index":13847}],"docs":"","sig":null,"attributes":[]},{"id":185,"kind":"Direct","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\stream\\peek.rs","byte_start":257265,"byte_end":257269,"line_start":237,"line_end":237,"column_start":25,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":3060}],"docs":"","sig":null,"attributes":[]},{"id":186,"kind":"Direct","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\stream\\peek.rs","byte_start":257514,"byte_end":257518,"line_start":247,"line_end":247,"column_start":34,"column_end":38},"value":"","parent":null,"children":[{"krate":0,"index":3063}],"docs":"","sig":null,"attributes":[]},{"id":187,"kind":"Direct","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\stream\\peek.rs","byte_start":257629,"byte_end":257633,"line_start":253,"line_end":253,"column_start":25,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":3067},{"krate":0,"index":3068}],"docs":"","sig":null,"attributes":[]},{"id":188,"kind":"Direct","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\stream\\peek.rs","byte_start":258330,"byte_end":258337,"line_start":279,"line_end":279,"column_start":25,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":3071}],"docs":"","sig":null,"attributes":[]},{"id":189,"kind":"Direct","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\stream\\peek.rs","byte_start":258585,"byte_end":258592,"line_start":289,"line_end":289,"column_start":34,"column_end":41},"value":"","parent":null,"children":[{"krate":0,"index":3074}],"docs":"","sig":null,"attributes":[]},{"id":190,"kind":"Direct","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\stream\\peek.rs","byte_start":258703,"byte_end":258710,"line_start":295,"line_end":295,"column_start":25,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":3078},{"krate":0,"index":3079}],"docs":"","sig":null,"attributes":[]},{"id":191,"kind":"Direct","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\stream\\peek.rs","byte_start":259430,"byte_end":259436,"line_start":321,"line_end":321,"column_start":28,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":3083}],"docs":"","sig":null,"attributes":[]},{"id":192,"kind":"Direct","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\stream\\peek.rs","byte_start":259788,"byte_end":259794,"line_start":332,"line_end":332,"column_start":29,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":3089}],"docs":"","sig":null,"attributes":[]},{"id":193,"kind":"Direct","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\stream\\peek.rs","byte_start":260063,"byte_end":260069,"line_start":343,"line_end":343,"column_start":24,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":3094},{"krate":0,"index":3095}],"docs":"","sig":null,"attributes":[]},{"id":194,"kind":"Direct","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\stream\\peek.rs","byte_start":261330,"byte_end":261338,"line_start":381,"line_end":381,"column_start":28,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":3099}],"docs":"","sig":null,"attributes":[]},{"id":195,"kind":"Direct","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\stream\\peek.rs","byte_start":261658,"byte_end":261666,"line_start":394,"line_end":394,"column_start":29,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":3104}],"docs":"","sig":null,"attributes":[]},{"id":196,"kind":"Direct","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\stream\\peek.rs","byte_start":261850,"byte_end":261858,"line_start":405,"line_end":405,"column_start":24,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":3108},{"krate":0,"index":3109}],"docs":"","sig":null,"attributes":[]},{"id":197,"kind":"Direct","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\stream\\peek.rs","byte_start":262229,"byte_end":262239,"line_start":423,"line_end":423,"column_start":34,"column_end":44},"value":"","parent":null,"children":[{"krate":0,"index":3119},{"krate":0,"index":3120}],"docs":"","sig":null,"attributes":[]},{"id":198,"kind":"Inherent","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\stream\\skip.rs","byte_start":262904,"byte_end":262908,"line_start":20,"line_end":20,"column_start":18,"column_end":22},"value":"","parent":null,"children":[{"krate":0,"index":3166},{"krate":0,"index":14068},{"krate":0,"index":14069},{"krate":0,"index":14070},{"krate":0,"index":14071}],"docs":"","sig":null,"attributes":[]},{"id":199,"kind":"Direct","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\stream\\skip.rs","byte_start":263099,"byte_end":263103,"line_start":28,"line_end":28,"column_start":39,"column_end":43},"value":"","parent":null,"children":[{"krate":0,"index":3169}],"docs":"","sig":null,"attributes":[]},{"id":200,"kind":"Direct","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\stream\\skip.rs","byte_start":263221,"byte_end":263225,"line_start":34,"line_end":34,"column_start":29,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":3172},{"krate":0,"index":3173},{"krate":0,"index":3174}],"docs":"","sig":null,"attributes":[]},{"id":201,"kind":"Direct","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\stream\\skip.rs","byte_start":264036,"byte_end":264040,"line_start":63,"line_end":63,"column_start":30,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":3179},{"krate":0,"index":14072},{"krate":0,"index":14073},{"krate":0,"index":14074},{"krate":0,"index":14075}],"docs":"","sig":null,"attributes":[]},{"id":202,"kind":"Direct","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\stream\\skip_while.rs","byte_start":264822,"byte_end":264831,"line_start":25,"line_end":25,"column_start":33,"column_end":42},"value":"","parent":null,"children":[{"krate":0,"index":3220}],"docs":"","sig":null,"attributes":[]},{"id":203,"kind":"Inherent","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\stream\\skip_while.rs","byte_start":265283,"byte_end":265292,"line_start":41,"line_end":41,"column_start":18,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":3225},{"krate":0,"index":14141},{"krate":0,"index":14142},{"krate":0,"index":14143},{"krate":0,"index":14144}],"docs":"","sig":null,"attributes":[]},{"id":204,"kind":"Direct","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\stream\\skip_while.rs","byte_start":265618,"byte_end":265627,"line_start":54,"line_end":54,"column_start":34,"column_end":43},"value":"","parent":null,"children":[{"krate":0,"index":3230}],"docs":"","sig":null,"attributes":[]},{"id":205,"kind":"Direct","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\stream\\skip_while.rs","byte_start":265875,"byte_end":265884,"line_start":65,"line_end":65,"column_start":29,"column_end":38},"value":"","parent":null,"children":[{"krate":0,"index":3235},{"krate":0,"index":3236},{"krate":0,"index":3237}],"docs":"","sig":null,"attributes":[]},{"id":206,"kind":"Direct","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\stream\\skip_while.rs","byte_start":267498,"byte_end":267507,"line_start":115,"line_end":115,"column_start":38,"column_end":47},"value":"","parent":null,"children":[{"krate":0,"index":3243},{"krate":0,"index":14145},{"krate":0,"index":14146},{"krate":0,"index":14147},{"krate":0,"index":14148}],"docs":"","sig":null,"attributes":[]},{"id":207,"kind":"Inherent","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\stream\\take.rs","byte_start":268184,"byte_end":268188,"line_start":21,"line_end":21,"column_start":18,"column_end":22},"value":"","parent":null,"children":[{"krate":0,"index":3279},{"krate":0,"index":14189},{"krate":0,"index":14190},{"krate":0,"index":14191},{"krate":0,"index":14192}],"docs":"","sig":null,"attributes":[]},{"id":208,"kind":"Direct","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\stream\\take.rs","byte_start":268361,"byte_end":268365,"line_start":29,"line_end":29,"column_start":21,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":3282},{"krate":0,"index":3283},{"krate":0,"index":3284}],"docs":"","sig":null,"attributes":[]},{"id":209,"kind":"Direct","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\stream\\take.rs","byte_start":269337,"byte_end":269341,"line_start":68,"line_end":68,"column_start":26,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":3287}],"docs":"","sig":null,"attributes":[]},{"id":210,"kind":"Direct","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\stream\\take.rs","byte_start":269589,"byte_end":269593,"line_start":79,"line_end":79,"column_start":30,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":3291},{"krate":0,"index":14193},{"krate":0,"index":14194},{"krate":0,"index":14195},{"krate":0,"index":14196}],"docs":"","sig":null,"attributes":[]},{"id":211,"kind":"Direct","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\stream\\take_while.rs","byte_start":270364,"byte_end":270373,"line_start":25,"line_end":25,"column_start":33,"column_end":42},"value":"","parent":null,"children":[{"krate":0,"index":3332}],"docs":"","sig":null,"attributes":[]},{"id":212,"kind":"Inherent","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\stream\\take_while.rs","byte_start":270821,"byte_end":270830,"line_start":41,"line_end":41,"column_start":18,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":3337},{"krate":0,"index":14262},{"krate":0,"index":14263},{"krate":0,"index":14264},{"krate":0,"index":14265}],"docs":"","sig":null,"attributes":[]},{"id":213,"kind":"Direct","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\stream\\take_while.rs","byte_start":271149,"byte_end":271158,"line_start":54,"line_end":54,"column_start":29,"column_end":38},"value":"","parent":null,"children":[{"krate":0,"index":3342},{"krate":0,"index":3343},{"krate":0,"index":3344}],"docs":"","sig":null,"attributes":[]},{"id":214,"kind":"Direct","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\stream\\take_while.rs","byte_start":272677,"byte_end":272686,"line_start":104,"line_end":104,"column_start":34,"column_end":43},"value":"","parent":null,"children":[{"krate":0,"index":3349}],"docs":"","sig":null,"attributes":[]},{"id":215,"kind":"Direct","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\stream\\take_while.rs","byte_start":273042,"byte_end":273051,"line_start":117,"line_end":117,"column_start":38,"column_end":47},"value":"","parent":null,"children":[{"krate":0,"index":3355},{"krate":0,"index":14266},{"krate":0,"index":14267},{"krate":0,"index":14268},{"krate":0,"index":14269}],"docs":"","sig":null,"attributes":[]},{"id":216,"kind":"Direct","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\stream\\take_until.rs","byte_start":274070,"byte_end":274079,"line_start":30,"line_end":30,"column_start":30,"column_end":39},"value":"","parent":null,"children":[{"krate":0,"index":3395}],"docs":"","sig":null,"attributes":[]},{"id":217,"kind":"Inherent","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\stream\\take_until.rs","byte_start":274367,"byte_end":274376,"line_start":41,"line_end":41,"column_start":15,"column_end":24},"value":"","parent":null,"children":[{"krate":0,"index":3399},{"krate":0,"index":14323},{"krate":0,"index":14324},{"krate":0,"index":14325},{"krate":0,"index":14326},{"krate":0,"index":3400},{"krate":0,"index":3401},{"krate":0,"index":3402}],"docs":"","sig":null,"attributes":[]},{"id":218,"kind":"Direct","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\stream\\take_until.rs","byte_start":276493,"byte_end":276502,"line_start":111,"line_end":111,"column_start":26,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":3406},{"krate":0,"index":3407},{"krate":0,"index":3408}],"docs":"","sig":null,"attributes":[]},{"id":219,"kind":"Direct","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\stream\\take_until.rs","byte_start":277534,"byte_end":277543,"line_start":150,"line_end":150,"column_start":31,"column_end":40},"value":"","parent":null,"children":[{"krate":0,"index":3412}],"docs":"","sig":null,"attributes":[]},{"id":220,"kind":"Direct","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\stream\\take_until.rs","byte_start":277780,"byte_end":277789,"line_start":162,"line_end":162,"column_start":35,"column_end":44},"value":"","parent":null,"children":[{"krate":0,"index":3417},{"krate":0,"index":14327},{"krate":0,"index":14328},{"krate":0,"index":14329},{"krate":0,"index":14330}],"docs":"","sig":null,"attributes":[]},{"id":221,"kind":"Direct","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\stream\\then.rs","byte_start":278485,"byte_end":278489,"line_start":23,"line_end":23,"column_start":33,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":3458}],"docs":"","sig":null,"attributes":[]},{"id":222,"kind":"Inherent","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\stream\\then.rs","byte_start":278740,"byte_end":278744,"line_start":33,"line_end":33,"column_start":18,"column_end":22},"value":"","parent":null,"children":[{"krate":0,"index":3463},{"krate":0,"index":14388},{"krate":0,"index":14389},{"krate":0,"index":14390},{"krate":0,"index":14391}],"docs":"","sig":null,"attributes":[]},{"id":223,"kind":"Direct","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\stream\\then.rs","byte_start":278990,"byte_end":278994,"line_start":45,"line_end":45,"column_start":34,"column_end":38},"value":"","parent":null,"children":[{"krate":0,"index":3468}],"docs":"","sig":null,"attributes":[]},{"id":224,"kind":"Direct","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\stream\\then.rs","byte_start":279220,"byte_end":279224,"line_start":56,"line_end":56,"column_start":29,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":3473},{"krate":0,"index":3474},{"krate":0,"index":3475}],"docs":"","sig":null,"attributes":[]},{"id":225,"kind":"Direct","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\stream\\then.rs","byte_start":280403,"byte_end":280407,"line_start":94,"line_end":94,"column_start":38,"column_end":42},"value":"","parent":null,"children":[{"krate":0,"index":3481},{"krate":0,"index":14392},{"krate":0,"index":14393},{"krate":0,"index":14394},{"krate":0,"index":14395}],"docs":"","sig":null,"attributes":[]},{"id":226,"kind":"Inherent","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\stream\\zip.rs","byte_start":281106,"byte_end":281109,"line_start":22,"line_end":22,"column_start":32,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":3519},{"krate":0,"index":3520},{"krate":0,"index":3521},{"krate":0,"index":3522},{"krate":0,"index":3523}],"docs":"","sig":null,"attributes":[]},{"id":227,"kind":"Direct","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\stream\\zip.rs","byte_start":282695,"byte_end":282698,"line_start":61,"line_end":61,"column_start":32,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":3527}],"docs":"","sig":null,"attributes":[]},{"id":228,"kind":"Direct","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\stream\\zip.rs","byte_start":282893,"byte_end":282896,"line_start":71,"line_end":71,"column_start":27,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":3531},{"krate":0,"index":3532},{"krate":0,"index":3533}],"docs":"","sig":null,"attributes":[]},{"id":229,"kind":"Inherent","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\stream\\chunks.rs","byte_start":285591,"byte_end":285597,"line_start":24,"line_end":24,"column_start":18,"column_end":24},"value":"","parent":null,"children":[{"krate":0,"index":3575},{"krate":0,"index":3576},{"krate":0,"index":14497},{"krate":0,"index":14498},{"krate":0,"index":14499},{"krate":0,"index":14500}],"docs":"","sig":null,"attributes":[]},{"id":230,"kind":"Direct","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\stream\\chunks.rs","byte_start":286105,"byte_end":286111,"line_start":46,"line_end":46,"column_start":29,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":3579},{"krate":0,"index":3580},{"krate":0,"index":3581}],"docs":"","sig":null,"attributes":[]},{"id":231,"kind":"Direct","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\stream\\chunks.rs","byte_start":287727,"byte_end":287733,"line_start":91,"line_end":91,"column_start":39,"column_end":45},"value":"","parent":null,"children":[{"krate":0,"index":3584}],"docs":"","sig":null,"attributes":[]},{"id":232,"kind":"Direct","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\stream\\chunks.rs","byte_start":287956,"byte_end":287962,"line_start":99,"line_end":99,"column_start":30,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":3588},{"krate":0,"index":14501},{"krate":0,"index":14502},{"krate":0,"index":14503},{"krate":0,"index":14504}],"docs":"","sig":null,"attributes":[]},{"id":233,"kind":"Inherent","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\stream\\ready_chunks.rs","byte_start":288705,"byte_end":288716,"line_start":23,"line_end":23,"column_start":18,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":3627},{"krate":0,"index":14549},{"krate":0,"index":14550},{"krate":0,"index":14551},{"krate":0,"index":14552}],"docs":"","sig":null,"attributes":[]},{"id":234,"kind":"Direct","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\stream\\ready_chunks.rs","byte_start":289068,"byte_end":289079,"line_start":40,"line_end":40,"column_start":29,"column_end":40},"value":"","parent":null,"children":[{"krate":0,"index":3630},{"krate":0,"index":3631},{"krate":0,"index":3632}],"docs":"","sig":null,"attributes":[]},{"id":235,"kind":"Direct","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\stream\\ready_chunks.rs","byte_start":291248,"byte_end":291259,"line_start":99,"line_end":99,"column_start":39,"column_end":50},"value":"","parent":null,"children":[{"krate":0,"index":3635}],"docs":"","sig":null,"attributes":[]},{"id":236,"kind":"Direct","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\stream\\ready_chunks.rs","byte_start":291482,"byte_end":291493,"line_start":107,"line_end":107,"column_start":30,"column_end":41},"value":"","parent":null,"children":[{"krate":0,"index":3639},{"krate":0,"index":14553},{"krate":0,"index":14554},{"krate":0,"index":14555},{"krate":0,"index":14556}],"docs":"","sig":null,"attributes":[]},{"id":237,"kind":"Direct","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\stream\\scan.rs","byte_start":292257,"byte_end":292261,"line_start":28,"line_end":28,"column_start":36,"column_end":40},"value":"","parent":null,"children":[{"krate":0,"index":3686}],"docs":"","sig":null,"attributes":[]},{"id":238,"kind":"Inherent","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\stream\\scan.rs","byte_start":292747,"byte_end":292751,"line_start":45,"line_end":45,"column_start":29,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":3693}],"docs":"","sig":null,"attributes":[]},{"id":239,"kind":"Inherent","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\stream\\scan.rs","byte_start":292915,"byte_end":292919,"line_start":52,"line_end":52,"column_start":24,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":3700},{"krate":0,"index":14622},{"krate":0,"index":14623},{"krate":0,"index":14624},{"krate":0,"index":14625}],"docs":"","sig":null,"attributes":[]},{"id":240,"kind":"Direct","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\stream\\scan.rs","byte_start":293281,"byte_end":293285,"line_start":65,"line_end":65,"column_start":35,"column_end":39},"value":"","parent":null,"children":[{"krate":0,"index":3707},{"krate":0,"index":3708},{"krate":0,"index":3709}],"docs":"","sig":null,"attributes":[]},{"id":241,"kind":"Direct","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\stream\\scan.rs","byte_start":294512,"byte_end":294516,"line_start":108,"line_end":108,"column_start":40,"column_end":44},"value":"","parent":null,"children":[{"krate":0,"index":3716}],"docs":"","sig":null,"attributes":[]},{"id":242,"kind":"Direct","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\stream\\scan.rs","byte_start":294890,"byte_end":294894,"line_start":121,"line_end":121,"column_start":42,"column_end":46},"value":"","parent":null,"children":[{"krate":0,"index":3723},{"krate":0,"index":14626},{"krate":0,"index":14627},{"krate":0,"index":14628},{"krate":0,"index":14629}],"docs":"","sig":null,"attributes":[]},{"id":243,"kind":"Direct","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\stream\\buffer_unordered.rs","byte_start":295697,"byte_end":295712,"line_start":26,"line_end":26,"column_start":25,"column_end":40},"value":"","parent":null,"children":[{"krate":0,"index":3769}],"docs":"","sig":null,"attributes":[]},{"id":244,"kind":"Inherent","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\stream\\buffer_unordered.rs","byte_start":296044,"byte_end":296059,"line_start":39,"line_end":39,"column_start":10,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":3772},{"krate":0,"index":14671},{"krate":0,"index":14672},{"krate":0,"index":14673},{"krate":0,"index":14674}],"docs":"","sig":null,"attributes":[]},{"id":245,"kind":"Direct","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\stream\\buffer_unordered.rs","byte_start":296446,"byte_end":296461,"line_start":59,"line_end":59,"column_start":21,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":3775},{"krate":0,"index":3776},{"krate":0,"index":3777}],"docs":"","sig":null,"attributes":[]},{"id":246,"kind":"Direct","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\stream\\buffer_unordered.rs","byte_start":297915,"byte_end":297930,"line_start":104,"line_end":104,"column_start":26,"column_end":41},"value":"","parent":null,"children":[{"krate":0,"index":3780}],"docs":"","sig":null,"attributes":[]},{"id":247,"kind":"Direct","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\stream\\buffer_unordered.rs","byte_start":298214,"byte_end":298229,"line_start":116,"line_end":116,"column_start":30,"column_end":45},"value":"","parent":null,"children":[{"krate":0,"index":3784},{"krate":0,"index":14675},{"krate":0,"index":14676},{"krate":0,"index":14677},{"krate":0,"index":14678}],"docs":"","sig":null,"attributes":[]},{"id":248,"kind":"Direct","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\stream\\buffered.rs","byte_start":299040,"byte_end":299048,"line_start":27,"line_end":27,"column_start":25,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":3829}],"docs":"","sig":null,"attributes":[]},{"id":249,"kind":"Inherent","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\stream\\buffered.rs","byte_start":299395,"byte_end":299403,"line_start":41,"line_end":41,"column_start":10,"column_end":18},"value":"","parent":null,"children":[{"krate":0,"index":3832},{"krate":0,"index":14720},{"krate":0,"index":14721},{"krate":0,"index":14722},{"krate":0,"index":14723}],"docs":"","sig":null,"attributes":[]},{"id":250,"kind":"Direct","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\stream\\buffered.rs","byte_start":299683,"byte_end":299691,"line_start":53,"line_end":53,"column_start":21,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":3835},{"krate":0,"index":3836},{"krate":0,"index":3837}],"docs":"","sig":null,"attributes":[]},{"id":251,"kind":"Direct","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\stream\\buffered.rs","byte_start":301209,"byte_end":301217,"line_start":100,"line_end":100,"column_start":30,"column_end":38},"value":"","parent":null,"children":[{"krate":0,"index":3841},{"krate":0,"index":14724},{"krate":0,"index":14725},{"krate":0,"index":14726},{"krate":0,"index":14727}],"docs":"","sig":null,"attributes":[]},{"id":252,"kind":"Inherent","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\stream\\flatten_unordered.rs","byte_start":302835,"byte_end":302850,"line_start":60,"line_end":60,"column_start":6,"column_end":21},"value":"","parent":null,"children":[{"krate":0,"index":3922},{"krate":0,"index":3923},{"krate":0,"index":3926},{"krate":0,"index":3930},{"krate":0,"index":3932},{"krate":0,"index":3934}],"docs":"","sig":null,"attributes":[]},{"id":253,"kind":"Inherent","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\stream\\flatten_unordered.rs","byte_start":306969,"byte_end":306982,"line_start":177,"line_end":177,"column_start":45,"column_end":58},"value":"","parent":null,"children":[{"krate":0,"index":3943},{"krate":0,"index":3944},{"krate":0,"index":3945}],"docs":"","sig":null,"attributes":[]},{"id":254,"kind":"Direct","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\stream\\flatten_unordered.rs","byte_start":307502,"byte_end":307515,"line_start":194,"line_end":194,"column_start":50,"column_end":63},"value":"","parent":null,"children":[{"krate":0,"index":3949}],"docs":"","sig":null,"attributes":[]},{"id":255,"kind":"Direct","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\stream\\flatten_unordered.rs","byte_start":307913,"byte_end":307923,"line_start":210,"line_end":210,"column_start":22,"column_end":32},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":256,"kind":"Direct","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\stream\\flatten_unordered.rs","byte_start":307948,"byte_end":307958,"line_start":211,"line_end":211,"column_start":22,"column_end":32},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":257,"kind":"Inherent","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\stream\\flatten_unordered.rs","byte_start":307968,"byte_end":307978,"line_start":213,"line_end":213,"column_start":6,"column_end":16},"value":"","parent":null,"children":[{"krate":0,"index":3957},{"krate":0,"index":3958},{"krate":0,"index":3960}],"docs":"","sig":null,"attributes":[]},{"id":258,"kind":"Direct","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\stream\\flatten_unordered.rs","byte_start":309029,"byte_end":309039,"line_start":239,"line_end":239,"column_start":18,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":3962}],"docs":"","sig":null,"attributes":[]},{"id":259,"kind":"Inherent","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\stream\\flatten_unordered.rs","byte_start":310640,"byte_end":310653,"line_start":279,"line_end":279,"column_start":10,"column_end":23},"value":"","parent":null,"children":[{"krate":0,"index":3965}],"docs":"","sig":null,"attributes":[]},{"id":260,"kind":"Direct","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\stream\\flatten_unordered.rs","byte_start":310857,"byte_end":310870,"line_start":286,"line_end":286,"column_start":37,"column_end":50},"value":"","parent":null,"children":[{"krate":0,"index":3969},{"krate":0,"index":3970}],"docs":"","sig":null,"attributes":[]},{"id":261,"kind":"Direct","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\stream\\flatten_unordered.rs","byte_start":311985,"byte_end":312001,"line_start":322,"line_end":322,"column_start":25,"column_end":41},"value":"","parent":null,"children":[{"krate":0,"index":3974}],"docs":"","sig":null,"attributes":[]},{"id":262,"kind":"Inherent","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\stream\\flatten_unordered.rs","byte_start":312475,"byte_end":312491,"line_start":338,"line_end":338,"column_start":10,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":3977},{"krate":0,"index":14824},{"krate":0,"index":14825},{"krate":0,"index":14826},{"krate":0,"index":14827}],"docs":"","sig":null,"attributes":[]},{"id":263,"kind":"Inherent","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\stream\\flatten_unordered.rs","byte_start":313430,"byte_end":313450,"line_start":368,"line_end":368,"column_start":10,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":3980}],"docs":"","sig":null,"attributes":[]},{"id":264,"kind":"Direct","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\stream\\flatten_unordered.rs","byte_start":313717,"byte_end":313733,"line_start":378,"line_end":378,"column_start":26,"column_end":42},"value":"","parent":null,"children":[{"krate":0,"index":3984}],"docs":"","sig":null,"attributes":[]},{"id":265,"kind":"Direct","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\stream\\flatten_unordered.rs","byte_start":313938,"byte_end":313954,"line_start":388,"line_end":388,"column_start":21,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":3987},{"krate":0,"index":3988}],"docs":"","sig":null,"attributes":[]},{"id":266,"kind":"Direct","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\stream\\flatten_unordered.rs","byte_start":318574,"byte_end":318590,"line_start":502,"line_end":502,"column_start":31,"column_end":47},"value":"","parent":null,"children":[{"krate":0,"index":3992},{"krate":0,"index":14828},{"krate":0,"index":14829},{"krate":0,"index":14830},{"krate":0,"index":14831}],"docs":"","sig":null,"attributes":[]},{"id":267,"kind":"Direct","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\stream\\for_each_concurrent.rs","byte_start":319383,"byte_end":319400,"line_start":23,"line_end":23,"column_start":33,"column_end":50},"value":"","parent":null,"children":[{"krate":0,"index":4037}],"docs":"","sig":null,"attributes":[]},{"id":268,"kind":"Inherent","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\stream\\for_each_concurrent.rs","byte_start":319746,"byte_end":319763,"line_start":37,"line_end":37,"column_start":18,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":4042}],"docs":"","sig":null,"attributes":[]},{"id":269,"kind":"Direct","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\stream\\for_each_concurrent.rs","byte_start":320196,"byte_end":320213,"line_start":54,"line_end":54,"column_start":34,"column_end":51},"value":"","parent":null,"children":[{"krate":0,"index":4047}],"docs":"","sig":null,"attributes":[]},{"id":270,"kind":"Direct","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\stream\\for_each_concurrent.rs","byte_start":320443,"byte_end":320460,"line_start":65,"line_end":65,"column_start":29,"column_end":46},"value":"","parent":null,"children":[{"krate":0,"index":4052},{"krate":0,"index":4053}],"docs":"","sig":null,"attributes":[]},{"id":271,"kind":"Direct","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\stream\\split.rs","byte_start":322684,"byte_end":322695,"line_start":16,"line_end":16,"column_start":19,"column_end":30},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":272,"kind":"Inherent","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\stream\\split.rs","byte_start":322718,"byte_end":322729,"line_start":18,"line_end":18,"column_start":16,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":4088}],"docs":"","sig":null,"attributes":[]},{"id":273,"kind":"Direct","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\stream\\split.rs","byte_start":323162,"byte_end":323173,"line_start":30,"line_end":30,"column_start":28,"column_end":39},"value":"","parent":null,"children":[{"krate":0,"index":4092},{"krate":0,"index":4093}],"docs":"","sig":null,"attributes":[]},{"id":274,"kind":"Direct","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\stream\\split.rs","byte_start":323751,"byte_end":323760,"line_start":52,"line_end":52,"column_start":25,"column_end":34},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":275,"kind":"Inherent","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\stream\\split.rs","byte_start":323808,"byte_end":323817,"line_start":54,"line_end":54,"column_start":35,"column_end":44},"value":"","parent":null,"children":[{"krate":0,"index":4103}],"docs":"","sig":null,"attributes":[]},{"id":276,"kind":"Inherent","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\stream\\split.rs","byte_start":324281,"byte_end":324290,"line_start":63,"line_end":63,"column_start":27,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":4108},{"krate":0,"index":4109}],"docs":"","sig":null,"attributes":[]},{"id":277,"kind":"Direct","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\stream\\split.rs","byte_start":325012,"byte_end":325021,"line_start":87,"line_end":87,"column_start":42,"column_end":51},"value":"","parent":null,"children":[{"krate":0,"index":4113},{"krate":0,"index":4114},{"krate":0,"index":4115},{"krate":0,"index":4116},{"krate":0,"index":4117}],"docs":"","sig":null,"attributes":[]},{"id":278,"kind":"Direct","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\stream\\split.rs","byte_start":326628,"byte_end":326640,"line_start":131,"line_end":131,"column_start":30,"column_end":42},"value":"","parent":null,"children":[{"krate":0,"index":4130}],"docs":"","sig":null,"attributes":[]},{"id":279,"kind":"Direct","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\stream\\split.rs","byte_start":326816,"byte_end":326828,"line_start":137,"line_end":137,"column_start":32,"column_end":44},"value":"","parent":null,"children":[{"krate":0,"index":4134}],"docs":"","sig":null,"attributes":[]},{"id":280,"kind":"Direct","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\stream\\split.rs","byte_start":327077,"byte_end":327089,"line_start":144,"line_end":144,"column_start":53,"column_end":65},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":281,"kind":"Inherent","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\stream\\catch_unwind.rs","byte_start":327634,"byte_end":327645,"line_start":19,"line_end":19,"column_start":31,"column_end":42},"value":"","parent":null,"children":[{"krate":0,"index":4184},{"krate":0,"index":15042},{"krate":0,"index":15043},{"krate":0,"index":15044},{"krate":0,"index":15045}],"docs":"","sig":null,"attributes":[]},{"id":282,"kind":"Direct","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\stream\\catch_unwind.rs","byte_start":327837,"byte_end":327848,"line_start":27,"line_end":27,"column_start":42,"column_end":53},"value":"","parent":null,"children":[{"krate":0,"index":4187},{"krate":0,"index":4188},{"krate":0,"index":4191}],"docs":"","sig":null,"attributes":[]},{"id":283,"kind":"Direct","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\stream\\catch_unwind.rs","byte_start":328700,"byte_end":328711,"line_start":57,"line_end":57,"column_start":52,"column_end":63},"value":"","parent":null,"children":[{"krate":0,"index":4194}],"docs":"","sig":null,"attributes":[]},{"id":284,"kind":"Direct","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\stream\\mod.rs","byte_start":158480,"byte_end":158481,"line_start":245,"line_end":245,"column_start":31,"column_end":32},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":285,"kind":"Direct","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\try_stream\\and_then.rs","byte_start":368099,"byte_end":368106,"line_start":23,"line_end":23,"column_start":33,"column_end":40},"value":"","parent":null,"children":[{"krate":0,"index":4535}],"docs":"","sig":null,"attributes":[]},{"id":286,"kind":"Inherent","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\try_stream\\and_then.rs","byte_start":368399,"byte_end":368406,"line_start":36,"line_end":36,"column_start":18,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":4540},{"krate":0,"index":15103},{"krate":0,"index":15104},{"krate":0,"index":15105},{"krate":0,"index":15106}],"docs":"","sig":null,"attributes":[]},{"id":287,"kind":"Direct","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\try_stream\\and_then.rs","byte_start":368687,"byte_end":368694,"line_start":49,"line_end":49,"column_start":29,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":4545},{"krate":0,"index":4546},{"krate":0,"index":4547}],"docs":"","sig":null,"attributes":[]},{"id":288,"kind":"Direct","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\try_stream\\and_then.rs","byte_start":369837,"byte_end":369844,"line_start":85,"line_end":85,"column_start":34,"column_end":41},"value":"","parent":null,"children":[{"krate":0,"index":4552}],"docs":"","sig":null,"attributes":[]},{"id":289,"kind":"Direct","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\try_stream\\and_then.rs","byte_start":370190,"byte_end":370197,"line_start":98,"line_end":98,"column_start":38,"column_end":45},"value":"","parent":null,"children":[{"krate":0,"index":4558},{"krate":0,"index":15107},{"krate":0,"index":15108},{"krate":0,"index":15109},{"krate":0,"index":15110}],"docs":"","sig":null,"attributes":[]},{"id":290,"kind":"Inherent","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\try_stream\\into_stream.rs","byte_start":370762,"byte_end":370772,"line_start":18,"line_end":18,"column_start":10,"column_end":20},"value":"","parent":null,"children":[{"krate":0,"index":4591},{"krate":0,"index":15381},{"krate":0,"index":15382},{"krate":0,"index":15383},{"krate":0,"index":15384}],"docs":"","sig":null,"attributes":[]},{"id":291,"kind":"Direct","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\try_stream\\into_stream.rs","byte_start":370965,"byte_end":370975,"line_start":27,"line_end":27,"column_start":51,"column_end":61},"value":"","parent":null,"children":[{"krate":0,"index":4594}],"docs":"","sig":null,"attributes":[]},{"id":292,"kind":"Direct","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\try_stream\\into_stream.rs","byte_start":371096,"byte_end":371106,"line_start":33,"line_end":33,"column_start":32,"column_end":42},"value":"","parent":null,"children":[{"krate":0,"index":4597},{"krate":0,"index":4598},{"krate":0,"index":4599}],"docs":"","sig":null,"attributes":[]},{"id":293,"kind":"Direct","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\try_stream\\into_stream.rs","byte_start":371530,"byte_end":371540,"line_start":48,"line_end":48,"column_start":42,"column_end":52},"value":"","parent":null,"children":[{"krate":0,"index":4603},{"krate":0,"index":15385},{"krate":0,"index":15386},{"krate":0,"index":15387},{"krate":0,"index":15388}],"docs":"","sig":null,"attributes":[]},{"id":294,"kind":"Direct","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\try_stream\\or_else.rs","byte_start":372205,"byte_end":372211,"line_start":23,"line_end":23,"column_start":33,"column_end":39},"value":"","parent":null,"children":[{"krate":0,"index":4647}],"docs":"","sig":null,"attributes":[]},{"id":295,"kind":"Inherent","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\try_stream\\or_else.rs","byte_start":372503,"byte_end":372509,"line_start":36,"line_end":36,"column_start":18,"column_end":24},"value":"","parent":null,"children":[{"krate":0,"index":4652},{"krate":0,"index":15602},{"krate":0,"index":15603},{"krate":0,"index":15604},{"krate":0,"index":15605}],"docs":"","sig":null,"attributes":[]},{"id":296,"kind":"Direct","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\try_stream\\or_else.rs","byte_start":372787,"byte_end":372793,"line_start":49,"line_end":49,"column_start":29,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":4657},{"krate":0,"index":4658},{"krate":0,"index":4659}],"docs":"","sig":null,"attributes":[]},{"id":297,"kind":"Direct","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\try_stream\\or_else.rs","byte_start":374070,"byte_end":374076,"line_start":89,"line_end":89,"column_start":34,"column_end":40},"value":"","parent":null,"children":[{"krate":0,"index":4664}],"docs":"","sig":null,"attributes":[]},{"id":298,"kind":"Direct","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\try_stream\\or_else.rs","byte_start":374419,"byte_end":374425,"line_start":102,"line_end":102,"column_start":38,"column_end":44},"value":"","parent":null,"children":[{"krate":0,"index":4670},{"krate":0,"index":15606},{"krate":0,"index":15607},{"krate":0,"index":15608},{"krate":0,"index":15609}],"docs":"","sig":null,"attributes":[]},{"id":299,"kind":"Direct","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\try_stream\\try_next.rs","byte_start":374980,"byte_end":374987,"line_start":14,"line_end":14,"column_start":36,"column_end":43},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":300,"kind":"Inherent","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\try_stream\\try_next.rs","byte_start":375041,"byte_end":375048,"line_start":16,"line_end":16,"column_start":42,"column_end":49},"value":"","parent":null,"children":[{"krate":0,"index":4707}],"docs":"","sig":null,"attributes":[]},{"id":301,"kind":"Direct","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\try_stream\\try_next.rs","byte_start":375211,"byte_end":375218,"line_start":22,"line_end":22,"column_start":68,"column_end":75},"value":"","parent":null,"children":[{"krate":0,"index":4710}],"docs":"","sig":null,"attributes":[]},{"id":302,"kind":"Direct","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\try_stream\\try_next.rs","byte_start":375360,"byte_end":375367,"line_start":28,"line_end":28,"column_start":49,"column_end":56},"value":"","parent":null,"children":[{"krate":0,"index":4713},{"krate":0,"index":4714}],"docs":"","sig":null,"attributes":[]},{"id":303,"kind":"Direct","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\try_stream\\try_for_each.rs","byte_start":376143,"byte_end":376153,"line_start":21,"line_end":21,"column_start":33,"column_end":43},"value":"","parent":null,"children":[{"krate":0,"index":4752}],"docs":"","sig":null,"attributes":[]},{"id":304,"kind":"Inherent","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\try_stream\\try_for_each.rs","byte_start":376449,"byte_end":376459,"line_start":34,"line_end":34,"column_start":18,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":4757}],"docs":"","sig":null,"attributes":[]},{"id":305,"kind":"Direct","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\try_stream\\try_for_each.rs","byte_start":376704,"byte_end":376714,"line_start":45,"line_end":45,"column_start":29,"column_end":39},"value":"","parent":null,"children":[{"krate":0,"index":4762},{"krate":0,"index":4763}],"docs":"","sig":null,"attributes":[]},{"id":306,"kind":"Direct","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\try_stream\\try_filter.rs","byte_start":378113,"byte_end":378122,"line_start":27,"line_end":27,"column_start":33,"column_end":42},"value":"","parent":null,"children":[{"krate":0,"index":4807}],"docs":"","sig":null,"attributes":[]},{"id":307,"kind":"Inherent","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\try_stream\\try_filter.rs","byte_start":378518,"byte_end":378527,"line_start":42,"line_end":42,"column_start":18,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":4812},{"krate":0,"index":15736},{"krate":0,"index":15737},{"krate":0,"index":15738},{"krate":0,"index":15739}],"docs":"","sig":null,"attributes":[]},{"id":308,"kind":"Direct","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\try_stream\\try_filter.rs","byte_start":378770,"byte_end":378779,"line_start":53,"line_end":53,"column_start":34,"column_end":43},"value":"","parent":null,"children":[{"krate":0,"index":4817}],"docs":"","sig":null,"attributes":[]},{"id":309,"kind":"Direct","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\try_stream\\try_filter.rs","byte_start":379036,"byte_end":379045,"line_start":64,"line_end":64,"column_start":29,"column_end":38},"value":"","parent":null,"children":[{"krate":0,"index":4822},{"krate":0,"index":4823},{"krate":0,"index":4824}],"docs":"","sig":null,"attributes":[]},{"id":310,"kind":"Direct","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\try_stream\\try_filter.rs","byte_start":380434,"byte_end":380443,"line_start":105,"line_end":105,"column_start":41,"column_end":50},"value":"","parent":null,"children":[{"krate":0,"index":4831},{"krate":0,"index":15740},{"krate":0,"index":15741},{"krate":0,"index":15742},{"krate":0,"index":15743}],"docs":"","sig":null,"attributes":[]},{"id":311,"kind":"Direct","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\try_stream\\try_filter_map.rs","byte_start":381186,"byte_end":381198,"line_start":24,"line_end":24,"column_start":33,"column_end":45},"value":"","parent":null,"children":[{"krate":0,"index":4875}],"docs":"","sig":null,"attributes":[]},{"id":312,"kind":"Inherent","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\try_stream\\try_filter_map.rs","byte_start":381498,"byte_end":381510,"line_start":37,"line_end":37,"column_start":18,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":4880},{"krate":0,"index":15801},{"krate":0,"index":15802},{"krate":0,"index":15803},{"krate":0,"index":15804}],"docs":"","sig":null,"attributes":[]},{"id":313,"kind":"Direct","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\try_stream\\try_filter_map.rs","byte_start":381707,"byte_end":381719,"line_start":45,"line_end":45,"column_start":37,"column_end":49},"value":"","parent":null,"children":[{"krate":0,"index":4886}],"docs":"","sig":null,"attributes":[]},{"id":314,"kind":"Direct","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\try_stream\\try_filter_map.rs","byte_start":381997,"byte_end":382009,"line_start":56,"line_end":56,"column_start":32,"column_end":44},"value":"","parent":null,"children":[{"krate":0,"index":4892},{"krate":0,"index":4893},{"krate":0,"index":4894}],"docs":"","sig":null,"attributes":[]},{"id":315,"kind":"Direct","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\try_stream\\try_filter_map.rs","byte_start":383509,"byte_end":383521,"line_start":99,"line_end":99,"column_start":38,"column_end":50},"value":"","parent":null,"children":[{"krate":0,"index":4900},{"krate":0,"index":15805},{"krate":0,"index":15806},{"krate":0,"index":15807},{"krate":0,"index":15808}],"docs":"","sig":null,"attributes":[]},{"id":316,"kind":"Inherent","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\try_stream\\try_flatten.rs","byte_start":384193,"byte_end":384203,"line_start":24,"line_end":24,"column_start":10,"column_end":20},"value":"","parent":null,"children":[{"krate":0,"index":4936},{"krate":0,"index":15849},{"krate":0,"index":15850},{"krate":0,"index":15851},{"krate":0,"index":15852}],"docs":"","sig":null,"attributes":[]},{"id":317,"kind":"Direct","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\try_stream\\try_flatten.rs","byte_start":384468,"byte_end":384478,"line_start":37,"line_end":37,"column_start":26,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":4939}],"docs":"","sig":null,"attributes":[]},{"id":318,"kind":"Direct","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\try_stream\\try_flatten.rs","byte_start":384724,"byte_end":384734,"line_start":48,"line_end":48,"column_start":21,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":4942},{"krate":0,"index":4943}],"docs":"","sig":null,"attributes":[]},{"id":319,"kind":"Direct","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\try_stream\\try_flatten.rs","byte_start":385653,"byte_end":385663,"line_start":77,"line_end":77,"column_start":30,"column_end":40},"value":"","parent":null,"children":[{"krate":0,"index":4947},{"krate":0,"index":15853},{"krate":0,"index":15854},{"krate":0,"index":15855},{"krate":0,"index":15856}],"docs":"","sig":null,"attributes":[]},{"id":320,"kind":"Inherent","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\try_stream\\try_collect.rs","byte_start":386343,"byte_end":386353,"line_start":20,"line_end":20,"column_start":33,"column_end":43},"value":"","parent":null,"children":[{"krate":0,"index":4988}],"docs":"","sig":null,"attributes":[]},{"id":321,"kind":"Direct","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\try_stream\\try_collect.rs","byte_start":386493,"byte_end":386503,"line_start":26,"line_end":26,"column_start":29,"column_end":39},"value":"","parent":null,"children":[{"krate":0,"index":4992}],"docs":"","sig":null,"attributes":[]},{"id":322,"kind":"Direct","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\try_stream\\try_collect.rs","byte_start":386691,"byte_end":386701,"line_start":36,"line_end":36,"column_start":24,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":4996},{"krate":0,"index":4997}],"docs":"","sig":null,"attributes":[]},{"id":323,"kind":"Inherent","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\try_stream\\try_concat.rs","byte_start":387699,"byte_end":387708,"line_start":19,"line_end":19,"column_start":10,"column_end":19},"value":"","parent":null,"children":[{"krate":0,"index":5026}],"docs":"","sig":null,"attributes":[]},{"id":324,"kind":"Direct","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\try_stream\\try_concat.rs","byte_start":387927,"byte_end":387936,"line_start":29,"line_end":29,"column_start":21,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":5029},{"krate":0,"index":5030}],"docs":"","sig":null,"attributes":[]},{"id":325,"kind":"Inherent","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\try_stream\\try_chunks.rs","byte_start":389320,"byte_end":389329,"line_start":25,"line_end":25,"column_start":21,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":5086},{"krate":0,"index":5087},{"krate":0,"index":15990},{"krate":0,"index":15991},{"krate":0,"index":15992},{"krate":0,"index":15993}],"docs":"","sig":null,"attributes":[]},{"id":326,"kind":"Direct","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\try_stream\\try_chunks.rs","byte_start":389824,"byte_end":389833,"line_start":44,"line_end":44,"column_start":32,"column_end":41},"value":"","parent":null,"children":[{"krate":0,"index":5090},{"krate":0,"index":5091},{"krate":0,"index":5092}],"docs":"","sig":null,"attributes":[]},{"id":327,"kind":"Direct","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\try_stream\\try_chunks.rs","byte_start":391781,"byte_end":391790,"line_start":95,"line_end":95,"column_start":51,"column_end":60},"value":"","parent":null,"children":[{"krate":0,"index":5095}],"docs":"","sig":null,"attributes":[]},{"id":328,"kind":"Direct","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\try_stream\\try_chunks.rs","byte_start":392013,"byte_end":392022,"line_start":103,"line_end":103,"column_start":30,"column_end":39},"value":"","parent":null,"children":[{"krate":0,"index":5099},{"krate":0,"index":15994},{"krate":0,"index":15995},{"krate":0,"index":15996},{"krate":0,"index":15997}],"docs":"","sig":null,"attributes":[]},{"id":329,"kind":"Direct","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\try_stream\\try_chunks.rs","byte_start":392449,"byte_end":392463,"line_start":118,"line_end":118,"column_start":39,"column_end":53},"value":"","parent":null,"children":[{"krate":0,"index":5103}],"docs":"","sig":null,"attributes":[]},{"id":330,"kind":"Direct","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\try_stream\\try_chunks.rs","byte_start":392608,"byte_end":392622,"line_start":124,"line_end":124,"column_start":43,"column_end":57},"value":"","parent":null,"children":[{"krate":0,"index":5107}],"docs":"","sig":null,"attributes":[]},{"id":331,"kind":"Direct","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\try_stream\\try_chunks.rs","byte_start":392809,"byte_end":392823,"line_start":131,"line_end":131,"column_start":61,"column_end":75},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":332,"kind":"Direct","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\try_stream\\try_fold.rs","byte_start":393433,"byte_end":393440,"line_start":22,"line_end":22,"column_start":36,"column_end":43},"value":"","parent":null,"children":[{"krate":0,"index":5156}],"docs":"","sig":null,"attributes":[]},{"id":333,"kind":"Inherent","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\try_stream\\try_fold.rs","byte_start":393799,"byte_end":393806,"line_start":37,"line_end":37,"column_start":21,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":5162}],"docs":"","sig":null,"attributes":[]},{"id":334,"kind":"Direct","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\try_stream\\try_fold.rs","byte_start":394086,"byte_end":394093,"line_start":48,"line_end":48,"column_start":37,"column_end":44},"value":"","parent":null,"children":[{"krate":0,"index":5168}],"docs":"","sig":null,"attributes":[]},{"id":335,"kind":"Direct","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\try_stream\\try_fold.rs","byte_start":394347,"byte_end":394354,"line_start":59,"line_end":59,"column_start":32,"column_end":39},"value":"","parent":null,"children":[{"krate":0,"index":5174},{"krate":0,"index":5175}],"docs":"","sig":null,"attributes":[]},{"id":336,"kind":"Direct","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\try_stream\\try_unfold.rs","byte_start":398217,"byte_end":398226,"line_start":78,"line_end":78,"column_start":32,"column_end":41},"value":"","parent":null,"children":[{"krate":0,"index":5217}],"docs":"","sig":null,"attributes":[]},{"id":337,"kind":"Direct","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\try_stream\\try_unfold.rs","byte_start":398488,"byte_end":398497,"line_start":88,"line_end":88,"column_start":34,"column_end":43},"value":"","parent":null,"children":[{"krate":0,"index":5223},{"krate":0,"index":5224}],"docs":"","sig":null,"attributes":[]},{"id":338,"kind":"Direct","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\try_stream\\try_skip_while.rs","byte_start":400243,"byte_end":400255,"line_start":26,"line_end":26,"column_start":33,"column_end":45},"value":"","parent":null,"children":[{"krate":0,"index":5272}],"docs":"","sig":null,"attributes":[]},{"id":339,"kind":"Inherent","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\try_stream\\try_skip_while.rs","byte_start":400711,"byte_end":400723,"line_start":42,"line_end":42,"column_start":18,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":5277},{"krate":0,"index":16210},{"krate":0,"index":16211},{"krate":0,"index":16212},{"krate":0,"index":16213}],"docs":"","sig":null,"attributes":[]},{"id":340,"kind":"Direct","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\try_stream\\try_skip_while.rs","byte_start":401063,"byte_end":401075,"line_start":55,"line_end":55,"column_start":29,"column_end":41},"value":"","parent":null,"children":[{"krate":0,"index":5282},{"krate":0,"index":5283},{"krate":0,"index":5284}],"docs":"","sig":null,"attributes":[]},{"id":341,"kind":"Direct","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\try_stream\\try_skip_while.rs","byte_start":402574,"byte_end":402586,"line_start":100,"line_end":100,"column_start":34,"column_end":46},"value":"","parent":null,"children":[{"krate":0,"index":5289}],"docs":"","sig":null,"attributes":[]},{"id":342,"kind":"Direct","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\try_stream\\try_skip_while.rs","byte_start":402953,"byte_end":402965,"line_start":113,"line_end":113,"column_start":41,"column_end":53},"value":"","parent":null,"children":[{"krate":0,"index":5296},{"krate":0,"index":16214},{"krate":0,"index":16215},{"krate":0,"index":16216},{"krate":0,"index":16217}],"docs":"","sig":null,"attributes":[]},{"id":343,"kind":"Direct","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\try_stream\\try_take_while.rs","byte_start":403814,"byte_end":403826,"line_start":29,"line_end":29,"column_start":33,"column_end":45},"value":"","parent":null,"children":[{"krate":0,"index":5340}],"docs":"","sig":null,"attributes":[]},{"id":344,"kind":"Inherent","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\try_stream\\try_take_while.rs","byte_start":404278,"byte_end":404290,"line_start":45,"line_end":45,"column_start":18,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":5345},{"krate":0,"index":16283},{"krate":0,"index":16284},{"krate":0,"index":16285},{"krate":0,"index":16286}],"docs":"","sig":null,"attributes":[]},{"id":345,"kind":"Direct","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\try_stream\\try_take_while.rs","byte_start":404628,"byte_end":404640,"line_start":58,"line_end":58,"column_start":29,"column_end":41},"value":"","parent":null,"children":[{"krate":0,"index":5350},{"krate":0,"index":5351},{"krate":0,"index":5352}],"docs":"","sig":null,"attributes":[]},{"id":346,"kind":"Direct","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\try_stream\\try_take_while.rs","byte_start":406247,"byte_end":406259,"line_start":109,"line_end":109,"column_start":34,"column_end":46},"value":"","parent":null,"children":[{"krate":0,"index":5357}],"docs":"","sig":null,"attributes":[]},{"id":347,"kind":"Direct","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\try_stream\\try_take_while.rs","byte_start":406646,"byte_end":406658,"line_start":122,"line_end":122,"column_start":41,"column_end":53},"value":"","parent":null,"children":[{"krate":0,"index":5364},{"krate":0,"index":16287},{"krate":0,"index":16288},{"krate":0,"index":16289},{"krate":0,"index":16290}],"docs":"","sig":null,"attributes":[]},{"id":348,"kind":"Inherent","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\try_stream\\try_buffer_unordered.rs","byte_start":407547,"byte_end":407565,"line_start":26,"line_end":26,"column_start":10,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":5417},{"krate":0,"index":16335},{"krate":0,"index":16336},{"krate":0,"index":16337},{"krate":0,"index":16338}],"docs":"","sig":null,"attributes":[]},{"id":349,"kind":"Direct","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\try_stream\\try_buffer_unordered.rs","byte_start":407904,"byte_end":407922,"line_start":42,"line_end":42,"column_start":21,"column_end":39},"value":"","parent":null,"children":[{"krate":0,"index":5420},{"krate":0,"index":5421}],"docs":"","sig":null,"attributes":[]},{"id":350,"kind":"Direct","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\try_stream\\try_buffer_unordered.rs","byte_start":409199,"byte_end":409217,"line_start":78,"line_end":78,"column_start":33,"column_end":51},"value":"","parent":null,"children":[{"krate":0,"index":5426},{"krate":0,"index":16339},{"krate":0,"index":16340},{"krate":0,"index":16341},{"krate":0,"index":16342}],"docs":"","sig":null,"attributes":[]},{"id":351,"kind":"Inherent","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\try_stream\\try_buffered.rs","byte_start":410128,"byte_end":410139,"line_start":27,"line_end":27,"column_start":10,"column_end":21},"value":"","parent":null,"children":[{"krate":0,"index":5479},{"krate":0,"index":16387},{"krate":0,"index":16388},{"krate":0,"index":16389},{"krate":0,"index":16390}],"docs":"","sig":null,"attributes":[]},{"id":352,"kind":"Direct","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\try_stream\\try_buffered.rs","byte_start":410476,"byte_end":410487,"line_start":43,"line_end":43,"column_start":21,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":5482},{"krate":0,"index":5483}],"docs":"","sig":null,"attributes":[]},{"id":353,"kind":"Direct","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\try_stream\\try_buffered.rs","byte_start":411764,"byte_end":411775,"line_start":79,"line_end":79,"column_start":33,"column_end":44},"value":"","parent":null,"children":[{"krate":0,"index":5488},{"krate":0,"index":16391},{"krate":0,"index":16392},{"krate":0,"index":16393},{"krate":0,"index":16394}],"docs":"","sig":null,"attributes":[]},{"id":354,"kind":"Direct","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\try_stream\\try_for_each_concurrent.rs","byte_start":412645,"byte_end":412665,"line_start":25,"line_end":25,"column_start":33,"column_end":53},"value":"","parent":null,"children":[{"krate":0,"index":5536}],"docs":"","sig":null,"attributes":[]},{"id":355,"kind":"Direct","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\try_stream\\try_for_each_concurrent.rs","byte_start":413030,"byte_end":413050,"line_start":39,"line_end":39,"column_start":34,"column_end":54},"value":"","parent":null,"children":[{"krate":0,"index":5541}],"docs":"","sig":null,"attributes":[]},{"id":356,"kind":"Inherent","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\try_stream\\try_for_each_concurrent.rs","byte_start":413289,"byte_end":413309,"line_start":50,"line_end":50,"column_start":18,"column_end":38},"value":"","parent":null,"children":[{"krate":0,"index":5546}],"docs":"","sig":null,"attributes":[]},{"id":357,"kind":"Direct","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\try_stream\\try_for_each_concurrent.rs","byte_start":413757,"byte_end":413777,"line_start":67,"line_end":67,"column_start":29,"column_end":49},"value":"","parent":null,"children":[{"krate":0,"index":5551},{"krate":0,"index":5552}],"docs":"","sig":null,"attributes":[]},{"id":358,"kind":"Direct","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\try_stream\\into_async_read.rs","byte_start":416878,"byte_end":416891,"line_start":23,"line_end":23,"column_start":20,"column_end":33},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":359,"kind":"Inherent","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\try_stream\\into_async_read.rs","byte_start":417107,"byte_end":417120,"line_start":37,"line_end":37,"column_start":10,"column_end":23},"value":"","parent":null,"children":[{"krate":0,"index":5601}],"docs":"","sig":null,"attributes":[]},{"id":360,"kind":"Direct","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\try_stream\\into_async_read.rs","byte_start":417332,"byte_end":417345,"line_start":47,"line_end":47,"column_start":24,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":5604}],"docs":"","sig":null,"attributes":[]},{"id":361,"kind":"Direct","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\try_stream\\into_async_read.rs","byte_start":418966,"byte_end":418979,"line_start":95,"line_end":95,"column_start":25,"column_end":38},"value":"","parent":null,"children":[{"krate":0,"index":5607},{"krate":0,"index":5608},{"krate":0,"index":5609}],"docs":"","sig":null,"attributes":[]},{"id":362,"kind":"Direct","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\try_stream\\into_async_read.rs","byte_start":419586,"byte_end":419599,"line_start":117,"line_end":117,"column_start":27,"column_end":40},"value":"","parent":null,"children":[{"krate":0,"index":5612},{"krate":0,"index":5613}],"docs":"","sig":null,"attributes":[]},{"id":363,"kind":"Direct","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\try_stream\\mod.rs","byte_start":334111,"byte_end":334112,"line_start":154,"line_end":154,"column_start":46,"column_end":47},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":364,"kind":"Direct","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\iter.rs","byte_start":421635,"byte_end":421639,"line_start":13,"line_end":13,"column_start":19,"column_end":23},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":365,"kind":"Direct","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\iter.rs","byte_start":422261,"byte_end":422265,"line_start":36,"line_end":36,"column_start":20,"column_end":24},"value":"","parent":null,"children":[{"krate":0,"index":5780},{"krate":0,"index":5781},{"krate":0,"index":5782}],"docs":"","sig":null,"attributes":[]},{"id":366,"kind":"Direct","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\repeat.rs","byte_start":423456,"byte_end":423462,"line_start":34,"line_end":34,"column_start":19,"column_end":25},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":367,"kind":"Direct","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\repeat.rs","byte_start":423489,"byte_end":423495,"line_start":36,"line_end":36,"column_start":20,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":5817},{"krate":0,"index":5818},{"krate":0,"index":5819}],"docs":"","sig":null,"attributes":[]},{"id":368,"kind":"Direct","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\repeat.rs","byte_start":423803,"byte_end":423809,"line_start":51,"line_end":51,"column_start":25,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":5822}],"docs":"","sig":null,"attributes":[]},{"id":369,"kind":"Direct","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\repeat_with.rs","byte_start":424406,"byte_end":424416,"line_start":17,"line_end":17,"column_start":36,"column_end":46},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":370,"kind":"Direct","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\repeat_with.rs","byte_start":424460,"byte_end":424470,"line_start":19,"line_end":19,"column_start":37,"column_end":47},"value":"","parent":null,"children":[{"krate":0,"index":5857},{"krate":0,"index":5858},{"krate":0,"index":5859}],"docs":"","sig":null,"attributes":[]},{"id":371,"kind":"Direct","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\repeat_with.rs","byte_start":424784,"byte_end":424794,"line_start":31,"line_end":31,"column_start":42,"column_end":52},"value":"","parent":null,"children":[{"krate":0,"index":5863}],"docs":"","sig":null,"attributes":[]},{"id":372,"kind":"Direct","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\empty.rs","byte_start":427314,"byte_end":427319,"line_start":21,"line_end":21,"column_start":19,"column_end":24},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":373,"kind":"Direct","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\empty.rs","byte_start":427351,"byte_end":427356,"line_start":23,"line_end":23,"column_start":25,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":5904}],"docs":"","sig":null,"attributes":[]},{"id":374,"kind":"Direct","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\empty.rs","byte_start":427441,"byte_end":427446,"line_start":29,"line_end":29,"column_start":20,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":5907},{"krate":0,"index":5908},{"krate":0,"index":5909}],"docs":"","sig":null,"attributes":[]},{"id":375,"kind":"Direct","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\empty.rs","byte_start":427695,"byte_end":427700,"line_start":41,"line_end":41,"column_start":19,"column_end":24},"value":"","parent":null,"children":[{"krate":0,"index":5912}],"docs":"","sig":null,"attributes":[]},{"id":376,"kind":"Inherent","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\once.rs","byte_start":428639,"byte_end":428643,"line_start":34,"line_end":34,"column_start":11,"column_end":15},"value":"","parent":null,"children":[{"krate":0,"index":5954}],"docs":"","sig":null,"attributes":[]},{"id":377,"kind":"Direct","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\once.rs","byte_start":428772,"byte_end":428776,"line_start":40,"line_end":40,"column_start":30,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":5957},{"krate":0,"index":5958},{"krate":0,"index":5959}],"docs":"","sig":null,"attributes":[]},{"id":378,"kind":"Direct","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\once.rs","byte_start":429381,"byte_end":429385,"line_start":63,"line_end":63,"column_start":35,"column_end":39},"value":"","parent":null,"children":[{"krate":0,"index":5962}],"docs":"","sig":null,"attributes":[]},{"id":379,"kind":"Direct","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\pending.rs","byte_start":430044,"byte_end":430051,"line_start":21,"line_end":21,"column_start":19,"column_end":26},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":380,"kind":"Direct","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\pending.rs","byte_start":430083,"byte_end":430090,"line_start":23,"line_end":23,"column_start":25,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":6000}],"docs":"","sig":null,"attributes":[]},{"id":381,"kind":"Direct","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\pending.rs","byte_start":430175,"byte_end":430182,"line_start":29,"line_end":29,"column_start":20,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":6003},{"krate":0,"index":6004},{"krate":0,"index":6005}],"docs":"","sig":null,"attributes":[]},{"id":382,"kind":"Direct","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\pending.rs","byte_start":430427,"byte_end":430434,"line_start":41,"line_end":41,"column_start":19,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":6008}],"docs":"","sig":null,"attributes":[]},{"id":383,"kind":"Direct","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\poll_fn.rs","byte_start":430821,"byte_end":430827,"line_start":15,"line_end":15,"column_start":19,"column_end":25},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":384,"kind":"Direct","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\poll_fn.rs","byte_start":430858,"byte_end":430864,"line_start":17,"line_end":17,"column_start":24,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":6043}],"docs":"","sig":null,"attributes":[]},{"id":385,"kind":"Direct","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\poll_fn.rs","byte_start":431629,"byte_end":431635,"line_start":48,"line_end":48,"column_start":23,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":6050},{"krate":0,"index":6051}],"docs":"","sig":null,"attributes":[]},{"id":386,"kind":"Direct","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\poll_immediate.rs","byte_start":432331,"byte_end":432344,"line_start":18,"line_end":18,"column_start":23,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":6079},{"krate":0,"index":6080},{"krate":0,"index":6081}],"docs":"","sig":null,"attributes":[]},{"id":387,"kind":"Direct","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\poll_immediate.rs","byte_start":433257,"byte_end":433270,"line_start":47,"line_end":47,"column_start":40,"column_end":53},"value":"","parent":null,"children":[{"krate":0,"index":6084}],"docs":"","sig":null,"attributes":[]},{"id":388,"kind":"Inherent","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\select.rs","byte_start":436157,"byte_end":436163,"line_start":61,"line_end":61,"column_start":16,"column_end":22},"value":"","parent":null,"children":[{"krate":0,"index":6135},{"krate":0,"index":6136},{"krate":0,"index":6137},{"krate":0,"index":6138}],"docs":"","sig":null,"attributes":[]},{"id":389,"kind":"Direct","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\select.rs","byte_start":437467,"byte_end":437473,"line_start":96,"line_end":96,"column_start":32,"column_end":38},"value":"","parent":null,"children":[{"krate":0,"index":6142}],"docs":"","sig":null,"attributes":[]},{"id":390,"kind":"Direct","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\select.rs","byte_start":437652,"byte_end":437658,"line_start":106,"line_end":106,"column_start":27,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":6146},{"krate":0,"index":6147}],"docs":"","sig":null,"attributes":[]},{"id":391,"kind":"Inherent","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\select_with_strategy.rs","byte_start":438371,"byte_end":438379,"line_start":17,"line_end":17,"column_start":6,"column_end":14},"value":"","parent":null,"children":[{"krate":0,"index":6191}],"docs":"","sig":null,"attributes":[]},{"id":392,"kind":"Direct","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\select_with_strategy.rs","byte_start":438676,"byte_end":438684,"line_start":31,"line_end":31,"column_start":18,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":6193}],"docs":"","sig":null,"attributes":[]},{"id":393,"kind":"Inherent","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\select_with_strategy.rs","byte_start":441711,"byte_end":441729,"line_start":130,"line_end":130,"column_start":29,"column_end":47},"value":"","parent":null,"children":[{"krate":0,"index":6204},{"krate":0,"index":6205},{"krate":0,"index":6206},{"krate":0,"index":6207}],"docs":"","sig":null,"attributes":[]},{"id":394,"kind":"Direct","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\select_with_strategy.rs","byte_start":443178,"byte_end":443196,"line_start":165,"line_end":165,"column_start":45,"column_end":63},"value":"","parent":null,"children":[{"krate":0,"index":6213}],"docs":"","sig":null,"attributes":[]},{"id":395,"kind":"Direct","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\select_with_strategy.rs","byte_start":443476,"byte_end":443494,"line_start":176,"line_end":176,"column_start":40,"column_end":58},"value":"","parent":null,"children":[{"krate":0,"index":6219},{"krate":0,"index":6220}],"docs":"","sig":null,"attributes":[]},{"id":396,"kind":"Direct","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\select_with_strategy.rs","byte_start":444606,"byte_end":444624,"line_start":216,"line_end":216,"column_start":44,"column_end":62},"value":"","parent":null,"children":[{"krate":0,"index":6229}],"docs":"","sig":null,"attributes":[]},{"id":397,"kind":"Direct","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\unfold.rs","byte_start":447195,"byte_end":447201,"line_start":68,"line_end":68,"column_start":32,"column_end":38},"value":"","parent":null,"children":[{"krate":0,"index":6285}],"docs":"","sig":null,"attributes":[]},{"id":398,"kind":"Direct","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\unfold.rs","byte_start":447441,"byte_end":447447,"line_start":78,"line_end":78,"column_start":39,"column_end":45},"value":"","parent":null,"children":[{"krate":0,"index":6291}],"docs":"","sig":null,"attributes":[]},{"id":399,"kind":"Direct","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\unfold.rs","byte_start":447727,"byte_end":447733,"line_start":92,"line_end":92,"column_start":34,"column_end":40},"value":"","parent":null,"children":[{"krate":0,"index":6297},{"krate":0,"index":6298}],"docs":"","sig":null,"attributes":[]},{"id":400,"kind":"Direct","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\futures_ordered.rs","byte_start":449281,"byte_end":449293,"line_start":26,"line_end":26,"column_start":23,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":6362}],"docs":"","sig":null,"attributes":[]},{"id":401,"kind":"Direct","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\futures_ordered.rs","byte_start":449398,"byte_end":449410,"line_start":32,"line_end":32,"column_start":16,"column_end":28},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":402,"kind":"Direct","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\futures_ordered.rs","byte_start":449441,"byte_end":449453,"line_start":34,"line_end":34,"column_start":24,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":6367}],"docs":"","sig":null,"attributes":[]},{"id":403,"kind":"Direct","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\futures_ordered.rs","byte_start":449576,"byte_end":449588,"line_start":40,"line_end":40,"column_start":17,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":6370}],"docs":"","sig":null,"attributes":[]},{"id":404,"kind":"Direct","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\futures_ordered.rs","byte_start":449769,"byte_end":449781,"line_start":47,"line_end":47,"column_start":20,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":6373},{"krate":0,"index":6374}],"docs":"","sig":null,"attributes":[]},{"id":405,"kind":"Direct","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\futures_ordered.rs","byte_start":452363,"byte_end":452377,"line_start":102,"line_end":102,"column_start":27,"column_end":41},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":406,"kind":"Inherent","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\futures_ordered.rs","byte_start":452403,"byte_end":452417,"line_start":104,"line_end":104,"column_start":19,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":6386},{"krate":0,"index":6387},{"krate":0,"index":6388},{"krate":0,"index":6389}],"docs":"","sig":null,"attributes":[]},{"id":407,"kind":"Direct","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\futures_ordered.rs","byte_start":453983,"byte_end":453997,"line_start":145,"line_end":145,"column_start":31,"column_end":45},"value":"","parent":null,"children":[{"krate":0,"index":6392}],"docs":"","sig":null,"attributes":[]},{"id":408,"kind":"Direct","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\futures_ordered.rs","byte_start":454090,"byte_end":454104,"line_start":151,"line_end":151,"column_start":30,"column_end":44},"value":"","parent":null,"children":[{"krate":0,"index":6395},{"krate":0,"index":6396},{"krate":0,"index":6397}],"docs":"","sig":null,"attributes":[]},{"id":409,"kind":"Direct","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\futures_ordered.rs","byte_start":455266,"byte_end":455280,"line_start":186,"line_end":186,"column_start":29,"column_end":43},"value":"","parent":null,"children":[{"krate":0,"index":6400}],"docs":"","sig":null,"attributes":[]},{"id":410,"kind":"Direct","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\futures_ordered.rs","byte_start":455446,"byte_end":455460,"line_start":192,"line_end":192,"column_start":41,"column_end":55},"value":"","parent":null,"children":[{"krate":0,"index":6403}],"docs":"","sig":null,"attributes":[]},{"id":411,"kind":"Direct","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\futures_ordered.rs","byte_start":455740,"byte_end":455754,"line_start":205,"line_end":205,"column_start":35,"column_end":49},"value":"","parent":null,"children":[{"krate":0,"index":6408}],"docs":"","sig":null,"attributes":[]},{"id":412,"kind":"Direct","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\futures_ordered.rs","byte_start":455924,"byte_end":455938,"line_start":211,"line_end":211,"column_start":35,"column_end":49},"value":"","parent":null,"children":[{"krate":0,"index":6411}],"docs":"","sig":null,"attributes":[]},{"id":413,"kind":"Direct","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\futures_unordered\\abort.rs","byte_start":482903,"byte_end":482914,"line_start":4,"line_end":4,"column_start":19,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":6513}],"docs":"","sig":null,"attributes":[]},{"id":414,"kind":"Direct","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\futures_unordered\\iter.rs","byte_start":484273,"byte_end":484281,"line_start":39,"line_end":39,"column_start":31,"column_end":39},"value":"","parent":null,"children":[{"krate":0,"index":6532},{"krate":0,"index":6533},{"krate":0,"index":6534}],"docs":"","sig":null,"attributes":[]},{"id":415,"kind":"Direct","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\futures_unordered\\iter.rs","byte_start":485355,"byte_end":485363,"line_start":71,"line_end":71,"column_start":40,"column_end":48},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":416,"kind":"Direct","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\futures_unordered\\iter.rs","byte_start":485400,"byte_end":485410,"line_start":73,"line_end":73,"column_start":28,"column_end":38},"value":"","parent":null,"children":[{"krate":0,"index":6540},{"krate":0,"index":6541},{"krate":0,"index":6542}],"docs":"","sig":null,"attributes":[]},{"id":417,"kind":"Direct","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\futures_unordered\\iter.rs","byte_start":486262,"byte_end":486272,"line_start":100,"line_end":100,"column_start":33,"column_end":43},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":418,"kind":"Direct","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\futures_unordered\\iter.rs","byte_start":486320,"byte_end":486327,"line_start":102,"line_end":102,"column_start":35,"column_end":42},"value":"","parent":null,"children":[{"krate":0,"index":6548},{"krate":0,"index":6549},{"krate":0,"index":6550}],"docs":"","sig":null,"attributes":[]},{"id":419,"kind":"Direct","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\futures_unordered\\iter.rs","byte_start":486590,"byte_end":486597,"line_start":114,"line_end":114,"column_start":40,"column_end":47},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":420,"kind":"Direct","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\futures_unordered\\iter.rs","byte_start":486638,"byte_end":486648,"line_start":116,"line_end":116,"column_start":28,"column_end":38},"value":"","parent":null,"children":[{"krate":0,"index":6556},{"krate":0,"index":6557},{"krate":0,"index":6558}],"docs":"","sig":null,"attributes":[]},{"id":421,"kind":"Direct","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\futures_unordered\\iter.rs","byte_start":487517,"byte_end":487527,"line_start":143,"line_end":143,"column_start":33,"column_end":43},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":422,"kind":"Direct","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\futures_unordered\\iter.rs","byte_start":487575,"byte_end":487579,"line_start":145,"line_end":145,"column_start":35,"column_end":39},"value":"","parent":null,"children":[{"krate":0,"index":6564},{"krate":0,"index":6565},{"krate":0,"index":6566}],"docs":"","sig":null,"attributes":[]},{"id":423,"kind":"Direct","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\futures_unordered\\iter.rs","byte_start":487838,"byte_end":487842,"line_start":157,"line_end":157,"column_start":40,"column_end":44},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":424,"kind":"Direct","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\futures_unordered\\iter.rs","byte_start":488011,"byte_end":488021,"line_start":161,"line_end":161,"column_start":33,"column_end":43},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":425,"kind":"Direct","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\futures_unordered\\iter.rs","byte_start":488066,"byte_end":488076,"line_start":162,"line_end":162,"column_start":33,"column_end":43},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":426,"kind":"Direct","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\futures_unordered\\iter.rs","byte_start":488122,"byte_end":488132,"line_start":164,"line_end":164,"column_start":33,"column_end":43},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":427,"kind":"Direct","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\futures_unordered\\iter.rs","byte_start":488177,"byte_end":488187,"line_start":165,"line_end":165,"column_start":33,"column_end":43},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":428,"kind":"Direct","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\futures_unordered\\iter.rs","byte_start":488241,"byte_end":488249,"line_start":167,"line_end":167,"column_start":41,"column_end":49},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":429,"kind":"Direct","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\futures_unordered\\iter.rs","byte_start":488298,"byte_end":488306,"line_start":168,"line_end":168,"column_start":41,"column_end":49},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":430,"kind":"Direct","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\futures_unordered\\task.rs","byte_start":489991,"byte_end":489995,"line_start":46,"line_end":46,"column_start":27,"column_end":31},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":431,"kind":"Direct","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\futures_unordered\\task.rs","byte_start":490030,"byte_end":490034,"line_start":47,"line_end":47,"column_start":27,"column_end":31},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":432,"kind":"Direct","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\futures_unordered\\task.rs","byte_start":490066,"byte_end":490070,"line_start":49,"line_end":49,"column_start":23,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":6657}],"docs":"","sig":null,"attributes":[]},{"id":433,"kind":"Inherent","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\futures_unordered\\task.rs","byte_start":491203,"byte_end":491207,"line_start":78,"line_end":78,"column_start":11,"column_end":15},"value":"","parent":null,"children":[{"krate":0,"index":6660},{"krate":0,"index":6661}],"docs":"","sig":null,"attributes":[]},{"id":434,"kind":"Direct","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\futures_unordered\\task.rs","byte_start":492207,"byte_end":492211,"line_start":109,"line_end":109,"column_start":20,"column_end":24},"value":"","parent":null,"children":[{"krate":0,"index":6664}],"docs":"","sig":null,"attributes":[]},{"id":435,"kind":"Inherent","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\futures_unordered\\ready_to_run_queue.rs","byte_start":493661,"byte_end":493676,"line_start":29,"line_end":29,"column_start":11,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":6720},{"krate":0,"index":6721},{"krate":0,"index":6722},{"krate":0,"index":6723}],"docs":"","sig":null,"attributes":[]},{"id":436,"kind":"Direct","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\futures_unordered\\ready_to_run_queue.rs","byte_start":496344,"byte_end":496359,"line_start":111,"line_end":111,"column_start":20,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":6726}],"docs":"","sig":null,"attributes":[]},{"id":437,"kind":"Direct","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\futures_unordered\\mod.rs","byte_start":458325,"byte_end":458341,"line_start":60,"line_end":60,"column_start":33,"column_end":49},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":438,"kind":"Direct","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\futures_unordered\\mod.rs","byte_start":458382,"byte_end":458398,"line_start":61,"line_end":61,"column_start":33,"column_end":49},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":439,"kind":"Direct","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\futures_unordered\\mod.rs","byte_start":458427,"byte_end":458443,"line_start":62,"line_end":62,"column_start":21,"column_end":37},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":440,"kind":"Direct","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\futures_unordered\\mod.rs","byte_start":458468,"byte_end":458484,"line_start":64,"line_end":64,"column_start":16,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":6746}],"docs":"","sig":null,"attributes":[]},{"id":441,"kind":"Direct","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\futures_unordered\\mod.rs","byte_start":458669,"byte_end":458685,"line_start":71,"line_end":71,"column_start":21,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":6748}],"docs":"","sig":null,"attributes":[]},{"id":442,"kind":"Direct","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\futures_unordered\\mod.rs","byte_start":460392,"byte_end":460408,"line_start":103,"line_end":103,"column_start":23,"column_end":39},"value":"","parent":null,"children":[{"krate":0,"index":6751}],"docs":"","sig":null,"attributes":[]},{"id":443,"kind":"Inherent","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\futures_unordered\\mod.rs","byte_start":460482,"byte_end":460498,"line_start":109,"line_end":109,"column_start":11,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":6754},{"krate":0,"index":6755},{"krate":0,"index":6756},{"krate":0,"index":6757},{"krate":0,"index":6758},{"krate":0,"index":6759},{"krate":0,"index":6760},{"krate":0,"index":6761},{"krate":0,"index":6762},{"krate":0,"index":6763},{"krate":0,"index":6764},{"krate":0,"index":6765},{"krate":0,"index":6766}],"docs":"","sig":null,"attributes":[]},{"id":444,"kind":"Direct","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\futures_unordered\\mod.rs","byte_start":472107,"byte_end":472123,"line_start":384,"line_end":384,"column_start":30,"column_end":46},"value":"","parent":null,"children":[{"krate":0,"index":6769},{"krate":0,"index":6770},{"krate":0,"index":6779}],"docs":"","sig":null,"attributes":[]},{"id":445,"kind":"Direct","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\futures_unordered\\mod.rs","byte_start":476499,"byte_end":476503,"line_start":482,"line_end":482,"column_start":32,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":6778}],"docs":"","sig":null,"attributes":[]},{"id":446,"kind":"Direct","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\futures_unordered\\mod.rs","byte_start":479312,"byte_end":479328,"line_start":548,"line_end":548,"column_start":21,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":6782}],"docs":"","sig":null,"attributes":[]},{"id":447,"kind":"Inherent","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\futures_unordered\\mod.rs","byte_start":479466,"byte_end":479482,"line_start":554,"line_end":554,"column_start":11,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":6785},{"krate":0,"index":6786}],"docs":"","sig":null,"attributes":[]},{"id":448,"kind":"Direct","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\futures_unordered\\mod.rs","byte_start":480053,"byte_end":480069,"line_start":574,"line_end":574,"column_start":20,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":6789}],"docs":"","sig":null,"attributes":[]},{"id":449,"kind":"Direct","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\futures_unordered\\mod.rs","byte_start":481719,"byte_end":481735,"line_start":615,"line_end":615,"column_start":35,"column_end":51},"value":"","parent":null,"children":[{"krate":0,"index":6804},{"krate":0,"index":6805},{"krate":0,"index":6806}],"docs":"","sig":null,"attributes":[]},{"id":450,"kind":"Direct","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\futures_unordered\\mod.rs","byte_start":482205,"byte_end":482221,"line_start":629,"line_end":629,"column_start":33,"column_end":49},"value":"","parent":null,"children":[{"krate":0,"index":6809}],"docs":"","sig":null,"attributes":[]},{"id":451,"kind":"Direct","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\futures_unordered\\mod.rs","byte_start":482497,"byte_end":482513,"line_start":642,"line_end":642,"column_start":35,"column_end":51},"value":"","parent":null,"children":[{"krate":0,"index":6814}],"docs":"","sig":null,"attributes":[]},{"id":452,"kind":"Direct","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\futures_unordered\\mod.rs","byte_start":482635,"byte_end":482651,"line_start":648,"line_end":648,"column_start":27,"column_end":43},"value":"","parent":null,"children":[{"krate":0,"index":6817}],"docs":"","sig":null,"attributes":[]},{"id":453,"kind":"Direct","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\select_all.rs","byte_start":497954,"byte_end":497963,"line_start":36,"line_end":36,"column_start":27,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":6874}],"docs":"","sig":null,"attributes":[]},{"id":454,"kind":"Inherent","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\select_all.rs","byte_start":498108,"byte_end":498117,"line_start":42,"line_end":42,"column_start":26,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":6877},{"krate":0,"index":6878},{"krate":0,"index":6879},{"krate":0,"index":6880},{"krate":0,"index":6881},{"krate":0,"index":6882},{"krate":0,"index":6883}],"docs":"","sig":null,"attributes":[]},{"id":455,"kind":"Direct","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\select_all.rs","byte_start":499590,"byte_end":499599,"line_start":89,"line_end":89,"column_start":38,"column_end":47},"value":"","parent":null,"children":[{"krate":0,"index":6886}],"docs":"","sig":null,"attributes":[]},{"id":456,"kind":"Direct","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\select_all.rs","byte_start":499698,"byte_end":499707,"line_start":95,"line_end":95,"column_start":37,"column_end":46},"value":"","parent":null,"children":[{"krate":0,"index":6889},{"krate":0,"index":6890}],"docs":"","sig":null,"attributes":[]},{"id":457,"kind":"Direct","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\select_all.rs","byte_start":500491,"byte_end":500500,"line_start":117,"line_end":117,"column_start":42,"column_end":51},"value":"","parent":null,"children":[{"krate":0,"index":6893}],"docs":"","sig":null,"attributes":[]},{"id":458,"kind":"Direct","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\select_all.rs","byte_start":501518,"byte_end":501527,"line_start":149,"line_end":149,"column_start":47,"column_end":56},"value":"","parent":null,"children":[{"krate":0,"index":6898}],"docs":"","sig":null,"attributes":[]},{"id":459,"kind":"Direct","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\select_all.rs","byte_start":501672,"byte_end":501681,"line_start":155,"line_end":155,"column_start":41,"column_end":50},"value":"","parent":null,"children":[{"krate":0,"index":6902}],"docs":"","sig":null,"attributes":[]},{"id":460,"kind":"Direct","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\select_all.rs","byte_start":501864,"byte_end":501873,"line_start":163,"line_end":163,"column_start":43,"column_end":52},"value":"","parent":null,"children":[{"krate":0,"index":6906},{"krate":0,"index":6907},{"krate":0,"index":6908}],"docs":"","sig":null,"attributes":[]},{"id":461,"kind":"Direct","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\select_all.rs","byte_start":502956,"byte_end":502960,"line_start":202,"line_end":202,"column_start":43,"column_end":47},"value":"","parent":null,"children":[{"krate":0,"index":6924},{"krate":0,"index":6925},{"krate":0,"index":6926}],"docs":"","sig":null,"attributes":[]},{"id":462,"kind":"Direct","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\select_all.rs","byte_start":503393,"byte_end":503397,"line_start":218,"line_end":218,"column_start":48,"column_end":52},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":463,"kind":"Direct","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\select_all.rs","byte_start":503452,"byte_end":503459,"line_start":220,"line_end":220,"column_start":43,"column_end":50},"value":"","parent":null,"children":[{"krate":0,"index":6932},{"krate":0,"index":6933},{"krate":0,"index":6934}],"docs":"","sig":null,"attributes":[]},{"id":464,"kind":"Direct","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\select_all.rs","byte_start":503896,"byte_end":503903,"line_start":236,"line_end":236,"column_start":48,"column_end":55},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":465,"kind":"Direct","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\select_all.rs","byte_start":503954,"byte_end":503962,"line_start":238,"line_end":238,"column_start":39,"column_end":47},"value":"","parent":null,"children":[{"krate":0,"index":6939},{"krate":0,"index":6940},{"krate":0,"index":6941}],"docs":"","sig":null,"attributes":[]},{"id":466,"kind":"Direct","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\select_all.rs","byte_start":504390,"byte_end":504398,"line_start":254,"line_end":254,"column_start":48,"column_end":56},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":467,"kind":"Direct","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\sink\\close.rs","byte_start":516742,"byte_end":516747,"line_start":15,"line_end":15,"column_start":42,"column_end":47},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":468,"kind":"Inherent","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\sink\\close.rs","byte_start":516941,"byte_end":516946,"line_start":20,"line_end":20,"column_start":49,"column_end":54},"value":"","parent":null,"children":[{"krate":0,"index":7057}],"docs":"","sig":null,"attributes":[]},{"id":469,"kind":"Direct","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\sink\\close.rs","byte_start":517122,"byte_end":517127,"line_start":26,"line_end":26,"column_start":56,"column_end":61},"value":"","parent":null,"children":[{"krate":0,"index":7061},{"krate":0,"index":7062}],"docs":"","sig":null,"attributes":[]},{"id":470,"kind":"Direct","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\sink\\drain.rs","byte_start":518117,"byte_end":518122,"line_start":33,"line_end":33,"column_start":19,"column_end":24},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":471,"kind":"Direct","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\sink\\drain.rs","byte_start":518150,"byte_end":518155,"line_start":35,"line_end":35,"column_start":21,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":7095},{"krate":0,"index":7096},{"krate":0,"index":7097},{"krate":0,"index":7098},{"krate":0,"index":7099}],"docs":"","sig":null,"attributes":[]},{"id":472,"kind":"Inherent","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\sink\\fanout.rs","byte_start":519316,"byte_end":519322,"line_start":21,"line_end":21,"column_start":16,"column_end":22},"value":"","parent":null,"children":[{"krate":0,"index":7137},{"krate":0,"index":7138},{"krate":0,"index":7139},{"krate":0,"index":7140},{"krate":0,"index":7141}],"docs":"","sig":null,"attributes":[]},{"id":473,"kind":"Direct","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\sink\\fanout.rs","byte_start":520290,"byte_end":520296,"line_start":51,"line_end":51,"column_start":40,"column_end":46},"value":"","parent":null,"children":[{"krate":0,"index":7145}],"docs":"","sig":null,"attributes":[]},{"id":474,"kind":"Direct","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\sink\\fanout.rs","byte_start":520508,"byte_end":520514,"line_start":57,"line_end":57,"column_start":37,"column_end":43},"value":"","parent":null,"children":[{"krate":0,"index":7150},{"krate":0,"index":7151},{"krate":0,"index":7152},{"krate":0,"index":7153},{"krate":0,"index":7154}],"docs":"","sig":null,"attributes":[]},{"id":475,"kind":"Direct","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\sink\\feed.rs","byte_start":522593,"byte_end":522597,"line_start":16,"line_end":16,"column_start":42,"column_end":46},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":476,"kind":"Inherent","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\sink\\feed.rs","byte_start":522664,"byte_end":522668,"line_start":18,"line_end":18,"column_start":49,"column_end":53},"value":"","parent":null,"children":[{"krate":0,"index":7185},{"krate":0,"index":7186},{"krate":0,"index":7187}],"docs":"","sig":null,"attributes":[]},{"id":477,"kind":"Direct","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\sink\\feed.rs","byte_start":523032,"byte_end":523036,"line_start":32,"line_end":32,"column_start":56,"column_end":60},"value":"","parent":null,"children":[{"krate":0,"index":7191},{"krate":0,"index":7192}],"docs":"","sig":null,"attributes":[]},{"id":478,"kind":"Direct","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\sink\\flush.rs","byte_start":523938,"byte_end":523943,"line_start":16,"line_end":16,"column_start":42,"column_end":47},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":479,"kind":"Inherent","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\sink\\flush.rs","byte_start":524294,"byte_end":524299,"line_start":24,"line_end":24,"column_start":49,"column_end":54},"value":"","parent":null,"children":[{"krate":0,"index":7223}],"docs":"","sig":null,"attributes":[]},{"id":480,"kind":"Direct","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\sink\\flush.rs","byte_start":524475,"byte_end":524480,"line_start":30,"line_end":30,"column_start":56,"column_end":61},"value":"","parent":null,"children":[{"krate":0,"index":7227},{"krate":0,"index":7228}],"docs":"","sig":null,"attributes":[]},{"id":481,"kind":"Inherent","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\sink\\err_into.rs","byte_start":525140,"byte_end":525151,"line_start":16,"line_end":16,"column_start":19,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":7257},{"krate":0,"index":17057},{"krate":0,"index":17058},{"krate":0,"index":17059},{"krate":0,"index":17060}],"docs":"","sig":null,"attributes":[]},{"id":482,"kind":"Direct","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\sink\\err_into.rs","byte_start":525408,"byte_end":525419,"line_start":28,"line_end":28,"column_start":34,"column_end":45},"value":"","parent":null,"children":[{"krate":0,"index":7262},{"krate":0,"index":17061},{"krate":0,"index":17062},{"krate":0,"index":17063},{"krate":0,"index":17064}],"docs":"","sig":null,"attributes":[]},{"id":483,"kind":"Direct","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\sink\\err_into.rs","byte_start":525623,"byte_end":525634,"line_start":39,"line_end":39,"column_start":29,"column_end":40},"value":"","parent":null,"children":[{"krate":0,"index":7267},{"krate":0,"index":17065},{"krate":0,"index":17066}],"docs":"","sig":null,"attributes":[]},{"id":484,"kind":"Direct","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\sink\\err_into.rs","byte_start":525796,"byte_end":525807,"line_start":49,"line_end":49,"column_start":34,"column_end":45},"value":"","parent":null,"children":[{"krate":0,"index":7272}],"docs":"","sig":null,"attributes":[]},{"id":485,"kind":"Inherent","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\sink\\map_err.rs","byte_start":526416,"byte_end":526426,"line_start":18,"line_end":18,"column_start":13,"column_end":23},"value":"","parent":null,"children":[{"krate":0,"index":7303},{"krate":0,"index":17120},{"krate":0,"index":17121},{"krate":0,"index":17122},{"krate":0,"index":17123},{"krate":0,"index":7304}],"docs":"","sig":null,"attributes":[]},{"id":486,"kind":"Direct","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\sink\\map_err.rs","byte_start":526729,"byte_end":526739,"line_start":30,"line_end":30,"column_start":37,"column_end":47},"value":"","parent":null,"children":[{"krate":0,"index":7310},{"krate":0,"index":7311},{"krate":0,"index":7313},{"krate":0,"index":7315},{"krate":0,"index":7317}],"docs":"","sig":null,"attributes":[]},{"id":487,"kind":"Direct","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\sink\\map_err.rs","byte_start":527695,"byte_end":527705,"line_start":55,"line_end":55,"column_start":31,"column_end":41},"value":"","parent":null,"children":[{"krate":0,"index":7322},{"krate":0,"index":17124},{"krate":0,"index":17125}],"docs":"","sig":null,"attributes":[]},{"id":488,"kind":"Direct","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\sink\\map_err.rs","byte_start":527811,"byte_end":527821,"line_start":61,"line_end":61,"column_start":41,"column_end":51},"value":"","parent":null,"children":[{"krate":0,"index":7326}],"docs":"","sig":null,"attributes":[]},{"id":489,"kind":"Direct","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\sink\\send.rs","byte_start":528372,"byte_end":528376,"line_start":16,"line_end":16,"column_start":42,"column_end":46},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":490,"kind":"Inherent","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\sink\\send.rs","byte_start":528443,"byte_end":528447,"line_start":18,"line_end":18,"column_start":49,"column_end":53},"value":"","parent":null,"children":[{"krate":0,"index":7360}],"docs":"","sig":null,"attributes":[]},{"id":491,"kind":"Direct","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\sink\\send.rs","byte_start":528635,"byte_end":528639,"line_start":24,"line_end":24,"column_start":56,"column_end":60},"value":"","parent":null,"children":[{"krate":0,"index":7364},{"krate":0,"index":7365}],"docs":"","sig":null,"attributes":[]},{"id":492,"kind":"Direct","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\sink\\send_all.rs","byte_start":529845,"byte_end":529852,"line_start":23,"line_end":23,"column_start":29,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":7419}],"docs":"","sig":null,"attributes":[]},{"id":493,"kind":"Direct","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\sink\\send_all.rs","byte_start":530291,"byte_end":530298,"line_start":39,"line_end":39,"column_start":24,"column_end":31},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":494,"kind":"Inherent","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\sink\\send_all.rs","byte_start":530410,"byte_end":530417,"line_start":46,"line_end":46,"column_start":29,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":7429},{"krate":0,"index":7430}],"docs":"","sig":null,"attributes":[]},{"id":495,"kind":"Direct","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\sink\\send_all.rs","byte_start":531193,"byte_end":531200,"line_start":71,"line_end":71,"column_start":36,"column_end":43},"value":"","parent":null,"children":[{"krate":0,"index":7436},{"krate":0,"index":7437}],"docs":"","sig":null,"attributes":[]},{"id":496,"kind":"Direct","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\sink\\unfold.rs","byte_start":533499,"byte_end":533505,"line_start":47,"line_end":47,"column_start":39,"column_end":45},"value":"","parent":null,"children":[{"krate":0,"index":7483},{"krate":0,"index":7484},{"krate":0,"index":7485},{"krate":0,"index":7486},{"krate":0,"index":7487}],"docs":"","sig":null,"attributes":[]},{"id":497,"kind":"Direct","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\sink\\with.rs","byte_start":535422,"byte_end":535426,"line_start":24,"line_end":24,"column_start":42,"column_end":46},"value":"","parent":null,"children":[{"krate":0,"index":7533}],"docs":"","sig":null,"attributes":[]},{"id":498,"kind":"Inherent","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\sink\\with.rs","byte_start":535689,"byte_end":535693,"line_start":34,"line_end":34,"column_start":27,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":7540}],"docs":"","sig":null,"attributes":[]},{"id":499,"kind":"Direct","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\sink\\with.rs","byte_start":536030,"byte_end":536034,"line_start":49,"line_end":49,"column_start":37,"column_end":41},"value":"","parent":null,"children":[{"krate":0,"index":7548}],"docs":"","sig":null,"attributes":[]},{"id":500,"kind":"Direct","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\sink\\with.rs","byte_start":536405,"byte_end":536409,"line_start":66,"line_end":66,"column_start":37,"column_end":41},"value":"","parent":null,"children":[{"krate":0,"index":7555},{"krate":0,"index":17271},{"krate":0,"index":17272}],"docs":"","sig":null,"attributes":[]},{"id":501,"kind":"Inherent","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\sink\\with.rs","byte_start":536593,"byte_end":536597,"line_start":77,"line_end":77,"column_start":30,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":17273},{"krate":0,"index":17274},{"krate":0,"index":17275},{"krate":0,"index":17276},{"krate":0,"index":7563}],"docs":"","sig":null,"attributes":[]},{"id":502,"kind":"Direct","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\sink\\with.rs","byte_start":537272,"byte_end":537276,"line_start":100,"line_end":100,"column_start":42,"column_end":46},"value":"","parent":null,"children":[{"krate":0,"index":7571},{"krate":0,"index":7572},{"krate":0,"index":7573},{"krate":0,"index":7574},{"krate":0,"index":7575}],"docs":"","sig":null,"attributes":[]},{"id":503,"kind":"Direct","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\sink\\with_flat_map.rs","byte_start":538995,"byte_end":539006,"line_start":24,"line_end":24,"column_start":41,"column_end":52},"value":"","parent":null,"children":[{"krate":0,"index":7618}],"docs":"","sig":null,"attributes":[]},{"id":504,"kind":"Inherent","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\sink\\with_flat_map.rs","byte_start":539379,"byte_end":539390,"line_start":39,"line_end":39,"column_start":26,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":7625},{"krate":0,"index":17358},{"krate":0,"index":17359},{"krate":0,"index":17360},{"krate":0,"index":17361},{"krate":0,"index":7626}],"docs":"","sig":null,"attributes":[]},{"id":505,"kind":"Direct","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\sink\\with_flat_map.rs","byte_start":540677,"byte_end":540688,"line_start":76,"line_end":76,"column_start":36,"column_end":47},"value":"","parent":null,"children":[{"krate":0,"index":7633},{"krate":0,"index":17362},{"krate":0,"index":17363}],"docs":"","sig":null,"attributes":[]},{"id":506,"kind":"Direct","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\sink\\with_flat_map.rs","byte_start":540911,"byte_end":540922,"line_start":87,"line_end":87,"column_start":41,"column_end":52},"value":"","parent":null,"children":[{"krate":0,"index":7640}],"docs":"","sig":null,"attributes":[]},{"id":507,"kind":"Direct","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\sink\\with_flat_map.rs","byte_start":541171,"byte_end":541182,"line_start":98,"line_end":98,"column_start":38,"column_end":49},"value":"","parent":null,"children":[{"krate":0,"index":7647},{"krate":0,"index":7648},{"krate":0,"index":7649},{"krate":0,"index":7650},{"krate":0,"index":7651}],"docs":"","sig":null,"attributes":[]},{"id":508,"kind":"Inherent","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\sink\\buffer.rs","byte_start":542726,"byte_end":542732,"line_start":23,"line_end":23,"column_start":28,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":7688},{"krate":0,"index":17417},{"krate":0,"index":17418},{"krate":0,"index":17419},{"krate":0,"index":17420},{"krate":0,"index":7689}],"docs":"","sig":null,"attributes":[]},{"id":509,"kind":"Direct","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\sink\\buffer.rs","byte_start":543460,"byte_end":543466,"line_start":44,"line_end":44,"column_start":26,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":7693},{"krate":0,"index":7694},{"krate":0,"index":7695}],"docs":"","sig":null,"attributes":[]},{"id":510,"kind":"Direct","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\sink\\buffer.rs","byte_start":543796,"byte_end":543802,"line_start":59,"line_end":59,"column_start":31,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":7699}],"docs":"","sig":null,"attributes":[]},{"id":511,"kind":"Direct","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\sink\\buffer.rs","byte_start":543976,"byte_end":543982,"line_start":68,"line_end":68,"column_start":43,"column_end":49},"value":"","parent":null,"children":[{"krate":0,"index":7703},{"krate":0,"index":7704},{"krate":0,"index":7705},{"krate":0,"index":7706},{"krate":0,"index":7707}],"docs":"","sig":null,"attributes":[]},{"id":512,"kind":"Direct","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\sink\\mod.rs","byte_start":506287,"byte_end":506288,"line_start":61,"line_end":61,"column_start":41,"column_end":42},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":513,"kind":"Direct","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\task\\spawn.rs","byte_start":546716,"byte_end":546718,"line_start":16,"line_end":16,"column_start":31,"column_end":33},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":514,"kind":"Direct","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\task\\spawn.rs","byte_start":546773,"byte_end":546775,"line_start":17,"line_end":17,"column_start":36,"column_end":38},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":515,"kind":"Direct","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\io\\allow_std.rs","byte_start":581169,"byte_end":581179,"line_start":19,"line_end":19,"column_start":19,"column_end":29},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":516,"kind":"Inherent","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\io\\allow_std.rs","byte_start":581617,"byte_end":581627,"line_start":39,"line_end":39,"column_start":9,"column_end":19},"value":"","parent":null,"children":[{"krate":0,"index":7954},{"krate":0,"index":7955},{"krate":0,"index":7956},{"krate":0,"index":7957}],"docs":"","sig":null,"attributes":[]},{"id":517,"kind":"Direct","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\io\\allow_std.rs","byte_start":582138,"byte_end":582148,"line_start":61,"line_end":61,"column_start":23,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":7960},{"krate":0,"index":7961},{"krate":0,"index":7962},{"krate":0,"index":7963},{"krate":0,"index":7964}],"docs":"","sig":null,"attributes":[]},{"id":518,"kind":"Direct","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\io\\allow_std.rs","byte_start":582693,"byte_end":582703,"line_start":82,"line_end":82,"column_start":24,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":7967},{"krate":0,"index":7968},{"krate":0,"index":7969},{"krate":0,"index":7970}],"docs":"","sig":null,"attributes":[]},{"id":519,"kind":"Direct","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\io\\allow_std.rs","byte_start":583495,"byte_end":583505,"line_start":112,"line_end":112,"column_start":22,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":7973},{"krate":0,"index":7974},{"krate":0,"index":7975},{"krate":0,"index":7976},{"krate":0,"index":7977}],"docs":"","sig":null,"attributes":[]},{"id":520,"kind":"Direct","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\io\\allow_std.rs","byte_start":584104,"byte_end":584114,"line_start":133,"line_end":133,"column_start":23,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":7980},{"krate":0,"index":7981}],"docs":"","sig":null,"attributes":[]},{"id":521,"kind":"Direct","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\io\\allow_std.rs","byte_start":584618,"byte_end":584628,"line_start":154,"line_end":154,"column_start":22,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":7984}],"docs":"","sig":null,"attributes":[]},{"id":522,"kind":"Direct","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\io\\allow_std.rs","byte_start":584772,"byte_end":584782,"line_start":163,"line_end":163,"column_start":23,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":7987}],"docs":"","sig":null,"attributes":[]},{"id":523,"kind":"Direct","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\io\\allow_std.rs","byte_start":585044,"byte_end":585054,"line_start":176,"line_end":176,"column_start":25,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":7990},{"krate":0,"index":7991}],"docs":"","sig":null,"attributes":[]},{"id":524,"kind":"Direct","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\io\\allow_std.rs","byte_start":585270,"byte_end":585280,"line_start":188,"line_end":188,"column_start":26,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":7994},{"krate":0,"index":7995}],"docs":"","sig":null,"attributes":[]},{"id":525,"kind":"Inherent","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\io\\buf_reader.rs","byte_start":587087,"byte_end":587096,"line_start":40,"line_end":40,"column_start":20,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":8057},{"krate":0,"index":8058},{"krate":0,"index":17499},{"krate":0,"index":17500},{"krate":0,"index":17501},{"krate":0,"index":17502},{"krate":0,"index":8059},{"krate":0,"index":8060}],"docs":"","sig":null,"attributes":[]},{"id":526,"kind":"Inherent","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\io\\buf_reader.rs","byte_start":588239,"byte_end":588248,"line_start":75,"line_end":75,"column_start":32,"column_end":41},"value":"","parent":null,"children":[{"krate":0,"index":8063},{"krate":0,"index":8064}],"docs":"","sig":null,"attributes":[]},{"id":527,"kind":"Direct","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\io\\buf_reader.rs","byte_start":589809,"byte_end":589818,"line_start":109,"line_end":109,"column_start":34,"column_end":43},"value":"","parent":null,"children":[{"krate":0,"index":8069},{"krate":0,"index":8070}],"docs":"","sig":null,"attributes":[]},{"id":528,"kind":"Direct","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\io\\buf_reader.rs","byte_start":591220,"byte_end":591229,"line_start":147,"line_end":147,"column_start":37,"column_end":46},"value":"","parent":null,"children":[{"krate":0,"index":8074},{"krate":0,"index":8075}],"docs":"","sig":null,"attributes":[]},{"id":529,"kind":"Direct","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\io\\buf_reader.rs","byte_start":592059,"byte_end":592068,"line_start":168,"line_end":168,"column_start":36,"column_end":45},"value":"","parent":null,"children":[{"krate":0,"index":17503},{"krate":0,"index":17504},{"krate":0,"index":17505},{"krate":0,"index":17506}],"docs":"","sig":null,"attributes":[]},{"id":530,"kind":"Direct","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\io\\buf_reader.rs","byte_start":592146,"byte_end":592155,"line_start":172,"line_end":172,"column_start":36,"column_end":45},"value":"","parent":null,"children":[{"krate":0,"index":8080}],"docs":"","sig":null,"attributes":[]},{"id":531,"kind":"Direct","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\io\\buf_reader.rs","byte_start":592471,"byte_end":592480,"line_start":181,"line_end":181,"column_start":46,"column_end":55},"value":"","parent":null,"children":[{"krate":0,"index":8083}],"docs":"","sig":null,"attributes":[]},{"id":532,"kind":"Direct","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\io\\buf_reader.rs","byte_start":595400,"byte_end":595412,"line_start":244,"line_end":244,"column_start":20,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":8086},{"krate":0,"index":8087}],"docs":"","sig":null,"attributes":[]},{"id":533,"kind":"Inherent","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\io\\buf_writer.rs","byte_start":597494,"byte_end":597503,"line_start":41,"line_end":41,"column_start":21,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":8151},{"krate":0,"index":8152},{"krate":0,"index":8153},{"krate":0,"index":17558},{"krate":0,"index":17559},{"krate":0,"index":17560},{"krate":0,"index":17561},{"krate":0,"index":8154},{"krate":0,"index":8155},{"krate":0,"index":8156},{"krate":0,"index":8157},{"krate":0,"index":8158},{"krate":0,"index":8159},{"krate":0,"index":8160}],"docs":"","sig":null,"attributes":[]},{"id":534,"kind":"Direct","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\io\\buf_writer.rs","byte_start":601102,"byte_end":601111,"line_start":151,"line_end":151,"column_start":36,"column_end":45},"value":"","parent":null,"children":[{"krate":0,"index":8163},{"krate":0,"index":8164},{"krate":0,"index":8166},{"krate":0,"index":8167}],"docs":"","sig":null,"attributes":[]},{"id":535,"kind":"Direct","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\io\\buf_writer.rs","byte_start":602534,"byte_end":602543,"line_start":194,"line_end":194,"column_start":34,"column_end":43},"value":"","parent":null,"children":[{"krate":0,"index":17562},{"krate":0,"index":17563}],"docs":"","sig":null,"attributes":[]},{"id":536,"kind":"Direct","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\io\\buf_writer.rs","byte_start":602624,"byte_end":602633,"line_start":198,"line_end":198,"column_start":40,"column_end":49},"value":"","parent":null,"children":[{"krate":0,"index":17564},{"krate":0,"index":17565}],"docs":"","sig":null,"attributes":[]},{"id":537,"kind":"Direct","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\io\\buf_writer.rs","byte_start":602714,"byte_end":602723,"line_start":202,"line_end":202,"column_start":36,"column_end":45},"value":"","parent":null,"children":[{"krate":0,"index":8174}],"docs":"","sig":null,"attributes":[]},{"id":538,"kind":"Direct","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\io\\buf_writer.rs","byte_start":603082,"byte_end":603091,"line_start":212,"line_end":212,"column_start":47,"column_end":56},"value":"","parent":null,"children":[{"krate":0,"index":8177}],"docs":"","sig":null,"attributes":[]},{"id":539,"kind":"Inherent","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\io\\line_writer.rs","byte_start":604145,"byte_end":604155,"line_start":25,"line_end":25,"column_start":21,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":8212},{"krate":0,"index":8213},{"krate":0,"index":8214},{"krate":0,"index":8215},{"krate":0,"index":8216}],"docs":"","sig":null,"attributes":[]},{"id":540,"kind":"Direct","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\io\\line_writer.rs","byte_start":605357,"byte_end":605367,"line_start":58,"line_end":58,"column_start":36,"column_end":46},"value":"","parent":null,"children":[{"krate":0,"index":8219},{"krate":0,"index":8220},{"krate":0,"index":8227},{"krate":0,"index":8228}],"docs":"","sig":null,"attributes":[]},{"id":541,"kind":"Inherent","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\io\\chain.rs","byte_start":609227,"byte_end":609232,"line_start":21,"line_end":21,"column_start":12,"column_end":17},"value":"","parent":null,"children":[{"krate":0,"index":8268},{"krate":0,"index":8269},{"krate":0,"index":8270},{"krate":0,"index":8271},{"krate":0,"index":8272}],"docs":"","sig":null,"attributes":[]},{"id":542,"kind":"Direct","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\io\\chain.rs","byte_start":610488,"byte_end":610493,"line_start":60,"line_end":60,"column_start":27,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":8276}],"docs":"","sig":null,"attributes":[]},{"id":543,"kind":"Direct","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\io\\chain.rs","byte_start":610823,"byte_end":610828,"line_start":74,"line_end":74,"column_start":26,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":8280},{"krate":0,"index":8281}],"docs":"","sig":null,"attributes":[]},{"id":544,"kind":"Direct","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\io\\chain.rs","byte_start":611897,"byte_end":611902,"line_start":114,"line_end":114,"column_start":29,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":8286},{"krate":0,"index":8287}],"docs":"","sig":null,"attributes":[]},{"id":545,"kind":"Direct","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\io\\close.rs","byte_start":613013,"byte_end":613018,"line_start":14,"line_end":14,"column_start":35,"column_end":40},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":546,"kind":"Inherent","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\io\\close.rs","byte_start":613071,"byte_end":613076,"line_start":16,"line_end":16,"column_start":42,"column_end":47},"value":"","parent":null,"children":[{"krate":0,"index":8316}],"docs":"","sig":null,"attributes":[]},{"id":547,"kind":"Direct","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\io\\close.rs","byte_start":613218,"byte_end":613223,"line_start":22,"line_end":22,"column_start":49,"column_end":54},"value":"","parent":null,"children":[{"krate":0,"index":8319},{"krate":0,"index":8320}],"docs":"","sig":null,"attributes":[]},{"id":548,"kind":"Direct","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\io\\copy.rs","byte_start":614993,"byte_end":614997,"line_start":52,"line_end":52,"column_start":63,"column_end":67},"value":"","parent":null,"children":[{"krate":0,"index":8367},{"krate":0,"index":8368}],"docs":"","sig":null,"attributes":[]},{"id":549,"kind":"Direct","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\io\\copy_buf.rs","byte_start":616720,"byte_end":616727,"line_start":54,"line_end":54,"column_start":23,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":8412},{"krate":0,"index":8413}],"docs":"","sig":null,"attributes":[]},{"id":550,"kind":"Inherent","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\io\\cursor.rs","byte_start":618560,"byte_end":618566,"line_start":29,"line_end":29,"column_start":9,"column_end":15},"value":"","parent":null,"children":[{"krate":0,"index":8459},{"krate":0,"index":8460},{"krate":0,"index":8461},{"krate":0,"index":8462},{"krate":0,"index":8463},{"krate":0,"index":8464}],"docs":"","sig":null,"attributes":[]},{"id":551,"kind":"Direct","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\io\\cursor.rs","byte_start":621766,"byte_end":621772,"line_start":148,"line_end":148,"column_start":23,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":8467}],"docs":"","sig":null,"attributes":[]},{"id":552,"kind":"Direct","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\io\\cursor.rs","byte_start":622059,"byte_end":622065,"line_start":161,"line_end":161,"column_start":44,"column_end":50},"value":"","parent":null,"children":[{"krate":0,"index":8470},{"krate":0,"index":8471}],"docs":"","sig":null,"attributes":[]},{"id":553,"kind":"Direct","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\io\\cursor.rs","byte_start":622697,"byte_end":622703,"line_start":185,"line_end":185,"column_start":26,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":8474},{"krate":0,"index":8475}],"docs":"","sig":null,"attributes":[]},{"id":554,"kind":"Direct","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\io\\cursor.rs","byte_start":623907,"byte_end":623913,"line_start":226,"line_end":226,"column_start":21,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":17787},{"krate":0,"index":17788},{"krate":0,"index":17789},{"krate":0,"index":17790}],"docs":"","sig":null,"attributes":[]},{"id":555,"kind":"Direct","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\io\\cursor.rs","byte_start":623988,"byte_end":623994,"line_start":230,"line_end":230,"column_start":21,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":17791},{"krate":0,"index":17792},{"krate":0,"index":17793},{"krate":0,"index":17794}],"docs":"","sig":null,"attributes":[]},{"id":556,"kind":"Direct","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\io\\cursor.rs","byte_start":624072,"byte_end":624078,"line_start":234,"line_end":234,"column_start":21,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":17795},{"krate":0,"index":17796},{"krate":0,"index":17797},{"krate":0,"index":17798}],"docs":"","sig":null,"attributes":[]},{"id":557,"kind":"Direct","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\io\\cursor.rs","byte_start":624151,"byte_end":624157,"line_start":238,"line_end":238,"column_start":21,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":17799},{"krate":0,"index":17800},{"krate":0,"index":17801},{"krate":0,"index":17802}],"docs":"","sig":null,"attributes":[]},{"id":558,"kind":"Direct","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\io\\empty.rs","byte_start":625074,"byte_end":625079,"line_start":35,"line_end":35,"column_start":20,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":8512}],"docs":"","sig":null,"attributes":[]},{"id":559,"kind":"Direct","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\io\\empty.rs","byte_start":625288,"byte_end":625293,"line_start":46,"line_end":46,"column_start":23,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":8514},{"krate":0,"index":8515}],"docs":"","sig":null,"attributes":[]},{"id":560,"kind":"Direct","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\io\\empty.rs","byte_start":625525,"byte_end":625530,"line_start":55,"line_end":55,"column_start":21,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":8517}],"docs":"","sig":null,"attributes":[]},{"id":561,"kind":"Direct","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\io\\fill_buf.rs","byte_start":626028,"byte_end":626035,"line_start":14,"line_end":14,"column_start":27,"column_end":34},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":562,"kind":"Inherent","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\io\\fill_buf.rs","byte_start":626090,"byte_end":626097,"line_start":16,"line_end":16,"column_start":44,"column_end":51},"value":"","parent":null,"children":[{"krate":0,"index":8550}],"docs":"","sig":null,"attributes":[]},{"id":563,"kind":"Direct","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\io\\fill_buf.rs","byte_start":626228,"byte_end":626235,"line_start":22,"line_end":22,"column_start":24,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":8554},{"krate":0,"index":8555}],"docs":"","sig":null,"attributes":[]},{"id":564,"kind":"Direct","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\io\\flush.rs","byte_start":627805,"byte_end":627810,"line_start":14,"line_end":14,"column_start":35,"column_end":40},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":565,"kind":"Inherent","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\io\\flush.rs","byte_start":627863,"byte_end":627868,"line_start":16,"line_end":16,"column_start":42,"column_end":47},"value":"","parent":null,"children":[{"krate":0,"index":8584}],"docs":"","sig":null,"attributes":[]},{"id":566,"kind":"Direct","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\io\\flush.rs","byte_start":627981,"byte_end":627986,"line_start":22,"line_end":22,"column_start":20,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":8587},{"krate":0,"index":8588}],"docs":"","sig":null,"attributes":[]},{"id":567,"kind":"Inherent","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\io\\into_sink.rs","byte_start":629008,"byte_end":629016,"line_start":29,"line_end":29,"column_start":40,"column_end":48},"value":"","parent":null,"children":[{"krate":0,"index":8621},{"krate":0,"index":8622}],"docs":"","sig":null,"attributes":[]},{"id":568,"kind":"Direct","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\io\\into_sink.rs","byte_start":629949,"byte_end":629957,"line_start":57,"line_end":57,"column_start":55,"column_end":63},"value":"","parent":null,"children":[{"krate":0,"index":8626},{"krate":0,"index":8627},{"krate":0,"index":8628},{"krate":0,"index":8629},{"krate":0,"index":8630}],"docs":"","sig":null,"attributes":[]},{"id":569,"kind":"Inherent","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\io\\lines.rs","byte_start":631461,"byte_end":631466,"line_start":24,"line_end":24,"column_start":23,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":8668}],"docs":"","sig":null,"attributes":[]},{"id":570,"kind":"Direct","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\io\\lines.rs","byte_start":631629,"byte_end":631634,"line_start":30,"line_end":30,"column_start":34,"column_end":39},"value":"","parent":null,"children":[{"krate":0,"index":8671},{"krate":0,"index":8672}],"docs":"","sig":null,"attributes":[]},{"id":571,"kind":"Direct","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\io\\read.rs","byte_start":632629,"byte_end":632633,"line_start":15,"line_end":15,"column_start":35,"column_end":39},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":572,"kind":"Inherent","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\io\\read.rs","byte_start":632685,"byte_end":632689,"line_start":17,"line_end":17,"column_start":41,"column_end":45},"value":"","parent":null,"children":[{"krate":0,"index":8701}],"docs":"","sig":null,"attributes":[]},{"id":573,"kind":"Direct","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\io\\read.rs","byte_start":632854,"byte_end":632858,"line_start":23,"line_end":23,"column_start":48,"column_end":52},"value":"","parent":null,"children":[{"krate":0,"index":8704},{"krate":0,"index":8705}],"docs":"","sig":null,"attributes":[]},{"id":574,"kind":"Direct","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\io\\read_vectored.rs","byte_start":633546,"byte_end":633558,"line_start":15,"line_end":15,"column_start":35,"column_end":47},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":575,"kind":"Inherent","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\io\\read_vectored.rs","byte_start":633610,"byte_end":633622,"line_start":17,"line_end":17,"column_start":41,"column_end":53},"value":"","parent":null,"children":[{"krate":0,"index":8738}],"docs":"","sig":null,"attributes":[]},{"id":576,"kind":"Direct","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\io\\read_vectored.rs","byte_start":633801,"byte_end":633813,"line_start":23,"line_end":23,"column_start":48,"column_end":60},"value":"","parent":null,"children":[{"krate":0,"index":8741},{"krate":0,"index":8742}],"docs":"","sig":null,"attributes":[]},{"id":577,"kind":"Direct","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\io\\read_exact.rs","byte_start":634508,"byte_end":634517,"line_start":17,"line_end":17,"column_start":35,"column_end":44},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":578,"kind":"Inherent","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\io\\read_exact.rs","byte_start":634569,"byte_end":634578,"line_start":19,"line_end":19,"column_start":41,"column_end":50},"value":"","parent":null,"children":[{"krate":0,"index":8777}],"docs":"","sig":null,"attributes":[]},{"id":579,"kind":"Direct","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\io\\read_exact.rs","byte_start":634743,"byte_end":634752,"line_start":25,"line_end":25,"column_start":48,"column_end":57},"value":"","parent":null,"children":[{"krate":0,"index":8780},{"krate":0,"index":8781}],"docs":"","sig":null,"attributes":[]},{"id":580,"kind":"Direct","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\io\\read_line.rs","byte_start":635895,"byte_end":635903,"line_start":21,"line_end":21,"column_start":35,"column_end":43},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":581,"kind":"Inherent","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\io\\read_line.rs","byte_start":635958,"byte_end":635966,"line_start":23,"line_end":23,"column_start":44,"column_end":52},"value":"","parent":null,"children":[{"krate":0,"index":8822}],"docs":"","sig":null,"attributes":[]},{"id":582,"kind":"Direct","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\io\\read_line.rs","byte_start":636935,"byte_end":636943,"line_start":50,"line_end":50,"column_start":51,"column_end":59},"value":"","parent":null,"children":[{"krate":0,"index":8828},{"krate":0,"index":8829}],"docs":"","sig":null,"attributes":[]},{"id":583,"kind":"Direct","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\io\\read_to_end.rs","byte_start":637698,"byte_end":637707,"line_start":18,"line_end":18,"column_start":35,"column_end":44},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":584,"kind":"Inherent","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\io\\read_to_end.rs","byte_start":637759,"byte_end":637768,"line_start":20,"line_end":20,"column_start":41,"column_end":50},"value":"","parent":null,"children":[{"krate":0,"index":8864}],"docs":"","sig":null,"attributes":[]},{"id":585,"kind":"Direct","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\io\\read_to_end.rs","byte_start":638013,"byte_end":638018,"line_start":32,"line_end":32,"column_start":15,"column_end":20},"value":"","parent":null,"children":[{"krate":0,"index":8870}],"docs":"","sig":null,"attributes":[]},{"id":586,"kind":"Direct","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\io\\read_to_end.rs","byte_start":639853,"byte_end":639862,"line_start":81,"line_end":81,"column_start":20,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":8875},{"krate":0,"index":8876}],"docs":"","sig":null,"attributes":[]},{"id":587,"kind":"Direct","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\io\\read_to_string.rs","byte_start":640735,"byte_end":640747,"line_start":20,"line_end":20,"column_start":35,"column_end":47},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":588,"kind":"Inherent","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\io\\read_to_string.rs","byte_start":640799,"byte_end":640811,"line_start":22,"line_end":22,"column_start":41,"column_end":53},"value":"","parent":null,"children":[{"krate":0,"index":8921}],"docs":"","sig":null,"attributes":[]},{"id":589,"kind":"Direct","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\io\\read_to_string.rs","byte_start":641740,"byte_end":641752,"line_start":49,"line_end":49,"column_start":20,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":8927},{"krate":0,"index":8928}],"docs":"","sig":null,"attributes":[]},{"id":590,"kind":"Direct","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\io\\read_until.rs","byte_start":642572,"byte_end":642581,"line_start":19,"line_end":19,"column_start":35,"column_end":44},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":591,"kind":"Inherent","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\io\\read_until.rs","byte_start":642636,"byte_end":642645,"line_start":21,"line_end":21,"column_start":44,"column_end":53},"value":"","parent":null,"children":[{"krate":0,"index":8963}],"docs":"","sig":null,"attributes":[]},{"id":592,"kind":"Direct","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\io\\read_until.rs","byte_start":643617,"byte_end":643626,"line_start":53,"line_end":53,"column_start":51,"column_end":60},"value":"","parent":null,"children":[{"krate":0,"index":8968},{"krate":0,"index":8969}],"docs":"","sig":null,"attributes":[]},{"id":593,"kind":"Direct","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\io\\repeat.rs","byte_start":644784,"byte_end":644790,"line_start":35,"line_end":35,"column_start":20,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":9004},{"krate":0,"index":9005}],"docs":"","sig":null,"attributes":[]},{"id":594,"kind":"Direct","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\io\\repeat.rs","byte_start":645431,"byte_end":645437,"line_start":62,"line_end":62,"column_start":21,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":9007}],"docs":"","sig":null,"attributes":[]},{"id":595,"kind":"Direct","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\io\\seek.rs","byte_start":645951,"byte_end":645955,"line_start":15,"line_end":15,"column_start":35,"column_end":39},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":596,"kind":"Inherent","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\io\\seek.rs","byte_start":646007,"byte_end":646011,"line_start":17,"line_end":17,"column_start":41,"column_end":45},"value":"","parent":null,"children":[{"krate":0,"index":9044}],"docs":"","sig":null,"attributes":[]},{"id":597,"kind":"Direct","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\io\\seek.rs","byte_start":646168,"byte_end":646172,"line_start":23,"line_end":23,"column_start":48,"column_end":52},"value":"","parent":null,"children":[{"krate":0,"index":9047},{"krate":0,"index":9048}],"docs":"","sig":null,"attributes":[]},{"id":598,"kind":"Direct","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\io\\sink.rs","byte_start":647301,"byte_end":647305,"line_start":34,"line_end":34,"column_start":21,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":9080},{"krate":0,"index":9081},{"krate":0,"index":9083},{"krate":0,"index":9084}],"docs":"","sig":null,"attributes":[]},{"id":599,"kind":"Direct","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\io\\sink.rs","byte_start":648023,"byte_end":648027,"line_start":63,"line_end":63,"column_start":21,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":9086}],"docs":"","sig":null,"attributes":[]},{"id":600,"kind":"Inherent","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\io\\split.rs","byte_start":649044,"byte_end":649052,"line_start":34,"line_end":34,"column_start":16,"column_end":24},"value":"","parent":null,"children":[{"krate":0,"index":9139}],"docs":"","sig":null,"attributes":[]},{"id":601,"kind":"Inherent","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\io\\split.rs","byte_start":649552,"byte_end":649561,"line_start":45,"line_end":45,"column_start":16,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":9143}],"docs":"","sig":null,"attributes":[]},{"id":602,"kind":"Direct","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\io\\split.rs","byte_start":649953,"byte_end":649961,"line_start":54,"line_end":54,"column_start":34,"column_end":42},"value":"","parent":null,"children":[{"krate":0,"index":9146},{"krate":0,"index":9148}],"docs":"","sig":null,"attributes":[]},{"id":603,"kind":"Direct","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\io\\split.rs","byte_start":650464,"byte_end":650473,"line_start":72,"line_end":72,"column_start":36,"column_end":45},"value":"","parent":null,"children":[{"krate":0,"index":9152},{"krate":0,"index":9154},{"krate":0,"index":9156},{"krate":0,"index":9158}],"docs":"","sig":null,"attributes":[]},{"id":604,"kind":"Direct","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\io\\split.rs","byte_start":651488,"byte_end":651500,"line_start":102,"line_end":102,"column_start":24,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":9167}],"docs":"","sig":null,"attributes":[]},{"id":605,"kind":"Direct","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\io\\split.rs","byte_start":651664,"byte_end":651676,"line_start":108,"line_end":108,"column_start":26,"column_end":38},"value":"","parent":null,"children":[{"krate":0,"index":9170}],"docs":"","sig":null,"attributes":[]},{"id":606,"kind":"Direct","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\io\\split.rs","byte_start":651910,"byte_end":651922,"line_start":115,"line_end":115,"column_start":47,"column_end":59},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":607,"kind":"Inherent","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\io\\take.rs","byte_start":652395,"byte_end":652399,"line_start":19,"line_end":19,"column_start":20,"column_end":24},"value":"","parent":null,"children":[{"krate":0,"index":9216},{"krate":0,"index":9217},{"krate":0,"index":9218},{"krate":0,"index":18054},{"krate":0,"index":18055},{"krate":0,"index":18056},{"krate":0,"index":18057}],"docs":"","sig":null,"attributes":[]},{"id":608,"kind":"Direct","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\io\\take.rs","byte_start":654316,"byte_end":654320,"line_start":84,"line_end":84,"column_start":34,"column_end":38},"value":"","parent":null,"children":[{"krate":0,"index":9221}],"docs":"","sig":null,"attributes":[]},{"id":609,"kind":"Direct","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\io\\take.rs","byte_start":654830,"byte_end":654834,"line_start":103,"line_end":103,"column_start":40,"column_end":44},"value":"","parent":null,"children":[{"krate":0,"index":9224},{"krate":0,"index":9225}],"docs":"","sig":null,"attributes":[]},{"id":610,"kind":"Inherent","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\io\\window.rs","byte_start":656677,"byte_end":656683,"line_start":26,"line_end":26,"column_start":22,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":9242},{"krate":0,"index":9243},{"krate":0,"index":9244},{"krate":0,"index":9245},{"krate":0,"index":9246},{"krate":0,"index":9247},{"krate":0,"index":9248}],"docs":"","sig":null,"attributes":[]},{"id":611,"kind":"Direct","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\io\\window.rs","byte_start":658753,"byte_end":658759,"line_start":94,"line_end":94,"column_start":38,"column_end":44},"value":"","parent":null,"children":[{"krate":0,"index":9252}],"docs":"","sig":null,"attributes":[]},{"id":612,"kind":"Direct","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\io\\window.rs","byte_start":658906,"byte_end":658912,"line_start":100,"line_end":100,"column_start":38,"column_end":44},"value":"","parent":null,"children":[{"krate":0,"index":9255}],"docs":"","sig":null,"attributes":[]},{"id":613,"kind":"Direct","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\io\\write.rs","byte_start":659433,"byte_end":659438,"line_start":15,"line_end":15,"column_start":35,"column_end":40},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":614,"kind":"Inherent","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\io\\write.rs","byte_start":659491,"byte_end":659496,"line_start":17,"line_end":17,"column_start":42,"column_end":47},"value":"","parent":null,"children":[{"krate":0,"index":9284}],"docs":"","sig":null,"attributes":[]},{"id":615,"kind":"Direct","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\io\\write.rs","byte_start":659658,"byte_end":659663,"line_start":23,"line_end":23,"column_start":49,"column_end":54},"value":"","parent":null,"children":[{"krate":0,"index":9287},{"krate":0,"index":9288}],"docs":"","sig":null,"attributes":[]},{"id":616,"kind":"Direct","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\io\\write_vectored.rs","byte_start":660347,"byte_end":660360,"line_start":15,"line_end":15,"column_start":35,"column_end":48},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":617,"kind":"Inherent","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\io\\write_vectored.rs","byte_start":660413,"byte_end":660426,"line_start":17,"line_end":17,"column_start":42,"column_end":55},"value":"","parent":null,"children":[{"krate":0,"index":9321}],"docs":"","sig":null,"attributes":[]},{"id":618,"kind":"Direct","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\io\\write_vectored.rs","byte_start":660599,"byte_end":660612,"line_start":23,"line_end":23,"column_start":49,"column_end":62},"value":"","parent":null,"children":[{"krate":0,"index":9324},{"krate":0,"index":9325}],"docs":"","sig":null,"attributes":[]},{"id":619,"kind":"Direct","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\io\\write_all.rs","byte_start":661304,"byte_end":661312,"line_start":17,"line_end":17,"column_start":35,"column_end":43},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":620,"kind":"Inherent","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\io\\write_all.rs","byte_start":661365,"byte_end":661373,"line_start":19,"line_end":19,"column_start":42,"column_end":50},"value":"","parent":null,"children":[{"krate":0,"index":9360}],"docs":"","sig":null,"attributes":[]},{"id":621,"kind":"Direct","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\io\\write_all.rs","byte_start":661535,"byte_end":661543,"line_start":25,"line_end":25,"column_start":49,"column_end":57},"value":"","parent":null,"children":[{"krate":0,"index":9363},{"krate":0,"index":9364}],"docs":"","sig":null,"attributes":[]},{"id":622,"kind":"Direct","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\io\\mod.rs","byte_start":565100,"byte_end":565101,"line_start":395,"line_end":395,"column_start":46,"column_end":47},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":623,"kind":"Direct","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\io\\mod.rs","byte_start":571556,"byte_end":571557,"line_start":589,"line_end":589,"column_start":48,"column_end":49},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":624,"kind":"Direct","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\io\\mod.rs","byte_start":572444,"byte_end":572445,"line_start":617,"line_end":617,"column_start":46,"column_end":47},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":625,"kind":"Direct","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\io\\mod.rs","byte_start":579924,"byte_end":579925,"line_start":821,"line_end":821,"column_start":52,"column_end":53},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":626,"kind":"Direct","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\lock\\mutex.rs","byte_start":663871,"byte_end":663876,"line_start":26,"line_end":26,"column_start":32,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":9504}],"docs":"","sig":null,"attributes":[]},{"id":627,"kind":"Direct","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\lock\\mutex.rs","byte_start":664209,"byte_end":664214,"line_start":36,"line_end":36,"column_start":21,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":9507}],"docs":"","sig":null,"attributes":[]},{"id":628,"kind":"Direct","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\lock\\mutex.rs","byte_start":664307,"byte_end":664312,"line_start":42,"line_end":42,"column_start":30,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":9510}],"docs":"","sig":null,"attributes":[]},{"id":629,"kind":"Inherent","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\lock\\mutex.rs","byte_start":664445,"byte_end":664451,"line_start":53,"line_end":53,"column_start":6,"column_end":12},"value":"","parent":null,"children":[{"krate":0,"index":9518},{"krate":0,"index":9519}],"docs":"","sig":null,"attributes":[]},{"id":630,"kind":"Inherent","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\lock\\mutex.rs","byte_start":664897,"byte_end":664902,"line_start":72,"line_end":72,"column_start":9,"column_end":14},"value":"","parent":null,"children":[{"krate":0,"index":9524},{"krate":0,"index":9525}],"docs":"","sig":null,"attributes":[]},{"id":631,"kind":"Inherent","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\lock\\mutex.rs","byte_start":665473,"byte_end":665478,"line_start":97,"line_end":97,"column_start":17,"column_end":22},"value":"","parent":null,"children":[{"krate":0,"index":9528},{"krate":0,"index":9529},{"krate":0,"index":9530},{"krate":0,"index":9531},{"krate":0,"index":9532}],"docs":"","sig":null,"attributes":[]},{"id":632,"kind":"Direct","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\lock\\mutex.rs","byte_start":668593,"byte_end":668608,"line_start":185,"line_end":185,"column_start":32,"column_end":47},"value":"","parent":null,"children":[{"krate":0,"index":9541}],"docs":"","sig":null,"attributes":[]},{"id":633,"kind":"Direct","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\lock\\mutex.rs","byte_start":669039,"byte_end":669054,"line_start":198,"line_end":198,"column_start":33,"column_end":48},"value":"","parent":null,"children":[{"krate":0,"index":9544}],"docs":"","sig":null,"attributes":[]},{"id":634,"kind":"Direct","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\lock\\mutex.rs","byte_start":669171,"byte_end":669186,"line_start":204,"line_end":204,"column_start":32,"column_end":47},"value":"","parent":null,"children":[{"krate":0,"index":9548},{"krate":0,"index":9549}],"docs":"","sig":null,"attributes":[]},{"id":635,"kind":"Direct","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\lock\\mutex.rs","byte_start":670415,"byte_end":670430,"line_start":240,"line_end":240,"column_start":26,"column_end":41},"value":"","parent":null,"children":[{"krate":0,"index":9552}],"docs":"","sig":null,"attributes":[]},{"id":636,"kind":"Inherent","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\lock\\mutex.rs","byte_start":671032,"byte_end":671042,"line_start":259,"line_end":259,"column_start":21,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":9560}],"docs":"","sig":null,"attributes":[]},{"id":637,"kind":"Direct","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\lock\\mutex.rs","byte_start":672054,"byte_end":672064,"line_start":289,"line_end":289,"column_start":45,"column_end":55},"value":"","parent":null,"children":[{"krate":0,"index":9565}],"docs":"","sig":null,"attributes":[]},{"id":638,"kind":"Direct","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\lock\\mutex.rs","byte_start":672270,"byte_end":672280,"line_start":295,"line_end":295,"column_start":26,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":9568}],"docs":"","sig":null,"attributes":[]},{"id":639,"kind":"Direct","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\lock\\mutex.rs","byte_start":672378,"byte_end":672388,"line_start":301,"line_end":301,"column_start":27,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":9571},{"krate":0,"index":9572}],"docs":"","sig":null,"attributes":[]},{"id":640,"kind":"Direct","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\lock\\mutex.rs","byte_start":672529,"byte_end":672539,"line_start":308,"line_end":308,"column_start":30,"column_end":40},"value":"","parent":null,"children":[{"krate":0,"index":9575}],"docs":"","sig":null,"attributes":[]},{"id":641,"kind":"Inherent","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\lock\\mutex.rs","byte_start":672990,"byte_end":673006,"line_start":322,"line_end":322,"column_start":32,"column_end":48},"value":"","parent":null,"children":[{"krate":0,"index":9587}],"docs":"","sig":null,"attributes":[]},{"id":642,"kind":"Direct","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\lock\\mutex.rs","byte_start":674136,"byte_end":674152,"line_start":353,"line_end":353,"column_start":56,"column_end":72},"value":"","parent":null,"children":[{"krate":0,"index":9593}],"docs":"","sig":null,"attributes":[]},{"id":643,"kind":"Direct","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\lock\\mutex.rs","byte_start":674417,"byte_end":674433,"line_start":362,"line_end":362,"column_start":37,"column_end":53},"value":"","parent":null,"children":[{"krate":0,"index":9597}],"docs":"","sig":null,"attributes":[]},{"id":644,"kind":"Direct","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\lock\\mutex.rs","byte_start":674545,"byte_end":674561,"line_start":368,"line_end":368,"column_start":38,"column_end":54},"value":"","parent":null,"children":[{"krate":0,"index":9601},{"krate":0,"index":9602}],"docs":"","sig":null,"attributes":[]},{"id":645,"kind":"Direct","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\lock\\mutex.rs","byte_start":674704,"byte_end":674720,"line_start":375,"line_end":375,"column_start":41,"column_end":57},"value":"","parent":null,"children":[{"krate":0,"index":9606}],"docs":"","sig":null,"attributes":[]},{"id":646,"kind":"Direct","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\lock\\mutex.rs","byte_start":674997,"byte_end":675002,"line_start":383,"line_end":383,"column_start":40,"column_end":45},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":647,"kind":"Direct","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\lock\\mutex.rs","byte_start":675048,"byte_end":675053,"line_start":384,"line_end":384,"column_start":40,"column_end":45},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":648,"kind":"Direct","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\lock\\mutex.rs","byte_start":675220,"byte_end":675235,"line_start":388,"line_end":388,"column_start":40,"column_end":55},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":649,"kind":"Direct","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\lock\\mutex.rs","byte_start":675339,"byte_end":675354,"line_start":390,"line_end":390,"column_start":33,"column_end":48},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":650,"kind":"Direct","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\lock\\mutex.rs","byte_start":675558,"byte_end":675568,"line_start":394,"line_end":394,"column_start":40,"column_end":50},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":651,"kind":"Direct","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\lock\\mutex.rs","byte_start":675618,"byte_end":675628,"line_start":395,"line_end":395,"column_start":40,"column_end":50},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":652,"kind":"Direct","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\lock\\mutex.rs","byte_start":675696,"byte_end":675712,"line_start":396,"line_end":396,"column_start":58,"column_end":74},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":653,"kind":"Direct","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\lock\\mutex.rs","byte_start":675783,"byte_end":675799,"line_start":397,"line_end":397,"column_start":58,"column_end":74},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":654,"kind":"Direct","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\lock\\bilock.rs","byte_start":677803,"byte_end":677808,"line_start":48,"line_end":48,"column_start":31,"column_end":36},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":655,"kind":"Direct","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\lock\\bilock.rs","byte_start":677845,"byte_end":677850,"line_start":49,"line_end":49,"column_start":31,"column_end":36},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":656,"kind":"Inherent","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\lock\\bilock.rs","byte_start":677866,"byte_end":677872,"line_start":51,"line_end":51,"column_start":9,"column_end":15},"value":"","parent":null,"children":[{"krate":0,"index":9683},{"krate":0,"index":9684},{"krate":0,"index":9686},{"krate":0,"index":9687}],"docs":"","sig":null,"attributes":[]},{"id":657,"kind":"Inherent","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\lock\\bilock.rs","byte_start":683492,"byte_end":683497,"line_start":184,"line_end":184,"column_start":16,"column_end":21},"value":"","parent":null,"children":[{"krate":0,"index":9690}],"docs":"","sig":null,"attributes":[]},{"id":658,"kind":"Direct","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\lock\\bilock.rs","byte_start":683619,"byte_end":683624,"line_start":190,"line_end":190,"column_start":18,"column_end":23},"value":"","parent":null,"children":[{"krate":0,"index":9693}],"docs":"","sig":null,"attributes":[]},{"id":659,"kind":"Direct","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\lock\\bilock.rs","byte_start":683952,"byte_end":683964,"line_start":201,"line_end":201,"column_start":24,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":9701}],"docs":"","sig":null,"attributes":[]},{"id":660,"kind":"Direct","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\lock\\bilock.rs","byte_start":684128,"byte_end":684140,"line_start":207,"line_end":207,"column_start":26,"column_end":38},"value":"","parent":null,"children":[{"krate":0,"index":9704}],"docs":"","sig":null,"attributes":[]},{"id":661,"kind":"Direct","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\lock\\bilock.rs","byte_start":684361,"byte_end":684373,"line_start":214,"line_end":214,"column_start":47,"column_end":59},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":662,"kind":"Direct","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\lock\\bilock.rs","byte_start":684755,"byte_end":684766,"line_start":227,"line_end":227,"column_start":19,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":9709},{"krate":0,"index":9710}],"docs":"","sig":null,"attributes":[]},{"id":663,"kind":"Direct","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\lock\\bilock.rs","byte_start":684929,"byte_end":684940,"line_start":234,"line_end":234,"column_start":29,"column_end":40},"value":"","parent":null,"children":[{"krate":0,"index":9713}],"docs":"","sig":null,"attributes":[]},{"id":664,"kind":"Inherent","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\lock\\bilock.rs","byte_start":685078,"byte_end":685089,"line_start":240,"line_end":240,"column_start":9,"column_end":20},"value":"","parent":null,"children":[{"krate":0,"index":9716}],"docs":"","sig":null,"attributes":[]},{"id":665,"kind":"Direct","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\lock\\bilock.rs","byte_start":685441,"byte_end":685452,"line_start":249,"line_end":249,"column_start":18,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":9719}],"docs":"","sig":null,"attributes":[]},{"id":666,"kind":"Inherent","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\abortable.rs","byte_start":686765,"byte_end":686774,"line_start":22,"line_end":22,"column_start":9,"column_end":18},"value":"","parent":null,"children":[{"krate":0,"index":9761},{"krate":0,"index":9762}],"docs":"","sig":null,"attributes":[]},{"id":667,"kind":"Inherent","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\abortable.rs","byte_start":689047,"byte_end":689058,"line_start":87,"line_end":87,"column_start":6,"column_end":17},"value":"","parent":null,"children":[{"krate":0,"index":9764}],"docs":"","sig":null,"attributes":[]},{"id":668,"kind":"Direct","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\abortable.rs","byte_start":689841,"byte_end":689848,"line_start":112,"line_end":112,"column_start":23,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":9766}],"docs":"","sig":null,"attributes":[]},{"id":669,"kind":"Direct","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\abortable.rs","byte_start":690031,"byte_end":690038,"line_start":119,"line_end":119,"column_start":28,"column_end":35},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":670,"kind":"Inherent","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\abortable.rs","byte_start":690051,"byte_end":690060,"line_start":121,"line_end":121,"column_start":9,"column_end":18},"value":"","parent":null,"children":[{"krate":0,"index":9770}],"docs":"","sig":null,"attributes":[]},{"id":671,"kind":"Direct","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\abortable.rs","byte_start":691049,"byte_end":691058,"line_start":152,"line_end":152,"column_start":22,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":9775},{"krate":0,"index":9776}],"docs":"","sig":null,"attributes":[]},{"id":672,"kind":"Direct","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\abortable.rs","byte_start":691297,"byte_end":691306,"line_start":163,"line_end":163,"column_start":21,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":9780},{"krate":0,"index":9781}],"docs":"","sig":null,"attributes":[]},{"id":673,"kind":"Inherent","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\abortable.rs","byte_start":691565,"byte_end":691576,"line_start":174,"line_end":174,"column_start":6,"column_end":17},"value":"","parent":null,"children":[{"krate":0,"index":9784}],"docs":"","sig":null,"attributes":[]},{"id":674,"kind":"Direct","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\fns.rs","byte_start":692248,"byte_end":692249,"line_start":9,"line_end":9,"column_start":30,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":9804},{"krate":0,"index":9805}],"docs":"","sig":null,"attributes":[]},{"id":675,"kind":"Direct","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\fns.rs","byte_start":692484,"byte_end":692485,"line_start":23,"line_end":23,"column_start":29,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":9813}],"docs":"","sig":null,"attributes":[]},{"id":676,"kind":"Direct","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\fns.rs","byte_start":692755,"byte_end":692756,"line_start":38,"line_end":38,"column_start":26,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":9821}],"docs":"","sig":null,"attributes":[]},{"id":677,"kind":"Direct","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\fns.rs","byte_start":693772,"byte_end":693776,"line_start":76,"line_end":76,"column_start":21,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":9829}],"docs":"","sig":null,"attributes":[]},{"id":678,"kind":"Direct","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\fns.rs","byte_start":693870,"byte_end":693874,"line_start":82,"line_end":82,"column_start":27,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":9833},{"krate":0,"index":9834}],"docs":"","sig":null,"attributes":[]},{"id":684,"kind":"Direct","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\fns.rs","byte_start":694133,"byte_end":694140,"line_start":94,"line_end":94,"column_start":30,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":9839},{"krate":0,"index":9840}],"docs":"","sig":null,"attributes":[]},{"id":685,"kind":"Direct","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\fns.rs","byte_start":694363,"byte_end":694370,"line_start":104,"line_end":104,"column_start":29,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":9845}],"docs":"","sig":null,"attributes":[]},{"id":686,"kind":"Direct","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\fns.rs","byte_start":694561,"byte_end":694568,"line_start":113,"line_end":113,"column_start":26,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":9850}],"docs":"","sig":null,"attributes":[]},{"id":687,"kind":"Direct","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\fns.rs","byte_start":694873,"byte_end":694886,"line_start":129,"line_end":129,"column_start":35,"column_end":48},"value":"","parent":null,"children":[{"krate":0,"index":9856},{"krate":0,"index":9857}],"docs":"","sig":null,"attributes":[]},{"id":693,"kind":"Direct","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\fns.rs","byte_start":695303,"byte_end":695312,"line_start":144,"line_end":144,"column_start":27,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":9862},{"krate":0,"index":9863}],"docs":"","sig":null,"attributes":[]},{"id":694,"kind":"Direct","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\fns.rs","byte_start":695596,"byte_end":695605,"line_start":155,"line_end":155,"column_start":26,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":9868}],"docs":"","sig":null,"attributes":[]},{"id":695,"kind":"Direct","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\fns.rs","byte_start":695867,"byte_end":695876,"line_start":165,"line_end":165,"column_start":23,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":9873}],"docs":"","sig":null,"attributes":[]},{"id":696,"kind":"Direct","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\fns.rs","byte_start":696198,"byte_end":696205,"line_start":181,"line_end":181,"column_start":41,"column_end":48},"value":"","parent":null,"children":[{"krate":0,"index":9880},{"krate":0,"index":9881}],"docs":"","sig":null,"attributes":[]},{"id":697,"kind":"Direct","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\fns.rs","byte_start":696424,"byte_end":696431,"line_start":190,"line_end":190,"column_start":40,"column_end":47},"value":"","parent":null,"children":[{"krate":0,"index":9887}],"docs":"","sig":null,"attributes":[]},{"id":698,"kind":"Direct","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\fns.rs","byte_start":696609,"byte_end":696616,"line_start":198,"line_end":198,"column_start":37,"column_end":44},"value":"","parent":null,"children":[{"krate":0,"index":9893}],"docs":"","sig":null,"attributes":[]},{"id":699,"kind":"Direct","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\fns.rs","byte_start":696917,"byte_end":696925,"line_start":213,"line_end":213,"column_start":41,"column_end":49},"value":"","parent":null,"children":[{"krate":0,"index":9901},{"krate":0,"index":9902}],"docs":"","sig":null,"attributes":[]},{"id":700,"kind":"Direct","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\fns.rs","byte_start":697148,"byte_end":697156,"line_start":222,"line_end":222,"column_start":40,"column_end":48},"value":"","parent":null,"children":[{"krate":0,"index":9908}],"docs":"","sig":null,"attributes":[]},{"id":701,"kind":"Direct","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\fns.rs","byte_start":697338,"byte_end":697346,"line_start":230,"line_end":230,"column_start":37,"column_end":45},"value":"","parent":null,"children":[{"krate":0,"index":9914}],"docs":"","sig":null,"attributes":[]},{"id":702,"kind":"Direct","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\fns.rs","byte_start":697656,"byte_end":697667,"line_start":245,"line_end":245,"column_start":49,"column_end":60},"value":"","parent":null,"children":[{"krate":0,"index":9923},{"krate":0,"index":9924}],"docs":"","sig":null,"attributes":[]},{"id":703,"kind":"Direct","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\fns.rs","byte_start":697927,"byte_end":697938,"line_start":256,"line_end":256,"column_start":48,"column_end":59},"value":"","parent":null,"children":[{"krate":0,"index":9930}],"docs":"","sig":null,"attributes":[]},{"id":704,"kind":"Direct","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\fns.rs","byte_start":698175,"byte_end":698186,"line_start":266,"line_end":266,"column_start":45,"column_end":56},"value":"","parent":null,"children":[{"krate":0,"index":9936}],"docs":"","sig":null,"attributes":[]},{"id":705,"kind":"Direct","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\fns.rs","byte_start":698553,"byte_end":698565,"line_start":283,"line_end":283,"column_start":49,"column_end":61},"value":"","parent":null,"children":[{"krate":0,"index":9944},{"krate":0,"index":9945}],"docs":"","sig":null,"attributes":[]},{"id":706,"kind":"Direct","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\fns.rs","byte_start":698826,"byte_end":698838,"line_start":294,"line_end":294,"column_start":48,"column_end":60},"value":"","parent":null,"children":[{"krate":0,"index":9951}],"docs":"","sig":null,"attributes":[]},{"id":707,"kind":"Direct","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\fns.rs","byte_start":699076,"byte_end":699088,"line_start":304,"line_end":304,"column_start":45,"column_end":57},"value":"","parent":null,"children":[{"krate":0,"index":9957}],"docs":"","sig":null,"attributes":[]},{"id":708,"kind":"Direct","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\fns.rs","byte_start":699707,"byte_end":699721,"line_start":326,"line_end":326,"column_start":41,"column_end":55},"value":"","parent":null,"children":[{"krate":0,"index":9970},{"krate":0,"index":9971}],"docs":"","sig":null,"attributes":[]},{"id":709,"kind":"Direct","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\fns.rs","byte_start":699944,"byte_end":699958,"line_start":335,"line_end":335,"column_start":40,"column_end":54},"value":"","parent":null,"children":[{"krate":0,"index":9977}],"docs":"","sig":null,"attributes":[]},{"id":710,"kind":"Direct","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\fns.rs","byte_start":700159,"byte_end":700173,"line_start":343,"line_end":343,"column_start":37,"column_end":51},"value":"","parent":null,"children":[{"krate":0,"index":9983}],"docs":"","sig":null,"attributes":[]},{"id":711,"kind":"Direct","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\fns.rs","byte_start":700479,"byte_end":700485,"line_start":357,"line_end":357,"column_start":21,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":9993}],"docs":"","sig":null,"attributes":[]},{"id":712,"kind":"Direct","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\fns.rs","byte_start":700578,"byte_end":700584,"line_start":362,"line_end":362,"column_start":27,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":9997},{"krate":0,"index":9998}],"docs":"","sig":null,"attributes":[]},{"id":718,"kind":"Inherent","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\unfold_state.rs","byte_start":701189,"byte_end":701200,"line_start":22,"line_end":22,"column_start":12,"column_end":23},"value":"","parent":null,"children":[{"krate":0,"index":10009},{"krate":0,"index":10010}],"docs":"","sig":null,"attributes":[]}],"refs":[{"kind":"Mod","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\lib.rs","byte_start":10623,"byte_end":10629,"line_start":294,"line_end":294,"column_start":9,"column_end":15},"ref_id":{"krate":0,"index":18}},{"kind":"Mod","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\lib.rs","byte_start":10727,"byte_end":10733,"line_start":298,"line_end":298,"column_start":9,"column_end":15},"ref_id":{"krate":0,"index":1888}},{"kind":"Mod","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\mod.rs","byte_start":150002,"byte_end":150019,"line_start":112,"line_end":112,"column_start":9,"column_end":26},"ref_id":{"krate":0,"index":6416}},{"kind":"Mod","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\mod.rs","byte_start":150218,"byte_end":150228,"line_start":120,"line_end":120,"column_start":9,"column_end":19},"ref_id":{"krate":0,"index":6822}},{"kind":"Mod","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\lib.rs","byte_start":10904,"byte_end":10908,"line_start":304,"line_end":304,"column_start":9,"column_end":13},"ref_id":{"krate":0,"index":6999}},{"kind":"Mod","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\lib.rs","byte_start":11000,"byte_end":11004,"line_start":309,"line_end":309,"column_start":9,"column_end":13},"ref_id":{"krate":0,"index":7759}},{"kind":"Mod","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\lib.rs","byte_start":11015,"byte_end":11020,"line_start":311,"line_end":311,"column_start":9,"column_end":14},"ref_id":{"krate":0,"index":7858}},{"kind":"Mod","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\lib.rs","byte_start":11218,"byte_end":11220,"line_start":320,"line_end":320,"column_start":9,"column_end":11},"ref_id":{"krate":0,"index":7860}},{"kind":"Mod","span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\lib.rs","byte_start":11462,"byte_end":11466,"line_start":330,"line_end":330,"column_start":9,"column_end":13},"ref_id":{"krate":0,"index":9442}}],"macro_refs":[],"relations":[{"span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\future\\future\\flatten.rs","byte_start":35483,"byte_end":35490,"line_start":20,"line_end":20,"column_start":18,"column_end":25},"kind":{"Impl":{"id":0}},"from":{"krate":0,"index":10011},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\future\\future\\flatten.rs","byte_start":35620,"byte_end":35627,"line_start":26,"line_end":26,"column_start":27,"column_end":34},"kind":{"Impl":{"id":1}},"from":{"krate":0,"index":10011},"to":{"krate":16,"index":27}},{"span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\future\\future\\flatten.rs","byte_start":35852,"byte_end":35859,"line_start":39,"line_end":39,"column_start":22,"column_end":29},"kind":{"Impl":{"id":2}},"from":{"krate":0,"index":10011},"to":{"krate":2,"index":13098}},{"span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\future\\future\\flatten.rs","byte_start":36633,"byte_end":36640,"line_start":64,"line_end":64,"column_start":27,"column_end":34},"kind":{"Impl":{"id":3}},"from":{"krate":0,"index":10011},"to":{"krate":16,"index":110}},{"span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\future\\future\\flatten.rs","byte_start":36865,"byte_end":36872,"line_start":77,"line_end":77,"column_start":22,"column_end":29},"kind":{"Impl":{"id":4}},"from":{"krate":0,"index":10011},"to":{"krate":16,"index":96}},{"span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\future\\future\\flatten.rs","byte_start":37725,"byte_end":37732,"line_start":105,"line_end":105,"column_start":32,"column_end":39},"kind":{"Impl":{"id":5}},"from":{"krate":0,"index":10011},"to":{"krate":19,"index":17}},{"span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\future\\future\\fuse.rs","byte_start":39886,"byte_end":39890,"line_start":17,"line_end":17,"column_start":11,"column_end":15},"kind":{"Impl":{"id":6}},"from":{"krate":0,"index":10058},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\future\\future\\fuse.rs","byte_start":39997,"byte_end":40001,"line_start":23,"line_end":23,"column_start":19,"column_end":23},"kind":{"Impl":{"id":7}},"from":{"krate":0,"index":10058},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\future\\future\\fuse.rs","byte_start":41730,"byte_end":41734,"line_start":74,"line_end":74,"column_start":35,"column_end":39},"kind":{"Impl":{"id":8}},"from":{"krate":0,"index":10058},"to":{"krate":16,"index":27}},{"span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\future\\future\\fuse.rs","byte_start":41847,"byte_end":41851,"line_start":80,"line_end":80,"column_start":30,"column_end":34},"kind":{"Impl":{"id":9}},"from":{"krate":0,"index":10058},"to":{"krate":2,"index":13098}},{"span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\future\\future\\map.rs","byte_start":42829,"byte_end":42832,"line_start":25,"line_end":25,"column_start":14,"column_end":17},"kind":{"Impl":{"id":10}},"from":{"krate":0,"index":10094},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\future\\future\\map.rs","byte_start":43001,"byte_end":43004,"line_start":32,"line_end":32,"column_start":33,"column_end":36},"kind":{"Impl":{"id":11}},"from":{"krate":0,"index":10094},"to":{"krate":16,"index":27}},{"span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\future\\future\\map.rs","byte_start":43266,"byte_end":43269,"line_start":45,"line_end":45,"column_start":28,"column_end":31},"kind":{"Impl":{"id":12}},"from":{"krate":0,"index":10094},"to":{"krate":2,"index":13098}},{"span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\future\\future\\catch_unwind.rs","byte_start":44475,"byte_end":44486,"line_start":19,"line_end":19,"column_start":11,"column_end":22},"kind":{"Impl":{"id":13}},"from":{"krate":0,"index":10654},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\future\\future\\catch_unwind.rs","byte_start":44629,"byte_end":44640,"line_start":28,"line_end":28,"column_start":22,"column_end":33},"kind":{"Impl":{"id":14}},"from":{"krate":0,"index":10654},"to":{"krate":2,"index":13098}},{"span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\future\\future\\shared.rs","byte_start":45867,"byte_end":45877,"line_start":32,"line_end":32,"column_start":29,"column_end":39},"kind":{"Impl":{"id":15}},"from":{"krate":0,"index":360},"to":{"krate":2,"index":2679}},{"span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\future\\future\\shared.rs","byte_start":46078,"byte_end":46084,"line_start":40,"line_end":40,"column_start":29,"column_end":35},"kind":{"Impl":{"id":16}},"from":{"krate":0,"index":349},"to":{"krate":2,"index":3098}},{"span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\future\\future\\shared.rs","byte_start":46127,"byte_end":46133,"line_start":42,"line_end":42,"column_start":34,"column_end":40},"kind":{"Impl":{"id":17}},"from":{"krate":0,"index":349},"to":{"krate":2,"index":9685}},{"span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\future\\future\\shared.rs","byte_start":46391,"byte_end":46396,"line_start":51,"line_end":51,"column_start":34,"column_end":39},"kind":{"Impl":{"id":18}},"from":{"krate":0,"index":353},"to":{"krate":2,"index":9685}},{"span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\future\\future\\shared.rs","byte_start":46550,"byte_end":46560,"line_start":57,"line_end":57,"column_start":34,"column_end":44},"kind":{"Impl":{"id":19}},"from":{"krate":0,"index":360},"to":{"krate":2,"index":9685}},{"span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\future\\future\\shared.rs","byte_start":46792,"byte_end":46797,"line_start":68,"line_end":68,"column_start":27,"column_end":32},"kind":{"Impl":{"id":20}},"from":{"krate":0,"index":353},"to":{"krate":2,"index":3057}},{"span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\future\\future\\shared.rs","byte_start":46894,"byte_end":46899,"line_start":75,"line_end":75,"column_start":27,"column_end":32},"kind":{"Impl":{"id":21}},"from":{"krate":0,"index":353},"to":{"krate":2,"index":3069}},{"span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\future\\future\\shared.rs","byte_start":47143,"byte_end":47149,"line_start":89,"line_end":89,"column_start":19,"column_end":25},"kind":{"Impl":{"id":22}},"from":{"krate":0,"index":349},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\future\\future\\shared.rs","byte_start":47573,"byte_end":47579,"line_start":103,"line_end":103,"column_start":11,"column_end":17},"kind":{"Impl":{"id":23}},"from":{"krate":0,"index":349},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\future\\future\\shared.rs","byte_start":49645,"byte_end":49650,"line_start":160,"line_end":160,"column_start":11,"column_end":16},"kind":{"Impl":{"id":24}},"from":{"krate":0,"index":353},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\future\\future\\shared.rs","byte_start":51346,"byte_end":51352,"line_start":209,"line_end":209,"column_start":27,"column_end":33},"kind":{"Impl":{"id":25}},"from":{"krate":0,"index":349},"to":{"krate":16,"index":27}},{"span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\future\\future\\shared.rs","byte_start":51504,"byte_end":51510,"line_start":219,"line_end":219,"column_start":22,"column_end":28},"kind":{"Impl":{"id":26}},"from":{"krate":0,"index":349},"to":{"krate":2,"index":13098}},{"span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\future\\future\\shared.rs","byte_start":53099,"byte_end":53104,"line_start":267,"line_end":267,"column_start":23,"column_end":28},"kind":{"Impl":{"id":27}},"from":{"krate":0,"index":419},"to":{"krate":2,"index":3300}},{"span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\future\\future\\shared.rs","byte_start":54811,"byte_end":54817,"line_start":324,"line_end":324,"column_start":21,"column_end":27},"kind":{"Impl":{"id":28}},"from":{"krate":0,"index":349},"to":{"krate":2,"index":2679}},{"span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\future\\future\\shared.rs","byte_start":54976,"byte_end":54982,"line_start":333,"line_end":333,"column_start":20,"column_end":26},"kind":{"Impl":{"id":29}},"from":{"krate":0,"index":349},"to":{"krate":2,"index":3300}},{"span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\future\\future\\shared.rs","byte_start":55410,"byte_end":55418,"line_start":350,"line_end":350,"column_start":18,"column_end":26},"kind":{"Impl":{"id":30}},"from":{"krate":0,"index":357},"to":{"krate":18,"index":94}},{"span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\future\\future\\shared.rs","byte_start":55777,"byte_end":55787,"line_start":363,"line_end":363,"column_start":19,"column_end":29},"kind":{"Impl":{"id":31}},"from":{"krate":0,"index":360},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\future\\future\\mod.rs","byte_start":18634,"byte_end":18635,"line_start":119,"line_end":119,"column_start":31,"column_end":32},"kind":{"Impl":{"id":32}},"from":{"krate":0,"index":447},"to":{"krate":0,"index":448}},{"span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\future\\future\\mod.rs","byte_start":18766,"byte_end":18772,"line_start":123,"line_end":123,"column_start":22,"column_end":28},"kind":"SuperTrait","from":{"krate":2,"index":13098},"to":{"krate":0,"index":448}},{"span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\future\\try_future\\into_future.rs","byte_start":78213,"byte_end":78223,"line_start":16,"line_end":16,"column_start":11,"column_end":21},"kind":{"Impl":{"id":33}},"from":{"krate":0,"index":10690},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\future\\try_future\\into_future.rs","byte_start":78374,"byte_end":78384,"line_start":23,"line_end":23,"column_start":52,"column_end":62},"kind":{"Impl":{"id":34}},"from":{"krate":0,"index":10690},"to":{"krate":16,"index":27}},{"span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\future\\try_future\\into_future.rs","byte_start":78507,"byte_end":78517,"line_start":29,"line_end":29,"column_start":33,"column_end":43},"kind":{"Impl":{"id":35}},"from":{"krate":0,"index":10690},"to":{"krate":2,"index":13098}},{"span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\future\\try_future\\try_flatten.rs","byte_start":79226,"byte_end":79236,"line_start":20,"line_end":20,"column_start":18,"column_end":28},"kind":{"Impl":{"id":36}},"from":{"krate":0,"index":10726},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\future\\try_future\\try_flatten.rs","byte_start":79366,"byte_end":79376,"line_start":26,"line_end":26,"column_start":27,"column_end":37},"kind":{"Impl":{"id":37}},"from":{"krate":0,"index":10726},"to":{"krate":16,"index":27}},{"span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\future\\try_future\\try_flatten.rs","byte_start":79619,"byte_end":79629,"line_start":39,"line_end":39,"column_start":22,"column_end":32},"kind":{"Impl":{"id":38}},"from":{"krate":0,"index":10726},"to":{"krate":2,"index":13098}},{"span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\future\\try_future\\try_flatten.rs","byte_start":80582,"byte_end":80592,"line_start":67,"line_end":67,"column_start":27,"column_end":37},"kind":{"Impl":{"id":39}},"from":{"krate":0,"index":10726},"to":{"krate":16,"index":110}},{"span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\future\\try_future\\try_flatten.rs","byte_start":80835,"byte_end":80845,"line_start":80,"line_end":80,"column_start":22,"column_end":32},"kind":{"Impl":{"id":40}},"from":{"krate":0,"index":10726},"to":{"krate":16,"index":96}},{"span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\future\\try_future\\try_flatten.rs","byte_start":81882,"byte_end":81892,"line_start":111,"line_end":111,"column_start":32,"column_end":42},"kind":{"Impl":{"id":41}},"from":{"krate":0,"index":10726},"to":{"krate":19,"index":17}},{"span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\future\\try_future\\try_flatten_err.rs","byte_start":84169,"byte_end":84182,"line_start":17,"line_end":17,"column_start":18,"column_end":31},"kind":{"Impl":{"id":42}},"from":{"krate":0,"index":10773},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\future\\try_future\\try_flatten_err.rs","byte_start":84312,"byte_end":84325,"line_start":23,"line_end":23,"column_start":27,"column_end":40},"kind":{"Impl":{"id":43}},"from":{"krate":0,"index":10773},"to":{"krate":16,"index":27}},{"span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\future\\try_future\\try_flatten_err.rs","byte_start":84568,"byte_end":84581,"line_start":36,"line_end":36,"column_start":22,"column_end":35},"kind":{"Impl":{"id":44}},"from":{"krate":0,"index":10773},"to":{"krate":2,"index":13098}},{"span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\future\\try_future\\mod.rs","byte_start":60759,"byte_end":60762,"line_start":134,"line_end":134,"column_start":48,"column_end":51},"kind":{"Impl":{"id":45}},"from":{"krate":0,"index":740},"to":{"krate":0,"index":741}},{"span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\future\\try_future\\mod.rs","byte_start":60845,"byte_end":60854,"line_start":137,"line_end":137,"column_start":25,"column_end":34},"kind":"SuperTrait","from":{"krate":16,"index":44},"to":{"krate":0,"index":741}},{"span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\future\\lazy.rs","byte_start":85890,"byte_end":85894,"line_start":14,"line_end":14,"column_start":19,"column_end":23},"kind":{"Impl":{"id":46}},"from":{"krate":0,"index":11719},"to":{"krate":2,"index":3098}},{"span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\future\\lazy.rs","byte_start":86490,"byte_end":86494,"line_start":42,"line_end":42,"column_start":28,"column_end":32},"kind":{"Impl":{"id":47}},"from":{"krate":0,"index":11719},"to":{"krate":16,"index":27}},{"span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\future\\lazy.rs","byte_start":86638,"byte_end":86642,"line_start":51,"line_end":51,"column_start":23,"column_end":27},"kind":{"Impl":{"id":48}},"from":{"krate":0,"index":11719},"to":{"krate":2,"index":13098}},{"span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\future\\pending.rs","byte_start":87245,"byte_end":87252,"line_start":14,"line_end":14,"column_start":25,"column_end":32},"kind":{"Impl":{"id":49}},"from":{"krate":0,"index":11725},"to":{"krate":16,"index":27}},{"span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\future\\pending.rs","byte_start":87813,"byte_end":87820,"line_start":40,"line_end":40,"column_start":20,"column_end":27},"kind":{"Impl":{"id":50}},"from":{"krate":0,"index":11725},"to":{"krate":2,"index":13098}},{"span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\future\\pending.rs","byte_start":87965,"byte_end":87972,"line_start":48,"line_end":48,"column_start":19,"column_end":26},"kind":{"Impl":{"id":51}},"from":{"krate":0,"index":11725},"to":{"krate":2,"index":3098}},{"span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\future\\pending.rs","byte_start":87998,"byte_end":88005,"line_start":50,"line_end":50,"column_start":19,"column_end":26},"kind":{"Impl":{"id":52}},"from":{"krate":0,"index":11725},"to":{"krate":2,"index":2679}},{"span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\future\\maybe_done.rs","byte_start":88759,"byte_end":88768,"line_start":24,"line_end":24,"column_start":37,"column_end":46},"kind":{"Impl":{"id":53}},"from":{"krate":0,"index":11731},"to":{"krate":2,"index":3098}},{"span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\future\\maybe_done.rs","byte_start":89371,"byte_end":89380,"line_start":47,"line_end":47,"column_start":19,"column_end":28},"kind":{"Impl":{"id":54}},"from":{"krate":0,"index":11731},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\future\\maybe_done.rs","byte_start":90478,"byte_end":90487,"line_start":79,"line_end":79,"column_start":35,"column_end":44},"kind":{"Impl":{"id":55}},"from":{"krate":0,"index":11731},"to":{"krate":16,"index":27}},{"span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\future\\maybe_done.rs","byte_start":90688,"byte_end":90697,"line_start":88,"line_end":88,"column_start":30,"column_end":39},"kind":{"Impl":{"id":56}},"from":{"krate":0,"index":11731},"to":{"krate":2,"index":13098}},{"span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\future\\try_maybe_done.rs","byte_start":92017,"byte_end":92029,"line_start":25,"line_end":25,"column_start":40,"column_end":52},"kind":{"Impl":{"id":57}},"from":{"krate":0,"index":11744},"to":{"krate":2,"index":3098}},{"span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\future\\try_maybe_done.rs","byte_start":92255,"byte_end":92267,"line_start":32,"line_end":32,"column_start":22,"column_end":34},"kind":{"Impl":{"id":58}},"from":{"krate":0,"index":11744},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\future\\try_maybe_done.rs","byte_start":93380,"byte_end":93392,"line_start":64,"line_end":64,"column_start":38,"column_end":50},"kind":{"Impl":{"id":59}},"from":{"krate":0,"index":11744},"to":{"krate":16,"index":27}},{"span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\future\\try_maybe_done.rs","byte_start":93596,"byte_end":93608,"line_start":73,"line_end":73,"column_start":33,"column_end":45},"kind":{"Impl":{"id":60}},"from":{"krate":0,"index":11744},"to":{"krate":2,"index":13098}},{"span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\future\\option.rs","byte_start":95258,"byte_end":95270,"line_start":34,"line_end":34,"column_start":21,"column_end":33},"kind":{"Impl":{"id":61}},"from":{"krate":0,"index":11757},"to":{"krate":2,"index":3035}},{"span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\future\\option.rs","byte_start":95368,"byte_end":95380,"line_start":40,"line_end":40,"column_start":28,"column_end":40},"kind":{"Impl":{"id":62}},"from":{"krate":0,"index":11757},"to":{"krate":2,"index":13098}},{"span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\future\\option.rs","byte_start":95694,"byte_end":95706,"line_start":51,"line_end":51,"column_start":38,"column_end":50},"kind":{"Impl":{"id":63}},"from":{"krate":0,"index":11757},"to":{"krate":16,"index":27}},{"span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\future\\option.rs","byte_start":95893,"byte_end":95905,"line_start":60,"line_end":60,"column_start":29,"column_end":41},"kind":{"Impl":{"id":64}},"from":{"krate":0,"index":11757},"to":{"krate":2,"index":2963}},{"span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\future\\poll_fn.rs","byte_start":96343,"byte_end":96349,"line_start":15,"line_end":15,"column_start":19,"column_end":25},"kind":{"Impl":{"id":65}},"from":{"krate":0,"index":1065},"to":{"krate":2,"index":3098}},{"span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\future\\poll_fn.rs","byte_start":97043,"byte_end":97049,"line_start":43,"line_end":43,"column_start":24,"column_end":30},"kind":{"Impl":{"id":66}},"from":{"krate":0,"index":1065},"to":{"krate":2,"index":9685}},{"span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\future\\poll_fn.rs","byte_start":97191,"byte_end":97197,"line_start":49,"line_end":49,"column_start":23,"column_end":29},"kind":{"Impl":{"id":67}},"from":{"krate":0,"index":1065},"to":{"krate":2,"index":13098}},{"span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\future\\poll_immediate.rs","byte_start":97925,"byte_end":97938,"line_start":19,"line_end":19,"column_start":23,"column_end":36},"kind":{"Impl":{"id":68}},"from":{"krate":0,"index":11796},"to":{"krate":2,"index":13098}},{"span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\future\\poll_immediate.rs","byte_start":98504,"byte_end":98517,"line_start":40,"line_end":40,"column_start":33,"column_end":46},"kind":{"Impl":{"id":69}},"from":{"krate":0,"index":11796},"to":{"krate":16,"index":27}},{"span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\future\\poll_immediate.rs","byte_start":99537,"byte_end":99550,"line_start":70,"line_end":70,"column_start":23,"column_end":36},"kind":{"Impl":{"id":70}},"from":{"krate":0,"index":11796},"to":{"krate":16,"index":96}},{"span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\future\\ready.rs","byte_start":101722,"byte_end":101727,"line_start":11,"line_end":11,"column_start":9,"column_end":14},"kind":{"Impl":{"id":71}},"from":{"krate":0,"index":11835},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\future\\ready.rs","byte_start":101906,"byte_end":101911,"line_start":19,"line_end":19,"column_start":19,"column_end":24},"kind":{"Impl":{"id":72}},"from":{"krate":0,"index":11835},"to":{"krate":2,"index":3098}},{"span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\future\\ready.rs","byte_start":101943,"byte_end":101948,"line_start":21,"line_end":21,"column_start":25,"column_end":30},"kind":{"Impl":{"id":73}},"from":{"krate":0,"index":11835},"to":{"krate":16,"index":27}},{"span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\future\\ready.rs","byte_start":102045,"byte_end":102050,"line_start":27,"line_end":27,"column_start":20,"column_end":25},"kind":{"Impl":{"id":74}},"from":{"krate":0,"index":11835},"to":{"krate":2,"index":13098}},{"span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\future\\join_all.rs","byte_start":110037,"byte_end":110044,"line_start":50,"line_end":50,"column_start":24,"column_end":31},"kind":{"Impl":{"id":75}},"from":{"krate":0,"index":1320},"to":{"krate":2,"index":9685}},{"span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\future\\join_all.rs","byte_start":112805,"byte_end":112812,"line_start":131,"line_end":131,"column_start":20,"column_end":27},"kind":{"Impl":{"id":76}},"from":{"krate":0,"index":1320},"to":{"krate":2,"index":13098}},{"span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\future\\join_all.rs","byte_start":113800,"byte_end":113807,"line_start":163,"line_end":163,"column_start":37,"column_end":44},"kind":{"Impl":{"id":77}},"from":{"krate":0,"index":1320},"to":{"krate":2,"index":7786}},{"span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\future\\select.rs","byte_start":114303,"byte_end":114309,"line_start":14,"line_end":14,"column_start":36,"column_end":42},"kind":{"Impl":{"id":78}},"from":{"krate":0,"index":12189},"to":{"krate":2,"index":3098}},{"span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\future\\select.rs","byte_start":116745,"byte_end":116751,"line_start":94,"line_end":94,"column_start":23,"column_end":29},"kind":{"Impl":{"id":79}},"from":{"krate":0,"index":12189},"to":{"krate":2,"index":13098}},{"span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\future\\select.rs","byte_start":117455,"byte_end":117461,"line_start":116,"line_end":116,"column_start":28,"column_end":34},"kind":{"Impl":{"id":80}},"from":{"krate":0,"index":12189},"to":{"krate":16,"index":27}},{"span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\future\\select_all.rs","byte_start":118024,"byte_end":118033,"line_start":17,"line_end":17,"column_start":28,"column_end":37},"kind":{"Impl":{"id":81}},"from":{"krate":0,"index":12197},"to":{"krate":2,"index":3098}},{"span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\future\\select_all.rs","byte_start":119040,"byte_end":119049,"line_start":44,"line_end":44,"column_start":11,"column_end":20},"kind":{"Impl":{"id":82}},"from":{"krate":0,"index":12197},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\future\\select_all.rs","byte_start":119232,"byte_end":119241,"line_start":51,"line_end":51,"column_start":38,"column_end":47},"kind":{"Impl":{"id":83}},"from":{"krate":0,"index":12197},"to":{"krate":2,"index":13098}},{"span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\future\\select_all.rs","byte_start":119911,"byte_end":119920,"line_start":70,"line_end":70,"column_start":49,"column_end":58},"kind":{"Impl":{"id":84}},"from":{"krate":0,"index":12197},"to":{"krate":2,"index":7786}},{"span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\future\\try_join_all.rs","byte_start":128528,"byte_end":128538,"line_start":37,"line_end":37,"column_start":24,"column_end":34},"kind":{"Impl":{"id":85}},"from":{"krate":0,"index":1583},"to":{"krate":2,"index":9685}},{"span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\future\\try_join_all.rs","byte_start":130368,"byte_end":130378,"line_start":97,"line_end":97,"column_start":20,"column_end":30},"kind":{"Impl":{"id":86}},"from":{"krate":0,"index":1583},"to":{"krate":2,"index":13098}},{"span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\future\\try_join_all.rs","byte_start":131526,"byte_end":131536,"line_start":133,"line_end":133,"column_start":40,"column_end":50},"kind":{"Impl":{"id":87}},"from":{"krate":0,"index":1583},"to":{"krate":2,"index":7786}},{"span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\future\\try_select.rs","byte_start":132018,"byte_end":132027,"line_start":13,"line_end":13,"column_start":36,"column_end":45},"kind":{"Impl":{"id":88}},"from":{"krate":0,"index":12525},"to":{"krate":2,"index":3098}},{"span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\future\\try_select.rs","byte_start":133866,"byte_end":133875,"line_start":61,"line_end":61,"column_start":37,"column_end":46},"kind":{"Impl":{"id":89}},"from":{"krate":0,"index":12525},"to":{"krate":2,"index":13098}},{"span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\future\\select_ok.rs","byte_start":135237,"byte_end":135245,"line_start":17,"line_end":17,"column_start":28,"column_end":36},"kind":{"Impl":{"id":90}},"from":{"krate":0,"index":12533},"to":{"krate":2,"index":3098}},{"span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\future\\select_ok.rs","byte_start":136323,"byte_end":136331,"line_start":45,"line_end":45,"column_start":41,"column_end":49},"kind":{"Impl":{"id":91}},"from":{"krate":0,"index":12533},"to":{"krate":2,"index":13098}},{"span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\future\\select_ok.rs","byte_start":137762,"byte_end":137770,"line_start":81,"line_end":81,"column_start":52,"column_end":60},"kind":{"Impl":{"id":92}},"from":{"krate":0,"index":12533},"to":{"krate":2,"index":7786}},{"span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\future\\either.rs","byte_start":138749,"byte_end":138755,"line_start":35,"line_end":35,"column_start":12,"column_end":18},"kind":{"Impl":{"id":93}},"from":{"krate":0,"index":12539},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\future\\either.rs","byte_start":139094,"byte_end":139100,"line_start":46,"line_end":46,"column_start":15,"column_end":21},"kind":{"Impl":{"id":94}},"from":{"krate":0,"index":12539},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\future\\either.rs","byte_start":139485,"byte_end":139491,"line_start":58,"line_end":58,"column_start":15,"column_end":21},"kind":{"Impl":{"id":95}},"from":{"krate":0,"index":12539},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\future\\either.rs","byte_start":139872,"byte_end":139878,"line_start":70,"line_end":70,"column_start":9,"column_end":15},"kind":{"Impl":{"id":96}},"from":{"krate":0,"index":12539},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\future\\either.rs","byte_start":140119,"byte_end":140125,"line_start":80,"line_end":80,"column_start":23,"column_end":29},"kind":{"Impl":{"id":97}},"from":{"krate":0,"index":12539},"to":{"krate":2,"index":13098}},{"span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\future\\either.rs","byte_start":140464,"byte_end":140470,"line_start":95,"line_end":95,"column_start":28,"column_end":34},"kind":{"Impl":{"id":98}},"from":{"krate":0,"index":12539},"to":{"krate":16,"index":27}},{"span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\future\\either.rs","byte_start":140746,"byte_end":140752,"line_start":108,"line_end":108,"column_start":23,"column_end":29},"kind":{"Impl":{"id":99}},"from":{"krate":0,"index":12539},"to":{"krate":16,"index":96}},{"span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\future\\either.rs","byte_start":141287,"byte_end":141293,"line_start":130,"line_end":130,"column_start":28,"column_end":34},"kind":{"Impl":{"id":100}},"from":{"krate":0,"index":12539},"to":{"krate":16,"index":110}},{"span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\future\\either.rs","byte_start":141600,"byte_end":141606,"line_start":144,"line_end":144,"column_start":33,"column_end":39},"kind":{"Impl":{"id":101}},"from":{"krate":0,"index":12539},"to":{"krate":19,"index":17}},{"span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\future\\either.rs","byte_start":142965,"byte_end":142971,"line_start":191,"line_end":191,"column_start":30,"column_end":36},"kind":{"Impl":{"id":102}},"from":{"krate":0,"index":12539},"to":{"krate":22,"index":39}},{"span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\future\\either.rs","byte_start":143772,"byte_end":143778,"line_start":219,"line_end":219,"column_start":31,"column_end":37},"kind":{"Impl":{"id":103}},"from":{"krate":0,"index":12539},"to":{"krate":22,"index":42}},{"span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\future\\either.rs","byte_start":145085,"byte_end":145091,"line_start":261,"line_end":261,"column_start":30,"column_end":36},"kind":{"Impl":{"id":104}},"from":{"krate":0,"index":12539},"to":{"krate":22,"index":47}},{"span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\future\\either.rs","byte_start":145521,"byte_end":145527,"line_start":278,"line_end":278,"column_start":33,"column_end":39},"kind":{"Impl":{"id":105}},"from":{"krate":0,"index":12539},"to":{"krate":22,"index":49}},{"span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\stream\\chain.rs","byte_start":209062,"byte_end":209067,"line_start":20,"line_end":20,"column_start":16,"column_end":21},"kind":{"Impl":{"id":106}},"from":{"krate":0,"index":12556},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\stream\\chain.rs","byte_start":209293,"byte_end":209298,"line_start":30,"line_end":30,"column_start":32,"column_end":37},"kind":{"Impl":{"id":107}},"from":{"krate":0,"index":12556},"to":{"krate":16,"index":110}},{"span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\stream\\chain.rs","byte_start":209507,"byte_end":209512,"line_start":40,"line_end":40,"column_start":27,"column_end":32},"kind":{"Impl":{"id":108}},"from":{"krate":0,"index":12556},"to":{"krate":16,"index":96}},{"span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\stream\\collect.rs","byte_start":211108,"byte_end":211115,"line_start":20,"line_end":20,"column_start":30,"column_end":37},"kind":{"Impl":{"id":109}},"from":{"krate":0,"index":12605},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\stream\\collect.rs","byte_start":211380,"byte_end":211387,"line_start":30,"line_end":30,"column_start":29,"column_end":36},"kind":{"Impl":{"id":110}},"from":{"krate":0,"index":12605},"to":{"krate":16,"index":27}},{"span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\stream\\collect.rs","byte_start":211565,"byte_end":211572,"line_start":40,"line_end":40,"column_start":24,"column_end":31},"kind":{"Impl":{"id":111}},"from":{"krate":0,"index":12605},"to":{"krate":2,"index":13098}},{"span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\stream\\unzip.rs","byte_start":212598,"byte_end":212603,"line_start":21,"line_end":21,"column_start":50,"column_end":55},"kind":{"Impl":{"id":112}},"from":{"krate":0,"index":12654},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\stream\\unzip.rs","byte_start":212997,"byte_end":213002,"line_start":32,"line_end":32,"column_start":46,"column_end":51},"kind":{"Impl":{"id":113}},"from":{"krate":0,"index":12654},"to":{"krate":16,"index":27}},{"span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\stream\\unzip.rs","byte_start":213252,"byte_end":213257,"line_start":43,"line_end":43,"column_start":41,"column_end":46},"kind":{"Impl":{"id":114}},"from":{"krate":0,"index":12654},"to":{"krate":2,"index":13098}},{"span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\stream\\concat.rs","byte_start":214382,"byte_end":214388,"line_start":19,"line_end":19,"column_start":10,"column_end":16},"kind":{"Impl":{"id":115}},"from":{"krate":0,"index":12716},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\stream\\concat.rs","byte_start":214608,"byte_end":214614,"line_start":29,"line_end":29,"column_start":21,"column_end":27},"kind":{"Impl":{"id":116}},"from":{"krate":0,"index":12716},"to":{"krate":2,"index":13098}},{"span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\stream\\concat.rs","byte_start":215322,"byte_end":215328,"line_start":54,"line_end":54,"column_start":26,"column_end":32},"kind":{"Impl":{"id":117}},"from":{"krate":0,"index":12716},"to":{"krate":16,"index":27}},{"span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\stream\\count.rs","byte_start":216054,"byte_end":216059,"line_start":19,"line_end":19,"column_start":25,"column_end":30},"kind":{"Impl":{"id":118}},"from":{"krate":0,"index":12756},"to":{"krate":2,"index":9685}},{"span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\stream\\count.rs","byte_start":216280,"byte_end":216285,"line_start":28,"line_end":28,"column_start":18,"column_end":23},"kind":{"Impl":{"id":119}},"from":{"krate":0,"index":12756},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\stream\\count.rs","byte_start":216417,"byte_end":216422,"line_start":34,"line_end":34,"column_start":39,"column_end":44},"kind":{"Impl":{"id":120}},"from":{"krate":0,"index":12756},"to":{"krate":16,"index":27}},{"span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\stream\\count.rs","byte_start":216540,"byte_end":216545,"line_start":40,"line_end":40,"column_start":29,"column_end":34},"kind":{"Impl":{"id":121}},"from":{"krate":0,"index":12756},"to":{"krate":2,"index":13098}},{"span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\stream\\cycle.rs","byte_start":217351,"byte_end":217356,"line_start":19,"line_end":19,"column_start":10,"column_end":15},"kind":{"Impl":{"id":122}},"from":{"krate":0,"index":12793},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\stream\\cycle.rs","byte_start":217512,"byte_end":217517,"line_start":28,"line_end":28,"column_start":21,"column_end":26},"kind":{"Impl":{"id":123}},"from":{"krate":0,"index":12793},"to":{"krate":16,"index":96}},{"span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\stream\\cycle.rs","byte_start":218266,"byte_end":218271,"line_start":56,"line_end":56,"column_start":26,"column_end":31},"kind":{"Impl":{"id":124}},"from":{"krate":0,"index":12793},"to":{"krate":16,"index":110}},{"span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\stream\\enumerate.rs","byte_start":219019,"byte_end":219028,"line_start":20,"line_end":20,"column_start":18,"column_end":27},"kind":{"Impl":{"id":125}},"from":{"krate":0,"index":12833},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\stream\\enumerate.rs","byte_start":219214,"byte_end":219223,"line_start":28,"line_end":28,"column_start":48,"column_end":57},"kind":{"Impl":{"id":126}},"from":{"krate":0,"index":12833},"to":{"krate":16,"index":110}},{"span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\stream\\enumerate.rs","byte_start":219341,"byte_end":219350,"line_start":34,"line_end":34,"column_start":29,"column_end":38},"kind":{"Impl":{"id":127}},"from":{"krate":0,"index":12833},"to":{"krate":16,"index":96}},{"span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\stream\\enumerate.rs","byte_start":220003,"byte_end":220012,"line_start":57,"line_end":57,"column_start":30,"column_end":39},"kind":{"Impl":{"id":128}},"from":{"krate":0,"index":12833},"to":{"krate":19,"index":17}},{"span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\stream\\filter.rs","byte_start":220791,"byte_end":220797,"line_start":27,"line_end":27,"column_start":33,"column_end":39},"kind":{"Impl":{"id":129}},"from":{"krate":0,"index":12881},"to":{"krate":2,"index":9685}},{"span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\stream\\filter.rs","byte_start":221270,"byte_end":221276,"line_start":43,"line_end":43,"column_start":18,"column_end":24},"kind":{"Impl":{"id":130}},"from":{"krate":0,"index":12881},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\stream\\filter.rs","byte_start":221599,"byte_end":221605,"line_start":56,"line_end":56,"column_start":34,"column_end":40},"kind":{"Impl":{"id":131}},"from":{"krate":0,"index":12881},"to":{"krate":16,"index":110}},{"span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\stream\\filter.rs","byte_start":221942,"byte_end":221948,"line_start":68,"line_end":68,"column_start":29,"column_end":35},"kind":{"Impl":{"id":132}},"from":{"krate":0,"index":12881},"to":{"krate":16,"index":96}},{"span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\stream\\filter.rs","byte_start":223327,"byte_end":223333,"line_start":108,"line_end":108,"column_start":38,"column_end":44},"kind":{"Impl":{"id":133}},"from":{"krate":0,"index":12881},"to":{"krate":19,"index":17}},{"span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\stream\\filter_map.rs","byte_start":224120,"byte_end":224129,"line_start":24,"line_end":24,"column_start":33,"column_end":42},"kind":{"Impl":{"id":134}},"from":{"krate":0,"index":12950},"to":{"krate":2,"index":9685}},{"span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\stream\\filter_map.rs","byte_start":224426,"byte_end":224435,"line_start":37,"line_end":37,"column_start":18,"column_end":27},"kind":{"Impl":{"id":135}},"from":{"krate":0,"index":12950},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\stream\\filter_map.rs","byte_start":224702,"byte_end":224711,"line_start":50,"line_end":50,"column_start":37,"column_end":46},"kind":{"Impl":{"id":136}},"from":{"krate":0,"index":12950},"to":{"krate":16,"index":110}},{"span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\stream\\filter_map.rs","byte_start":224978,"byte_end":224987,"line_start":61,"line_end":61,"column_start":32,"column_end":41},"kind":{"Impl":{"id":137}},"from":{"krate":0,"index":12950},"to":{"krate":16,"index":96}},{"span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\stream\\filter_map.rs","byte_start":226405,"byte_end":226414,"line_start":102,"line_end":102,"column_start":38,"column_end":47},"kind":{"Impl":{"id":138}},"from":{"krate":0,"index":12950},"to":{"krate":19,"index":17}},{"span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\stream\\flatten.rs","byte_start":227089,"byte_end":227096,"line_start":21,"line_end":21,"column_start":13,"column_end":20},"kind":{"Impl":{"id":139}},"from":{"krate":0,"index":13015},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\stream\\flatten.rs","byte_start":227265,"byte_end":227272,"line_start":29,"line_end":29,"column_start":26,"column_end":33},"kind":{"Impl":{"id":140}},"from":{"krate":0,"index":13015},"to":{"krate":16,"index":110}},{"span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\stream\\flatten.rs","byte_start":227464,"byte_end":227471,"line_start":39,"line_end":39,"column_start":21,"column_end":28},"kind":{"Impl":{"id":141}},"from":{"krate":0,"index":13015},"to":{"krate":16,"index":96}},{"span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\stream\\flatten.rs","byte_start":228293,"byte_end":228300,"line_start":66,"line_end":66,"column_start":30,"column_end":37},"kind":{"Impl":{"id":142}},"from":{"krate":0,"index":13015},"to":{"krate":19,"index":17}},{"span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\stream\\fold.rs","byte_start":228985,"byte_end":228989,"line_start":22,"line_end":22,"column_start":36,"column_end":40},"kind":{"Impl":{"id":143}},"from":{"krate":0,"index":13135},"to":{"krate":2,"index":9685}},{"span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\stream\\fold.rs","byte_start":229345,"byte_end":229349,"line_start":37,"line_end":37,"column_start":21,"column_end":25},"kind":{"Impl":{"id":144}},"from":{"krate":0,"index":13135},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\stream\\fold.rs","byte_start":229610,"byte_end":229614,"line_start":48,"line_end":48,"column_start":37,"column_end":41},"kind":{"Impl":{"id":145}},"from":{"krate":0,"index":13135},"to":{"krate":16,"index":27}},{"span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\stream\\fold.rs","byte_start":229849,"byte_end":229853,"line_start":59,"line_end":59,"column_start":32,"column_end":36},"kind":{"Impl":{"id":146}},"from":{"krate":0,"index":13135},"to":{"krate":2,"index":13098}},{"span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\stream\\any.rs","byte_start":231442,"byte_end":231445,"line_start":22,"line_end":22,"column_start":33,"column_end":36},"kind":{"Impl":{"id":147}},"from":{"krate":0,"index":13204},"to":{"krate":2,"index":9685}},{"span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\stream\\any.rs","byte_start":231775,"byte_end":231778,"line_start":36,"line_end":36,"column_start":18,"column_end":21},"kind":{"Impl":{"id":148}},"from":{"krate":0,"index":13204},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\stream\\any.rs","byte_start":232031,"byte_end":232034,"line_start":47,"line_end":47,"column_start":34,"column_end":37},"kind":{"Impl":{"id":149}},"from":{"krate":0,"index":13204},"to":{"krate":16,"index":27}},{"span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\stream\\any.rs","byte_start":232263,"byte_end":232266,"line_start":58,"line_end":58,"column_start":29,"column_end":32},"kind":{"Impl":{"id":150}},"from":{"krate":0,"index":13204},"to":{"krate":2,"index":13098}},{"span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\stream\\all.rs","byte_start":234018,"byte_end":234021,"line_start":22,"line_end":22,"column_start":33,"column_end":36},"kind":{"Impl":{"id":151}},"from":{"krate":0,"index":13265},"to":{"krate":2,"index":9685}},{"span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\stream\\all.rs","byte_start":234351,"byte_end":234354,"line_start":36,"line_end":36,"column_start":18,"column_end":21},"kind":{"Impl":{"id":152}},"from":{"krate":0,"index":13265},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\stream\\all.rs","byte_start":234606,"byte_end":234609,"line_start":47,"line_end":47,"column_start":34,"column_end":37},"kind":{"Impl":{"id":153}},"from":{"krate":0,"index":13265},"to":{"krate":16,"index":27}},{"span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\stream\\all.rs","byte_start":234838,"byte_end":234841,"line_start":58,"line_end":58,"column_start":29,"column_end":32},"kind":{"Impl":{"id":154}},"from":{"krate":0,"index":13265},"to":{"krate":2,"index":13098}},{"span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\stream\\forward.rs","byte_start":236677,"byte_end":236684,"line_start":24,"line_end":24,"column_start":20,"column_end":27},"kind":{"Impl":{"id":155}},"from":{"krate":0,"index":13326},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\stream\\forward.rs","byte_start":236884,"byte_end":236891,"line_start":30,"line_end":30,"column_start":39,"column_end":46},"kind":{"Impl":{"id":156}},"from":{"krate":0,"index":13326},"to":{"krate":16,"index":27}},{"span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\stream\\forward.rs","byte_start":237093,"byte_end":237100,"line_start":40,"line_end":40,"column_start":34,"column_end":41},"kind":{"Impl":{"id":157}},"from":{"krate":0,"index":13326},"to":{"krate":2,"index":13098}},{"span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\stream\\for_each.rs","byte_start":238905,"byte_end":238912,"line_start":21,"line_end":21,"column_start":33,"column_end":40},"kind":{"Impl":{"id":158}},"from":{"krate":0,"index":13449},"to":{"krate":2,"index":9685}},{"span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\stream\\for_each.rs","byte_start":239205,"byte_end":239212,"line_start":34,"line_end":34,"column_start":18,"column_end":25},"kind":{"Impl":{"id":159}},"from":{"krate":0,"index":13449},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\stream\\for_each.rs","byte_start":239443,"byte_end":239450,"line_start":45,"line_end":45,"column_start":34,"column_end":41},"kind":{"Impl":{"id":160}},"from":{"krate":0,"index":13449},"to":{"krate":16,"index":27}},{"span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\stream\\for_each.rs","byte_start":239689,"byte_end":239696,"line_start":56,"line_end":56,"column_start":29,"column_end":36},"kind":{"Impl":{"id":161}},"from":{"krate":0,"index":13449},"to":{"krate":2,"index":13098}},{"span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\stream\\fuse.rs","byte_start":240797,"byte_end":240801,"line_start":20,"line_end":20,"column_start":10,"column_end":14},"kind":{"Impl":{"id":162}},"from":{"krate":0,"index":13506},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\stream\\fuse.rs","byte_start":241298,"byte_end":241302,"line_start":37,"line_end":37,"column_start":33,"column_end":37},"kind":{"Impl":{"id":163}},"from":{"krate":0,"index":13506},"to":{"krate":16,"index":110}},{"span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\stream\\fuse.rs","byte_start":241400,"byte_end":241404,"line_start":43,"line_end":43,"column_start":28,"column_end":32},"kind":{"Impl":{"id":164}},"from":{"krate":0,"index":13506},"to":{"krate":16,"index":96}},{"span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\stream\\fuse.rs","byte_start":242090,"byte_end":242094,"line_start":71,"line_end":71,"column_start":51,"column_end":55},"kind":{"Impl":{"id":165}},"from":{"krate":0,"index":13506},"to":{"krate":19,"index":17}},{"span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\stream\\into_future.rs","byte_start":242606,"byte_end":242618,"line_start":15,"line_end":15,"column_start":26,"column_end":38},"kind":{"Impl":{"id":166}},"from":{"krate":0,"index":13554},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\stream\\into_future.rs","byte_start":245108,"byte_end":245120,"line_start":73,"line_end":73,"column_start":42,"column_end":54},"kind":{"Impl":{"id":167}},"from":{"krate":0,"index":13554},"to":{"krate":16,"index":27}},{"span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\stream\\into_future.rs","byte_start":245240,"byte_end":245252,"line_start":79,"line_end":79,"column_start":37,"column_end":49},"kind":{"Impl":{"id":168}},"from":{"krate":0,"index":13554},"to":{"krate":2,"index":13098}},{"span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\stream\\map.rs","byte_start":246137,"byte_end":246140,"line_start":22,"line_end":22,"column_start":28,"column_end":31},"kind":{"Impl":{"id":169}},"from":{"krate":0,"index":13638},"to":{"krate":2,"index":9685}},{"span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\stream\\map.rs","byte_start":246329,"byte_end":246332,"line_start":31,"line_end":31,"column_start":13,"column_end":16},"kind":{"Impl":{"id":170}},"from":{"krate":0,"index":13638},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\stream\\map.rs","byte_start":246501,"byte_end":246504,"line_start":39,"line_end":39,"column_start":29,"column_end":32},"kind":{"Impl":{"id":171}},"from":{"krate":0,"index":13638},"to":{"krate":16,"index":110}},{"span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\stream\\map.rs","byte_start":246672,"byte_end":246675,"line_start":49,"line_end":49,"column_start":24,"column_end":27},"kind":{"Impl":{"id":172}},"from":{"krate":0,"index":13638},"to":{"krate":16,"index":96}},{"span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\stream\\map.rs","byte_start":247217,"byte_end":247220,"line_start":69,"line_end":69,"column_start":34,"column_end":37},"kind":{"Impl":{"id":173}},"from":{"krate":0,"index":13638},"to":{"krate":19,"index":17}},{"span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\stream\\next.rs","byte_start":247787,"byte_end":247791,"line_start":14,"line_end":14,"column_start":36,"column_end":40},"kind":{"Impl":{"id":174}},"from":{"krate":0,"index":13784},"to":{"krate":2,"index":3098}},{"span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\stream\\next.rs","byte_start":247842,"byte_end":247846,"line_start":16,"line_end":16,"column_start":39,"column_end":43},"kind":{"Impl":{"id":175}},"from":{"krate":0,"index":13784},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\stream\\next.rs","byte_start":247997,"byte_end":248001,"line_start":22,"line_end":22,"column_start":56,"column_end":60},"kind":{"Impl":{"id":176}},"from":{"krate":0,"index":13784},"to":{"krate":16,"index":27}},{"span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\stream\\next.rs","byte_start":248140,"byte_end":248144,"line_start":28,"line_end":28,"column_start":46,"column_end":50},"kind":{"Impl":{"id":177}},"from":{"krate":0,"index":13784},"to":{"krate":2,"index":13098}},{"span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\stream\\select_next_some.rs","byte_start":248795,"byte_end":248809,"line_start":16,"line_end":16,"column_start":22,"column_end":36},"kind":{"Impl":{"id":178}},"from":{"krate":0,"index":13792},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\stream\\select_next_some.rs","byte_start":248960,"byte_end":248974,"line_start":22,"line_end":22,"column_start":56,"column_end":70},"kind":{"Impl":{"id":179}},"from":{"krate":0,"index":13792},"to":{"krate":16,"index":27}},{"span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\stream\\select_next_some.rs","byte_start":249118,"byte_end":249132,"line_start":28,"line_end":28,"column_start":51,"column_end":65},"kind":{"Impl":{"id":180}},"from":{"krate":0,"index":13792},"to":{"krate":2,"index":13098}},{"span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\stream\\peek.rs","byte_start":250443,"byte_end":250451,"line_start":29,"line_end":29,"column_start":18,"column_end":26},"kind":{"Impl":{"id":181}},"from":{"krate":0,"index":13800},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\stream\\peek.rs","byte_start":255948,"byte_end":255956,"line_start":189,"line_end":189,"column_start":34,"column_end":42},"kind":{"Impl":{"id":182}},"from":{"krate":0,"index":13800},"to":{"krate":16,"index":110}},{"span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\stream\\peek.rs","byte_start":256098,"byte_end":256106,"line_start":195,"line_end":195,"column_start":28,"column_end":36},"kind":{"Impl":{"id":183}},"from":{"krate":0,"index":13800},"to":{"krate":16,"index":96}},{"span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\stream\\peek.rs","byte_start":256891,"byte_end":256899,"line_start":220,"line_end":220,"column_start":30,"column_end":38},"kind":{"Impl":{"id":184}},"from":{"krate":0,"index":13800},"to":{"krate":19,"index":17}},{"span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\stream\\peek.rs","byte_start":257265,"byte_end":257269,"line_start":237,"line_end":237,"column_start":25,"column_end":29},"kind":{"Impl":{"id":185}},"from":{"krate":0,"index":13848},"to":{"krate":2,"index":9685}},{"span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\stream\\peek.rs","byte_start":257514,"byte_end":257518,"line_start":247,"line_end":247,"column_start":34,"column_end":38},"kind":{"Impl":{"id":186}},"from":{"krate":0,"index":13848},"to":{"krate":16,"index":27}},{"span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\stream\\peek.rs","byte_start":257629,"byte_end":257633,"line_start":253,"line_end":253,"column_start":25,"column_end":29},"kind":{"Impl":{"id":187}},"from":{"krate":0,"index":13848},"to":{"krate":2,"index":13098}},{"span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\stream\\peek.rs","byte_start":258330,"byte_end":258337,"line_start":279,"line_end":279,"column_start":25,"column_end":32},"kind":{"Impl":{"id":188}},"from":{"krate":0,"index":13889},"to":{"krate":2,"index":9685}},{"span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\stream\\peek.rs","byte_start":258585,"byte_end":258592,"line_start":289,"line_end":289,"column_start":34,"column_end":41},"kind":{"Impl":{"id":189}},"from":{"krate":0,"index":13889},"to":{"krate":16,"index":27}},{"span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\stream\\peek.rs","byte_start":258703,"byte_end":258710,"line_start":295,"line_end":295,"column_start":25,"column_end":32},"kind":{"Impl":{"id":190}},"from":{"krate":0,"index":13889},"to":{"krate":2,"index":13098}},{"span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\stream\\peek.rs","byte_start":259430,"byte_end":259436,"line_start":321,"line_end":321,"column_start":28,"column_end":34},"kind":{"Impl":{"id":191}},"from":{"krate":0,"index":13930},"to":{"krate":2,"index":9685}},{"span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\stream\\peek.rs","byte_start":259788,"byte_end":259794,"line_start":332,"line_end":332,"column_start":29,"column_end":35},"kind":{"Impl":{"id":192}},"from":{"krate":0,"index":13930},"to":{"krate":16,"index":27}},{"span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\stream\\peek.rs","byte_start":260063,"byte_end":260069,"line_start":343,"line_end":343,"column_start":24,"column_end":30},"kind":{"Impl":{"id":193}},"from":{"krate":0,"index":13930},"to":{"krate":2,"index":13098}},{"span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\stream\\peek.rs","byte_start":261330,"byte_end":261338,"line_start":381,"line_end":381,"column_start":28,"column_end":36},"kind":{"Impl":{"id":194}},"from":{"krate":0,"index":13979},"to":{"krate":2,"index":9685}},{"span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\stream\\peek.rs","byte_start":261658,"byte_end":261666,"line_start":394,"line_end":394,"column_start":29,"column_end":37},"kind":{"Impl":{"id":195}},"from":{"krate":0,"index":13979},"to":{"krate":16,"index":27}},{"span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\stream\\peek.rs","byte_start":261850,"byte_end":261858,"line_start":405,"line_end":405,"column_start":24,"column_end":32},"kind":{"Impl":{"id":196}},"from":{"krate":0,"index":13979},"to":{"krate":2,"index":13098}},{"span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\stream\\peek.rs","byte_start":262229,"byte_end":262239,"line_start":423,"line_end":423,"column_start":34,"column_end":44},"kind":{"Impl":{"id":197}},"from":{"krate":0,"index":3110},"to":{"krate":0,"index":9796}},{"span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\stream\\skip.rs","byte_start":262904,"byte_end":262908,"line_start":20,"line_end":20,"column_start":18,"column_end":22},"kind":{"Impl":{"id":198}},"from":{"krate":0,"index":14028},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\stream\\skip.rs","byte_start":263099,"byte_end":263103,"line_start":28,"line_end":28,"column_start":39,"column_end":43},"kind":{"Impl":{"id":199}},"from":{"krate":0,"index":14028},"to":{"krate":16,"index":110}},{"span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\stream\\skip.rs","byte_start":263221,"byte_end":263225,"line_start":34,"line_end":34,"column_start":29,"column_end":33},"kind":{"Impl":{"id":200}},"from":{"krate":0,"index":14028},"to":{"krate":16,"index":96}},{"span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\stream\\skip.rs","byte_start":264036,"byte_end":264040,"line_start":63,"line_end":63,"column_start":30,"column_end":34},"kind":{"Impl":{"id":201}},"from":{"krate":0,"index":14028},"to":{"krate":19,"index":17}},{"span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\stream\\skip_while.rs","byte_start":264822,"byte_end":264831,"line_start":25,"line_end":25,"column_start":33,"column_end":42},"kind":{"Impl":{"id":202}},"from":{"krate":0,"index":14076},"to":{"krate":2,"index":9685}},{"span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\stream\\skip_while.rs","byte_start":265283,"byte_end":265292,"line_start":41,"line_end":41,"column_start":18,"column_end":27},"kind":{"Impl":{"id":203}},"from":{"krate":0,"index":14076},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\stream\\skip_while.rs","byte_start":265618,"byte_end":265627,"line_start":54,"line_end":54,"column_start":34,"column_end":43},"kind":{"Impl":{"id":204}},"from":{"krate":0,"index":14076},"to":{"krate":16,"index":110}},{"span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\stream\\skip_while.rs","byte_start":265875,"byte_end":265884,"line_start":65,"line_end":65,"column_start":29,"column_end":38},"kind":{"Impl":{"id":205}},"from":{"krate":0,"index":14076},"to":{"krate":16,"index":96}},{"span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\stream\\skip_while.rs","byte_start":267498,"byte_end":267507,"line_start":115,"line_end":115,"column_start":38,"column_end":47},"kind":{"Impl":{"id":206}},"from":{"krate":0,"index":14076},"to":{"krate":19,"index":17}},{"span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\stream\\take.rs","byte_start":268184,"byte_end":268188,"line_start":21,"line_end":21,"column_start":18,"column_end":22},"kind":{"Impl":{"id":207}},"from":{"krate":0,"index":14149},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\stream\\take.rs","byte_start":268361,"byte_end":268365,"line_start":29,"line_end":29,"column_start":21,"column_end":25},"kind":{"Impl":{"id":208}},"from":{"krate":0,"index":14149},"to":{"krate":16,"index":96}},{"span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\stream\\take.rs","byte_start":269337,"byte_end":269341,"line_start":68,"line_end":68,"column_start":26,"column_end":30},"kind":{"Impl":{"id":209}},"from":{"krate":0,"index":14149},"to":{"krate":16,"index":110}},{"span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\stream\\take.rs","byte_start":269589,"byte_end":269593,"line_start":79,"line_end":79,"column_start":30,"column_end":34},"kind":{"Impl":{"id":210}},"from":{"krate":0,"index":14149},"to":{"krate":19,"index":17}},{"span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\stream\\take_while.rs","byte_start":270364,"byte_end":270373,"line_start":25,"line_end":25,"column_start":33,"column_end":42},"kind":{"Impl":{"id":211}},"from":{"krate":0,"index":14197},"to":{"krate":2,"index":9685}},{"span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\stream\\take_while.rs","byte_start":270821,"byte_end":270830,"line_start":41,"line_end":41,"column_start":18,"column_end":27},"kind":{"Impl":{"id":212}},"from":{"krate":0,"index":14197},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\stream\\take_while.rs","byte_start":271149,"byte_end":271158,"line_start":54,"line_end":54,"column_start":29,"column_end":38},"kind":{"Impl":{"id":213}},"from":{"krate":0,"index":14197},"to":{"krate":16,"index":96}},{"span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\stream\\take_while.rs","byte_start":272677,"byte_end":272686,"line_start":104,"line_end":104,"column_start":34,"column_end":43},"kind":{"Impl":{"id":214}},"from":{"krate":0,"index":14197},"to":{"krate":16,"index":110}},{"span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\stream\\take_while.rs","byte_start":273042,"byte_end":273051,"line_start":117,"line_end":117,"column_start":38,"column_end":47},"kind":{"Impl":{"id":215}},"from":{"krate":0,"index":14197},"to":{"krate":19,"index":17}},{"span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\stream\\take_until.rs","byte_start":274070,"byte_end":274079,"line_start":30,"line_end":30,"column_start":30,"column_end":39},"kind":{"Impl":{"id":216}},"from":{"krate":0,"index":14270},"to":{"krate":2,"index":9685}},{"span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\stream\\take_until.rs","byte_start":274367,"byte_end":274376,"line_start":41,"line_end":41,"column_start":15,"column_end":24},"kind":{"Impl":{"id":217}},"from":{"krate":0,"index":14270},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\stream\\take_until.rs","byte_start":276493,"byte_end":276502,"line_start":111,"line_end":111,"column_start":26,"column_end":35},"kind":{"Impl":{"id":218}},"from":{"krate":0,"index":14270},"to":{"krate":16,"index":96}},{"span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\stream\\take_until.rs","byte_start":277534,"byte_end":277543,"line_start":150,"line_end":150,"column_start":31,"column_end":40},"kind":{"Impl":{"id":219}},"from":{"krate":0,"index":14270},"to":{"krate":16,"index":110}},{"span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\stream\\take_until.rs","byte_start":277780,"byte_end":277789,"line_start":162,"line_end":162,"column_start":35,"column_end":44},"kind":{"Impl":{"id":220}},"from":{"krate":0,"index":14270},"to":{"krate":19,"index":17}},{"span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\stream\\then.rs","byte_start":278485,"byte_end":278489,"line_start":23,"line_end":23,"column_start":33,"column_end":37},"kind":{"Impl":{"id":221}},"from":{"krate":0,"index":14331},"to":{"krate":2,"index":9685}},{"span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\stream\\then.rs","byte_start":278740,"byte_end":278744,"line_start":33,"line_end":33,"column_start":18,"column_end":22},"kind":{"Impl":{"id":222}},"from":{"krate":0,"index":14331},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\stream\\then.rs","byte_start":278990,"byte_end":278994,"line_start":45,"line_end":45,"column_start":34,"column_end":38},"kind":{"Impl":{"id":223}},"from":{"krate":0,"index":14331},"to":{"krate":16,"index":110}},{"span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\stream\\then.rs","byte_start":279220,"byte_end":279224,"line_start":56,"line_end":56,"column_start":29,"column_end":33},"kind":{"Impl":{"id":224}},"from":{"krate":0,"index":14331},"to":{"krate":16,"index":96}},{"span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\stream\\then.rs","byte_start":280403,"byte_end":280407,"line_start":94,"line_end":94,"column_start":38,"column_end":42},"kind":{"Impl":{"id":225}},"from":{"krate":0,"index":14331},"to":{"krate":19,"index":17}},{"span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\stream\\zip.rs","byte_start":281106,"byte_end":281109,"line_start":22,"line_end":22,"column_start":32,"column_end":35},"kind":{"Impl":{"id":226}},"from":{"krate":0,"index":14396},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\stream\\zip.rs","byte_start":282695,"byte_end":282698,"line_start":61,"line_end":61,"column_start":32,"column_end":35},"kind":{"Impl":{"id":227}},"from":{"krate":0,"index":14396},"to":{"krate":16,"index":110}},{"span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\stream\\zip.rs","byte_start":282893,"byte_end":282896,"line_start":71,"line_end":71,"column_start":27,"column_end":30},"kind":{"Impl":{"id":228}},"from":{"krate":0,"index":14396},"to":{"krate":16,"index":96}},{"span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\stream\\chunks.rs","byte_start":285591,"byte_end":285597,"line_start":24,"line_end":24,"column_start":18,"column_end":24},"kind":{"Impl":{"id":229}},"from":{"krate":0,"index":14453},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\stream\\chunks.rs","byte_start":286105,"byte_end":286111,"line_start":46,"line_end":46,"column_start":29,"column_end":35},"kind":{"Impl":{"id":230}},"from":{"krate":0,"index":14453},"to":{"krate":16,"index":96}},{"span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\stream\\chunks.rs","byte_start":287727,"byte_end":287733,"line_start":91,"line_end":91,"column_start":39,"column_end":45},"kind":{"Impl":{"id":231}},"from":{"krate":0,"index":14453},"to":{"krate":16,"index":110}},{"span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\stream\\chunks.rs","byte_start":287956,"byte_end":287962,"line_start":99,"line_end":99,"column_start":30,"column_end":36},"kind":{"Impl":{"id":232}},"from":{"krate":0,"index":14453},"to":{"krate":19,"index":17}},{"span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\stream\\ready_chunks.rs","byte_start":288705,"byte_end":288716,"line_start":23,"line_end":23,"column_start":18,"column_end":29},"kind":{"Impl":{"id":233}},"from":{"krate":0,"index":14505},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\stream\\ready_chunks.rs","byte_start":289068,"byte_end":289079,"line_start":40,"line_end":40,"column_start":29,"column_end":40},"kind":{"Impl":{"id":234}},"from":{"krate":0,"index":14505},"to":{"krate":16,"index":96}},{"span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\stream\\ready_chunks.rs","byte_start":291248,"byte_end":291259,"line_start":99,"line_end":99,"column_start":39,"column_end":50},"kind":{"Impl":{"id":235}},"from":{"krate":0,"index":14505},"to":{"krate":16,"index":110}},{"span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\stream\\ready_chunks.rs","byte_start":291482,"byte_end":291493,"line_start":107,"line_end":107,"column_start":30,"column_end":41},"kind":{"Impl":{"id":236}},"from":{"krate":0,"index":14505},"to":{"krate":19,"index":17}},{"span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\stream\\scan.rs","byte_start":292257,"byte_end":292261,"line_start":28,"line_end":28,"column_start":36,"column_end":40},"kind":{"Impl":{"id":237}},"from":{"krate":0,"index":14557},"to":{"krate":2,"index":9685}},{"span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\stream\\scan.rs","byte_start":292747,"byte_end":292751,"line_start":45,"line_end":45,"column_start":29,"column_end":33},"kind":{"Impl":{"id":238}},"from":{"krate":0,"index":14557},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\stream\\scan.rs","byte_start":292915,"byte_end":292919,"line_start":52,"line_end":52,"column_start":24,"column_end":28},"kind":{"Impl":{"id":239}},"from":{"krate":0,"index":14557},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\stream\\scan.rs","byte_start":293281,"byte_end":293285,"line_start":65,"line_end":65,"column_start":35,"column_end":39},"kind":{"Impl":{"id":240}},"from":{"krate":0,"index":14557},"to":{"krate":16,"index":96}},{"span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\stream\\scan.rs","byte_start":294512,"byte_end":294516,"line_start":108,"line_end":108,"column_start":40,"column_end":44},"kind":{"Impl":{"id":241}},"from":{"krate":0,"index":14557},"to":{"krate":16,"index":110}},{"span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\stream\\scan.rs","byte_start":294890,"byte_end":294894,"line_start":121,"line_end":121,"column_start":42,"column_end":46},"kind":{"Impl":{"id":242}},"from":{"krate":0,"index":14557},"to":{"krate":19,"index":17}},{"span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\stream\\buffer_unordered.rs","byte_start":295697,"byte_end":295712,"line_start":26,"line_end":26,"column_start":25,"column_end":40},"kind":{"Impl":{"id":243}},"from":{"krate":0,"index":14630},"to":{"krate":2,"index":9685}},{"span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\stream\\buffer_unordered.rs","byte_start":296044,"byte_end":296059,"line_start":39,"line_end":39,"column_start":10,"column_end":25},"kind":{"Impl":{"id":244}},"from":{"krate":0,"index":14630},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\stream\\buffer_unordered.rs","byte_start":296446,"byte_end":296461,"line_start":59,"line_end":59,"column_start":21,"column_end":36},"kind":{"Impl":{"id":245}},"from":{"krate":0,"index":14630},"to":{"krate":16,"index":96}},{"span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\stream\\buffer_unordered.rs","byte_start":297915,"byte_end":297930,"line_start":104,"line_end":104,"column_start":26,"column_end":41},"kind":{"Impl":{"id":246}},"from":{"krate":0,"index":14630},"to":{"krate":16,"index":110}},{"span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\stream\\buffer_unordered.rs","byte_start":298214,"byte_end":298229,"line_start":116,"line_end":116,"column_start":30,"column_end":45},"kind":{"Impl":{"id":247}},"from":{"krate":0,"index":14630},"to":{"krate":19,"index":17}},{"span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\stream\\buffered.rs","byte_start":299040,"byte_end":299048,"line_start":27,"line_end":27,"column_start":25,"column_end":33},"kind":{"Impl":{"id":248}},"from":{"krate":0,"index":14679},"to":{"krate":2,"index":9685}},{"span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\stream\\buffered.rs","byte_start":299395,"byte_end":299403,"line_start":41,"line_end":41,"column_start":10,"column_end":18},"kind":{"Impl":{"id":249}},"from":{"krate":0,"index":14679},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\stream\\buffered.rs","byte_start":299683,"byte_end":299691,"line_start":53,"line_end":53,"column_start":21,"column_end":29},"kind":{"Impl":{"id":250}},"from":{"krate":0,"index":14679},"to":{"krate":16,"index":96}},{"span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\stream\\buffered.rs","byte_start":301209,"byte_end":301217,"line_start":100,"line_end":100,"column_start":30,"column_end":38},"kind":{"Impl":{"id":251}},"from":{"krate":0,"index":14679},"to":{"krate":19,"index":17}},{"span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\stream\\flatten_unordered.rs","byte_start":302835,"byte_end":302850,"line_start":60,"line_end":60,"column_start":6,"column_end":21},"kind":{"Impl":{"id":252}},"from":{"krate":0,"index":14728},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\stream\\flatten_unordered.rs","byte_start":306969,"byte_end":306982,"line_start":177,"line_end":177,"column_start":45,"column_end":58},"kind":{"Impl":{"id":253}},"from":{"krate":0,"index":3935},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\stream\\flatten_unordered.rs","byte_start":307502,"byte_end":307515,"line_start":194,"line_end":194,"column_start":50,"column_end":63},"kind":{"Impl":{"id":254}},"from":{"krate":0,"index":3935},"to":{"krate":2,"index":3300}},{"span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\stream\\flatten_unordered.rs","byte_start":307913,"byte_end":307923,"line_start":210,"line_end":210,"column_start":22,"column_end":32},"kind":{"Impl":{"id":255}},"from":{"krate":0,"index":3950},"to":{"krate":2,"index":3057}},{"span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\stream\\flatten_unordered.rs","byte_start":307948,"byte_end":307958,"line_start":211,"line_end":211,"column_start":22,"column_end":32},"kind":{"Impl":{"id":256}},"from":{"krate":0,"index":3950},"to":{"krate":2,"index":3069}},{"span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\stream\\flatten_unordered.rs","byte_start":307968,"byte_end":307978,"line_start":213,"line_end":213,"column_start":6,"column_end":16},"kind":{"Impl":{"id":257}},"from":{"krate":0,"index":3950},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\stream\\flatten_unordered.rs","byte_start":309029,"byte_end":309039,"line_start":239,"line_end":239,"column_start":18,"column_end":28},"kind":{"Impl":{"id":258}},"from":{"krate":0,"index":3950},"to":{"krate":18,"index":94}},{"span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\stream\\flatten_unordered.rs","byte_start":310640,"byte_end":310653,"line_start":279,"line_end":279,"column_start":10,"column_end":23},"kind":{"Impl":{"id":259}},"from":{"krate":0,"index":14734},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\stream\\flatten_unordered.rs","byte_start":310857,"byte_end":310870,"line_start":286,"line_end":286,"column_start":37,"column_end":50},"kind":{"Impl":{"id":260}},"from":{"krate":0,"index":14734},"to":{"krate":2,"index":13098}},{"span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\stream\\flatten_unordered.rs","byte_start":311985,"byte_end":312001,"line_start":322,"line_end":322,"column_start":25,"column_end":41},"kind":{"Impl":{"id":261}},"from":{"krate":0,"index":14767},"to":{"krate":2,"index":9685}},{"span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\stream\\flatten_unordered.rs","byte_start":312475,"byte_end":312491,"line_start":338,"line_end":338,"column_start":10,"column_end":26},"kind":{"Impl":{"id":262}},"from":{"krate":0,"index":14767},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\stream\\flatten_unordered.rs","byte_start":313430,"byte_end":313450,"line_start":368,"line_end":368,"column_start":10,"column_end":30},"kind":{"Impl":{"id":263}},"from":{"krate":0,"index":14776},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\stream\\flatten_unordered.rs","byte_start":313717,"byte_end":313733,"line_start":378,"line_end":378,"column_start":26,"column_end":42},"kind":{"Impl":{"id":264}},"from":{"krate":0,"index":14767},"to":{"krate":16,"index":110}},{"span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\stream\\flatten_unordered.rs","byte_start":313938,"byte_end":313954,"line_start":388,"line_end":388,"column_start":21,"column_end":37},"kind":{"Impl":{"id":265}},"from":{"krate":0,"index":14767},"to":{"krate":16,"index":96}},{"span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\stream\\flatten_unordered.rs","byte_start":318574,"byte_end":318590,"line_start":502,"line_end":502,"column_start":31,"column_end":47},"kind":{"Impl":{"id":266}},"from":{"krate":0,"index":14767},"to":{"krate":19,"index":17}},{"span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\stream\\for_each_concurrent.rs","byte_start":319383,"byte_end":319400,"line_start":23,"line_end":23,"column_start":33,"column_end":50},"kind":{"Impl":{"id":267}},"from":{"krate":0,"index":14925},"to":{"krate":2,"index":9685}},{"span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\stream\\for_each_concurrent.rs","byte_start":319746,"byte_end":319763,"line_start":37,"line_end":37,"column_start":18,"column_end":35},"kind":{"Impl":{"id":268}},"from":{"krate":0,"index":14925},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\stream\\for_each_concurrent.rs","byte_start":320196,"byte_end":320213,"line_start":54,"line_end":54,"column_start":34,"column_end":51},"kind":{"Impl":{"id":269}},"from":{"krate":0,"index":14925},"to":{"krate":16,"index":27}},{"span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\stream\\for_each_concurrent.rs","byte_start":320443,"byte_end":320460,"line_start":65,"line_end":65,"column_start":29,"column_end":46},"kind":{"Impl":{"id":270}},"from":{"krate":0,"index":14925},"to":{"krate":2,"index":13098}},{"span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\stream\\split.rs","byte_start":322684,"byte_end":322695,"line_start":16,"line_end":16,"column_start":19,"column_end":30},"kind":{"Impl":{"id":271}},"from":{"krate":0,"index":14986},"to":{"krate":2,"index":3098}},{"span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\stream\\split.rs","byte_start":322718,"byte_end":322729,"line_start":18,"line_end":18,"column_start":16,"column_end":27},"kind":{"Impl":{"id":272}},"from":{"krate":0,"index":14986},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\stream\\split.rs","byte_start":323162,"byte_end":323173,"line_start":30,"line_end":30,"column_start":28,"column_end":39},"kind":{"Impl":{"id":273}},"from":{"krate":0,"index":14986},"to":{"krate":16,"index":96}},{"span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\stream\\split.rs","byte_start":323751,"byte_end":323760,"line_start":52,"line_end":52,"column_start":25,"column_end":34},"kind":{"Impl":{"id":274}},"from":{"krate":0,"index":14993},"to":{"krate":2,"index":3098}},{"span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\stream\\split.rs","byte_start":323808,"byte_end":323817,"line_start":54,"line_end":54,"column_start":35,"column_end":44},"kind":{"Impl":{"id":275}},"from":{"krate":0,"index":14993},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\stream\\split.rs","byte_start":324281,"byte_end":324290,"line_start":63,"line_end":63,"column_start":27,"column_end":36},"kind":{"Impl":{"id":276}},"from":{"krate":0,"index":14993},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\stream\\split.rs","byte_start":325012,"byte_end":325021,"line_start":87,"line_end":87,"column_start":42,"column_end":51},"kind":{"Impl":{"id":277}},"from":{"krate":0,"index":14993},"to":{"krate":19,"index":17}},{"span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\stream\\split.rs","byte_start":326628,"byte_end":326640,"line_start":131,"line_end":131,"column_start":30,"column_end":42},"kind":{"Impl":{"id":278}},"from":{"krate":0,"index":4121},"to":{"krate":2,"index":9685}},{"span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\stream\\split.rs","byte_start":326816,"byte_end":326828,"line_start":137,"line_end":137,"column_start":32,"column_end":44},"kind":{"Impl":{"id":279}},"from":{"krate":0,"index":4121},"to":{"krate":2,"index":9692}},{"span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\stream\\split.rs","byte_start":327077,"byte_end":327089,"line_start":144,"line_end":144,"column_start":53,"column_end":65},"kind":{"Impl":{"id":280}},"from":{"krate":0,"index":4121},"to":{"krate":1,"index":2546}},{"span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\stream\\catch_unwind.rs","byte_start":327634,"byte_end":327645,"line_start":19,"line_end":19,"column_start":31,"column_end":42},"kind":{"Impl":{"id":281}},"from":{"krate":0,"index":15002},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\stream\\catch_unwind.rs","byte_start":327837,"byte_end":327848,"line_start":27,"line_end":27,"column_start":42,"column_end":53},"kind":{"Impl":{"id":282}},"from":{"krate":0,"index":15002},"to":{"krate":16,"index":96}},{"span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\stream\\catch_unwind.rs","byte_start":328700,"byte_end":328711,"line_start":57,"line_end":57,"column_start":52,"column_end":63},"kind":{"Impl":{"id":283}},"from":{"krate":0,"index":15002},"to":{"krate":16,"index":110}},{"span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\stream\\mod.rs","byte_start":158480,"byte_end":158481,"line_start":245,"line_end":245,"column_start":31,"column_end":32},"kind":{"Impl":{"id":284}},"from":{"krate":0,"index":4199},"to":{"krate":0,"index":4200}},{"span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\stream\\mod.rs","byte_start":158624,"byte_end":158630,"line_start":249,"line_end":249,"column_start":22,"column_end":28},"kind":"SuperTrait","from":{"krate":16,"index":96},"to":{"krate":0,"index":4200}},{"span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\try_stream\\and_then.rs","byte_start":368099,"byte_end":368106,"line_start":23,"line_end":23,"column_start":33,"column_end":40},"kind":{"Impl":{"id":285}},"from":{"krate":0,"index":15046},"to":{"krate":2,"index":9685}},{"span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\try_stream\\and_then.rs","byte_start":368399,"byte_end":368406,"line_start":36,"line_end":36,"column_start":18,"column_end":25},"kind":{"Impl":{"id":286}},"from":{"krate":0,"index":15046},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\try_stream\\and_then.rs","byte_start":368687,"byte_end":368694,"line_start":49,"line_end":49,"column_start":29,"column_end":36},"kind":{"Impl":{"id":287}},"from":{"krate":0,"index":15046},"to":{"krate":16,"index":96}},{"span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\try_stream\\and_then.rs","byte_start":369837,"byte_end":369844,"line_start":85,"line_end":85,"column_start":34,"column_end":41},"kind":{"Impl":{"id":288}},"from":{"krate":0,"index":15046},"to":{"krate":16,"index":110}},{"span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\try_stream\\and_then.rs","byte_start":370190,"byte_end":370197,"line_start":98,"line_end":98,"column_start":38,"column_end":45},"kind":{"Impl":{"id":289}},"from":{"krate":0,"index":15046},"to":{"krate":19,"index":17}},{"span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\try_stream\\into_stream.rs","byte_start":370762,"byte_end":370772,"line_start":18,"line_end":18,"column_start":10,"column_end":20},"kind":{"Impl":{"id":290}},"from":{"krate":0,"index":15345},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\try_stream\\into_stream.rs","byte_start":370965,"byte_end":370975,"line_start":27,"line_end":27,"column_start":51,"column_end":61},"kind":{"Impl":{"id":291}},"from":{"krate":0,"index":15345},"to":{"krate":16,"index":110}},{"span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\try_stream\\into_stream.rs","byte_start":371096,"byte_end":371106,"line_start":33,"line_end":33,"column_start":32,"column_end":42},"kind":{"Impl":{"id":292}},"from":{"krate":0,"index":15345},"to":{"krate":16,"index":96}},{"span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\try_stream\\into_stream.rs","byte_start":371530,"byte_end":371540,"line_start":48,"line_end":48,"column_start":42,"column_end":52},"kind":{"Impl":{"id":293}},"from":{"krate":0,"index":15345},"to":{"krate":19,"index":17}},{"span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\try_stream\\or_else.rs","byte_start":372205,"byte_end":372211,"line_start":23,"line_end":23,"column_start":33,"column_end":39},"kind":{"Impl":{"id":294}},"from":{"krate":0,"index":15545},"to":{"krate":2,"index":9685}},{"span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\try_stream\\or_else.rs","byte_start":372503,"byte_end":372509,"line_start":36,"line_end":36,"column_start":18,"column_end":24},"kind":{"Impl":{"id":295}},"from":{"krate":0,"index":15545},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\try_stream\\or_else.rs","byte_start":372787,"byte_end":372793,"line_start":49,"line_end":49,"column_start":29,"column_end":35},"kind":{"Impl":{"id":296}},"from":{"krate":0,"index":15545},"to":{"krate":16,"index":96}},{"span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\try_stream\\or_else.rs","byte_start":374070,"byte_end":374076,"line_start":89,"line_end":89,"column_start":34,"column_end":40},"kind":{"Impl":{"id":297}},"from":{"krate":0,"index":15545},"to":{"krate":16,"index":110}},{"span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\try_stream\\or_else.rs","byte_start":374419,"byte_end":374425,"line_start":102,"line_end":102,"column_start":38,"column_end":44},"kind":{"Impl":{"id":298}},"from":{"krate":0,"index":15545},"to":{"krate":19,"index":17}},{"span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\try_stream\\try_next.rs","byte_start":374980,"byte_end":374987,"line_start":14,"line_end":14,"column_start":36,"column_end":43},"kind":{"Impl":{"id":299}},"from":{"krate":0,"index":15610},"to":{"krate":2,"index":3098}},{"span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\try_stream\\try_next.rs","byte_start":375041,"byte_end":375048,"line_start":16,"line_end":16,"column_start":42,"column_end":49},"kind":{"Impl":{"id":300}},"from":{"krate":0,"index":15610},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\try_stream\\try_next.rs","byte_start":375211,"byte_end":375218,"line_start":22,"line_end":22,"column_start":68,"column_end":75},"kind":{"Impl":{"id":301}},"from":{"krate":0,"index":15610},"to":{"krate":16,"index":27}},{"span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\try_stream\\try_next.rs","byte_start":375360,"byte_end":375367,"line_start":28,"line_end":28,"column_start":49,"column_end":56},"kind":{"Impl":{"id":302}},"from":{"krate":0,"index":15610},"to":{"krate":2,"index":13098}},{"span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\try_stream\\try_for_each.rs","byte_start":376143,"byte_end":376153,"line_start":21,"line_end":21,"column_start":33,"column_end":43},"kind":{"Impl":{"id":303}},"from":{"krate":0,"index":15618},"to":{"krate":2,"index":9685}},{"span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\try_stream\\try_for_each.rs","byte_start":376449,"byte_end":376459,"line_start":34,"line_end":34,"column_start":18,"column_end":28},"kind":{"Impl":{"id":304}},"from":{"krate":0,"index":15618},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\try_stream\\try_for_each.rs","byte_start":376704,"byte_end":376714,"line_start":45,"line_end":45,"column_start":29,"column_end":39},"kind":{"Impl":{"id":305}},"from":{"krate":0,"index":15618},"to":{"krate":2,"index":13098}},{"span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\try_stream\\try_filter.rs","byte_start":378113,"byte_end":378122,"line_start":27,"line_end":27,"column_start":33,"column_end":42},"kind":{"Impl":{"id":306}},"from":{"krate":0,"index":15675},"to":{"krate":2,"index":9685}},{"span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\try_stream\\try_filter.rs","byte_start":378518,"byte_end":378527,"line_start":42,"line_end":42,"column_start":18,"column_end":27},"kind":{"Impl":{"id":307}},"from":{"krate":0,"index":15675},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\try_stream\\try_filter.rs","byte_start":378770,"byte_end":378779,"line_start":53,"line_end":53,"column_start":34,"column_end":43},"kind":{"Impl":{"id":308}},"from":{"krate":0,"index":15675},"to":{"krate":16,"index":110}},{"span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\try_stream\\try_filter.rs","byte_start":379036,"byte_end":379045,"line_start":64,"line_end":64,"column_start":29,"column_end":38},"kind":{"Impl":{"id":309}},"from":{"krate":0,"index":15675},"to":{"krate":16,"index":96}},{"span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\try_stream\\try_filter.rs","byte_start":380434,"byte_end":380443,"line_start":105,"line_end":105,"column_start":41,"column_end":50},"kind":{"Impl":{"id":310}},"from":{"krate":0,"index":15675},"to":{"krate":19,"index":17}},{"span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\try_stream\\try_filter_map.rs","byte_start":381186,"byte_end":381198,"line_start":24,"line_end":24,"column_start":33,"column_end":45},"kind":{"Impl":{"id":311}},"from":{"krate":0,"index":15744},"to":{"krate":2,"index":9685}},{"span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\try_stream\\try_filter_map.rs","byte_start":381498,"byte_end":381510,"line_start":37,"line_end":37,"column_start":18,"column_end":30},"kind":{"Impl":{"id":312}},"from":{"krate":0,"index":15744},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\try_stream\\try_filter_map.rs","byte_start":381707,"byte_end":381719,"line_start":45,"line_end":45,"column_start":37,"column_end":49},"kind":{"Impl":{"id":313}},"from":{"krate":0,"index":15744},"to":{"krate":16,"index":110}},{"span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\try_stream\\try_filter_map.rs","byte_start":381997,"byte_end":382009,"line_start":56,"line_end":56,"column_start":32,"column_end":44},"kind":{"Impl":{"id":314}},"from":{"krate":0,"index":15744},"to":{"krate":16,"index":96}},{"span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\try_stream\\try_filter_map.rs","byte_start":383509,"byte_end":383521,"line_start":99,"line_end":99,"column_start":38,"column_end":50},"kind":{"Impl":{"id":315}},"from":{"krate":0,"index":15744},"to":{"krate":19,"index":17}},{"span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\try_stream\\try_flatten.rs","byte_start":384193,"byte_end":384203,"line_start":24,"line_end":24,"column_start":10,"column_end":20},"kind":{"Impl":{"id":316}},"from":{"krate":0,"index":15809},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\try_stream\\try_flatten.rs","byte_start":384468,"byte_end":384478,"line_start":37,"line_end":37,"column_start":26,"column_end":36},"kind":{"Impl":{"id":317}},"from":{"krate":0,"index":15809},"to":{"krate":16,"index":110}},{"span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\try_stream\\try_flatten.rs","byte_start":384724,"byte_end":384734,"line_start":48,"line_end":48,"column_start":21,"column_end":31},"kind":{"Impl":{"id":318}},"from":{"krate":0,"index":15809},"to":{"krate":16,"index":96}},{"span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\try_stream\\try_flatten.rs","byte_start":385653,"byte_end":385663,"line_start":77,"line_end":77,"column_start":30,"column_end":40},"kind":{"Impl":{"id":319}},"from":{"krate":0,"index":15809},"to":{"krate":19,"index":17}},{"span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\try_stream\\try_collect.rs","byte_start":386343,"byte_end":386353,"line_start":20,"line_end":20,"column_start":33,"column_end":43},"kind":{"Impl":{"id":320}},"from":{"krate":0,"index":15857},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\try_stream\\try_collect.rs","byte_start":386493,"byte_end":386503,"line_start":26,"line_end":26,"column_start":29,"column_end":39},"kind":{"Impl":{"id":321}},"from":{"krate":0,"index":15857},"to":{"krate":16,"index":27}},{"span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\try_stream\\try_collect.rs","byte_start":386691,"byte_end":386701,"line_start":36,"line_end":36,"column_start":24,"column_end":34},"kind":{"Impl":{"id":322}},"from":{"krate":0,"index":15857},"to":{"krate":2,"index":13098}},{"span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\try_stream\\try_concat.rs","byte_start":387699,"byte_end":387708,"line_start":19,"line_end":19,"column_start":10,"column_end":19},"kind":{"Impl":{"id":323}},"from":{"krate":0,"index":15906},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\try_stream\\try_concat.rs","byte_start":387927,"byte_end":387936,"line_start":29,"line_end":29,"column_start":21,"column_end":30},"kind":{"Impl":{"id":324}},"from":{"krate":0,"index":15906},"to":{"krate":2,"index":13098}},{"span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\try_stream\\try_chunks.rs","byte_start":389320,"byte_end":389329,"line_start":25,"line_end":25,"column_start":21,"column_end":30},"kind":{"Impl":{"id":325}},"from":{"krate":0,"index":15946},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\try_stream\\try_chunks.rs","byte_start":389824,"byte_end":389833,"line_start":44,"line_end":44,"column_start":32,"column_end":41},"kind":{"Impl":{"id":326}},"from":{"krate":0,"index":15946},"to":{"krate":16,"index":96}},{"span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\try_stream\\try_chunks.rs","byte_start":391781,"byte_end":391790,"line_start":95,"line_end":95,"column_start":51,"column_end":60},"kind":{"Impl":{"id":327}},"from":{"krate":0,"index":15946},"to":{"krate":16,"index":110}},{"span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\try_stream\\try_chunks.rs","byte_start":392013,"byte_end":392022,"line_start":103,"line_end":103,"column_start":30,"column_end":39},"kind":{"Impl":{"id":328}},"from":{"krate":0,"index":15946},"to":{"krate":19,"index":17}},{"span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\try_stream\\try_chunks.rs","byte_start":392449,"byte_end":392463,"line_start":118,"line_end":118,"column_start":39,"column_end":53},"kind":{"Impl":{"id":329}},"from":{"krate":0,"index":15998},"to":{"krate":2,"index":9685}},{"span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\try_stream\\try_chunks.rs","byte_start":392608,"byte_end":392622,"line_start":124,"line_end":124,"column_start":43,"column_end":57},"kind":{"Impl":{"id":330}},"from":{"krate":0,"index":15998},"to":{"krate":2,"index":9692}},{"span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\try_stream\\try_chunks.rs","byte_start":392809,"byte_end":392823,"line_start":131,"line_end":131,"column_start":61,"column_end":75},"kind":{"Impl":{"id":331}},"from":{"krate":0,"index":15998},"to":{"krate":1,"index":2546}},{"span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\try_stream\\try_fold.rs","byte_start":393433,"byte_end":393440,"line_start":22,"line_end":22,"column_start":36,"column_end":43},"kind":{"Impl":{"id":332}},"from":{"krate":0,"index":16019},"to":{"krate":2,"index":9685}},{"span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\try_stream\\try_fold.rs","byte_start":393799,"byte_end":393806,"line_start":37,"line_end":37,"column_start":21,"column_end":28},"kind":{"Impl":{"id":333}},"from":{"krate":0,"index":16019},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\try_stream\\try_fold.rs","byte_start":394086,"byte_end":394093,"line_start":48,"line_end":48,"column_start":37,"column_end":44},"kind":{"Impl":{"id":334}},"from":{"krate":0,"index":16019},"to":{"krate":16,"index":27}},{"span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\try_stream\\try_fold.rs","byte_start":394347,"byte_end":394354,"line_start":59,"line_end":59,"column_start":32,"column_end":39},"kind":{"Impl":{"id":335}},"from":{"krate":0,"index":16019},"to":{"krate":2,"index":13098}},{"span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\try_stream\\try_unfold.rs","byte_start":398217,"byte_end":398226,"line_start":78,"line_end":78,"column_start":32,"column_end":41},"kind":{"Impl":{"id":336}},"from":{"krate":0,"index":16088},"to":{"krate":2,"index":9685}},{"span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\try_stream\\try_unfold.rs","byte_start":398488,"byte_end":398497,"line_start":88,"line_end":88,"column_start":34,"column_end":43},"kind":{"Impl":{"id":337}},"from":{"krate":0,"index":16088},"to":{"krate":16,"index":96}},{"span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\try_stream\\try_skip_while.rs","byte_start":400243,"byte_end":400255,"line_start":26,"line_end":26,"column_start":33,"column_end":45},"kind":{"Impl":{"id":338}},"from":{"krate":0,"index":16145},"to":{"krate":2,"index":9685}},{"span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\try_stream\\try_skip_while.rs","byte_start":400711,"byte_end":400723,"line_start":42,"line_end":42,"column_start":18,"column_end":30},"kind":{"Impl":{"id":339}},"from":{"krate":0,"index":16145},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\try_stream\\try_skip_while.rs","byte_start":401063,"byte_end":401075,"line_start":55,"line_end":55,"column_start":29,"column_end":41},"kind":{"Impl":{"id":340}},"from":{"krate":0,"index":16145},"to":{"krate":16,"index":96}},{"span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\try_stream\\try_skip_while.rs","byte_start":402574,"byte_end":402586,"line_start":100,"line_end":100,"column_start":34,"column_end":46},"kind":{"Impl":{"id":341}},"from":{"krate":0,"index":16145},"to":{"krate":16,"index":110}},{"span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\try_stream\\try_skip_while.rs","byte_start":402953,"byte_end":402965,"line_start":113,"line_end":113,"column_start":41,"column_end":53},"kind":{"Impl":{"id":342}},"from":{"krate":0,"index":16145},"to":{"krate":19,"index":17}},{"span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\try_stream\\try_take_while.rs","byte_start":403814,"byte_end":403826,"line_start":29,"line_end":29,"column_start":33,"column_end":45},"kind":{"Impl":{"id":343}},"from":{"krate":0,"index":16218},"to":{"krate":2,"index":9685}},{"span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\try_stream\\try_take_while.rs","byte_start":404278,"byte_end":404290,"line_start":45,"line_end":45,"column_start":18,"column_end":30},"kind":{"Impl":{"id":344}},"from":{"krate":0,"index":16218},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\try_stream\\try_take_while.rs","byte_start":404628,"byte_end":404640,"line_start":58,"line_end":58,"column_start":29,"column_end":41},"kind":{"Impl":{"id":345}},"from":{"krate":0,"index":16218},"to":{"krate":16,"index":96}},{"span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\try_stream\\try_take_while.rs","byte_start":406247,"byte_end":406259,"line_start":109,"line_end":109,"column_start":34,"column_end":46},"kind":{"Impl":{"id":346}},"from":{"krate":0,"index":16218},"to":{"krate":16,"index":110}},{"span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\try_stream\\try_take_while.rs","byte_start":406646,"byte_end":406658,"line_start":122,"line_end":122,"column_start":41,"column_end":53},"kind":{"Impl":{"id":347}},"from":{"krate":0,"index":16218},"to":{"krate":19,"index":17}},{"span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\try_stream\\try_buffer_unordered.rs","byte_start":407547,"byte_end":407565,"line_start":26,"line_end":26,"column_start":10,"column_end":28},"kind":{"Impl":{"id":348}},"from":{"krate":0,"index":16291},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\try_stream\\try_buffer_unordered.rs","byte_start":407904,"byte_end":407922,"line_start":42,"line_end":42,"column_start":21,"column_end":39},"kind":{"Impl":{"id":349}},"from":{"krate":0,"index":16291},"to":{"krate":16,"index":96}},{"span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\try_stream\\try_buffer_unordered.rs","byte_start":409199,"byte_end":409217,"line_start":78,"line_end":78,"column_start":33,"column_end":51},"kind":{"Impl":{"id":350}},"from":{"krate":0,"index":16291},"to":{"krate":19,"index":17}},{"span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\try_stream\\try_buffered.rs","byte_start":410128,"byte_end":410139,"line_start":27,"line_end":27,"column_start":10,"column_end":21},"kind":{"Impl":{"id":351}},"from":{"krate":0,"index":16343},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\try_stream\\try_buffered.rs","byte_start":410476,"byte_end":410487,"line_start":43,"line_end":43,"column_start":21,"column_end":32},"kind":{"Impl":{"id":352}},"from":{"krate":0,"index":16343},"to":{"krate":16,"index":96}},{"span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\try_stream\\try_buffered.rs","byte_start":411764,"byte_end":411775,"line_start":79,"line_end":79,"column_start":33,"column_end":44},"kind":{"Impl":{"id":353}},"from":{"krate":0,"index":16343},"to":{"krate":19,"index":17}},{"span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\try_stream\\try_for_each_concurrent.rs","byte_start":412645,"byte_end":412665,"line_start":25,"line_end":25,"column_start":33,"column_end":53},"kind":{"Impl":{"id":354}},"from":{"krate":0,"index":16395},"to":{"krate":2,"index":9685}},{"span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\try_stream\\try_for_each_concurrent.rs","byte_start":413030,"byte_end":413050,"line_start":39,"line_end":39,"column_start":34,"column_end":54},"kind":{"Impl":{"id":355}},"from":{"krate":0,"index":16395},"to":{"krate":16,"index":27}},{"span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\try_stream\\try_for_each_concurrent.rs","byte_start":413289,"byte_end":413309,"line_start":50,"line_end":50,"column_start":18,"column_end":38},"kind":{"Impl":{"id":356}},"from":{"krate":0,"index":16395},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\try_stream\\try_for_each_concurrent.rs","byte_start":413757,"byte_end":413777,"line_start":67,"line_end":67,"column_start":29,"column_end":49},"kind":{"Impl":{"id":357}},"from":{"krate":0,"index":16395},"to":{"krate":2,"index":13098}},{"span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\try_stream\\into_async_read.rs","byte_start":416878,"byte_end":416891,"line_start":23,"line_end":23,"column_start":20,"column_end":33},"kind":{"Impl":{"id":358}},"from":{"krate":0,"index":16456},"to":{"krate":2,"index":3098}},{"span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\try_stream\\into_async_read.rs","byte_start":417107,"byte_end":417120,"line_start":37,"line_end":37,"column_start":10,"column_end":23},"kind":{"Impl":{"id":359}},"from":{"krate":0,"index":16456},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\try_stream\\into_async_read.rs","byte_start":417332,"byte_end":417345,"line_start":47,"line_end":47,"column_start":24,"column_end":37},"kind":{"Impl":{"id":360}},"from":{"krate":0,"index":16456},"to":{"krate":22,"index":39}},{"span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\try_stream\\into_async_read.rs","byte_start":418966,"byte_end":418979,"line_start":95,"line_end":95,"column_start":25,"column_end":38},"kind":{"Impl":{"id":361}},"from":{"krate":0,"index":16456},"to":{"krate":22,"index":42}},{"span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\try_stream\\into_async_read.rs","byte_start":419586,"byte_end":419599,"line_start":117,"line_end":117,"column_start":27,"column_end":40},"kind":{"Impl":{"id":362}},"from":{"krate":0,"index":16456},"to":{"krate":22,"index":49}},{"span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\try_stream\\mod.rs","byte_start":334111,"byte_end":334112,"line_start":154,"line_end":154,"column_start":46,"column_end":47},"kind":{"Impl":{"id":363}},"from":{"krate":0,"index":5618},"to":{"krate":0,"index":5619}},{"span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\try_stream\\mod.rs","byte_start":334193,"byte_end":334202,"line_start":157,"line_end":157,"column_start":25,"column_end":34},"kind":"SuperTrait","from":{"krate":16,"index":127},"to":{"krate":0,"index":5619}},{"span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\iter.rs","byte_start":421635,"byte_end":421639,"line_start":13,"line_end":13,"column_start":19,"column_end":23},"kind":{"Impl":{"id":364}},"from":{"krate":0,"index":16475},"to":{"krate":2,"index":3098}},{"span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\iter.rs","byte_start":422261,"byte_end":422265,"line_start":36,"line_end":36,"column_start":20,"column_end":24},"kind":{"Impl":{"id":365}},"from":{"krate":0,"index":16475},"to":{"krate":16,"index":96}},{"span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\repeat.rs","byte_start":423456,"byte_end":423462,"line_start":34,"line_end":34,"column_start":19,"column_end":25},"kind":{"Impl":{"id":366}},"from":{"krate":0,"index":16484},"to":{"krate":2,"index":3098}},{"span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\repeat.rs","byte_start":423489,"byte_end":423495,"line_start":36,"line_end":36,"column_start":20,"column_end":26},"kind":{"Impl":{"id":367}},"from":{"krate":0,"index":16484},"to":{"krate":16,"index":96}},{"span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\repeat.rs","byte_start":423803,"byte_end":423809,"line_start":51,"line_end":51,"column_start":25,"column_end":31},"kind":{"Impl":{"id":368}},"from":{"krate":0,"index":16484},"to":{"krate":16,"index":110}},{"span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\repeat_with.rs","byte_start":424406,"byte_end":424416,"line_start":17,"line_end":17,"column_start":36,"column_end":46},"kind":{"Impl":{"id":369}},"from":{"krate":0,"index":16493},"to":{"krate":2,"index":3098}},{"span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\repeat_with.rs","byte_start":424460,"byte_end":424470,"line_start":19,"line_end":19,"column_start":37,"column_end":47},"kind":{"Impl":{"id":370}},"from":{"krate":0,"index":16493},"to":{"krate":16,"index":96}},{"span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\repeat_with.rs","byte_start":424784,"byte_end":424794,"line_start":31,"line_end":31,"column_start":42,"column_end":52},"kind":{"Impl":{"id":371}},"from":{"krate":0,"index":16493},"to":{"krate":16,"index":110}},{"span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\empty.rs","byte_start":427314,"byte_end":427319,"line_start":21,"line_end":21,"column_start":19,"column_end":24},"kind":{"Impl":{"id":372}},"from":{"krate":0,"index":16502},"to":{"krate":2,"index":3098}},{"span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\empty.rs","byte_start":427351,"byte_end":427356,"line_start":23,"line_end":23,"column_start":25,"column_end":30},"kind":{"Impl":{"id":373}},"from":{"krate":0,"index":16502},"to":{"krate":16,"index":110}},{"span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\empty.rs","byte_start":427441,"byte_end":427446,"line_start":29,"line_end":29,"column_start":20,"column_end":25},"kind":{"Impl":{"id":374}},"from":{"krate":0,"index":16502},"to":{"krate":16,"index":96}},{"span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\empty.rs","byte_start":427695,"byte_end":427700,"line_start":41,"line_end":41,"column_start":19,"column_end":24},"kind":{"Impl":{"id":375}},"from":{"krate":0,"index":16502},"to":{"krate":2,"index":2679}},{"span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\once.rs","byte_start":428639,"byte_end":428643,"line_start":34,"line_end":34,"column_start":11,"column_end":15},"kind":{"Impl":{"id":376}},"from":{"krate":0,"index":16508},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\once.rs","byte_start":428772,"byte_end":428776,"line_start":40,"line_end":40,"column_start":30,"column_end":34},"kind":{"Impl":{"id":377}},"from":{"krate":0,"index":16508},"to":{"krate":16,"index":96}},{"span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\once.rs","byte_start":429381,"byte_end":429385,"line_start":63,"line_end":63,"column_start":35,"column_end":39},"kind":{"Impl":{"id":378}},"from":{"krate":0,"index":16508},"to":{"krate":16,"index":110}},{"span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\pending.rs","byte_start":430044,"byte_end":430051,"line_start":21,"line_end":21,"column_start":19,"column_end":26},"kind":{"Impl":{"id":379}},"from":{"krate":0,"index":16544},"to":{"krate":2,"index":3098}},{"span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\pending.rs","byte_start":430083,"byte_end":430090,"line_start":23,"line_end":23,"column_start":25,"column_end":32},"kind":{"Impl":{"id":380}},"from":{"krate":0,"index":16544},"to":{"krate":16,"index":110}},{"span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\pending.rs","byte_start":430175,"byte_end":430182,"line_start":29,"line_end":29,"column_start":20,"column_end":27},"kind":{"Impl":{"id":381}},"from":{"krate":0,"index":16544},"to":{"krate":16,"index":96}},{"span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\pending.rs","byte_start":430427,"byte_end":430434,"line_start":41,"line_end":41,"column_start":19,"column_end":26},"kind":{"Impl":{"id":382}},"from":{"krate":0,"index":16544},"to":{"krate":2,"index":2679}},{"span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\poll_fn.rs","byte_start":430821,"byte_end":430827,"line_start":15,"line_end":15,"column_start":19,"column_end":25},"kind":{"Impl":{"id":383}},"from":{"krate":0,"index":6036},"to":{"krate":2,"index":3098}},{"span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\poll_fn.rs","byte_start":430858,"byte_end":430864,"line_start":17,"line_end":17,"column_start":24,"column_end":30},"kind":{"Impl":{"id":384}},"from":{"krate":0,"index":6036},"to":{"krate":2,"index":9685}},{"span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\poll_fn.rs","byte_start":431629,"byte_end":431635,"line_start":48,"line_end":48,"column_start":23,"column_end":29},"kind":{"Impl":{"id":385}},"from":{"krate":0,"index":6036},"to":{"krate":16,"index":96}},{"span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\poll_immediate.rs","byte_start":432331,"byte_end":432344,"line_start":18,"line_end":18,"column_start":23,"column_end":36},"kind":{"Impl":{"id":386}},"from":{"krate":0,"index":16550},"to":{"krate":16,"index":96}},{"span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\poll_immediate.rs","byte_start":433257,"byte_end":433270,"line_start":47,"line_end":47,"column_start":40,"column_end":53},"kind":{"Impl":{"id":387}},"from":{"krate":0,"index":16550},"to":{"krate":16,"index":110}},{"span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\select.rs","byte_start":436157,"byte_end":436163,"line_start":61,"line_end":61,"column_start":16,"column_end":22},"kind":{"Impl":{"id":388}},"from":{"krate":0,"index":16589},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\select.rs","byte_start":437467,"byte_end":437473,"line_start":96,"line_end":96,"column_start":32,"column_end":38},"kind":{"Impl":{"id":389}},"from":{"krate":0,"index":16589},"to":{"krate":16,"index":110}},{"span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\select.rs","byte_start":437652,"byte_end":437658,"line_start":106,"line_end":106,"column_start":27,"column_end":33},"kind":{"Impl":{"id":390}},"from":{"krate":0,"index":16589},"to":{"krate":16,"index":96}},{"span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\select_with_strategy.rs","byte_start":438371,"byte_end":438379,"line_start":17,"line_end":17,"column_start":6,"column_end":14},"kind":{"Impl":{"id":391}},"from":{"krate":0,"index":16634},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\select_with_strategy.rs","byte_start":438676,"byte_end":438684,"line_start":31,"line_end":31,"column_start":18,"column_end":26},"kind":{"Impl":{"id":392}},"from":{"krate":0,"index":16634},"to":{"krate":2,"index":3035}},{"span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\select_with_strategy.rs","byte_start":441711,"byte_end":441729,"line_start":130,"line_end":130,"column_start":29,"column_end":47},"kind":{"Impl":{"id":393}},"from":{"krate":0,"index":16653},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\select_with_strategy.rs","byte_start":443178,"byte_end":443196,"line_start":165,"line_end":165,"column_start":45,"column_end":63},"kind":{"Impl":{"id":394}},"from":{"krate":0,"index":16653},"to":{"krate":16,"index":110}},{"span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\select_with_strategy.rs","byte_start":443476,"byte_end":443494,"line_start":176,"line_end":176,"column_start":40,"column_end":58},"kind":{"Impl":{"id":395}},"from":{"krate":0,"index":16653},"to":{"krate":16,"index":96}},{"span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\select_with_strategy.rs","byte_start":444606,"byte_end":444624,"line_start":216,"line_end":216,"column_start":44,"column_end":62},"kind":{"Impl":{"id":396}},"from":{"krate":0,"index":16653},"to":{"krate":2,"index":9685}},{"span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\unfold.rs","byte_start":447195,"byte_end":447201,"line_start":68,"line_end":68,"column_start":32,"column_end":38},"kind":{"Impl":{"id":397}},"from":{"krate":0,"index":16722},"to":{"krate":2,"index":9685}},{"span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\unfold.rs","byte_start":447441,"byte_end":447447,"line_start":78,"line_end":78,"column_start":39,"column_end":45},"kind":{"Impl":{"id":398}},"from":{"krate":0,"index":16722},"to":{"krate":16,"index":110}},{"span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\unfold.rs","byte_start":447727,"byte_end":447733,"line_start":92,"line_end":92,"column_start":34,"column_end":40},"kind":{"Impl":{"id":399}},"from":{"krate":0,"index":16722},"to":{"krate":16,"index":96}},{"span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\futures_ordered.rs","byte_start":449281,"byte_end":449293,"line_start":26,"line_end":26,"column_start":23,"column_end":35},"kind":{"Impl":{"id":400}},"from":{"krate":0,"index":16775},"to":{"krate":2,"index":2709}},{"span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\futures_ordered.rs","byte_start":449398,"byte_end":449410,"line_start":32,"line_end":32,"column_start":16,"column_end":28},"kind":{"Impl":{"id":401}},"from":{"krate":0,"index":16775},"to":{"krate":2,"index":2714}},{"span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\futures_ordered.rs","byte_start":449441,"byte_end":449453,"line_start":34,"line_end":34,"column_start":24,"column_end":36},"kind":{"Impl":{"id":402}},"from":{"krate":0,"index":16775},"to":{"krate":2,"index":2755}},{"span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\futures_ordered.rs","byte_start":449576,"byte_end":449588,"line_start":40,"line_end":40,"column_start":17,"column_end":29},"kind":{"Impl":{"id":403}},"from":{"krate":0,"index":16775},"to":{"krate":2,"index":2745}},{"span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\futures_ordered.rs","byte_start":449769,"byte_end":449781,"line_start":47,"line_end":47,"column_start":20,"column_end":32},"kind":{"Impl":{"id":404}},"from":{"krate":0,"index":16775},"to":{"krate":2,"index":13098}},{"span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\futures_ordered.rs","byte_start":452363,"byte_end":452377,"line_start":102,"line_end":102,"column_start":27,"column_end":41},"kind":{"Impl":{"id":405}},"from":{"krate":0,"index":6376},"to":{"krate":2,"index":3098}},{"span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\futures_ordered.rs","byte_start":452403,"byte_end":452417,"line_start":104,"line_end":104,"column_start":19,"column_end":33},"kind":{"Impl":{"id":406}},"from":{"krate":0,"index":6376},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\futures_ordered.rs","byte_start":453983,"byte_end":453997,"line_start":145,"line_end":145,"column_start":31,"column_end":45},"kind":{"Impl":{"id":407}},"from":{"krate":0,"index":6376},"to":{"krate":2,"index":3035}},{"span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\futures_ordered.rs","byte_start":454090,"byte_end":454104,"line_start":151,"line_end":151,"column_start":30,"column_end":44},"kind":{"Impl":{"id":408}},"from":{"krate":0,"index":6376},"to":{"krate":16,"index":96}},{"span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\futures_ordered.rs","byte_start":455266,"byte_end":455280,"line_start":186,"line_end":186,"column_start":29,"column_end":43},"kind":{"Impl":{"id":409}},"from":{"krate":0,"index":6376},"to":{"krate":2,"index":9685}},{"span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\futures_ordered.rs","byte_start":455446,"byte_end":455460,"line_start":192,"line_end":192,"column_start":41,"column_end":55},"kind":{"Impl":{"id":410}},"from":{"krate":0,"index":6376},"to":{"krate":2,"index":7786}},{"span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\futures_ordered.rs","byte_start":455740,"byte_end":455754,"line_start":205,"line_end":205,"column_start":35,"column_end":49},"kind":{"Impl":{"id":411}},"from":{"krate":0,"index":6376},"to":{"krate":16,"index":110}},{"span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\futures_ordered.rs","byte_start":455924,"byte_end":455938,"line_start":211,"line_end":211,"column_start":35,"column_end":49},"kind":{"Impl":{"id":412}},"from":{"krate":0,"index":6376},"to":{"krate":2,"index":7799}},{"span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\futures_unordered\\abort.rs","byte_start":482903,"byte_end":482914,"line_start":4,"line_end":4,"column_start":19,"column_end":30},"kind":{"Impl":{"id":413}},"from":{"krate":0,"index":6510},"to":{"krate":2,"index":3300}},{"span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\futures_unordered\\iter.rs","byte_start":484273,"byte_end":484281,"line_start":39,"line_end":39,"column_start":31,"column_end":39},"kind":{"Impl":{"id":414}},"from":{"krate":0,"index":16854},"to":{"krate":2,"index":7985}},{"span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\futures_unordered\\iter.rs","byte_start":485355,"byte_end":485363,"line_start":71,"line_end":71,"column_start":40,"column_end":48},"kind":{"Impl":{"id":415}},"from":{"krate":0,"index":16854},"to":{"krate":2,"index":7859}},{"span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\futures_unordered\\iter.rs","byte_start":485400,"byte_end":485410,"line_start":73,"line_end":73,"column_start":28,"column_end":38},"kind":{"Impl":{"id":416}},"from":{"krate":0,"index":16815},"to":{"krate":2,"index":7985}},{"span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\futures_unordered\\iter.rs","byte_start":486262,"byte_end":486272,"line_start":100,"line_end":100,"column_start":33,"column_end":43},"kind":{"Impl":{"id":417}},"from":{"krate":0,"index":16815},"to":{"krate":2,"index":7859}},{"span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\futures_unordered\\iter.rs","byte_start":486320,"byte_end":486327,"line_start":102,"line_end":102,"column_start":35,"column_end":42},"kind":{"Impl":{"id":418}},"from":{"krate":0,"index":16825},"to":{"krate":2,"index":7985}},{"span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\futures_unordered\\iter.rs","byte_start":486590,"byte_end":486597,"line_start":114,"line_end":114,"column_start":40,"column_end":47},"kind":{"Impl":{"id":419}},"from":{"krate":0,"index":16825},"to":{"krate":2,"index":7859}},{"span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\futures_unordered\\iter.rs","byte_start":486638,"byte_end":486648,"line_start":116,"line_end":116,"column_start":28,"column_end":38},"kind":{"Impl":{"id":420}},"from":{"krate":0,"index":16834},"to":{"krate":2,"index":7985}},{"span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\futures_unordered\\iter.rs","byte_start":487517,"byte_end":487527,"line_start":143,"line_end":143,"column_start":33,"column_end":43},"kind":{"Impl":{"id":421}},"from":{"krate":0,"index":16834},"to":{"krate":2,"index":7859}},{"span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\futures_unordered\\iter.rs","byte_start":487575,"byte_end":487579,"line_start":145,"line_end":145,"column_start":35,"column_end":39},"kind":{"Impl":{"id":422}},"from":{"krate":0,"index":16845},"to":{"krate":2,"index":7985}},{"span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\futures_unordered\\iter.rs","byte_start":487838,"byte_end":487842,"line_start":157,"line_end":157,"column_start":40,"column_end":44},"kind":{"Impl":{"id":423}},"from":{"krate":0,"index":16845},"to":{"krate":2,"index":7859}},{"span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\futures_unordered\\iter.rs","byte_start":488011,"byte_end":488021,"line_start":161,"line_end":161,"column_start":33,"column_end":43},"kind":{"Impl":{"id":424}},"from":{"krate":0,"index":16834},"to":{"krate":2,"index":3057}},{"span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\futures_unordered\\iter.rs","byte_start":488066,"byte_end":488076,"line_start":162,"line_end":162,"column_start":33,"column_end":43},"kind":{"Impl":{"id":425}},"from":{"krate":0,"index":16834},"to":{"krate":2,"index":3069}},{"span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\futures_unordered\\iter.rs","byte_start":488122,"byte_end":488132,"line_start":164,"line_end":164,"column_start":33,"column_end":43},"kind":{"Impl":{"id":426}},"from":{"krate":0,"index":16815},"to":{"krate":2,"index":3057}},{"span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\futures_unordered\\iter.rs","byte_start":488177,"byte_end":488187,"line_start":165,"line_end":165,"column_start":33,"column_end":43},"kind":{"Impl":{"id":427}},"from":{"krate":0,"index":16815},"to":{"krate":2,"index":3069}},{"span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\futures_unordered\\iter.rs","byte_start":488241,"byte_end":488249,"line_start":167,"line_end":167,"column_start":41,"column_end":49},"kind":{"Impl":{"id":428}},"from":{"krate":0,"index":16854},"to":{"krate":2,"index":3057}},{"span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\futures_unordered\\iter.rs","byte_start":488298,"byte_end":488306,"line_start":168,"line_end":168,"column_start":41,"column_end":49},"kind":{"Impl":{"id":429}},"from":{"krate":0,"index":16854},"to":{"krate":2,"index":3069}},{"span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\futures_unordered\\task.rs","byte_start":489991,"byte_end":489995,"line_start":46,"line_end":46,"column_start":27,"column_end":31},"kind":{"Impl":{"id":430}},"from":{"krate":0,"index":6641},"to":{"krate":2,"index":3057}},{"span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\futures_unordered\\task.rs","byte_start":490030,"byte_end":490034,"line_start":47,"line_end":47,"column_start":27,"column_end":31},"kind":{"Impl":{"id":431}},"from":{"krate":0,"index":6641},"to":{"krate":2,"index":3069}},{"span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\futures_unordered\\task.rs","byte_start":490066,"byte_end":490070,"line_start":49,"line_end":49,"column_start":23,"column_end":27},"kind":{"Impl":{"id":432}},"from":{"krate":0,"index":6641},"to":{"krate":18,"index":94}},{"span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\futures_unordered\\task.rs","byte_start":491203,"byte_end":491207,"line_start":78,"line_end":78,"column_start":11,"column_end":15},"kind":{"Impl":{"id":433}},"from":{"krate":0,"index":6641},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\futures_unordered\\task.rs","byte_start":492207,"byte_end":492211,"line_start":109,"line_end":109,"column_start":20,"column_end":24},"kind":{"Impl":{"id":434}},"from":{"krate":0,"index":6641},"to":{"krate":2,"index":3300}},{"span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\futures_unordered\\ready_to_run_queue.rs","byte_start":493661,"byte_end":493676,"line_start":29,"line_end":29,"column_start":11,"column_end":26},"kind":{"Impl":{"id":435}},"from":{"krate":0,"index":6712},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\futures_unordered\\ready_to_run_queue.rs","byte_start":496344,"byte_end":496359,"line_start":111,"line_end":111,"column_start":20,"column_end":35},"kind":{"Impl":{"id":436}},"from":{"krate":0,"index":6712},"to":{"krate":2,"index":3300}},{"span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\futures_unordered\\mod.rs","byte_start":458325,"byte_end":458341,"line_start":60,"line_end":60,"column_start":33,"column_end":49},"kind":{"Impl":{"id":437}},"from":{"krate":0,"index":6734},"to":{"krate":2,"index":3057}},{"span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\futures_unordered\\mod.rs","byte_start":458382,"byte_end":458398,"line_start":61,"line_end":61,"column_start":33,"column_end":49},"kind":{"Impl":{"id":438}},"from":{"krate":0,"index":6734},"to":{"krate":2,"index":3069}},{"span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\futures_unordered\\mod.rs","byte_start":458427,"byte_end":458443,"line_start":62,"line_end":62,"column_start":21,"column_end":37},"kind":{"Impl":{"id":439}},"from":{"krate":0,"index":6734},"to":{"krate":2,"index":3098}},{"span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\futures_unordered\\mod.rs","byte_start":458468,"byte_end":458484,"line_start":64,"line_end":64,"column_start":16,"column_end":32},"kind":{"Impl":{"id":440}},"from":{"krate":0,"index":6734},"to":{"krate":18,"index":15}},{"span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\futures_unordered\\mod.rs","byte_start":458669,"byte_end":458685,"line_start":71,"line_end":71,"column_start":21,"column_end":37},"kind":{"Impl":{"id":441}},"from":{"krate":0,"index":6734},"to":{"krate":18,"index":18}},{"span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\futures_unordered\\mod.rs","byte_start":460392,"byte_end":460408,"line_start":103,"line_end":103,"column_start":23,"column_end":39},"kind":{"Impl":{"id":442}},"from":{"krate":0,"index":6734},"to":{"krate":2,"index":3035}},{"span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\futures_unordered\\mod.rs","byte_start":460482,"byte_end":460498,"line_start":109,"line_end":109,"column_start":11,"column_end":27},"kind":{"Impl":{"id":443}},"from":{"krate":0,"index":6734},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\futures_unordered\\mod.rs","byte_start":472107,"byte_end":472123,"line_start":384,"line_end":384,"column_start":30,"column_end":46},"kind":{"Impl":{"id":444}},"from":{"krate":0,"index":6734},"to":{"krate":16,"index":96}},{"span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\futures_unordered\\mod.rs","byte_start":476499,"byte_end":476503,"line_start":482,"line_end":482,"column_start":32,"column_end":36},"kind":{"Impl":{"id":445}},"from":{"krate":0,"index":6771},"to":{"krate":2,"index":3300}},{"span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\futures_unordered\\mod.rs","byte_start":479312,"byte_end":479328,"line_start":548,"line_end":548,"column_start":21,"column_end":37},"kind":{"Impl":{"id":446}},"from":{"krate":0,"index":6734},"to":{"krate":2,"index":9685}},{"span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\futures_unordered\\mod.rs","byte_start":479466,"byte_end":479482,"line_start":554,"line_end":554,"column_start":11,"column_end":27},"kind":{"Impl":{"id":447}},"from":{"krate":0,"index":6734},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\futures_unordered\\mod.rs","byte_start":480053,"byte_end":480069,"line_start":574,"line_end":574,"column_start":20,"column_end":36},"kind":{"Impl":{"id":448}},"from":{"krate":0,"index":6734},"to":{"krate":2,"index":3300}},{"span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\futures_unordered\\mod.rs","byte_start":481719,"byte_end":481735,"line_start":615,"line_end":615,"column_start":35,"column_end":51},"kind":{"Impl":{"id":449}},"from":{"krate":0,"index":6734},"to":{"krate":2,"index":7790}},{"span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\futures_unordered\\mod.rs","byte_start":482205,"byte_end":482221,"line_start":629,"line_end":629,"column_start":33,"column_end":49},"kind":{"Impl":{"id":450}},"from":{"krate":0,"index":6734},"to":{"krate":2,"index":7786}},{"span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\futures_unordered\\mod.rs","byte_start":482497,"byte_end":482513,"line_start":642,"line_end":642,"column_start":35,"column_end":51},"kind":{"Impl":{"id":451}},"from":{"krate":0,"index":6734},"to":{"krate":16,"index":110}},{"span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\futures_unordered\\mod.rs","byte_start":482635,"byte_end":482651,"line_start":648,"line_end":648,"column_start":27,"column_end":43},"kind":{"Impl":{"id":452}},"from":{"krate":0,"index":6734},"to":{"krate":2,"index":7799}},{"span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\select_all.rs","byte_start":497954,"byte_end":497963,"line_start":36,"line_end":36,"column_start":27,"column_end":36},"kind":{"Impl":{"id":453}},"from":{"krate":0,"index":16861},"to":{"krate":2,"index":9685}},{"span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\select_all.rs","byte_start":498108,"byte_end":498117,"line_start":42,"line_end":42,"column_start":26,"column_end":35},"kind":{"Impl":{"id":454}},"from":{"krate":0,"index":16861},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\select_all.rs","byte_start":499590,"byte_end":499599,"line_start":89,"line_end":89,"column_start":38,"column_end":47},"kind":{"Impl":{"id":455}},"from":{"krate":0,"index":16861},"to":{"krate":2,"index":3035}},{"span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\select_all.rs","byte_start":499698,"byte_end":499707,"line_start":95,"line_end":95,"column_start":37,"column_end":46},"kind":{"Impl":{"id":456}},"from":{"krate":0,"index":16861},"to":{"krate":16,"index":96}},{"span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\select_all.rs","byte_start":500491,"byte_end":500500,"line_start":117,"line_end":117,"column_start":42,"column_end":51},"kind":{"Impl":{"id":457}},"from":{"krate":0,"index":16861},"to":{"krate":16,"index":110}},{"span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\select_all.rs","byte_start":501518,"byte_end":501527,"line_start":149,"line_end":149,"column_start":47,"column_end":56},"kind":{"Impl":{"id":458}},"from":{"krate":0,"index":16861},"to":{"krate":2,"index":7786}},{"span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\select_all.rs","byte_start":501672,"byte_end":501681,"line_start":155,"line_end":155,"column_start":41,"column_end":50},"kind":{"Impl":{"id":459}},"from":{"krate":0,"index":16861},"to":{"krate":2,"index":7799}},{"span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\select_all.rs","byte_start":501864,"byte_end":501873,"line_start":163,"line_end":163,"column_start":43,"column_end":52},"kind":{"Impl":{"id":460}},"from":{"krate":0,"index":16861},"to":{"krate":2,"index":7790}},{"span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\select_all.rs","byte_start":502956,"byte_end":502960,"line_start":202,"line_end":202,"column_start":43,"column_end":47},"kind":{"Impl":{"id":461}},"from":{"krate":0,"index":16894},"to":{"krate":2,"index":7985}},{"span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\select_all.rs","byte_start":503393,"byte_end":503397,"line_start":218,"line_end":218,"column_start":48,"column_end":52},"kind":{"Impl":{"id":462}},"from":{"krate":0,"index":16894},"to":{"krate":2,"index":7859}},{"span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\select_all.rs","byte_start":503452,"byte_end":503459,"line_start":220,"line_end":220,"column_start":43,"column_end":50},"kind":{"Impl":{"id":463}},"from":{"krate":0,"index":16903},"to":{"krate":2,"index":7985}},{"span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\select_all.rs","byte_start":503896,"byte_end":503903,"line_start":236,"line_end":236,"column_start":48,"column_end":55},"kind":{"Impl":{"id":464}},"from":{"krate":0,"index":16903},"to":{"krate":2,"index":7859}},{"span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\select_all.rs","byte_start":503954,"byte_end":503962,"line_start":238,"line_end":238,"column_start":39,"column_end":47},"kind":{"Impl":{"id":465}},"from":{"krate":0,"index":16912},"to":{"krate":2,"index":7985}},{"span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\stream\\select_all.rs","byte_start":504390,"byte_end":504398,"line_start":254,"line_end":254,"column_start":48,"column_end":56},"kind":{"Impl":{"id":466}},"from":{"krate":0,"index":16912},"to":{"krate":2,"index":7859}},{"span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\sink\\close.rs","byte_start":516742,"byte_end":516747,"line_start":15,"line_end":15,"column_start":42,"column_end":47},"kind":{"Impl":{"id":467}},"from":{"krate":0,"index":16919},"to":{"krate":2,"index":3098}},{"span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\sink\\close.rs","byte_start":516941,"byte_end":516946,"line_start":20,"line_end":20,"column_start":49,"column_end":54},"kind":{"Impl":{"id":468}},"from":{"krate":0,"index":16919},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\sink\\close.rs","byte_start":517122,"byte_end":517127,"line_start":26,"line_end":26,"column_start":56,"column_end":61},"kind":{"Impl":{"id":469}},"from":{"krate":0,"index":16919},"to":{"krate":2,"index":13098}},{"span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\sink\\drain.rs","byte_start":518117,"byte_end":518122,"line_start":33,"line_end":33,"column_start":19,"column_end":24},"kind":{"Impl":{"id":470}},"from":{"krate":0,"index":16930},"to":{"krate":2,"index":3098}},{"span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\sink\\drain.rs","byte_start":518150,"byte_end":518155,"line_start":35,"line_end":35,"column_start":21,"column_end":26},"kind":{"Impl":{"id":471}},"from":{"krate":0,"index":16930},"to":{"krate":19,"index":17}},{"span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\sink\\fanout.rs","byte_start":519316,"byte_end":519322,"line_start":21,"line_end":21,"column_start":16,"column_end":22},"kind":{"Impl":{"id":472}},"from":{"krate":0,"index":16936},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\sink\\fanout.rs","byte_start":520290,"byte_end":520296,"line_start":51,"line_end":51,"column_start":40,"column_end":46},"kind":{"Impl":{"id":473}},"from":{"krate":0,"index":16936},"to":{"krate":2,"index":9685}},{"span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\sink\\fanout.rs","byte_start":520508,"byte_end":520514,"line_start":57,"line_end":57,"column_start":37,"column_end":43},"kind":{"Impl":{"id":474}},"from":{"krate":0,"index":16936},"to":{"krate":19,"index":17}},{"span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\sink\\feed.rs","byte_start":522593,"byte_end":522597,"line_start":16,"line_end":16,"column_start":42,"column_end":46},"kind":{"Impl":{"id":475}},"from":{"krate":0,"index":16981},"to":{"krate":2,"index":3098}},{"span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\sink\\feed.rs","byte_start":522664,"byte_end":522668,"line_start":18,"line_end":18,"column_start":49,"column_end":53},"kind":{"Impl":{"id":476}},"from":{"krate":0,"index":16981},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\sink\\feed.rs","byte_start":523032,"byte_end":523036,"line_start":32,"line_end":32,"column_start":56,"column_end":60},"kind":{"Impl":{"id":477}},"from":{"krate":0,"index":16981},"to":{"krate":2,"index":13098}},{"span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\sink\\flush.rs","byte_start":523938,"byte_end":523943,"line_start":16,"line_end":16,"column_start":42,"column_end":47},"kind":{"Impl":{"id":478}},"from":{"krate":0,"index":16992},"to":{"krate":2,"index":3098}},{"span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\sink\\flush.rs","byte_start":524294,"byte_end":524299,"line_start":24,"line_end":24,"column_start":49,"column_end":54},"kind":{"Impl":{"id":479}},"from":{"krate":0,"index":16992},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\sink\\flush.rs","byte_start":524475,"byte_end":524480,"line_start":30,"line_end":30,"column_start":56,"column_end":61},"kind":{"Impl":{"id":480}},"from":{"krate":0,"index":16992},"to":{"krate":2,"index":13098}},{"span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\sink\\err_into.rs","byte_start":525140,"byte_end":525151,"line_start":16,"line_end":16,"column_start":19,"column_end":30},"kind":{"Impl":{"id":481}},"from":{"krate":0,"index":17003},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\sink\\err_into.rs","byte_start":525408,"byte_end":525419,"line_start":28,"line_end":28,"column_start":34,"column_end":45},"kind":{"Impl":{"id":482}},"from":{"krate":0,"index":17003},"to":{"krate":19,"index":17}},{"span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\sink\\err_into.rs","byte_start":525623,"byte_end":525634,"line_start":39,"line_end":39,"column_start":29,"column_end":40},"kind":{"Impl":{"id":483}},"from":{"krate":0,"index":17003},"to":{"krate":16,"index":96}},{"span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\sink\\err_into.rs","byte_start":525796,"byte_end":525807,"line_start":49,"line_end":49,"column_start":34,"column_end":45},"kind":{"Impl":{"id":484}},"from":{"krate":0,"index":17003},"to":{"krate":16,"index":110}},{"span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\sink\\map_err.rs","byte_start":526416,"byte_end":526426,"line_start":18,"line_end":18,"column_start":13,"column_end":23},"kind":{"Impl":{"id":485}},"from":{"krate":0,"index":17067},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\sink\\map_err.rs","byte_start":526729,"byte_end":526739,"line_start":30,"line_end":30,"column_start":37,"column_end":47},"kind":{"Impl":{"id":486}},"from":{"krate":0,"index":17067},"to":{"krate":19,"index":17}},{"span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\sink\\map_err.rs","byte_start":527695,"byte_end":527705,"line_start":55,"line_end":55,"column_start":31,"column_end":41},"kind":{"Impl":{"id":487}},"from":{"krate":0,"index":17067},"to":{"krate":16,"index":96}},{"span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\sink\\map_err.rs","byte_start":527811,"byte_end":527821,"line_start":61,"line_end":61,"column_start":41,"column_end":51},"kind":{"Impl":{"id":488}},"from":{"krate":0,"index":17067},"to":{"krate":16,"index":110}},{"span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\sink\\send.rs","byte_start":528372,"byte_end":528376,"line_start":16,"line_end":16,"column_start":42,"column_end":46},"kind":{"Impl":{"id":489}},"from":{"krate":0,"index":17126},"to":{"krate":2,"index":3098}},{"span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\sink\\send.rs","byte_start":528443,"byte_end":528447,"line_start":18,"line_end":18,"column_start":49,"column_end":53},"kind":{"Impl":{"id":490}},"from":{"krate":0,"index":17126},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\sink\\send.rs","byte_start":528635,"byte_end":528639,"line_start":24,"line_end":24,"column_start":56,"column_end":60},"kind":{"Impl":{"id":491}},"from":{"krate":0,"index":17126},"to":{"krate":2,"index":13098}},{"span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\sink\\send_all.rs","byte_start":529845,"byte_end":529852,"line_start":23,"line_end":23,"column_start":29,"column_end":36},"kind":{"Impl":{"id":492}},"from":{"krate":0,"index":7409},"to":{"krate":2,"index":9685}},{"span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\sink\\send_all.rs","byte_start":530291,"byte_end":530298,"line_start":39,"line_end":39,"column_start":24,"column_end":31},"kind":{"Impl":{"id":493}},"from":{"krate":0,"index":7409},"to":{"krate":2,"index":3098}},{"span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\sink\\send_all.rs","byte_start":530410,"byte_end":530417,"line_start":46,"line_end":46,"column_start":29,"column_end":36},"kind":{"Impl":{"id":494}},"from":{"krate":0,"index":7409},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\sink\\send_all.rs","byte_start":531193,"byte_end":531200,"line_start":71,"line_end":71,"column_start":36,"column_end":43},"kind":{"Impl":{"id":495}},"from":{"krate":0,"index":7409},"to":{"krate":2,"index":13098}},{"span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\sink\\unfold.rs","byte_start":533499,"byte_end":533505,"line_start":47,"line_end":47,"column_start":39,"column_end":45},"kind":{"Impl":{"id":496}},"from":{"krate":0,"index":17136},"to":{"krate":19,"index":17}},{"span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\sink\\with.rs","byte_start":535422,"byte_end":535426,"line_start":24,"line_end":24,"column_start":42,"column_end":46},"kind":{"Impl":{"id":497}},"from":{"krate":0,"index":17194},"to":{"krate":2,"index":9685}},{"span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\sink\\with.rs","byte_start":535689,"byte_end":535693,"line_start":34,"line_end":34,"column_start":27,"column_end":31},"kind":{"Impl":{"id":498}},"from":{"krate":0,"index":17194},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\sink\\with.rs","byte_start":536030,"byte_end":536034,"line_start":49,"line_end":49,"column_start":37,"column_end":41},"kind":{"Impl":{"id":499}},"from":{"krate":0,"index":17194},"to":{"krate":2,"index":2679}},{"span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\sink\\with.rs","byte_start":536405,"byte_end":536409,"line_start":66,"line_end":66,"column_start":37,"column_end":41},"kind":{"Impl":{"id":500}},"from":{"krate":0,"index":17194},"to":{"krate":16,"index":96}},{"span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\sink\\with.rs","byte_start":536593,"byte_end":536597,"line_start":77,"line_end":77,"column_start":30,"column_end":34},"kind":{"Impl":{"id":501}},"from":{"krate":0,"index":17194},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\sink\\with.rs","byte_start":537272,"byte_end":537276,"line_start":100,"line_end":100,"column_start":42,"column_end":46},"kind":{"Impl":{"id":502}},"from":{"krate":0,"index":17194},"to":{"krate":19,"index":17}},{"span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\sink\\with_flat_map.rs","byte_start":538995,"byte_end":539006,"line_start":24,"line_end":24,"column_start":41,"column_end":52},"kind":{"Impl":{"id":503}},"from":{"krate":0,"index":17277},"to":{"krate":2,"index":9685}},{"span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\sink\\with_flat_map.rs","byte_start":539379,"byte_end":539390,"line_start":39,"line_end":39,"column_start":26,"column_end":37},"kind":{"Impl":{"id":504}},"from":{"krate":0,"index":17277},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\sink\\with_flat_map.rs","byte_start":540677,"byte_end":540688,"line_start":76,"line_end":76,"column_start":36,"column_end":47},"kind":{"Impl":{"id":505}},"from":{"krate":0,"index":17277},"to":{"krate":16,"index":96}},{"span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\sink\\with_flat_map.rs","byte_start":540911,"byte_end":540922,"line_start":87,"line_end":87,"column_start":41,"column_end":52},"kind":{"Impl":{"id":506}},"from":{"krate":0,"index":17277},"to":{"krate":16,"index":110}},{"span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\sink\\with_flat_map.rs","byte_start":541171,"byte_end":541182,"line_start":98,"line_end":98,"column_start":38,"column_end":49},"kind":{"Impl":{"id":507}},"from":{"krate":0,"index":17277},"to":{"krate":19,"index":17}},{"span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\sink\\buffer.rs","byte_start":542726,"byte_end":542732,"line_start":23,"line_end":23,"column_start":28,"column_end":34},"kind":{"Impl":{"id":508}},"from":{"krate":0,"index":17364},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\sink\\buffer.rs","byte_start":543460,"byte_end":543466,"line_start":44,"line_end":44,"column_start":26,"column_end":32},"kind":{"Impl":{"id":509}},"from":{"krate":0,"index":17364},"to":{"krate":16,"index":96}},{"span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\sink\\buffer.rs","byte_start":543796,"byte_end":543802,"line_start":59,"line_end":59,"column_start":31,"column_end":37},"kind":{"Impl":{"id":510}},"from":{"krate":0,"index":17364},"to":{"krate":16,"index":110}},{"span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\sink\\buffer.rs","byte_start":543976,"byte_end":543982,"line_start":68,"line_end":68,"column_start":43,"column_end":49},"kind":{"Impl":{"id":511}},"from":{"krate":0,"index":17364},"to":{"krate":19,"index":17}},{"span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\sink\\mod.rs","byte_start":506287,"byte_end":506288,"line_start":61,"line_end":61,"column_start":41,"column_end":42},"kind":{"Impl":{"id":512}},"from":{"krate":0,"index":7712},"to":{"krate":0,"index":7714}},{"span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\sink\\mod.rs","byte_start":506437,"byte_end":506441,"line_start":65,"line_end":65,"column_start":26,"column_end":30},"kind":"SuperTrait","from":{"krate":19,"index":17},"to":{"krate":0,"index":7714}},{"span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\task\\spawn.rs","byte_start":546716,"byte_end":546718,"line_start":16,"line_end":16,"column_start":31,"column_end":33},"kind":{"Impl":{"id":513}},"from":{"krate":0,"index":7842},"to":{"krate":0,"index":7845}},{"span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\task\\spawn.rs","byte_start":546773,"byte_end":546775,"line_start":17,"line_end":17,"column_start":36,"column_end":38},"kind":{"Impl":{"id":514}},"from":{"krate":0,"index":7844},"to":{"krate":0,"index":7848}},{"span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\task\\spawn.rs","byte_start":546854,"byte_end":546859,"line_start":20,"line_end":20,"column_start":21,"column_end":26},"kind":"SuperTrait","from":{"krate":18,"index":15},"to":{"krate":0,"index":7845}},{"span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\task\\spawn.rs","byte_start":549793,"byte_end":549803,"line_start":99,"line_end":99,"column_start":26,"column_end":36},"kind":"SuperTrait","from":{"krate":18,"index":18},"to":{"krate":0,"index":7848}},{"span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\io\\allow_std.rs","byte_start":581169,"byte_end":581179,"line_start":19,"line_end":19,"column_start":19,"column_end":29},"kind":{"Impl":{"id":515}},"from":{"krate":0,"index":17421},"to":{"krate":2,"index":3098}},{"span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\io\\allow_std.rs","byte_start":581617,"byte_end":581627,"line_start":39,"line_end":39,"column_start":9,"column_end":19},"kind":{"Impl":{"id":516}},"from":{"krate":0,"index":17421},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\io\\allow_std.rs","byte_start":582138,"byte_end":582148,"line_start":61,"line_end":61,"column_start":23,"column_end":33},"kind":{"Impl":{"id":517}},"from":{"krate":0,"index":17421},"to":{"krate":1,"index":4780}},{"span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\io\\allow_std.rs","byte_start":582693,"byte_end":582703,"line_start":82,"line_end":82,"column_start":24,"column_end":34},"kind":{"Impl":{"id":518}},"from":{"krate":0,"index":17421},"to":{"krate":22,"index":42}},{"span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\io\\allow_std.rs","byte_start":583495,"byte_end":583505,"line_start":112,"line_end":112,"column_start":22,"column_end":32},"kind":{"Impl":{"id":519}},"from":{"krate":0,"index":17421},"to":{"krate":1,"index":4723}},{"span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\io\\allow_std.rs","byte_start":584104,"byte_end":584114,"line_start":133,"line_end":133,"column_start":23,"column_end":33},"kind":{"Impl":{"id":520}},"from":{"krate":0,"index":17421},"to":{"krate":22,"index":39}},{"span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\io\\allow_std.rs","byte_start":584618,"byte_end":584628,"line_start":154,"line_end":154,"column_start":22,"column_end":32},"kind":{"Impl":{"id":521}},"from":{"krate":0,"index":17421},"to":{"krate":1,"index":4798}},{"span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\io\\allow_std.rs","byte_start":584772,"byte_end":584782,"line_start":163,"line_end":163,"column_start":23,"column_end":33},"kind":{"Impl":{"id":522}},"from":{"krate":0,"index":17421},"to":{"krate":22,"index":47}},{"span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\io\\allow_std.rs","byte_start":585044,"byte_end":585054,"line_start":176,"line_end":176,"column_start":25,"column_end":35},"kind":{"Impl":{"id":523}},"from":{"krate":0,"index":17421},"to":{"krate":1,"index":4805}},{"span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\io\\allow_std.rs","byte_start":585270,"byte_end":585280,"line_start":188,"line_end":188,"column_start":26,"column_end":36},"kind":{"Impl":{"id":524}},"from":{"krate":0,"index":17421},"to":{"krate":22,"index":49}},{"span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\io\\buf_reader.rs","byte_start":587087,"byte_end":587096,"line_start":40,"line_end":40,"column_start":20,"column_end":29},"kind":{"Impl":{"id":525}},"from":{"krate":0,"index":17454},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\io\\buf_reader.rs","byte_start":588239,"byte_end":588248,"line_start":75,"line_end":75,"column_start":32,"column_end":41},"kind":{"Impl":{"id":526}},"from":{"krate":0,"index":17454},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\io\\buf_reader.rs","byte_start":589809,"byte_end":589818,"line_start":109,"line_end":109,"column_start":34,"column_end":43},"kind":{"Impl":{"id":527}},"from":{"krate":0,"index":17454},"to":{"krate":22,"index":39}},{"span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\io\\buf_reader.rs","byte_start":591220,"byte_end":591229,"line_start":147,"line_end":147,"column_start":37,"column_end":46},"kind":{"Impl":{"id":528}},"from":{"krate":0,"index":17454},"to":{"krate":22,"index":49}},{"span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\io\\buf_reader.rs","byte_start":592059,"byte_end":592068,"line_start":168,"line_end":168,"column_start":36,"column_end":45},"kind":{"Impl":{"id":529}},"from":{"krate":0,"index":17454},"to":{"krate":22,"index":42}},{"span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\io\\buf_reader.rs","byte_start":592146,"byte_end":592155,"line_start":172,"line_end":172,"column_start":36,"column_end":45},"kind":{"Impl":{"id":530}},"from":{"krate":0,"index":17454},"to":{"krate":2,"index":9685}},{"span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\io\\buf_reader.rs","byte_start":592471,"byte_end":592480,"line_start":181,"line_end":181,"column_start":46,"column_end":55},"kind":{"Impl":{"id":531}},"from":{"krate":0,"index":17454},"to":{"krate":22,"index":47}},{"span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\io\\buf_reader.rs","byte_start":595400,"byte_end":595412,"line_start":244,"line_end":244,"column_start":20,"column_end":32},"kind":{"Impl":{"id":532}},"from":{"krate":0,"index":17507},"to":{"krate":2,"index":13098}},{"span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\io\\buf_writer.rs","byte_start":597494,"byte_end":597503,"line_start":41,"line_end":41,"column_start":21,"column_end":30},"kind":{"Impl":{"id":533}},"from":{"krate":0,"index":17517},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\io\\buf_writer.rs","byte_start":601102,"byte_end":601111,"line_start":151,"line_end":151,"column_start":36,"column_end":45},"kind":{"Impl":{"id":534}},"from":{"krate":0,"index":17517},"to":{"krate":22,"index":42}},{"span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\io\\buf_writer.rs","byte_start":602534,"byte_end":602543,"line_start":194,"line_end":194,"column_start":34,"column_end":43},"kind":{"Impl":{"id":535}},"from":{"krate":0,"index":17517},"to":{"krate":22,"index":39}},{"span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\io\\buf_writer.rs","byte_start":602624,"byte_end":602633,"line_start":198,"line_end":198,"column_start":40,"column_end":49},"kind":{"Impl":{"id":536}},"from":{"krate":0,"index":17517},"to":{"krate":22,"index":49}},{"span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\io\\buf_writer.rs","byte_start":602714,"byte_end":602723,"line_start":202,"line_end":202,"column_start":36,"column_end":45},"kind":{"Impl":{"id":537}},"from":{"krate":0,"index":17517},"to":{"krate":2,"index":9685}},{"span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\io\\buf_writer.rs","byte_start":603082,"byte_end":603091,"line_start":212,"line_end":212,"column_start":47,"column_end":56},"kind":{"Impl":{"id":538}},"from":{"krate":0,"index":17517},"to":{"krate":22,"index":47}},{"span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\io\\line_writer.rs","byte_start":604145,"byte_end":604155,"line_start":25,"line_end":25,"column_start":21,"column_end":31},"kind":{"Impl":{"id":539}},"from":{"krate":0,"index":17566},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\io\\line_writer.rs","byte_start":605357,"byte_end":605367,"line_start":58,"line_end":58,"column_start":36,"column_end":46},"kind":{"Impl":{"id":540}},"from":{"krate":0,"index":17566},"to":{"krate":22,"index":42}},{"span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\io\\chain.rs","byte_start":609227,"byte_end":609232,"line_start":21,"line_end":21,"column_start":12,"column_end":17},"kind":{"Impl":{"id":541}},"from":{"krate":0,"index":17602},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\io\\chain.rs","byte_start":610488,"byte_end":610493,"line_start":60,"line_end":60,"column_start":27,"column_end":32},"kind":{"Impl":{"id":542}},"from":{"krate":0,"index":17602},"to":{"krate":2,"index":9685}},{"span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\io\\chain.rs","byte_start":610823,"byte_end":610828,"line_start":74,"line_end":74,"column_start":26,"column_end":31},"kind":{"Impl":{"id":543}},"from":{"krate":0,"index":17602},"to":{"krate":22,"index":39}},{"span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\io\\chain.rs","byte_start":611897,"byte_end":611902,"line_start":114,"line_end":114,"column_start":29,"column_end":34},"kind":{"Impl":{"id":544}},"from":{"krate":0,"index":17602},"to":{"krate":22,"index":49}},{"span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\io\\close.rs","byte_start":613013,"byte_end":613018,"line_start":14,"line_end":14,"column_start":35,"column_end":40},"kind":{"Impl":{"id":545}},"from":{"krate":0,"index":17651},"to":{"krate":2,"index":3098}},{"span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\io\\close.rs","byte_start":613071,"byte_end":613076,"line_start":16,"line_end":16,"column_start":42,"column_end":47},"kind":{"Impl":{"id":546}},"from":{"krate":0,"index":17651},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\io\\close.rs","byte_start":613218,"byte_end":613223,"line_start":22,"line_end":22,"column_start":49,"column_end":54},"kind":{"Impl":{"id":547}},"from":{"krate":0,"index":17651},"to":{"krate":2,"index":13098}},{"span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\io\\copy.rs","byte_start":614993,"byte_end":614997,"line_start":52,"line_end":52,"column_start":63,"column_end":67},"kind":{"Impl":{"id":548}},"from":{"krate":0,"index":17659},"to":{"krate":2,"index":13098}},{"span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\io\\copy_buf.rs","byte_start":616720,"byte_end":616727,"line_start":54,"line_end":54,"column_start":23,"column_end":30},"kind":{"Impl":{"id":549}},"from":{"krate":0,"index":17713},"to":{"krate":2,"index":13098}},{"span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\io\\cursor.rs","byte_start":618560,"byte_end":618566,"line_start":29,"line_end":29,"column_start":9,"column_end":15},"kind":{"Impl":{"id":550}},"from":{"krate":0,"index":17775},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\io\\cursor.rs","byte_start":621766,"byte_end":621772,"line_start":148,"line_end":148,"column_start":23,"column_end":29},"kind":{"Impl":{"id":551}},"from":{"krate":0,"index":17775},"to":{"krate":22,"index":47}},{"span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\io\\cursor.rs","byte_start":622059,"byte_end":622065,"line_start":161,"line_end":161,"column_start":44,"column_end":50},"kind":{"Impl":{"id":552}},"from":{"krate":0,"index":17775},"to":{"krate":22,"index":39}},{"span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\io\\cursor.rs","byte_start":622697,"byte_end":622703,"line_start":185,"line_end":185,"column_start":26,"column_end":32},"kind":{"Impl":{"id":553}},"from":{"krate":0,"index":17775},"to":{"krate":22,"index":49}},{"span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\io\\cursor.rs","byte_start":623907,"byte_end":623913,"line_start":226,"line_end":226,"column_start":21,"column_end":27},"kind":{"Impl":{"id":554}},"from":{"krate":0,"index":17775},"to":{"krate":22,"index":42}},{"span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\io\\cursor.rs","byte_start":623988,"byte_end":623994,"line_start":230,"line_end":230,"column_start":21,"column_end":27},"kind":{"Impl":{"id":555}},"from":{"krate":0,"index":17775},"to":{"krate":22,"index":42}},{"span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\io\\cursor.rs","byte_start":624072,"byte_end":624078,"line_start":234,"line_end":234,"column_start":21,"column_end":27},"kind":{"Impl":{"id":556}},"from":{"krate":0,"index":17775},"to":{"krate":22,"index":42}},{"span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\io\\cursor.rs","byte_start":624151,"byte_end":624157,"line_start":238,"line_end":238,"column_start":21,"column_end":27},"kind":{"Impl":{"id":557}},"from":{"krate":0,"index":17775},"to":{"krate":22,"index":42}},{"span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\io\\empty.rs","byte_start":625074,"byte_end":625079,"line_start":35,"line_end":35,"column_start":20,"column_end":25},"kind":{"Impl":{"id":558}},"from":{"krate":0,"index":8508},"to":{"krate":22,"index":39}},{"span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\io\\empty.rs","byte_start":625288,"byte_end":625293,"line_start":46,"line_end":46,"column_start":23,"column_end":28},"kind":{"Impl":{"id":559}},"from":{"krate":0,"index":8508},"to":{"krate":22,"index":49}},{"span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\io\\empty.rs","byte_start":625525,"byte_end":625530,"line_start":55,"line_end":55,"column_start":21,"column_end":26},"kind":{"Impl":{"id":560}},"from":{"krate":0,"index":8508},"to":{"krate":2,"index":9685}},{"span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\io\\fill_buf.rs","byte_start":626028,"byte_end":626035,"line_start":14,"line_end":14,"column_start":27,"column_end":34},"kind":{"Impl":{"id":561}},"from":{"krate":0,"index":17803},"to":{"krate":2,"index":3098}},{"span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\io\\fill_buf.rs","byte_start":626090,"byte_end":626097,"line_start":16,"line_end":16,"column_start":44,"column_end":51},"kind":{"Impl":{"id":562}},"from":{"krate":0,"index":17803},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\io\\fill_buf.rs","byte_start":626228,"byte_end":626235,"line_start":22,"line_end":22,"column_start":24,"column_end":31},"kind":{"Impl":{"id":563}},"from":{"krate":0,"index":17803},"to":{"krate":2,"index":13098}},{"span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\io\\flush.rs","byte_start":627805,"byte_end":627810,"line_start":14,"line_end":14,"column_start":35,"column_end":40},"kind":{"Impl":{"id":564}},"from":{"krate":0,"index":17811},"to":{"krate":2,"index":3098}},{"span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\io\\flush.rs","byte_start":627863,"byte_end":627868,"line_start":16,"line_end":16,"column_start":42,"column_end":47},"kind":{"Impl":{"id":565}},"from":{"krate":0,"index":17811},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\io\\flush.rs","byte_start":627981,"byte_end":627986,"line_start":22,"line_end":22,"column_start":20,"column_end":25},"kind":{"Impl":{"id":566}},"from":{"krate":0,"index":17811},"to":{"krate":2,"index":13098}},{"span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\io\\into_sink.rs","byte_start":629008,"byte_end":629016,"line_start":29,"line_end":29,"column_start":40,"column_end":48},"kind":{"Impl":{"id":567}},"from":{"krate":0,"index":17826},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\io\\into_sink.rs","byte_start":629949,"byte_end":629957,"line_start":57,"line_end":57,"column_start":55,"column_end":63},"kind":{"Impl":{"id":568}},"from":{"krate":0,"index":17826},"to":{"krate":19,"index":17}},{"span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\io\\lines.rs","byte_start":631461,"byte_end":631466,"line_start":24,"line_end":24,"column_start":23,"column_end":28},"kind":{"Impl":{"id":569}},"from":{"krate":0,"index":17875},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\io\\lines.rs","byte_start":631629,"byte_end":631634,"line_start":30,"line_end":30,"column_start":34,"column_end":39},"kind":{"Impl":{"id":570}},"from":{"krate":0,"index":17875},"to":{"krate":16,"index":96}},{"span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\io\\read.rs","byte_start":632629,"byte_end":632633,"line_start":15,"line_end":15,"column_start":35,"column_end":39},"kind":{"Impl":{"id":571}},"from":{"krate":0,"index":17923},"to":{"krate":2,"index":3098}},{"span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\io\\read.rs","byte_start":632685,"byte_end":632689,"line_start":17,"line_end":17,"column_start":41,"column_end":45},"kind":{"Impl":{"id":572}},"from":{"krate":0,"index":17923},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\io\\read.rs","byte_start":632854,"byte_end":632858,"line_start":23,"line_end":23,"column_start":48,"column_end":52},"kind":{"Impl":{"id":573}},"from":{"krate":0,"index":17923},"to":{"krate":2,"index":13098}},{"span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\io\\read_vectored.rs","byte_start":633546,"byte_end":633558,"line_start":15,"line_end":15,"column_start":35,"column_end":47},"kind":{"Impl":{"id":574}},"from":{"krate":0,"index":17932},"to":{"krate":2,"index":3098}},{"span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\io\\read_vectored.rs","byte_start":633610,"byte_end":633622,"line_start":17,"line_end":17,"column_start":41,"column_end":53},"kind":{"Impl":{"id":575}},"from":{"krate":0,"index":17932},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\io\\read_vectored.rs","byte_start":633801,"byte_end":633813,"line_start":23,"line_end":23,"column_start":48,"column_end":60},"kind":{"Impl":{"id":576}},"from":{"krate":0,"index":17932},"to":{"krate":2,"index":13098}},{"span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\io\\read_exact.rs","byte_start":634508,"byte_end":634517,"line_start":17,"line_end":17,"column_start":35,"column_end":44},"kind":{"Impl":{"id":577}},"from":{"krate":0,"index":17941},"to":{"krate":2,"index":3098}},{"span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\io\\read_exact.rs","byte_start":634569,"byte_end":634578,"line_start":19,"line_end":19,"column_start":41,"column_end":50},"kind":{"Impl":{"id":578}},"from":{"krate":0,"index":17941},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\io\\read_exact.rs","byte_start":634743,"byte_end":634752,"line_start":25,"line_end":25,"column_start":48,"column_end":57},"kind":{"Impl":{"id":579}},"from":{"krate":0,"index":17941},"to":{"krate":2,"index":13098}},{"span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\io\\read_line.rs","byte_start":635895,"byte_end":635903,"line_start":21,"line_end":21,"column_start":35,"column_end":43},"kind":{"Impl":{"id":580}},"from":{"krate":0,"index":17950},"to":{"krate":2,"index":3098}},{"span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\io\\read_line.rs","byte_start":635958,"byte_end":635966,"line_start":23,"line_end":23,"column_start":44,"column_end":52},"kind":{"Impl":{"id":581}},"from":{"krate":0,"index":17950},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\io\\read_line.rs","byte_start":636935,"byte_end":636943,"line_start":50,"line_end":50,"column_start":51,"column_end":59},"kind":{"Impl":{"id":582}},"from":{"krate":0,"index":17950},"to":{"krate":2,"index":13098}},{"span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\io\\read_to_end.rs","byte_start":637698,"byte_end":637707,"line_start":18,"line_end":18,"column_start":35,"column_end":44},"kind":{"Impl":{"id":583}},"from":{"krate":0,"index":17961},"to":{"krate":2,"index":3098}},{"span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\io\\read_to_end.rs","byte_start":637759,"byte_end":637768,"line_start":20,"line_end":20,"column_start":41,"column_end":50},"kind":{"Impl":{"id":584}},"from":{"krate":0,"index":17961},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\io\\read_to_end.rs","byte_start":638013,"byte_end":638018,"line_start":32,"line_end":32,"column_start":15,"column_end":20},"kind":{"Impl":{"id":585}},"from":{"krate":0,"index":8865},"to":{"krate":2,"index":3300}},{"span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\io\\read_to_end.rs","byte_start":639853,"byte_end":639862,"line_start":81,"line_end":81,"column_start":20,"column_end":29},"kind":{"Impl":{"id":586}},"from":{"krate":0,"index":17961},"to":{"krate":2,"index":13098}},{"span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\io\\read_to_string.rs","byte_start":640735,"byte_end":640747,"line_start":20,"line_end":20,"column_start":35,"column_end":47},"kind":{"Impl":{"id":587}},"from":{"krate":0,"index":17971},"to":{"krate":2,"index":3098}},{"span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\io\\read_to_string.rs","byte_start":640799,"byte_end":640811,"line_start":22,"line_end":22,"column_start":41,"column_end":53},"kind":{"Impl":{"id":588}},"from":{"krate":0,"index":17971},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\io\\read_to_string.rs","byte_start":641740,"byte_end":641752,"line_start":49,"line_end":49,"column_start":20,"column_end":32},"kind":{"Impl":{"id":589}},"from":{"krate":0,"index":17971},"to":{"krate":2,"index":13098}},{"span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\io\\read_until.rs","byte_start":642572,"byte_end":642581,"line_start":19,"line_end":19,"column_start":35,"column_end":44},"kind":{"Impl":{"id":590}},"from":{"krate":0,"index":17982},"to":{"krate":2,"index":3098}},{"span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\io\\read_until.rs","byte_start":642636,"byte_end":642645,"line_start":21,"line_end":21,"column_start":44,"column_end":53},"kind":{"Impl":{"id":591}},"from":{"krate":0,"index":17982},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\io\\read_until.rs","byte_start":643617,"byte_end":643626,"line_start":53,"line_end":53,"column_start":51,"column_end":60},"kind":{"Impl":{"id":592}},"from":{"krate":0,"index":17982},"to":{"krate":2,"index":13098}},{"span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\io\\repeat.rs","byte_start":644784,"byte_end":644790,"line_start":35,"line_end":35,"column_start":20,"column_end":26},"kind":{"Impl":{"id":593}},"from":{"krate":0,"index":9000},"to":{"krate":22,"index":39}},{"span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\io\\repeat.rs","byte_start":645431,"byte_end":645437,"line_start":62,"line_end":62,"column_start":21,"column_end":27},"kind":{"Impl":{"id":594}},"from":{"krate":0,"index":9000},"to":{"krate":2,"index":9685}},{"span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\io\\seek.rs","byte_start":645951,"byte_end":645955,"line_start":15,"line_end":15,"column_start":35,"column_end":39},"kind":{"Impl":{"id":595}},"from":{"krate":0,"index":17993},"to":{"krate":2,"index":3098}},{"span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\io\\seek.rs","byte_start":646007,"byte_end":646011,"line_start":17,"line_end":17,"column_start":41,"column_end":45},"kind":{"Impl":{"id":596}},"from":{"krate":0,"index":17993},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\io\\seek.rs","byte_start":646168,"byte_end":646172,"line_start":23,"line_end":23,"column_start":48,"column_end":52},"kind":{"Impl":{"id":597}},"from":{"krate":0,"index":17993},"to":{"krate":2,"index":13098}},{"span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\io\\sink.rs","byte_start":647301,"byte_end":647305,"line_start":34,"line_end":34,"column_start":21,"column_end":25},"kind":{"Impl":{"id":598}},"from":{"krate":0,"index":9076},"to":{"krate":22,"index":42}},{"span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\io\\sink.rs","byte_start":648023,"byte_end":648027,"line_start":63,"line_end":63,"column_start":21,"column_end":25},"kind":{"Impl":{"id":599}},"from":{"krate":0,"index":9076},"to":{"krate":2,"index":9685}},{"span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\io\\split.rs","byte_start":649044,"byte_end":649052,"line_start":34,"line_end":34,"column_start":16,"column_end":24},"kind":{"Impl":{"id":600}},"from":{"krate":0,"index":18002},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\io\\split.rs","byte_start":649552,"byte_end":649561,"line_start":45,"line_end":45,"column_start":16,"column_end":25},"kind":{"Impl":{"id":601}},"from":{"krate":0,"index":18008},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\io\\split.rs","byte_start":649953,"byte_end":649961,"line_start":54,"line_end":54,"column_start":34,"column_end":42},"kind":{"Impl":{"id":602}},"from":{"krate":0,"index":18002},"to":{"krate":22,"index":39}},{"span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\io\\split.rs","byte_start":650464,"byte_end":650473,"line_start":72,"line_end":72,"column_start":36,"column_end":45},"kind":{"Impl":{"id":603}},"from":{"krate":0,"index":18008},"to":{"krate":22,"index":42}},{"span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\io\\split.rs","byte_start":651488,"byte_end":651500,"line_start":102,"line_end":102,"column_start":24,"column_end":36},"kind":{"Impl":{"id":604}},"from":{"krate":0,"index":9160},"to":{"krate":2,"index":9685}},{"span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\io\\split.rs","byte_start":651664,"byte_end":651676,"line_start":108,"line_end":108,"column_start":26,"column_end":38},"kind":{"Impl":{"id":605}},"from":{"krate":0,"index":9160},"to":{"krate":2,"index":9692}},{"span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\io\\split.rs","byte_start":651910,"byte_end":651922,"line_start":115,"line_end":115,"column_start":47,"column_end":59},"kind":{"Impl":{"id":606}},"from":{"krate":0,"index":9160},"to":{"krate":1,"index":2546}},{"span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\io\\take.rs","byte_start":652395,"byte_end":652399,"line_start":19,"line_end":19,"column_start":20,"column_end":24},"kind":{"Impl":{"id":607}},"from":{"krate":0,"index":18014},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\io\\take.rs","byte_start":654316,"byte_end":654320,"line_start":84,"line_end":84,"column_start":34,"column_end":38},"kind":{"Impl":{"id":608}},"from":{"krate":0,"index":18014},"to":{"krate":22,"index":39}},{"span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\io\\take.rs","byte_start":654830,"byte_end":654834,"line_start":103,"line_end":103,"column_start":40,"column_end":44},"kind":{"Impl":{"id":609}},"from":{"krate":0,"index":18014},"to":{"krate":22,"index":49}},{"span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\io\\window.rs","byte_start":656677,"byte_end":656683,"line_start":26,"line_end":26,"column_start":22,"column_end":28},"kind":{"Impl":{"id":610}},"from":{"krate":0,"index":18058},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\io\\window.rs","byte_start":658753,"byte_end":658759,"line_start":94,"line_end":94,"column_start":38,"column_end":44},"kind":{"Impl":{"id":611}},"from":{"krate":0,"index":18058},"to":{"krate":2,"index":2954}},{"span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\io\\window.rs","byte_start":658906,"byte_end":658912,"line_start":100,"line_end":100,"column_start":38,"column_end":44},"kind":{"Impl":{"id":612}},"from":{"krate":0,"index":18058},"to":{"krate":2,"index":2957}},{"span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\io\\write.rs","byte_start":659433,"byte_end":659438,"line_start":15,"line_end":15,"column_start":35,"column_end":40},"kind":{"Impl":{"id":613}},"from":{"krate":0,"index":18065},"to":{"krate":2,"index":3098}},{"span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\io\\write.rs","byte_start":659491,"byte_end":659496,"line_start":17,"line_end":17,"column_start":42,"column_end":47},"kind":{"Impl":{"id":614}},"from":{"krate":0,"index":18065},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\io\\write.rs","byte_start":659658,"byte_end":659663,"line_start":23,"line_end":23,"column_start":49,"column_end":54},"kind":{"Impl":{"id":615}},"from":{"krate":0,"index":18065},"to":{"krate":2,"index":13098}},{"span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\io\\write_vectored.rs","byte_start":660347,"byte_end":660360,"line_start":15,"line_end":15,"column_start":35,"column_end":48},"kind":{"Impl":{"id":616}},"from":{"krate":0,"index":18074},"to":{"krate":2,"index":3098}},{"span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\io\\write_vectored.rs","byte_start":660413,"byte_end":660426,"line_start":17,"line_end":17,"column_start":42,"column_end":55},"kind":{"Impl":{"id":617}},"from":{"krate":0,"index":18074},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\io\\write_vectored.rs","byte_start":660599,"byte_end":660612,"line_start":23,"line_end":23,"column_start":49,"column_end":62},"kind":{"Impl":{"id":618}},"from":{"krate":0,"index":18074},"to":{"krate":2,"index":13098}},{"span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\io\\write_all.rs","byte_start":661304,"byte_end":661312,"line_start":17,"line_end":17,"column_start":35,"column_end":43},"kind":{"Impl":{"id":619}},"from":{"krate":0,"index":18083},"to":{"krate":2,"index":3098}},{"span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\io\\write_all.rs","byte_start":661365,"byte_end":661373,"line_start":19,"line_end":19,"column_start":42,"column_end":50},"kind":{"Impl":{"id":620}},"from":{"krate":0,"index":18083},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\io\\write_all.rs","byte_start":661535,"byte_end":661543,"line_start":25,"line_end":25,"column_start":49,"column_end":57},"kind":{"Impl":{"id":621}},"from":{"krate":0,"index":18083},"to":{"krate":2,"index":13098}},{"span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\io\\mod.rs","byte_start":556843,"byte_end":556852,"line_start":145,"line_end":145,"column_start":25,"column_end":34},"kind":"SuperTrait","from":{"krate":22,"index":39},"to":{"krate":0,"index":9368}},{"span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\io\\mod.rs","byte_start":565100,"byte_end":565101,"line_start":395,"line_end":395,"column_start":46,"column_end":47},"kind":{"Impl":{"id":622}},"from":{"krate":0,"index":9384},"to":{"krate":0,"index":9368}},{"span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\io\\mod.rs","byte_start":565204,"byte_end":565214,"line_start":398,"line_end":398,"column_start":26,"column_end":36},"kind":"SuperTrait","from":{"krate":22,"index":42},"to":{"krate":0,"index":9385}},{"span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\io\\mod.rs","byte_start":571556,"byte_end":571557,"line_start":589,"line_end":589,"column_start":48,"column_end":49},"kind":{"Impl":{"id":623}},"from":{"krate":0,"index":9397},"to":{"krate":0,"index":9385}},{"span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\io\\mod.rs","byte_start":571658,"byte_end":571667,"line_start":592,"line_end":592,"column_start":25,"column_end":34},"kind":"SuperTrait","from":{"krate":22,"index":47},"to":{"krate":0,"index":9398}},{"span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\io\\mod.rs","byte_start":572444,"byte_end":572445,"line_start":617,"line_end":617,"column_start":46,"column_end":47},"kind":{"Impl":{"id":624}},"from":{"krate":0,"index":9402},"to":{"krate":0,"index":9398}},{"span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\io\\mod.rs","byte_start":572552,"byte_end":572564,"line_start":620,"line_end":620,"column_start":28,"column_end":40},"kind":"SuperTrait","from":{"krate":22,"index":49},"to":{"krate":0,"index":9403}},{"span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\io\\mod.rs","byte_start":579924,"byte_end":579925,"line_start":821,"line_end":821,"column_start":52,"column_end":53},"kind":{"Impl":{"id":625}},"from":{"krate":0,"index":9412},"to":{"krate":0,"index":9403}},{"span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\lock\\mutex.rs","byte_start":663871,"byte_end":663876,"line_start":26,"line_end":26,"column_start":32,"column_end":37},"kind":{"Impl":{"id":626}},"from":{"krate":0,"index":9497},"to":{"krate":2,"index":9685}},{"span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\lock\\mutex.rs","byte_start":664209,"byte_end":664214,"line_start":36,"line_end":36,"column_start":21,"column_end":26},"kind":{"Impl":{"id":627}},"from":{"krate":0,"index":9497},"to":{"krate":2,"index":2963}},{"span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\lock\\mutex.rs","byte_start":664307,"byte_end":664312,"line_start":42,"line_end":42,"column_start":30,"column_end":35},"kind":{"Impl":{"id":628}},"from":{"krate":0,"index":9497},"to":{"krate":2,"index":3035}},{"span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\lock\\mutex.rs","byte_start":664445,"byte_end":664451,"line_start":53,"line_end":53,"column_start":6,"column_end":12},"kind":{"Impl":{"id":629}},"from":{"krate":0,"index":9511},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\lock\\mutex.rs","byte_start":664897,"byte_end":664902,"line_start":72,"line_end":72,"column_start":9,"column_end":14},"kind":{"Impl":{"id":630}},"from":{"krate":0,"index":9497},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\lock\\mutex.rs","byte_start":665473,"byte_end":665478,"line_start":97,"line_end":97,"column_start":17,"column_end":22},"kind":{"Impl":{"id":631}},"from":{"krate":0,"index":9497},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\lock\\mutex.rs","byte_start":668593,"byte_end":668608,"line_start":185,"line_end":185,"column_start":32,"column_end":47},"kind":{"Impl":{"id":632}},"from":{"krate":0,"index":9534},"to":{"krate":2,"index":9685}},{"span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\lock\\mutex.rs","byte_start":669039,"byte_end":669054,"line_start":198,"line_end":198,"column_start":33,"column_end":48},"kind":{"Impl":{"id":633}},"from":{"krate":0,"index":9534},"to":{"krate":16,"index":27}},{"span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\lock\\mutex.rs","byte_start":669171,"byte_end":669186,"line_start":204,"line_end":204,"column_start":32,"column_end":47},"kind":{"Impl":{"id":634}},"from":{"krate":0,"index":9534},"to":{"krate":2,"index":13098}},{"span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\lock\\mutex.rs","byte_start":670415,"byte_end":670430,"line_start":240,"line_end":240,"column_start":26,"column_end":41},"kind":{"Impl":{"id":635}},"from":{"krate":0,"index":9534},"to":{"krate":2,"index":3300}},{"span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\lock\\mutex.rs","byte_start":671032,"byte_end":671042,"line_start":259,"line_end":259,"column_start":21,"column_end":31},"kind":{"Impl":{"id":636}},"from":{"krate":0,"index":9553},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\lock\\mutex.rs","byte_start":672054,"byte_end":672064,"line_start":289,"line_end":289,"column_start":45,"column_end":55},"kind":{"Impl":{"id":637}},"from":{"krate":0,"index":9553},"to":{"krate":2,"index":9685}},{"span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\lock\\mutex.rs","byte_start":672270,"byte_end":672280,"line_start":295,"line_end":295,"column_start":26,"column_end":36},"kind":{"Impl":{"id":638}},"from":{"krate":0,"index":9553},"to":{"krate":2,"index":3300}},{"span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\lock\\mutex.rs","byte_start":672378,"byte_end":672388,"line_start":301,"line_end":301,"column_start":27,"column_end":37},"kind":{"Impl":{"id":639}},"from":{"krate":0,"index":9553},"to":{"krate":2,"index":3276}},{"span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\lock\\mutex.rs","byte_start":672529,"byte_end":672539,"line_start":308,"line_end":308,"column_start":30,"column_end":40},"kind":{"Impl":{"id":640}},"from":{"krate":0,"index":9553},"to":{"krate":2,"index":3289}},{"span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\lock\\mutex.rs","byte_start":672990,"byte_end":673006,"line_start":322,"line_end":322,"column_start":32,"column_end":48},"kind":{"Impl":{"id":641}},"from":{"krate":0,"index":9576},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\lock\\mutex.rs","byte_start":674136,"byte_end":674152,"line_start":353,"line_end":353,"column_start":56,"column_end":72},"kind":{"Impl":{"id":642}},"from":{"krate":0,"index":9576},"to":{"krate":2,"index":9685}},{"span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\lock\\mutex.rs","byte_start":674417,"byte_end":674433,"line_start":362,"line_end":362,"column_start":37,"column_end":53},"kind":{"Impl":{"id":643}},"from":{"krate":0,"index":9576},"to":{"krate":2,"index":3300}},{"span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\lock\\mutex.rs","byte_start":674545,"byte_end":674561,"line_start":368,"line_end":368,"column_start":38,"column_end":54},"kind":{"Impl":{"id":644}},"from":{"krate":0,"index":9576},"to":{"krate":2,"index":3276}},{"span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\lock\\mutex.rs","byte_start":674704,"byte_end":674720,"line_start":375,"line_end":375,"column_start":41,"column_end":57},"kind":{"Impl":{"id":645}},"from":{"krate":0,"index":9576},"to":{"krate":2,"index":3289}},{"span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\lock\\mutex.rs","byte_start":674997,"byte_end":675002,"line_start":383,"line_end":383,"column_start":40,"column_end":45},"kind":{"Impl":{"id":646}},"from":{"krate":0,"index":9497},"to":{"krate":2,"index":3057}},{"span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\lock\\mutex.rs","byte_start":675048,"byte_end":675053,"line_start":384,"line_end":384,"column_start":40,"column_end":45},"kind":{"Impl":{"id":647}},"from":{"krate":0,"index":9497},"to":{"krate":2,"index":3069}},{"span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\lock\\mutex.rs","byte_start":675220,"byte_end":675235,"line_start":388,"line_end":388,"column_start":40,"column_end":55},"kind":{"Impl":{"id":648}},"from":{"krate":0,"index":9534},"to":{"krate":2,"index":3057}},{"span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\lock\\mutex.rs","byte_start":675339,"byte_end":675354,"line_start":390,"line_end":390,"column_start":33,"column_end":48},"kind":{"Impl":{"id":649}},"from":{"krate":0,"index":9534},"to":{"krate":2,"index":3069}},{"span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\lock\\mutex.rs","byte_start":675558,"byte_end":675568,"line_start":394,"line_end":394,"column_start":40,"column_end":50},"kind":{"Impl":{"id":650}},"from":{"krate":0,"index":9553},"to":{"krate":2,"index":3057}},{"span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\lock\\mutex.rs","byte_start":675618,"byte_end":675628,"line_start":395,"line_end":395,"column_start":40,"column_end":50},"kind":{"Impl":{"id":651}},"from":{"krate":0,"index":9553},"to":{"krate":2,"index":3069}},{"span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\lock\\mutex.rs","byte_start":675696,"byte_end":675712,"line_start":396,"line_end":396,"column_start":58,"column_end":74},"kind":{"Impl":{"id":652}},"from":{"krate":0,"index":9576},"to":{"krate":2,"index":3057}},{"span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\lock\\mutex.rs","byte_start":675783,"byte_end":675799,"line_start":397,"line_end":397,"column_start":58,"column_end":74},"kind":{"Impl":{"id":653}},"from":{"krate":0,"index":9576},"to":{"krate":2,"index":3069}},{"span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\lock\\bilock.rs","byte_start":677803,"byte_end":677808,"line_start":48,"line_end":48,"column_start":31,"column_end":36},"kind":{"Impl":{"id":654}},"from":{"krate":0,"index":18098},"to":{"krate":2,"index":3057}},{"span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\lock\\bilock.rs","byte_start":677845,"byte_end":677850,"line_start":49,"line_end":49,"column_start":31,"column_end":36},"kind":{"Impl":{"id":655}},"from":{"krate":0,"index":18098},"to":{"krate":2,"index":3069}},{"span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\lock\\bilock.rs","byte_start":677866,"byte_end":677872,"line_start":51,"line_end":51,"column_start":9,"column_end":15},"kind":{"Impl":{"id":656}},"from":{"krate":0,"index":18092},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\lock\\bilock.rs","byte_start":683492,"byte_end":683497,"line_start":184,"line_end":184,"column_start":16,"column_end":21},"kind":{"Impl":{"id":657}},"from":{"krate":0,"index":18098},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\lock\\bilock.rs","byte_start":683619,"byte_end":683624,"line_start":190,"line_end":190,"column_start":18,"column_end":23},"kind":{"Impl":{"id":658}},"from":{"krate":0,"index":18098},"to":{"krate":2,"index":3300}},{"span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\lock\\bilock.rs","byte_start":683952,"byte_end":683964,"line_start":201,"line_end":201,"column_start":24,"column_end":36},"kind":{"Impl":{"id":659}},"from":{"krate":0,"index":9694},"to":{"krate":2,"index":9685}},{"span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\lock\\bilock.rs","byte_start":684128,"byte_end":684140,"line_start":207,"line_end":207,"column_start":26,"column_end":38},"kind":{"Impl":{"id":660}},"from":{"krate":0,"index":9694},"to":{"krate":2,"index":9692}},{"span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\lock\\bilock.rs","byte_start":684361,"byte_end":684373,"line_start":214,"line_end":214,"column_start":47,"column_end":59},"kind":{"Impl":{"id":661}},"from":{"krate":0,"index":9694},"to":{"krate":1,"index":2546}},{"span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\lock\\bilock.rs","byte_start":684755,"byte_end":684766,"line_start":227,"line_end":227,"column_start":19,"column_end":30},"kind":{"Impl":{"id":662}},"from":{"krate":0,"index":18105},"to":{"krate":2,"index":3276}},{"span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\lock\\bilock.rs","byte_start":684929,"byte_end":684940,"line_start":234,"line_end":234,"column_start":29,"column_end":40},"kind":{"Impl":{"id":663}},"from":{"krate":0,"index":18105},"to":{"krate":2,"index":3289}},{"span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\lock\\bilock.rs","byte_start":685078,"byte_end":685089,"line_start":240,"line_end":240,"column_start":9,"column_end":20},"kind":{"Impl":{"id":664}},"from":{"krate":0,"index":18105},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\lock\\bilock.rs","byte_start":685441,"byte_end":685452,"line_start":249,"line_end":249,"column_start":18,"column_end":29},"kind":{"Impl":{"id":665}},"from":{"krate":0,"index":18105},"to":{"krate":2,"index":3300}},{"span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\abortable.rs","byte_start":686765,"byte_end":686774,"line_start":22,"line_end":22,"column_start":9,"column_end":18},"kind":{"Impl":{"id":666}},"from":{"krate":0,"index":18113},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\abortable.rs","byte_start":689047,"byte_end":689058,"line_start":87,"line_end":87,"column_start":6,"column_end":17},"kind":{"Impl":{"id":667}},"from":{"krate":0,"index":18160},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\abortable.rs","byte_start":689841,"byte_end":689848,"line_start":112,"line_end":112,"column_start":23,"column_end":30},"kind":{"Impl":{"id":668}},"from":{"krate":0,"index":18171},"to":{"krate":2,"index":9692}},{"span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\abortable.rs","byte_start":690031,"byte_end":690038,"line_start":119,"line_end":119,"column_start":28,"column_end":35},"kind":{"Impl":{"id":669}},"from":{"krate":0,"index":18171},"to":{"krate":1,"index":2546}},{"span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\abortable.rs","byte_start":690051,"byte_end":690060,"line_start":121,"line_end":121,"column_start":9,"column_end":18},"kind":{"Impl":{"id":670}},"from":{"krate":0,"index":18113},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\abortable.rs","byte_start":691049,"byte_end":691058,"line_start":152,"line_end":152,"column_start":22,"column_end":31},"kind":{"Impl":{"id":671}},"from":{"krate":0,"index":18113},"to":{"krate":2,"index":13098}},{"span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\abortable.rs","byte_start":691297,"byte_end":691306,"line_start":163,"line_end":163,"column_start":21,"column_end":30},"kind":{"Impl":{"id":672}},"from":{"krate":0,"index":18113},"to":{"krate":16,"index":96}},{"span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\abortable.rs","byte_start":691565,"byte_end":691576,"line_start":174,"line_end":174,"column_start":6,"column_end":17},"kind":{"Impl":{"id":673}},"from":{"krate":0,"index":18160},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\fns.rs","byte_start":692248,"byte_end":692249,"line_start":9,"line_end":9,"column_start":30,"column_end":31},"kind":{"Impl":{"id":674}},"from":{"krate":0,"index":9801},"to":{"krate":0,"index":9796}},{"span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\fns.rs","byte_start":692388,"byte_end":692395,"line_start":19,"line_end":19,"column_start":22,"column_end":29},"kind":"SuperTrait","from":{"krate":0,"index":9796},"to":{"krate":0,"index":9806}},{"span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\fns.rs","byte_start":692484,"byte_end":692485,"line_start":23,"line_end":23,"column_start":29,"column_end":30},"kind":{"Impl":{"id":675}},"from":{"krate":0,"index":9810},"to":{"krate":0,"index":9806}},{"span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\fns.rs","byte_start":692671,"byte_end":692677,"line_start":34,"line_end":34,"column_start":19,"column_end":25},"kind":"SuperTrait","from":{"krate":0,"index":9806},"to":{"krate":0,"index":9814}},{"span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\fns.rs","byte_start":692755,"byte_end":692756,"line_start":38,"line_end":38,"column_start":26,"column_end":27},"kind":{"Impl":{"id":676}},"from":{"krate":0,"index":9818},"to":{"krate":0,"index":9814}},{"span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\fns.rs","byte_start":693772,"byte_end":693776,"line_start":76,"line_end":76,"column_start":21,"column_end":25},"kind":{"Impl":{"id":677}},"from":{"krate":0,"index":9823},"to":{"krate":2,"index":3035}},{"span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\fns.rs","byte_start":693870,"byte_end":693874,"line_start":82,"line_end":82,"column_start":27,"column_end":31},"kind":{"Impl":{"id":678}},"from":{"krate":0,"index":9823},"to":{"krate":0,"index":9796}},{"span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\fns.rs","byte_start":694133,"byte_end":694140,"line_start":94,"line_end":94,"column_start":30,"column_end":37},"kind":{"Impl":{"id":684}},"from":{"krate":0,"index":18202},"to":{"krate":0,"index":9796}},{"span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\fns.rs","byte_start":694363,"byte_end":694370,"line_start":104,"line_end":104,"column_start":29,"column_end":36},"kind":{"Impl":{"id":685}},"from":{"krate":0,"index":18202},"to":{"krate":0,"index":9806}},{"span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\fns.rs","byte_start":694561,"byte_end":694568,"line_start":113,"line_end":113,"column_start":26,"column_end":33},"kind":{"Impl":{"id":686}},"from":{"krate":0,"index":18202},"to":{"krate":0,"index":9814}},{"span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\fns.rs","byte_start":694873,"byte_end":694886,"line_start":129,"line_end":129,"column_start":35,"column_end":48},"kind":{"Impl":{"id":687}},"from":{"krate":0,"index":18223},"to":{"krate":0,"index":9796}},{"span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\fns.rs","byte_start":695303,"byte_end":695312,"line_start":144,"line_end":144,"column_start":27,"column_end":36},"kind":{"Impl":{"id":693}},"from":{"krate":0,"index":18239},"to":{"krate":0,"index":9796}},{"span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\fns.rs","byte_start":695596,"byte_end":695605,"line_start":155,"line_end":155,"column_start":26,"column_end":35},"kind":{"Impl":{"id":694}},"from":{"krate":0,"index":18239},"to":{"krate":0,"index":9806}},{"span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\fns.rs","byte_start":695867,"byte_end":695876,"line_start":165,"line_end":165,"column_start":23,"column_end":32},"kind":{"Impl":{"id":695}},"from":{"krate":0,"index":18239},"to":{"krate":0,"index":9814}},{"span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\fns.rs","byte_start":696198,"byte_end":696205,"line_start":181,"line_end":181,"column_start":41,"column_end":48},"kind":{"Impl":{"id":696}},"from":{"krate":0,"index":18254},"to":{"krate":0,"index":9796}},{"span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\fns.rs","byte_start":696424,"byte_end":696431,"line_start":190,"line_end":190,"column_start":40,"column_end":47},"kind":{"Impl":{"id":697}},"from":{"krate":0,"index":18254},"to":{"krate":0,"index":9806}},{"span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\fns.rs","byte_start":696609,"byte_end":696616,"line_start":198,"line_end":198,"column_start":37,"column_end":44},"kind":{"Impl":{"id":698}},"from":{"krate":0,"index":18254},"to":{"krate":0,"index":9814}},{"span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\fns.rs","byte_start":696917,"byte_end":696925,"line_start":213,"line_end":213,"column_start":41,"column_end":49},"kind":{"Impl":{"id":699}},"from":{"krate":0,"index":18269},"to":{"krate":0,"index":9796}},{"span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\fns.rs","byte_start":697148,"byte_end":697156,"line_start":222,"line_end":222,"column_start":40,"column_end":48},"kind":{"Impl":{"id":700}},"from":{"krate":0,"index":18269},"to":{"krate":0,"index":9806}},{"span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\fns.rs","byte_start":697338,"byte_end":697346,"line_start":230,"line_end":230,"column_start":37,"column_end":45},"kind":{"Impl":{"id":701}},"from":{"krate":0,"index":18269},"to":{"krate":0,"index":9814}},{"span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\fns.rs","byte_start":697656,"byte_end":697667,"line_start":245,"line_end":245,"column_start":49,"column_end":60},"kind":{"Impl":{"id":702}},"from":{"krate":0,"index":18284},"to":{"krate":0,"index":9796}},{"span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\fns.rs","byte_start":697927,"byte_end":697938,"line_start":256,"line_end":256,"column_start":48,"column_end":59},"kind":{"Impl":{"id":703}},"from":{"krate":0,"index":18284},"to":{"krate":0,"index":9806}},{"span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\fns.rs","byte_start":698175,"byte_end":698186,"line_start":266,"line_end":266,"column_start":45,"column_end":56},"kind":{"Impl":{"id":704}},"from":{"krate":0,"index":18284},"to":{"krate":0,"index":9814}},{"span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\fns.rs","byte_start":698553,"byte_end":698565,"line_start":283,"line_end":283,"column_start":49,"column_end":61},"kind":{"Impl":{"id":705}},"from":{"krate":0,"index":18296},"to":{"krate":0,"index":9796}},{"span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\fns.rs","byte_start":698826,"byte_end":698838,"line_start":294,"line_end":294,"column_start":48,"column_end":60},"kind":{"Impl":{"id":706}},"from":{"krate":0,"index":18296},"to":{"krate":0,"index":9806}},{"span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\fns.rs","byte_start":699076,"byte_end":699088,"line_start":304,"line_end":304,"column_start":45,"column_end":57},"kind":{"Impl":{"id":707}},"from":{"krate":0,"index":18296},"to":{"krate":0,"index":9814}},{"span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\fns.rs","byte_start":699707,"byte_end":699721,"line_start":326,"line_end":326,"column_start":41,"column_end":55},"kind":{"Impl":{"id":708}},"from":{"krate":0,"index":18308},"to":{"krate":0,"index":9796}},{"span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\fns.rs","byte_start":699944,"byte_end":699958,"line_start":335,"line_end":335,"column_start":40,"column_end":54},"kind":{"Impl":{"id":709}},"from":{"krate":0,"index":18308},"to":{"krate":0,"index":9806}},{"span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\fns.rs","byte_start":700159,"byte_end":700173,"line_start":343,"line_end":343,"column_start":37,"column_end":51},"kind":{"Impl":{"id":710}},"from":{"krate":0,"index":18308},"to":{"krate":0,"index":9814}},{"span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\fns.rs","byte_start":700479,"byte_end":700485,"line_start":357,"line_end":357,"column_start":21,"column_end":27},"kind":{"Impl":{"id":711}},"from":{"krate":0,"index":9987},"to":{"krate":2,"index":3035}},{"span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\fns.rs","byte_start":700578,"byte_end":700584,"line_start":362,"line_end":362,"column_start":27,"column_end":33},"kind":{"Impl":{"id":712}},"from":{"krate":0,"index":9987},"to":{"krate":0,"index":9796}},{"span":{"file_name":"C:\\Users\\admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.21\\src\\unfold_state.rs","byte_start":701189,"byte_end":701200,"line_start":22,"line_end":22,"column_start":12,"column_end":23},"kind":{"Impl":{"id":718}},"from":{"krate":0,"index":18341},"to":{"krate":4294967295,"index":4294967295}}]}